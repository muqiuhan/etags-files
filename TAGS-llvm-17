
/usr/include/llvm/ADT/ADL.h,375
#define LLVM_ADT_ADL_H10,393
using std::end;32,893
    -> decltype(36,977
using std::swap;40,1075
constexpr void swap_impl(43,1115
using std::size;49,1360
    -> decltype(53,1446
    -> decltype(63,1771
    -> decltype(71,2096
constexpr void adl_swap(78,2362
    -> decltype(87,2746
namespace detail 91,2880
using IterOfRange 94,2927
using ValueOfRange 97,3022

/usr/include/llvm/ADT/APInt.h,6564
#define LLVM_ADT_APINT_H16,613
class [[nodiscard]] APInt 76,3236
  typedef uint64_t WordType;78,3272
  enum : unsigned 81,3369
    APINT_WORD_SIZE 83,3418
    APINT_BITS_PER_WORD 85,3482
  enum class Rounding 88,3541
    DOWN,89,3565
    TOWARD_ZERO,90,3575
    UP,91,3592
  APInt(109,4210
  APInt(126,4784
  APInt(135,5221
  APInt(148,5880
  explicit APInt(151,6011
  APInt(154,6070
  APInt(162,6239
  ~APInt(168,6371
  static APInt getZero(178,6537
  static APInt getZeroWidth(181,6647
  static APInt getMaxValue(184,6768
  static APInt getSignedMaxValue(187,6913
  static APInt getMinValue(194,7124
  static APInt getSignedMinValue(197,7267
  static APInt getSignMask(207,7582
  static APInt getAllOnes(212,7737
  static APInt getOneBitSet(217,7897
  static APInt getBitsSet(236,8647
  static APInt getBitsSetWithWrap(248,9141
  static APInt getBitsSetFrom(264,9783
  static APInt getHighBitsSet(274,10120
  static APInt getLowBitsSet(284,10467
  static APInt getSplat(291,10679
  bool isSingleWord(300,10917
  bool isNegative(307,11172
  bool isNonNegative(312,11370
  bool isSignBitSet(319,11632
  bool isSignBitClear(326,11907
  bool isStrictlyPositive(334,12180
  bool isNonPositive(339,12373
  bool isOneBitSet(344,12577
  bool isAllOnes(349,12745
  bool isZero(358,13031
  bool isOne(367,13268
  bool isMaxValue(377,13577
  bool isMaxSignedValue(383,13800
  bool isMinValue(395,14241
  bool isMinSignedValue(401,14462
  bool isIntN(410,14784
  bool isSignedIntN(413,14912
  bool isPowerOf2(418,15137
  bool isNegatedPowerOf2(427,15418
  bool isAligned(439,15809
  bool getBoolValue(449,16153
  uint64_t getLimitedValue(453,16361
  bool isSplat(462,16698
  bool isMask(479,17468
  bool isShiftedMask(488,17785
  bool isShiftedMask(500,18306
  APInt getHiBits(519,19002
  friend hash_code hash_value(542,19786
  const uint64_t *getRawData(getRawData547,20005
  APInt operator*operator790,26357
  APInt ashr(805,26839
  void ashrInPlace(812,27009
  APInt lshr(829,27517
  void lshrInPlace(836,27684
  APInt shl(851,28027
  APInt relativeLShr(858,28160
  APInt relativeLShl(863,28321
  APInt relativeAShr(868,28453
  APInt relativeAShl(873,28617
  APInt rotl(878,28743
  void ashrInPlace(893,29130
  APInt lshr(898,29266
  void lshrInPlace(905,29437
  APInt shl(910,29555
  APInt rotl(917,29689
  APInt udiv(940,30624
  bool eq(1051,34694
  bool ne(1075,35401
  bool ult(1083,35712
  bool ult(1091,36014
  bool slt(1102,36426
  bool slt(1110,36727
  bool ule(1122,37142
  bool ule(1130,37454
  bool sle(1138,37753
  bool sle(1146,38064
  bool ugt(1154,38370
  bool ugt(1162,38671
  bool sgt(1173,39093
  bool sgt(1181,39387
  bool uge(1193,39809
  bool uge(1201,40119
  bool sge(1209,40424
  bool sge(1217,40727
  bool intersects(1221,40904
  bool isSubsetOf(1229,41204
  APInt trunc(1244,41636
  void setBit(1302,43700
  void setSignBit(1312,43980
  void setBitVal(1315,44067
  void setBitsWithWrap(1326,44459
  void setBits(1339,44892
  void setBitsFrom(1358,45511
  void setLowBits(1361,45618
  void setHighBits(1364,45716
  void clearAllBits(1369,45834
  void clearBit(1379,46076
  void clearLowBits(1389,46365
  void clearSignBit(1396,46580
  void flipAllBits(1399,46677
  void flipBit(1412,46983
  void negate(1415,47056
  void insertBits(1421,47181
  void insertBits(1422,47244
  APInt extractBits(1425,47403
  unsigned getNumWords(1440,47893
  static unsigned getNumWords(1448,48159
  unsigned getActiveBits(1457,48559
  unsigned getActiveWords(1463,48803
  unsigned getSignificantBits(1476,49455
  uint64_t getZExtValue(1485,49786
  std::optional<uint64_t> tryZExtValue(1497,50208
  int64_t getSExtValue(1507,50633
  std::optional<int64_t> trySExtValue(1519,51090
  unsigned countl_zero(1542,52076
  unsigned countLeadingZeros(1550,52298
  unsigned countl_one(1559,52701
  unsigned countLeadingOnes(1568,52941
  unsigned getNumSignBits(1572,53097
  unsigned countr_zero(1583,53545
  unsigned countTrailingZeros(1591,53781
  unsigned countr_one(1600,54199
  unsigned countTrailingOnes(1606,54338
  unsigned popcount(1614,54645
  void toStringUnsigned(1633,55331
  void toStringSigned(1639,55590
  double roundToDouble(1654,56070
  double signedRoundToDouble(1657,56187
  double bitsToDouble(1664,56515
  float bitsToFloat(1671,56848
  static APInt doubleToBits(1679,57120
  static APInt floatToBits(1687,57404
  unsigned logBase2(1696,57625
  unsigned ceilLogBase2(1699,57736
  int32_t exactLogBase2(1718,58276
  APInt abs(1730,58648
  static WordType tcIncrement(1844,63792
  static WordType tcDecrement(1849,63957
  bool needsCleanup(1861,64307
    uint64_t VAL;1867,64513
    uint64_t *pVal;pVal1868,64582
  } U;1869,64649
  APInt(1879,64965
  static unsigned whichWord(1884,65150
  static unsigned whichBit(1889,65323
  static uint64_t maskBit(1899,65707
  APInt &clearUnusedBits(clearUnusedBits1909,66090
  uint64_t getWord(1927,66640
inline bool operator==(operator==2034,70523
inline bool operator!=(operator!=2036,70598
inline APInt operator~(2041,70778
inline APInt operator&(2046,70846
inline APInt operator&(2051,70921
inline APInt operator&(2056,71009
inline APInt operator&(2061,71084
inline APInt operator|(2066,71159
inline APInt operator|(2071,71234
inline APInt operator|(2076,71322
inline APInt operator|(2081,71397
inline APInt operator^(2086,71472
inline APInt operator^(2091,71547
inline APInt operator^(2096,71635
inline APInt operator^(2101,71710
inline raw_ostream &operator<<(operator<<2106,71785
inline APInt operator-(2111,71888
inline APInt operator+(2116,71951
inline APInt operator+(2121,72026
inline APInt operator+(2126,72114
inline APInt operator+(2131,72189
inline APInt operator-(2136,72264
inline APInt operator-(2141,72339
inline APInt operator-(2147,72441
inline APInt operator-(2152,72516
inline APInt operator*(2158,72605
inline APInt operator*(2163,72680
namespace APIntOps 2168,72755
inline const APInt &smin(smin2171,72842
inline const APInt &smax(smax2176,72995
inline const APInt &umin(umin2181,73151
inline const APInt &umax(umax2186,73306
inline double RoundAPIntToDouble(2201,73776
inline double RoundSignedAPIntToDouble(2208,73984
inline float RoundAPIntToFloat(2213,74135
inline float RoundSignedAPIntToFloat(2220,74351
inline APInt RoundFloatToAPInt(2232,74725
  static inline APInt getEmptyKey(2312,78656
  static inline APInt getTombstoneKey(2318,78759
  static bool isEqual(2326,78917

/usr/include/llvm/ADT/APSInt.h,2806
#define LLVM_ADT_APSINT_H16,636
class [[nodiscard]] APSInt 23,772
  explicit APSInt(31,1017
  explicit APSInt(34,1133
  bool isNegative(49,1704
  bool isNonNegative(54,1911
  bool isStrictlyPositive(62,2184
  APSInt &operator=(operator=64,2260
  APSInt &operator=(operator=70,2386
  bool isSigned(77,2533
  bool isUnsigned(78,2581
  void setIsUnsigned(79,2630
  void setIsSigned(80,2683
  void toString(83,2791
  using APInt::toString;86,2913
  bool isRepresentableByInt64(89,2992
  int64_t getExtValue(98,3431
  std::optional<int64_t> tryExtValue(103,3594
  APSInt trunc(108,3774
  APSInt extend(112,3870
  APSInt extOrTrunc(119,4036
  const APSInt &operator%=(operator%=126,4220
  const APSInt &operator/=(operator/=134,4437
  APSInt operator%(142,4654
  APSInt operator/(146,4848
  APSInt operator>>(151,5043
  APSInt &operator>>=(operator>>=154,5165
  APSInt relativeShr(161,5302
  inline bool operator<(166,5464
  inline bool operator>(170,5632
  inline bool operator<=(operator<=174,5800
  inline bool operator>=(operator>=178,5969
  inline bool operator==(operator==182,6138
  inline bool operator!=(operator!=186,6282
  bool operator==(operator==188,6363
  bool operator!=(operator!=191,6454
  bool operator<=(operator<=194,6545
  bool operator>=(operator>=197,6636
  bool operator<(200,6727
  bool operator>(203,6816
  APSInt operator<<(210,7010
  APSInt &operator<<=(operator<<=213,7131
  APSInt relativeShl(217,7232
  APSInt &operator++(operator++222,7394
  APSInt &operator--(operator--226,7478
  APSInt operator++(230,7562
  APSInt operator--(233,7655
  APSInt operator-(236,7748
  APSInt &operator+=(operator+=239,7848
  APSInt &operator-=(operator-=244,8020
  APSInt &operator*=(operator*=249,8192
  APSInt &operator&=(operator&=254,8364
  APSInt &operator|=(operator|=259,8536
  APSInt &operator^=(operator^=264,8708
  APSInt operator&(270,8881
  APSInt operator|(275,9072
  APSInt operator^(280,9263
  APSInt operator*(285,9454
  APSInt operator+(289,9644
  APSInt operator-(293,9834
  APSInt operator~(297,10024
  static APSInt getMaxValue(303,10235
  static APSInt getMinValue(311,10563
  static bool isSameValue(319,10874
  static int compareValues(324,11026
  static APSInt get(349,11899
  static APSInt getUnsigned(350,11970
inline bool operator==(operator==357,12199
inline bool operator!=(operator!=358,12273
inline bool operator<=(operator<=359,12347
inline bool operator>=(operator>=360,12421
inline bool operator<(361,12495
inline bool operator>(362,12567
inline raw_ostream &operator<<(operator<<364,12640
  static inline APSInt getEmptyKey(371,12871
  static inline APSInt getTombstoneKey(375,12976
  static unsigned getHashValue(379,13089
  static bool isEqual(383,13203

/usr/include/llvm/ADT/AddressRanges.h,1111
#define LLVM_ADT_ADDRESSRANGES_H10,403
class AddressRange 22,702
  AddressRange(24,731
  AddressRange(25,751
  uint64_t start(28,841
  uint64_t end(29,884
  uint64_t size(30,923
  uint64_t empty(31,971
  bool contains(32,1020
  bool contains(33,1097
  bool intersects(36,1193
template <typename T> class AddressRangesBase 58,1972
  using Collection 60,2031
  Collection Ranges;61,2068
  void clear(64,2098
  bool empty(65,2133
  bool contains(66,2181
  bool contains(69,2273
  void reserve(72,2382
  size_t size(73,2444
  std::optional<T> getRangeThatContains(75,2493
  typename Collection::const_iterator begin(83,2700
  typename Collection::const_iterator end(84,2779
  bool operator==(operator==91,2953
  typename Collection::const_iterator find(96,3061
class AddressRanges 121,3818
  Collection::const_iterator insert(123,3889
class AddressRangeValuePair 145,4494
  operator AddressRange(operator AddressRange147,4532
  AddressRange Range;149,4583
  int64_t Value 150,4605
inline bool operator==(operator==153,4630
class AddressRangesMap 165,5256
  void insert(167,5339

/usr/include/llvm/ADT/AllocatorList.h,2160
#define LLVM_ADT_ALLOCATORLIST_H10,403
template <class T, class AllocatorT> class AllocatorList 33,1108
  struct Node 34,1180
    Node(40,1360
    Node(41,1397
    template <class... Ts> Node(42,1428
    T V;43,1505
  list_type List;48,1561
  AllocatorT &getAlloc(getAlloc50,1580
  const AllocatorT &getAlloc(getAlloc51,1623
  template <class... ArgTs> Node *create(create53,1679
  struct Cloner 57,1809
    AllocatorList &AL;AL58,1827
    Cloner(60,1851
    Node *operator()(operator()62,1894
  struct Disposer 65,1969
    AllocatorList &AL;AL66,1989
    Disposer(68,2013
    void operator()(operator()70,2058
private:private85,2427
  class IteratorImpl87,2482
        iterator_adaptor_base<IteratorImpl<ValueT, IteratorBase>, IteratorBase,96,2845
                              std::bidirectional_iterator_tag,97,2925
    explicit IteratorImpl(108,3244
    IteratorImpl(111,3370
    reference operator*(118,3641
    pointer operator->(119,3709
  AllocatorList(132,4159
  AllocatorList(135,4267
  AllocatorList &operator=(operator=139,4374
  AllocatorList &operator=(operator=146,4570
  ~AllocatorList(151,4706
  void swap(153,4739
  bool empty(158,4846
  size_t size(159,4886
  iterator begin(161,4927
  iterator end(162,4981
  const_iterator begin(163,5031
  const_iterator end(164,5103
  reverse_iterator rbegin(165,5171
  reverse_iterator rend(166,5243
  const_reverse_iterator rbegin(167,5311
  const_reverse_iterator rend(170,5407
  T &back(back174,5500
  T &front(front175,5538
  const T &back(back176,5578
  const T &front(front177,5628
  template <class... Ts> iterator emplace(179,5681
  iterator insert(183,5836
  iterator insert(186,5949
  void insert(191,6085
  iterator erase(196,6233
  iterator erase(200,6342
  void clear(205,6499
  void pop_back(206,6557
  void pop_front(207,6632
  void push_back(208,6708
  void push_front(209,6765
  void push_back(210,6825
  void push_front(211,6876
  template <class... Ts> void emplace_back(212,6930
  template <class... Ts> void emplace_front(215,7037
  void resetAlloc(222,7214
template <class T> using BumpPtrList 228,7330

/usr/include/llvm/ADT/ArrayRef.h,1566
#define LLVM_ADT_ARRAYREF_H10,398
    operator std::vector<T>(vector<T>287,10034
  class [[nodiscard]] MutableArrayRef 307,10803
    /*implicit*/ MutableArrayRef(325,11495
    /*implicit*/ MutableArrayRef(328,11623
    /*implicit*/ MutableArrayRef(331,11756
    MutableArrayRef(335,11901
    /*implicit*/ MutableArrayRef(338,12025
    /*implicit*/ MutableArrayRef(342,12166
    /*implicit*/ constexpr MutableArrayRef(347,12325
    /*implicit*/ constexpr MutableArrayRef(352,12498
    T *data(data354,12577
    iterator begin(356,12646
    iterator end(357,12692
    reverse_iterator rbegin(359,12752
    reverse_iterator rend(360,12824
    T &front(front363,12936
    T &back(back369,13057
    MutableArrayRef<T> slice(376,13261
    MutableArrayRef<T> slice(382,13502
    MutableArrayRef<T> drop_front(387,13648
    MutableArrayRef<T> drop_back(392,13824
    MutableArrayRef<T> drop_while(400,14136
    MutableArrayRef<T> drop_until(407,14409
    MutableArrayRef<T> take_front(412,14603
    MutableArrayRef<T> take_back(419,14824
    MutableArrayRef<T> take_while(428,15104
    MutableArrayRef<T> take_until(435,15368
  template <typename T> class OwningArrayRef 449,15742
    OwningArrayRef(452,15859
    OwningArrayRef(454,15935
    OwningArrayRef(459,16101
    OwningArrayRef &operator=(operator=461,16175
    ~OwningArrayRef(468,16402
  inline bool operator==(operator==670,23424
  inline bool operator==(operator==675,23542
  inline bool operator!=(operator!=680,23681
  inline bool operator!=(operator!=685,23797

/usr/include/llvm/ADT/Bitfields.h,1594
#define LLVM_ADT_BITFIELDS_H80,3225
template <typename T, unsigned Bits> struct BitPatterns 94,3543
template <typename T,120,5115
template <typename T, unsigned Bits,120,5115
template <typename T, unsigned Bits, bool 120,5115
template <typename T,134,5565
  using BP 136,5701
  static T pack(138,5737
  static T unpack(147,6053
template <typename Bitfield,156,6300
template <typename Bitfield, typename StorageType> struct Impl 156,6300
  using IntegerType 159,6464
  using C 160,6518
  using BP 161,6571
  static constexpr size_t StorageBits 163,6627
  static constexpr StorageType Mask 166,6852
  static void update(170,7054
  static IntegerType extract(178,7368
  static StorageType test(185,7626
template <typename T,196,8058
template <typename T, bool 196,8058
  using type 201,8250
  using type 206,8417
struct Bitfield 212,8575
  template <typename T,219,8938
  template <typename T, unsigned Offset,219,8938
  template <typename T, unsigned Offset, unsigned Size,219,8938
            T MaxValue 220,8994
  template <typename Bitfield,253,10449
  static typename Bitfield::Type get(254,10502
  template <typename Bitfield,261,10797
  static StorageType test(262,10850
  template <typename Bitfield,269,11126
  static void set(270,11179
  template <typename A,276,11452
  template <typename A, typename B> static constexpr bool isOverlapping(276,11452
  template <typename A> static constexpr bool areContiguous(280,11600
  template <typename A,281,11679
  template <typename A, typename B,281,11679
  static constexpr bool areContiguous(282,11735

/usr/include/llvm/ADT/BreadthFirstIterator.h,627
#define LLVM_ADT_BREADTHFIRSTITERATOR_H19,770
template <class SetType> class bf_iterator_storage 33,1163
  SetType Visited;35,1224
template <typename NodeRef,39,1303
template <typename NodeRef, unsigned SmallSize 39,1303
  bool operator==(operator==120,3733
  bool operator!=(operator!=124,3829
  reference operator*(126,3906
  NodeRef operator->(131,4159
  bf_iterator &operator++(operator++133,4208
  bf_iterator operator++(138,4292
template <class T> bf_iterator<T> bf_begin(148,4537
template <class T> bf_iterator<T> bf_end(152,4632
template <class T> iterator_range<bf_iterator<T>> breadth_first(157,4790

/usr/include/llvm/ADT/CachedHashString.h,1559
#define LLVM_ADT_CACHEDHASHSTRING_H21,854
class CachedHashStringRef 29,1045
  const char *P;P30,1073
  uint32_t Size;31,1090
  uint32_t Hash;32,1107
  explicit CachedHashStringRef(36,1184
  CachedHashStringRef(39,1305
  StringRef val(44,1472
  const char *data(data45,1527
  uint32_t size(46,1568
  uint32_t hash(47,1609
template <> struct DenseMapInfo<DenseMapInfo50,1654
  static CachedHashStringRef getEmptyKey(51,1709
  static CachedHashStringRef getTombstoneKey(54,1833
  static unsigned getHashValue(57,1965
  static bool isEqual(62,2205
class CachedHashString 72,2555
  char *P;P75,2629
  uint32_t Size;76,2640
  uint32_t Hash;77,2657
  static char *getEmptyKeyPtr(getEmptyKeyPtr79,2675
  static char *getTombstoneKeyPtr(getTombstoneKeyPtr80,2755
  bool isEmptyOrTombstone(84,2850
  struct ConstructEmptyOrTombstoneTy 88,2954
  CachedHashString(90,2996
  explicit CachedHashString(98,3232
  explicit CachedHashString(101,3375
  CachedHashString(104,3490
  CachedHashString(111,3765
  CachedHashString &operator=(operator=121,3999
  CachedHashString(126,4102
  ~CachedHashString(131,4250
  StringRef val(136,4328
  uint32_t size(137,4383
  uint32_t hash(138,4424
  operator StringRef(operator StringRef140,4466
  operator CachedHashStringRef(operator CachedHashStringRef141,4513
template <> struct DenseMapInfo<DenseMapInfo153,4784
  static CachedHashString getEmptyKey(154,4836
  static CachedHashString getTombstoneKey(158,5024
  static unsigned getHashValue(162,5220
  static bool isEqual(167,5457

/usr/include/llvm/ADT/CoalescingBitVector.h,1492
#define LLVM_ADT_COALESCINGBITVECTOR_H16,599
template <typename IndexT> class CoalescingBitVector 38,1344
  static_assert(39,1399
  CoalescingBitVector(56,1924
  CoalescingBitVector(62,2079
  ThisT &operator=(operator=67,2196
  void clear(79,2417
  bool empty(82,2493
  unsigned count(85,2581
  void set(97,3025
  void set(107,3414
  void set(114,3651
  bool test(120,3807
  void test_and_set(129,4107
  void reset(135,4262
  void operator|=(operator|=159,5098
  void operator&=(operator&=177,5781
  void intersectWithComplement(188,6176
  bool operator==(operator==219,7351
  bool operator!=(operator!=233,7937
  class const_iterator 235,8009
    UnderlyingIterator MapIterator;250,8514
    void setToEnd(258,8793
    void resetCache(266,9059
    void advanceTo(279,9496
    const_iterator(287,9746
    const_iterator(292,9851
    bool operator==(operator==294,9889
    bool operator!=(operator!=302,10275
    IndexT operator*(306,10368
    const_iterator &operator++(operator++308,10446
    const_iterator operator++(320,10811
    void advanceToLowerBound(330,11264
  const_iterator begin(346,11671
  const_iterator end(348,11749
  const_iterator find(354,12071
  iterator_range<const_iterator> half_open_range(365,12425
  void print(376,12807
  LLVM_DUMP_METHOD void dump(389,13141
  void insert(399,13394
  bool getOverlaps(403,13586
  void getNonOverlappingParts(419,14308
  Allocator *Alloc;Alloc445,15338
  MapT Intervals;446,15358

/usr/include/llvm/ADT/DAGDeltaAlgorithm.h,150
#define LLVM_ADT_DAGDELTAALGORITHM_H9,404
class DAGDeltaAlgorithm 38,1645
  virtual void anchor(39,1671
  virtual void UpdatedSearchState(68,2808

/usr/include/llvm/ADT/DeltaAlgorithm.h,164
#define LLVM_ADT_DELTAALGORITHM_H9,401
class DeltaAlgorithm 35,1487
  std::set<changeset_ty> FailedTestsCache;45,1824
  virtual void UpdatedSearchState(73,2954

/usr/include/llvm/ADT/DenseMap.h,6674
#define LLVM_ADT_DENSEMAP_H15,539
struct DenseMapPair 42,1251
  using std::pair<std::pair43,1306
  using std::pair<KeyT, ValueT>::pair;pair43,1306
  KeyT &getFirst(getFirst45,1346
  const KeyT &getFirst(getFirst46,1408
  ValueT &getSecond(getSecond47,1482
  const ValueT &getSecond(getSecond48,1548
template <typename KeyT,53,1657
template <typename KeyT, typename ValueT,53,1657
          typename KeyInfoT 54,1699
template <typename DerivedT,59,1876
template <typename DerivedT, typename KeyT,59,1876
template <typename DerivedT, typename KeyT, typename ValueT,59,1876
template <typename DerivedT, typename KeyT, typename ValueT, typename KeyInfoT,59,1876
class DenseMapBase 61,1984
  using const_arg_type_t 63,2053
  using size_type 66,2135
  using key_type 67,2165
  using mapped_type 68,2190
  using value_type 69,2220
  using iterator 71,2251
  using iterator = DenseMapIterator<KeyT, ValueT,71,2251
  using iterator = DenseMapIterator<KeyT, ValueT, KeyInfoT,71,2251
  using const_iterator 72,2321
      DenseMapIterator<KeyT, ValueT,73,2346
      DenseMapIterator<KeyT, ValueT, KeyInfoT,73,2346
      DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT,73,2346
  inline iterator begin(75,2410
  inline iterator end(84,2749
  inline const_iterator begin(87,2851
  inline const_iterator end(94,3112
  [[nodiscard]] bool empty(98,3232
  unsigned size(99,3300
  void reserve(103,3458
  void clear(110,3653
  bool contains(145,4883
  size_type count(151,5078
  iterator find(155,5171
  const_iterator find(164,5525
  iterator find_as(180,6203
  const_iterator find_as(190,6584
  ValueT lookup(202,7092
  const ValueT &at(at211,7369
  std::pair<std::pair220,7746
  std::pair<iterator, bool> insert(220,7746
  std::pair<std::pair227,8037
  std::pair<iterator, bool> insert(227,8037
  std::pair<std::pair235,8383
  std::pair<iterator, bool> try_emplace(235,8383
  std::pair<std::pair260,9548
  std::pair<iterator, bool> try_emplace(260,9548
  std::pair<std::pair286,10783
  std::pair<iterator, bool> insert_as(286,10783
  void insert(310,11923
  ValueT &getOrInsertDefault(getOrInsertDefault318,12201
  ValueT &getOrInsertDefault(getOrInsertDefault325,12485
  bool erase(329,12581
  void erase(340,12878
  value_type& FindAndConstruct(348,13082
  value_type& FindAndConstruct(360,13360
  bool isPointerIntoBucketsArray(375,13836
  const void *getPointerIntoBucketsArray(getPointerIntoBucketsArray382,14182
  void destroyAll(387,14297
  void initEmpty(400,14720
  unsigned getMinBucketToReserveForEntries(413,15203
  void moveFromOldBuckets(422,15534
  void copyFrom(448,16506
  static unsigned getHashValue(471,17432
  static unsigned getHashValue(476,17559
  static const KeyT getEmptyKey(480,17660
  static const KeyT getTombstoneKey(486,17870
  iterator makeIterator(491,17964
  const_iterator makeConstIterator(501,18314
  unsigned getNumEntries(511,18745
  void setNumEntries(515,18850
  void incrementNumEntries(519,18947
  void decrementNumEntries(523,19023
  unsigned getNumTombstones(527,19099
  void setNumTombstones(531,19210
  void incrementNumTombstones(535,19313
  void decrementNumTombstones(539,19398
  const BucketT *getBuckets(getBuckets543,19483
  BucketT *getBuckets(getBuckets547,19588
  unsigned getNumBuckets(551,19675
  BucketT *getBucketsEnd(getBucketsEnd555,19780
  const BucketT *getBucketsEnd(getBucketsEnd559,19857
  void grow(563,19946
  void shrink_and_clear(567,20033
  template <typename KeyArg,571,20121
  BucketT *InsertIntoBucket(InsertIntoBucket572,20173
  BucketT *InsertIntoBucketWithLookup(InsertIntoBucketWithLookup582,20544
  BucketT *InsertIntoBucketImpl(InsertIntoBucketImpl592,20919
  bool LookupBucketFor(635,22792
  bool LookupBucketFor(686,24779
  size_t getMemorySize(699,25300
template <typename DerivedT,710,25716
template <typename DerivedT, typename KeyT,710,25716
template <typename DerivedT, typename KeyT, typename ValueT,710,25716
template <typename DerivedT, typename KeyT, typename ValueT, typename KeyInfoT,710,25716
bool operator==(operator==712,25824
template <typename DerivedT,730,26304
template <typename DerivedT, typename KeyT,730,26304
template <typename DerivedT, typename KeyT, typename ValueT,730,26304
template <typename DerivedT, typename KeyT, typename ValueT, typename KeyInfoT,730,26304
bool operator!=(operator!=732,26412
template <typename KeyT,738,26602
template <typename KeyT, typename ValueT,738,26602
          typename KeyInfoT 739,26644
  DenseMap& operator=(operator=794,28326
  DenseMap& operator=(operator=800,28443
template <typename KeyT,904,30910
template <typename KeyT, typename ValueT,904,30910
template <typename KeyT, typename ValueT, unsigned InlineBuckets 904,30910
  struct LargeRep 924,31712
    BucketT *Buckets;Buckets925,31732
    unsigned NumBuckets;926,31754
  SmallDenseMap& operator=(operator=1036,35877
  SmallDenseMap& operator=(operator=1042,36004
template <typename KeyT,1219,41337
template <typename KeyT, typename ValueT,1219,41337
template <typename KeyT, typename ValueT, typename KeyInfoT,1219,41337
template <typename KeyT, typename ValueT, typename KeyInfoT, typename Bucket,1219,41337
class DenseMapIterator 1221,41439
  friend class DenseMapIterator<KeyT, ValueT,1222,41493
  friend class DenseMapIterator<KeyT, ValueT, KeyInfoT,1222,41493
  friend class DenseMapIterator<KeyT, ValueT, KeyInfoT, Bucket,1222,41493
  friend class DenseMapIterator<KeyT, ValueT,1223,41564
  friend class DenseMapIterator<KeyT, ValueT, KeyInfoT,1223,41564
  friend class DenseMapIterator<KeyT, ValueT, KeyInfoT, Bucket,1223,41564
  using difference_type 1226,41645
  using value_type 1227,41682
  using value_type = std::conditional_t<IsConst, const Bucket,1227,41682
  using pointer 1228,41754
  using reference 1229,41786
  using iterator_category 1230,41820
  pointer Ptr 1233,41885
  pointer End 1234,41910
  DenseMapIterator(1239,41977
  template <bool IsConstSrc,1255,42547
            typename 1256,42576
      : DebugEpochBase::HandleBase(I), Ptr(1259,42738
      : DebugEpochBase::HandleBase(I), Ptr(I.Ptr), End(1259,42738
  reference operator*(1261,42804
  pointer operator->(1268,43035
  friend bool operator==(operator==1276,43268
  friend bool operator!=(operator!=1285,43670
  inline DenseMapIterator& operator++(1290,43811
  DenseMapIterator operator++(1302,44163
  void AdvancePastEmptyBuckets(1308,44347
  void RetreatPastEmptyBuckets(1318,44674
template <typename KeyT,1329,45010
template <typename KeyT, typename ValueT,1329,45010
inline size_t capacity_in_bytes(1330,45071

/usr/include/llvm/ADT/DenseMapInfo.h,3441
#define LLVM_ADT_DENSEMAPINFO_H15,557
namespace llvm 24,707
template<typename T,49,1503
template<typename T, typename Enable 49,1503
struct DenseMapInfo<DenseMapInfo63,2106
  static constexpr uintptr_t Log2MaxAlign 68,2392
  static inline T* getEmptyKey(70,2441
  static inline T* getTombstoneKey(76,2593
  static unsigned getHashValue(82,2749
  static bool isEqual(87,2899
template<> struct DenseMapInfo<DenseMapInfo91,3011
  static inline char getEmptyKey(92,3050
  static inline char getTombstoneKey(93,3100
  static unsigned getHashValue(94,3158
  static bool isEqual(96,3229
template <> struct DenseMapInfo<DenseMapInfo102,3362
  static inline unsigned char getEmptyKey(103,3411
  static inline unsigned char getTombstoneKey(104,3470
  static unsigned getHashValue(105,3537
  static bool isEqual(107,3617
template <> struct DenseMapInfo<DenseMapInfo113,3769
  static inline unsigned short getEmptyKey(114,3819
  static inline unsigned short getTombstoneKey(115,3883
  static unsigned getHashValue(116,3955
  static bool isEqual(118,4036
template<> struct DenseMapInfo<DenseMapInfo124,4188
  static inline unsigned getEmptyKey(125,4231
  static inline unsigned getTombstoneKey(126,4286
  static unsigned getHashValue(127,4349
  static bool isEqual(129,4424
template<> struct DenseMapInfo<DenseMapInfo135,4565
  static inline unsigned long getEmptyKey(136,4613
  static inline unsigned long getTombstoneKey(137,4674
  static unsigned getHashValue(139,4745
  static bool isEqual(143,4844
template<> struct DenseMapInfo<DenseMapInfo149,5000
  static inline unsigned long long getEmptyKey(150,5053
  static inline unsigned long long getTombstoneKey(151,5120
  static unsigned getHashValue(153,5199
  static bool isEqual(157,5304
template <> struct DenseMapInfo<DenseMapInfo164,5479
  static inline short getEmptyKey(165,5520
  static inline short getTombstoneKey(166,5575
  static unsigned getHashValue(167,5639
  static bool isEqual(168,5710
template<> struct DenseMapInfo<DenseMapInfo172,5829
  static inline int getEmptyKey(173,5867
  static inline int getTombstoneKey(174,5924
  static unsigned getHashValue(175,5990
  static bool isEqual(177,6072
template<> struct DenseMapInfo<DenseMapInfo183,6194
  static inline long getEmptyKey(184,6233
  static inline long getTombstoneKey(188,6325
  static unsigned getHashValue(190,6396
  static bool isEqual(194,6486
template<> struct DenseMapInfo<DenseMapInfo200,6615
  static inline long long getEmptyKey(201,6659
  static inline long long getTombstoneKey(202,6732
  static unsigned getHashValue(204,6813
  static bool isEqual(208,6909
template<typename T,215,7093
struct DenseMapInfo<DenseMapInfo216,7126
  using Pair 217,7165
  using FirstInfo 218,7197
  using SecondInfo 219,7234
  static inline Pair getEmptyKey(221,7273
  static inline Pair getTombstoneKey(226,7421
  static unsigned getHashValue(231,7581
  static unsigned getHashValuePiecewise(239,7961
  static bool isEqual(244,8180
template <typename... Ts> struct DenseMapInfo<DenseMapInfo251,8421
  using Tuple 252,8488
  static inline Tuple getEmptyKey(254,8524
  static inline Tuple getTombstoneKey(258,8621
  static unsigned getHashValueImpl(263,8750
  static unsigned getHashValueImpl(272,9122
  static unsigned getHashValue(276,9209
  static bool isEqualImpl(282,9411
  static bool isEqualImpl(290,9766
  static bool isEqual(294,9862

/usr/include/llvm/ADT/DenseMapInfoVariant.h,46
#define LLVM_ADT_DENSEMAPINFOVARIANT_H15,585

/usr/include/llvm/ADT/DenseSet.h,2860
#define LLVM_ADT_DENSESET_H15,559
struct DenseSetEmpty 30,854
template <typename KeyT> class DenseSetPair 34,991
  KeyT key;35,1060
  KeyT &getFirst(getFirst38,1081
  const KeyT &getFirst(getFirst39,1116
  DenseSetEmpty &getSecond(getSecond40,1163
  const DenseSetEmpty &getSecond(getSecond41,1210
template <typename ValueT,53,1563
template <typename ValueT, typename MapTy,53,1563
class DenseSetImpl 54,1627
  MapTy TheMap;57,1775
  using const_arg_type_t 60,1816
  using key_type 63,1898
  using value_type 64,1925
  using size_type 65,1954
  explicit DenseSetImpl(67,1985
  DenseSetImpl(70,2097
  DenseSetImpl(75,2229
  bool empty(80,2377
  size_type size(81,2425
  size_t getMemorySize(82,2476
  void resize(86,2648
  void reserve(90,2806
  void clear(92,2861
  size_type count(97,2967
  bool erase(101,3054
  void swap(105,3119
  class Iterator 111,3221
    typename MapTy::iterator I;112,3240
    Iterator(124,3602
    ValueT &operator*(operator*126,3661
    const ValueT &operator*(operator*127,3711
    ValueT *operator->(operator->128,3773
    const ValueT *operator->(operator->129,3825
    Iterator& operator++(131,3890
    Iterator operator++(132,3940
    friend bool operator==(operator==133,4004
    friend bool operator!=(operator!=136,4102
  class ConstIterator 141,4206
    typename MapTy::const_iterator I;142,4230
    ConstIterator(154,4616
    ConstIterator(155,4665
    const ValueT &operator*(operator*157,4735
    const ValueT *operator->(operator->158,4797
    ConstIterator& operator++(160,4862
    ConstIterator operator++(161,4917
    friend bool operator==(operator==162,4986
    friend bool operator!=(operator!=165,5094
  using iterator 170,5208
  using const_iterator 171,5237
  iterator begin(173,5278
  iterator end(174,5334
  const_iterator begin(176,5387
  const_iterator end(177,5460
  iterator find(179,5530
  const_iterator find(180,5611
  bool contains(185,5767
  iterator find_as(195,6155
  const_iterator find_as(199,6275
  void erase(203,6383
  void erase(204,6438
  std::pair<std::pair206,6501
  std::pair<iterator, bool> insert(206,6501
  std::pair<std::pair211,6634
  std::pair<iterator, bool> insert(211,6634
  std::pair<std::pair219,6910
  std::pair<iterator, bool> insert_as(219,6910
  std::pair<std::pair224,7141
  std::pair<iterator, bool> insert_as(224,7141
  void insert(230,7369
template <typename ValueT,242,7758
template <typename ValueT, typename MapTy,242,7758
bool operator==(operator==243,7822
template <typename ValueT,258,8210
template <typename ValueT, typename MapTy,258,8210
bool operator!=(operator!=259,8274
template <typename ValueT,267,8518
template <typename ValueT, typename ValueInfoT 267,8518
template <typename ValueT,284,9190
template <typename ValueT, unsigned InlineBuckets 284,9190

/usr/include/llvm/ADT/DepthFirstIterator.h,1116
#define LLVM_ADT_DEPTHFIRSTITERATOR_H35,1479
class df_iterator_storage 50,1884
  SetType Visited;52,1920
  df_iterator_storage(58,2018
  df_iterator_storage(59,2074
  SetType &Visited;Visited61,2151
template <typename NodeRef,68,2460
template <typename NodeRef, unsigned SmallSize=68,2460
  bool operator==(operator==163,5738
  bool operator!=(operator!=166,5829
  reference operator*(168,5902
  NodeRef operator->(174,6201
  df_iterator &operator++(operator++176,6250
  df_iterator operator++(192,6689
df_iterator<T> df_begin(218,7573
df_iterator<T> df_end(223,7668
iterator_range<df_iterator<T>> depth_first(229,7826
df_ext_iterator<T, SetTy> df_ext_begin(241,8284
df_ext_iterator<T, SetTy> df_ext_end(246,8431
iterator_range<df_ext_iterator<T, SetTy>> depth_first_ext(251,8574
idf_iterator<T> idf_begin(267,9205
idf_iterator<T> idf_end(272,9315
iterator_range<idf_iterator<T>> inverse_depth_first(278,9487
idf_ext_iterator<T, SetTy> idf_ext_begin(292,10076
idf_ext_iterator<T, SetTy> idf_ext_end(297,10238
iterator_range<idf_ext_iterator<T, SetTy>> inverse_depth_first_ext(302,10396

/usr/include/llvm/ADT/DirectedGraph.h,2531
#define LLVM_ADT_DIRECTEDGRAPH_H16,596
template <class NodeType, class EdgeType> class DGEdge 28,918
  explicit DGEdge(32,1058
  explicit DGEdge(33,1108
  DGEdge<NodeType,NodeType35,1199
  const NodeType &getTargetNode(getTargetNode48,1648
  NodeType &getTargetNode(getTargetNode49,1711
  void setTargetNode(55,1911
  bool isEqualTo(59,2055
  EdgeType &getDerived(getDerived62,2194
  const EdgeType &getDerived(getDerived63,2262
  NodeType &TargetNode;TargetNode68,2399
template <class NodeType, class EdgeType> class DGNode 73,2531
  using EdgeListTy 75,2596
  using iterator 76,2640
  using const_iterator 77,2690
  explicit DGNode(80,2807
  explicit DGNode(83,2893
  DGNode(84,2968
  DGNode<DGNode86,3041
  DGNode<NodeType, EdgeType> &operator=(operator=86,3041
  DGNode<DGNode90,3163
  DGNode<NodeType, EdgeType> &operator=(operator=90,3163
  friend bool operator==(operator==97,3393
  friend bool operator!=(operator!=100,3489
  const_iterator begin(104,3581
  const_iterator end(105,3638
  iterator begin(106,3691
  iterator end(107,3736
  const EdgeType &front(front108,3777
  EdgeType &front(front109,3836
  const EdgeType &back(back110,3883
  EdgeType &back(back111,3940
  bool findEdgesTo(117,4221
  bool addEdge(127,4618
  void removeEdge(130,4739
  bool hasEdgeTo(133,4863
  const EdgeListTy &getEdges(getEdges138,5003
  EdgeListTy &getEdges(getEdges139,5058
  void clear(145,5230
  bool isEqualTo(149,5348
  NodeType &getDerived(getDerived152,5487
  const NodeType &getDerived(getDerived153,5555
  const_iterator findEdgeTo(159,5765
  EdgeListTy Edges;165,5961
template <class NodeType, class EdgeType> class DirectedGraph 173,6179
  using NodeListTy 175,6254
  using EdgeListTy 176,6304
  using iterator 178,6362
  using const_iterator 179,6412
  using DGraphType 180,6474
  explicit DirectedGraph(183,6560
  DirectedGraph(184,6624
  DirectedGraph(185,6681
  DGraphType &operator=(operator=186,6748
  DGraphType &operator=(operator=190,6838
  const_iterator begin(195,6941
  const_iterator end(196,6998
  iterator begin(197,7051
  iterator end(198,7096
  const NodeType &front(front199,7137
  NodeType &front(front200,7196
  const NodeType &back(back201,7243
  NodeType &back(back202,7300
  size_t size(204,7346
  const_iterator findNode(207,7439
  iterator findNode(211,7605
  bool addNode(217,7818
  bool findIncomingEdgesToNode(226,8087
  bool removeNode(243,8729
  bool connect(265,9359
  NodeListTy Nodes;275,9750

/usr/include/llvm/ADT/EnumeratedArray.h,42
#define LLVM_ADT_ENUMERATEDARRAY_H16,590

/usr/include/llvm/ADT/EpochTracker.h,661
#define LLVM_ADT_EPOCHTRACKER_H17,687
#define LLVM_DEBUGEPOCHBASE_HANDLEBASE_EMPTYBASE26,833
class DebugEpochBase 37,1334
  void incrementEpoch(45,1514
  ~DebugEpochBase(49,1668
  class HandleBase 59,2165
    explicit HandleBase(66,2313
    bool isHandleInSync(72,2614
    const void *getEpochAddress(getEpochAddress77,2881
#define LLVM_DEBUGEPOCHBASE_HANDLEBASE_EMPTYBASE 83,2977
#define LLVM_DEBUGEPOCHBASE_HANDLEBASE_EMPTYBASE85,3056
class DebugEpochBase 88,3125
  void incrementEpoch(90,3156
  class HandleBase 92,3184
    explicit HandleBase(95,3243
    bool isHandleInSync(96,3294
    const void *getEpochAddress(getEpochAddress97,3343

/usr/include/llvm/ADT/EquivalenceClasses.h,695
#define LLVM_ADT_EQUIVALENCECLASSES_H16,618
  struct ECValueComparator 115,4537
    ECValueComparator(118,4600
    bool operator()(operator()120,4649
    bool operator()(operator()125,4792
    bool operator()(operator()130,4924
    const Compare compare;134,5030
  const EquivalenceClasses &operator=(operator=147,5376
  class member_iterator 272,10011
    const ECValue *Node;Node275,10075
    explicit member_iterator(286,10397
    reference operator*(288,10458
    pointer operator->(292,10585
    member_iterator &operator++(operator++294,10642
    member_iterator operator++(300,10801
    bool operator==(operator==306,10945
    bool operator!=(operator!=309,11038

/usr/include/llvm/ADT/GraphTraits.h,328
#define LLVM_ADT_GRAPHTRAITS_H20,800
struct GraphTraits 37,1404
struct Inverse 97,4039
  const GraphType &Graph;Graph98,4056
  inline Inverse(100,4083
template <class T> struct GraphTraits<GraphTraits105,4260
nodes(110,4499
inverse_nodes(116,4748
children(123,5018
inverse_children(130,5305
children_edges(137,5613

/usr/include/llvm/ADT/ImmutableList.h,1802
#define LLVM_ADT_IMMUTABLELIST_H15,549
class ImmutableListImpl 28,797
  T Head;31,888
  const ImmutableListImpl* Tail;32,898
  ImmutableListImpl(35,960
  const T& getHead(42,1223
  const ImmutableListImpl* getTail(43,1267
  static inline void Profile(45,1328
  void Profile(51,1491
class ImmutableList 65,2158
  using value_type 67,2188
  using Factory 68,2212
  const ImmutableListImpl<T>* X;74,2378
  ImmutableList(80,2636
  const ImmutableListImpl<T>* getInternalPointer(82,2704
  class iterator 86,2782
    iterator(91,2883
    iterator& operator++(93,2945
    bool operator==(operator==94,3008
    bool operator!=(operator!=95,3074
    const value_type& operator*(96,3140
    const std::remove_reference_t<value_type> *operator->(operator->97,3205
    ImmutableList getList(101,3308
  iterator begin(106,3504
  iterator end(110,3678
  bool isEmpty(113,3776
  bool contains(115,3815
  bool isEqual(128,4311
  bool operator==(operator==130,4378
  const T& getHead(133,4496
  ImmutableList getTail(140,4724
  void Profile(144,4802
class ImmutableListFactory 150,4899
  using ListTy 151,4928
  using CacheTy 152,4967
  CacheTy Cache;154,5006
  uintptr_t Allocator;155,5023
  bool ownsAllocator(157,5047
  BumpPtrAllocator& getAllocator(161,5118
  ImmutableListFactory(166,5241
  ImmutableListFactory(169,5339
  ~ImmutableListFactory(172,5448
  [[nodiscard]] ImmutableList<T> concat(177,5558
  [[nodiscard]] ImmutableList<T> add(200,6266
  [[nodiscard]] ImmutableList<T> emplace(205,6427
  ImmutableList<T> getEmptyList(210,6620
  ImmutableList<T> create(215,6733
  static inline ImmutableList<T> getEmptyKey(225,7109
  static inline ImmutableList<T> getTombstoneKey(229,7219
  static unsigned getHashValue(233,7333
  static bool isEqual(239,7562

/usr/include/llvm/ADT/ImmutableMap.h,1311
#define LLVM_ADT_IMMUTABLEMAP_H15,547
struct ImutKeyValueInfo 28,979
  static inline key_type_ref KeyOfValue(36,1217
  static inline data_type_ref DataOfValue(40,1302
  static inline bool isEqual(44,1390
  static inline bool isLess(47,1504
  static inline bool isDataEqual(51,1617
  static inline void Profile(55,1738
template <typename KeyT,61,1914
template <typename KeyT, typename ValT,61,1914
          typename ValInfo 62,1954
  class Factory 83,2774
    typename TreeTy::Factory F;84,2792
    const bool Canonicalize;85,2824
    Factory(88,2864
    Factory(90,2935
    ImmutableMap getEmptyMap(96,3139
    [[nodiscard]] ImmutableMap add(98,3214
    [[nodiscard]] ImmutableMap remove(104,3491
    typename TreeTy::Factory *getTreeFactory(getTreeFactory109,3687
  bool operator==(operator==118,3901
  bool operator!=(operator!=122,4038
  class iterator 155,4870
    explicit iterator(159,4991
    key_type_ref getKey(162,5080
    data_type_ref getData(163,5139
template <typename KeyT,201,6294
template <typename KeyT, typename ValT,201,6294
typename ValInfo 202,6334
  bool operator==(operator==261,8229
  bool operator!=(operator!=265,8369
  class iterator 285,8935
    explicit iterator(289,9062
    key_type_ref getKey(292,9151
    data_type_ref getData(293,9210

/usr/include/llvm/ADT/ImmutableSet.h,6636
#define LLVM_ADT_IMMUTABLESET_H15,565
class ImutAVLTree 43,1440
  ImutAVLTree *getLeft(getLeft61,2136
  ImutAVLTree *getRight(getRight65,2287
  unsigned getHeight(69,2439
  const value_type& getValue(72,2559
  ImutAVLTree* find(76,2752
  ImutAVLTree* getMaxElement(92,3197
  unsigned size(101,3480
  iterator begin(113,3875
  iterator end(117,4026
  bool isElementEqual(119,4073
  bool isElementEqual(133,4485
  bool isEqual(140,4783
  bool isNotEqual(166,5377
  bool contains(171,5644
  unsigned validateTree(179,6098
  Factory *factory;factory209,7138
  ImutAVLTree *left;left210,7158
  ImutAVLTree *right;right211,7179
  unsigned height 215,7264
  bool IsMutable 216,7288
  bool IsDigestCached 217,7310
  bool IsCanonicalized 218,7337
  value_type value;220,7366
  ImutAVLTree(231,7723
  bool isMutable(246,8478
  bool hasCachedDigest(250,8657
  void markImmutable(265,9427
  void markedCachedDigest(271,9610
  void setHeight(278,9839
  static uint32_t computeDigest(283,9970
  uint32_t computeDigest(301,10357
  void retain(318,10825
  void release(320,10858
  void destroy(326,10950
struct IntrusiveRefCntPtrInfo<IntrusiveRefCntPtrInfo349,11489
  static void retain(350,11544
  static void release(351,11614
class ImutAVLFactory 359,11920
  using TreeTy 362,11982
  using value_type_ref 363,12022
  using key_type_ref 364,12080
  using CacheTy 365,12134
  CacheTy Cache;367,12182
  uintptr_t Allocator;368,12199
  std::vector<TreeTy*> createdNodes;369,12222
  std::vector<TreeTy*> freeNodes;370,12259
  bool ownsAllocator(372,12294
  BumpPtrAllocator& getAllocator(376,12365
  ImutAVLFactory(385,12638
  ImutAVLFactory(388,12730
  ~ImutAVLFactory(391,12835
  TreeTy* add(395,12911
  TreeTy* remove(402,13044
  TreeTy* getEmptyTree(409,13181
  bool            isEmpty(419,13587
  unsigned        getHeight(420,13645
  TreeTy*         getLeft(421,13725
  TreeTy*         getRight(422,13793
  value_type_ref  getValue(423,13863
  static unsigned maskCacheIndex(426,14005
  unsigned incrementHeight(428,14075
  static bool compareTreeWithSection(434,14237
  TreeTy* createNode(455,15128
  TreeTy* createNode(471,15546
  void recoverNodes(475,15687
  TreeTy* balanceTree(486,16016
  TreeTy* add_internal(530,17379
  TreeTy* remove_internal(550,18169
  TreeTy* combineTrees(569,18756
  TreeTy* removeMinBinding(579,19009
  void markImmutable(591,19394
  TreeTy *getCanonicalTree(getCanonicalTree600,19573
template <typename ImutInfo> class ImutAVLTreeGenericIterator 641,20791
  SmallVector<SmallVector642,20855
  SmallVector<uintptr_t,20> stack;642,20855
  using iterator_category 645,20899
  using value_type 646,20960
  using difference_type 647,21004
  using pointer 648,21046
  using reference 649,21078
  enum VisitFlag 651,21113
  enum VisitFlag { VisitedNone=651,21113
  enum VisitFlag { VisitedNone=0x0, VisitedLeft=651,21113
  enum VisitFlag { VisitedNone=0x0, VisitedLeft=0x1, VisitedRight=651,21113
                   Flags=652,21184
  using TreeTy 654,21217
  ImutAVLTreeGenericIterator(657,21300
  TreeTy &operator*(operator*661,21422
  TreeTy *operator->(operator->665,21547
  uintptr_t getVisitState(667,21596
  bool atEnd(672,21698
  bool atBeginning(674,21746
  void skipToParent(678,21844
  bool operator==(operator==695,22207
  bool operator!=(operator!=699,22304
  ImutAVLTreeGenericIterator &operator++(operator++703,22398
  ImutAVLTreeGenericIterator &operator--(operator--729,23135
template <typename ImutInfo> class ImutAVLTreeInOrderIterator 755,23934
  using InternalIteratorTy 756,23998
  InternalIteratorTy InternalItr;758,24066
  using iterator_category 761,24109
  using value_type 762,24170
  using difference_type 763,24214
  using pointer 764,24256
  using reference 765,24288
  using TreeTy 767,24323
  ImutAVLTreeInOrderIterator(769,24364
  ImutAVLTreeInOrderIterator(774,24498
  bool operator==(operator==776,24549
  bool operator!=(operator!=780,24658
  TreeTy &operator*(operator*784,24752
  TreeTy *operator->(operator->785,24805
  ImutAVLTreeInOrderIterator &operator++(operator++787,24861
  ImutAVLTreeInOrderIterator &operator--(operator--795,25063
  void skipSubTree(803,25271
struct ImutAVLValueIterator815,25595
  explicit ImutAVLValueIterator(822,25900
  typename ImutAVLValueIterator::reference operator*(825,26020
struct ImutProfileInfo 838,26544
  using value_type 839,26569
  using value_type_ref 840,26599
  static void Profile(842,26635
struct ImutProfileInteger 849,26801
  using value_type 850,26829
  using value_type_ref 851,26859
  static void Profile(853,26895
#define PROFILE_INTEGER_INFO(858,26989
#undef PROFILE_INTEGER_INFO872,27413
struct ImutProfileInfo<ImutProfileInfo876,27487
  using value_type 877,27518
  using value_type_ref 878,27551
  static void Profile(880,27590
struct ImutProfileInfo<ImutProfileInfo888,27807
  using value_type 889,27836
  using value_type_ref 890,27867
  static void Profile(892,27905
struct ImutContainerInfo 908,28638
  using value_type 909,28693
  using value_type_ref 910,28755
  using key_type 911,28825
  using key_type_ref 912,28856
  using data_type 913,28895
  using data_type_ref 914,28921
  static key_type_ref KeyOfValue(916,28952
  static data_type_ref DataOfValue(917,29017
  static bool isEqual(919,29086
  static bool isLess(923,29198
  static bool isDataEqual(927,29305
struct ImutContainerInfo<ImutContainerInfo934,29571
  using value_type 935,29631
  using value_type_ref 936,29694
  using key_type 937,29765
  using key_type_ref 938,29796
  using data_type 939,29835
  using data_type_ref 940,29861
  static key_type_ref KeyOfValue(942,29892
  static data_type_ref DataOfValue(943,29957
  static bool isEqual(945,30026
  static bool isLess(947,30108
  static bool isDataEqual(949,30188
template <typename ValT,956,30445
template <typename ValT, typename ValInfo 956,30445
  class Factory 973,31038
    typename TreeTy::Factory F;974,31056
    const bool Canonicalize;975,31088
    Factory(978,31128
    Factory(981,31205
    ImmutableSet getEmptySet(988,31483
    [[nodiscard]] ImmutableSet add(999,32079
    [[nodiscard]] ImmutableSet remove(1011,32790
    BumpPtrAllocator& getAllocator(1016,32998
    typename TreeTy::Factory *getTreeFactory(getTreeFactory1018,33065
  bool operator==(operator==1030,33366
  bool operator!=(operator!=1034,33503
template <typename ValT,1082,35074
template <typename ValT, typename ValInfo 1082,35074
  bool operator==(operator==1125,36479
  bool operator!=(operator!=1129,36619

/usr/include/llvm/ADT/IntEqClasses.h,334
#define LLVM_ADT_INTEQCLASSES_H22,889
class IntEqClasses 28,975
  SmallVector<unsigned,unsigned34,1227
  SmallVector<unsigned, 8> EC;34,1227
  IntEqClasses(42,1466
  void grow(47,1659
  void clear(51,1783
  unsigned join(59,2014
  unsigned findLeader(64,2209
  unsigned operator[operator76,2670
  void uncompress(83,2893

/usr/include/llvm/ADT/PackedVector.h,645
#define LLVM_ADT_PACKEDVECTOR_H15,550
template <typename T,45,1445
template <typename T, unsigned BitNum,45,1445
  static T getValue(48,1572
  static void setValue(57,1853
template <typename T,75,2465
template <typename T, unsigned BitNum,75,2465
template <typename T, unsigned BitNum, typename BitVectorTy 75,2465
  class reference 83,2841
    PackedVector &Vec;Vec84,2861
    const unsigned Idx;85,2884
    reference(89,2945
    reference &operator=(operator=91,3017
    operator T(operator T96,3118
  bool operator==(operator==132,3874
  bool operator!=(operator!=136,3959
  PackedVector &operator|=(operator|=140,4044

/usr/include/llvm/ADT/PointerEmbeddedInt.h,677
#define LLVM_ADT_POINTEREMBEDDEDINT_H10,408
  enum : uintptr_t 41,1666
    Shift 44,1810
    Mask 47,1935
  struct RawValueTag 50,1987
  operator IntT(operator IntT72,2661
template <typename IntT,81,2933
  using T 83,3031
  static inline void *getAsVoidPointer(getAsVoidPointer85,3076
  static inline T getFromVoidPointer(89,3180
  static inline T getFromVoidPointer(93,3306
  static constexpr int NumLowBitsAvailable 97,3438
template <typename IntT,102,3601
  using T 104,3690
  using IntInfo 105,3734
  static inline T getEmptyKey(107,3773
  static inline T getTombstoneKey(108,3840
  static unsigned getHashValue(110,3916
  static bool isEqual(114,4007

/usr/include/llvm/ADT/PointerIntPair.h,2921
#define LLVM_ADT_POINTERINTPAIR_H15,551
template <typename Ptr> struct PunnedPointer 28,820
  static_assert(29,867
  static_assert(33,1026
  static_assert(34,1091
  static_assert(35,1162
  explicit constexpr PunnedPointer(37,1234
  constexpr intptr_t asInt(39,1301
  constexpr operator intptr_t(operator intptr_t45,1415
  constexpr PunnedPointer &operator=(operator=47,1474
  Ptr *getPointerAddress(getPointerAddress52,1589
  const Ptr *getPointerAddress(getPointerAddress53,1658
template <typename T,60,1823
template <typename PointerT,61,1883
template <typename PointerT, unsigned IntBits,61,1883
template <typename PointerTy,77,2783
template <typename PointerTy, unsigned IntBits,77,2783
template <typename PointerTy, unsigned IntBits, typename IntType 77,2783
  bool operator==(operator==147,4984
  bool operator!=(operator!=151,5073
  bool operator<(155,5162
  bool operator>(156,5242
  bool operator<=(operator<=158,5323
  bool operator>=(operator>=162,5412
template <typename PointerT,167,5504
template <typename PointerT, unsigned IntBits,167,5504
struct PointerIntPairInfo 168,5571
  enum MaskAndShiftConstants 174,5911
    PointerBitMask 176,6016
    IntShift 181,6210
    IntMask 184,6356
    ShiftedIntMask 187,6489
  static PointerT getPointer(190,6549
  static intptr_t getInt(195,6702
  static intptr_t updatePointer(199,6792
  static intptr_t updateInt(208,7163
template <typename PointerTy,218,7547
template <typename PointerTy, unsigned IntBits,218,7547
  using Ty 220,7686
  static Ty getEmptyKey(222,7745
  static Ty getTombstoneKey(228,7952
  static unsigned getHashValue(234,8170
  static bool isEqual(239,8327
template <typename PointerTy,243,8473
template <typename PointerTy, unsigned IntBits,243,8473
template <typename PointerTy, unsigned IntBits, typename IntType,243,8473
  getAsVoidPointer(248,8684
  getFromVoidPointer(253,8855
  getFromVoidPointer(258,9031
  static constexpr int NumLowBitsAvailable 262,9153
template <std::size_t I,267,9298
template <std::size_t I, typename PointerTy,267,9298
template <std::size_t I, typename PointerTy, unsigned IntBits,267,9298
template <std::size_t I, typename PointerTy, unsigned IntBits, typename IntType,267,9298
          typename PtrTraits,268,9379
decltype(269,9424
namespace std 280,9658
template <typename PointerTy,281,9674
template <typename PointerTy, unsigned IntBits,281,9674
template <typename PointerTy, unsigned IntBits, typename IntType,281,9674
          typename PtrTraits,282,9740
struct tuple_size<tuple_size283,9785
template <std::size_t I,287,9926
template <std::size_t I, typename PointerTy,287,9926
template <std::size_t I, typename PointerTy, unsigned IntBits,287,9926
template <std::size_t I, typename PointerTy, unsigned IntBits, typename IntType,287,9926
          typename PtrTraits,288,10007
    : std::conditional<std::conditional291,10149

/usr/include/llvm/ADT/PointerSumType.h,2010
#define LLVM_ADT_POINTERSUMTYPE_H10,404
template <typename TagT,70,2997
template <typename TagT, typename... MemberTs> class PointerSumType 70,2997
  using HelperT 71,3067
  union StorageT 82,3810
    StorageT(86,4006
    uintptr_t Value;88,4036
    typename HelperT::template Lookup<HelperT::MinTag>::PointerT MinTagPointer;90,4058
  StorageT Storage;93,4144
  void set(100,4297
  create(110,4769
  void clear(117,4968
  TagT getTag(119,5019
  template <TagT N> bool is(123,5115
  template <TagT N> typename HelperT::template Lookup<N>::PointerT get(125,5178
  typename HelperT::template Lookup<N>::PointerT cast(131,5404
  getAddrOfZeroTagPointer(141,5881
  getAddrOfZeroTagPointer(149,6235
  explicit operator bool(operator bool166,7104
  bool operator==(operator==169,7195
  bool operator!=(operator!=172,7301
  bool operator<(175,7407
  bool operator>(178,7511
  bool operator<=(operator<=181,7615
  bool operator>=(operator>=184,7721
  uintptr_t getOpaqueValue(188,7828
  void *getVoidPtr(getVoidPtr195,8011
namespace detail 200,8126
template <typename TagT,205,8363
struct PointerSumTypeHelper 206,8410
  template <TagT N,212,8771
  template <TagT N, typename PointerT,212,8771
  static PointerSumTypeMember<PointerSumTypeMember213,8828
  template <TagT N> struct Lookup 216,8997
  template <uintptr_t V,231,9613
  struct Min 232,9655
  struct Min<Min236,9805
  enum { NumTagBits 237,9864
  enum : uint64_t 242,10111
    PointerMask 243,10131
    TagMask 244,10190
  template <typename MemberT,249,10306
  struct Checker 250,10363
  template <typename MemberT> struct Checker<Checker254,10537
template <typename TagT,265,10922
  using SumType 267,11026
  using HelperT 268,11079
  enum { SomeTag 269,11146
  using SomePointerT 270,11184
  using SomePointerInfo 272,11275
  static inline SumType getEmptyKey(274,11330
  static inline SumType getTombstoneKey(278,11453
  static unsigned getHashValue(283,11593
  static bool isEqual(288,11764

/usr/include/llvm/ADT/PointerUnion.h,2064
#define LLVM_ADT_POINTERUNION_H16,600
  constexpr int bitsRequired(33,1057
  template <typename T, typename...> struct GetFirstType 42,1352
  template <typename ...PTs> class PointerUnionUIntTraits 48,1546
    static inline void *getAsVoidPointer(getAsVoidPointer50,1616
    static inline void *getFromVoidPointer(getFromVoidPointer51,1680
    Derived &operator=(operator=82,2779
class PointerUnion112,3977
  using First 126,4745
  using Base 127,4785
  PointerUnion(137,5082
  using Base::Base;138,5133
  bool isNull(142,5245
  explicit operator bool(operator bool144,5304
  template <typename T> inline bool is(150,5540
  template <typename T> inline T get(155,5733
  template <typename T> inline T dyn_cast(162,5972
  First const *getAddrOfPtr1(getAddrOfPtr1168,6166
  First *getAddrOfPtr1(getAddrOfPtr1174,6361
  const PointerUnion &operator=(operator=185,6829
  using Base::operator=;operator=;191,6987
  static inline PointerUnion getFromOpaqueValue(194,7083
bool operator==(operator==202,7265
bool operator!=(operator!=207,7420
bool operator<(212,7575
template <typename... PTs> struct CastInfoPointerUnionImpl 226,8083
  using From 227,8144
  template <typename To> static inline bool isPossible(229,8182
  template <typename To> static To doCast(233,8319
template <typename To,240,8571
  using From 244,8791
  using Impl 245,8828
  static inline bool isPossible(247,8878
  static To doCast(251,8971
  static inline To castFailed(253,9041
template <typename To,256,9094
struct PointerLikeTypeTraits<PointerLikeTypeTraits265,9491
  static inline void *getAsVoidPointer(getAsVoidPointer266,9544
  static inline PointerUnion<PTs...> getFromVoidPointer(270,9652
  static constexpr int NumLowBitsAvailable 276,9897
template <typename ...PTs> struct DenseMapInfo<DenseMapInfo281,10086
  using Union 282,10157
  using FirstInfo 283,10195
  static inline Union getEmptyKey(286,10295
  static inline Union getTombstoneKey(288,10376
  static unsigned getHashValue(292,10471
  static bool isEqual(297,10642

/usr/include/llvm/ADT/PriorityQueue.h,40
#define LLVM_ADT_PRIORITYQUEUE_H15,549

/usr/include/llvm/ADT/PriorityWorklist.h,280
#define LLVM_ADT_PRIORITYWORKLIST_H16,589
  class TestAndEraseFromMap 224,7350
    UnaryPredicateT P;225,7380
    MapT &M;M226,7403
    TestAndEraseFromMap(229,7427
    bool operator()(operator()232,7515
template <typename T,254,7993
class SmallPriorityWorklist255,8027

/usr/include/llvm/ADT/SCCIterator.h,1039
#define LLVM_ADT_SCCITERATOR_H23,957
  struct StackElement 56,2097
    NodeRef Node;57,2121
    ChildItTy NextChild;58,2178
    unsigned MinVisited;59,2254
    StackElement(61,2332
    bool operator==(operator==64,2461
  bool operator==(operator==118,4068
  scc_iterator &operator++(operator++122,4191
  reference operator*(127,4263
void scc_iterator<GraphT, GT>::DFSVisitOne(DFSVisitOne151,5146
void scc_iterator<GraphT, GT>::DFSVisitChildren(DFSVisitChildren163,5521
template <class GraphT, class GT> void scc_iterator<GraphT, GT>::GetNextSCC(GetNextSCC182,6172
bool scc_iterator<GraphT, GT>::hasCycle(hasCycle220,7592
template <class T> scc_iterator<T> scc_begin(233,8015
template <class T> scc_iterator<T> scc_end(238,8172
  struct NodeInfo 259,9225
    DenseSet<const EdgeType *> IncomingMSTEdges;263,9322
  NodesType &operator*(operator*302,10425
scc_member_iterator<GraphT, GT>::scc_member_iterator(scc_member_iterator306,10506
  struct EdgeComparer 323,11059
    bool operator()(operator()324,11083

/usr/include/llvm/ADT/STLFunctionalExtras.h,131
#define LLVM_ADT_STLFUNCTIONALEXTRAS_H16,607
  Ret operator()(operator()67,2457
  explicit operator bool(operator bool71,2569

/usr/include/llvm/ADT/ScopeExit.h,245
#define LLVM_ADT_SCOPEEXIT_H16,611
template <typename Callable> class scope_exit 26,757
  Callable ExitFunction;27,805
  explicit scope_exit(32,927
  scope_exit(34,997
  void release(42,1272
  ~scope_exit(44,1311
make_scope_exit(59,1704

/usr/include/llvm/ADT/ScopedHashTable.h,2609
#define LLVM_ADT_SCOPEDHASHTABLE_H31,1067
class ScopedHashTableVal 46,1438
  ScopedHashTableVal *NextInScope;NextInScope47,1465
  ScopedHashTableVal *NextForKey;NextForKey48,1500
  K Key;49,1534
  V Val;50,1543
  ScopedHashTableVal(52,1553
  const K &getKey(getKey55,1635
  const V &getValue(getValue56,1677
  V &getValue(getValue57,1721
  ScopedHashTableVal *getNextForKey(getNextForKey59,1754
  const ScopedHashTableVal *getNextForKey(getNextForKey60,1815
  ScopedHashTableVal *getNextInScope(getNextInScope61,1888
  static ScopedHashTableVal *Create(Create64,1986
  template <typename AllocatorTy> void Destroy(76,2490
template <typename K,83,2679
template <typename K, typename V,83,2679
template <typename K, typename V, typename KInfo 83,2679
template <typename K,117,3809
template <typename K, typename V,117,3809
template <typename K, typename V, typename KInfo 117,3809
  V &operator*(operator*124,4027
  V *operator->(operator->128,4126
  bool operator==(operator==132,4187
  bool operator!=(operator!=135,4282
  inline ScopedHashTableIterator& operator++(139,4378
  ScopedHashTableIterator operator++(144,4555
template <typename K,149,4693
template <typename K, typename V,149,4693
template <typename K, typename V, typename KInfo,149,4693
class ScopedHashTable 150,4765
  using AllocTy 151,4828
  using ScopeTy 156,5026
  using ScopeTy = ScopedHashTableScope<K, V,156,5026
  using ScopeTy = ScopedHashTableScope<K, V, KInfo,156,5026
  using size_type 157,5092
  friend class ScopedHashTableScope<K, V,160,5132
  friend class ScopedHashTableScope<K, V, KInfo,160,5132
  using ValTy 162,5196
  DenseMap<DenseMap164,5239
  DenseMap<K, ValTy*, KInfo> TopLevelMap;164,5239
  ScopeTy *CurScope CurScope165,5281
  ScopedHashTable(169,5352
  ~ScopedHashTable(173,5519
  using AllocTy::getAllocator;178,5646
  size_type count(181,5744
  V lookup(185,5824
  void insert(193,5983
  using iterator 197,6073
  using iterator = ScopedHashTableIterator<K, V,197,6073
  iterator end(199,6131
  iterator begin(201,6179
  ScopeTy *getCurScope(getCurScope208,6378
  const ScopeTy *getCurScope(getCurScope209,6424
  void insertIntoScope(215,6755
template <typename K,226,7170
template <typename K, typename V,226,7170
template <typename K, typename V, typename KInfo,226,7170
  ScopedHashTableScope(228,7287
template <typename K,234,7446
template <typename K, typename V,234,7446
template <typename K, typename V, typename KInfo,234,7446
ScopedHashTableScope<K, V, KInfo, Allocator>::~ScopedHashTableScope(~ScopedHashTableScope235,7516

/usr/include/llvm/ADT/SetOperations.h,247
#define LLVM_ADT_SETOPERATIONS_H16,626
void set_intersect(40,1287
S1Ty set_intersection_impl(49,1545
S1Ty set_intersection(60,1863
S1Ty set_difference(70,2124
void set_subtract(82,2476
void set_subtract(92,2848
bool set_is_subset(104,3196

/usr/include/llvm/ADT/SmallBitVector.h,3085
#define LLVM_ADT_SMALLBITVECTOR_H15,554
class SmallBitVector 35,1234
    NumBaseBits 43,1558
    SmallNumRawBits 47,1746
    SmallNumSizeBits 52,1984
    SmallNumDataBits 57,2197
  static_assert(60,2261
  class reference 67,2436
    SmallBitVector &TheVector;TheVector68,2456
    unsigned BitPos;69,2487
    reference(72,2519
    operator bool(89,2882
  BitVector *getPointer(getPointer95,3010
  void switchToSmall(100,3118
  void switchToLarge(106,3259
  uintptr_t getSmallRawBits(113,3534
  void setSmallRawBits(118,3619
  size_type getSmallSize(124,3758
  void setSmallSize(128,3848
  uintptr_t getSmallBits(133,3987
  void setSmallBits(137,4094
  explicit SmallBitVector(148,4451
  SmallBitVector(156,4673
  SmallBitVector(163,4828
  ~SmallBitVector(167,4900
  const_set_bits_iterator set_bits_begin(175,5103
  const_set_bits_iterator set_bits_end(179,5202
  iterator_range<const_set_bits_iterator> set_bits(183,5303
  bool isSmall(187,5426
  bool empty(190,5536
  size_type size(195,5684
  size_type count(200,5826
  bool any(209,6032
  bool all(216,6183
  bool none(223,6377
  int find_first(230,6568
  int find_last(240,6783
  int find_first_unset(251,7093
  int find_last_unset(262,7336
  int find_next(277,7789
  int find_next_unset(291,8250
  int find_prev(308,8839
  void clear(325,9233
  void resize(332,9363
  void reserve(348,9873
  SmallBitVector &set(set366,10345
  SmallBitVector &set(set374,10484
  SmallBitVector &set(set387,10865
  SmallBitVector &reset(reset401,11327
  SmallBitVector &reset(reset409,11458
  SmallBitVector &reset(reset418,11692
  SmallBitVector &flip(flip432,12163
  SmallBitVector &flip(flip440,12306
  SmallBitVector operator~(449,12510
    return getPointer()->operator[](Idx)operator[](Idx463,12908
  bool test(472,13124
  void push_back(477,13227
  void pop_back(482,13336
  bool anyCommon(488,13487
  bool operator==(operator==501,13905
  bool operator!=(operator!=517,14349
  SmallBitVector &operator&=(operator&=523,14548
  SmallBitVector &reset(reset540,15122
  bool test(554,15589
  SmallBitVector &operator|=(operator|=572,16058
  SmallBitVector &operator^=(operator^=585,16487
  SmallBitVector &operator<<=(operator<<=598,16916
  SmallBitVector &operator>>=(operator>>=606,17088
  const SmallBitVector &operator=(operator=615,17286
  const SmallBitVector &operator=(operator=632,17662
  void swap(640,17805
  void setBitsInMask(646,17966
  void clearBitsInMask(655,18279
  void setBitsNotInMask(664,18597
  void clearBitsNotInMask(673,18916
  void invalid(680,19129
  bool isInvalid(684,19196
  ArrayRef<uintptr_t> getData(686,19253
private:private693,19418
  void applyMask(695,19470
operator&(710,19867
operator|(717,20022
operator^(724,20177
template <> struct DenseMapInfo<DenseMapInfo730,20310
  static inline SmallBitVector getEmptyKey(731,20360
  static inline SmallBitVector getTombstoneKey(732,20434
  static unsigned getHashValue(737,20542
  static bool isEqual(743,20785
namespace std 751,21011
swap(755,21092

/usr/include/llvm/ADT/SmallPtrSet.h,2977
#define LLVM_ADT_SMALLPTRSET_H16,637
class SmallPtrSetImplBase 50,2094
  const void **SmallArray;SmallArray55,2278
  const void **CurArray;CurArray58,2422
  unsigned CurArraySize;60,2523
  unsigned NumNonEmpty;65,2732
  unsigned NumTombstones;67,2796
  SmallPtrSetImplBase(70,2878
  SmallPtrSetImplBase(72,2983
  explicit SmallPtrSetImplBase(75,3104
  ~SmallPtrSetImplBase(82,3425
  [[nodiscard]] bool empty(92,3611
  size_type size(93,3670
  void clear(95,3736
  static void *getTombstoneMarker(getTombstoneMarker111,4164
  static void *getEmptyMarker(getEmptyMarker113,4241
  const void **EndPointer(EndPointer119,4455
  std::pair<std::pair126,4802
  std::pair<const void *const *, bool> insert_imp(126,4802
  bool erase_imp(162,6110
  const void *const * find_imp(177,6595
  bool isSmall(195,7065
  std::pair<std::pair197,7124
class SmallPtrSetIteratorImpl 222,8034
  const void *const *Bucket;Bucket224,8077
  const void *const *End;End225,8106
  explicit SmallPtrSetIteratorImpl(228,8141
  bool operator==(operator==237,8358
  bool operator!=(operator!=240,8457
  void AdvanceIfNotValid(248,8741
  void RetreatIfNotValid(255,8976
    : public SmallPtrSetIteratorImpl,268,9398
      DebugEpochBase::HandleBase 269,9436
  const PtrTy operator*(285,9974
  inline SmallPtrSetIterator& operator++(295,10313
  SmallPtrSetIterator operator++(307,10608
template<unsigned N,321,11087
struct RoundUpToPowerOfTwoH 322,11125
  enum { Val 323,11155
    Val 330,11410
struct RoundUpToPowerOfTwo 335,11490
  enum { Val 336,11519
  enum { Val = RoundUpToPowerOfTwoH<N, (N&N336,11519
  enum { Val = RoundUpToPowerOfTwoH<N, (N&(N-N336,11519
class SmallPtrSetImpl 345,11898
  using ConstPtrType 346,11951
  using PtrTraits 347,12022
  using ConstPtrTraits 348,12074
  using SmallPtrSetImplBase::SmallPtrSetImplBase;352,12187
  using iterator 355,12246
  using const_iterator 356,12295
  using key_type 357,12350
  using value_type 358,12383
  std::pair<std::pair366,12735
  std::pair<iterator, bool> insert(366,12735
  iterator insert(374,13112
  bool erase(380,13304
  size_type count(384,13468
  iterator find(387,13592
  bool contains(390,13712
  void insert(395,13863
  void insert(400,13944
  iterator begin(404,14034
  iterator end(409,14177
  iterator makeIterator(413,14328
bool operator==(operator==425,14750
bool operator!=(operator!=441,15109
class SmallPtrSet 451,15578
  using BaseT 457,15914
  enum { SmallSizePowTwo 460,16023
  const void *SmallStorage[SmallStorage462,16151
  SmallPtrSet(465,16205
  SmallPtrSet(466,16263
  SmallPtrSet(467,16333
  SmallPtrSet(471,16457
  SmallPtrSet(475,16553
  SmallPtrSet<SmallPtrSet480,16694
  operator=(operator=481,16730
  SmallPtrSet<SmallPtrSet487,16860
  operator=(operator=488,16896
  SmallPtrSet<SmallPtrSet494,17049
  operator=(operator=495,17085
  void swap(502,17261
namespace std 509,17382
  inline void swap(513,17487

/usr/include/llvm/ADT/SmallSet.h,1325
#define LLVM_ADT_SMALLSET_H15,539
class SmallSetIterator34,1076
  using SetIterTy = typename std::set<T, C>::const_iterator;const_iterator38,1235
  using VecIterTy = typename SmallVector<T, N>::const_iterator;const_iterator39,1296
  using SelfTy = SmallSetIterator<T, N,40,1360
    SetIterTy SetIter;45,1522
    VecIterTy VecIter;46,1545
  bool isSmall;49,1574
  SmallSetIterator(52,1599
  SmallSetIterator(54,1676
  ~SmallSetIterator(58,1911
  SmallSetIterator(65,2022
  SmallSetIterator(74,2345
  SmallSetIterator& operator=(operator=83,2685
  SmallSetIterator& operator=(operator=97,3092
  bool operator==(operator==111,3516
  SmallSetIterator &operator++(operator++119,3717
  const T &operator*(operator*127,3851
template <typename T,134,4203
template <typename T, unsigned N,134,4203
template <typename T, unsigned N, typename C 134,4203
template <typename PointeeType,255,7726
class SmallSet<PointeeType*, N> : public SmallPtrSet<SmallPtrSet256,7770
template <typename T,266,8223
template <typename T, unsigned LN,266,8223
template <typename T, unsigned LN, unsigned RN,266,8223
bool operator==(operator==267,8283
template <typename T,278,8644
template <typename T, unsigned LN,278,8644
template <typename T, unsigned LN, unsigned RN,278,8644
bool operator!=(operator!=279,8704

/usr/include/llvm/ADT/SmallVectorExtras.h,72
#define LLVM_ADT_SMALLVECTOREXTRAS_H15,570
auto map_to_vector(29,1023

/usr/include/llvm/ADT/SparseMultiSet.h,927
#define LLVM_ADT_SPARSEMULTISET_H22,989
  struct SMSNode 96,4468
    ValueT Data;99,4533
    unsigned Prev;100,4550
    unsigned Next;101,4569
    SMSNode(103,4589
    bool isTail(106,4706
    bool isTombstone(111,4845
    bool isValid(117,5008
  template <typename SMSPtrTy> class iterator_base 219,8635
    SMSPtrTy SMS;230,8952
    unsigned Idx;231,8970
    unsigned SparseIdx;232,8988
    iterator_base(234,9013
    bool isEnd(238,9176
    bool isKeyed(247,9436
    unsigned Prev(249,9500
    unsigned Next(250,9559
    void setPrev(252,9619
    void setNext(253,9678
    reference operator*(256,9748
    pointer operator->(262,9969
    bool operator==(operator==265,10055
    bool operator!=(operator!=276,10355
    iterator_base &operator--(operator--281,10489
    iterator_base &operator++(operator++294,10896
    iterator_base operator--(299,11081
    iterator_base operator++(304,11201

/usr/include/llvm/ADT/Statistic.h,1609
#define LLVM_ADT_STATISTIC_H27,1119
#define LLVM_ENABLE_STATS 39,1494
#define LLVM_ENABLE_STATS 41,1528
class TrackingStatistic 50,1641
  const char *const DebugType;52,1675
  const char *const Name;53,1706
  const char *const Desc;54,1732
  std::atomic<uint64_t> Value;56,1759
  std::atomic<bool> Initialized;57,1790
  constexpr TrackingStatistic(59,1824
  const char *getDebugType(getDebugType64,2038
  const char *getName(getName65,2095
  const char *getDesc(getDesc66,2142
  uint64_t getValue(68,2190
  operator uint64_t(operator uint64_t71,2319
  const TrackingStatistic &operator=(operator=73,2371
  const TrackingStatistic &operator++(operator++78,2497
  uint64_t operator++(83,2614
  const TrackingStatistic &operator--(operator--88,2718
  uint64_t operator--(93,2835
  const TrackingStatistic &operator+=(operator+=98,2939
  const TrackingStatistic &operator-=(operator-=105,3102
  void updateMax(112,3265
  TrackingStatistic &init(init123,3626
class NoopStatistic 132,3792
  NoopStatistic(134,3822
  uint64_t getValue(137,3932
  operator uint64_t(operator uint64_t140,4025
  const NoopStatistic &operator=(operator=142,4068
  const NoopStatistic &operator++(operator++144,4134
  uint64_t operator++(146,4189
  const NoopStatistic &operator--(operator--148,4231
  uint64_t operator--(150,4286
  const NoopStatistic &operator+=(operator+=152,4328
  const NoopStatistic &operator-=(operator-=154,4400
  void updateMax(156,4472
using Statistic 160,4530
using Statistic 162,4573
#define STATISTIC(167,4762
#define ALWAYS_ENABLED_STATISTIC(172,5038

/usr/include/llvm/ADT/StringMap.h,1718
#define LLVM_ADT_STRINGMAP_H15,541
class StringMapImpl 32,1070
  unsigned ItemSize;41,1445
  explicit StringMapImpl(44,1478
  StringMapImpl(45,1546
  StringMapImpl(55,1848
  unsigned RehashTable(56,1903
  unsigned LookupBucketFor(63,2294
  int FindKey(68,2532
  unsigned getNumBuckets(91,3379
  unsigned getNumItems(92,3435
  bool empty(94,3488
  unsigned size(95,3535
  void swap(97,3581
template <typename ValueTy,109,4100
template <typename ValueTy, typename AllocatorTy 109,4100
  StringMap &operator=(operator=173,6535
  bool operator==(operator==265,9547
  bool operator!=(operator!=282,9907
template <typename DerivedTy,397,14054
class StringMapIterBase398,14102
  StringMapEntryBase **Ptr Ptr402,14254
  explicit StringMapIterBase(407,14335
  DerivedTy &operator=(operator=414,14526
  friend bool operator==(operator==419,14645
  DerivedTy &operator++(operator++423,14752
  DerivedTy operator++(429,14887
  void AdvancePastEmptyBuckets(436,15002
class StringMapConstIterator443,15158
  using base 446,15315
  explicit StringMapConstIterator(451,15493
  const StringMapEntry<ValueTy> &operator*(operator*455,15650
class StringMapIterator 461,15809
  using base 463,15966
  explicit StringMapIterator(468,16101
  StringMapEntry<ValueTy> &operator*(operator*472,16248
  operator StringMapConstIterator<ValueTy>(operator StringMapConstIterator<ValueTy>476,16364
class StringMapKeyIterator482,16514
  using base 486,16750
                                     StringMapConstIterator<StringMapConstIterator487,16818
                                     std::forward_iterator_tag,488,16888
  explicit StringMapKeyIterator(492,17009
  StringRef operator*(495,17113

/usr/include/llvm/ADT/StringMapEntry.h,878
#define LLVM_ADT_STRINGMAPENTRY_H17,715
class StringMapEntryBase 25,893
  size_t keyLength;26,920
  explicit StringMapEntryBase(29,949
  size_t getKeyLength(31,1024
  static void *allocateWithKey(allocateWithKey38,1334
void *StringMapEntryBase::allocateWithKey(allocateWithKey44,1553
class StringMapEntryStorage 69,2580
  ValueTy second;71,2646
  explicit StringMapEntryStorage(73,2665
  StringMapEntryStorage(76,2799
  const ValueTy &getValue(getValue81,3016
  ValueTy &getValue(getValue82,3069
  void setValue(84,3111
class StringMapEntryStorage<StringMapEntryStorage88,3177
  explicit StringMapEntryStorage(90,3259
  std::nullopt_t getValue(95,3480
template <std::size_t Index,152,5697
decltype(153,5744
namespace std 163,5933
struct tuple_size<tuple_size165,5977
template <std::size_t I,168,6076
    : std::conditional<std::conditional170,6174

/usr/include/llvm/ADT/StringSet.h,36
#define LLVM_ADT_STRINGSET_H15,553

/usr/include/llvm/ADT/TinyPtrVector.h,1166
#define LLVM_ADT_TINYPTRVECTOR_H10,403
class TinyPtrVector 29,919
  PtrUnion Val;40,1355
  ~TinyPtrVector(45,1410
  TinyPtrVector(50,1506
  TinyPtrVector &operator=(operator=55,1651
  TinyPtrVector(83,2354
  TinyPtrVector &operator=(operator=87,2443
  TinyPtrVector(113,3064
  explicit TinyPtrVector(123,3471
  TinyPtrVector(130,3724
  operator ArrayRef<EltTy>(operator ArrayRef<EltTy>136,3981
  operator MutableArrayRef<EltTy>(operator MutableArrayRef<EltTy>145,4218
      typename U,155,4492
      std::enable_if_t<std::enable_if_t156,4510
  operator ArrayRef<U>(operator ArrayRef<U>158,4629
  bool empty(162,4706
  unsigned size(171,4984
  iterator begin(184,5329
  iterator end(191,5455
  const_iterator begin(198,5590
  const_iterator end(202,5698
  reverse_iterator rbegin(206,5802
  reverse_iterator rend(207,5866
  const_reverse_iterator rbegin(209,5931
  const_reverse_iterator rend(213,6020
  EltTy front(228,6456
  EltTy back(235,6621
  void push_back(242,6784
  void pop_back(261,7269
  void clear(269,7468
  iterator erase(280,7770
  iterator erase(296,8296
  iterator insert(310,8728
  iterator insert(330,9312

/usr/include/llvm/ADT/TypeSwitch.h,785
#define LLVM_ADT_TYPESWITCH_H16,617
template <typename DerivedT, typename T> class TypeSwitchBase 25,772
  TypeSwitchBase(27,844
  TypeSwitchBase(28,895
  template <typename CaseT,37,1251
  template <typename CaseT, typename CaseT2,37,1251
  template <typename CaseT, typename CaseT2, typename... CaseTs,37,1251
  Case(44,1652
  template <typename CallableT> DerivedT &Case(Case54,2075
protected:protected63,2470
  template <typename CastT,72,2852
  static decltype(73,2897
  template <typename CastT,82,3225
  static decltype(83,3270
  const T value;91,3509
template <typename T,106,4035
template <typename T, typename ResultT 106,4035
  [[nodiscard]] operator ResultT(operator ResultT140,5109
    : public detail::TypeSwitchBase<detail::TypeSwitchBase154,5492

/usr/include/llvm/ADT/Uniformity.h,142
#define LLVM_ADT_UNIFORMITY_H10,400
enum class InstructionUniformity 18,723
  Default,20,835
  AlwaysUniform,23,891
  NeverUniform26,969

/usr/include/llvm/ADT/UniqueVector.h,411
#define LLVM_ADT_UNIQUEVECTOR_H10,402
template<class T> class UniqueVector 24,899
  std::map<std::map32,1175
  std::map<T, unsigned> Map;32,1175
  VectorType Vector;35,1283
  unsigned insert(40,1448
  unsigned idFor(57,1895
  iterator begin(75,2431
  const_iterator begin(78,2531
  iterator end(81,2641
  const_iterator end(84,2735
  size_t size(87,2848
  bool empty(90,2948
  void reset(93,3035

/usr/include/llvm/ADT/edit_distance.h,79
#define LLVM_ADT_EDIT_DISTANCE_H17,677
unsigned ComputeEditDistance(106,4017

/usr/include/llvm/ADT/fallible_iterator.h,1124
#define LLVM_ADT_FALLIBLE_ITERATOR_H10,407
template <typename Underlying> class fallible_iterator 68,2531
      !std::is_void<decltype(std::declval<T>().operator->())>::value,value72,2682
  static fallible_iterator itr(84,3204
  static fallible_iterator end(94,3589
  decltype(auto) operator*(99,3748
  decltype(auto) operator*(102,3853
  enable_if_struct_deref_supported<T> operator->(107,4052
  enable_if_struct_deref_supported<const T> operator->(114,4291
  fallible_iterator &operator++(operator++125,4699
  fallible_iterator &operator--(operator--141,5227
  friend bool operator==(operator==162,6134
  friend bool operator!=(operator!=189,6904
  fallible_iterator(195,7056
  Error *getErrPtr(getErrPtr198,7152
  bool isEnd(200,7214
  bool isValid(202,7271
  void handleError(204,7326
  void resetCheckedFlag(210,7459
  Underlying I;214,7529
  mutable PointerIntPair<PointerIntPair215,7545
  mutable PointerIntPair<Error *, 1> ErrState;215,7545
fallible_iterator<Underlying> make_fallible_itr(221,7756
fallible_iterator<Underlying> make_fallible_end(228,8040
make_fallible_range(234,8243

/usr/include/llvm/ADT/identity.h,149
#define LLVM_ADT_IDENTITY_H16,611
template <class Ty> struct identity 22,701
  Ty &operator(operator26,799
  const Ty &operator(operator29,855

/usr/include/llvm/ADT/ilist.h,3097
#define LLVM_ADT_ILIST_H25,1117
template <typename NodeTy> struct ilist_alloc_traits 41,1534
  static void deleteNode(42,1589
template <typename NodeTy> struct ilist_noalloc_traits 57,2052
  static void deleteNode(58,2109
template <typename NodeTy> struct ilist_callback_traits 65,2303
  void addNodeToList(66,2361
  void removeNodeFromList(67,2395
  void transferNodesFromList(72,2568
struct ilist_node_traits 83,2927
struct ilist_traits 90,3165
template <typename Ty> struct ilist_traits<ilist_traits93,3272
class iplist_impl 110,4052
  typedef IntrusiveListT base_list_type;111,4105
  typedef typename base_list_type::pointer pointer;114,4155
  typedef typename base_list_type::const_pointer const_pointer;115,4207
  typedef typename base_list_type::reference reference;116,4271
  typedef typename base_list_type::const_reference const_reference;117,4327
  typedef typename base_list_type::value_type value_type;118,4395
  typedef typename base_list_type::size_type size_type;119,4453
  typedef typename base_list_type::difference_type difference_type;120,4509
  typedef typename base_list_type::iterator iterator;121,4577
  typedef typename base_list_type::const_iterator const_iterator;122,4631
  typedef typename base_list_type::reverse_iterator reverse_iterator;123,4697
      typename base_list_type::const_reverse_iterator const_reverse_iterator;125,4777
  static bool op_less(128,4865
  static bool op_equal(129,4943
  iplist_impl(137,5162
  iplist_impl &operator=(operator=140,5319
  ~iplist_impl(147,5556
  size_type max_size(150,5627
  using base_list_type::begin;152,5683
  using base_list_type::end;153,5714
  using base_list_type::rbegin;154,5743
  using base_list_type::rend;155,5775
  using base_list_type::empty;156,5805
  using base_list_type::front;157,5836
  using base_list_type::back;158,5867
  void swap(160,5898
  iterator insert(165,6040
  iterator insert(170,6213
  iterator insertAfter(174,6328
  template <class Cloner> void cloneFrom(182,6509
  pointer remove(188,6667
  pointer remove(195,6863
  pointer remove(200,6958
  pointer remove(201,7020
  iterator erase(204,7159
  iterator erase(209,7254
  iterator erase(210,7315
  void clearAndLeakNodesUnsafely(217,7642
  void transfer(223,7834
  using base_list_type::size;238,8274
  iterator erase(240,8305
  void clear(246,8431
  void push_front(249,8507
  void push_back(250,8564
  void pop_front(251,8618
  void pop_back(255,8717
  template<class InIt> void insert(261,8863
  void splice(266,9056
  void splice(270,9179
  void splice(275,9383
  void splice(278,9524
  void splice(281,9626
  void merge(286,9754
  void merge(292,9953
  using base_list_type::sort;294,10021
  pointer getPrevNode(297,10114
  const_pointer getPrevNode(304,10324
  pointer getNextNode(309,10493
  const_pointer getNextNode(316,10706
class iplist327,11123
  using iplist_impl_type 329,11209
  iplist(337,11382
  iplist &operator=(operator=338,11439
template <class T, class... Options> using ilist 344,11558
namespace std 348,11658
  void swap(352,11745

/usr/include/llvm/ADT/ilist_base.h,469
#define LLVM_ADT_ILIST_BASE_H10,400
template <bool EnableSentinelTracking> class ilist_base 18,569
  static void insertBeforeImpl(22,702
  static void removeImpl(30,913
  static void removeRangeImpl(41,1207
  static void transferBeforeImpl(52,1549
  template <class T> static void insertBefore(76,2326
  template <class T> static void remove(80,2425
  template <class T> static void removeRange(81,2490
  template <class T> static void transferBefore(85,2595

/usr/include/llvm/ADT/ilist_node_base.h,474
#define LLVM_ADT_ILIST_NODE_BASE_H10,405
template <> class ilist_node_base<ilist_node_base35,1086
  PointerIntPair<PointerIntPair36,1128
  PointerIntPair<ilist_node_base *, 1> PrevAndSentinel;36,1128
  ilist_node_base *Next Next37,1184
  void setPrev(40,1228
  void setNext(41,1304
  ilist_node_base *getPrev(getPrev42,1365
  ilist_node_base *getNext(getNext43,1441
  bool isSentinel(45,1494
  bool isKnownSentinel(46,1557
  void initializeSentinel(47,1613

/usr/include/llvm/ADT/iterator.h,2083
#define LLVM_ADT_ITERATOR_H10,398
    IsRandomAccess 90,3572
                                     IteratorCategoryT>IteratorCategoryT91,3642
                                     IteratorCategoryT>::value,value91,3642
    IsBidirectional 92,3706
                                      IteratorCategoryT>IteratorCategoryT93,3777
                                      IteratorCategoryT>::value,value93,3777
  class ReferenceProxy 101,4193
    DerivedT I;104,4252
    ReferenceProxy(106,4269
    operator ReferenceT(operator ReferenceT109,4332
  class PointerProxy 116,4681
    ReferenceT R;119,4738
    PointerProxy(122,4786
    PointerT operator->(125,4854
  DerivedT operator+(129,4915
  friend DerivedT operator+(139,5312
  DerivedT operator-(145,5519
  DerivedT &operator++(operator++154,5776
  DerivedT operator++(159,6005
  DerivedT &operator--(operator--164,6143
  DerivedT operator--(170,6355
  bool operator!=(operator!=180,6658
  bool operator>(185,6776
  bool operator<=(operator<=192,7067
  bool operator>=(operator>=198,7298
  PointerProxy operator->(205,7530
    typename DerivedT,221,8176
    typename DerivedT, typename WrappedIteratorT,221,8176
    typename IteratorCategoryT 222,8226
  DerivedT &operator+=(operator+=255,9639
  DerivedT &operator-=(operator-=262,9867
  difference_type operator-(270,10121
  DerivedT &operator++(operator++280,10498
  DerivedT &operator--(operator--285,10608
  friend bool operator==(operator==293,10823
  friend bool operator<(297,10974
  ReferenceT operator*(305,11252
template <typename WrappedIteratorT,317,11627
          typename T 318,11664
  T &operator*(operator*330,12143
template <typename RangeT,333,12192
template <typename RangeT, typename WrappedIteratorT 333,12192
template <typename WrappedIteratorT,342,12635
          typename T 343,12672
  T &operator*(operator*357,13133
template <typename RangeT,360,13188
template <typename RangeT, typename WrappedIteratorT 360,13188
template <typename WrappedIteratorT,369,13631
          typename T1 370,13668

/usr/include/llvm/ADT/APFixedPoint.h,2301
#define LLVM_ADT_APFIXEDPOINT_H17,638
class FixedPointSemantics 35,1257
  struct Lsb 41,1500
    int LsbWeight;42,1515
  FixedPointSemantics(44,1539
  FixedPointSemantics(48,1813
  bool isValidLegacySema(59,2397
  unsigned getWidth(62,2504
  unsigned getScale(63,2550
  int getLsbWeight(64,2630
  int getMsbWeight(65,2679
  bool isSigned(68,2790
  bool isSaturated(69,2835
  bool hasUnsignedPadding(70,2886
  void setSaturated(72,2952
  bool hasSignOrPaddingBit(75,3093
  unsigned getIntegralBits(80,3345
  static FixedPointSemantics GetIntegerSemantics(104,4485
  bool operator==(operator==111,4798
  bool operator!=(operator!=116,5058
  unsigned Width          : WidthBitWidth;119,5149
  signed int LsbWeight    : LsbWeightBitWidth;120,5192
  unsigned IsSigned 121,5239
  unsigned IsSaturated 122,5270
  unsigned HasUnsignedPadding 123,5301
inline hash_code hash_value(128,5394
template <> struct DenseMapInfo<DenseMapInfo132,5505
  static inline FixedPointSemantics getEmptyKey(133,5560
  static inline FixedPointSemantics getTombstoneKey(137,5676
  static unsigned getHashValue(141,5796
  static bool isEqual(145,5894
class APFixedPoint 154,6390
  APFixedPoint(156,6419
  APFixedPoint(162,6667
  APFixedPoint(166,6832
  APSInt getValue(168,6908
  inline unsigned getWidth(169,6976
  inline unsigned getScale(170,7039
  int getLsbWeight(171,7102
  int getMsbWeight(172,7161
  inline bool isSaturated(173,7220
  inline bool isSigned(174,7285
  inline bool hasPadding(175,7344
  FixedPointSemantics getSemantics(176,7415
  bool getBoolValue(178,7476
  APFixedPoint shr(199,8668
  APSInt getIntPart(212,9133
  std::string toString(235,10201
  bool operator==(operator==246,10490
  bool operator!=(operator!=249,10579
  bool operator>(252,10668
  bool operator<(253,10749
  bool operator>=(operator>=254,10830
  bool operator<=(operator<=257,10919
  APSInt Val;288,12503
  FixedPointSemantics Sema;289,12517
inline raw_ostream &operator<<(operator<<292,12549
inline hash_code hash_value(297,12662
template <> struct DenseMapInfo<DenseMapInfo301,12779
  static inline APFixedPoint getEmptyKey(302,12827
  static inline APFixedPoint getTombstoneKey(306,12952
  static unsigned getHashValue(310,13085
  static bool isEqual(314,13176

/usr/include/llvm/ADT/APFloat.h,5997
#define LLVM_ADT_APFLOAT_H16,642
#define APFLOAT_DISPATCH_ON_SEMANTICS(24,828
enum lostFraction 48,1769
  lfExactlyZero,49,1819
  lfLessThanHalf,50,1849
  lfExactlyHalf,51,1897
  lfMoreThanHalf 52,1927
struct APFloatBase 142,6596
  typedef APInt::WordType integerPart;143,6617
  static constexpr unsigned integerPartWidth 144,6656
  typedef int32_t ExponentType;147,6809
  enum Semantics 151,6889
    S_IEEEhalf,152,6908
    S_BFloat,153,6924
    S_IEEEsingle,154,6938
    S_IEEEdouble,155,6956
    S_IEEEquad,156,6974
    S_PPCDoubleDouble,157,6990
    S_Float8E5M2,160,7159
    S_Float8E5M2FNUZ,167,7590
    S_Float8E4M3FN,172,7906
    S_Float8E4M3FNUZ,179,8337
    S_Float8E4M3B11FNUZ,186,8724
    S_FloatTF32,190,8970
    S_x87DoubleExtended,192,8988
    S_MaxSemantics 193,9013
  enum cmpResult 220,10179
    cmpLessThan,221,10198
    cmpEqual,222,10215
    cmpGreaterThan,223,10229
    cmpUnordered224,10249
  using roundingMode 228,10324
  static constexpr roundingMode rmNearestTiesToEven 230,10368
  static constexpr roundingMode rmTowardPositive 232,10503
  static constexpr roundingMode rmTowardNegative 233,10584
  static constexpr roundingMode rmTowardZero 234,10665
  static constexpr roundingMode rmNearestTiesToAway 235,10742
  enum opStatus 246,11258
    opOK 247,11276
    opInvalidOp 248,11293
    opDivByZero 249,11317
    opOverflow 250,11341
    opUnderflow 251,11364
    opInexact 252,11388
  enum fltCategory 256,11464
    fcInfinity,257,11485
    fcNaN,258,11501
    fcNormal,259,11512
    fcZero260,11526
  enum uninitializedTag 264,11610
    uninitialized265,11636
  enum IlogbErrorKinds 269,11705
    IEK_Zero 270,11730
    IEK_NaN 271,11758
    IEK_Inf 272,11781
namespace detail 291,12561
  union Significand 653,26270
    integerPart part;654,26292
    integerPart *parts;parts655,26314
class APFloat 780,31289
  typedef detail::IEEEFloat IEEEFloat;781,31326
  typedef detail::DoubleAPFloat DoubleAPFloat;782,31365
  union Storage 786,31474
    const fltSemantics *semantics;semantics787,31492
    IEEEFloat IEEE;788,31527
    DoubleAPFloat Double;789,31547
    explicit Storage(792,31632
    Storage(798,31809
    ~Storage(810,32230
    Storage(822,32508
    Storage(834,32837
    Storage &operator=(operator=846,33183
    Storage &operator=(operator=860,33627
  } U;873,34098
  template <typename T> static bool usesLayout(875,34106
  IEEEFloat &getIEEE(getIEEE884,34451
  const IEEEFloat &getIEEE(getIEEE892,34683
  void makeZero(900,34927
  void makeInf(902,35004
  void makeNaN(904,35079
  void makeLargest(908,35202
  void makeSmallest(912,35291
  void makeSmallestNormalized(916,35382
  explicit APFloat(920,35493
  explicit APFloat(921,35572
  cmpResult compareAbsoluteValue(924,35662
  APFloat(935,36113
  APFloat(937,36227
  template <typename T,938,36304
            typename 939,36328
  APFloat(942,36533
  APFloat(944,36631
  explicit APFloat(945,36709
  explicit APFloat(946,36773
  bool needsCleanup(952,36939
  static APFloat getZero(957,37133
  static APFloat getInf(966,37412
  static APFloat getNaN(977,37807
  static APFloat getQNaN(988,38134
  static APFloat getSNaN(996,38398
  static APFloat getLargest(1006,38763
  static APFloat getSmallest(1016,39152
  static APFloat getSmallestNormalized(1026,39487
  opStatus add(1042,40050
  opStatus subtract(1051,40463
  opStatus multiply(1060,40891
  opStatus divide(1069,41319
  opStatus remainder(1078,41741
  opStatus mod(1087,42147
  opStatus fusedMultiplyAdd(1096,42535
  opStatus roundToIntegral(1109,43265
  opStatus next(1115,43457
  APFloat operator-(1120,43571
  APFloat operator+(1128,43761
  APFloat operator-(1136,43997
  APFloat operator*(1144,44238
  APFloat operator/(1152,44496
  void changeSign(1158,44646
  void clearSign(1159,44715
  void copySign(1163,44782
  static APFloat copySign(1170,44999
  APFloat makeQuiet(1177,45231
  opStatus convertToInteger(1185,45452
  opStatus convertFromAPInt(1193,45861
  opStatus convertFromSignExtendedInteger(1197,46049
  opStatus convertFromZeroExtendedInteger(1203,46371
  APInt bitcastToAPInt(1210,46758
  bool operator==(operator==1228,47440
  bool operator!=(operator!=1230,47522
  bool operator<(1232,47604
  bool operator>(1236,47694
  bool operator<=(operator<=1240,47787
  bool operator>=(operator>=1245,47922
  cmpResult compare(1250,48060
  bool bitwiseIsEqual(1260,48464
  bool isExactlyValue(1278,49303
  unsigned int convertToHexString(1285,49491
  bool isZero(1291,49735
  bool isInfinity(1292,49793
  bool isNaN(1293,49859
  bool isNegative(1295,49916
  bool isDenormal(1296,49977
  bool isSignaling(1297,50052
  bool isNormal(1299,50116
  bool isFinite(1300,50187
  fltCategory getCategory(1302,50250
  const fltSemantics &getSemantics(getSemantics1303,50320
  bool isNonZero(1304,50388
  bool isFiniteNonZero(1305,50435
  bool isPosZero(1306,50502
  bool isNegZero(1307,50565
  bool isPosInfinity(1308,50627
  bool isNegInfinity(1309,50698
  bool isSmallest(1310,50768
  bool isLargest(1311,50843
  bool isInteger(1312,50916
  bool isIEEE(1313,50989
  bool isSmallestNormalized(1315,51062
  void toString(1325,51364
  bool getExactInverse(1334,51689
  int getExactLog2Abs(1339,51812
  int getExactLog2(1344,51919
inline APFloat scalbn(1361,52486
inline APFloat frexp(1373,53061
inline APFloat abs(1381,53494
inline APFloat neg(1387,53605
inline APFloat minnum(1395,53843
inline APFloat maxnum(1406,54164
inline APFloat minimum(1417,54465
inline APFloat maximum(1430,54871
namespace detail 1444,55417
DoubleAPFloat &DoubleAPFloat::operator=(operator=1446,55437
APFloat &DoubleAPFloat::getFirst(getFirst1454,55619
const APFloat &DoubleAPFloat::getFirst(getFirst1455,55676
APFloat &DoubleAPFloat::getSecond(getSecond1456,55745
const APFloat &DoubleAPFloat::getSecond(getSecond1457,55803
#undef APFLOAT_DISPATCH_ON_SEMANTICS1463,55918

/usr/include/llvm/ADT/Any.h,713
#define LLVM_ADT_ANY_H17,717
  template <typename T> struct TypeId 36,1348
  template <typename T> struct TypeId { static char Id;36,1348
  struct StorageBase 38,1408
  template <typename T> struct StorageImpl 44,1575
    explicit StorageImpl(45,1641
    explicit StorageImpl(47,1701
    std::unique_ptr<StorageBase> clone(49,1767
    const void *id(id53,1886
    T Value;55,1950
  Any &operator=(operator=100,3760
template <typename T> char Any::TypeId<T>::Id Id136,5175
template <class T> T any_cast(138,5227
template <class T> T any_cast(143,5388
template <class T> T any_cast(148,5543
template <class T> const T *any_cast(any_cast153,5710
template <class T> T *any_cast(any_cast160,5924

/usr/include/llvm/ADT/BitVector.h,3621
#define LLVM_ADT_BITVECTOR_H15,544
template <typename BitVectorT> class const_set_bits_iterator_impl 34,998
  const BitVectorT &Parent;Parent35,1066
  void advance(38,1114
  const_set_bits_iterator_impl(50,1452
  explicit const_set_bits_iterator_impl(52,1566
  const_set_bits_iterator_impl operator++(56,1782
  const_set_bits_iterator_impl &operator++(operator++62,1891
  unsigned operator*(67,1976
  bool operator==(operator==69,2026
  bool operator!=(operator!=75,2237
class BitVector 82,2451
  typedef uintptr_t BitWord;83,2469
  enum { BITWORD_SIZE 85,2499
  using Storage 90,2665
  Storage Bits;92,2706
  unsigned Size 93,2739
  using size_type 96,2799
  class reference 99,2866
    BitWord *WordRef;WordRef101,2887
    unsigned BitPos;102,2909
    reference(105,2941
    reference &operator=(operator=113,3142
    reference& operator=(operator=118,3232
    operator bool(operator bool126,3405
  typedef const_set_bits_iterator_impl<BitVector> const_set_bits_iterator;131,3502
  typedef const_set_bits_iterator set_iterator;132,3577
  const_set_bits_iterator set_bits_begin(134,3626
  const_set_bits_iterator set_bits_end(137,3724
  iterator_range<const_set_bits_iterator> set_bits(140,3824
  explicit BitVector(149,4159
  bool empty(156,4372
  size_type size(159,4475
  size_type count(162,4574
  bool any(170,4761
  bool all(175,4896
  bool none(188,5311
  int find_first_in(195,5540
  int find_last_in(230,6694
  int find_first_unset_in(261,7651
  int find_last_unset_in(267,7923
  int find_first(300,8920
  int find_last(304,9076
  int find_next(308,9268
  int find_prev(312,9496
  int find_first_unset(316,9678
  int find_next_unset(320,9890
  int find_last_unset(326,10090
  int find_prev_unset(330,10311
  void clear(335,10452
  void resize(341,10551
  void reserve(348,10712
  BitVector &set(set351,10796
  BitVector &set(set357,10887
  BitVector &set(set364,11110
  BitVector &reset(reset392,11958
  BitVector &reset(reset397,12027
  BitVector &reset(reset403,12214
  BitVector &flip(flip431,13070
  BitVector &flip(flip438,13185
  bool back(456,13711
  bool test(461,13835
  void push_back(466,13938
  void pop_back(483,14352
  bool anyCommon(489,14503
  bool operator==(operator==499,14806
  bool operator!=(operator!=506,15026
  BitVector &operator&=(operator&=509,15144
  BitVector &reset(reset526,15714
  bool test(536,16048
  static BitVector &apply(apply552,16445
  BitVector &operator|=(operator|=565,16950
  BitVector &operator^=(operator^=573,17166
  BitVector &operator>>=(operator>>=581,17382
  BitVector &operator<<=(operator<<=630,19191
  void swap(680,21084
  void invalid(685,21181
  bool isInvalid(689,21264
  ArrayRef<BitWord> getData(691,21323
  void setBitsInMask(707,22123
  void clearBitsInMask(713,22372
  void setBitsNotInMask(719,22626
  void clearBitsNotInMask(725,22882
  void wordShl(744,23874
  void wordShr(762,24473
  int next_unset_in_word(772,24736
  unsigned NumBitWords(777,24918
  void set_unused_bits(782,25058
  void clear_unused_bits(794,25421
  void init_words(798,25483
  template<bool AddBits,802,25573
  void applyMask(803,25615
  size_type getMemorySize(831,26610
  size_type getBitCapacity(832,26686
inline BitVector::size_type capacity_in_bytes(835,26764
template <> struct DenseMapInfo<DenseMapInfo839,26863
  static inline BitVector getEmptyKey(840,26908
  static inline BitVector getTombstoneKey(841,26963
  static unsigned getHashValue(846,27061
  static bool isEqual(850,27259
namespace std 858,27475
inline void swap(860,27545

/usr/include/llvm/ADT/BitmaskEnum.h,1292
#define LLVM_ADT_BITMASKENUM_H10,401
#define LLVM_MARK_AS_BITMASK_ENUM(42,1459
#define LLVM_DECLARE_ENUM_AS_BITMASK(66,2404
#define LLVM_ENABLE_BITMASK_ENUMS_IN_NAMESPACE(83,3266
namespace BitmaskEnumDetail 117,4827
template <typename E> constexpr std::underlying_type_t<E> Mask(121,4949
template <typename E> constexpr std::underlying_type_t<E> Underlying(129,5309
constexpr unsigned bitWidth(136,5580
template <typename E,140,5676
template <typename E, typename 140,5676
template <typename E,145,5820
template <typename E, typename 145,5820
constexpr E operator~(146,5898
template <typename E,150,5987
template <typename E, typename 150,5987
constexpr E operator|(151,6065
template <typename E,155,6166
template <typename E, typename 155,6166
constexpr E operator&(156,6244
template <typename E,160,6345
template <typename E, typename 160,6345
constexpr E operator^(161,6423
template <typename E,168,6630
template <typename E, typename 168,6630
E &operator|=(operator|=169,6708
template <typename E,174,6775
template <typename E, typename 174,6775
E &operator&=(operator&=175,6853
template <typename E,180,6920
template <typename E, typename 180,6920
E &operator^=(operator^=181,6998
template <typename E,190,7212
template <typename E, typename 190,7212

/usr/include/llvm/ADT/Bitset.h,988
#define LLVM_ADT_BITSET_H17,773
class Bitset 30,1105
  typedef uintptr_t BitWord;31,1120
  enum { BITWORD_SIZE 33,1150
  static_assert(35,1215
  std::array<std::array39,1398
  std::array<BitWord, NumWords> Bits{Bits39,1398
  constexpr Bitset(42,1450
  constexpr Bitset(47,1569
  Bitset &set(set52,1671
  constexpr Bitset &set(set57,1774
  constexpr Bitset &reset(reset62,1899
  constexpr Bitset &flip(flip67,2029
  constexpr bool test(77,2310
  constexpr size_t size(79,2374
  bool any(81,2427
  bool none(84,2517
  size_t count(85,2556
  constexpr Bitset &operator^=(operator^=92,2684
  constexpr Bitset operator^(98,2851
  constexpr Bitset &operator&=(operator&=104,2977
  constexpr Bitset operator&(109,3136
  constexpr Bitset &operator|=(operator|=115,3262
  constexpr Bitset operator|(121,3429
  constexpr Bitset operator~(127,3555
  bool operator==(operator==134,3691
  bool operator!=(operator!=138,3820
  bool operator < operator <140,3892

/usr/include/llvm/ADT/CombinationGenerator.h,516
#define LLVM_ADT_COMBINATIONGENERATOR_H28,1282
class CombinationGenerator 40,1584
  template <typename T> struct WrappingIterator 41,1613
    const ArrayRef<value_type> Range;44,1690
    typename decltype(45,1728
    bool advance(52,2022
    const value_type &operator*operator61,2230
    WrappingIterator(63,2293
  const ArrayRef<choices_storage_type> VariablesChoices;69,2453
  void performGeneration(71,2511
  CombinationGenerator(117,4446
  size_t numCombinations(130,4990
  void generate(141,5407

/usr/include/llvm/ADT/ConcurrentHashtable.h,531
#define LLVM_ADT_CONCURRENTHASHTABLE_H10,409
class ConcurrentHashTableInfoByPtr 75,2815
  static inline uint64_t getHashValue(78,2912
  static inline bool isEqual(83,3061
  static inline const KeyTy &getKey(getKey88,3205
  static inline KeyDataTy *create(create93,3358
template <typename KeyTy,98,3490
template <typename KeyTy, typename KeyDataTy,98,3490
template <typename KeyTy, typename KeyDataTy, typename AllocatorTy,98,3490
          typename Info 99,3558
  struct Bucket 276,9616
    std::mutex Guard;293,9952

/usr/include/llvm/ADT/FloatingPointMode.h,1961
#define LLVM_ADT_FLOATINGPOINTMODE_H16,602
enum class RoundingMode 37,1445
  TowardZero 39,1520
  NearestTiesToEven 40,1570
  TowardPositive 41,1620
  TowardNegative 42,1674
  NearestTiesToAway 43,1728
  Dynamic 46,1800
  Invalid 47,1861
inline StringRef spell(51,1971
inline raw_ostream &operator << operator <<63,2401
struct DenormalMode 70,2598
  enum DenormalModeKind 73,2726
    Invalid 74,2761
    IEEE,77,2825
    PreserveSign,80,2911
    PositiveZero,83,2978
    Dynamic86,3039
  DenormalModeKind Output 91,3174
  DenormalModeKind Input 96,3459
  constexpr DenormalMode(100,3610
  static constexpr DenormalMode getInvalid(105,3771
  static constexpr DenormalMode getDefault(110,3981
  static constexpr DenormalMode getIEEE(114,4055
  static constexpr DenormalMode getPreserveSign(118,4177
  static constexpr DenormalMode getPositiveZero(123,4347
  static constexpr DenormalMode getDynamic(128,4517
  bool operator==(operator==132,4648
  bool operator!=(operator!=136,4758
  bool isSimple(140,4839
  bool isValid(144,4898
  constexpr bool inputsAreZero(150,5095
  constexpr bool outputsAreZero(156,5309
  DenormalMode mergeCalleeMode(164,5634
  inline std::string str(175,5966
inline raw_ostream& operator<<(183,6106
parseDenormalFPAttributeComponent(190,6313
inline StringRef denormalModeKindName(202,6837
inline DenormalMode parseDenormalFPAttribute(218,7250
void DenormalMode::print(print233,7708
enum FPClassTest 239,7963
  fcNone 240,7993
  fcSNan 242,8008
  fcQNan 243,8027
  fcNegInf 244,8046
  fcNegNormal 245,8067
  fcNegSubnormal 246,8091
  fcNegZero 247,8118
  fcPosZero 248,8140
  fcPosSubnormal 249,8162
  fcPosNormal 250,8189
  fcPosInf 251,8213
  fcNan 253,8235
  fcInf 254,8262
  fcNormal 255,8293
  fcSubnormal 256,8333
  fcZero 257,8382
  fcPosFinite 258,8416
  fcNegFinite 259,8474
  fcFinite 260,8532
  fcPositive 261,8572
  fcNegative 262,8611
  fcAllFlags 264,8651

/usr/include/llvm/ADT/FoldingSet.h,5583
#define LLVM_ADT_FOLDINGSET_H17,742
class FoldingSetBase 116,4447
  void **Buckets;Buckets119,4521
  unsigned NumBuckets;122,4610
  unsigned NumNodes;126,4766
  explicit FoldingSetBase(128,4788
  FoldingSetBase(129,4842
  ~FoldingSetBase(131,4933
  class Node 137,5142
    void *getNextInBucket(getNextInBucket146,5325
    void SetNextInBucket(147,5394
  void clear(151,5519
  unsigned size(154,5597
  bool empty(157,5712
  unsigned capacity(161,5882
  struct FoldingSetInfo 171,6250
    void (*GetNodeProfile)GetNodeProfile174,6415
    bool (*NodeEquals)NodeEquals179,6670
    unsigned (*ComputeNodeHash)ComputeNodeHash185,6993
  void GrowHashTable(191,7215
  void GrowBucketCount(196,7433
  void reserve(205,7825
  bool RemoveNode(209,8033
  Node *GetOrInsertNode(GetOrInsertNode214,8228
  Node *FindNodeOrInsertPos(FindNodeOrInsertPos219,8460
  void InsertNode(225,8776
template<typename T> struct DefaultFoldingSetTrait 232,9049
  static void Profile(233,9102
  static void Profile(236,9183
template <typename T,261,10480
template <typename T, typename Enable 261,10480
template<typename T,266,10692
struct DefaultContextualFoldingSetTrait 267,10727
  static void Profile(268,10769
template<typename T,280,11227
template<typename T, typename Ctx> struct ContextualFoldingSetTrait280,11227
class FoldingSetNodeIDRef 289,11784
  const unsigned *Data Data290,11812
  size_t Size 291,11846
  FoldingSetNodeIDRef(295,11909
  unsigned ComputeHash(299,12114
  bool operator!=(operator!=305,12272
  const unsigned *getData(getData311,12524
  size_t getSize(312,12575
class FoldingSetNodeID 319,12885
  SmallVector<SmallVector322,13049
  SmallVector<unsigned, 32> Bits;322,13049
  FoldingSetNodeID(327,13125
  void AddPointer(331,13279
  void AddInteger(340,13753
  void AddInteger(341,13804
  void AddInteger(342,13857
  void AddInteger(343,13917
  void AddInteger(352,14187
  void AddInteger(353,14257
  void AddBoolean(358,14368
  inline void Add(363,14530
  inline void clear(367,14730
  unsigned ComputeHash(371,14899
  bool operator!=(operator!=379,15180
  bool operator!=(operator!=380,15261
using FoldingSetNode 394,15882
DefaultFoldingSetTrait<T>::Equals(Equals402,16183
DefaultFoldingSetTrait<T>::ComputeHash(ComputeHash410,16472
template<typename T,414,16620
DefaultContextualFoldingSetTrait<T, Ctx>::Equals(Equals416,16667
template<typename T,424,17099
DefaultContextualFoldingSetTrait<T, Ctx>::ComputeHash(ComputeHash426,17150
template <class Derived, class T> class FoldingSetImpl 436,17659
  explicit FoldingSetImpl(438,17751
  using iterator 446,17992
  iterator begin(448,18035
  iterator end(449,18084
  using const_iterator 451,18143
  const_iterator begin(453,18198
  const_iterator end(454,18265
  using bucket_iterator 456,18342
  bucket_iterator bucket_begin(458,18398
  bucket_iterator bucket_end(462,18514
  void reserve(469,18837
  bool RemoveNode(475,19098
  T *GetOrInsertNode(GetOrInsertNode482,19337
  T *FindNodeOrInsertPos(FindNodeOrInsertPos490,19644
  void InsertNode(498,20026
  void InsertNode(504,20274
class FoldingSet 521,20987
  using Super 522,21048
  using Node 523,21095
  static void GetNodeProfile(527,21264
  static bool NodeEquals(535,21567
  static unsigned ComputeNodeHash(544,21970
  static const FoldingSetBase::FoldingSetInfo &getFoldingSetInfo(getFoldingSetInfo550,22194
  explicit FoldingSet(558,22424
class ContextualFoldingSet573,23077
  using Super 580,23411
  using Node 581,23468
  Ctx Context;583,23506
  static const Ctx &getContext(getContext585,23522
  static void GetNodeProfile(591,23789
  static bool NodeEquals(597,24021
  static unsigned ComputeNodeHash(605,24394
  static const FoldingSetBase::FoldingSetInfo &getFoldingSetInfo(getFoldingSetInfo612,24713
  explicit ContextualFoldingSet(620,24943
  Ctx getContext(623,25065
class FoldingSetIteratorImpl 693,27675
  FoldingSetNode *NodePtr;NodePtr695,27717
  bool operator==(operator==702,27814
  bool operator!=(operator!=705,27914
template <class T> class FoldingSetIterator 710,28018
  explicit FoldingSetIterator(712,28104
  T &operator*(operator*714,28186
  T *operator->(operator->718,28254
  inline FoldingSetIterator &operator++(operator++722,28322
  FoldingSetIterator operator++(726,28428
class FoldingSetBucketIteratorImpl 735,28824
  void *Ptr;Ptr737,28872
  FoldingSetBucketIteratorImpl(741,28943
  void advance(743,29013
  bool operator==(operator==750,29216
  bool operator!=(operator!=753,29314
class FoldingSetBucketIterator 759,29435
  explicit FoldingSetBucketIterator(761,29514
  FoldingSetBucketIterator(764,29612
  T &operator*(operator*767,29713
  T *operator->(operator->768,29770
  inline FoldingSetBucketIterator &operator++(operator++770,29828
  FoldingSetBucketIterator operator++(774,29931
class FoldingSetNodeWrapper 783,30328
  T data;784,30382
  explicit FoldingSetNodeWrapper(788,30429
  void Profile(791,30521
  T &getValue(getValue793,30602
  const T &getValue(getValue794,30635
  operator T&(operator T&796,30681
  operator const operator const797,30714
class FastFoldingSetNode 806,31212
  FoldingSetNodeID FastID;807,31263
  explicit FastFoldingSetNode(810,31302
  void Profile(813,31385
template<typename T> struct FoldingSetTrait<FoldingSetTrait819,31587
  static inline void Profile(820,31637
template <typename T1,824,31725
struct FoldingSetTrait<FoldingSetTrait825,31761
  static inline void Profile(826,31805
  static void Profile(835,32058

/usr/include/llvm/ADT/FunctionExtras.h,2613
#define LLVM_ADT_FUNCTIONEXTRAS_H33,1437
template <typename ReturnT, typename... ParamTs> class UniqueFunctionBase 80,3234
  template <typename T,84,3388
  template <typename T> struct AdjustedParamTBase 100,4233
                           T,107,4653
  template <typename T> struct AdjustedParamTBase<AdjustedParamTBase113,4886
  template <typename T> struct AdjustedParamTBase<AdjustedParamTBase114,4964
  union StorageUnionT 148,6313
    struct OutOfLineStorageT 151,6474
      void *StoragePtr;StoragePtr152,6505
      size_t Size;153,6529
      size_t Alignment;154,6548
    } OutOfLineStorage;155,6572
    mutable std::aligned_storage_t<std::aligned_storage_t164,7006
        InlineStorage;165,7077
  } StorageUnion;166,7100
  PointerIntPair<PointerIntPair171,7298
  PointerIntPair<CallbackPointerUnionT, 1, bool> CallbackAndInlineFlag;171,7298
  bool isInlineStorage(173,7371
  bool isTrivialCallback(175,7446
  CallPtrT getTrivialCallback(179,7557
  NonTrivialCallbacks *getNonTrivialCallbacks(getNonTrivialCallbacks183,7683
  CallPtrT getCallPtr(187,7820
  void *getCalleePtr(getCalleePtr198,8302
  void *getInlineStorage(getInlineStorage201,8412
  void *getOutOfLineStorage(getOutOfLineStorage202,8485
  size_t getOutOfLineStorageSize(206,8581
  size_t getOutOfLineStorageAlignment(209,8675
  void setOutOfLineStorage(213,8780
  static ReturnT CallImpl(218,8948
  static void MoveImpl(225,9208
  static void DestroyImpl(231,9430
  template <typename CallableT,243,10007
  template <typename CallableT, typename CalledAs,243,10007
  template <typename CallableT,250,10354
  template <typename T> struct CalledAs 256,10601
  template <typename CallableT,261,10851
  UniqueFunctionBase(262,10903
  ~UniqueFunctionBase(282,11724
  UniqueFunctionBase(298,12245
  UniqueFunctionBase &operator=(operator=329,13500
  explicit operator bool(operator bool344,13974
template <typename R,349,14070
template <typename CallableT,350,14107
template <typename CallableT, typename CalledAsT,350,14107
    R, P...>::CallbacksHolder<CallableT, CalledAsT, Enable>::Callbacks Callbacks352,14252
template <typename R,355,14402
template <typename CallableT,356,14439
template <typename R,364,14718
class unique_function<unique_function365,14755
  using Base 366,14833
  unique_function(370,14925
  unique_function(377,15221
  R operator()(operator()384,15518
template <typename R,389,15620
class unique_function<unique_function390,15657
  using Base 392,15745
  unique_function(396,15837
  unique_function(403,16133
  R operator()(operator()410,16442

/usr/include/llvm/ADT/GenericConvergenceVerifier.h,553
#define LLVM_ADT_GENERICCONVERGENCEVERIFIER_H17,627
template <typename ContextT> class GenericConvergenceVerifier 23,732
  void initialize(33,1160
  bool sawTokens(47,1530
  raw_ostream *OS;OS50,1618
  std::function<void(const Twine &Message)> FailureCB;51,1637
  DominatorTreeT *DT;DT52,1692
  CycleInfoT CI;53,1714
  ContextT Context;54,1731
    ControlledConvergence,58,1833
    UncontrolledConvergence,59,1860
    NoConvergence60,1889
  DenseMap<DenseMap65,2054
  DenseMap<const InstructionT *, const InstructionT *> Tokens;65,2054

/usr/include/llvm/ADT/GenericCycleImpl.h,1583
#define LLVM_ADT_GENERICCYCLEIMPL_H24,938
#define DEBUG_TYPE 30,1087
void GenericCycle<ContextT>::getExitBlocks(getExitBlocks47,1418
auto GenericCycle<ContextT>::getCyclePreheader() const -> BlockT 70,2082
template <typename ContextT> class GenericCycleInfoCompute 108,3024
  using BlockT 109,3085
  using CycleInfoT 110,3129
  using CycleT 111,3178
  CycleInfoT &Info;Info113,3225
  struct DFSInfo 115,3246
    explicit DFSInfo(120,3391
    bool isAncestorOf(124,3545
  DenseMap<DenseMap129,3664
  DenseMap<BlockT *, DFSInfo> BlockDFSInfo;129,3664
  SmallVector<SmallVector130,3708
  SmallVector<BlockT *, 8> BlockPreorder;130,3708
  GenericCycleInfoCompute(136,3909
    -> CycleT 148,4193
void GenericCycleInfo<ContextT>::moveTopLevelCycleToNewParent(moveTopLevelCycleToNewParent165,4573
void GenericCycleInfo<ContextT>::addBlockToCycle(addBlockToCycle188,5471
void GenericCycleInfoCompute<ContextT>::run(run207,6137
void GenericCycleInfoCompute<ContextT>::updateDepth(updateDepth307,9809
void GenericCycleInfoCompute<ContextT>::dfs(dfs316,10175
template <typename ContextT> void GenericCycleInfo<ContextT>::clear(clear365,11984
void GenericCycleInfo<ContextT>::compute(compute373,12212
void GenericCycleInfo<ContextT>::splitCriticalEdge(splitCriticalEdge385,12536
unsigned GenericCycleInfo<ContextT>::getCycleDepth(getCycleDepth441,14477
bool GenericCycleInfo<ContextT>::validateTree(validateTree454,14902
#define check(462,15197
#undef check510,16914
void GenericCycleInfo<ContextT>::print(print518,17015
#undef DEBUG_TYPE531,17329

/usr/include/llvm/ADT/GenericCycleInfo.h,2952
#define LLVM_ADT_GENERICCYCLEINFO_H29,1199
template <typename ContextT> class GenericCycle 44,1634
  SmallVector<SmallVector59,2208
  SmallVector<BlockT *, 1> Entries;59,2208
  std::vector<std::unique_ptr<GenericCycle>> Children;62,2273
  using BlockSetVectorT = SetVector<BlockT *, SmallVector<SmallVector66,2464
                                    DenseSet<DenseSet67,2536
  BlockSetVectorT Blocks;68,2602
  void clear(77,2925
  void appendEntry(85,3052
  void appendBlock(86,3116
  bool isReducible(97,3471
  BlockT *getHeader(getHeader99,3531
  const SmallVectorImpl<BlockT *> & getEntries(101,3583
  bool isEntry(106,3734
  bool contains(111,3888
  const GenericCycle *getParentCycle(getParentCycle119,4166
  GenericCycle *getParentCycle(getParentCycle120,4235
  unsigned getDepth(121,4292
  struct const_child_iterator143,5152
    explicit const_child_iterator(149,5399
    const const_child_iterator_base &wrapped(wrapped151,5476
    GenericCycle *operator*(operator*152,5551
  const_child_iterator child_begin(155,5620
  const_child_iterator child_end(158,5720
  size_t getNumChildren(161,5816
  iterator_range<const_child_iterator> children(162,5876
  const_block_iterator block_begin(172,6229
  const_block_iterator block_end(175,6327
  size_t getNumBlocks(178,6421
  iterator_range<const_block_iterator> blocks(179,6477
  size_t getNumEntries(189,6734
  iterator_range<const_entry_iterator> entries(190,6792
  Printable printEntries(195,6922
  Printable print(207,7210
template <typename ContextT> class GenericCycleInfo 222,7581
  using BlockT 224,7643
  using CycleT 225,7687
  using FunctionT 226,7728
  ContextT Context;231,7897
  DenseMap<DenseMap234,7979
  DenseMap<BlockT *, CycleT *> BlockMap;234,7979
  DenseMap<DenseMap237,8081
  DenseMap<BlockT *, CycleT *> BlockMapTopLevel;237,8081
  std::vector<std::unique_ptr<CycleT>> TopLevelCycles;243,8313
  const FunctionT *getFunction(getFunction266,9205
  const ContextT &getSSAContext(getSSAContext267,9278
  void dump(280,9686
  Printable print(281,9725
  using const_toplevel_iterator_base 286,9852
  struct const_toplevel_iterator288,9960
    explicit const_toplevel_iterator(295,10286
    const const_toplevel_iterator_base &wrapped(wrapped298,10377
    CycleT *operator*(operator*299,10455
  const_toplevel_iterator toplevel_begin(302,10518
  const_toplevel_iterator toplevel_end(305,10633
  iterator_range<const_toplevel_iterator> toplevel_cycles(309,10745
template <typename CycleRefT,317,11054
template <typename CycleRefT, typename ChildIteratorT> struct CycleGraphTraits 317,11054
  using NodeRef 318,11135
  using nodes_iterator 320,11165
  using ChildIteratorType 321,11206
  static NodeRef getEntryNode(323,11251
  static ChildIteratorType child_begin(325,11315
  static ChildIteratorType child_end(328,11404
struct GraphTraits<GraphTraits352,12436
struct GraphTraits<GraphTraits356,12645

/usr/include/llvm/ADT/GenericSSAContext.h,555
#define LLVM_ADT_GENERICSSACONTEXT_H18,737
typedef unsigned ID;28,947
template <typename _FunctionT> class GenericSSAContext 41,1455
  using SSATraits 42,1512
  const typename SSATraits::FunctionT *F;F43,1562
  using ValueRefT 49,1794
  using ConstValueRefT 53,1977
  static constexpr ValueRefT *ValueRefNull ValueRefNull57,2146
  using InstructionT 60,2261
  using UseT 64,2415
  using BlockT 70,2680
  using FunctionT 74,2859
  using DominatorTreeT 78,3012
  GenericSSAContext(81,3105
  const FunctionT *getFunction(getFunction83,3156

/usr/include/llvm/ADT/GenericUniformityImpl.h,7171
#define LLVM_ADT_GENERICUNIFORMITYIMPL_H45,2028
#define DEBUG_TYPE 56,2277
template <typename ContextT> class ModifiedPostOrder 90,3577
  using BlockT 92,3640
  using FunctionT 93,3684
  using DominatorTreeT 94,3734
  using CycleInfoT 96,3795
  using CycleT 97,3844
  using const_iterator 98,3890
  ModifiedPostOrder(100,3964
  bool empty(102,4020
  size_t size(103,4069
  void clear(105,4119
  unsigned count(108,4194
  void appendBlock(111,4330
  unsigned getIndex(120,4665
  bool isReducibleCycleHeader(125,4778
  SmallVector<const BlockT *> m_order;130,4895
  DenseMap<DenseMap131,4934
  DenseMap<const BlockT *, unsigned> POIndex;131,4934
  SmallPtrSet<SmallPtrSet132,4980
  SmallPtrSet<const BlockT *, 32> ReducibleCycleHeaders;132,4980
  const ContextT &Context;Context133,5037
template <typename ContextT> class GenericSyncDependenceAnalysis 263,9488
  using BlockT 265,9563
  using DominatorTreeT 266,9607
  using FunctionT 267,9667
  using ValueRefT 268,9717
  using InstructionT 269,9767
  using CycleInfoT 271,9824
  using CycleT 272,9873
  using ConstBlockSet 274,9920
  using ModifiedPO 275,9976
  using BlockLabelMap 284,10346
  struct DivergenceDescriptor 288,10507
    ConstBlockSet JoinDivBlocks;290,10577
    ConstBlockSet CycleDivBlocks;292,10639
    BlockLabelMap BlockLabels;294,10725
  using DivergencePropagatorT 297,10762
  static DivergenceDescriptor EmptyDivergenceDesc;314,11450
  ModifiedPO CyclePO;316,11502
  const DominatorTreeT &DT;DT318,11525
  const CycleInfoT &CI;CI319,11553
  DenseMap<DenseMap321,11578
      CachedControlDivDescs;322,11644
template <typename ContextT> class GenericUniformityAnalysisImpl 331,11952
  using BlockT 333,12027
  using FunctionT 334,12071
  using ValueRefT 335,12121
  using ConstValueRefT 336,12171
  using UseT 337,12231
  using InstructionT 338,12271
  using DominatorTreeT 339,12327
  using CycleInfoT 341,12388
  using CycleT 342,12437
  using SyncDependenceAnalysisT 344,12484
  using DivergenceDescriptorT 345,12559
  using BlockLabelMapT 347,12653
  GenericUniformityAnalysisImpl(349,12728
  const FunctionT &getFunction(getFunction356,13017
  bool hasDivergence(377,13879
  bool isDivergent(385,14155
  bool isDivergent(393,14395
  bool hasDivergentTerminator(397,14521
  struct PhiInput 405,14739
    ConstValueRefT value;406,14759
    BlockT *predBlock;predBlock407,14785
    PhiInput(409,14809
  const ContextT &Context;Context413,14917
  const FunctionT &F;F414,14944
  const CycleInfoT &CI;CI415,14966
  const TargetTransformInfo *TTI TTI416,14990
  std::set<ConstValueRefT> DivergentValues;419,15074
  SmallPtrSet<SmallPtrSet420,15118
  SmallPtrSet<const BlockT *, 32> DivergentTermBlocks;420,15118
  std::vector<const InstructionT *> Worklist;423,15225
  const DominatorTreeT &DT;DT430,15463
  SmallPtrSet<SmallPtrSet433,15537
  SmallPtrSet<const CycleT *, 16> DivergentExitCycles;433,15537
  SmallVector<const CycleT *> AssumedDivergent;439,15746
  SyncDependenceAnalysisT SDA;442,15866
  SmallPtrSet<SmallPtrSet445,15932
  SmallPtrSet<const InstructionT *, 32> UniformOverrides;445,15932
void GenericUniformityAnalysisImplDeleter<ImplT>::operator()(operator()480,17397
template <typename ContextT> class DivergencePropagator 485,17548
  using BlockT 487,17614
  using DominatorTreeT 488,17658
  using FunctionT 489,17718
  using ValueRefT 490,17768
  using CycleInfoT 492,17819
  using CycleT 493,17868
  using ModifiedPO 495,17915
  using SyncDependenceAnalysisT 496,17965
  using DivergenceDescriptorT 497,18040
  using BlockLabelMapT 499,18134
  const ModifiedPO &CyclePOT;CyclePOT501,18209
  const DominatorTreeT &DT;DT502,18239
  const CycleInfoT &CI;CI503,18267
  const BlockT &DivTermBlock;DivTermBlock504,18291
  const ContextT &Context;Context505,18321
  SparseBitVector<> FreshLabels;511,18599
  std::unique_ptr<DivergenceDescriptorT> DivDesc;514,18680
  BlockLabelMapT &BlockLabels;BlockLabels515,18730
  DivergencePropagator(517,18762
  void printDefs(523,19103
  bool computeJoin(540,19671
  bool visitCycleExitEdge(577,21019
  bool visitEdge(589,21438
  std::unique_ptr<DivergenceDescriptorT> computeJoinPoints(600,21779
    llvm::GenericSyncDependenceAnalysis<ContextT>::EmptyDivergenceDesc;EmptyDivergenceDesc734,26829
llvm::GenericSyncDependenceAnalysis<ContextT>::GenericSyncDependenceAnalysis(GenericSyncDependenceAnalysis737,26931
  auto ItCached 752,27441
  auto DivDesc 758,27676
  auto printBlockSet 760,27726
  (void)printBlockSet;776,28264
  auto ItInserted 778,28288
void GenericUniformityAnalysisImpl<ContextT>::markDivergent(markDivergent785,28480
bool GenericUniformityAnalysisImpl<ContextT>::markDivergent(markDivergent805,28994
void GenericUniformityAnalysisImpl<ContextT>::addUniformOverride(addUniformOverride815,29272
void GenericUniformityAnalysisImpl<ContextT>::analyzeCycleExitDivergence(analyzeCycleExitDivergence834,30142
void GenericUniformityAnalysisImpl<ContextT>::propagateCycleExitDivergence(propagateCycleExitDivergence857,30748
void GenericUniformityAnalysisImpl<ContextT>::taintAndPushAllDefs(taintAndPushAllDefs891,31979
void GenericUniformityAnalysisImpl<ContextT>::taintAndPushPhiNodes(taintAndPushPhiNodes907,32511
static bool insertIfNotContained(929,33429
template <typename CycleT,943,33981
static const CycleT *getExtDivCycle(getExtDivCycle944,34025
template <typename ContextT,979,35180
template <typename ContextT, typename CycleT,979,35180
template <typename ContextT, typename CycleT, typename BlockT,979,35180
getIntDivCycle(982,35300
template <typename ContextT,1017,36580
template <typename ContextT, typename CycleT,1017,36580
template <typename ContextT, typename CycleT, typename BlockT,1017,36580
getOutermostDivergentCycle(1020,36700
bool GenericUniformityAnalysisImpl<ContextT>::isTemporalDivergent(isTemporalDivergent1039,37323
void GenericUniformityAnalysisImpl<ContextT>::analyzeControlDivergence(analyzeControlDivergence1053,37770
void GenericUniformityAnalysisImpl<ContextT>::compute(compute1109,39925
bool GenericUniformityAnalysisImpl<ContextT>::isAlwaysUniform(isAlwaysUniform1137,40706
GenericUniformityInfo<ContextT>::GenericUniformityInfo(GenericUniformityInfo1143,40884
void GenericUniformityAnalysisImpl<ContextT>::print(print1150,41098
bool GenericUniformityInfo<ContextT>::hasDivergence(hasDivergence1218,43073
GenericUniformityInfo<ContextT>::getFunction(getFunction1224,43234
bool GenericUniformityInfo<ContextT>::isDivergent(isDivergent1230,43398
bool GenericUniformityInfo<ContextT>::isDivergent(isDivergent1235,43535
bool GenericUniformityInfo<ContextT>::isDivergentUse(isDivergentUse1240,43678
bool GenericUniformityInfo<ContextT>::hasDivergentTerminator(hasDivergentTerminator1245,43818
void GenericUniformityInfo<ContextT>::print(print1251,44013
void llvm::ModifiedPostOrder<ContextT>::computeStackPO(computeStackPO1256,44133
void ModifiedPostOrder<ContextT>::computeCyclePO(computeCyclePO1325,46644
void llvm::ModifiedPostOrder<ContextT>::compute(compute1365,47988
#undef DEBUG_TYPE1376,48322

/usr/include/llvm/ADT/GenericUniformityInfo.h,710
#define LLVM_ADT_GENERICUNIFORMITYINFO_H10,411
template <typename ImplT> struct GenericUniformityAnalysisImplDeleter 20,643
  void operator(26,1019
template <typename ContextT> class GenericUniformityInfo 29,1055
  using BlockT 31,1122
  using FunctionT 32,1166
  using ValueRefT 33,1216
  using ConstValueRefT 34,1266
  using UseT 35,1326
  using InstructionT 36,1366
  using DominatorTreeT 37,1422
  using ThisT 38,1482
  using CycleInfoT 40,1532
  using CycleT 41,1581
  void compute(49,1938
  bool isUniform(64,2308
  bool isUniform(70,2641
  using ImplT 82,2996
  std::unique_ptr<std::unique_ptr84,3054
  std::unique_ptr<ImplT, GenericUniformityAnalysisImplDeleter<ImplT>> DA;84,3054

/usr/include/llvm/ADT/Hashing.h,2978
#define LLVM_ADT_HASHING_H45,2474
class hash_code 74,3377
  size_t value;75,3395
  hash_code(83,3592
  /*explicit*/ operator size_t(86,3697
  friend size_t hash_value(96,4039
template <typename T,115,4834
namespace hashing 149,6383
namespace detail 150,6403
inline uint64_t fetch64(152,6423
inline uint32_t fetch32(160,6601
static constexpr uint64_t k0 169,6835
static constexpr uint64_t k1 170,6889
static constexpr uint64_t k2 171,6943
static constexpr uint64_t k3 172,6997
inline uint64_t rotate(177,7186
inline uint64_t shift_mix(182,7376
inline uint64_t hash_16_bytes(186,7449
inline uint64_t hash_1to3_bytes(197,7721
inline uint64_t hash_4to8_bytes(206,8074
inline uint64_t hash_9to16_bytes(211,8249
inline uint64_t hash_17to32_bytes(217,8453
inline uint64_t hash_33to64_bytes(227,8885
inline uint64_t hash_short(250,9740
struct hash_state 268,10375
  uint64_t h0 269,10395
  uint64_t h0 = 0, h1 269,10395
  uint64_t h0 = 0, h1 = 0, h2 269,10395
  uint64_t h0 = 0, h1 = 0, h2 = 0, h3 269,10395
  uint64_t h0 = 0, h1 = 0, h2 = 0, h3 = 0, h4 269,10395
  uint64_t h0 = 0, h1 = 0, h2 = 0, h3 = 0, h4 = 0, h5 269,10395
  uint64_t h0 = 0, h1 = 0, h2 = 0, h3 = 0, h4 = 0, h5 = 0, h6 269,10395
  static hash_state create(274,10623
  static void mix_32_bytes(289,11173
  void mix(302,11608
  uint64_t finalize(319,12157
inline uint64_t get_execution_seed(333,12626
template <typename T> struct is_hashable_data358,13922
template <typename T,367,14457
template <typename T, typename U> struct is_hashable_data<is_hashable_data367,14457
get_hashable_data(377,14983
std::enable_if_t<!is_hashable_data<T>::value,value384,15221
get_hashable_data(385,15275
bool store_and_advance(398,15769
hash_code hash_combine_range_impl(415,16489
hash_combine_range_impl(459,18384
hash_code hash_combine_range(491,19410
namespace hashing 497,19604
namespace detail 498,19624
struct hash_combine_recursive_helper 507,20002
  hash_state state;509,20065
  const uint64_t seed;510,20085
  hash_combine_recursive_helper(517,20284
  char *combine_data(combine_data527,20737
  template <typename T,565,22354
  hash_code combine(566,22394
  hash_code combine(579,22946
template <typename ...Ts> hash_code hash_combine(613,24334
namespace hashing 621,24690
namespace detail 622,24710
inline hash_code hash_integer_value(629,24996
std::enable_if_t<is_integral_or_enum<T>::value, hash_code> hash_value(643,25493
template <typename T> hash_code hash_value(650,25778
template <typename T,657,26043
hash_code hash_value(658,26077
template <typename... Ts> hash_code hash_value(662,26177
hash_code hash_value(669,26472
template <typename T> hash_code hash_value(673,26584
  static inline hash_code getEmptyKey(678,26773
  static inline hash_code getTombstoneKey(679,26839
  static unsigned getHashValue(680,26909
  static bool isEqual(683,27008
namespace std 689,27181
struct hash<hash692,27209
  size_t operator()(operator()693,27240

/usr/include/llvm/ADT/IndexedMap.h,37
#define LLVM_ADT_INDEXEDMAP_H21,961

/usr/include/llvm/ADT/IntervalMap.h,10111
#define LLVM_ADT_INTERVALMAP_H105,3592
struct IntervalMapInfo 140,4904
  static inline bool startLess(143,5062
  static inline bool stopLess(149,5274
  static inline bool adjacent(155,5508
  static inline bool nonEmpty(161,5723
struct IntervalMapHalfOpenInfo 167,5828
  static inline bool startLess(169,5913
  static inline bool stopLess(174,6044
  static inline bool adjacent(179,6202
  static inline bool nonEmpty(184,6334
namespace IntervalMapImpl 191,6552
using IdxPair 193,6581
template <typename T1,222,7878
template <typename T1, typename T2,222,7878
class NodeBase 223,7926
  enum { Capacity 225,7951
  T1 first[first227,7977
  T2 second[second228,7992
  void copy(236,8298
  void moveLeft(250,8833
  void moveRight(259,9184
  void erase(272,9652
  void erase(279,9866
  void shift(286,10097
  void transferToLeftSib(295,10429
  void transferToRightSib(306,10866
  int adjustFromLeftSib(319,11478
void adjustSiblingSizes(340,12295
  Log2CacheLine 433,15785
  CacheLineBytes 434,15806
  DesiredNodeBytes 435,15845
template <typename KeyT,438,15889
struct NodeSizer 439,15929
    DesiredLeafSize 446,16267
    MinLeafSize 448,16366
    LeafSize 449,16387
  using LeafBase 452,16470
  using LeafBase = NodeBase<std::pair<KeyT, KeyT>, ValT,452,16470
    AllocBytes 457,16695
    BranchSize 460,16830
  using Allocator 468,17184
      RecyclingAllocator<BumpPtrAllocator, char,469,17204
      RecyclingAllocator<BumpPtrAllocator, char, AllocBytes,469,17204
class NodeRef 493,18366
  struct CacheAlignedPointerTraits 494,18382
    static inline void *getAsVoidPointer(getAsVoidPointer495,18419
    static inline void *getFromVoidPointer(getFromVoidPointer496,18483
  PointerIntPair<PointerIntPair499,18616
  PointerIntPair<void*, Log2CacheLine, unsigned, CacheAlignedPointerTraits> pip;499,18616
  explicit operator bool(operator bool506,18806
  NodeRef(510,18967
  unsigned size(515,19150
  void setSize(518,19242
  NodeRef &subtree(subtree523,19451
  NodeT &get(get529,19629
  bool operator==(operator==533,19713
  bool operator!=(operator!=540,19906
template <typename KeyT,565,20834
template <typename KeyT, typename ValT,565,20834
template <typename KeyT, typename ValT, unsigned N,565,20834
class LeafNode 566,20903
  const KeyT &start(start568,20978
  const KeyT &stop(stop569,21049
  const ValT &value(value570,21120
  KeyT &start(start572,21187
  KeyT &stop(stop573,21246
  ValT &value(value574,21305
  unsigned findFrom(582,21706
  unsigned safeFind(597,22401
  ValT safeLookup(611,22976
template <typename KeyT,628,23674
template <typename KeyT, typename ValT,628,23674
template <typename KeyT, typename ValT, unsigned N,628,23674
insertFrom(630,23786
template <typename KeyT,702,26061
template <typename KeyT, typename ValT,702,26061
template <typename KeyT, typename ValT, unsigned N,702,26061
class BranchNode 703,26130
  const KeyT &stop(stop705,26193
  const NodeRef &subtree(subtree706,26258
  KeyT &stop(stop708,26329
  NodeRef &subtree(subtree709,26382
  unsigned findFrom(717,26780
  unsigned safeFind(731,27439
  NodeRef safeLookup(743,27880
  void insert(752,28200
class Path 773,28985
  struct Entry 776,29088
    void *node;node777,29105
    unsigned size;778,29121
    unsigned offset;779,29140
    Entry(781,29162
    Entry(784,29267
    NodeRef &subtree(subtree787,29378
  SmallVector<SmallVector793,29561
  SmallVector<Entry, 4> path;793,29561
  template <typename NodeT> NodeT &node(node797,29621
  unsigned size(800,29745
  unsigned offset(801,29812
  unsigned &offset(offset802,29883
  template <typename NodeT> NodeT &leaf(leaf805,29971
  unsigned leafSize(808,30081
  unsigned leafOffset(809,30138
  unsigned &leafOffset(leafOffset810,30199
  bool valid(813,30324
  unsigned height(819,30541
  NodeRef &subtree(subtree824,30782
  void reset(830,31039
  void push(837,31270
  void pop(842,31401
  void setSize(850,31657
  void setRoot(860,31959
  void fillLeft(884,32920
  bool atBegin(900,33467
  bool atLastEntry(910,33751
  void legalizeForInsert(919,34225
template <typename KeyT,933,34634
template <typename KeyT, typename ValT,933,34634
          unsigned N 934,34674
    DesiredRootBranchCap 947,35288
    RootBranchCap 949,35408
  struct RootBranchData 956,35650
    KeyT start;957,35676
    RootBranch node;958,35692
    RootLeaf leaf;970,35942
    RootBranchData branchData;971,35961
  IntervalMap &operator=(operator=1055,38460
  IntervalMap &operator=(operator=1069,38951
template <typename KeyT,1200,42569
template <typename KeyT, typename ValT,1200,42569
template <typename KeyT, typename ValT, unsigned N,1200,42569
treeSafeLookup(1202,42680
template <typename KeyT,1213,43112
template <typename KeyT, typename ValT,1213,43112
template <typename KeyT, typename ValT, unsigned N,1213,43112
branchRoot(1215,43243
template <typename KeyT,1254,44523
template <typename KeyT, typename ValT,1254,44523
template <typename KeyT, typename ValT, unsigned N,1254,44523
splitRoot(1256,44654
template <typename KeyT,1292,45710
template <typename KeyT, typename ValT,1292,45710
template <typename KeyT, typename ValT, unsigned N,1292,45710
visitNodes(1294,45821
template <typename KeyT,1319,46554
template <typename KeyT, typename ValT,1319,46554
template <typename KeyT, typename ValT, unsigned N,1319,46554
deleteNode(1321,46665
template <typename KeyT,1328,46820
template <typename KeyT, typename ValT,1328,46820
template <typename KeyT, typename ValT, unsigned N,1328,46820
clear(1330,46931
template <typename KeyT,1342,47294
template <typename KeyT, typename ValT,1342,47294
template <typename KeyT, typename ValT, unsigned N,1342,47294
  const ValT &operator*(operator*1424,50144
  bool operator==(operator==1426,50197
  bool operator!=(operator!=1435,50525
  const_iterator &operator++(operator++1452,50915
  const_iterator operator++(1460,51154
  const_iterator &operator--(operator--1467,51312
  const_iterator operator--(1476,51530
template <typename KeyT,1507,52437
template <typename KeyT, typename ValT,1507,52437
template <typename KeyT, typename ValT, unsigned N,1507,52437
const_iterator::pathFillFind(pathFillFind1509,52548
template <typename KeyT,1521,52934
template <typename KeyT, typename ValT,1521,52934
template <typename KeyT, typename ValT, unsigned N,1521,52934
const_iterator::treeFind(treeFind1523,53045
template <typename KeyT,1531,53268
template <typename KeyT, typename ValT,1531,53268
template <typename KeyT, typename ValT, unsigned N,1531,53268
const_iterator::treeAdvanceTo(treeAdvanceTo1533,53379
template <typename KeyT,1571,54680
template <typename KeyT, typename ValT,1571,54680
template <typename KeyT, typename ValT, unsigned N,1571,54680
  iterator &operator++(operator++1635,57134
  iterator operator++(1640,57218
  iterator &operator--(operator--1646,57312
  iterator operator--(1651,57396
template <typename KeyT,1663,57770
template <typename KeyT, typename ValT,1663,57770
template <typename KeyT, typename ValT, unsigned N,1663,57770
iterator::canCoalesceLeft(canCoalesceLeft1665,57881
template <typename KeyT,1691,58861
template <typename KeyT, typename ValT,1691,58861
template <typename KeyT, typename ValT, unsigned N,1691,58861
iterator::canCoalesceRight(canCoalesceRight1693,58972
template <typename KeyT,1715,59732
template <typename KeyT, typename ValT,1715,59732
template <typename KeyT, typename ValT, unsigned N,1715,59732
iterator::setNodeStop(setNodeStop1717,59843
template <typename KeyT,1732,60325
template <typename KeyT, typename ValT,1732,60325
template <typename KeyT, typename ValT, unsigned N,1732,60325
iterator::setStart(setStart1734,60436
template <typename KeyT,1748,60813
template <typename KeyT, typename ValT,1748,60813
template <typename KeyT, typename ValT, unsigned N,1748,60813
iterator::setStop(setStop1750,60924
template <typename KeyT,1763,61269
template <typename KeyT, typename ValT,1763,61269
template <typename KeyT, typename ValT, unsigned N,1763,61269
iterator::setValue(setValue1765,61380
template <typename KeyT,1786,61991
template <typename KeyT, typename ValT,1786,61991
template <typename KeyT, typename ValT, unsigned N,1786,61991
iterator::insertNode(insertNode1788,62102
template <typename KeyT,1831,63465
template <typename KeyT, typename ValT,1831,63465
template <typename KeyT, typename ValT, unsigned N,1831,63465
iterator::insert(insert1833,63576
template <typename KeyT,1856,64211
template <typename KeyT, typename ValT,1856,64211
template <typename KeyT, typename ValT, unsigned N,1856,64211
iterator::treeInsert(treeInsert1858,64322
template <typename KeyT,1920,66753
template <typename KeyT, typename ValT,1920,66753
template <typename KeyT, typename ValT, unsigned N,1920,66753
iterator::erase(erase1922,66864
template <typename KeyT,1933,67181
template <typename KeyT, typename ValT,1933,67181
template <typename KeyT, typename ValT, unsigned N,1933,67181
iterator::treeErase(treeErase1935,67292
template <typename KeyT,1966,68411
template <typename KeyT, typename ValT,1966,68411
template <typename KeyT, typename ValT, unsigned N,1966,68411
iterator::eraseNode(eraseNode1968,68522
template <typename KeyT,2014,70060
template <typename KeyT, typename ValT,2014,70060
template <typename KeyT, typename ValT, unsigned N,2014,70060
iterator::overflow(overflow2017,70197
template <typename MapA,2109,72954
class IntervalMapOverlaps 2110,72994
  using KeyType 2111,73022
  using Traits 2112,73064
  typename MapA::const_iterator posA;2114,73108
  typename MapB::const_iterator posB;2115,73146
  void advance(2120,73352
  IntervalMapOverlaps(2152,74339
  bool valid(2157,74574
  const typename MapA::const_iterator &a(a2162,74695
  const typename MapB::const_iterator &b(b2165,74815
  KeyType start(2168,74935
  KeyType stop(2175,75120
  void skipA(2182,75321
  void skipB(2188,75435
  IntervalMapOverlaps &operator++(operator++2194,75531
  void advanceTo(2205,75853

/usr/include/llvm/ADT/IntervalTree.h,1358
#define LLVM_ADT_INTERVALTREE_H17,605
template <typename PointT, typename ValueT> class IntervalData 198,7963
  PointType Left;204,8105
  PointType Right;205,8123
  ValueType Value;206,8142
  IntervalData(210,8197
  PointType left(215,8424
  PointType right(216,8466
  ValueType value(217,8510
  bool left(221,8696
  bool right(225,8910
  bool contains(229,9116
using PointTypeIsValid 240,9619
using ValueTypeIsValid 243,9718
template <typename PointT,246,9868
template <typename PointT, typename ValueT,246,9868
          typename DataT 247,9912
  enum class Sorting 260,10337
  enum class Sorting { Ascending,260,10337
  enum class Sorting { Ascending, Descending 260,10337
  class IntervalNode 267,10560
    PointType MiddlePoint;268,10583
    PointType middle(275,10911
    unsigned start(276,10964
    unsigned size(277,11024
    IntervalNode(279,11083
  class find_iterator 450,18336
    void initNode(471,19099
    void nextInterval(506,20391
    explicit find_iterator(544,21789
    const DataType *current(current552,22104
    find_iterator &operator++(operator++559,22324
    find_iterator operator++(564,22407
    const DataType *operator->(operator->571,22555
    const DataType &operator*(operator*572,22616
    friend bool operator==(operator==575,22710
    friend bool operator!=(operator!=580,22969

/usr/include/llvm/ADT/IntrusiveRefCntPtr.h,2152
#define LLVM_ADT_INTRUSIVEREFCNTPTR_H61,2292
template <class Derived> class RefCountedBase 76,2762
  RefCountedBase(81,2885
  ~RefCountedBase(85,3007
  unsigned UseCount(96,3291
  void Retain(98,3341
  void Release(100,3380
template <class Derived> class ThreadSafeRefCountedBase 108,3599
  mutable std::atomic<int> RefCount{RefCount109,3657
  ThreadSafeRefCountedBase(113,3749
  ~ThreadSafeRefCountedBase(118,3914
  unsigned UseCount(129,4218
  void Retain(131,4300
  void Release(133,4377
template <typename T> struct IntrusiveRefCntPtrInfo 161,5720
  static unsigned useCount(162,5774
  static void retain(163,5843
  static void release(164,5891
template <typename T> class IntrusiveRefCntPtr 173,6246
  T *Obj Obj174,6295
  using element_type 177,6324
  IntrusiveRefCntPtr(180,6394
  IntrusiveRefCntPtr(181,6448
  IntrusiveRefCntPtr(182,6525
            std::enable_if_t<std::enable_if_t185,6626
            std::enable_if_t<std::enable_if_t191,6817
  ~IntrusiveRefCntPtr(196,6981
  IntrusiveRefCntPtr &operator=(operator=198,7021
  T &operator*(operator*203,7113
  T *operator->(operator->204,7153
  T *get(get205,7193
  explicit operator bool(operator bool206,7226
  void swap(208,7276
  void reset(214,7382
  void resetWithoutRelease(219,7438
  unsigned useCount(221,7487
  void retain(226,7594
  void release(231,7676
inline bool operator==(operator==240,7849
inline bool operator!=(operator!=246,8021
inline bool operator==(operator==252,8193
inline bool operator!=(operator!=257,8310
inline bool operator==(operator==262,8427
inline bool operator!=(operator!=267,8544
bool operator==(operator==272,8652
bool operator==(operator==277,8753
bool operator!=(operator!=282,8860
bool operator!=(operator!=287,8970
template <class T> struct simplify_type<simplify_type295,9201
  using SimpleType 296,9266
  static SimpleType getSimplifiedValue(298,9293
template <class T> struct simplify_type<simplify_type303,9392
  using SimpleType 304,9463
  static SimpleType getSimplifiedValue(306,9500
template <typename T,312,9671
IntrusiveRefCntPtr<T> makeIntrusiveRefCnt(313,9711

/usr/include/llvm/ADT/LazyAtomicPointer.h,827
#define LLVM_ADT_LAZYATOMICPOINTER_H10,407
template <class T> class LazyAtomicPointer 34,1367
  static constexpr uintptr_t getNull(35,1412
  static constexpr uintptr_t getBusy(36,1465
  static T *makePointer(makePointer38,1523
  static uintptr_t makeRaw(42,1661
  void store(50,1904
  T *exchange(exchange54,2057
  bool compare_exchange_weak(65,2458
  bool compare_exchange_strong(80,2976
  T *load(load100,3766
  T &loadOrGenerate(loadOrGenerate109,4091
  explicit operator bool(131,4887
  operator T 132,4939
  T &operator*operator134,4982
  LazyAtomicPointer(141,5143
  LazyAtomicPointer(142,5181
  LazyAtomicPointer(143,5233
  LazyAtomicPointer(144,5292
  LazyAtomicPointer &operator=(operator=151,5474
  LazyAtomicPointer &operator=(operator=155,5553
  std::atomic<uintptr_t> Storage;161,5671

/usr/include/llvm/ADT/MapVector.h,387
#define LLVM_ADT_MAPVECTOR_H18,751
template <typename KeyT,227,7790
template <typename KeyT, typename ValueT,227,7790
template <typename KeyT, typename ValueT, typename MapType,227,7790
void MapVector<KeyT, ValueT, MapType, VectorType>::remove_if(remove_if229,7897
template <typename KeyT,251,8475
template <typename KeyT, typename ValueT,251,8475
struct SmallMapVector252,8529

/usr/include/llvm/ADT/PagedVector.h,522
#define LLVM_ADT_PAGEDVECTOR_H13,527
  class MaterializedIterator 168,6880
    const PagedVector *PV;PV169,6911
    size_t ElementIdx;170,6938
    MaterializedIterator(179,7152
    MaterializedIterator &operator++(operator++186,7411
    MaterializedIterator operator++(199,7749
    T const &operator*(operator*205,7874
    friend bool operator==(operator==213,8142
    [[nodiscard]] size_t getIndex(218,8301
    friend bool operator!=(operator!=220,8367
    void verify(226,8535
    bool equals(232,8699

/usr/include/llvm/ADT/PostOrderIterator.h,1172
#define LLVM_ADT_POSTORDERITERATOR_H17,688
class po_iterator_storage 58,2389
  SetType Visited;59,2417
  bool insertEdge(64,2531
  template <typename NodeRef> void finishPostorder(69,2691
  SetType &Visited;Visited75,2903
  po_iterator_storage(78,2932
  po_iterator_storage(79,2988
  bool insertEdge(85,3255
  template <class NodeRef> void finishPostorder(90,3415
  bool operator==(operator==158,5705
  bool operator!=(operator!=161,5796
  reference operator*(163,5869
  NodeRef operator->(169,6181
  po_iterator &operator++(operator++171,6230
  po_iterator operator++(179,6437
po_iterator<T> po_begin(189,6652
po_iterator<T> po_end 191,6744
template <class T> iterator_range<po_iterator<T>> post_order(193,6816
po_ext_iterator<T, SetType> po_ext_begin(205,7282
po_ext_iterator<T, SetType> po_ext_end(210,7429
iterator_range<po_ext_iterator<T, SetType>> post_order_ext(215,7573
ipo_iterator<T> ipo_begin(228,8119
ipo_iterator<T> ipo_end(233,8217
iterator_range<ipo_iterator<T>> inverse_post_order(238,8310
ipo_ext_iterator<T, SetType> ipo_ext_begin(252,8895
ipo_ext_iterator<T, SetType> ipo_ext_end(257,9053
inverse_post_order_ext(263,9252

/usr/include/llvm/ADT/STLExtras.h,22875
#define LLVM_ADT_STLEXTRAS_H18,655
template <typename T> struct make_const_ptr 53,1542
template <typename T> struct make_const_ref 57,1648
  using type 58,1694
namespace detail 61,1763
template <class, template <class...> class Op, class... Args> struct detector 62,1782
struct detector<detector66,1955
  using value_t 67,2012
using is_detected 79,2553
template <typename T,85,2888
template <typename T, bool isClass 85,2888
template <typename ClassType,89,3068
template <typename ClassType, typename ReturnType,89,3068
struct function_traits<function_traits90,3137
  enum { num_args 92,3259
  using result_t 95,3339
  using arg_t 99,3445
template <typename ClassType,102,3553
template <typename ClassType, typename ReturnType,102,3553
struct function_traits<function_traits103,3622
template <typename ReturnType,106,3806
  enum { num_args 109,3960
  using result_t 112,4040
  using arg_t 116,4142
template <typename ReturnType,118,4207
template <typename ReturnType,122,4427
template <typename T,128,4694
using is_one_of 129,4732
template <typename T,133,4905
using are_base_of 134,4943
namespace detail 136,5009
template <typename T,137,5028
template <typename T,138,5091
struct TypesAreDistinct139,5129
template <typename T> struct TypesAreDistinct<TypesAreDistinct142,5294
template <> struct TypesAreDistinct<TypesAreDistinct153,5728
struct TypesAreDistinct155,5813
template <typename T,168,6396
template <typename T,169,6459
template <typename T, typename U,169,6459
template <typename T,172,6626
struct FirstIndexOfType<T, T, Us...> : std::integral_constant<std::integral_constant173,6664
template <size_t I,178,6857
using TypeAtIndex 179,6893
template <typename EnumTy1,183,7076
template <typename EnumTy1, typename EnumTy2,183,7076
          typename UT1 184,7122
namespace callable_detail 196,7734
template <typename T,208,8032
          bool 209,8054
  Callable &operator=(operator=227,8596
  Callable &operator=(operator=234,8740
  decltype(auto) operator()(operator()243,8988
  decltype(auto) operator()(operator()249,9191
  operator reference(operator reference256,9396
  operator const_reference(operator const_reference257,9436
  static constexpr bool IsPtr 263,9632
  using StorageT 265,9703
  using CastT 266,9782
  StorageT Func 269,9843
  template <typename In> static constexpr auto convertIn(272,9880
    typename FnPtrOrRef,290,10353
  template <typename... Pn,297,10550
  decltype(auto) operator()(operator()299,10648
  bool valid(303,10751
  void reset(304,10800
  operator T operator T306,10836
template <typename ContainerTy> bool hasSingleElement(322,11284
template <typename T> auto drop_begin(329,11529
template <typename T> auto drop_end(336,11806
template <typename ItTy,344,12137
template <typename ItTy, typename FuncTy,344,12137
          typename ReferenceTy 345,12179
  ReferenceTy operator*(363,12878
inline mapped_iterator<ItTy, FuncTy> map_iterator(372,13151
auto map_range(377,13335
template <typename DerivedT,387,13794
template <typename DerivedT, typename ItTy,387,13794
class mapped_iterator_base388,13860
  using BaseT 396,14200
  mapped_iterator_base(398,14239
  ItTy getCurrent(401,14340
  ReferenceTy operator*(403,14381
template <typename Ty> class has_rbegin_impl 409,14557
  using yes 410,14604
  using no 411,14627
  static const bool value 420,14799
struct has_rbegin 425,14967
template <typename ContainerTy> auto reverse(428,15118
template <typename WrappedIteratorT,452,16139
template <typename WrappedIteratorT, typename PredicateT,452,16139
class filter_iterator_base453,16215
  using BaseT 460,16549
  WrappedIteratorT End;463,16631
  PredicateT Pred;464,16655
  void findNextValid(466,16675
  filter_iterator_base(476,17032
  filter_iterator_base &operator++(operator++485,17248
  decltype(auto) operator*(491,17356
  decltype(auto) operator->(496,17504
template <typename WrappedIteratorT,503,17728
template <typename WrappedIteratorT, typename PredicateT,503,17728
          typename IterTag 504,17786
template <typename WrappedIteratorT,516,18246
    : public filter_iterator_base<filter_iterator_base519,18421
  filter_iterator_impl &operator--(operator--537,18933
namespace detail 544,19044
template <bool is_bidirectional> struct fwd_or_bidi_tag_impl 546,19064
template <> struct fwd_or_bidi_tag_impl<fwd_or_bidi_tag_impl550,19173
  using type 551,19221
template <typename IterT> struct fwd_or_bidi_tag 557,19465
  using type 558,19516
      typename std::iterator_traits<IterT>::iterator_category>::value>::type;type560,19617
template <typename WrappedIteratorT,567,19853
using filter_iterator 568,19911
template <typename RangeT,579,20467
make_filter_range(581,20588
class early_inc_iterator_impl609,21832
  using BaseT 612,22020
  using PointerT 614,22094
  bool IsEarlyIncremented 618,22219
  early_inc_iterator_impl(622,22270
  decltype(*std::declval<WrappedIteratorT>()) operator*(625,22357
  early_inc_iterator_impl &operator++(operator++634,22612
  friend bool operator==(operator==642,22828
make_early_inc_range(665,23887
template <typename R,673,24257
template <typename R,676,24347
namespace detail 683,24572
using std::declval;685,24592
template<typename... Iters> struct ZipTupleType 689,24760
template <typename ZipType,693,24873
template <typename ZipType, typename ReferenceTupleType,693,24873
using zip_traits 694,24949
template <typename ZipType,709,25613
template <typename ZipType, typename ReferenceTupleType,709,25613
struct zip_common 710,25689
  using Base 711,25768
  using Base = zip_traits<ZipType, ReferenceTupleType,711,25768
  using IndexSequence 712,25834
  using value_type 713,25893
  std::tuple<Iters...> iterators;715,25942
  template <size_t... Ns> value_type deref(718,25988
  template <size_t... Ns> void tup_inc(722,26124
  template <size_t... Ns> void tup_dec(726,26236
  bool test_all_equals(731,26374
  zip_common(738,26592
  value_type operator*(740,26665
  ZipType &operator++(operator++742,26732
  ZipType &operator--(operator--747,26835
  bool all_equals(755,27125
struct zip_first 761,27253
  using zip_common<zip_common763,27385
                   Iters...>::zip_common;zip_common764,27454
  bool operator==(operator==766,27497
struct zip_shortest772,27657
  using zip_common<zip_common775,27786
                   Iters...>::zip_common;zip_common776,27858
  bool operator==(operator==778,27901
  bool any_iterator_equals(784,28070
template <template <typename...> class ItType, typename TupleStorageType,792,28371
template <template <typename...> class ItType, typename... Args,797,28563
  using type 801,28768
template <template <typename...> class ItType, typename... Args,806,28926
  using type 810,29137
template <template <typename...> class ItType, typename... Args> class zippy 814,29249
  std::tuple<Args...> storage;816,29337
  using IndexSequence 817,29368
  using iterator 820,29435
  using iterator = typename ZippyIteratorTuple<ItType, decltype(820,29435
                                               IndexSequence>::type;type821,29509
  using const_iterator 822,29578
      typename ZippyIteratorTuple<ItType, const decltype(823,29603
                                  IndexSequence>::type;type824,29670
  using iterator_category 825,29726
  using value_type 826,29792
  using difference_type 827,29844
  using pointer 828,29906
  using reference 829,29952
  using const_reference 830,30002
  zippy(832,30065
  const_iterator begin(834,30132
  iterator begin(835,30203
  const_iterator end(836,30262
  iterator end(837,30329
  const_iterator begin_impl(841,30420
  template <size_t... Ns> iterator begin_impl(844,30552
  const_iterator end_impl(849,30717
  template <size_t... Ns> iterator end_impl(852,30845
template <typename T,861,31138
template <typename T, typename U,861,31138
detail::zippy<detail::zip_shortest, T, U, Args...> zip(862,31190
template <typename T,871,31637
template <typename T, typename U,871,31637
detail::zippy<detail::zip_first, T, U, Args...> zip_equal(872,31689
template <typename T,884,32385
template <typename T, typename U,884,32385
detail::zippy<detail::zip_first, T, U, Args...> zip_first(885,32437
namespace detail 894,32847
Iter next_or_end(896,32891
template <typename Iter> struct ZipLongestItemType 910,33217
  using type 911,33270
template <typename... Iters> struct ZipLongestTupleType 915,33390
  using type 916,33448
class zip_longest_iterator920,33553
  using value_type 932,34103
  std::tuple<Iters...> iterators;935,34180
  std::tuple<Iters...> end_iterators;936,34214
  bool test(939,34279
  template <size_t... Ns> value_type deref(945,34487
  decltype(951,34701
  zip_longest_iterator(957,34892
  value_type operator*(961,35066
  zip_longest_iterator<Iters...> &operator++(operator++965,35159
  bool operator==(operator==970,35293
template <typename... Args> class zip_longest_range 975,35434
  using iterator 977,35496
  using iterator_category 979,35589
  using value_type 980,35655
  using difference_type 981,35707
  using pointer 982,35769
  using reference 983,35815
  std::tuple<Args...> ts;986,35875
  iterator begin_impl(989,35928
  template <size_t... Ns> iterator end_impl(994,36122
  zip_longest_range(1000,36344
  iterator begin(1002,36417
  iterator end(1005,36507
template <typename T,1012,36814
template <typename T, typename U,1012,36814
detail::zip_longest_range<T, U, Args...> zip_longest(1013,36866
template <typename ValueT,1029,37686
class concat_iterator1030,37733
  using BaseT 1033,37896
  std::tuple<IterTs...> Begins;1041,38293
  std::tuple<IterTs...> Ends;1042,38325
  template <size_t Index> bool incrementHelper(1048,38540
  template <size_t... Ns> void increment(1061,38867
  template <size_t Index> ValueT *getHelper(getHelper1077,39548
  template <size_t... Ns> ValueT &get(get1090,39922
  explicit concat_iterator(1109,40618
  concat_iterator &operator++(operator++1114,40764
  ValueT &operator*(operator*1119,40874
  bool operator==(operator==1123,40963
namespace detail 1128,41078
template <typename ValueT,1135,41354
template <typename ValueT, typename... RangeTs> class concat_range 1135,41354
  std::tuple<RangeTs...> Ranges;1142,41565
  iterator begin_impl(1145,41625
  iterator begin_impl(1149,41753
  template <size_t... Ns> iterator end_impl(1152,41861
  template <size_t... Ns> iterator end_impl(1156,42070
  concat_range(1162,42294
  iterator begin(1165,42384
  iterator begin(1168,42471
  iterator end(1171,42564
  iterator end(1174,42647
template <typename ValueT,1184,42878
detail::concat_range<ValueT, RangeTs...> concat(1185,42926
template <typename DerivedT,1194,43351
template <typename DerivedT, typename BaseT,1194,43351
template <typename DerivedT, typename BaseT, typename T,1194,43351
          typename PointerT 1195,43408
  ptrdiff_t operator-(1201,43716
  bool operator==(operator==1205,43876
  bool operator<(1208,43995
  DerivedT &operator+=(operator+=1213,44151
  DerivedT &operator-=(operator-=1217,44268
namespace detail 1235,44721
template <typename DerivedT,1246,45311
template <typename DerivedT, typename BaseT,1246,45311
template <typename DerivedT, typename BaseT, typename T,1246,45311
          typename PointerT 1247,45368
          typename PointerT = T *, typename ReferenceT 1247,45368
  class iterator 1253,45566
    ReferenceT operator*(1257,45803
    iterator(1262,45936
    friend indexed_accessor_range_base<DerivedT, BaseT,1266,46090
    friend indexed_accessor_range_base<DerivedT, BaseT, T,1266,46090
    friend indexed_accessor_range_base<DerivedT, BaseT, T, PointerT,1266,46090
  operator RangeT(operator RangeT1331,48481
template <typename OtherT,1357,49333
template <typename OtherT, typename DerivedT,1357,49333
template <typename OtherT, typename DerivedT, typename BaseT,1357,49333
template <typename OtherT, typename DerivedT, typename BaseT, typename T,1357,49333
          typename PointerT,1358,49407
bool operator==(operator==1359,49457
template <typename OtherT,1365,49714
template <typename OtherT, typename DerivedT,1365,49714
template <typename OtherT, typename DerivedT, typename BaseT,1365,49714
template <typename OtherT, typename DerivedT, typename BaseT, typename T,1365,49714
          typename PointerT,1366,49788
bool operator!=(operator!=1367,49838
template <typename DerivedT,1381,50526
template <typename DerivedT, typename BaseT,1381,50526
template <typename DerivedT, typename BaseT, typename T,1381,50526
          typename PointerT 1382,50583
namespace detail 1416,52048
template <typename EltTy,1423,52426
template <typename EltTy, typename FirstTy> class first_or_second_type 1423,52426
  using type = std::conditional_t<std::is_reference<EltTy>::value, FirstTy,1425,52507
template <typename ContainerTy> auto make_first_range(1431,52754
template <typename ContainerTy> auto make_second_range(1441,53238
struct less_first 1459,54002
  template <typename T> bool operator()(operator()1460,54022
struct less_second 1468,54365
  template <typename T> bool operator()(operator()1469,54386
struct on_first 1477,54655
  FuncTy func;1478,54673
  decltype(auto) operator()(operator()1481,54713
template <int N> struct rank 1488,54923
template <> struct rank<rank1489,54970
namespace detail 1491,55002
template <typename HeadT,1494,55064
struct Visitor<HeadT, TailTs...> : remove_cvref_t<remove_cvref_t1495,55110
template <typename HeadT> struct Visitor<Visitor1503,55456
  explicit constexpr Visitor(1504,55530
constexpr decltype(1539,56912
void shuffle(1550,57397
      typename std::iterator_traits<std::iterator_traits1554,57567
inline int array_pod_sort_comparator(1566,58052
inline int (*get_array_pod_sort_comparator(get_array_pod_sort_comparator1579,58521
namespace detail 1585,58684
inline unsigned presortShuffleEntropy(1587,58704
inline void presortShuffle(1593,58844
inline void array_pod_sort(1616,59831
inline void array_pod_sort(1628,60252
namespace detail 1644,60846
using sort_trivially_copyable 1648,60992
inline void sort(1656,61331
template <typename Container> inline void sort(1669,61750
template <typename IteratorTy,1673,61857
inline void sort(1674,61906
template <typename Container,1681,62088
inline void sort(1682,62136
auto size(1689,62386
namespace detail 1698,62736
using check_has_free_function_size 1700,62781
static constexpr bool HasFreeFunctionSize 1704,62894
    is_detected<check_has_free_function_size, Range>::value;value1705,62938
template <typename R> constexpr size_t range_size(1714,63435
template <typename R,1723,63773
UnaryFunction for_each(1724,63819
template <typename R,1730,64042
bool all_of(1731,64089
template <typename R,1737,64300
bool any_of(1738,64347
template <typename R,1744,64559
bool none_of(1745,64606
template <typename R,1751,64817
template <typename R, typename T> auto find(1751,64817
template <typename R,1757,65057
auto find_if(1758,65104
template <typename R,1762,65211
auto find_if_not(1763,65258
template <typename R,1769,65482
auto remove_if(1770,65529
template <typename R,1776,65747
template <typename R, typename OutputIt,1776,65747
OutputIt copy_if(1777,65813
template <typename T,1786,66204
template <typename T, typename R,1786,66204
T *find_singleton(find_singleton1787,66258
template <typename T,1810,67214
template <typename T, typename R,1810,67214
std::pair<T *, bool> find_singleton_nested(1811,67268
template <typename R,1832,67845
OutputIt copy(1833,67886
template <typename R,1839,68104
template <typename R, typename OutputIt,1839,68104
template <typename R, typename OutputIt, typename UnaryPredicate,1839,68104
OutputIt replace_copy_if(1840,68182
template <typename R,1848,68524
template <typename R, typename OutputIt,1848,68524
OutputIt replace_copy(1849,68577
template <typename R,1857,68907
OutputIt move(1858,68948
namespace detail 1862,69051
template <typename Range,1863,69070
using check_has_member_contains_t 1864,69114
template <typename Range,1867,69232
static constexpr bool HasMemberContains 1868,69276
    is_detected<check_has_member_contains_t, Range,1869,69318
    is_detected<check_has_member_contains_t, Range, Element>::value;value1869,69318
template <typename Range,1871,69388
using check_has_member_find_t 1872,69432
template <typename Range,1876,69588
static constexpr bool HasMemberFind 1877,69632
    is_detected<check_has_member_find_t, Range,1878,69670
    is_detected<check_has_member_find_t, Range, Element>::value;value1878,69670
template <typename R,1887,70104
bool is_contained(1888,70138
template <typename T,1900,70606
constexpr bool is_contained(1901,70640
template <typename R,1911,70983
template <typename R, typename Compare> bool is_sorted(1911,70983
template <typename R> bool is_sorted(1917,71247
template <typename R,1923,71489
template <typename R, typename E> auto count(1923,71489
template <typename R,1929,71766
auto count_if(1930,71813
template <typename R,1936,72032
template <typename R, typename OutputIt,1936,72032
OutputIt transform(1937,72097
template <typename R,1943,72347
auto partition(1944,72394
template <typename R,1950,72616
template <typename R, typename T> auto lower_bound(1950,72616
template <typename R,1955,72805
template <typename R, typename T,1955,72805
auto lower_bound(1956,72857
template <typename R,1963,73137
template <typename R, typename T> auto upper_bound(1963,73137
template <typename R,1968,73326
template <typename R, typename T,1968,73326
auto upper_bound(1969,73378
void stable_sort(1975,73569
template <typename R,1979,73656
void stable_sort(1980,73696
template <typename R,1986,73957
template <typename R, typename Predicate,1986,73957
          typename Val 1987,73999
template<typename Range,1992,74183
auto unique(1993,74228
template <typename L,1999,74428
template <typename L, typename R> bool equal(1999,74428
template <typename R> bool all_equal(2005,74695
template <typename T> bool all_equal(2013,74961
template <typename Container,2024,75363
void erase_if(2025,75418
template <typename Container,2032,75620
void erase(2033,75670
template <typename Container,2037,75769
LLVM_DEPRECATED(2038,75819
template <typename Container,2046,76035
void append_range(2047,76081
template <typename Container,2052,76219
void append_values(2053,76267
template<typename Container,2061,76614
void replace(2062,76674
template<typename Container,2079,77183
template<typename Container, typename Range 2079,77183
template <typename ForwardIterator,2096,77879
template <typename ForwardIterator, typename UnaryFunctor,2096,77879
          typename NullaryFunctor,2097,77938
          typename 2098,77973
template <typename Container,2113,78440
template <typename Container, typename UnaryFunctor,2113,78440
template <typename Container, typename UnaryFunctor, typename NullaryFunctor,2113,78440
          typename 2114,78518
template <typename Container,2123,78945
template <typename Container, typename UnaryFunctor,2123,78945
template <typename Container, typename UnaryFunctor, typename StreamT,2123,78945
          typename T 2124,79016
template <typename Container,2129,79274
template <typename Container, typename StreamT,2129,79274
          typename T 2130,79322
template <typename Container,2137,79559
template <typename Container, typename UnaryFunctor,2137,79559
template <typename Container, typename UnaryFunctor, typename StreamT,2137,79559
          typename T 2138,79630
template <typename Container,2143,79837
template <typename Container, typename StreamT,2143,79837
          typename T 2144,79885
struct FreeDeleter 2153,80261
  void operator()(operator()2154,80282
template<typename First,2159,80334
struct pair_hash 2160,80376
  size_t operator()(operator()2161,80395
template <typename T> struct deref 2168,80636
  T func;2169,80673
  template <typename A,2174,80845
  template <typename A, typename B> auto operator()(operator()2174,80845
namespace detail 2181,80992
using EnumeratorTupleType 2187,81150
struct zip_enumerator 2201,81981
                   Iters...>::zip_common;zip_common2205,82271
  bool operator==(operator==2207,82314
template <typename... Refs> struct enumerator_result<enumerator_result2212,82450
  static constexpr std::size_t NumRefs 2213,82527
  static constexpr std::size_t NumValues 2216,82653
  using range_reference_tuple 2219,82777
  using value_reference_tuple 2222,82947
  enumerator_result(2224,83014
  std::size_t index(2229,83224
  decltype(2233,83361
  template <std::size_t I,2241,83563
  template <std::size_t I, typename 2241,83563
  template <std::size_t I,2248,83805
  template <std::size_t I, typename 2248,83805
  friend bool operator==(operator==2257,84218
private:private2265,84555
  bool is_value_equal(2267,84612
  std::size_t Idx;2271,84770
  mutable range_reference_tuple Storage;2279,85203
struct index_iterator2282,85248
  index_iterator(2285,85400
  index_iterator &operator+=(operator+=2287,85455
  index_iterator &operator-=(operator-=2292,85543
  std::ptrdiff_t operator-(2297,85631
  std::size_t operator*(2306,86054
  friend bool operator==(operator==2308,86105
  friend bool operator<(2312,86226
  std::size_t Index;2317,86354
struct index_stream 2321,86439
  index_iterator begin(2322,86461
  index_iterator end(2323,86508
class index_range 2333,86808
  std::size_t Begin;2334,86828
  std::size_t End;2335,86849
  index_range(2338,86877
  detail::index_iterator begin(2339,86955
  detail::index_iterator end(2340,87014
template <typename FirstRange,2379,88097
auto enumerate(2380,88152
namespace detail 2395,88798
template <typename Predicate,2397,88818
bool all_of_zip_predicate_first(2398,88866
template <typename... ArgsThenPredicate,2412,89262
bool all_of_zip_predicate_last(2413,89327
bool all_of_zip(2428,90006
template <typename IterTy,2437,90431
          typename Pred 2438,90458
template <typename IterTy,2462,91397
          typename Pred 2463,91424
template <typename IterTy,2483,92201
          typename Pred 2484,92228
template <typename ContainerTy> bool hasNItems(2495,92659
bool hasNItemsOrMore(2501,92883
bool hasNItemsOrLess(2507,93087
template <class Ptr> auto to_address(2518,93494
template <class T> constexpr T *to_address(to_address2519,93572
namespace detail 2522,93712
template <typename T> using has_sizeof 2523,93731
constexpr bool is_incomplete_v 2529,93965
namespace std 2533,94068
struct tuple_size<tuple_size2535,94112
template <std::size_t I,2538,94236
    : std::tuple_element<std::tuple_element2540,94345
template <std::size_t I,2542,94399
    : std::tuple_element<std::tuple_element2544,94514

/usr/include/llvm/ADT/STLForwardCompat.h,238
#define LLVM_ADT_STLFORWARDCOMPAT_H18,700
struct remove_cvref 30,1011
using remove_cvref_t 36,1161
template <typename T,45,1547
template <typename T,55,1839
[[nodiscard]] constexpr std::underlying_type_t<Enum> to_underlying(66,2175

/usr/include/llvm/ADT/Sequence.h,2946
#define LLVM_ADT_SEQUENCE_H81,2540
template <typename EnumT> struct enum_iteration_traits 99,3294
struct force_iteration_on_noniterable_enum_t 103,3400
    force_iteration_on_noniterable_enum;108,3568
struct CheckedInt 126,4359
  template <typename Integral,128,4458
            std::enable_if_t<std::enable_if_t129,4489
  template <typename Enum,139,4860
            std::enable_if_t<std::enable_if_t140,4887
  bool operator==(operator==147,5116
  bool operator!=(operator!=148,5190
  CheckedInt operator+(150,5265
  intmax_t operator-(157,5437
  template <typename Integral,165,5683
            std::enable_if_t<std::enable_if_t166,5714
  template <typename Enum,175,6022
            std::enable_if_t<std::enable_if_t176,6049
  static void assertOutOfBounds(183,6226
  intmax_t Value;185,6299
template <typename T,188,6321
template <typename T, bool IsReverse> struct SafeIntIterator 188,6321
  using iterator_category 189,6384
  using value_type 190,6445
  using difference_type 191,6469
  using pointer 192,6505
  using reference 193,6528
  explicit SafeIntIterator(196,6627
  SafeIntIterator(198,6736
  reference operator*(201,6827
  bool operator==(operator==206,7049
  bool operator!=(operator!=207,7122
  bool operator<(209,7211
  bool operator>(210,7288
  bool operator<=(operator<=211,7365
  bool operator>=(operator>=212,7444
  void operator++(215,7553
  void operator--(216,7588
  SafeIntIterator operator++(219,7655
  SafeIntIterator operator--(224,7754
  void operator+=(operator+=231,7889
  void operator-=(operator-=232,7944
  SafeIntIterator operator+(235,8017
  SafeIntIterator operator-(236,8092
  intmax_t operator-(239,8185
  SafeIntIterator(244,8300
  static intmax_t getOffset(246,8353
  CheckedInt add(250,8446
  void offset(252,8522
  CheckedInt SI;254,8587
  template <typename,typename257,8658
template <typename T> struct iota_range 262,8744
  using value_type 263,8786
  using reference 264,8810
  using const_reference 265,8835
  using iterator 266,8872
  using const_iterator 267,8935
  using reverse_iterator 268,8970
  using const_reverse_iterator 269,9040
  using difference_type 270,9091
  using size_type 271,9127
  explicit iota_range(273,9161
  size_t size(280,9375
  bool empty(281,9435
  auto begin(283,9496
  auto end(284,9556
  auto rbegin(286,9617
  auto rend(287,9692
  iterator BeginValue;295,10013
  iterator PastEndValue;296,10036
template <typename T,303,10307
template <typename T, typename 303,10307
template <typename T,313,10772
template <typename T, typename 313,10772
template <typename T,323,11211
template <typename T, typename 323,11211
template <typename EnumT,335,11796
          typename 336,11822
template <typename EnumT,350,12525
          typename 351,12551
template <typename EnumT,362,13097
          typename 363,13123
template <typename EnumT,377,13838
          typename 378,13864

/usr/include/llvm/ADT/SetVector.h,621
#define LLVM_ADT_SETVECTOR_H21,904
  bool operator==(operator==291,9017
  bool operator!=(operator!=295,9107
  class TestAndEraseFromSet 335,10366
    UnaryPredicate P;336,10396
    set_type &set_;set_337,10418
    TestAndEraseFromSet(340,10449
    bool operator()(operator()344,10583
template <typename T,369,11157
class SmallSetVector 370,11191
  SmallSetVector(376,11393
namespace std 383,11493
template <typename T,386,11562
template <typename T, typename V,386,11562
template <typename T, typename V, typename S,386,11562
inline void swap(387,11620
template<typename T,393,11801
swap(395,11846

/usr/include/llvm/ADT/SmallString.h,1646
#define LLVM_ADT_SMALLSTRING_H15,545
class SmallString 26,856
  SmallString(32,1029
  SmallString(35,1169
  SmallString(42,1351
  using SmallVector<char,char48,1473
  using SmallVector<char, InternalLen>::assign;assign48,1473
  void assign(51,1553
  void assign(56,1688
  using SmallVector<char,char65,1837
  using SmallVector<char, InternalLen>::append;append65,1837
  void append(68,1917
  void append(73,2052
  [[nodiscard]] bool equals(92,2679
  [[nodiscard]] bool equals_insensitive(95,2807
  [[nodiscard]] int compare(102,3093
  [[nodiscard]] int compare_insensitive(105,3238
  [[nodiscard]] int compare_numeric(111,3441
  [[nodiscard]] bool starts_with(120,3667
  [[nodiscard]] bool ends_with(125,3839
  [[nodiscard]] size_t find(137,4142
  [[nodiscard]] size_t find(145,4390
  [[nodiscard]] size_t rfind(153,4644
  [[nodiscard]] size_t rfind(161,4906
  [[nodiscard]] size_t find_first_of(165,5087
  [[nodiscard]] size_t find_first_of(173,5346
  [[nodiscard]] size_t find_first_not_of(179,5565
  [[nodiscard]] size_t find_first_not_of(187,5847
  [[nodiscard]] size_t find_last_of(194,6111
  [[nodiscard]] size_t find_last_of(203,6413
  [[nodiscard]] size_t count(213,6702
  [[nodiscard]] size_t count(217,6858
  [[nodiscard]] StringRef substr(232,7468
  [[nodiscard]] StringRef slice(247,8152
  [[nodiscard]] StringRef str(254,8320
  const char* c_str(259,8459
  operator StringRef(operator StringRef266,8599
  explicit operator std::string(string268,8647
  SmallString &operator=(operator=273,8768
  SmallString &operator+=(operator+=278,8856
  SmallString &operator+=(operator+=282,8963

/usr/include/llvm/ADT/SmallVector.h,4364
#define LLVM_ADT_SMALLVECTOR_H15,545
template <class Size_T> class SmallVectorBase 52,1711
  void *BeginX;BeginX54,1770
  Size_T Size = 0, Capacity;55,1786
  static constexpr size_t SizeTypeMax(58,1860
  SmallVectorBase(63,1984
  size_t size(91,3514
  size_t capacity(92,3553
  [[nodiscard]] bool empty(94,3601
  void set_size(101,3836
  void set_allocation_range(110,4166
using SmallVectorSizeType 118,4337
template <class T, typename 123,4519
template <typename T,132,4967
template <typename T, typename 132,4967
template <typename T,339,12301
template <typename T, bool 339,12301
template <typename T,445,16229
void SmallVectorTemplateBase<T, TriviallyCopyable>::grow(grow446,16275
template <typename T,453,16506
T *SmallVectorTemplateBase<T, TriviallyCopyable>::mallocForGrow(mallocForGrow454,16552
template <typename T,462,16891
void SmallVectorTemplateBase<T, TriviallyCopyable>::moveElementsForGrow(moveElementsForGrow463,16937
template <typename T,473,17281
void SmallVectorTemplateBase<T, TriviallyCopyable>::takeAllocationForGrow(takeAllocationForGrow474,17327
class SmallVectorImpl 586,21948
  using SuperClass 587,22008
  using iterator 590,22066
  using const_iterator 591,22116
  using reference 592,22178
  using size_type 593,22230
  using SmallVectorTemplateBase<T>::TakesParamByValue;TakesParamByValue596,22294
  using ValueParamT 597,22349
  explicit SmallVectorImpl(600,22447
  void assignRemote(603,22528
  ~SmallVectorImpl(613,22801
  void clear(623,23083
  using SuperClass::set_size;630,23247
  template <bool ForOverwrite> void resizeImpl(632,23278
  void resize(651,23660
  void resize_for_overwrite(654,23789
  void truncate(657,23922
  void resize(663,24109
  void reserve(676,24357
  void pop_back_n(681,24443
  [[nodiscard]] T pop_back_val(686,24565
  template <typename ItTy,695,24785
  template <typename ItTy, typename 695,24785
  void append(705,25230
  void append(711,25473
  void append(715,25557
  void assign(717,25636
  template <typename ItTy,736,26329
  template <typename ItTy, typename 736,26329
  void assign(743,26562
  void assign(748,26641
  iterator erase(750,26720
  iterator erase(764,27121
  template <class ArgType> iterator insert_one_impl(781,27654
  iterator insert(818,29024
  iterator insert(822,29144
  iterator insert(826,29258
  template <typename ItTy,887,31620
  template <typename ItTy, typename 887,31620
  void insert(946,33670
  template <typename... ArgTypes> reference emplace_back(950,33769
  bool operator==(operator==963,34228
  bool operator!=(operator!=967,34400
  bool operator<(971,34487
  bool operator>(975,34677
  bool operator<=(operator<=976,34752
  bool operator>=(operator>=977,34831
void SmallVectorImpl<T>::swap(swap981,34936
  operator=(operator=1018,36229
SmallVectorImpl<T> &SmallVectorImpl<T>::operator=(operator=1065,37588
template <typename T,1122,39299
struct SmallVectorStorage 1123,39333
template <typename T> struct alignas(T) SmallVectorStorage<SmallVectorStorage1130,39578
template <typename T,1135,39789
template <typename T, unsigned N> class LLVM_GSL_OWNER SmallVector;1135,39789
template <typename T> struct CalculateSmallVectorDefaultInlinedElements 1142,40100
  static constexpr size_t kPreferredSmallVectorSizeof 1150,40470
  static constexpr size_t PreferredInlineBytes 1183,42316
  static constexpr size_t NumElementsThatFit 1185,42428
  static constexpr size_t value 1186,42509
template <typename T,1206,43459
          unsigned N 1207,43481
  SmallVector &operator=(operator=1254,44832
  SmallVector &operator=(operator=1269,45235
  SmallVector &operator=(operator=1287,45688
  SmallVector &operator=(operator=1292,45817
template <typename T,1298,45921
inline size_t capacity_in_bytes(1299,45955
using ValueTypeFromRangeType 1304,46082
template <unsigned Size,1311,46431
SmallVector<ValueTypeFromRangeType<R>, Size> to_vector(1312,46468
SmallVector<ValueTypeFromRangeType<R>> to_vector(1316,46607
template <typename Out,1320,46719
template <typename Out, unsigned Size,1320,46719
SmallVector<Out, Size> to_vector_of(1321,46770
template <typename Out,1325,46869
template <typename Out, typename R> SmallVector<Out> to_vector_of(1325,46869
namespace std 1337,47194
  swap(1342,47304
  template<typename T,1347,47455
  swap(1349,47504

/usr/include/llvm/ADT/SparseBitVector.h,1340
#define LLVM_ADT_SPARSEBITVECTOR_H16,642
    BITWORD_SIZE 47,1977
    BITWORDS_PER_ELEMENT 48,2024
    BITS_PER_ELEMENT 49,2100
template <unsigned ElementSize 255,7785
    BITWORD_SIZE 261,8053
  class SparseBitVectorIterator 319,10341
    bool AtEnd;321,10386
    ElementListConstIter Iter;326,10506
    unsigned BitNumber;329,10586
    unsigned WordNumber;332,10661
    typename SparseBitVectorElement<ElementSize>::BitWord Bits;335,10725
    void AdvanceToFirstNonZero(338,10856
    void AdvanceToNextNonZero(355,11365
    SparseBitVectorIterator(397,12725
    inline SparseBitVectorIterator& operator++(408,13037
    inline SparseBitVectorIterator operator++(416,13204
    unsigned operator*(423,13382
    bool operator==(operator==427,13446
    bool operator!=(operator!=436,13791
  SparseBitVector& operator=(operator=457,14331
  SparseBitVector &operator=(operator=465,14524
  bool operator!=(operator!=541,16815
  bool operator==(operator==545,16902
  bool operator|=(operator|=558,17353
  bool operator&=(operator&=588,18169
inline bool operator |=(operator |=823,24827
inline bool operator |=(operator |=829,25010
inline bool operator &=(operator &=835,25202
inline bool operator &=(operator &=841,25394
operator|(850,25692
operator&(859,25945
operator-(868,26198
void dump(877,26475

/usr/include/llvm/ADT/SparseSet.h,418
#define LLVM_ADT_SPARSESET_H21,953
struct SparseSetValTraits 57,2425
  static unsigned getValIndex(58,2453
template<typename KeyT,67,2760
template<typename KeyT, typename ValueT,67,2760
struct SparseSetValFunctor 68,2823
  unsigned operator()(operator()69,2852
template<typename KeyT,76,3069
  unsigned operator()(operator()78,3169
template<typename ValueT,121,5182
         typename KeyFunctorT 122,5208

/usr/include/llvm/ADT/StableHashing.h,459
#define LLVM_ADT_STABLEHASHING_H16,676
namespace llvm 20,743
inline void stable_hash_append(41,1351
inline stable_hash stable_hash_combine(51,1585
inline stable_hash stable_hash_combine(58,1823
inline stable_hash stable_hash_combine(67,2163
stable_hash stable_hash_combine_range(84,2920
inline stable_hash stable_hash_combine_array(92,3202
inline stable_hash stable_hash_combine_string(99,3438
inline stable_hash stable_hash_combine_string(103,3565

/usr/include/llvm/ADT/StringExtras.h,2792
#define LLVM_ADT_STRINGEXTRAS_H15,582
inline std::vector<StringRef> toStringRefArray(47,1445
inline StringRef toStringRef(55,1671
inline StringRef toStringRef(58,1817
inline StringRef toStringRef(61,1956
inline unsigned hexDigitValue(80,2701
inline bool isDigit(105,4068
inline bool isHexDigit(108,4195
inline bool isLower(111,4343
inline bool isUpper(114,4485
inline bool isAlpha(117,4623
inline bool isAlnum(121,4818
inline bool isASCII(124,4953
inline bool isASCII(127,5081
inline bool isPrint(138,5385
inline bool isSpace(146,5646
inline char toLower(152,5844
inline char toUpper(159,6005
inline std::string utohexstr(165,6094
inline void toHex(183,6642
inline std::string toHex(195,7019
inline std::string toHex(201,7189
inline bool tryGetHexFromNibbles(209,7593
inline uint8_t hexFromNibbles(221,7984
inline bool tryGetFromHex(233,8524
inline std::string fromHex(268,9811
template <typename N> bool to_integer(279,10216
namespace detail 283,10336
inline bool to_float(285,10377
inline bool to_float(297,10659
inline bool to_float(301,10756
inline bool to_float(305,10854
inline std::string utostr(309,10958
inline std::string itostr(324,11307
inline std::string toString(331,11493
inline std::string toString(338,11726
inline StringRef getOrdinalSuffix(363,13010
namespace detail 404,14503
inline std::string join_impl(407,14553
inline std::string join_impl(422,14875
inline void join_items_impl(444,15487
template <typename Sep,446,15555
inline void join_items_impl(447,15593
template <typename Sep,452,15725
template <typename Sep, typename Arg1,452,15725
inline void join_items_impl(453,15782
inline size_t join_one_item_size(460,16020
inline size_t join_one_item_size(461,16073
template <typename T> inline size_t join_one_item_size(463,16154
template <typename... Args> inline size_t join_items_size(467,16249
inline std::string join(476,16546
inline std::string join(484,16887
template <typename Sep,492,17262
inline std::string join_items(493,17304
class ListSeparator 514,18000
  bool First 515,18022
  StringRef Separator;516,18043
  ListSeparator(519,18075
  operator StringRef(operator StringRef520,18145
class SplittingIterator530,18328
  char SeparatorStorage;533,18479
  StringRef Current;534,18504
  StringRef Next;535,18525
  StringRef Separator;536,18543
  SplittingIterator(539,18575
  SplittingIterator(544,18691
  SplittingIterator(550,18850
  SplittingIterator &operator=(operator=557,19118
  bool operator==(operator==570,19461
  const StringRef &operator*(operator*575,19605
  StringRef &operator*(operator*577,19663
  SplittingIterator &operator++(operator++579,19709
inline iterator_range<SplittingIterator> split(596,20201
inline iterator_range<SplittingIterator> split(601,20388

/usr/include/llvm/ADT/StringRef.h,573
#define LLVM_ADT_STRINGREF_H10,399
    constexpr operator std::string_view(string_view248,8573
  class StringLiteral 849,32197
    constexpr StringLiteral(851,32251
        __attribute(860,32550
    static constexpr StringLiteral withInnerNUL(869,32831
  inline bool operator==(operator==877,33008
  inline bool operator!=(operator!=881,33098
  inline bool operator<(883,33180
  inline bool operator<=(operator<=887,33274
  inline bool operator>(891,33370
  inline bool operator>=(operator>=895,33464
  inline std::string &operator+=(operator+=899,33560

/usr/include/llvm/ADT/StringSwitch.h,87
#define LLVM_ADT_STRINGSWITCH_H14,619
  [[nodiscard]] operator R(operator R188,6270

/usr/include/llvm/ADT/Twine.h,2587
#define LLVM_ADT_TWINE_H10,395
  class Twine 81,3783
    enum NodeKind 83,3853
      NullKind,86,3986
      EmptyKind,89,4031
      TwineKind,92,4090
      CStringKind,95,4152
      StdStringKind,98,4220
      PtrAndLengthKind,103,4437
      StringLiteralKind,107,4612
      FormatvObjectKind,110,4693
      CharKind,113,4769
      DecUIKind,116,4861
      DecIKind,119,4942
      DecULKind,123,5058
      DecLKind,126,5152
      DecULLKind,130,5273
      DecLLKind,133,5373
      UHexKind137,5488
    union Child140,5511
      const Twine *twine;twine142,5533
      const char *cString;cString143,5559
      const std::string *stdString;stdString144,5586
        const char *ptr;ptr146,5637
        size_t length;147,5662
      } ptrAndLength;148,5685
      const formatv_object_base *formatvObject;formatvObject149,5707
      char character;150,5755
      unsigned int decUI;151,5777
      int decI;152,5803
      const unsigned long *decUL;decUL153,5819
      const long *decL;decL154,5853
      const unsigned long long *decULL;decULL155,5877
      const long long *decLL;decLL156,5917
      const uint64_t *uHex;uHex157,5947
    Child LHS;162,6090
    Child RHS;166,6213
    explicit Twine(175,6521
    explicit Twine(180,6660
    explicit Twine(188,6926
    bool isNull(194,7156
    bool isEmpty(199,7263
    bool isNullary(204,7395
    bool isUnary(209,7507
    bool isBinary(214,7638
    bool isValid(220,7850
    NodeKind getLHSKind(245,8571
    NodeKind getRHSKind(248,8673
    /*implicit*/ Twine(262,9092
    /*implicit*/ Twine(273,9483
    /*implicit*/ Twine(287,9898
    /*implicit*/ Twine(296,10347
    /*implicit*/ Twine(304,10612
    /*implicit*/ Twine(311,10864
    /*implicit*/ Twine(319,11127
    /*implicit*/ Twine(327,11405
    explicit Twine(334,11614
    explicit Twine(339,11737
    explicit Twine(344,11889
    explicit Twine(349,12076
    explicit Twine(354,12233
    explicit Twine(359,12386
    explicit Twine(364,12556
    explicit Twine(369,12718
    explicit Twine(374,12895
    /*implicit*/ Twine(384,13322
    /*implicit*/ Twine(393,13694
    static Twine createNull(407,14320
    static Twine utohexstr(416,14523
    bool isTriviallyEmpty(429,14884
    bool isSingleStringLiteral(434,15030
    bool isSingleStringRef(440,15264
    StringRef getSingleStringRef(473,16085
    StringRef toStringRef(492,16854
  inline Twine operator+(554,18732
  inline Twine operator+(561,18926
  inline Twine operator+(568,19123
  inline raw_ostream &operator<<(operator<<572,19222

/usr/include/llvm/ADT/bit.h,1993
#define LLVM_ADT_BIT_H15,541
#define BIG_ENDIAN 39,1232
#define LITTLE_ENDIAN 40,1256
#define BYTE_ORDER 42,1308
#define BYTE_ORDER 44,1344
#define BIG_ENDIAN 47,1407
#define LITTLE_ENDIAN 48,1431
#define BYTE_ORDER 49,1458
enum class endianness 70,2099
  big,71,2123
  little,72,2130
  native 74,2215
  native 76,2236
    typename To,84,2502
    typename To, typename From,84,2502
    typename 85,2534
template <typename T,100,3087
template <typename T, typename 100,3087
template <typename T,145,4540
template <typename T, typename 145,4540
namespace detail 150,4743
template <typename T,151,4762
template <typename T, std::size_t SizeOfT> struct TrailingZerosCounter 151,4762
  static unsigned count(152,4835
  static unsigned count(176,5405
  static unsigned count(192,5775
template <typename T> [[nodiscard]] int countr_zero(215,6300
namespace detail 221,6536
template <typename T,222,6555
template <typename T, std::size_t SizeOfT> struct LeadingZerosCounter 222,6555
  static unsigned count(223,6627
  static unsigned count(242,7085
  static unsigned count(258,7459
template <typename T> [[nodiscard]] int countl_zero(281,7989
template <typename T> [[nodiscard]] int countl_one(294,8469
template <typename T> [[nodiscard]] int countr_one(307,8920
template <typename T> [[nodiscard]] int bit_width(317,9259
template <typename T> [[nodiscard]] T bit_floor(327,9638
template <typename T> [[nodiscard]] T bit_ceil(342,10137
namespace detail 350,10379
template <typename T,351,10398
template <typename T, std::size_t SizeOfT> struct PopulationCounter 351,10398
  static int count(352,10468
  static int count(367,10913
template <typename T,384,11421
template <typename T, typename 384,11421
template <typename T,390,11665
template <typename T, typename 390,11665
template <typename T,393,11784
template <typename T, typename 393,11784
template <typename T,407,12072
template <typename T, typename> [[nodiscard]] constexpr T rotr(407,12072

/usr/include/llvm/ADT/ilist_iterator.h,4185
#define LLVM_ADT_ILIST_ITERATOR_H10,404
  using value_type 32,1086
  using pointer 33,1144
  using reference 34,1196
  using node_pointer 35,1252
  using node_reference 36,1310
template <> struct IteratorHelper<IteratorHelper40,1423
  using Access 41,1493
  template <class T> static void increment(43,1537
  template <class T> static void decrement(44,1616
template <> struct IteratorHelper<IteratorHelper46,1698
  using Access 47,1767
  template <class T> static void increment(49,1811
  template <class T> static void decrement(50,1890
template <class OptionsT, bool IsReverse,56,2061
class ilist_iterator 57,2117
  friend ilist_iterator<OptionsT, IsReverse,58,2185
  friend ilist_iterator<OptionsT, !IsReverse,IsReverse59,2241
  friend ilist_iterator<OptionsT, !IsReverse,IsReverse60,2297
  using Traits 62,2355
  using Access 63,2421
  using value_type 66,2491
  using pointer 67,2541
  using reference 68,2585
  using difference_type 69,2633
  using iterator_category 70,2670
  using const_pointer 71,2731
  using const_reference 72,2789
  using node_pointer 75,2861
  using node_reference 76,2915
  node_pointer NodePtr 78,2974
  explicit ilist_iterator(82,3050
  explicit ilist_iterator(84,3112
  explicit ilist_iterator(85,3187
  ilist_iterator(91,3432
  operator=(operator=99,3816
  explicit ilist_iterator(112,4368
  ilist_iterator<ilist_iterator121,4789
  ilist_iterator<OptionsT, !IsReverse, IsConst> getReverse(121,4789
  ilist_iterator<ilist_iterator128,5028
  ilist_iterator<OptionsT, IsReverse, false> getNonConst(128,5028
  reference operator*(137,5396
  pointer operator->(141,5515
  friend bool operator==(operator==144,5596
  friend bool operator!=(operator!=147,5720
  ilist_iterator &operator--(operator--152,5887
  ilist_iterator &operator++(operator++156,6009
  ilist_iterator operator--(160,6131
  ilist_iterator operator++(165,6231
  node_pointer getNodePtr(172,6369
  bool isEnd(175,6518
template <class OptionsT, bool IsReverse,181,6791
class ilist_iterator_w_bits 182,6847
  friend ilist_iterator_w_bits<OptionsT, IsReverse,183,6922
  friend ilist_iterator_w_bits<OptionsT, !IsReverse,IsReverse184,6985
  friend ilist_iterator<OptionsT, !IsReverse,IsReverse185,7048
  using Traits 187,7106
  using Access 188,7172
  using value_type 191,7242
  using pointer 192,7292
  using reference 193,7336
  using difference_type 194,7384
  using iterator_category 195,7421
  using const_pointer 196,7482
  using const_reference 197,7540
  using node_pointer 200,7612
  using node_reference 201,7666
  node_pointer NodePtr 203,7725
  mutable bool HeadInclusiveBit 211,8041
  mutable bool TailInclusiveBit 214,8178
  explicit ilist_iterator_w_bits(219,8268
  explicit ilist_iterator_w_bits(221,8337
  explicit ilist_iterator_w_bits(223,8425
  ilist_iterator_w_bits(230,8690
  operator=(operator=244,9231
  explicit ilist_iterator_w_bits(261,9927
  ilist_iterator_w_bits<ilist_iterator_w_bits270,10369
  ilist_iterator_w_bits<OptionsT, !IsReverse, IsConst> getReverse(270,10369
  ilist_iterator_w_bits<ilist_iterator_w_bits277,10629
  ilist_iterator_w_bits<OptionsT, IsReverse, false> getNonConst(277,10629
  reference operator*(293,11218
  pointer operator->(297,11337
  friend bool operator==(operator==300,11418
  friend bool operator!=(operator!=304,11581
  ilist_iterator_w_bits &operator--(operator--310,11787
  ilist_iterator_w_bits &operator++(operator++318,12023
  ilist_iterator_w_bits operator--(326,12259
  ilist_iterator_w_bits operator++(331,12373
  node_pointer getNodePtr(338,12525
  bool isEnd(341,12674
  bool getHeadBit(344,12788
  bool getTailBit(345,12843
  void setHeadBit(346,12898
  void setTailBit(347,12966
  bool getHeadBit(350,13110
  bool getTailBit(351,13154
  void setHeadBit(352,13198
  void setTailBit(353,13253
  using iterator 365,13679
  using SimpleType 366,13740
  static SimpleType getSimplifiedValue(368,13790
    : simplify_type<simplify_type372,13982
  using iterator 377,14230
  using SimpleType 378,14298
  static SimpleType getSimplifiedValue(380,14348
    : simplify_type<simplify_type384,14547

/usr/include/llvm/ADT/ilist_node.h,3921
#define LLVM_ADT_ILIST_NODE_H16,640
template <class OptionsT, bool IsReverse,29,848
template <class OptionsT, bool IsReverse,30,926
template <bool use_iterator_bits,35,1141
template <bool use_iterator_bits, typename Opts,35,1141
template <bool use_iterator_bits, typename Opts, bool arg1,35,1141
class ilist_select_iterator_type 36,1212
  using type 38,1255
  using type = ilist_iterator<Opts, arg1,38,1255
template <typename Opts,40,1307
template <typename Opts, bool arg1,40,1307
  using type 43,1421
template <class OptionsT> class ilist_node_impl 54,1845
  using value_type 55,1922
  using node_base_type 56,1974
  using list_base_type 57,2034
  friend class ilist_iterator<OptionsT, false,63,2223
  friend class ilist_iterator<OptionsT, false,64,2278
  friend class ilist_iterator<OptionsT, true,65,2332
  friend class ilist_iterator<OptionsT, true,66,2386
  friend class ilist_iterator_w_bits<OptionsT, false,67,2439
  friend class ilist_iterator_w_bits<OptionsT, false,68,2501
  friend class ilist_iterator_w_bits<OptionsT, true,69,2562
  friend class ilist_iterator_w_bits<OptionsT, true,70,2623
  using self_iterator 73,2695
      typename ilist_select_iterator_type<OptionsT::has_iterator_bits, OptionsT,74,2719
                                          false,75,2800
                                          false, false>::type;type75,2800
  using const_self_iterator 76,2863
      typename ilist_select_iterator_type<OptionsT::has_iterator_bits, OptionsT,77,2893
                                          false,78,2974
                                          false, true>::type;type78,2974
  using reverse_self_iterator 79,3036
      typename ilist_select_iterator_type<OptionsT::has_iterator_bits, OptionsT,80,3068
                                          true,81,3149
                                          true, false>::type;type81,3149
  using const_reverse_self_iterator 82,3211
      typename ilist_select_iterator_type<OptionsT::has_iterator_bits, OptionsT,83,3249
                                          true,84,3330
                                          true, true>::type;type84,3330
  ilist_node_impl *getPrev(getPrev89,3433
  ilist_node_impl *getNext(getNext93,3539
  const ilist_node_impl *getPrev(getPrev97,3645
  const ilist_node_impl *getNext(getNext101,3763
  void setPrev(105,3881
  void setNext(106,3948
  self_iterator getIterator(109,4024
  const_self_iterator getIterator(110,4087
  reverse_self_iterator getReverseIterator(112,4169
  const_reverse_self_iterator getReverseIterator(116,4262
  using node_base_type::isKnownSentinel;121,4436
  bool isSentinel(127,4664
class ilist_node176,6590
namespace ilist_detail 183,6829
struct NodeAccess 191,7135
  static ilist_node_impl<OptionsT> *getNodePtr(getNodePtr194,7194
  getNodePtr(200,7363
  static typename OptionsT::pointer getValuePtr(205,7461
  getValuePtr(211,7671
  static ilist_node_impl<OptionsT> *getPrev(getPrev216,7817
  static ilist_node_impl<OptionsT> *getNext(getNext221,7950
  getPrev(227,8126
  getNext(233,8274
template <class OptionsT> struct SpecificNodeAccess 238,8354
  using pointer 240,8432
  using const_pointer 241,8478
  using node_type 242,8536
  static node_type *getNodePtr(getNodePtr244,8584
  static const node_type *getNodePtr(getNodePtr248,8681
  static pointer getValuePtr(252,8790
  static const_pointer getValuePtr(256,8889
class ilist_sentinel 264,9062
  ilist_sentinel(266,9128
  void reset(271,9199
  bool empty(276,9271
template <typename NodeTy,283,9544
template <typename NodeTy, typename ParentTy,283,9544
class ilist_node_with_parent 284,9608
  const ParentTy *getNodeParent(getNodeParent294,9942
  NodeTy *getPrevNode(getPrevNode302,10163
  const NodeTy *getPrevNode(getPrevNode311,10538
  NodeTy *getNextNode(getNextNode316,10709
  const NodeTy *getNextNode(getNextNode325,11080

/usr/include/llvm/ADT/ilist_node_options.h,2436
#define LLVM_ADT_ILIST_NODE_OPTIONS_H10,408
template <bool EnableSentinelTracking> struct ilist_sentinel_tracking 26,899
template <class Tag> struct ilist_tag 32,1160
template <bool ExtraIteratorBits> struct ilist_iterator_bits 40,1530
template <bool IsExplicit> struct explicitness 45,1696
typedef explicitness<true> is_explicit;48,1794
typedef explicitness<false> is_implicit;49,1834
template <class Option> struct is_valid_option 62,2462
template <bool EnableSentinelTracking,69,2774
    : std::integral_constant<std::integral_constant72,2930
    : std::integral_constant<bool, EnableSentinelTracking>, is_explicit 72,2930
template <> struct extract_sentinel_tracking<extract_sentinel_tracking77,3187
struct extract_sentinel_tracking<extract_sentinel_tracking80,3286
struct is_valid_option<is_valid_option83,3402
  typedef Tag type;93,3790
template <> struct extract_tag<extract_tag97,3926
  typedef void type;98,3961
template <class Tag> struct is_valid_option<is_valid_option100,3985
template <bool IteratorBits,107,4253
    : std::integral_constant<std::integral_constant109,4376
template <> struct extract_iterator_bits<extract_iterator_bits113,4566
struct is_valid_option<is_valid_option115,4673
template <> struct check_options<check_options121,4913
template <class T, bool EnableSentinelTracking,130,5306
template <class T, bool EnableSentinelTracking, bool IsSentinelTrackingExplicit,130,5306
struct node_options 132,5431
  typedef T value_type;133,5453
  typedef T *pointer;pointer134,5477
  typedef T &reference;reference135,5499
  typedef const T *const_pointer;const_pointer136,5523
  typedef const T &const_reference;const_reference137,5557
  static const bool enable_sentinel_tracking 139,5594
  static const bool is_sentinel_tracking_explicit 140,5665
  static const bool has_iterator_bits 141,5745
  typedef TagT tag;142,5802
  typedef ilist_node_base<enable_sentinel_tracking> node_base_type;143,5822
  typedef ilist_base<enable_sentinel_tracking> list_base_type;144,5890
template <class T, class... Options> struct compute_node_options 147,5957
  typedef node_options<T,T148,6024
  typedef node_options<T, extract_sentinel_tracking<Options...>::value,value148,6024
                       extract_sentinel_tracking<Options...>::is_explicit,is_explicit149,6096
                       typename extract_tag<Options...>::type,type150,6171
      type;152,6299

/usr/include/llvm/ADT/iterator_range.h,368
#define LLVM_ADT_ITERATOR_RANGE_H19,856
class iterator_range 42,1470
  IteratorT begin_iterator,43,1493
  IteratorT begin_iterator, end_iterator;43,1493
public:public45,1536
iterator_range(Container &&) -> iterator_range<iterator_range68,2411
template <class T> iterator_range<T> make_range(74,2682
template <typename T> iterator_range<T> make_range(78,2801

/usr/include/llvm/ADT/simple_ilist.h,2357
#define LLVM_ADT_SIMPLE_ILIST_H10,402
class simple_ilist78,3483
  static_assert(82,3699
      typename ilist_detail::compute_node_options<T, Options...>::type;type85,3828
  ilist_sentinel<OptionsT> Sentinel;87,3960
      typename ilist_select_iterator_type<OptionsT::has_iterator_bits, OptionsT,96,4293
                                          false,97,4374
                                          false, false>::type;type97,4374
      typename ilist_select_iterator_type<OptionsT::has_iterator_bits, OptionsT,99,4462
                                          false,100,4543
                                          false, true>::type;type100,4543
      typename ilist_select_iterator_type<OptionsT::has_iterator_bits, OptionsT,102,4632
                                          true,103,4713
                                          true, false>::type;type103,4713
      typename ilist_select_iterator_type<OptionsT::has_iterator_bits, OptionsT,105,4808
                                          true,106,4889
                                          true, true>::type;type106,4889
  simple_ilist(118,5231
  simple_ilist &operator=(operator=119,5286
  iterator begin(125,5390
  const_iterator begin(126,5442
  iterator end(127,5512
  const_iterator end(128,5560
  reverse_iterator rbegin(129,5626
  const_reverse_iterator rbegin(130,5695
  reverse_iterator rend(133,5788
  const_reverse_iterator rend(134,5853
  [[nodiscard]] bool empty(139,5994
  [[nodiscard]] size_type size(142,6112
  reference front(144,6194
  const_reference front(145,6235
  reference back(146,6288
  const_reference back(147,6329
  void push_front(150,6431
  void push_back(153,6540
  void pop_front(156,6650
  void pop_back(159,6740
  void swap(162,6834
  iterator insert(165,6937
  void insert(172,7168
  void cloneFrom(179,7360
  void remove(189,7698
  void removeAndDispose(193,7857
  iterator erase(202,8118
  iterator erase(211,8358
  iterator eraseAndDispose(218,8583
  iterator eraseAndDispose(227,8805
  void clear(236,9085
  template <class Disposer> void clearAndDispose(239,9170
  void splice(244,9320
  void splice(249,9454
  void splice(254,9614
  void merge(263,9908
  void sort(269,10082
void simple_ilist<T, Options...>::merge(merge276,10248
void simple_ilist<T, Options...>::sort(sort298,10915

/usr/include/llvm/Analysis/Utils/ImportedFunctionsInliningStatistics.h,497
#define LLVM_ANALYSIS_UTILS_IMPORTEDFUNCTIONSINLININGSTATISTICS_H13,604
class ImportedFunctionsInliningStatistics 44,2044
  struct InlineGraphNode 47,2166
    llvm::SmallVector<llvm::SmallVector53,2382
    llvm::SmallVector<InlineGraphNode *, 8> InlinedCallees;53,2382
  NodesMapTy NodesMap;96,4145
  std::vector<StringRef> NonImportedCallers;98,4243
  StringRef ModuleName;101,4341
enum class InlinerFunctionImportStatsOpts 104,4369
  No 105,4413
  Basic 106,4423
  Verbose 107,4436

/usr/include/llvm/Analysis/Utils/Local.h,43
#define LLVM_ANALYSIS_UTILS_LOCAL_H15,578

/usr/include/llvm/Analysis/Utils/TrainingLogger.h,53
#define LLVM_ANALYSIS_UTILS_TRAININGLOGGER_H54,2425

/usr/include/llvm/Analysis/Utils/TFUtils.h,470
#define LLVM_ANALYSIS_UTILS_TFUTILS_H10,410
  class EvaluationResult 47,1783
    EvaluationResult(52,1951
    ~EvaluationResult(55,2059
    template <typename T> T *getTensorValue(getTensorValue58,2160
    template <typename T> const T *getTensorValue(getTensorValue62,2288
    void *getUntypedTensorValue(getUntypedTensorValue67,2493
    const void *getUntypedTensorValue(getUntypedTensorValue68,2540
    std::unique_ptr<EvaluationResultImpl> Impl;73,2712

/usr/include/llvm/Analysis/CFG.h,35
#define LLVM_ANALYSIS_CFG_H15,599

/usr/include/llvm/Analysis/CGSCCPassManager.h,3078
#define LLVM_ANALYSIS_CGSCCPASSMANAGER_H89,4900
#define DEBUG_TYPE 109,5362
  PreservedAnalyses run(153,7488
  void printPipeline(158,7719
using CGSCCAnalysisManagerModuleProxy 167,8040
template <> class CGSCCAnalysisManagerModuleProxy::Result 173,8322
  explicit Result(175,8390
  CGSCCAnalysisManager &getManager(getManager179,8535
  CGSCCAnalysisManager *InnerAM;InnerAM195,9245
  LazyCallGraph *G;G196,9278
using ModuleAnalysisManagerCGSCCProxy 213,9905
struct CGSCCUpdateResult 232,10861
  SmallPriorityWorklist<SmallPriorityWorklist242,11369
  SmallPriorityWorklist<LazyCallGraph::RefSCC *, 1> &RCWorklist;RCWorklist242,11369
  SmallPriorityWorklist<SmallPriorityWorklist257,12116
  SmallPriorityWorklist<LazyCallGraph::SCC *, 1> &CWorklist;CWorklist257,12116
  SmallPtrSetImpl<LazyCallGraph::RefSCC *> &InvalidatedRefSCCs;InvalidatedRefSCCs265,12490
  SmallPtrSetImpl<LazyCallGraph::SCC *> &InvalidatedSCCs;InvalidatedSCCs273,12860
  LazyCallGraph::SCC *UpdatedC;UpdatedC283,13398
  PreservedAnalyses CrossSCCPA;298,14262
  SmallDenseSet<SmallDenseSet306,14635
      &InlinedInternalEdges;InlinedInternalEdges307,14710
  SmallMapVector<SmallMapVector317,15188
  SmallMapVector<Value *, WeakTrackingVH, 16> IndirectVHs;317,15188
class ModuleToPostOrderCGSCCPassAdaptor329,15754
  using PassConceptT 332,15866
      detail::PassConcept<LazyCallGraph::SCC, CGSCCAnalysisManager,333,15889
  explicit ModuleToPostOrderCGSCCPassAdaptor(336,16023
  ModuleToPostOrderCGSCCPassAdaptor(339,16138
  operator=(operator=348,16451
  void printPipeline(356,16671
  static bool isRequired(363,16882
  std::unique_ptr<PassConceptT> Pass;366,16936
createModuleToPostOrderCGSCCPassAdaptor(373,17131
class FunctionAnalysisManagerCGSCCProxy392,18185
  class Result 395,18301
    explicit Result(397,18328
    explicit Result(398,18368
    void updateFAM(400,18434
    FunctionAnalysisManager &getManager(getManager402,18548
    FunctionAnalysisManager *FAM;FAM411,18782
  static AnalysisKey Key;420,19057
using CGSCCAnalysisManagerFunctionProxy 426,19230
class CGSCCToFunctionPassAdaptor459,20883
  using PassConceptT 462,20981
  explicit CGSCCToFunctionPassAdaptor(464,21061
  CGSCCToFunctionPassAdaptor(469,21309
  CGSCCToFunctionPassAdaptor &operator=(operator=478,21628
  void printPipeline(487,21954
  static bool isRequired(505,22422
  std::unique_ptr<PassConceptT> Pass;508,22476
  bool EagerlyInvalidate;509,22514
  bool NoRerun;510,22540
createCGSCCToFunctionPassAdaptor(517,22709
class ShouldNotRunFunctionPassesAnalysis536,23673
  static AnalysisKey Key;539,23791
  struct Result 540,23817
  Result run(542,23838
class DevirtSCCRepeatedPass 559,24730
  using PassConceptT 561,24814
      detail::PassConcept<LazyCallGraph::SCC, CGSCCAnalysisManager,562,24837
  explicit DevirtSCCRepeatedPass(565,24971
  void printPipeline(574,25421
  std::unique_ptr<PassConceptT> Pass;582,25667
  int MaxIterations;583,25705
DevirtSCCRepeatedPass createDevirtSCCRepeatedPass(589,25849
#undef DEBUG_TYPE603,26542

/usr/include/llvm/Analysis/CallGraphSCCPass.h,874
#define LLVM_ANALYSIS_CALLGRAPHSCCPASS_H21,1011
class CallGraphSCCPass 34,1218
  explicit CallGraphSCCPass(36,1265
  Pass *createPrinterPass(createPrinterPass40,1433
  using llvm::Pass::doFinalization;44,1584
  virtual bool doInitialization(48,1779
  virtual bool doFinalization(63,2509
  PassManagerType getPotentialPassManagerType(71,2759
class CallGraphSCC 87,3425
  const CallGraph &CG;CG88,3446
  void *Context;Context89,3501
  std::vector<CallGraphNode *> Nodes;90,3568
  CallGraphSCC(93,3615
  void initialize(95,3691
  bool isSingular(99,3804
  unsigned size(100,3860
  using iterator 110,4274
  iterator begin(112,4340
  iterator end(113,4391
  const CallGraph &getCallGraph(getCallGraph115,4439
class DummyCGSCCPass 122,4673
  static char ID;124,4730
  DummyCGSCCPass(126,4749
  bool runOnSCC(131,4905
  void getAnalysisUsage(133,4968

/usr/include/llvm/Analysis/CmpInstAnalysis.h,47
#define LLVM_ANALYSIS_CMPINSTANALYSIS_H15,624

/usr/include/llvm/Analysis/CodeMetrics.h,302
#define LLVM_ANALYSIS_CODEMETRICS_H15,637
struct CodeMetrics 31,1008
  DenseMap<const BasicBlock 58,1890
  DenseMap<const BasicBlock *, InstructionCost> NumBBInsts;58,1890
  void analyzeBasicBlock(78,2553
  static void collectEphemeralValues(84,2873
  static void collectEphemeralValues(89,3149

/usr/include/llvm/Analysis/DomPrinter.h,898
#define LLVM_ANALYSIS_DOMPRINTER_H15,609
struct DOTGraphTraits<DOTGraphTraits44,1337
  DOTGraphTraits(47,1422
  static std::string getGraphName(50,1514
  std::string getNodeLabel(54,1603
struct DOTGraphTraits<DOTGraphTraits61,1829
  DOTGraphTraits 64,1915
  static std::string getGraphName(67,2003
  std::string getNodeLabel(71,2101
struct DomViewer final : DOTGraphTraitsViewer<DOTGraphTraitsViewer77,2285
struct DomOnlyViewer final : DOTGraphTraitsViewer<DOTGraphTraitsViewer81,2444
    : DOTGraphTraitsViewer<DOTGraphTraitsViewer87,2646
    : DOTGraphTraitsViewer<DOTGraphTraitsViewer93,2839
struct DomPrinter final : DOTGraphTraitsPrinter<DOTGraphTraitsPrinter98,3007
    : DOTGraphTraitsPrinter<DOTGraphTraitsPrinter103,3198
    : DOTGraphTraitsPrinter<DOTGraphTraitsPrinter109,3381
    : DOTGraphTraitsPrinter<DOTGraphTraitsPrinter115,3578
namespace llvm 121,3769

/usr/include/llvm/Analysis/DomTreeUpdater.h,950
#define LLVM_ANALYSIS_DOMTREEUPDATER_H15,625
class DomTreeUpdater 28,902
  enum class UpdateStrategy 30,933
  enum class UpdateStrategy : unsigned char { Eager 30,933
  enum class UpdateStrategy : unsigned char { Eager = 0, Lazy 30,933
  explicit DomTreeUpdater(32,1003
  DomTreeUpdater(33,1080
  DomTreeUpdater(35,1184
  DomTreeUpdater(37,1287
  DomTreeUpdater(39,1398
  DomTreeUpdater(41,1508
  DomTreeUpdater(44,1666
  ~DomTreeUpdater(48,1823
  bool isLazy(51,1909
  bool isEager(54,2031
  bool hasDomTree(57,2150
  bool hasPostDomTree(60,2255
  bool hasPendingDeletedBB(66,2524
  class CallBackOnDeletion final : public CallbackVH 203,8581
  SmallVector<SmallVector219,8999
  SmallVector<DominatorTree::UpdateType, 16> PendUpdates;219,8999
  const UpdateStrategy Strategy;224,9189
  SmallPtrSet<SmallPtrSet225,9222
  SmallPtrSet<BasicBlock *, 8> DeletedBBs;225,9222
  std::vector<CallBackOnDeletion> Callbacks;226,9265

/usr/include/llvm/Analysis/GlobalsModRef.h,1195
#define LLVM_ANALYSIS_GLOBALSMODREF_H14,583
class GlobalsAAResult 30,989
  const DataLayout &DL;DL33,1058
  std::function<const TargetLibraryInfo &(Function &F)> GetTLI;34,1082
  SmallPtrSet<SmallPtrSet37,1205
  SmallPtrSet<const GlobalValue *, 8> NonAddressTakenGlobals;37,1205
  SmallPtrSet<SmallPtrSet44,1493
  SmallPtrSet<const GlobalValue *, 8> IndirectGlobals;44,1493
  DenseMap<DenseMap48,1677
  DenseMap<const Value *, const GlobalValue *> AllocsForIndirectGlobals;48,1677
  DenseMap<DenseMap51,1825
  DenseMap<const Function *, FunctionInfo> FunctionInfos;51,1825
  DenseMap<DenseMap56,2066
  DenseMap<const Function *, unsigned> FunctionToSCCMap;56,2066
  std::list<DeletionCallbackHandle> Handles;73,2753
  using AAResultBase::getModRefInfo;99,3555
  using AAResultBase::getMemoryEffects;103,3716
class GlobalsAA 127,4832
  static AnalysisKey Key;129,4927
  typedef GlobalsAAResult Result;132,4962
struct RecomputeGlobalsAAPass 137,5062
class GlobalsAAWrapperPass 142,5264
  std::unique_ptr<GlobalsAAResult> Result;143,5313
  static char ID;146,5365
  GlobalsAAResult &getResult(getResult150,5411
  const GlobalsAAResult &getResult(getResult151,5462

/usr/include/llvm/Analysis/HeatUtils.h,41
#define LLVM_ANALYSIS_HEATUTILS_H14,559

/usr/include/llvm/Analysis/IVUsers.h,1055
#define LLVM_ANALYSIS_IVUSERS_H15,602
class IVUsers 90,2974
  Loop *L;L92,3018
  AssumptionCache *AC;AC93,3029
  LoopInfo *LI;LI94,3052
  DominatorTree *DT;DT95,3068
  ScalarEvolution *SE;SE96,3089
  SmallPtrSet<SmallPtrSet97,3112
  SmallPtrSet<Instruction*, 16> Processed;97,3112
  ilist<IVStrideUse> IVUses;101,3263
  SmallPtrSet<SmallPtrSet104,3354
  SmallPtrSet<const Value *, 32> EphValues;104,3354
  IVUsers(110,3513
  Loop *getLoop(getLoop121,3932
  typedef ilist<IVStrideUse>::iterator iterator;140,4707
  typedef ilist<IVStrideUse>::const_iterator const_iterator;141,4756
  iterator begin(142,4817
  iterator end(143,4863
  const_iterator begin(144,4907
  const_iterator end(145,4965
  bool empty(146,5021
  bool isIVUserOrOperand(148,5070
class IVUsersWrapperPass 162,5351
  std::unique_ptr<IVUsers> IU;163,5396
  static char ID;166,5436
  IVUsers &getIU(getIU170,5480
  const IVUsers &getIU(getIU171,5515
class IVUsersAnalysis 183,5848
  static AnalysisKey Key;185,5961
  typedef IVUsers Result;188,5996

/usr/include/llvm/Analysis/IndirectCallPromotionAnalysis.h,161
#define LLVM_ANALYSIS_INDIRECTCALLPROMOTIONANALYSIS_H14,581
class ICallPromotionAnalysis 24,849
  std::unique_ptr<InstrProfValueData[]> ValueDataArray;27,941

/usr/include/llvm/Analysis/IndirectCallVisitor.h,224
#define LLVM_ANALYSIS_INDIRECTCALLVISITOR_H13,539
struct PGOIndirectCallVisitor 20,700
  std::vector<CallBase *> IndirectCalls;21,777
  void visitCallBase(24,857
inline std::vector<CallBase *> findIndirectCalls(31,1028

/usr/include/llvm/Analysis/InlineOrder.h,600
#define LLVM_ANALYSIS_INLINEORDER_H10,408
template <typename T> class InlineOrder 19,579
  bool empty(31,818
class PluginInlineOrderAnalysis51,1665
  static AnalysisKey Key;54,1765
  typedef std::unique_ptr<InlineOrder<InlineOrder56,1792
      *InlineOrderFactory)InlineOrderFactory57,1861
  PluginInlineOrderAnalysis(61,2041
  struct Result 67,2263
    InlineOrderFactory Factory;68,2281
  Result run(71,2319
  Result getResult(72,2389
  static bool isRegistered(74,2433
  static void unregister(75,2492
  static bool HasBeenRegistered;78,2560
  InlineOrderFactory Factory;79,2593

/usr/include/llvm/Analysis/InstCount.h,102
#define LLVM_ANALYSIS_INSTCOUNT_H14,560
struct InstCountPass 22,664
  PreservedAnalyses run(23,718

/usr/include/llvm/Analysis/InstructionPrecedenceTracking.h,713
#define LLVM_ANALYSIS_INSTRUCTIONPRECEDENCETRACKING_H21,1181
class InstructionPrecedenceTracking 30,1324
  DenseMap<const BasicBlock 34,1542
  DenseMap<const BasicBlock *, const Instruction *> FirstSpecialInsts;34,1542
  void fill(37,1683
  void validate(43,1921
class ImplicitControlFlowTracking 99,4577
  const Instruction *getFirstICFI(getFirstICFI103,4822
  bool hasICF(109,5035
  bool isDominatedByICFIFromSameBlock(114,5197
  bool isSpecialInstruction(118,5317
class MemoryWriteTracking 121,5390
  const Instruction *getFirstMemoryWrite(getFirstMemoryWrite125,5622
  bool mayWriteToMemory(131,5833
  bool isDominatedByMemoryWriteFromSameBlock(137,6033
  bool isSpecialInstruction(141,6160

/usr/include/llvm/Analysis/InteractiveModelRunner.h,424
#define LLVM_ANALYSIS_INTERACTIVEMODELRUNNER_H11,420
class InteractiveModelRunner 41,1863
  InteractiveModelRunner(43,1925
  static bool classof(48,2157
  void switchContext(51,2270
  const std::vector<TensorSpec> InputSpecs;63,2576
  const TensorSpec OutputSpec;64,2620
  std::error_code OutEC;65,2651
  std::error_code InEC;66,2676
  std::vector<char> OutputBuffer;67,2700
  std::unique_ptr<Logger> Log;68,2734

/usr/include/llvm/Analysis/Interval.h,1149
#define LLVM_ANALYSIS_INTERVAL_H20,817
class Interval 36,1220
  BasicBlock *HeaderNode;HeaderNode40,1407
  inline Interval(47,1623
  inline BasicBlock *getHeaderNode(getHeaderNode51,1718
  std::vector<BasicBlock*> Nodes;54,1834
  std::vector<BasicBlock*> Successors;59,2083
  std::vector<BasicBlock*> Predecessors;63,2237
  inline bool contains(66,2342
  inline bool isSuccessor(76,2684
  inline bool operator==(operator==88,3157
inline Interval::succ_iterator succ_begin(99,3503
inline Interval::succ_iterator succ_end(102,3594
inline Interval::pred_iterator pred_begin(109,3838
inline Interval::pred_iterator pred_end(112,3931
template <> struct GraphTraits<GraphTraits116,4023
  using NodeRef 117,4067
  using ChildIteratorType 118,4097
  static NodeRef getEntryNode(120,4151
  static ChildIteratorType child_begin(123,4286
  static ChildIteratorType child_end(124,4362
template <> struct GraphTraits<GraphTraits127,4438
  using NodeRef 128,4491
  using ChildIteratorType 129,4521
  static NodeRef getEntryNode(131,4575
  static ChildIteratorType child_begin(132,4648
  static ChildIteratorType child_end(133,4724

/usr/include/llvm/Analysis/IntervalPartition.h,451
#define LLVM_ANALYSIS_INTERVALPARTITION_H23,1057
class IntervalPartition 42,1626
  IntervalMapTy IntervalMap;44,1734
  std::vector<Interval *> Intervals;48,1850
  static char ID;51,1896
  inline Interval *getRootInterval(getRootInterval68,2600
  bool isDegeneratePartition(72,2805
  inline Interval *getBlockInterval(getBlockInterval77,2998
  void getAnalysisUsage(83,3215
  const std::vector<Interval*> &getIntervals(getIntervals88,3344

/usr/include/llvm/Analysis/IteratedDominanceFrontier.h,401
#define LLVM_ANALYSIS_ITERATEDDOMINANCEFRONTIER_H10,420
class IDFCalculator final : public IDFCalculatorBase<IDFCalculatorBase39,1160
using ForwardIDFCalculator 55,1709
using ReverseIDFCalculator 56,1760
namespace IDFCalculatorDetail 62,1993
typename ChildrenGetterTy<ChildrenGetterTy65,2052
ChildrenGetterTy<ChildrenGetterTy66,2113
ChildrenGetterTy<BasicBlock, IsPostDom>::get(get66,2113

/usr/include/llvm/Analysis/LazyBlockFrequencyInfo.h,557
#define LLVM_ANALYSIS_LAZYBLOCKFREQUENCYINFO_H17,779
class LazyBlockFrequencyInfo 34,1374
  void setAnalysis(39,1489
  BlockFrequencyInfoT &getCalculated(getCalculated47,1737
  const BlockFrequencyInfoT &getCalculated(getCalculated57,2009
  void releaseMemory(61,2139
  BlockFrequencyInfoT BFI;68,2271
class LazyBlockFrequencyInfoPass 98,3408
  LazyBlockFrequencyInfo<LazyBlockFrequencyInfo100,3474
      LBFI;102,3595
  static char ID;105,3616
  BlockFrequencyInfo &getBFI(getBFI110,3716
  const BlockFrequencyInfo &getBFI(getBFI113,3829

/usr/include/llvm/Analysis/LazyBranchProbabilityInfo.h,865
#define LLVM_ANALYSIS_LAZYBRANCHPROBABILITYINFO_H17,788
class LazyBranchProbabilityInfoPass 50,1971
  class LazyBranchProbabilityInfo 56,2269
    LazyBranchProbabilityInfo(58,2315
    BranchProbabilityInfo &getCalculated(getCalculated63,2546
    const BranchProbabilityInfo &getCalculated(getCalculated72,2778
    BranchProbabilityInfo BPI;77,2930
    const Function *F;F79,2990
    const LoopInfo *LI;LI80,3013
    const TargetLibraryInfo *TLI;TLI81,3037
  std::unique_ptr<LazyBranchProbabilityInfo> LBPI;84,3077
  static char ID;87,3137
  BranchProbabilityInfo &getBPI(getBPI92,3243
  const BranchProbabilityInfo &getBPI(getBPI95,3363
template <typename PassT> struct BPIPassTrait 113,4024
  static PassT &getBPI(getBPI114,4072
template <> struct BPIPassTrait<BPIPassTrait117,4124
  static BranchProbabilityInfo &getBPI(getBPI118,4189

/usr/include/llvm/Analysis/Lint.h,93
#define LLVM_ANALYSIS_LINT_H19,845
class LintPass 37,1175
  PreservedAnalyses run(39,1233

/usr/include/llvm/Analysis/LoopAnalysisManager.h,1220
#define LLVM_ANALYSIS_LOOPANALYSISMANAGER_H30,1190
struct LoopStandardAnalysisResults 51,1733
  AAResults &AA;AA52,1770
  AssumptionCache &AC;AC53,1787
  DominatorTree &DT;DT54,1810
  LoopInfo &LI;LI55,1831
  ScalarEvolution &SE;SE56,1847
  TargetLibraryInfo &TLI;TLI57,1870
  TargetTransformInfo &TTI;TTI58,1896
  BlockFrequencyInfo *BFI;BFI59,1924
  BranchProbabilityInfo *BPI;BPI60,1951
  MemorySSA *MSSA;MSSA61,1981
typedef AnalysisManager<Loop,Loop74,2490
    LoopAnalysisManager;75,2551
typedef InnerAnalysisManagerProxy<LoopAnalysisManager,LoopAnalysisManager78,2637
    LoopAnalysisManagerFunctionProxy;79,2702
template <> class LoopAnalysisManagerFunctionProxy::Result 86,2976
  explicit Result(88,3045
  Result(90,3145
  Result &operator=(operator=97,3445
  ~Result(107,3771
  void markMSSAUsed(118,4147
  LoopAnalysisManager &getManager(getManager121,4232
  LoopAnalysisManager *InnerAM;InnerAM136,4891
  LoopInfo *LI;LI137,4923
  bool MSSAUsed 138,4939
typedef OuterAnalysisManagerProxy<FunctionAnalysisManager,FunctionAnalysisManager154,5622
typedef OuterAnalysisManagerProxy<FunctionAnalysisManager, Loop,154,5622
    FunctionAnalysisManagerLoopProxy;156,5752

/usr/include/llvm/Analysis/LoopPass.h,884
#define LLVM_ANALYSIS_LOOPPASS_H15,605
class LoopPass 28,804
  explicit LoopPass(30,843
  Pass *createPrinterPass(createPrinterPass34,986
  using llvm::Pass::doFinalization;42,1332
  virtual bool doInitialization(45,1413
  virtual bool doFinalization(51,1604
  PassManagerType getPotentialPassManagerType(65,2249
class LPPassManager 76,2602
  static char ID;78,2676
  StringRef getPassName(89,3085
  PMDataManager *getAsPMDataManager(getAsPMDataManager91,3159
  Pass *getAsPass(getAsPass92,3223
  LoopPass *getContainedPass(getContainedPass97,3366
  PassManagerType getPassManagerType(103,3554
  std::deque<Loop *> LQ;115,3794
  LoopInfo *LI;LI116,3819
  Loop *CurrentLoop;CurrentLoop117,3835
  bool CurrentLoopDeleted;118,3856
struct LCSSAVerificationPass 124,4101
  static char ID;125,4154
  bool runOnFunction(128,4200
  void getAnalysisUsage(130,4262

/usr/include/llvm/Analysis/LoopUnrollAnalyzer.h,713
#define LLVM_ANALYSIS_LOOPUNROLLANALYZER_H16,696
class UnrolledInstAnalyzer 42,1504
  typedef InstVisitor<UnrolledInstAnalyzer,UnrolledInstAnalyzer43,1583
  typedef InstVisitor<UnrolledInstAnalyzer, bool> Base;43,1583
  friend class InstVisitor<UnrolledInstAnalyzer,UnrolledInstAnalyzer44,1639
  struct SimplifiedAddress 45,1695
  UnrolledInstAnalyzer(51,1800
  using Base::visit;59,2144
  DenseMap<DenseMap68,2476
  DenseMap<Value *, SimplifiedAddress> SimplifiedAddresses;68,2476
  const SCEV *IterationNumber;IterationNumber72,2623
  DenseMap<DenseMap79,2993
  DenseMap<Value *, Value *> &SimplifiedValues;SimplifiedValues79,2993
  ScalarEvolution &SE;SE81,3042
  const Loop *L;L82,3065

/usr/include/llvm/Analysis/MLInlineAdvisor.h,1206
#define LLVM_ANALYSIS_MLINLINEADVISOR_H10,410
class MLInlineAdvisor 28,825
  MLInlineAdvisor(30,880
  void onPassEntry(36,1110
  int64_t getIRSize(39,1218
  bool isForcedToStop(45,1424
  const MLModelRunner &getModelRunner(getModelRunner47,1514
  std::unique_ptr<MLModelRunner> ModelRunner;66,2270
  std::function<bool(CallBase &)> GetDefaultAdvice;67,2316
  mutable std::map<std::map78,2767
  mutable std::map<const Function *, FunctionPropertiesInfo> FPICache;78,2767
  LazyCallGraph &CG;CG80,2839
  std::map<std::map86,2948
  std::map<const LazyCallGraph::Node *, unsigned> FunctionLevels;86,2948
  llvm::SmallPtrSet<llvm::SmallPtrSet89,3078
  llvm::SmallPtrSet<const LazyCallGraph::Node *, 1> NodesInLastSCC;89,3078
  DenseSet<const LazyCallGraph::Node *> AllNodes;90,3146
class MLInlineAdvice 96,3361
  Function *getCaller(getCaller107,3801
  Function *getCallee(getCallee108,3850
  const int64_t CallerIRSize;110,3900
  const int64_t CalleeIRSize;111,3930
  const int64_t CallerAndCalleeEdges;112,3960
  MLInlineAdvisor *getAdvisor(getAdvisor117,4141
  const FunctionPropertiesInfo PreInlineCallerFPI;122,4373
  std::optional<FunctionPropertiesUpdater> FPU;123,4424

/usr/include/llvm/Analysis/MemoryProfileInfo.h,1094
#define LLVM_ANALYSIS_MEMORYPROFILEINFO_H14,570
class CallStackTrie 51,2013
  struct CallStackTrieNode 53,2044
    uint8_t AllocTypes;56,2162
    std::map<std::map58,2254
    std::map<uint64_t, CallStackTrieNode *> Callers;58,2254
    CallStackTrieNode(59,2307
  void deleteTrieNode(68,2559
  ~CallStackTrie(84,3066
  bool empty(86,3113
template <class NodeT, class IteratorT> class CallStack 114,4640
  CallStack(116,4706
  struct CallStackIterator 122,5024
    IteratorT Iter;124,5083
    bool operator==(operator==127,5178
    bool operator!=(operator!=128,5257
    void operator++(129,5335
  bool empty(132,5375
  CallStackIterator end(135,5457
  const NodeT *N N140,5633
CallStack<NodeT, IteratorT>::CallStackIterator::CallStackIterator(CallStackIterator::CallStackIterator144,5705
uint64_t CallStack<NodeT, IteratorT>::CallStackIterator::operator*(operator*155,5974
uint64_t CallStack<NodeT, IteratorT>::back(back161,6147
CallStack<NodeT, IteratorT>::begin(begin168,6347
CallStack<NodeT, IteratorT>::beginAfterSharedPrefix(beginAfterSharedPrefix174,6537

/usr/include/llvm/Analysis/ModuleSummaryAnalysis.h,538
#define LLVM_ANALYSIS_MODULESUMMARYANALYSIS_H14,581
class ModuleSummaryIndexAnalysis44,1609
  static AnalysisKey Key;48,1760
class ModuleSummaryIndexWrapperPass 57,1955
  std::optional<ModuleSummaryIndex> Index;58,2013
  static char ID;61,2065
  ModuleSummaryIndex &getIndex(getIndex66,2154
  const ModuleSummaryIndex &getIndex(getIndex67,2206
class ImmutableModuleSummaryIndexWrapperPass 82,2768
  const ModuleSummaryIndex *Index;Index83,2838
  static char ID;86,2882
  const ModuleSummaryIndex *getIndex(getIndex90,2993

/usr/include/llvm/Analysis/NoInferenceModelRunner.h,203
#define LLVM_ANALYSIS_NOINFERENCEMODELRUNNER_H11,420
class NoInferenceModelRunner 20,765
  NoInferenceModelRunner(22,827
  static bool classof(25,936
  void *evaluateUntyped(evaluateUntyped30,1052

/usr/include/llvm/Analysis/ObjCARCAliasAnalysis.h,403
#define LLVM_ANALYSIS_OBJCARCALIASANALYSIS_H23,1044
class ObjCARCAAResult 37,1507
  const DataLayout &DL;DL38,1553
  explicit ObjCARCAAResult(41,1586
  ObjCARCAAResult(42,1647
  bool invalidate(48,1875
  using AAResultBase::getMemoryEffects;58,2285
  using AAResultBase::getModRefInfo;61,2379
class ObjCARCAA 67,2614
  static AnalysisKey Key;69,2709
  typedef ObjCARCAAResult Result;72,2744

/usr/include/llvm/Analysis/ObjCARCInstKind.h,776
#define LLVM_ANALYSIS_OBJCARCINSTKIND_H10,410
enum class ARCInstKind 28,1023
  Retain,29,1048
  RetainRV,30,1093
  UnsafeClaimRV,31,1161
  RetainBlock,32,1234
  Release,33,1284
  Autorelease,34,1330
  AutoreleaseRV,35,1380
  AutoreleasepoolPush,36,1441
  AutoreleasepoolPop,37,1499
  NoopCast,38,1556
  FusedRetainAutorelease,39,1615
  FusedRetainAutoreleaseRV,40,1671
  LoadWeakRetained,41,1738
  StoreWeak,42,1805
  InitWeak,43,1865
  LoadWeak,44,1922
  MoveWeak,45,1979
  CopyWeak,46,2036
  DestroyWeak,47,2093
  StoreStrong,48,2153
  IntrinsicUser,49,2213
  CallOrUser,50,2270
  Call,51,2349
  User,52,2406
  None 53,2461
raw_ostream &operator<<(raw_ostream &OS, const ARCInstKind Class)56,2546
inline ARCInstKind GetBasicARCInstKind(104,4253

/usr/include/llvm/Analysis/ObjCARCUtil.h,269
#define LLVM_ANALYSIS_OBJCARCUTIL_H15,598
namespace llvm 22,774
inline bool hasAttachedCallOpBundle(29,921
inline std::optional<Function *> getAttachedARCFunction(43,1682
inline bool isRetainOrClaimRV(52,1969
inline ARCInstKind getAttachedARCFunctionKind(60,2368

/usr/include/llvm/Analysis/OptimizationRemarkEmitter.h,1017
#define LLVM_ANALYSIS_OPTIMIZATIONREMARKEMITTER_H15,719
class OptimizationRemarkEmitter 33,1292
  OptimizationRemarkEmitter(35,1334
  OptimizationRemarkEmitter(49,1978
  OptimizationRemarkEmitter(51,2027
  bool invalidate(61,2312
  bool enabled(65,2494
  void emit(72,2742
  void emit(77,2953
  bool allowExtraAnalysis(98,3917
  static bool allowExtraAnalysis(101,4047
  static bool allowExtraAnalysis(104,4182
  const Function *F;F110,4377
  BlockFrequencyInfo *BFI;BFI112,4399
  std::unique_ptr<BlockFrequencyInfo> OwnedBFI;115,4501
  bool shouldEmitVerbose(126,4949
namespace ore 135,5306
using NV 136,5322
using setIsVerbose 137,5375
using setExtraArgs 138,5442
class OptimizationRemarkEmitterWrapperPass 146,5741
  std::unique_ptr<OptimizationRemarkEmitter> ORE;147,5808
  OptimizationRemarkEmitter &getORE(getORE156,6015
  static char ID;161,6116
class OptimizationRemarkEmitterAnalysis164,6138
  static AnalysisKey Key;167,6309
  typedef OptimizationRemarkEmitter Result;171,6401

/usr/include/llvm/Analysis/OverflowInstAnalysis.h,52
#define LLVM_ANALYSIS_OVERFLOWINSTANALYSIS_H15,631

/usr/include/llvm/Analysis/PHITransAddr.h,415
#define LLVM_ANALYSIS_PHITRANSADDR_H14,540
class PHITransAddr 35,1298
  Value *Addr;Addr37,1368
  const DataLayout &DL;DL40,1426
  AssumptionCache *AC;AC46,1622
  SmallVector<Instruction*Instruction49,1702
  SmallVector<Instruction*, 4> InstInputs;49,1702
  PHITransAddr(52,1754
  Value *getAddr(getAddr58,1970
  bool needsPHITranslationFromBlock(62,2154
  bool isPotentiallyPHITranslatable(73,2644

/usr/include/llvm/Analysis/PtrUseVisitor.h,1563
#define LLVM_ANALYSIS_PTRUSEVISITOR_H23,959
class PtrUseVisitorBase 47,1671
  class PtrInfo 54,1992
    PtrInfo(56,2020
    void reset(59,2149
    bool isAborted(67,2357
    bool isEscaped(70,2464
    Instruction *getAbortingInst(getAbortingInst75,2698
    Instruction *getEscapingInst(getEscapingInst80,2961
    void setAborted(84,3190
    void setEscaped(91,3456
    void setEscapedAndAborted(100,3790
    PointerIntPair<Instruction Instruction106,3908
    PointerIntPair<Instruction *, 1, bool> AbortedInfo,106,3908
    PointerIntPair<Instruction *, 1, bool> AbortedInfo, EscapedInfo;106,3908
  const DataLayout &DL;DL110,3994
  PtrInfo PI;116,4134
  struct UseToVisit 122,4349
    UseAndIsOffsetKnownPair UseAndIsOffsetKnown;125,4440
    APInt Offset;126,4489
  SmallVector<UseToVisit,UseToVisit130,4550
  SmallVector<UseToVisit, 8> Worklist;130,4550
  SmallPtrSet<Use Use133,4655
  SmallPtrSet<Use *, 8> VisitedUses;133,4655
  Use *U;U142,4836
  bool IsOffsetKnown;146,4936
  APInt Offset;149,5014
  PtrUseVisitorBase(155,5183
  void enqueueUsers(161,5451
  bool adjustOffsetForGEP(167,5681
class PtrUseVisitor 198,7066
  using Base 202,7217
  PtrUseVisitor(205,7264
  PtrInfo visitPtr(212,7599
  void visitStoreInst(242,8564
  void visitBitCastInst(247,8676
  void visitAddrSpaceCastInst(251,8746
  void visitPtrToIntInst(255,8830
  void visitGetElementPtrInst(259,8902
  void visitDbgInfoIntrinsic(275,9340
  void visitMemIntrinsic(276,9393
  void visitIntrinsicInst(277,9438
  void visitCallBase(290,9801

/usr/include/llvm/Analysis/RegionIterator.h,2393
#define LLVM_ANALYSIS_REGIONITERATOR_H12,567
template <class NodeRef, class BlockT, class RegionT> class RNSuccIterator 38,1410
  enum ItMode 51,1868
    ItBB,54,1973
    ItRgBegin,57,2106
    ItRgEnd 58,2170
  PointerIntPair<PointerIntPair68,2620
  PointerIntPair<NodeRef, 2, ItMode> Node;68,2620
  SuccIterTy BItor;71,2699
  void advanceRegionSucc(75,2823
  NodeRef getNode(80,2961
  bool isRegionMode(83,3078
  NodeRef getISucc(87,3257
  inline BlockT* getRegionSucc(95,3527
  inline bool isExit(101,3764
  using Self = RNSuccIterator<NodeRef, BlockT,106,3870
  inline RNSuccIterator(109,3973
  inline RNSuccIterator(122,4396
  inline bool operator==(operator==126,4558
  inline bool operator!=(operator!=134,4792
  inline value_type operator*(136,4866
  inline Self& operator++(142,5049
  inline Self operator++(156,5363
  using BlockTraits 171,5876
  using SuccIterTy 172,5921
  NodeRef Node;174,5984
  SuccIterTy Itor;175,6000
  using iterator_category 178,6028
  using value_type 179,6083
  using difference_type 180,6113
  using pointer 181,6155
  using reference 182,6187
  using Self 184,6222
  inline RNSuccIterator(190,6470
  inline RNSuccIterator(203,6960
  inline bool operator==(operator==209,7179
  inline bool operator!=(operator!=216,7395
  inline value_type operator*(218,7469
  inline Self& operator++(231,7825
  inline Self operator++(241,8049
inline RNSuccIterator<NodeRef, BlockT, RegionT> succ_begin(249,8194
inline RNSuccIterator<NodeRef, BlockT, RegionT> succ_end(254,8383
#define RegionNodeGraphTraits(265,8819
#define RegionGraphTraits(290,10687
template <> struct GraphTraits<GraphTraits326,13168
  using nodes_iterator 328,13258
      df_iterator<NodeRef, df_iterator_default_set<df_iterator_default_set329,13283
      df_iterator<NodeRef, df_iterator_default_set<NodeRef>, false,329,13283
  static NodeRef getEntryNode(332,13401
  static nodes_iterator nodes_begin(336,13534
  static nodes_iterator nodes_end(340,13645
template <> struct GraphTraits<GraphTraits345,13755
  using nodes_iterator 347,13842
      df_iterator<NodeRef, df_iterator_default_set<df_iterator_default_set348,13867
      df_iterator<NodeRef, df_iterator_default_set<NodeRef>, false,348,13867
  static NodeRef getEntryNode(351,13985
  static nodes_iterator nodes_begin(355,14115
  static nodes_iterator nodes_end(359,14250

/usr/include/llvm/Analysis/RegionPass.h,732
#define LLVM_ANALYSIS_REGIONPASS_H16,712
class RegionPass 32,1096
  explicit RegionPass(34,1137
  Pass *createPrinterPass(createPrinterPass56,1954
  using llvm::Pass::doFinalization;60,2104
  virtual bool doInitialization(62,2141
  virtual bool doFinalization(63,2222
  PassManagerType getPotentialPassManagerType(75,2573
class RGPassManager 87,2935
  std::deque<Region*> RQ;88,3001
  RegionInfo *RI;RI89,3027
  Region *CurrentRegion;CurrentRegion90,3045
  static char ID;93,3079
  StringRef getPassName(105,3462
  PMDataManager *getAsPMDataManager(getAsPMDataManager107,3538
  Pass *getAsPass(getAsPass108,3602
  Pass *getContainedPass(getContainedPass114,3790
  PassManagerType getPassManagerType(120,3966

/usr/include/llvm/Analysis/RegionPrinter.h,45
#define LLVM_ANALYSIS_REGIONPRINTER_H15,603

/usr/include/llvm/Analysis/ReleaseModeModelRunner.h,278
#define LLVM_ANALYSIS_RELEASEMODEMODELRUNNER_H15,610
#define NOOP_MODEL_ERRMSG 75,2784
#undef NOOP_MODEL_ERRMSG86,3353
template <class T> bool isEmbeddedModelEvaluatorValid(89,3382
template <> inline bool isEmbeddedModelEvaluatorValid<isEmbeddedModelEvaluatorValid91,3456

/usr/include/llvm/Analysis/ReplayInlineAdvisor.h,1191
#define LLVM_ANALYSIS_REPLAYINLINEADVISOR_H10,416
struct CallSiteFormat 21,618
  enum class Format 22,642
    Line,23,670
    LineColumn,24,680
    LineDiscriminator,25,696
    LineColumnDiscriminator26,719
  bool outputColumn(29,753
  bool outputDiscriminator(34,897
  Format OutputFormat;39,1055
struct ReplayInlinerSettings 43,1107
  enum class Scope 44,1138
  enum class Scope : int { Function,44,1138
  enum class Scope : int { Function, Module 44,1138
  enum class Fallback 45,1185
  enum class Fallback : int { Original,45,1185
  enum class Fallback : int { Original, AlwaysInline,45,1185
  enum class Fallback : int { Original, AlwaysInline, NeverInline 45,1185
  StringRef ReplayFile;47,1255
  Scope ReplayScope;48,1279
  Fallback ReplayFallback;49,1300
  CallSiteFormat ReplayFormat;50,1327
class ReplayInlineAdvisor 65,2000
  bool areReplayRemarksLoaded(73,2432
  bool hasInlineAdvice(76,2509
  std::unique_ptr<InlineAdvisor> OriginalAdvisor;81,2702
  bool HasReplayRemarks 82,2752
  const ReplayInlinerSettings ReplaySettings;83,2785
  bool EmitRemarks 84,2831
  StringMap<bool> InlineSitesFromRemarks;86,2860
  StringSet<> CallersToReplay;87,2902

/usr/include/llvm/Analysis/ScalarEvolutionAliasAnalysis.h,473
#define LLVM_ANALYSIS_SCALAREVOLUTIONALIASANALYSIS_H14,577
class SCEVAAResult 27,858
  ScalarEvolution &SE;SE28,901
  explicit SCEVAAResult(31,933
  SCEVAAResult(32,990
class SCEVAA 45,1459
  static AnalysisKey Key;47,1545
  typedef SCEVAAResult Result;50,1580
class SCEVAAWrapperPass 56,1738
  std::unique_ptr<SCEVAAResult> Result;57,1786
  static char ID;60,1835
  SCEVAAResult &getResult(getResult64,1878
  const SCEVAAResult &getResult(getResult65,1926

/usr/include/llvm/Analysis/ScalarEvolutionDivision.h,1058
#define LLVM_ANALYSIS_SCALAREVOLUTIONDIVISION_H14,569
struct SCEVDivision 26,757
  static void divide(30,919
  void visitPtrToIntExpr(36,1258
  void visitTruncateExpr(37,1321
  void visitZeroExtendExpr(38,1384
  void visitSignExtendExpr(39,1451
  void visitUDivExpr(40,1518
  void visitSMaxExpr(41,1573
  void visitUMaxExpr(42,1628
  void visitSMinExpr(43,1683
  void visitUMinExpr(44,1738
  void visitSequentialUMinExpr(45,1793
  void visitUnknown(46,1868
  void visitCouldNotCompute(47,1921
  void visitConstant(49,1991
  void visitVScale(51,2045
  void visitAddRecExpr(53,2095
  void visitAddExpr(55,2153
  void visitMulExpr(57,2205
  SCEVDivision(60,2266
  void cannotDivide(65,2516
  ScalarEvolution &SE;SE67,2561
  const SCEV *Denominator,Denominator68,2584
  const SCEV *Denominator, *Quotient,Quotient68,2584
  const SCEV *Denominator, *Quotient, *Remainder,Remainder68,2584
  const SCEV *Denominator, *Quotient, *Remainder, *Zero,Zero68,2584
  const SCEV *Denominator, *Quotient, *Remainder, *Zero, *One;One68,2584

/usr/include/llvm/Analysis/ScalarEvolutionNormalization.h,162
#define LLVM_ANALYSIS_SCALAREVOLUTIONNORMALIZATION_H36,1503
typedef SmallPtrSet<const Loop *, 2> PostIncLoopSet;48,1722
typedef function_ref<bool(bool50,1776

/usr/include/llvm/Analysis/ScopedNoAliasAA.h,609
#define LLVM_ANALYSIS_SCOPEDNOALIASAA_H15,580
class ScopedNoAliasAAResult 29,885
  bool invalidate(34,1079
  AliasResult alias(39,1219
  ModRefInfo getModRefInfo(41,1360
  ModRefInfo getModRefInfo(43,1483
  bool mayAliasInScopes(47,1613
class ScopedNoAliasAA 51,1764
  static AnalysisKey Key;54,1878
  using Result 57,1913
  ScopedNoAliasAAResult run(59,1954
class ScopedNoAliasAAWrapperPass 63,2098
  std::unique_ptr<ScopedNoAliasAAResult> Result;64,2156
  static char ID;67,2214
  ScopedNoAliasAAResult &getResult(getResult71,2266
  const ScopedNoAliasAAResult &getResult(getResult72,2323

/usr/include/llvm/Analysis/SparsePropagation.h,2675
#define LLVM_ANALYSIS_SPARSEPROPAGATION_H15,642
#define DEBUG_TYPE 23,832
template <class LatticeKey> struct LatticeKeyInfo 29,1038
template <class LatticeKey, class LatticeVal> class AbstractLatticeFunction 47,2017
  LatticeVal UndefVal,49,2104
  LatticeVal UndefVal, OverdefinedVal,49,2104
  LatticeVal UndefVal, OverdefinedVal, UntrackedVal;49,2104
  AbstractLatticeFunction(52,2166
  LatticeVal getUndefVal(61,2442
  LatticeVal getOverdefinedVal(62,2502
  LatticeVal getUntrackedVal(63,2568
  virtual bool IsUntrackedValue(68,2841
  virtual LatticeVal ComputeLatticeVal(72,3011
  virtual bool IsSpecialCasedPHI(78,3254
  virtual LatticeVal MergeValues(83,3521
  virtual Value *GetValueFromLatticeVal(GetValueFromLatticeVal105,4634
class SparseSolver 113,4935
  AbstractLatticeFunction<AbstractLatticeFunction117,5064
  AbstractLatticeFunction<LatticeKey, LatticeVal> *LatticeFunc;LatticeFunc117,5064
  DenseMap<DenseMap120,5199
  DenseMap<LatticeKey, LatticeVal> ValueState;120,5199
  SmallPtrSet<SmallPtrSet123,5312
  SmallPtrSet<BasicBlock *, 16> BBExecutable;123,5312
  SmallVector<SmallVector126,5420
  SmallVector<Value *, 64> ValueWorkList;126,5420
  SmallVector<SmallVector129,5527
  SmallVector<BasicBlock *, 64> BBWorkList;129,5527
  using Edge 131,5572
  std::set<Edge> KnownFeasibleEdges;135,5736
  explicit SparseSolver(138,5782
  LatticeVal getExistingValueState(152,6341
  bool isBlockExecutable(173,7354
void AbstractLatticeFunction<LatticeKey, LatticeVal>::PrintLatticeVal(PrintLatticeVal206,8767
void AbstractLatticeFunction<LatticeKey, LatticeVal>::PrintLatticeKey(PrintLatticeKey219,9120
SparseSolver<LatticeKey, LatticeVal, KeyInfo>::getValueState(getValueState230,9555
void SparseSolver<LatticeKey, LatticeVal, KeyInfo>::UpdateState(UpdateState246,10110
void SparseSolver<LatticeKey, LatticeVal, KeyInfo>::MarkBlockExecutable(MarkBlockExecutable260,10671
void SparseSolver<LatticeKey, LatticeVal, KeyInfo>::markEdgeExecutable(markEdgeExecutable269,11023
void SparseSolver<LatticeKey, LatticeVal, KeyInfo>::getFeasibleSuccessors(getFeasibleSuccessors289,11841
bool SparseSolver<LatticeKey, LatticeVal, KeyInfo>::isEdgeFeasible(isEdgeFeasible371,14409
void SparseSolver<LatticeKey, LatticeVal, KeyInfo>::visitTerminator(visitTerminator385,14900
void SparseSolver<LatticeKey, LatticeVal, KeyInfo>::visitPHINode(visitPHINode399,15364
void SparseSolver<LatticeKey, LatticeVal, KeyInfo>::visitInst(visitInst451,17522
void SparseSolver<LatticeKey, LatticeVal, KeyInfo>::Solve(Solve470,18296
void SparseSolver<LatticeKey, LatticeVal, KeyInfo>::Print(Print502,19397
#undef DEBUG_TYPE524,19877

/usr/include/llvm/Analysis/SyntheticCountsUtils.h,122
#define LLVM_ANALYSIS_SYNTHETICCOUNTSUTILS_H14,567
template <typename CallGraphType> class SyntheticCountsUtils 27,1042

/usr/include/llvm/Analysis/Trace.h,753
#define LLVM_ANALYSIS_TRACE_H18,870
class Trace 30,1025
  BasicBlockListType BasicBlocks;33,1096
  Trace(39,1303
  BasicBlock *getEntryBasicBlock getEntryBasicBlock43,1463
  BasicBlock *getBlock(getBlock47,1666
  int getBlockIndex(58,2068
  bool contains(67,2330
  bool dominates(73,2547
  iterator                begin(85,3054
  const_iterator          begin(86,3126
  iterator                end 87,3198
  const_iterator          end 88,3270
  reverse_iterator       rbegin(90,3343
  const_reverse_iterator rbegin(91,3416
  reverse_iterator       rend 92,3489
  const_reverse_iterator rend 93,3562
  unsigned                 size(95,3636
  bool                    empty(96,3707
  iterator erase(98,3780
  iterator erase(99,3857

/usr/include/llvm/Analysis/TypeBasedAliasAnalysis.h,703
#define LLVM_ANALYSIS_TYPEBASEDALIASANALYSIS_H16,621
class TypeBasedAAResult 31,938
  bool invalidate(36,1128
  AliasResult alias(41,1268
  ModRefInfo getModRefInfoMask(43,1409
  MemoryEffects getMemoryEffects(46,1538
  MemoryEffects getMemoryEffects(47,1613
  ModRefInfo getModRefInfo(48,1666
  ModRefInfo getModRefInfo(50,1789
  bool Aliases(54,1919
class TypeBasedAA 58,2050
  static AnalysisKey Key;61,2152
  using Result 64,2187
  TypeBasedAAResult run(66,2224
class TypeBasedAAWrapperPass 70,2360
  std::unique_ptr<TypeBasedAAResult> Result;71,2414
  static char ID;74,2468
  TypeBasedAAResult &getResult(getResult78,2516
  const TypeBasedAAResult &getResult(getResult79,2569

/usr/include/llvm/Analysis/TypeMetadataUtils.h,247
#define LLVM_ANALYSIS_TYPEMETADATAUTILS_H15,604
enum CfiFunctionLinkage 31,902
  CFL_Definition 32,928
  CFL_Declaration 33,950
  CFL_WeakDeclaration 34,973
struct DevirtCallSite 38,1048
  uint64_t Offset;40,1137
  CallBase &CB;CB42,1184

/usr/include/llvm/Analysis/ValueLatticeUtils.h,49
#define LLVM_ANALYSIS_VALUELATTICEUTILS_H15,632

/usr/include/llvm/Analysis/AliasAnalysis.h,4601
#define LLVM_ANALYSIS_ALIASANALYSIS_H38,1943
class AliasResult 81,3206
  static_assert(85,3305
  unsigned int Alias : AliasBits;88,3420
  unsigned int HasOffset 89,3454
  signed int Offset : OffsetBits;90,3484
  enum Kind 93,3527
    NoAlias 99,3840
    MayAlias,102,3947
    PartialAlias,104,4029
    MustAlias,106,4101
  static_assert(108,4121
  constexpr AliasResult(112,4263
  operator Kind(115,4360
  constexpr bool hasOffset(126,4775
  constexpr int32_t getOffset(127,4832
  void setOffset(131,4934
  void swap(139,5148
raw_ostream &operator<<(raw_ostream &OS, AliasResult AR)149,5388
struct CaptureInfo 152,5508
struct AACacheLoc 204,7706
  using PtrTy 205,7726
  PtrTy Ptr;206,7782
  LocationSize Size;207,7795
  AACacheLoc(209,7817
  AACacheLoc(210,7886
template <> struct DenseMapInfo<DenseMapInfo214,8019
  static inline AACacheLoc getEmptyKey(215,8065
  static inline AACacheLoc getTombstoneKey(219,8228
  static unsigned getHashValue(223,8403
  static bool isEqual(227,8594
class AAQueryInfo 242,9367
  using LocPair 244,9395
  struct CacheEntry 245,9448
    AliasResult Result;246,9470
    int NumAssumptionUses;249,9632
    bool isDefinitive(251,9721
  AAResults &AAR;AAR256,9915
  using AliasCacheT 258,9934
  using AliasCacheT = SmallDenseMap<LocPair, CacheEntry,258,9934
  AliasCacheT AliasCache;259,9995
  CaptureInfo *CI;CI261,10022
  unsigned Depth 264,10099
  int NumAssumptionUses 267,10179
  SmallVector<SmallVector272,10395
  SmallVector<AAQueryInfo::LocPair, 4> AssumptionBasedResults;272,10395
  bool MayBeCrossIteration 288,11064
  bool UseDominatorTree 292,11247
  AAQueryInfo(294,11280
class SimpleAAQueryInfo 298,11398
  SimpleCaptureInfo CI;299,11445
  SimpleAAQueryInfo(302,11478
class AAResults 307,11568
  AAResults(311,11721
  template <typename AAResultT> void addAAResult(316,11861
  void addAADependencyID(328,12477
  AliasResult alias(348,13356
  AliasResult alias(354,13620
  bool isNoAlias(361,13886
  bool isNoAlias(366,14090
  bool isNoAlias(372,14355
  bool isMustAlias(379,14628
  bool isMustAlias(384,14838
  bool pointsToConstantMemory(391,15148
  bool pointsToConstantMemory(397,15380
  ModRefInfo getModRefInfoMask(418,16283
  bool doesNotAccessMemory(446,17589
  bool doesNotAccessMemory(461,18259
  bool onlyReadsMemory(474,18782
  bool onlyReadsMemory(487,19311
  ModRefInfo getModRefInfo(501,19808
  ModRefInfo getModRefInfo(508,20082
  ModRefInfo callCapturesBefore(520,20611
  ModRefInfo callCapturesBefore(528,20935
  bool canBasicBlockModify(543,21557
  bool canInstructionRangeModRef(558,22283
  const TargetLibraryInfo &TLI;TLI610,25007
  std::vector<std::unique_ptr<Concept>> AAs;612,25040
  std::vector<AnalysisKey *> AADeps;614,25086
class BatchAAResults 625,25575
  AAResults &AA;AA626,25598
  AAQueryInfo AAQI;627,25615
  SimpleCaptureInfo SimpleCI;628,25635
  BatchAAResults(631,25674
  BatchAAResults(632,25742
  AliasResult alias(634,25821
  bool pointsToConstantMemory(637,25942
  ModRefInfo getModRefInfoMask(640,26085
  ModRefInfo getModRefInfo(644,26265
  ModRefInfo getModRefInfo(648,26438
  ModRefInfo getArgModRefInfo(651,26561
  MemoryEffects getMemoryEffects(654,26682
  bool isMustAlias(657,26787
  bool isMustAlias(660,26924
  ModRefInfo callCapturesBefore(665,27147
  void enableCrossIterationMode(672,27443
  void disableDominatorTree(677,27596
using AliasAnalysis 682,27766
class AAResults::Concept 693,28249
class AAResultBase 810,33243
  AAResultBase(816,33408
  AAResultBase(817,33451
  AliasResult alias(820,33498
  ModRefInfo getModRefInfoMask(825,33676
  ModRefInfo getArgModRefInfo(830,33841
  MemoryEffects getMemoryEffects(834,33948
  MemoryEffects getMemoryEffects(838,34066
  ModRefInfo getModRefInfo(842,34162
  ModRefInfo getModRefInfo(847,34322
class AAManager 914,37590
  using Result 916,37654
  template <typename AnalysisT> void registerFunctionAnalysis(919,37720
  template <typename AnalysisT> void registerModuleAnalysis(924,37894
  static AnalysisKey Key;933,38133
              4> ResultGetters;937,38271
  static void getFunctionAAResultImpl(940,38336
  static void getModuleAAResultImpl(948,38667
class AAResultsWrapperPass 962,39220
  std::unique_ptr<AAResults> AAR;963,39271
  static char ID;966,39314
  AAResults &getAAResults(getAAResults970,39360
  const AAResults &getAAResults(getAAResults971,39405
struct ExternalAAWrapperPass 980,39714
  using CallbackT 981,39761
  CallbackT CB;983,39836
  static char ID;985,39853
  void getAnalysisUsage(991,39949

/usr/include/llvm/Analysis/AliasAnalysisEvaluator.h,190
#define LLVM_ANALYSIS_ALIASANALYSISEVALUATOR_H25,1136
class AAEvaluator 33,1269
  AAEvaluator(41,1564
  ~AAEvaluator(50,1967
  PreservedAnalyses run(53,2024
  void runInternal(56,2101

/usr/include/llvm/Analysis/AliasSetTracker.h,1699
#define LLVM_ANALYSIS_ALIASSETTRACKER_H19,850
  friend 48,1506
  SmallVector<MemoryLocation,MemoryLocation54,1638
  SmallVector<MemoryLocation, 0> MemoryLocs;54,1638
  std::vector<AssertingVH<Instruction>> UnknownInsts;57,1753
  unsigned RefCount 61,1909
  unsigned AliasAny 65,2065
  enum AccessLattice 73,2457
    NoAccess 74,2480
    RefAccess 75,2498
    ModAccess 76,2517
    ModRefAccess 77,2536
  unsigned Access 79,2582
  enum AliasLattice 87,2931
    SetMustAlias 88,2953
    SetMustAlias = 0, SetMayAlias 88,2953
  unsigned Alias 90,2996
  void addRef(92,3019
  void dropRef(94,3052
  bool isRef(105,3334
  bool isMod(106,3386
  bool isMustAlias(107,3438
  bool isMayAlias(108,3499
  bool isForwardingAliasSet(112,3659
  iterator begin(120,4032
  iterator end(121,4088
  unsigned size(123,4141
  AliasSet(136,4576
inline raw_ostream& operator<<(155,5327
class AliasSetTracker 160,5429
  BatchAAResults &AA;AA161,5453
  ilist<AliasSet> AliasSets;162,5475
  using PointerMapType 164,5505
  PointerMapType PointerMap;168,5692
  explicit AliasSetTracker(173,5869
  ~AliasSetTracker(174,5928
  const ilist<AliasSet> &getAliasSets(getAliasSets199,6937
  BatchAAResults &getAliasAnalysis(getAliasAnalysis208,7393
  using iterator 210,7452
  using const_iterator 211,7498
  const_iterator begin(213,7557
  const_iterator end(214,7618
  iterator begin(216,7678
  iterator end(217,7727
  unsigned TotalAliasSetSize 226,7940
  AliasSet *AliasAnyAS AliasAnyAS230,8095
  void collapseForwardingIn(240,8576
inline raw_ostream& operator<<(263,9362
class AliasSetsPrinterPass 268,9473
  raw_ostream &OS;OS269,9547
  static bool isRequired(274,9692

/usr/include/llvm/Analysis/AssumeBundleQueries.h,1007
#define LLVM_ANALYSIS_ASSUMEBUNDLEQUERIES_H15,648
enum AssumeBundleArg 29,1004
  ABA_WasOn 30,1027
  ABA_Argument 31,1044
inline bool hasAttributeInAssume(44,1569
template<> struct DenseMapInfo<DenseMapInfo51,1881
  static Attribute::AttrKind getEmptyKey(52,1935
  static Attribute::AttrKind getTombstoneKey(55,2016
  static unsigned getHashValue(58,2105
  static bool isEqual(61,2195
using RetainedKnowledgeKey 69,2487
struct MinMax 71,2558
  uint64_t Min;72,2574
  uint64_t Max;73,2590
using Assume2KnowledgeMap 80,2860
using RetainedKnowledgeMap 82,2921
struct RetainedKnowledge 100,3811
  Attribute::AttrKind AttrKind 101,3838
  uint64_t ArgValue 102,3888
  Value *WasOn WasOn103,3913
  bool operator==(operator==104,3939
  bool operator!=(operator!=108,4098
  bool operator<(111,4288
  operator bool(operator bool118,4662
  static RetainedKnowledge none(119,4726
inline RetainedKnowledge getKnowledgeFromUseInAssume(129,5193
constexpr StringRef IgnoreBundleTag 135,5473

/usr/include/llvm/Analysis/AssumptionCache.h,1562
#define LLVM_ANALYSIS_ASSUMPTIONCACHE_H16,701
class AssumptionCache 42,1518
  enum : unsigned 46,1650
  enum : unsigned { ExprResultIdx 46,1650
  struct ResultElem 48,1727
    WeakVH Assume;49,1749
    unsigned Index;53,1876
    operator Value operator Value54,1896
  Function &F;F61,2086
  TargetTransformInfo *TTI;TTI63,2102
  SmallVector<SmallVector67,2213
  SmallVector<ResultElem, 4> AssumeHandles;67,2213
      DenseMap<AffectedValueCallbackVH, SmallVector<SmallVector87,2766
  AffectedValuesMap AffectedValues;89,2880
  SmallVector<SmallVector92,2990
  AssumptionCache(109,3588
  bool invalidate(114,3776
  void clear(136,4622
  MutableArrayRef<ResultElem> assumptions(150,5098
  MutableArrayRef<ResultElem> assumptionsFor(157,5277
class AssumptionAnalysis 173,5746
  static AnalysisKey Key;176,5869
  using Result 179,5904
class AssumptionPrinterPass 185,6062
  raw_ostream &OS;OS186,6138
  explicit AssumptionPrinterPass(189,6166
  static bool isRequired(193,6297
class AssumptionCacheTracker 204,6775
  using FunctionCallsMap 221,7290
      DenseMap<FunctionCallbackVH, std::unique_ptr<std::unique_ptr222,7317
  FunctionCallsMap AssumptionCaches;225,7428
  void releaseMemory(241,7939
  bool doFinalization(248,8082
  static char ID;253,8170
template<> struct simplify_type<simplify_type256,8239
  using SimpleType 257,8302
  static SimpleType getSimplifiedValue(259,8333
template<> struct simplify_type<simplify_type263,8431
  using SimpleType 264,8500
  static SimpleType getSimplifiedValue(266,8541

/usr/include/llvm/Analysis/BasicAliasAnalysis.h,753
#define LLVM_ANALYSIS_BASICALIASANALYSIS_H14,589
class BasicAAResult 41,1452
  const DataLayout &DL;DL42,1496
  const Function &F;F43,1520
  const TargetLibraryInfo &TLI;TLI44,1541
  AssumptionCache &AC;AC45,1573
  DominatorTree *DT_;DT_48,1717
  DominatorTree *getDT(getDT50,1740
  BasicAAResult(55,1859
  BasicAAResult(60,2080
  BasicAAResult(63,2221
  SmallPtrSet<SmallPtrSet104,4018
  SmallPtrSet<const Value *, 16> Visited;104,4018
class BasicAA 152,6292
  static AnalysisKey Key;155,6382
  using Result 158,6417
class BasicAAWrapperPass 164,6578
  std::unique_ptr<BasicAAResult> Result;165,6627
  static char ID;170,6703
  BasicAAResult &getResult(getResult174,6747
  const BasicAAResult &getResult(getResult175,6796

/usr/include/llvm/Analysis/BlockFrequencyInfo.h,790
#define LLVM_ANALYSIS_BLOCKFREQUENCYINFO_H14,552
enum PGOViewCountsType 34,972
enum PGOViewCountsType { PGOVCT_None,34,972
enum PGOViewCountsType { PGOVCT_None, PGOVCT_Graph,34,972
enum PGOViewCountsType { PGOVCT_None, PGOVCT_Graph, PGOVCT_Text 34,972
class BlockFrequencyInfo 38,1155
  std::unique_ptr<ImplType> BFI;41,1238
class BlockFrequencyAnalysis114,4429
  static AnalysisKey Key;118,4568
  using Result 122,4657
class BlockFrequencyPrinterPass129,4872
  raw_ostream &OS;OS131,4960
  explicit BlockFrequencyPrinterPass(134,4988
  static bool isRequired(138,5123
class BlockFrequencyInfoWrapperPass 142,5234
  BlockFrequencyInfo BFI;143,5294
  static char ID;146,5329
  BlockFrequencyInfo &getBFI(getBFI151,5429
  const BlockFrequencyInfo &getBFI(getBFI152,5476

/usr/include/llvm/Analysis/BlockFrequencyInfoImpl.h,8506
#define LLVM_ANALYSIS_BLOCKFREQUENCYINFOIMPL_H15,651
#define DEBUG_TYPE 52,1681
namespace bfi_detail 71,2160
class BlockMass 92,2923
  explicit BlockMass(97,2996
  static BlockMass getEmpty(99,3049
  static BlockMass getFull(101,3104
  uint64_t getMass(105,3200
  bool isFull(107,3245
  bool isEmpty(108,3324
  bool operator!(110,3366
  BlockMass &operator+=(operator+=115,3520
  BlockMass &operator-=(operator-=125,3807
  BlockMass &operator*=(operator*=131,3939
  bool operator==(operator==136,4035
  bool operator!=(operator!=137,4099
  bool operator<=(operator<=138,4163
  bool operator>=(operator>=139,4227
  bool operator<(140,4291
  bool operator>(141,4353
inline BlockMass operator+(153,4677
inline BlockMass operator-(156,4762
inline BlockMass operator*(159,4847
inline BlockMass operator*(162,4940
inline raw_ostream &operator<<(operator<<166,5034
class BlockFrequencyInfoImplBase 180,5554
  using Scaled64 182,5597
  using BlockMass 183,5640
  struct BlockNode 192,5981
    IndexType Index;195,6035
    BlockNode(197,6057
    BlockNode(198,6122
    bool operator==(operator==200,6172
    bool operator!=(operator!=201,6247
    bool operator<=(operator<=202,6322
    bool operator>=(operator>=203,6397
    bool operator<(204,6472
    bool operator>(205,6545
    bool isValid(207,6619
    static size_t getMaxIndex(209,6680
  struct FrequencyData 215,6816
    Scaled64 Scaled;216,6841
    uint64_t Integer;217,6862
  struct LoopData 224,7018
    LoopData *Parent;Parent229,7210
    ExitMap Exits;232,7392
    NodeList Nodes;233,7461
    HeaderMassList BackedgeMass;234,7535
    BlockMass Mass;235,7608
    Scaled64 Scale;236,7628
    LoopData(238,7649
    LoopData(242,7803
    bool isHeader(250,8105
    BlockNode getHeader(257,8337
    bool isIrreducible(258,8390
    HeaderMassList::difference_type getHeaderIndex(260,8449
    NodeList::const_iterator members_begin(268,8755
    NodeList::const_iterator members_end(272,8856
    iterator_range<NodeList::const_iterator> members(273,8929
  struct WorkingData 279,9094
    BlockNode Node;280,9117
    BlockMass Mass;282,9229
    WorkingData(284,9305
    bool isLoopHeader(286,9361
    bool isDoubleLoopHeader(288,9433
    LoopData *getContainingLoop(getContainingLoop293,9601
    BlockNode getResolvedNode(314,10415
    LoopData *getPackagedLoop(getPackagedLoop319,10537
    BlockMass &getMass(getMass333,11027
    bool isPackaged(342,11243
    bool isAPackage(345,11345
    bool isADoublePackage(348,11462
  struct Weight 366,12165
    enum DistType 367,12183
    enum DistType { Local,367,12183
    enum DistType { Local, Exit,367,12183
    enum DistType { Local, Exit, Backedge 367,12183
    BlockNode TargetNode;369,12255
    Weight(373,12331
  struct Distribution 385,12818
    WeightList Weights;388,12890
    void addLocal(394,13108
    void addExit(398,13215
    void addBackedge(402,13320
  std::vector<FrequencyData> Freqs;422,14048
  SparseBitVector<> IsIrrLoopHeader;426,14172
  std::vector<WorkingData> Working;429,14250
  std::list<LoopData> Loops;432,14326
  virtual raw_ostream &print(print520,17737
  void dump(521,17804
  BlockFrequency getEntryFreq(536,18385
namespace bfi_detail 545,18620
template <class BlockT> struct TypeMap 547,18644
template <> struct TypeMap<TypeMap548,18687
template <> struct TypeMap<TypeMap556,18949
  using BlockT 557,18997
  using BlockKeyT 558,19033
  using FunctionT 559,19080
  using BranchProbabilityInfoT 560,19117
  using LoopT 561,19180
  using LoopInfoT 562,19209
template <class BlockT> std::string getBlockName(575,19642
template <> inline std::string getBlockName(583,19952
struct IrreducibleGraph 602,20838
  using BFIBase 603,20864
  BFIBase &BFI;BFI605,20911
  using BlockNode 607,20928
  struct IrrNode 608,20968
    BlockNode Node;609,20987
    std::deque<const IrrNode *> Edges;611,21031
    IrrNode(613,21071
    iterator pred_begin(617,21190
    iterator succ_begin(618,21248
    iterator pred_end(619,21314
    iterator succ_end(620,21369
  BlockNode Start;622,21428
  const IrrNode *StartIrr StartIrr623,21447
  std::vector<IrrNode> Nodes;624,21484
  SmallDenseMap<SmallDenseMap625,21514
  SmallDenseMap<uint32_t, IrrNode *, 4> Lookup;625,21514
  IrreducibleGraph(637,22015
  void addNode(648,22422
void IrreducibleGraph::initialize(initialize662,22880
void IrreducibleGraph::addEdges(addEdges677,23375
template <class BT> class BlockFrequencyInfoImpl 848,31781
  using BlockT 852,31977
  using BlockKeyT 853,32036
  using FunctionT 854,32101
  using BranchProbabilityInfoT 855,32166
  using LoopT 857,32263
  using LoopInfoT 858,32320
  using Successor 859,32385
  using Predecessor 860,32434
  using BFICallbackVH 861,32494
  const BranchProbabilityInfoT *BPI BPI864,32584
  const LoopInfoT *LI LI865,32631
  const FunctionT *F F866,32664
  std::vector<const BlockT *> RPOT;869,32735
  DenseMap<DenseMap870,32771
  DenseMap<BlockKeyT, std::pair<BlockNode, BFICallbackVH>> Nodes;870,32771
  using rpot_iterator 872,32838
  rpot_iterator rpot_begin(874,32917
  rpot_iterator rpot_end(875,32977
  size_t getIndex(877,33034
  BlockNode getNode(879,33112
  BlockNode getNode(883,33204
  const BlockT *getBlock(getBlock885,33284
  std::string getBlockName(966,36498
  using ProbMatrixType 985,37426
  const FunctionT *getFunction(getFunction1012,38564
  using BlockFrequencyInfoImplBase::getEntryFreq;1017,38730
  BlockFrequency getBlockFreq(1019,38781
  getBlockProfileCount(1024,38934
  getProfileCountFromFreq(1031,39238
  bool isIrrLoopHeader(1037,39524
  void forgetBlock(1043,39702
  Scaled64 getFloatingBlockFreq(1050,39947
  const BranchProbabilityInfoT &getBPI(getBPI1054,40084
  using BlockFrequencyInfoImplBase::dump;1069,40729
namespace bfi_detail 1074,40837
  BFICallbackVH(1099,41465
void BlockFrequencyInfoImpl<BT>::calculate(calculate1105,41578
void BlockFrequencyInfoImpl<BT>::setBlockFreq(setBlockFreq1147,42940
template <class BT> void BlockFrequencyInfoImpl<BT>::initializeRPOT(initializeRPOT1162,43540
template <class BT> void BlockFrequencyInfoImpl<BT>::initializeLoops(initializeLoops1185,44393
template <class BT> void BlockFrequencyInfoImpl<BT>::computeMassInLoops(computeMassInLoops1238,46109
bool BlockFrequencyInfoImpl<BT>::computeMassInLoop(computeMassInLoop1253,46600
bool BlockFrequencyInfoImpl<BT>::tryToComputeMassInFunction(tryToComputeMassInFunction1327,49717
template <class BT> void BlockFrequencyInfoImpl<BT>::computeMassInFunction(computeMassInFunction1346,50346
bool BlockFrequencyInfoImpl<BT>::needIterativeInference(needIterativeInference1356,50652
template <class BT> void BlockFrequencyInfoImpl<BT>::applyIterativeInference(applyIterativeInference1370,51111
void BlockFrequencyInfoImpl<BT>::iterativeInference(iterativeInference1424,53033
void BlockFrequencyInfoImpl<BT>::findReachableBlocks(findReachableBlocks1509,56049
void BlockFrequencyInfoImpl<BT>::initTransitionProbabilities(initTransitionProbabilities1563,57776
BlockFrequencyInfoImplBase::Scaled64 BlockFrequencyInfoImpl<BT>::discrepancy(discrepancy1621,59819
namespace bfi_detail 1638,60472
template <class BT> struct BlockEdgesAdder 1640,60496
  const BlockFrequencyInfoImpl<BT> &BFI;BFI1645,60669
  explicit BlockEdgesAdder(1647,60711
  void operator()(operator()1650,60798
void BlockFrequencyInfoImpl<BT>::computeIrreducibleMass(computeIrreducibleMass1661,61134
inline uint32_t getWeightFromBranchProb(1684,61903
BlockFrequencyInfoImpl<BT>::propagateMassToSuccessors(propagateMassToSuccessors1690,62033
raw_ostream &BlockFrequencyInfoImpl<BT>::print(print1719,63143
void BlockFrequencyInfoImpl<BT>::verifyMatch(verifyMatch1743,63967
enum GVDAGType 1800,65868
enum GVDAGType { GVDT_None,1800,65868
enum GVDAGType { GVDT_None, GVDT_Fraction,1800,65868
enum GVDAGType { GVDT_None, GVDT_Fraction, GVDT_Integer,1800,65868
enum GVDAGType { GVDT_None, GVDT_Fraction, GVDT_Integer, GVDT_Count 1800,65868
struct BFIDOTGraphTraitsBase 1803,66007
  using GTraits 1804,66069
  using NodeRef 1805,66123
  using EdgeIter 1806,66168
  using NodeIter 1807,66224
  uint64_t MaxFrequency 1809,66278
  explicit BFIDOTGraphTraitsBase(1811,66308
  static StringRef getGraphName(1814,66408
  std::string getNodeAttributes(1818,66517
  std::string getNodeLabel(1848,67420
  std::string getEdgeAttributes(1879,68301
#undef DEBUG_TYPE1911,69236

/usr/include/llvm/Analysis/BranchProbabilityInfo.h,1839
#define LLVM_ANALYSIS_BRANCHPROBABILITYINFO_H14,557
class BranchProbabilityInfo 113,4983
  BranchProbabilityInfo(117,5059
  BranchProbabilityInfo(124,5340
  BranchProbabilityInfo &operator=(operator=135,5764
  static BranchProbability getBranchProbStackProtector(202,8535
  class SccInfo 215,9073
    enum SccBlockType 219,9313
      Inner 220,9337
      Header 221,9356
      Exiting 222,9376
    SccMap SccNums;237,10171
    SccBlockTypeMaps SccBlocks;238,10191
    bool isSCCHeader(249,10612
    bool isSCCExitingBlock(254,10835
  class LoopBlock 299,12749
    const BasicBlock *getBlock(getBlock304,12890
    BasicBlock *getBlock(getBlock305,12944
    LoopData getLoopData(306,13012
    Loop *getLoop(getLoop307,13060
    int getSccNum(308,13107
    bool belongsToLoop(310,13156
    bool belongsToSameLoop(311,13230
  DenseSet<DenseSet324,13657
  DenseSet<BasicBlockCallbackVH, DenseMapInfo<Value*>> Handles;324,13657
  DenseMap<DenseMap330,13930
  DenseMap<Edge, BranchProbability> Probs;330,13930
  std::unique_ptr<const SccInfo> SccI;338,14153
  SmallDenseMap<SmallDenseMap341,14255
  SmallDenseMap<const BasicBlock *, uint32_t> EstimatedBlockWeight;341,14255
  SmallDenseMap<SmallDenseMap344,14393
  SmallDenseMap<LoopData, uint32_t> EstimatedLoopWeight;344,14393
  LoopBlock getLoopBlock(347,14498
class BranchProbabilityAnalysis425,18577
  static AnalysisKey Key;429,18725
  using Result 433,18814
class BranchProbabilityPrinterPass440,19054
  raw_ostream &OS;OS442,19148
  explicit BranchProbabilityPrinterPass(445,19176
  static bool isRequired(449,19314
class BranchProbabilityInfoWrapperPass 453,19428
  BranchProbabilityInfo BPI;454,19491
  static char ID;457,19529
  BranchProbabilityInfo &getBPI(getBPI461,19587
  const BranchProbabilityInfo &getBPI(getBPI462,19637

/usr/include/llvm/Analysis/CFGPrinter.h,2020
#define LLVM_ANALYSIS_CFGPRINTER_H19,769
class CFGViewerPass 35,1272
  PreservedAnalyses run(37,1340
  static bool isRequired(38,1407
class CFGOnlyViewerPass 41,1455
  static bool isRequired(44,1598
class CFGPrinterPass 47,1646
  static bool isRequired(50,1783
class CFGOnlyPrinterPass 53,1831
  static bool isRequired(56,1976
class DOTFuncInfo 59,2024
  const Function *F;F61,2053
  const BlockFrequencyInfo *BFI;BFI62,2074
  const BranchProbabilityInfo *BPI;BPI63,2107
  uint64_t MaxFreq;64,2143
  bool ShowHeat;65,2163
  bool EdgeWeights;66,2180
  bool RawWeights;67,2200
  DOTFuncInfo(70,2228
  DOTFuncInfo(72,2303
  const BlockFrequencyInfo *getBFI(getBFI80,2650
  const BranchProbabilityInfo *getBPI(getBPI82,2710
  const Function *getFunction(getFunction84,2773
  uint64_t getMaxFreq(86,2832
  uint64_t getFreq(88,2883
  void setHeatColors(92,2986
  bool showHeatColors(94,3054
  void setRawEdgeWeights(96,3100
  bool useRawEdgeWeights(98,3178
  void setEdgeWeights(100,3229
  bool showEdgeWeights(102,3307
struct GraphTraits<GraphTraits106,3372
  static NodeRef getEntryNode(107,3449
  using nodes_iterator 112,3639
  static nodes_iterator nodes_begin(114,3709
  static nodes_iterator nodes_end(118,3834
  static size_t size(122,3955
std::string SimpleNodeLabelString(128,4083
std::string CompleteNodeLabelString(140,4350
  enum { MaxColumns 147,4594
struct DOTGraphTraits<DOTGraphTraits187,5786
  DenseMap<DenseMap190,5891
  DenseMap<const BasicBlock *, bool> isOnDeoptOrUnreachablePath;190,5891
  DOTGraphTraits(192,5957
  static void eraseComment(194,6035
  static std::string getGraphName(199,6186
  static std::string getSimpleNodeLabel(203,6330
  static void printBasicBlock(207,6456
  static std::string getCompleteNodeLabel(217,6755
  std::string getNodeLabel(226,7140
  static std::string getEdgeSourceLabel(234,7348
  static std::string getBBName(257,8159
  std::string getEdgeAttributes(270,8550
  std::string getNodeAttributes(324,10445

/usr/include/llvm/Analysis/CFGSCCPrinter.h,208
#define LLVM_ANALYSIS_CFGSCCPRINTER_H10,408
class CFGSCCPrinterPass 16,499
  raw_ostream &OS;OS17,567
  explicit CFGSCCPrinterPass(20,595
  PreservedAnalyses run(21,653
  static bool isRequired(22,720

/usr/include/llvm/Analysis/CallGraph.h,4175
#define LLVM_ANALYSIS_CALLGRAPH_H46,2355
class CallGraph 72,3008
  Module &M;M73,3026
  FunctionMapTy FunctionMap;79,3183
  CallGraphNode *ExternalCallingNode;ExternalCallingNode83,3331
  std::unique_ptr<CallGraphNode> CallsExternalNode;87,3482
  Module &getModule(getModule101,3839
  inline iterator begin(106,3997
  inline iterator end(107,4055
  inline const_iterator begin(108,4109
  inline const_iterator end(109,4179
  CallGraphNode *getExternalCallingNode(getExternalCallingNode127,4889
  CallGraphNode *getCallsExternalNode(getCallsExternalNode129,4970
class CallGraphNode 166,6467
  using CallRecord 178,7190
  using CalledFunctionsVector 181,7279
  inline CallGraphNode(184,7386
  ~CallGraphNode(189,7566
  using iterator 193,7666
  using const_iterator 194,7720
  Function *getFunction(getFunction197,7852
  inline iterator begin(199,7899
  inline iterator end(200,7961
  inline const_iterator begin(201,8019
  inline const_iterator end(202,8093
  inline bool empty(203,8163
  inline unsigned size(204,8227
  unsigned getNumReferences(208,8424
  void removeAllCalledFunctions(227,9027
  void stealCalledFunctionsFrom(235,9255
  void addCalledFunction(242,9541
  void removeCallEdge(249,9810
  CallGraph *CG;CG281,10866
  Function *F;F282,10883
  std::vector<CallRecord> CalledFunctions;284,10899
  unsigned NumReferences 288,11068
  void DropRef(290,11099
  void AddRef(291,11137
  void allReferencesDropped(294,11249
class CallGraphAnalysis 302,11542
  static AnalysisKey Key;305,11662
  using Result 309,11758
  CallGraph run(314,11911
class CallGraphPrinterPass 318,12047
  raw_ostream &OS;OS319,12121
  explicit CallGraphPrinterPass(322,12149
  static bool isRequired(326,12275
class CallGraphSCCsPrinterPass330,12389
  raw_ostream &OS;OS332,12475
  explicit CallGraphSCCsPrinterPass(335,12503
  static bool isRequired(339,12633
class CallGraphWrapperPass 349,13051
  std::unique_ptr<CallGraph> G;350,13100
  static char ID;353,13141
  const CallGraph &getCallGraph(getCallGraph360,13363
  CallGraph &getCallGraph(getCallGraph361,13418
  using iterator 363,13462
  using const_iterator 364,13502
  Module &getModule(getModule367,13611
  inline iterator begin(369,13667
  inline iterator end(370,13716
  inline const_iterator begin(371,13761
  inline const_iterator end(372,13822
  CallGraphNode *getExternalCallingNode(getExternalCallingNode384,14277
  CallGraphNode *getCallsExternalNode(getCallsExternalNode388,14372
  Function *removeFunctionFromModule(removeFunctionFromModule403,14992
  CallGraphNode *getOrInsertFunction(getOrInsertFunction409,15217
template <> struct GraphTraits<GraphTraits432,15974
  using NodeRef 433,16024
  using CGNPairTy 434,16059
  static NodeRef getEntryNode(436,16107
  static CallGraphNode *CGNGetValue(CGNGetValue437,16173
  using ChildIteratorType 439,16244
  static ChildIteratorType child_begin(442,16345
  static ChildIteratorType child_end(446,16458
template <> struct GraphTraits<GraphTraits451,16570
  using NodeRef 452,16626
  using CGNPairTy 453,16667
  using EdgeRef 454,16714
  static NodeRef getEntryNode(456,16768
  static const CallGraphNode *CGNGetValue(CGNGetValue457,16840
  using ChildIteratorType 459,16917
  using ChildEdgeIteratorType 461,17023
  static ChildIteratorType child_begin(463,17087
  static ChildIteratorType child_end(467,17200
  static ChildEdgeIteratorType child_edge_begin(471,17309
  static ChildEdgeIteratorType child_edge_end(474,17397
  static NodeRef edge_dest(476,17476
struct GraphTraits<GraphTraits480,17551
  using PairTy 481,17623
  static NodeRef getEntryNode(484,17713
  static CallGraphNode *CGGetValuePtr(CGGetValuePtr488,17839
  using nodes_iterator 493,18004
  static nodes_iterator nodes_begin(496,18100
  static nodes_iterator nodes_end(500,18214
struct GraphTraits<GraphTraits506,18339
  using PairTy 508,18468
  static NodeRef getEntryNode(511,18558
  static const CallGraphNode *CGGetValuePtr(CGGetValuePtr515,18690
  using nodes_iterator 520,18861
  static nodes_iterator nodes_begin(523,18963
  static nodes_iterator nodes_end(527,19083

/usr/include/llvm/Analysis/CallPrinter.h,215
#define LLVM_ANALYSIS_CALLPRINTER_H15,606
class CallGraphDOTPrinterPass 24,765
  PreservedAnalyses run(26,853
  static bool isRequired(27,916
class CallGraphViewerPass 31,1000
  static bool isRequired(34,1143

/usr/include/llvm/Analysis/CaptureTracking.h,323
#define LLVM_ANALYSIS_CAPTURETRACKING_H14,577
  struct CaptureTracker 83,4291
    virtual ~CaptureTracker(84,4317
    virtual bool shouldExplore(95,4807
    virtual bool isDereferenceableOrNull(105,5322
  enum class UseCaptureKind 109,5468
    NO_CAPTURE,110,5498
    MAY_CAPTURE,111,5514
    PASSTHROUGH,112,5531

/usr/include/llvm/Analysis/ConstantFolding.h,47
#define LLVM_ANALYSIS_CONSTANTFOLDING_H20,888

/usr/include/llvm/Analysis/ConstraintSystem.h,1322
#define LLVM_ANALYSIS_CONSTRAINTSYSTEM_H10,411
class ConstraintSystem 23,665
  struct Entry 24,690
    int64_t Coefficient;25,707
    uint16_t Id;26,732
    Entry(28,750
  static int64_t getConstPart(32,846
  static int64_t getLastCoefficient(38,960
  SmallVector<SmallVector<Entry,Entry51,1352
  SmallVector<SmallVector<Entry, 8>, 4> Constraints;51,1352
  DenseMap<Value Value55,1504
  DenseMap<Value *, unsigned> Value2Index;55,1504
  bool eliminateUsingFM(58,1628
  bool mayHaveSolutionImpl(61,1737
  ConstraintSystem(67,1888
  ConstraintSystem(68,1912
  ConstraintSystem(74,2110
  bool addVariableRow(77,2248
  DenseMap<DenseMap96,2845
  DenseMap<Value *, unsigned> &getValue2Index(getValue2Index96,2845
  const DenseMap<DenseMap97,2917
  const DenseMap<Value *, unsigned> &getValue2Index(getValue2Index97,2917
  bool addVariableRowFill(101,3008
  static SmallVector<SmallVector114,3457
  static SmallVector<int64_t, 8> negate(114,3457
  static SmallVector<SmallVector125,3844
  static SmallVector<int64_t, 8> negateOrEqual(125,3844
  static SmallVector<SmallVector137,4267
  static SmallVector<int64_t, 8> toStrictLessThan(137,4267
  SmallVector<int64_t> getLastConstraint(147,4572
  void popLastConstraint(155,4850
  void popLastNVariables(156,4905
  unsigned size(162,5061

/usr/include/llvm/Analysis/CostModel.h,210
#define LLVM_ANALYSIS_COSTMODEL_H10,404
class CostModelPrinterPass 16,534
  raw_ostream &OS;OS17,608
  explicit CostModelPrinterPass(20,636
  PreservedAnalyses run(22,698
  static bool isRequired(24,766

/usr/include/llvm/Analysis/CycleAnalysis.h,522
#define LLVM_ANALYSIS_CYCLEANALYSIS_H16,623
class CycleInfoWrapperPass 26,858
  CycleInfo CI;28,934
  static char ID;31,959
  CycleInfoWrapperPass(33,978
  CycleInfo &getResult(getResult35,1005
  const CycleInfo &getResult(getResult36,1045
  bool runOnFunction(38,1098
class CycleAnalysis 47,1391
  static AnalysisKey Key;49,1498
  using Result 53,1590
  using LegacyWrapper 55,1619
  CycleInfo run(58,1740
class CycleInfoPrinterPass 64,1873
  raw_ostream &OS;OS65,1947
  static bool isRequired(72,2094

/usr/include/llvm/Analysis/DDG.h,4584
#define LLVM_ANALYSIS_DDG_H14,539
class DDGNode 44,1708
  enum class NodeKind 48,1816
    Unknown,49,1840
    SingleInstruction,50,1853
    MultiInstruction,51,1876
    PiBlock,52,1898
    Root,53,1911
  DDGNode(57,1949
  DDGNode(59,2029
  DDGNode &operator=(operator=62,2124
  DDGNode &operator=(operator=68,2233
  NodeKind getKind(75,2388
  void setKind(85,2859
  NodeKind Kind;88,2910
class RootDDGNode 93,3053
  RootDDGNode(95,3098
  RootDDGNode(97,3189
  static bool classof(101,3347
  static bool classof(104,3436
class SimpleDDGNode 108,3573
  SimpleDDGNode &operator=(operator=120,3870
  const InstructionListType &getInstructions(getInstructions127,4066
  InstructionListType &getInstructions(getInstructions131,4209
  Instruction *getFirstInstruction(getFirstInstruction137,4423
  Instruction *getLastInstruction(getLastInstruction138,4504
  static bool classof(141,4655
  static bool classof(145,4814
  void appendInstructions(149,4951
  void appendInstructions(155,5207
  SmallVector<SmallVector160,5396
  SmallVector<Instruction *, 2> InstList;160,5396
class PiBlockDDGNode 170,5895
  using PiNodeList 172,5943
  PiBlockDDGNode &operator=(operator=182,6231
  const PiNodeList &getNodes(getNodes189,6426
  PiNodeList &getNodes(getNodes193,6546
  static bool classof(199,6750
  PiNodeList NodeList;205,6890
class DDGEdge 213,7163
  enum class EdgeKind 216,7242
    Unknown,217,7266
    RegisterDefUse,218,7279
    MemoryDependence,219,7299
    Rooted,220,7321
    Last 221,7333
  DDGEdge(225,7442
  DDGEdge(226,7505
  DDGEdge(227,7572
  DDGEdge &operator=(operator=230,7691
  EdgeKind getKind(237,7835
  bool isDefUse(240,7947
  bool isMemoryDependence(243,8093
  bool isRooted(247,8268
  EdgeKind Kind;250,8339
template <typename NodeType> class DependenceGraphInfo 255,8474
  using DependenceList 257,8539
  DependenceGraphInfo(261,8706
  DependenceGraphInfo(263,8828
  StringRef getName(268,9046
  NodeType &getRoot(getRoot271,9133
  std::string Name;291,10009
  const DependenceInfo DI;296,10221
  NodeType *Root Root300,10398
using DDGInfo 303,10430
class DataDependenceGraph 306,10503
  using NodeType 311,10662
  using EdgeType 312,10690
  DataDependenceGraph(316,10815
  using PiBlockMapType 333,11467
  PiBlockMapType PiBlockMap;337,11682
class DDGBuilder 346,12065
  DDGBuilder(348,12153
  DDGNode &createRootNode(createRootNode351,12306
  DDGNode &createFineGrainedNode(createFineGrainedNode357,12486
  DDGNode &createPiBlock(createPiBlock363,12692
  DDGEdge &createDefUseEdge(createDefUseEdge369,12896
  DDGEdge &createMemoryEdge(createMemoryEdge375,13134
  DDGEdge &createRootedEdge(createRootedEdge381,13374
  const NodeListType &getNodesInPiBlock(getNodesInPiBlock389,13664
class DDGAnalysis 414,14808
  using Result 416,14876
  static AnalysisKey Key;421,15063
class DDGAnalysisPrinterPass 425,15141
  explicit DDGAnalysisPrinterPass(427,15227
  static bool isRequired(430,15421
  raw_ostream &OS;OS433,15475
bool DependenceGraphInfo<NodeType>::getDependencies(getDependencies441,15724
DependenceGraphInfo<NodeType>::getDependenceString(getDependenceString464,16509
template <> struct GraphTraits<GraphTraits487,17318
  using NodeRef 488,17362
  static DDGNode *DDGGetTargetNode(DDGGetTargetNode490,17392
  using ChildIteratorType 496,17653
  using ChildEdgeIteratorType 498,17752
  static NodeRef getEntryNode(500,17804
  static ChildIteratorType child_begin(501,17859
  static ChildIteratorType child_end(504,17976
  static ChildEdgeIteratorType child_edge_begin(508,18090
  static ChildEdgeIteratorType child_edge_end(511,18178
struct GraphTraits<GraphTraits515,18272
  using nodes_iterator 516,18348
  static NodeRef getEntryNode(517,18404
  static nodes_iterator nodes_begin(520,18492
  static nodes_iterator nodes_end(523,18583
template <> struct GraphTraits<GraphTraits527,18731
  using NodeRef 528,18781
  static const DDGNode *DDGGetTargetNode(DDGGetTargetNode530,18817
  using ChildIteratorType 536,19090
  using ChildEdgeIteratorType 538,19195
  static NodeRef getEntryNode(540,19253
  static ChildIteratorType child_begin(541,19308
  static ChildIteratorType child_end(544,19425
  static ChildEdgeIteratorType child_edge_begin(548,19539
  static ChildEdgeIteratorType child_edge_end(551,19627
struct GraphTraits<GraphTraits555,19721
  using nodes_iterator 557,19813
  static NodeRef getEntryNode(558,19875
  static nodes_iterator nodes_begin(561,19969
  static nodes_iterator nodes_end(564,20066

/usr/include/llvm/Analysis/DDGPrinter.h,283
#define LLVM_ANALYSIS_DDGPRINTER_H16,648
class DDGDotPrinterPass 28,1012
  PreservedAnalyses run(30,1088
  static bool isRequired(32,1219
struct DOTGraphTraits<DOTGraphTraits39,1474
  DOTGraphTraits(42,1563
  std::string getGraphName(45,1692
using DDGDotGraphTraits 89,3681

/usr/include/llvm/Analysis/DOTGraphTraitsPass.h,1371
#define LLVM_ANALYSIS_DOTGRAPHTRAITSPASS_H14,579
static std::unordered_set<std::string> nameObj;21,762
namespace llvm 23,811
template <typename Result,28,981
template <typename Result, typename GraphT 28,981
void viewGraphForFunction(34,1153
template <typename AnalysisT,42,1442
template <typename AnalysisT, bool IsSimple,42,1442
          typename GraphT 43,1487
static inline void shortenFileName(89,3288
void printGraphForFunction(106,3644
template <typename AnalysisT,126,4283
template <typename AnalysisT, bool IsSimple,126,4283
          typename GraphT 127,4328
template <typename AnalysisT,177,6292
template <typename AnalysisT, typename GraphT 177,6292
template <typename AnalysisT,182,6452
template <typename AnalysisT, bool IsSimple,182,6452
template <typename AnalysisT, bool IsSimple, typename GraphT 182,6452
template <typename AnalysisT,221,7620
template <typename AnalysisT, bool IsSimple,221,7620
template <typename AnalysisT, bool IsSimple, typename GraphT 221,7620
template <typename AnalysisT,260,8792
template <typename AnalysisT, bool IsSimple,260,8792
template <typename AnalysisT, bool IsSimple, typename GraphT 260,8792
template <typename AnalysisT,286,9581
template <typename AnalysisT, bool IsSimple,286,9581
template <typename AnalysisT, bool IsSimple, typename GraphT 286,9581
void WriteDOTGraphToFile(324,10706

/usr/include/llvm/Analysis/Delinearization.h,238
#define LLVM_ANALYSIS_DELINEARIZATION_H17,787
struct DelinearizationPrinterPass139,6030
  explicit DelinearizationPrinterPass(141,6121
  PreservedAnalyses run(142,6177
  static bool isRequired(143,6244
  raw_ostream &OS;OS146,6298

/usr/include/llvm/Analysis/DemandedBits.h,1026
#define LLVM_ANALYSIS_DEMANDEDBITS_H22,871
class DemandedBits 38,1171
  DemandedBits(40,1200
  APInt getDemandedBits(52,1754
  APInt getDemandedBits(55,1839
  bool isInstructionDead(58,1936
  bool isUseDead(61,2059
  void print(63,2086
  static APInt determineLiveOperandBitsAdd(67,2214
  static APInt determineLiveOperandBitsSub(74,2570
  void performAnalysis(80,2836
  void determineLiveOperandBits(81,2862
  Function &F;F86,3064
  AssumptionCache &AC;AC87,3079
  DominatorTree &DT;DT88,3102
  SmallPtrSet<Instruction*Instruction93,3213
  SmallPtrSet<Instruction*, 32> Visited;93,3213
  DenseMap<Instruction Instruction94,3254
  DenseMap<Instruction *, APInt> AliveBits;94,3254
  SmallPtrSet<Use Use97,3459
  SmallPtrSet<Use *, 16> DeadUses;97,3459
class DemandedBitsAnalysis 101,3560
  static AnalysisKey Key;104,3689
  using Result 108,3778
class DemandedBitsPrinterPass 116,3999
  raw_ostream &OS;OS117,4079
  explicit DemandedBitsPrinterPass(120,4107
  static bool isRequired(124,4240

/usr/include/llvm/Analysis/DependenceAnalysis.h,3961
#define LLVM_ANALYSIS_DEPENDENCEANALYSIS_H40,1670
  class Dependence 71,2930
    Dependence(77,3068
    struct DVEntry 84,3385
      unsigned char Direction 95,3574
      bool Scalar 96,3638
      bool PeelFirst 97,3681
      bool PeelLast 98,3761
      bool Splitable 99,3844
      DVEntry(101,3992
    Instruction *getSrc(getSrc108,4202
    Instruction *getDst(getDst112,4333
    bool isInput(116,4453
    bool isUnordered(136,5002
    virtual bool isLoopIndependent(140,5145
    virtual bool isConfused(145,5356
    virtual bool isConsistent(149,5548
    virtual unsigned getLevels(153,5726
    virtual unsigned getDirection(157,5869
    virtual const SCEV *getDistance(getDistance161,6048
    virtual bool isDirectionNegative(165,6268
    virtual bool normalize(171,6575
    virtual bool isPeelFirst(175,6759
    virtual bool isPeelLast(179,6944
    virtual bool isSplitable(183,7106
    const Dependence *getNextPredecessor(getNextPredecessor192,7517
    const Dependence *getNextSuccessor(getNextSuccessor196,7676
    void setNextPredecessor(200,7832
    void setNextSuccessor(204,7991
    Instruction *Src,Src211,8193
    Instruction *Src, *Dst;Dst211,8193
  class DependenceInfo 293,11639
    DependenceInfo(295,11674
    Function *getFunction(getFunction355,14562
    AAResults *AA;AA358,14622
    ScalarEvolution *SE;SE359,14641
    LoopInfo *LI;LI360,14666
    Function *F;F361,14684
    struct Subscript 366,14910
      const SCEV *Src;Src367,14933
      const SCEV *Dst;Dst368,14956
      enum ClassificationKind 369,14979
      enum ClassificationKind { ZIV,369,14979
      enum ClassificationKind { ZIV, SIV,369,14979
      enum ClassificationKind { ZIV, SIV, RDIV,369,14979
      enum ClassificationKind { ZIV, SIV, RDIV, MIV,369,14979
      enum ClassificationKind { ZIV, SIV, RDIV, MIV, NonLinear 369,14979
      enum ClassificationKind { ZIV, SIV, RDIV, MIV, NonLinear } Classification;369,14979
      SmallBitVector Loops;370,15060
      SmallBitVector GroupLoops;371,15088
      SmallBitVector Group;372,15121
    struct CoefficientInfo 375,15157
      const SCEV *Coeff;Coeff376,15186
      const SCEV *PosPart;PosPart377,15211
      const SCEV *NegPart;NegPart378,15238
      const SCEV *Iterations;Iterations379,15265
    struct BoundInfo 382,15303
      const SCEV *Iterations;Iterations383,15326
      const SCEV *Upper[Upper384,15356
      const SCEV *Lower[Lower385,15384
      unsigned char Direction;386,15412
      unsigned char DirSet;387,15443
    class Constraint 405,16197
      enum ConstraintKind 407,16233
      enum ConstraintKind { Empty,407,16233
      enum ConstraintKind { Empty, Point,407,16233
      enum ConstraintKind { Empty, Point, Distance,407,16233
      enum ConstraintKind { Empty, Point, Distance, Line,407,16233
      enum ConstraintKind { Empty, Point, Distance, Line, Any 407,16233
      enum ConstraintKind { Empty, Point, Distance, Line, Any } Kind;407,16233
      ScalarEvolution *SE;SE408,16303
      const SCEV *A;A409,16330
      const SCEV *B;B410,16351
      const SCEV *C;C411,16372
      const Loop *AssociatedLoop;AssociatedLoop412,16393
      bool isEmpty(416,16508
      bool isPoint(419,16630
      bool isDistance(422,16758
      bool isLine(427,17014
      bool isAny(430,17150
    unsigned CommonLevels,533,21239
    unsigned CommonLevels, SrcLevels,533,21239
    unsigned CommonLevels, SrcLevels, MaxLevels;533,21239
  class DependenceAnalysis 978,42345
    typedef DependenceInfo Result;980,42431
    static AnalysisKey Key;984,42537
  struct DependenceAnalysisPrinterPass989,42695
    DependenceAnalysisPrinterPass(991,42796
    static bool isRequired(997,43040
    raw_ostream &OS;OS1000,43098
    bool NormalizeResults;1001,43119
  class DependenceAnalysisWrapperPass 1005,43255
    static char ID;1007,43327
    std::unique_ptr<DependenceInfo> info;1017,43694

/usr/include/llvm/Analysis/DependenceGraphBuilder.h,654
#define LLVM_ANALYSIS_DEPENDENCEGRAPHBUILDER_H15,616
template <class GraphType> class AbstractDependenceGraphBuilder 31,1120
  AbstractDependenceGraphBuilder(43,1482
  void populate(59,2368
  virtual void destroyEdge(136,5476
  virtual void destroyNode(139,5570
  virtual bool shouldCreatePiBlocks(143,5723
  virtual bool shouldSimplify(147,5873
  size_t getOrdinal(158,6354
  size_t getOrdinal(165,6589
  GraphType &Graph;Graph179,7158
  DependenceInfo &DI;DI183,7267
  const BasicBlockListType &BBList;BBList186,7358
  InstToNodeMap IMap;189,7470
  InstToOrdinalMap InstOrdinalMap;193,7611
  NodeToOrdinalMap NodeOrdinalMap;197,7771

/usr/include/llvm/Analysis/DomConditionCache.h,322
#define LLVM_ANALYSIS_DOMCONDITIONCACHE_H18,846
class DomConditionCache 31,1104
  using AffectedValuesMap = DenseMap<Value *, SmallVector<BranchInst BranchInst34,1214
  AffectedValuesMap AffectedValues;35,1291
  void registerBranch(39,1379
  void removeValue(42,1488
  ArrayRef<BranchInst *> conditionsFor(45,1606

/usr/include/llvm/Analysis/DominanceFrontier.h,1784
#define LLVM_ANALYSIS_DOMINANCEFRONTIER_H18,712
class DominanceFrontierBase 40,1324
  DomSetMapType Frontiers;50,1630
  SmallVector<BlockT BlockT52,1702
  SmallVector<BlockT *, IsPostDom ? 4 : 1> Roots;52,1702
  const SmallVectorImpl<BlockT *> &getRoots(getRoots61,2074
  BlockT *getRoot(getRoot63,2145
  bool isPostDominator(69,2333
  void releaseMemory(73,2400
  iterator begin(81,2597
  const_iterator begin(82,2646
  iterator end(83,2707
  const_iterator end(84,2752
  iterator find(85,2809
  const_iterator find(86,2866
  iterator addBasicBlock(88,2936
class ForwardDominanceFrontierBase123,4102
  using BlockTraits 126,4198
  using DomTreeT 129,4252
  using DomTreeNodeT 130,4292
  using DomSetType 131,4340
  using DomSetType = typename DominanceFrontierBase<BlockT, false>::DomSetType;DomSetType131,4340
  void analyze(133,4421
class DominanceFrontier 143,4704
  using DomTreeT 145,4788
  using DomTreeNodeT 146,4832
  using DomSetType 147,4884
  using DomSetType = DominanceFrontierBase<BasicBlock, false>::DomSetType;DomSetType147,4884
  using iterator 148,4959
  using iterator = DominanceFrontierBase<BasicBlock, false>::iterator;iterator148,4959
  using const_iterator 149,5030
      DominanceFrontierBase<BasicBlock, false>::const_iterator;const_iterator150,5055
class DominanceFrontierWrapperPass 157,5281
  DominanceFrontier DF;158,5340
  static char ID;161,5373
  DominanceFrontier &getDominanceFrontier(getDominanceFrontier165,5462
  const DominanceFrontier &getDominanceFrontier(getDominanceFrontier166,5521
class DominanceFrontierAnalysis184,6079
  static AnalysisKey Key;188,6227
  using Result 192,6316
class DominanceFrontierPrinterPass199,6545
  raw_ostream &OS;OS201,6639
  static bool isRequired(208,6794

/usr/include/llvm/Analysis/DominanceFrontierImpl.h,911
#define LLVM_ANALYSIS_DOMINANCEFRONTIERIMPL_H18,740
class DFCalculateWorkObject 34,1128
  DFCalculateWorkObject(38,1215
  BlockT *currentBB;currentBB42,1395
  BlockT *parentBB;parentBB43,1416
  const DomTreeNodeT *Node;Node44,1436
  const DomTreeNodeT *parentNode;parentNode45,1464
void DominanceFrontierBase<BlockT, IsPostDom>::removeBlock(removeBlock49,1542
void DominanceFrontierBase<BlockT, IsPostDom>::addToFrontier(addToFrontier57,1829
void DominanceFrontierBase<BlockT, IsPostDom>::removeFromFrontier(removeFromFrontier64,2107
bool DominanceFrontierBase<BlockT, IsPostDom>::compareDomSet(compareDomSet72,2411
bool DominanceFrontierBase<BlockT, IsPostDom>::compare(compare97,3007
void DominanceFrontierBase<BlockT, IsPostDom>::print(print127,3838
void DominanceFrontierBase<BlockT, IsPostDom>::dump(dump151,4448
ForwardDominanceFrontierBase<BlockT>::calculate(calculate158,4627

/usr/include/llvm/Analysis/EHUtils.h,183
#define LLVM_ANALYSIS_EHUTILS_H9,321
  enum Status 22,825
  enum Status { Unknown 22,825
  enum Status { Unknown = 0, EH 22,825
  enum Status { Unknown = 0, EH = 1, NonEH 22,825

/usr/include/llvm/Analysis/FunctionPropertiesAnalysis.h,813
#define LLVM_ANALYSIS_FUNCTIONPROPERTIESANALYSIS_H15,635
class FunctionPropertiesInfo 26,861
  void updateForBB(28,934
  void updateAggregateStats(29,995
  void reIncludeBB(30,1063
  getFunctionPropertiesInfo(34,1146
  getFunctionPropertiesInfo(38,1300
  bool operator!=(operator!=44,1512
class FunctionPropertiesAnalysis140,4597
  static AnalysisKey Key;144,4700
  using Result 146,4727
class FunctionPropertiesPrinterPass152,4913
  raw_ostream &OS;OS154,5009
  explicit FunctionPropertiesPrinterPass(157,5037
  static bool isRequired(161,5176
class FunctionPropertiesUpdater 170,5610
  bool finishAndTest(175,5776
  FunctionPropertiesInfo &FPI;FPI181,5910
  BasicBlock &CallSiteBB;CallSiteBB182,5941
  Function &Caller;Caller183,5967
  DenseSet<const BasicBlock *> Successors;188,6124

/usr/include/llvm/Analysis/GuardUtils.h,42
#define LLVM_ANALYSIS_GUARDUTILS_H13,572

/usr/include/llvm/Analysis/IRSimilarityIdentifier.h,5600
#define LLVM_ANALYSIS_IRSIMILARITYIDENTIFIER_H50,1791
enum InstrType 77,2554
enum InstrType { Legal,77,2554
enum InstrType { Legal, Illegal,77,2554
enum InstrType { Legal, Illegal, Invisible 77,2554
struct IRInstructionData115,4016
  SmallVector<Value Value121,4247
  SmallVector<Value *, 4> OperVals;121,4247
  std::optional<CmpInst::Predicate> RevisedPredicate;131,4780
  std::optional<std::string> CalleeName;141,5402
  SmallVector<SmallVector165,6331
  SmallVector<int, 4> RelativeBlockLocations;165,6331
struct IRInstructionDataList303,12412
struct IRInstructionDataTraits 317,13062
  static inline IRInstructionData *getEmptyKey(getEmptyKey318,13131
  static inline IRInstructionData *getTombstoneKey(getTombstoneKey319,13200
  static unsigned getHashValue(323,13314
  static bool isEqual(329,13487
struct IRInstructionMapper 381,15584
  unsigned IllegalInstrNumber 385,15739
  unsigned LegalInstrNumber 388,15869
  DenseMap<DenseMap391,15969
      InstructionIntegerMap;392,16036
  DenseMap<DenseMap396,16165
  DenseMap<BasicBlock *, unsigned> BasicBlockToInteger;396,16165
  bool AddedIllegalLastTime 402,16477
  bool CanCombineWithPrevInstr 405,16588
  bool HaveLegalRange 409,16744
  bool EnableMatchCallsByName 413,16889
  SpecificBumpPtrAllocator<IRInstructionData> *InstDataAllocator InstDataAllocator418,17118
  SpecificBumpPtrAllocator<IRInstructionDataList> *IDLAllocator IDLAllocator423,17383
  IRInstructionDataList *IDL IDL449,18561
  void initializeForBBs(456,18841
  void initializeForBBs(463,19140
  IRInstructionMapper(504,21093
  struct InstructionClassification521,21883
    InstrType visitBranchInst(526,22106
    InstrType visitPHINode(531,22230
    InstrType visitAllocaInst(537,22378
    InstrType visitVAArgInst(540,22571
    InstrType visitLandingPadInst(543,22726
    InstrType visitFuncletPadInst(544,22801
    InstrType visitDbgInfoIntrinsic(548,23036
    InstrType visitIntrinsicInst(549,23117
    InstrType visitCallInst(562,23828
    InstrType visitInvokeInst(584,24910
    InstrType visitCallBrInst(586,25056
    InstrType visitTerminator(588,25166
    InstrType visitInstruction(589,25232
  InstructionClassification InstClassifier;609,25996
class IRSimilarityCandidate 654,28039
  unsigned StartIdx 657,28155
  unsigned Len 660,28245
  IRInstructionData *FirstInst FirstInst663,28325
  IRInstructionData *LastInst LastInst666,28426
  DenseMap<DenseMap672,28620
  DenseMap<Value *, unsigned> ValueToNumber;672,28620
  DenseMap<DenseMap674,28739
  DenseMap<unsigned, Value *> NumberToValue;674,28739
  DenseMap<DenseMap677,28906
  DenseMap<unsigned, unsigned> NumberToCanonNum;677,28906
  DenseMap<DenseMap680,29072
  DenseMap<unsigned, unsigned> CanonNumToNumber;680,29072
  struct OperandMapping 720,31003
    const IRSimilarityCandidate &IRSC;IRSC723,31129
    ArrayRef<Value *> &OperVals;OperVals726,31212
    DenseMap<DenseMap730,31371
    DenseMap<unsigned, DenseSet<unsigned>> &ValueNumberMapping;ValueNumberMapping730,31371
  struct RelativeLocMapping 736,31672
    const IRSimilarityCandidate &IRSC;IRSC739,31810
    int RelativeLocation;742,31896
    Value *OperVal;OperVal745,31956
  void getBasicBlocks(898,39693
  void getBasicBlocks(907,40022
  unsigned getLength(928,40898
  unsigned getStartIdx(931,41006
  unsigned getEndIdx(934,41119
  IRInstructionData *front(front937,41224
  IRInstructionData *back(back939,41324
  Instruction *frontInstruction(frontInstruction942,41418
  Instruction *backInstruction(backInstruction944,41516
  BasicBlock *getStartBB(getStartBB947,41644
  BasicBlock *getEndBB(getEndBB949,41777
  Function *getFunction(getFunction952,41917
  std::optional<unsigned> getGVN(958,42206
  std::optional<Value *> fromGVN(970,42667
  std::optional<unsigned> getCanonicalNum(984,43228
  std::optional<unsigned> fromCanonicalNum(997,43733
  bool operator<(1007,44139
  using iterator 1011,44249
  iterator begin(1012,44301
  iterator end(1013,44356
typedef DenseMap<IRSimilarityCandidate IRSimilarityCandidate1016,44423
    CandidateGVNMapping;1018,44522
typedef std::vector<IRSimilarityCandidate> SimilarityGroup;1019,44547
typedef std::vector<SimilarityGroup> SimilarityGroupList;1020,44607
class IRSimilarityIdentifier 1045,45712
  IRSimilarityIdentifier(1047,45751
  void resetSimilarityCandidates(1105,48575
  std::optional<SimilarityGroupList> &getSimilarity(getSimilarity1117,49023
  SpecificBumpPtrAllocator<IRInstructionData> InstDataAllocator;1123,49169
  SpecificBumpPtrAllocator<IRInstructionDataList> InstDataListAllocator;1126,49283
  IRInstructionMapper Mapper;1130,49470
  bool EnableBranches 1134,49625
  bool EnableIndirectCalls 1138,49799
  bool EnableMatchingCallsByName 1143,50029
  bool EnableIntrinsics 1147,50163
  bool EnableMustTailCalls 1151,50299
  std::optional<SimilarityGroupList> SimilarityCandidates;1155,50464
class IRSimilarityIdentifierWrapperPass 1162,50678
  std::unique_ptr<IRSimilarity::IRSimilarityIdentifier> IRSI;1163,50740
  static char ID;1166,50811
  IRSimilarity::IRSimilarityIdentifier &getIRSI(getIRSI1169,50869
  const IRSimilarity::IRSimilarityIdentifier &getIRSI(getIRSI1170,50937
  void getAnalysisUsage(1175,51146
class IRSimilarityAnalysis 1182,51333
  typedef IRSimilarity::IRSimilarityIdentifier Result;1184,51419
  static AnalysisKey Key;1190,51585
class IRSimilarityAnalysisPrinterPass1194,51667
  raw_ostream &OS;OS1196,51767
  explicit IRSimilarityAnalysisPrinterPass(1199,51795
  static bool isRequired(1201,51930

/usr/include/llvm/Analysis/IVDescriptors.h,3174
#define LLVM_ANALYSIS_IVDESCRIPTORS_H14,556
enum class RecurKind 34,987
  None,35,1010
  Add,36,1045
  Mul,37,1079
  Or,38,1117
  And,39,1169
  Xor,40,1222
  SMin,41,1275
  SMax,42,1350
  UMin,43,1425
  UMax,44,1502
  FAdd,45,1579
  FMul,46,1611
  FMin,47,1647
  FMax,48,1710
  FMinimum,49,1773
  FMaximum,50,1825
  FMulAdd,51,1877
  IAnyOf,52,1948
  FAnyOf 54,2096
class RecurrenceDescriptor 71,2977
  RecurrenceDescriptor(75,3051
  class InstDesc 88,3760
    InstDesc(90,3789
    InstDesc(94,3982
    bool isRecurrence(98,4157
    bool needsExactFPMath(100,4213
    Instruction *getExactFPMathInst(getExactFPMathInst102,4287
    RecurKind getRecKind(104,4360
    Instruction *getPatternInst(getPatternInst106,4414
    bool IsRecurrence;110,4545
    Instruction *PatternLastInst;PatternLastInst113,4713
    RecurKind RecKind;115,4784
    Instruction *ExactFPMathInst;ExactFPMathInst117,4870
  RecurKind getRecurrenceKind(197,9278
  unsigned getOpcode(199,9334
  FastMathFlags getFastMathFlags(201,9407
  TrackingVH<Value> getRecurrenceStartValue(203,9465
  Instruction *getLoopExitInstr(getLoopExitInstr205,9541
  bool hasExactFPMath(209,9719
  Instruction *getExactFPMathInst(getExactFPMathInst212,9869
  static bool isIntMinMaxRecurrenceKind(221,10258
  static bool isFPMinMaxRecurrenceKind(227,10525
  static bool isMinMaxRecurrenceKind(233,10786
  static bool isAnyOfRecurrenceKind(239,11045
  Type *getRecurrenceType(getRecurrenceType245,11319
  const SmallPtrSet<SmallPtrSet249,11473
  const SmallPtrSet<Instruction *, 8> &getCastInsts(getCastInsts249,11473
  unsigned getMinWidthCastToRecurrenceTypeInBits(252,11620
  bool isSigned(257,11800
  bool isOrdered(260,11906
  SmallVector<SmallVector264,12110
  static bool isFMulAddIntrinsic(268,12324
  StoreInst *IntermediateStore IntermediateStore276,12721
  TrackingVH<Value> StartValue;281,12850
  Instruction *LoopExitInstr LoopExitInstr283,12941
  RecurKind Kind 285,13014
  FastMathFlags FMF;288,13196
  Instruction *ExactFPMathInst ExactFPMathInst290,13297
  Type *RecurrenceType RecurrenceType292,13372
  bool IsSigned 294,13472
  bool IsOrdered 298,13697
  SmallPtrSet<SmallPtrSet300,13781
  SmallPtrSet<Instruction *, 8> CastInsts;300,13781
  unsigned MinWidthCastToRecurrenceType;302,13871
class InductionDescriptor 306,13979
  enum InductionKind 309,14083
    IK_NoInduction,310,14106
    IK_IntInduction,311,14159
    IK_PtrInduction,312,14223
    IK_FpInduction 313,14282
  Value *getStartValue(getStartValue320,14451
  InductionKind getKind(321,14505
  const SCEV *getStep(getStep322,14552
  BinaryOperator *getInductionBinOp(getInductionBinOp323,14599
  Instruction *getExactFPMathInst(getExactFPMathInst359,16676
  Instruction::BinaryOps getInductionOpcode(367,16917
  const SmallVectorImpl<Instruction *> &getCastInsts(getCastInsts375,17254
  TrackingVH<Value> StartValue;386,17640
  InductionKind IK 388,17694
  const SCEV *Step Step390,17749
  BinaryOperator *InductionBinOp InductionBinOp392,17830
  SmallVector<SmallVector395,18012
  SmallVector<Instruction *, 2> RedundantCasts;395,18012

/usr/include/llvm/Analysis/InlineAdvisor.h,3457
#define LLVM_ANALYSIS_INLINEADVISOR_H10,410
enum class InliningAdvisorMode 43,1632
enum class InliningAdvisorMode : int { Default,43,1632
enum class InliningAdvisorMode : int { Default, Release,43,1632
enum class InliningAdvisorMode : int { Default, Release, Development 43,1632
enum class InlinePass 46,1748
  AlwaysInliner,47,1778
  CGSCCInliner,48,1795
  EarlyInliner,49,1811
  ModuleInliner,50,1827
  MLInliner,51,1844
  ReplayCGSCCInliner,52,1857
  ReplaySampleProfileInliner,53,1879
  SampleProfileInliner,54,1909
struct InlineContext 59,2054
  ThinOrFullLTOPhase LTOPhase;60,2077
  InlinePass Pass;62,2109
class InlineAdvice 75,2589
  virtual ~InlineAdvice(82,2837
  void recordUnsuccessfulInlining(99,3523
  void recordUnattemptedInlining(105,3707
  bool isInliningRecommended(111,3845
  const DebugLoc &getOriginalCallSiteDebugLoc(getOriginalCallSiteDebugLoc112,3916
  const BasicBlock *getOriginalCallSiteBasicBlock(getOriginalCallSiteBasicBlock113,3987
  virtual void recordInliningImpl(116,4075
  virtual void recordInliningWithCalleeDeletedImpl(117,4114
  virtual void recordUnsuccessfulInliningImpl(118,4170
  virtual void recordUnattemptedInliningImpl(119,4247
  InlineAdvisor *const Advisor;121,4298
  Function *const Caller;123,4372
  Function *const Callee;124,4398
  const DebugLoc DLoc;129,4599
  const BasicBlock *const Block;130,4622
  OptimizationRemarkEmitter &ORE;ORE131,4655
  const bool IsInliningRecommended;132,4689
  void markRecorded(135,4735
  bool Recorded 141,4886
class DefaultInlineAdvice 144,4915
  DefaultInlineAdvice(146,4973
  CallBase *const OriginalCB;158,5474
  std::optional<InlineCost> OIC;159,5504
  bool EmitRemarks;160,5537
class InlineAdvisor 164,5626
  virtual void onPassEntry(185,6700
  virtual void onPassExit(190,6988
  virtual void print(193,7084
  const char *getAnnotatedInlinePassName(getAnnotatedInlinePassName198,7279
  Module &M;M209,7732
  FunctionAnalysisManager &FAM;FAM210,7745
  const std::optional<InlineContext> IC;211,7777
  const std::string AnnotatedInlinePassName;212,7818
  std::unique_ptr<ImportedFunctionsInliningStatistics> ImportedFunctionsStats;213,7863
  enum class MandatoryInliningKind 215,7943
  enum class MandatoryInliningKind { NotMandatory,215,7943
  enum class MandatoryInliningKind { NotMandatory, Always,215,7943
  enum class MandatoryInliningKind { NotMandatory, Always, Never 215,7943
class DefaultInlineAdvisor 230,8573
  DefaultInlineAdvisor(232,8633
  InlineParams Params;239,8893
class PluginInlineAdvisorAnalysis287,10602
  static AnalysisKey Key;290,10706
  static bool HasBeenRegistered;291,10732
  typedef InlineAdvisor *(*AdvisorFactory)AdvisorFactory293,10766
  PluginInlineAdvisorAnalysis(298,11020
  struct Result 304,11235
    AdvisorFactory Factory;305,11253
  Result run(308,11287
  Result getResult(309,11361
  AdvisorFactory Factory;312,11414
class InlineAdvisorAnalysis 317,11591
  static AnalysisKey Key;319,11679
  struct Result 321,11742
    Result(322,11760
    bool invalidate(323,11830
    InlineAdvisor *getAdvisor(getAdvisor333,12351
    Module &M;M336,12427
    ModuleAnalysisManager &MAM;MAM337,12442
    std::unique_ptr<InlineAdvisor> Advisor;338,12474
  Result run(341,12524
class InlineAdvisorAnalysisPrinterPass345,12663
  raw_ostream &OS;OS347,12765
  explicit InlineAdvisorAnalysisPrinterPass(350,12793
  static bool isRequired(356,13079

/usr/include/llvm/Analysis/InlineCost.h,2037
#define LLVM_ANALYSIS_INLINECOST_H14,551
class CostBenefitPair 66,2147
  CostBenefitPair(68,2179
  const APInt &getCost(getCost70,2259
  const APInt &getBenefit(getBenefit72,2308
  APInt Cost;75,2372
  APInt Benefit;76,2386
class InlineCost 89,2948
  enum SentinelValues 90,2967
  enum SentinelValues { AlwaysInlineCost 90,2967
  enum SentinelValues { AlwaysInlineCost = INT_MIN, NeverInlineCost 90,2967
  int Cost 93,3101
  int Threshold 96,3185
  int StaticBonusApplied 99,3262
  const char *Reason Reason102,3343
  std::optional<CostBenefitPair> CostBenefit;105,3439
  InlineCost(108,3562
  static InlineCost get(119,3991
  getAlways(125,4279
  getNever(130,4476
  explicit operator bool(operator bool136,4714
  bool isAlways(138,4777
  bool isNever(139,4838
  bool isVariable(140,4897
  int getCost(144,5070
  int getThreshold(150,5236
  int getStaticBonusApplied(156,5397
  std::optional<CostBenefitPair> getCostBenefit(162,5607
  const char *getReason(getReason165,5729
  int getCostDelta(174,6069
class InlineResult 179,6233
  const char *Message Message180,6254
  InlineResult(181,6287
  static InlineResult success(184,6364
  static InlineResult failure(185,6411
  bool isSuccess(188,6500
  const char *getFailureReason(getFailureReason189,6556
struct InlineParams 205,7264
  int DefaultThreshold 207,7342
  std::optional<int> HintThreshold;210,7425
  std::optional<int> ColdThreshold;213,7503
  std::optional<int> OptSizeThreshold;216,7602
  std::optional<int> OptMinSizeThreshold;219,7707
  std::optional<int> HotCallSiteThreshold;222,7810
  std::optional<int> LocallyHotCallSiteThreshold;226,7947
  std::optional<int> ColdCallSiteThreshold;229,8059
  std::optional<bool> ComputeFullInlineCost;232,8177
  std::optional<bool> EnableDeferral;235,8279
  std::optional<bool> AllowRecursiveCall 238,8379
struct InlineCostAnnotationPrinterPass339,13549
  raw_ostream &OS;OS341,13643
  explicit InlineCostAnnotationPrinterPass(344,13671
  static bool isRequired(346,13811

/usr/include/llvm/Analysis/InlineModelFeatureMaps.h,892
#define LLVM_ANALYSIS_INLINEMODELFEATUREMAPS_H11,420
#define INLINE_COST_FEATURE_ITERATOR(23,734
enum class InlineCostFeatureIndex 67,4144
#define POPULATE_INDICES(68,4189
  INLINE_COST_FEATURE_ITERATOR(69,4245
  INLINE_COST_FEATURE_ITERATOR(POPULATE_INDICES)69,4245
#undef POPULATE_INDICES70,4294
  NumberOfFeatures72,4319
using InlineCostFeatures 76,4361
constexpr bool isHeuristicInlineCostFeature(80,4488
#define INLINE_FEATURE_ITERATOR(99,5549
enum class FeatureIndex 125,7459
#define POPULATE_INDICES(126,7494
  INLINE_COST_FEATURE_ITERATOR(128,7601
  INLINE_COST_FEATURE_ITERATOR(POPULATE_INDICES)128,7601
  INLINE_FEATURE_ITERATOR(131,7672
  INLINE_FEATURE_ITERATOR(POPULATE_INDICES)131,7672
#undef POPULATE_INDICES132,7716
  NumberOfFeatures134,7741
inlineCostFeatureToMlFeature(139,7806
constexpr size_t NumberOfFeatures 143,7938
using InlineFeatures 154,8294

/usr/include/llvm/Analysis/InlineSizeEstimatorAnalysis.h,478
#define LLVM_ANALYSIS_INLINESIZEESTIMATORANALYSIS_H11,425
class InlineSizeEstimatorAnalysis19,570
  InlineSizeEstimatorAnalysis(22,674
  InlineSizeEstimatorAnalysis(23,707
  ~InlineSizeEstimatorAnalysis(24,770
  static AnalysisKey Key;26,805
  std::unique_ptr<TFModelEvaluator> Evaluator;32,982
class InlineSizeEstimatorAnalysisPrinterPass35,1033
  raw_ostream &OS;OS37,1147
  explicit InlineSizeEstimatorAnalysisPrinterPass(40,1175
  static bool isRequired(44,1323

/usr/include/llvm/Analysis/InstSimplifyFolder.h,50
#define LLVM_ANALYSIS_INSTSIMPLIFYFOLDER_H20,894

/usr/include/llvm/Analysis/InstructionSimplify.h,52
#define LLVM_ANALYSIS_INSTRUCTIONSIMPLIFY_H32,1577

/usr/include/llvm/Analysis/IntervalIterator.h,850
#define LLVM_ANALYSIS_INTERVALITERATOR_H33,1672
inline Interval *getSourceGraphNode(getSourceGraphNode63,2586
inline void addNodeToInterval(71,2982
inline void addNodeToInterval(81,3487
  bool operator==(operator==128,5032
  bool operator!=(operator!=131,5124
  const Interval *operator*(operator*133,5202
  Interval *operator*(operator*134,5272
  const Interval *operator->(operator->135,5330
  Interval *operator->(operator->136,5391
  IntervalIterator &operator++(operator++138,5441
  IntervalIterator operator++(161,6399
using function_interval_iterator 241,9833
using interval_part_interval_iterator 242,9908
inline function_interval_iterator intervals_begin(245,10000
inline function_interval_iterator intervals_end(249,10193
   intervals_begin(254,10336
inline interval_part_interval_iterator intervals_end(258,10475

/usr/include/llvm/Analysis/LazyCallGraph.h,5844
#define LLVM_ANALYSIS_LAZYCALLGRAPH_H35,1698
class LazyCallGraph 110,5180
  class Edge 131,6111
    enum Kind 134,6175
    enum Kind : bool { Ref 134,6175
    enum Kind : bool { Ref = false, Call 134,6175
    Edge(136,6227
    explicit Edge(137,6239
    explicit operator bool(143,6432
    PointerIntPair<PointerIntPair167,7073
    PointerIntPair<Node *, 1, Kind> Value;167,7073
    void setKind(169,7117
  class EdgeSequence 182,7721
    class iterator192,8031
      VectorImplT::iterator E;198,8265
      iterator(201,8367
      iterator &operator++(operator++211,8627
    class call_iterator223,8950
      VectorImplT::iterator E;229,9194
      void advanceToNextEdge(232,9287
      call_iterator(238,9462
      call_iterator &operator++(operator++247,9716
    iterator begin(254,9832
    iterator end(255,9902
    Edge *lookup(lookup264,10179
    call_iterator call_begin(272,10379
    call_iterator call_end(275,10474
    iterator_range<call_iterator> calls(277,10556
    bool empty(281,10658
    VectorT Edges;290,10782
    DenseMap<DenseMap291,10801
    DenseMap<Node *, int> EdgeIndexMap;291,10801
  class Node 315,11769
    LazyCallGraph &getGraph(getGraph320,11867
    Function &getFunction(getFunction322,11919
    StringRef getName(324,11969
    bool operator==(operator==327,12074
    bool operator!=(operator!=328,12138
    bool isPopulated(331,12269
    bool isDead(338,12604
    EdgeSequence &operator*(operator*346,12890
    EdgeSequence *operator->(operator->350,13051
    EdgeSequence &populate(populate364,13700
    LazyCallGraph *G;G372,13819
    Function *F;F373,13841
    std::optional<EdgeSequence> Edges;381,14135
    Node(385,14267
    void clear(397,14713
    friend raw_ostream &operator<<(operator<<400,14798
    friend raw_ostream &operator<<(operator<<442,16375
  class RefSCC 544,20296
    LazyCallGraph *G;G548,20384
    SmallVector<SmallVector551,20451
    SmallVector<SCC *, 4> SCCs;551,20451
    SmallDenseMap<SmallDenseMap554,20539
    SmallDenseMap<SCC *, int, 4> SCCIndices;554,20539
    void clear(560,20740
    friend raw_ostream &operator<<(operator<<572,21146
    iterator begin(612,22378
    iterator end(613,22430
    ssize_t size(615,22479
    iterator find(619,22582
    bool isChildOf(640,23376
    bool isDescendantOf(647,23738
    std::string getName(655,24067
    SmallVector<SmallVector781,30314
    [[nodiscard]] SmallVector<SmallVector834,33364
  class postorder_ref_scc_iterator879,35428
    struct IsAtEndT 886,35738
    LazyCallGraph *G;G888,35763
    postorder_ref_scc_iterator(892,35857
    postorder_ref_scc_iterator(897,36058
    static RefSCC *getRC(getRC901,36251
    void incrementUntilNonEmptyRefSCC(910,36517
    void increment(915,36623
    bool operator==(operator==921,36782
    reference operator*(925,36897
    postorder_ref_scc_iterator &operator++(operator++928,36990
  EdgeSequence::iterator begin(949,37669
  EdgeSequence::iterator end(950,37733
  postorder_ref_scc_iterator postorder_ref_scc_begin(954,37818
  postorder_ref_scc_iterator postorder_ref_scc_end(960,38054
  iterator_range<postorder_ref_scc_iterator> postorder_ref_sccs(968,38367
  Node *lookup(lookup973,38594
  SCC *lookupSCC(lookupSCC979,38816
  RefSCC *lookupRefSCC(lookupRefSCC985,39034
  Node &get(get994,39270
  ArrayRef<Function *> getLibFunctions(1006,39579
  bool isLibFunction(1016,39971
  void insertEdge(1033,40670
  void removeEdge(1041,40953
  SpecificBumpPtrAllocator<Node> BPA;1118,44190
  DenseMap<DenseMap1121,44272
  DenseMap<const Function *, Node *> NodeMap;1121,44272
  EdgeSequence EntryEdges;1127,44466
  SpecificBumpPtrAllocator<SCC> SCCBPA;1130,44546
  DenseMap<DenseMap1133,44631
  DenseMap<Node *, SCC *> SCCMap;1133,44631
  SpecificBumpPtrAllocator<RefSCC> RefSCCBPA;1136,44721
  SmallVector<SmallVector1141,44883
  SmallVector<RefSCC *, 16> PostOrderRefSCCs;1141,44883
  DenseMap<DenseMap1145,45018
  DenseMap<RefSCC *, int> RefSCCIndices;1145,45018
  SmallSetVector<SmallSetVector1150,45227
  SmallSetVector<Function *, 4> LibFunctions;1150,45227
  template <typename... Ts> SCC *createSCC(createSCC1167,45844
  template <typename... Ts> RefSCC *createRefSCC(createRefSCC1174,46105
  template <typename RootsT,1189,46793
  template <typename RootsT, typename GetBeginT,1189,46793
  template <typename RootsT, typename GetBeginT, typename GetEndT,1189,46793
            typename GetNodeT,1190,46860
  int getRefSCCIndex(1202,47417
inline LazyCallGraph::Edge::Edge(1212,47760
inline LazyCallGraph::Edge::operator bool(operator bool1214,47829
inline LazyCallGraph::Edge::Kind LazyCallGraph::Edge::getKind(getKind1218,47946
inline bool LazyCallGraph::Edge::isCall(isCall1223,48089
inline LazyCallGraph::Node &LazyCallGraph::Edge::getNode(getNode1228,48213
inline Function &LazyCallGraph::Edge::getFunction(getFunction1233,48356
template <> struct GraphTraits<GraphTraits1239,48552
  using NodeRef 1240,48608
  using ChildIteratorType 1241,48649
  static NodeRef getEntryNode(1243,48717
  static ChildIteratorType child_begin(1244,48772
  static ChildIteratorType child_end(1245,48848
template <> struct GraphTraits<GraphTraits1247,48923
  using NodeRef 1248,48973
  using ChildIteratorType 1249,49014
  static NodeRef getEntryNode(1251,49082
  static ChildIteratorType child_begin(1252,49137
  static ChildIteratorType child_end(1253,49213
class LazyCallGraphAnalysis 1257,49354
  static AnalysisKey Key;1260,49486
  using Result 1264,49570
  LazyCallGraph run(1270,49779
class LazyCallGraphPrinterPass1283,50236
  raw_ostream &OS;OS1285,50322
  static bool isRequired(1292,50469
class LazyCallGraphDOTPrinterPass1298,50652
  raw_ostream &OS;OS1300,50744
  static bool isRequired(1307,50894

/usr/include/llvm/Analysis/LazyValueInfo.h,1436
#define LLVM_ANALYSIS_LAZYVALUEINFO_H15,587
  class LazyValueInfo 31,978
    LazyValueInfoImpl *getImpl(getImpl39,1260
    LazyValueInfoImpl &getOrCreateImpl(getOrCreateImpl40,1294
    ~LazyValueInfo(43,1362
    LazyValueInfo(45,1415
    LazyValueInfo(47,1508
    enum Tristate 61,1882
    enum Tristate { Unknown 61,1882
    enum Tristate { Unknown = -1, False 61,1882
    enum Tristate { Unknown = -1, False = 0, True 61,1882
    Tristate getPredicateOnEdge(68,2146
    Tristate getPredicateAt(76,2610
    Tristate getPredicateAt(84,3078
    Constant *getConstant(getConstant89,3344
    ConstantRange getConstantRange(94,3586
    ConstantRange getConstantRangeAtUse(99,3818
    Constant *getConstantOnEdge(getConstantOnEdge103,4017
    ConstantRange getConstantRangeOnEdge(109,4340
    void threadEdge(115,4675
    void forgetValue(119,4844
    void eraseBlock(122,4940
    void clear(125,5032
    void printLVI(130,5226
    void releaseMemory(133,5368
    bool invalidate(136,5455
class LazyValueAnalysis 141,5635
  typedef LazyValueInfo Result;143,5715
  Result run(144,5747
  static AnalysisKey Key;147,5814
class LazyValueInfoPrinterPass152,5950
  raw_ostream &OS;OS154,6036
  explicit LazyValueInfoPrinterPass(157,6064
  static bool isRequired(161,6198
class LazyValueInfoWrapperPass 165,6280
  static char ID;169,6473
  ~LazyValueInfoWrapperPass(171,6521
  LazyValueInfo Info;181,6795

/usr/include/llvm/Analysis/Loads.h,37
#define LLVM_ANALYSIS_LOADS_H14,554

/usr/include/llvm/Analysis/LoopAccessAnalysis.h,6620
#define LLVM_ANALYSIS_LOOPACCESSANALYSIS_H15,634
struct VectorizerParams 36,1134
  static const unsigned MaxVectorWidth;38,1186
  static unsigned VectorizationFactor;41,1263
  static unsigned VectorizationInterleave;43,1353
  static bool isInterleaveForced(45,1461
  static unsigned RuntimeMemoryCheckThreshold;49,1617
  static bool HoistRuntimeChecks;56,1993
class MemoryDepChecker 93,3716
  typedef PointerIntPair<Value Value95,3749
  typedef PointerIntPair<Value *, 1, bool> MemAccessInfo;95,3749
  typedef SmallVector<MemAccessInfo,MemAccessInfo96,3807
  typedef SmallVector<MemAccessInfo, 8> MemAccessInfoList;96,3807
  typedef EquivalenceClasses<MemAccessInfo> DepCandidates;98,3916
  enum class VectorizationSafetyStatus 103,4147
    Safe,106,4280
    PossiblySafeWithRtChecks,108,4369
    Unsafe,110,4457
  struct Dependence 114,4527
    enum DepType 116,4585
      NoDep,118,4628
      Unknown,120,4703
      IndirectUnsafe,125,5024
      Forward,136,5566
      ForwardButPreventsForwarding,139,5674
      Backward,141,5739
      BackwardVectorizable,144,5863
      BackwardVectorizableButPreventsForwarding146,5948
    static const char *DepName[DepName150,6041
    unsigned Source;153,6145
    unsigned Destination;155,6240
    DepType Type;157,6302
    Dependence(159,6321
  MemoryDepChecker(184,7309
  bool isSafeForVectorization(205,8149
  bool isSafeForAnyVectorWidth(211,8357
  uint64_t getMaxSafeVectorWidthInBits(217,8585
  bool shouldRetryWithRuntimeCheck(223,8801
  const SmallVectorImpl<Dependence> *getDependences(getDependences231,9125
  void clearDependences(235,9247
  const SmallVectorImpl<Instruction *> &getMemoryInstructions(getMemoryInstructions239,9427
  DenseMap<DenseMap245,9633
  DenseMap<Instruction *, unsigned> generateInstructionOrderMap(245,9633
  SmallVector<SmallVector255,9931
  ArrayRef<unsigned> getOrderForAccess(260,10233
  const Loop *getInnermostLoop(getInnermostLoop267,10423
  PredicatedScalarEvolution &PSE;PSE276,10935
  const Loop *InnermostLoop;InnermostLoop277,10969
  DenseMap<DenseMap280,11063
  DenseMap<MemAccessInfo, std::vector<unsigned> > Accesses;280,11063
  SmallVector<SmallVector283,11175
  SmallVector<Instruction *, 16> InstMap;283,11175
  unsigned AccessIdx 286,11285
  uint64_t MinDepDistBytes 291,11485
  uint64_t MaxSafeVectorWidthInBits 297,11764
  bool FoundNonConstantDistanceDependence 301,11926
  VectorizationSafetyStatus Status 306,12145
  bool RecordDependences 311,12360
  SmallVector<SmallVector315,12498
  SmallVector<Dependence, 8> Dependences;315,12498
struct RuntimeCheckingPtrGroup 351,14141
  const SCEV *High;High367,14964
  const SCEV *Low;Low370,15084
  SmallVector<SmallVector372,15168
  SmallVector<unsigned, 2> Members;372,15168
  unsigned AddressSpace;374,15250
  bool NeedsFreeze 377,15391
typedef std::pair<const RuntimeCheckingPtrGroup 381,15483
    RuntimePointerCheck;383,15585
struct PointerDiffInfo 385,15611
  const SCEV *SrcStart;SrcStart386,15636
  const SCEV *SinkStart;SinkStart387,15660
  unsigned AccessSize;388,15685
  bool NeedsFreeze;389,15708
  PointerDiffInfo(391,15729
class RuntimePointerChecking 399,16081
  struct PointerInfo 403,16162
    TrackingVH<Value> PointerValue;405,16240
    const SCEV *Start;Start408,16387
    const SCEV *End;End411,16528
    bool IsWritePtr;413,16626
    unsigned DependencySetId;416,16762
    unsigned AliasSetId;418,16870
    const SCEV *Expr;Expr420,16924
    bool NeedsFreeze;422,17022
    PointerInfo(424,17045
  RuntimePointerChecking(432,17460
  void reset(436,17613
  bool empty(452,18275
  const SmallVectorImpl<RuntimePointerCheck> &getChecks(getChecks461,18719
  std::optional<ArrayRef<PointerDiffInfo>> getDiffChecks(470,19193
  unsigned getNumberOfChecks(483,19653
  bool Need 494,20070
  SmallVector<SmallVector497,20156
  SmallVector<PointerInfo, 2> Pointers;497,20156
  SmallVector<SmallVector500,20257
  SmallVector<RuntimeCheckingPtrGroup, 2> CheckingGroups;500,20257
  const PointerInfo &getPointerInfo(getPointerInfo515,20886
  ScalarEvolution *getSE(getSE519,20981
  SmallVector<SmallVector530,21480
  MemoryDepChecker &DC;DC538,21890
  ScalarEvolution *SE;SE541,21970
  SmallVector<SmallVector545,22112
  SmallVector<RuntimePointerCheck, 4> Checks;545,22112
  bool CanUseDiffCheck 548,22222
  SmallVector<PointerDiffInfo> DiffChecks;552,22399
class LoopAccessInfo 576,23526
  bool canVectorizeMemory(583,23815
  bool hasConvergentOp(588,24061
  const RuntimePointerChecking *getRuntimePointerChecking(getRuntimePointerChecking590,24121
  unsigned getNumRuntimePointerChecks(596,24322
  unsigned getNumStores(608,24738
  unsigned getNumLoads(609,24792
  const OptimizationRemarkAnalysis *getReport(getReport613,24947
  const MemoryDepChecker &getDepChecker(getDepChecker617,25164
  SmallVector<SmallVector621,25322
  SmallVector<Instruction *, 4> getInstructionsForAccess(621,25322
  const DenseMap<DenseMap628,25637
  const DenseMap<Value *, const SCEV *> &getSymbolicStrides(getSymbolicStrides628,25637
  bool hasDependenceInvolvingLoopInvariantAddress(637,26019
  ArrayRef<StoreInst *> getStoresToInvariantAddresses(642,26195
  const PredicatedScalarEvolution &getPSE(getPSE651,26641
  std::unique_ptr<PredicatedScalarEvolution> PSE;681,27737
  std::unique_ptr<RuntimePointerChecking> PtrRtChecking;685,27935
  std::unique_ptr<MemoryDepChecker> DepChecker;689,28130
  Loop *TheLoop;TheLoop691,28179
  unsigned NumLoads 693,28197
  unsigned NumStores 694,28222
  bool CanVecMem 697,28288
  bool HasConvergentOp 698,28314
  bool HasDependenceInvolvingLoopInvariantAddress 701,28424
  SmallVector<StoreInst *> StoresToInvariantAddresses;704,28529
  std::unique_ptr<OptimizationRemarkAnalysis> Report;708,28688
  DenseMap<DenseMap712,28842
  DenseMap<Value *, const SCEV *> SymbolicStrides;712,28842
class LoopAccessInfoManager 779,32228
  DenseMap<DenseMap781,32275
  DenseMap<Loop *, std::unique_ptr<LoopAccessInfo>> LoopAccessInfoMap;781,32275
  ScalarEvolution &SE;SE784,32378
  AAResults &AA;AA785,32401
  DominatorTree &DT;DT786,32418
  LoopInfo &LI;LI787,32439
  const TargetLibraryInfo *TLI TLI788,32455
  LoopAccessInfoManager(791,32506
  void clear(797,32749
class LoopAccessAnalysis810,33277
  static AnalysisKey Key;813,33403
  typedef LoopAccessInfoManager Result;816,33438
inline Instruction *MemoryDepChecker::Dependence::getSource(getSource821,33539
inline Instruction *MemoryDepChecker::Dependence::getDestination(getDestination826,33704

/usr/include/llvm/Analysis/LoopCacheAnalysis.h,1654
#define LLVM_ANALYSIS_LOOPCACHEANALYSIS_H15,576
class IndexedReference 48,1417
  friend raw_ostream &operator<<(raw_ostream &OS, const IndexedReference &R)R49,1442
  IndexedReference(53,1606
  bool isValid(56,1717
  const SCEV *getBasePointer(getBasePointer57,1760
  size_t getNumSubscripts(58,1821
  const SCEV *getSubscript(getSubscript59,1885
  const SCEV *getFirstSubscript(getFirstSubscript63,2043
  const SCEV *getLastSubscript(getLastSubscript67,2188
  Instruction &StoreOrLoadInst;StoreOrLoadInst144,6035
  SmallVector<SmallVector150,6209
  SmallVector<const SCEV *, 3> Subscripts;150,6209
  SmallVector<SmallVector153,6299
  SmallVector<const SCEV *, 3> Sizes;153,6299
  ScalarEvolution &SE;SE155,6338
using ReferenceGroupTy 171,7117
using ReferenceGroupsTy 172,7193
class CacheCost 189,8317
  using LoopTripCountTy 191,8407
  using LoopCacheCostTy 192,8468
  static CacheCostTy constexpr InvalidCost 195,8541
  CacheCostTy getLoopCost(215,9643
  ArrayRef<LoopCacheCostTy> getLoopCosts(223,9912
  void sortLoopCosts(254,11488
  LoopVectorTy Loops;263,11751
  SmallVector<SmallVector266,11852
  SmallVector<LoopTripCountTy, 3> TripCounts;266,11852
  SmallVector<SmallVector269,11977
  SmallVector<LoopCacheCostTy, 3> LoopCosts;269,11977
  std::optional<unsigned> TRT;273,12155
  const LoopInfo &LI;LI275,12187
  ScalarEvolution &SE;SE276,12209
  TargetTransformInfo &TTI;TTI277,12232
  AAResults &AA;AA278,12260
  DependenceInfo &DI;DI279,12277
class LoopCachePrinterPass 286,12483
  raw_ostream &OS;OS287,12557
  explicit LoopCachePrinterPass(290,12585
  static bool isRequired(295,12779

/usr/include/llvm/Analysis/LoopInfo.h,2457
#define LLVM_ANALYSIS_LOOPINFO_H14,557
  class LocRange 47,1438
    DebugLoc Start;48,1457
    DebugLoc End;49,1477
    LocRange(53,1532
    LocRange(54,1591
    const DebugLoc &getStart(getStart57,1693
    const DebugLoc &getEnd(getEnd58,1748
    explicit operator bool(operator bool62,1832
  struct LoopBounds 157,5725
    Value &getInitialIVValue(getInitialIVValue169,6253
    Instruction &getStepInst(getStepInst172,6388
    Value *getStepValue(getStepValue176,6578
    Value &getFinalIVValue(getFinalIVValue179,6693
    enum class Direction 220,8582
    enum class Direction { Increasing,220,8582
    enum class Direction { Increasing, Decreasing,220,8582
    enum class Direction { Increasing, Decreasing, Unknown 220,8582
    LoopBounds(226,8732
    const Loop &L;L231,8954
    Value &InitialIVValue;InitialIVValue234,9030
    Instruction &StepInst;StepInst237,9122
    Value *StepValue;StepValue241,9246
    Value &FinalIVValue;FinalIVValue244,9323
    ScalarEvolution &SE;SE246,9349
class LoopInfo 407,15873
  typedef LoopInfoBase<BasicBlock,BasicBlock408,15930
  typedef LoopInfoBase<BasicBlock, Loop> BaseT;408,15930
  LoopInfo(419,16215
  LoopInfo &operator=(operator=420,16291
  bool replacementPreservesLCSSAForm(439,17065
  bool movementPreservesLCSSAForm(465,18199
template <> struct GraphTraits<GraphTraits547,21218
  typedef const Loop *NodeRef;NodeRef548,21265
  typedef LoopInfo::iterator ChildIteratorType;549,21296
  static NodeRef getEntryNode(551,21345
  static ChildIteratorType child_begin(552,21404
  static ChildIteratorType child_end(553,21477
template <> struct GraphTraits<GraphTraits556,21550
  typedef Loop *NodeRef;NodeRef557,21591
  typedef LoopInfo::iterator ChildIteratorType;558,21616
  static NodeRef getEntryNode(560,21665
  static ChildIteratorType child_begin(561,21718
  static ChildIteratorType child_end(562,21791
class LoopAnalysis 566,21927
  static AnalysisKey Key;568,22031
  typedef LoopInfo Result;571,22066
class LoopPrinterPass 577,22206
  raw_ostream &OS;OS578,22270
  explicit LoopPrinterPass(581,22298
  static bool isRequired(583,22421
struct LoopVerifierPass 587,22520
  static bool isRequired(589,22654
class LoopInfoWrapperPass 593,22775
  LoopInfo LI;594,22825
  static char ID;597,22849
  LoopInfo &getLoopInfo(getLoopInfo601,22941
  const LoopInfo &getLoopInfo(getLoopInfo602,22982
  void releaseMemory(609,23189

/usr/include/llvm/Analysis/LoopIterator.h,2238
#define LLVM_ANALYSIS_LOOPITERATOR_H24,1141
struct LoopBodyTraits 40,1723
  class WrappedSuccIterator45,1898
        WrappedSuccIterator, succ_iterator,51,2189
        typename std::iterator_traits<succ_iterator>::iterator_category,iterator_category52,2233
        NodeRef,53,2306
        NodeRef, std::ptrdiff_t,53,2306
        NodeRef, std::ptrdiff_t, NodeRef 53,2306
    const Loop *L;L55,2361
    WrappedSuccIterator(58,2391
    NodeRef operator*(61,2484
  struct LoopBodyFilter 64,2540
    bool operator()(operator()65,2566
  static NodeRef getEntryNode(74,2803
  static ChildIteratorType child_begin(76,2881
  static ChildIteratorType child_end(84,3211
class LoopBlocksDFS 97,3716
  typedef std::vector<BasicBlock*>::const_iterator POIterator;100,3778
  typedef std::vector<BasicBlock*>::const_reverse_iterator RPOIterator;101,3841
  Loop *L;L106,3960
  DenseMap<DenseMap111,4194
  DenseMap<BasicBlock*, unsigned> PostNumbers;111,4194
  std::vector<BasicBlock*> PostBlocks;112,4241
  LoopBlocksDFS(115,4289
  Loop *getLoop(getLoop120,4453
  bool isComplete(126,4658
  POIterator beginPostorder(129,4784
  POIterator endPostorder(133,4901
  RPOIterator beginRPO(136,5021
  RPOIterator endRPO(140,5134
  bool hasPreorder(143,5253
  bool hasPostorder(146,5385
  unsigned getPostorder(152,5598
  unsigned getRPO(160,5917
  void clear(164,6017
class LoopBlocksRPO 172,6246
  LoopBlocksDFS DFS;174,6277
  LoopBlocksRPO(177,6307
  void perform(180,6418
  LoopBlocksDFS::RPOIterator begin(185,6537
  LoopBlocksDFS::RPOIterator end(186,6607
  LoopBlocksTraversal &LBT;LBT191,6807
  po_iterator_storage(193,6843
class LoopBlocksTraversal 200,7120
  typedef po_iterator<BasicBlock*BasicBlock203,7188
  typedef po_iterator<BasicBlock*, LoopBlocksTraversal,203,7188
  typedef po_iterator<BasicBlock*, LoopBlocksTraversal, true> POTIterator;203,7188
  LoopBlocksDFS &DFS;DFS206,7273
  const LoopInfo *LI;LI207,7295
  LoopBlocksTraversal(210,7326
  POTIterator begin(216,7618
  POTIterator end(221,7860
  bool visitPreorder(231,8284
  void finishPostorder(240,8549
inline bool po_iterator_storage<LoopBlocksTraversal, true>::insertEdge(insertEdge247,8751
finishPostorder(253,8975

/usr/include/llvm/Analysis/LoopNestAnalysis.h,474
#define LLVM_ANALYSIS_LOOPNESTANALYSIS_H15,574
namespace llvm 21,732
  enum LoopNestEnum 187,6938
    PerfectLoopNest,188,6960
    ImperfectLoopNest,189,6981
    InvalidLoopStructure,190,7004
    OuterLoopLowerBoundUnknown191,7030
class LoopNestAnalysis 202,7498
  static AnalysisKey Key;204,7614
  using Result 207,7649
class LoopNestPrinterPass 212,7807
  raw_ostream &OS;OS213,7879
  explicit LoopNestPrinterPass(216,7907
  static bool isRequired(221,8100

/usr/include/llvm/Analysis/MLModelRunner.h,1058
#define LLVM_ANALYSIS_MLMODELRUNNER_H11,411
class MLModelRunner 26,1021
  template <typename T> T evaluate(33,1231
  template <typename T,37,1329
  template <typename T, typename I> T *getTensor(getTensor37,1329
  template <typename T,42,1491
  template <typename T, typename I> const T *getTensor(getTensor42,1491
  void *getTensorUntyped(getTensorUntyped47,1671
  const void *getTensorUntyped(getTensorUntyped48,1742
  enum class Kind 52,1873
  enum class Kind : int { Unknown,52,1873
  enum class Kind : int { Unknown, Release,52,1873
  enum class Kind : int { Unknown, Release, Development,52,1873
  enum class Kind : int { Unknown, Release, Development, NoOp,52,1873
  enum class Kind : int { Unknown, Release, Development, NoOp, Interactive 52,1873
  Kind getKind(53,1951
  virtual void switchContext(54,1991
  MLModelRunner(57,2051
  void setUpBufferForTensor(63,2247
  LLVMContext &Ctx;Ctx72,2530
  const Kind Type;73,2550
  std::vector<void *> InputBuffers;76,2579
  std::vector<std::vector<char *>> OwnedBuffers;77,2615

/usr/include/llvm/Analysis/MemDerefPrinter.h,205
#define LLVM_ANALYSIS_MEMDEREFPRINTER_H10,410
class MemDerefPrinterPass 15,502
  raw_ostream &OS;OS16,574
  MemDerefPrinterPass(19,602
  PreservedAnalyses run(20,653
  static bool isRequired(21,720

/usr/include/llvm/Analysis/MemoryBuiltins.h,2003
#define LLVM_ANALYSIS_MEMORYBUILTINS_H15,595
struct ObjectSizeOpts 139,5475
  enum class Mode 141,5576
    ExactSizeFromOffset,144,5713
    ExactUnderlyingSizeAndOffset,147,5840
    Min,150,5988
    Max,152,6074
template <typename T,193,8041
template <typename T, class C> struct SizeOffsetType 193,8041
  T Size;195,8104
  T Offset;196,8114
  SizeOffsetType(199,8157
  bool knownSize(201,8225
  bool knownOffset(202,8277
  bool anyKnown(203,8333
  bool bothKnown(204,8398
  bool operator==(operator==206,8465
  bool operator!=(operator!=209,8581
struct SizeOffsetAPInt 216,8766
  SizeOffsetAPInt(218,8870
  static bool known(220,8949
class ObjectSizeOffsetVisitor225,9154
  const DataLayout &DL;DL227,9253
  const TargetLibraryInfo *TLI;TLI228,9277
  ObjectSizeOpts Options;229,9309
  unsigned IntTyBits;230,9335
  APInt Zero;231,9357
  SmallDenseMap<SmallDenseMap232,9371
  SmallDenseMap<Instruction *, SizeOffsetAPInt, 8> SeenInsts;232,9371
  unsigned InstructionsVisited;233,9433
  static SizeOffsetAPInt unknown(237,9512
struct SizeOffsetValue 276,11198
  SizeOffsetValue(277,11273
  SizeOffsetValue(278,11331
  static bool known(281,11468
struct SizeOffsetWeakTrackingVH286,11617
  SizeOffsetWeakTrackingVH(288,11721
  SizeOffsetWeakTrackingVH(289,11788
  SizeOffsetWeakTrackingVH(291,11883
  static bool known(294,11987
class ObjectSizeOffsetEvaluator299,12189
  using BuilderTy 301,12292
  using WeakEvalType 302,12364
  using CacheMapTy 303,12413
  using PtrSetTy 304,12473
  const DataLayout &DL;DL306,12524
  const TargetLibraryInfo *TLI;TLI307,12548
  LLVMContext &Context;Context308,12580
  BuilderTy Builder;309,12604
  IntegerType *IntTy;IntTy310,12625
  Value *Zero;Zero311,12647
  CacheMapTy CacheMap;312,12662
  PtrSetTy SeenVals;313,12685
  ObjectSizeOpts EvalOpts;314,12706
  SmallPtrSet<SmallPtrSet315,12733
  SmallPtrSet<Instruction *, 8> InsertedInstructions;315,12733
  static SizeOffsetValue unknown(323,12997

/usr/include/llvm/Analysis/MemoryDependenceAnalysis.h,3924
#define LLVM_ANALYSIS_MEMORYDEPENDENCEANALYSIS_H14,571
class MemDepResult 37,1211
  enum DepType 38,1232
    Invalid 49,1781
    Clobber,60,2372
    Def,85,3927
    Other92,4152
  enum OtherType 97,4298
    NonLocal 102,4496
    NonFuncLocal,105,4612
    Unknown107,4698
      DepType, PointerSumTypeMember<Invalid,Invalid111,4750
      PointerSumTypeMember<Clobber,Clobber112,4811
      PointerSumTypeMember<Def,Def113,4863
      PointerSumTypeMember<Other,Other114,4911
      PointerSumTypeMember<Other, PointerEmbeddedInt<OtherType,OtherType114,4911
  ValueTy Value;115,4981
  explicit MemDepResult(117,4999
  static MemDepResult getDef(124,5182
  static MemDepResult getClobber(128,5330
  static MemDepResult getNonLocal(132,5490
  static MemDepResult getNonFuncLocal(135,5591
  static MemDepResult getUnknown(138,5700
  bool isClobber(144,5901
  bool isDef(148,6063
  bool isLocal(151,6192
  bool isNonLocal(155,6396
  bool isNonFuncLocal(161,6602
  bool isUnknown(167,6808
  Instruction *getInst(getInst173,7019
  bool operator==(operator==187,7332
  bool operator!=(operator!=188,7408
  bool operator<(189,7484
  bool operator>(190,7558
  bool isDirty(196,7750
  static MemDepResult getDirty(198,7806
class NonLocalDepEntry 206,8042
  BasicBlock *BB;BB207,8067
  MemDepResult Result;208,8085
  NonLocalDepEntry(211,8117
  NonLocalDepEntry(215,8240
  BasicBlock *getBB(getBB218,8334
  void setResult(220,8378
  const MemDepResult &getResult(getResult222,8435
  bool operator<(224,8495
class NonLocalDepResult 231,8774
  NonLocalDepEntry Entry;232,8800
  Value *Address;Address233,8826
  NonLocalDepResult(236,8853
  BasicBlock *getBB(getBB240,9020
  void setResult(242,9075
  const MemDepResult &getResult(getResult247,9179
  Value *getAddress(getAddress257,9672
class MemoryDependenceResults 272,10505
  using LocalDepMapType 274,10587
  LocalDepMapType LocalDeps;275,10652
  using NonLocalDepInfo 278,10690
  using ValueIsLoadPair 283,10879
  using BBSkipFirstBlockPair 290,11215
  struct NonLocalPointerInfo 293,11360
    BBSkipFirstBlockPair Pair;295,11452
    NonLocalDepInfo NonLocalDeps;297,11541
    AAMDNodes AATags;305,11898
  DenseMap<DenseMap313,12127
  DenseMap<AssertingVH<const Value>, NonLocalDepResult> NonLocalDefsCache;313,12127
  using ReverseNonLocalDefsCacheTy 314,12202
    DenseMap<Instruction *, SmallPtrSet<SmallPtrSet315,12239
  ReverseNonLocalDefsCacheTy ReverseNonLocalDefsCache;316,12298
  using CachedNonLocalPointerInfo 323,12564
  CachedNonLocalPointerInfo NonLocalPointerDeps;325,12654
  using ReverseNonLocalPtrDepTy 328,12774
      DenseMap<Instruction *, SmallPtrSet<SmallPtrSet329,12808
  ReverseNonLocalPtrDepTy ReverseNonLocalPtrDeps;330,12872
  using PerInstNLInfo 337,13140
  using NonLocalDepMapType 340,13261
  NonLocalDepMapType NonLocalDepsMap;342,13331
  using ReverseDepMapType 346,13503
      DenseMap<Instruction *, SmallPtrSet<SmallPtrSet347,13531
  ReverseDepMapType ReverseLocalDeps;348,13593
  ReverseDepMapType ReverseNonLocalDeps;351,13701
  AAResults &AA;AA354,13790
  AssumptionCache &AC;AC355,13807
  const TargetLibraryInfo &TLI;TLI356,13830
  DominatorTree &DT;DT357,13862
  PredIteratorCache PredCache;358,13883
  EarliestEscapeInfo EII;359,13914
  unsigned DefaultBlockScanLimit;361,13941
  using ClobberOffsetsMapType 364,14018
  ClobberOffsetsMapType ClobberOffsets;365,14081
  MemoryDependenceResults(368,14130
  std::optional<int32_t> getClobberOffset(480,19689
class MemoryDependenceAnalysis514,21277
  static AnalysisKey Key;518,21422
  unsigned DefaultBlockScanLimit;520,21449
  using Result 523,21492
  MemoryDependenceAnalysis(526,21565
class MemoryDependenceWrapperPass 533,21865
  std::optional<MemoryDependenceResults> MemDep;534,21923
  static char ID;537,21981
  MemoryDependenceResults &getMemDep(getMemDep551,22402

/usr/include/llvm/Analysis/MemoryLocation.h,2459
#define LLVM_ANALYSIS_MEMORYLOCATION_H16,691
class LocationSize 69,2502
  enum : uint64_t 70,2523
    BeforeOrAfterPointer 71,2543
    ScalableBit 72,2584
    AfterPointer 73,2621
    MapEmpty 74,2683
    MapTombstone 75,2724
    ImpreciseBit 76,2769
    MaxValue 79,2885
  uint64_t Value;82,2958
  enum DirectConstruction 86,3093
  enum DirectConstruction { Direct 86,3093
  constexpr LocationSize(88,3132
  constexpr LocationSize(89,3207
  static_assert(93,3386
  static_assert(95,3492
  static_assert(97,3614
  constexpr LocationSize(106,4006
  static LocationSize precise(109,4137
  static LocationSize precise(112,4241
  static LocationSize upperBound(116,4365
  static LocationSize upperBound(124,4665
  constexpr static LocationSize afterPointer(132,4914
  constexpr static LocationSize beforeOrAfterPointer(138,5115
  constexpr static LocationSize mapTombstone(143,5279
  constexpr static LocationSize mapEmpty(146,5379
  LocationSize unionWith(152,5561
  bool hasValue(166,6007
  bool isScalable(169,6104
  TypeSize getValue(171,6165
  bool isPrecise(180,6582
  bool isZero(183,6716
  bool mayBeBeforePointer(188,6867
  bool operator==(operator==190,6944
  bool operator!=(operator!=194,7035
  uint64_t toRaw(205,7494
inline raw_ostream &operator<<(operator<<208,7541
class MemoryLocation 222,8131
  enum : uint64_t 227,8365
  enum : uint64_t { UnknownSize 227,8365
  const Value *Ptr;Ptr230,8464
  LocationSize Size;239,8847
  AAMDNodes AATags;243,9011
  void print(245,9032
  static MemoryLocation get(254,9472
  static MemoryLocation getForArgument(275,10577
  static MemoryLocation getAfter(282,10894
  getBeforeOrAfter(290,11244
  static uint64_t getSizeOrUnknown(296,11526
  MemoryLocation(300,11648
  explicit MemoryLocation(302,11730
  MemoryLocation getWithNewPtr(306,11907
  MemoryLocation getWithNewSize(312,12044
  MemoryLocation getWithoutAATags(318,12185
  bool operator==(operator==324,12314
template <> struct DenseMapInfo<DenseMapInfo330,12482
  static inline LocationSize getEmptyKey(331,12530
  static inline LocationSize getTombstoneKey(332,12610
  static unsigned getHashValue(335,12704
  static bool isEqual(338,12828
template <> struct DenseMapInfo<DenseMapInfo343,12933
  static inline MemoryLocation getEmptyKey(344,12983
  static inline MemoryLocation getTombstoneKey(348,13174
  static unsigned getHashValue(352,13377
  static bool isEqual(357,13631

/usr/include/llvm/Analysis/MemorySSA.h,8174
#define LLVM_ANALYSIS_MEMORYSSA_H86,3586
struct AllAccessTag 124,4433
struct DefsOnlyTag 125,4457
enum : unsigned 129,4513
  INVALID_MEMORYACCESS_ID 132,4615
using memoryaccess_def_iterator 136,4708
using const_memoryaccess_def_iterator 137,4788
class MemoryAccess142,5001
  using AllAccessType 147,5208
  using DefsOnlyType 149,5302
  static bool classof(159,5616
  BasicBlock *getBlock(getBlock164,5771
  using iterator 170,5925
  using const_iterator 171,5959
  AllAccessType::self_iterator getIterator(183,6491
  AllAccessType::const_self_iterator getIterator(186,6589
  AllAccessType::reverse_self_iterator getReverseIterator(189,6699
  AllAccessType::const_reverse_self_iterator getReverseIterator(192,6819
  DefsOnlyType::self_iterator getDefsIterator(195,6951
  DefsOnlyType::const_self_iterator getDefsIterator(198,7051
  DefsOnlyType::reverse_self_iterator getReverseDefsIterator(201,7163
  DefsOnlyType::const_reverse_self_iterator getReverseDefsIterator(204,7285
  void setBlock(217,7653
  MemoryAccess(223,7874
  BasicBlock *Block;Block232,8198
struct ilist_alloc_traits<ilist_alloc_traits236,8235
  static void deleteNode(237,8277
inline raw_ostream &operator<<(operator<<240,8347
class MemoryUseOrDef 252,8814
  Instruction *getMemoryInst(getMemoryInst259,9021
  MemoryAccess *getDefiningAccess(getDefiningAccess262,9159
  static bool classof(264,9228
  MemoryUseOrDef(284,9912
  void setDefiningAccess(295,10310
  Instruction *MemoryInstruction;MemoryInstruction304,10485
  void *operator new(operator new321,11096
  void operator delete(operator delete322,11164
struct OperandTraits<OperandTraits360,12084
class MemoryDef 372,12685
  void *operator new(operator new385,13101
  void operator delete(operator delete386,13169
struct OperandTraits<OperandTraits422,13948
struct OperandTraits<OperandTraits426,14104
  static Use *op_begin(op_begin427,14143
  static Use *op_end(op_end433,14361
  static unsigned operands(439,14573
class MemoryPhi 479,15968
  void *operator new(operator new481,16060
  void operator delete(operator delete484,16134
inline unsigned MemoryAccess::getID(getID661,22302
inline bool MemoryUseOrDef::isOptimized(isOptimized669,22573
inline MemoryAccess *MemoryUseOrDef::getOptimized(getOptimized675,22753
inline void MemoryUseOrDef::setOptimized(setOptimized681,22945
inline void MemoryUseOrDef::resetOptimized(resetOptimized688,23131
template <> struct OperandTraits<OperandTraits695,23303
class MemorySSA 700,23531
  MemoryUseOrDef *getMemoryAccess(getMemoryAccess717,24087
  MemoryPhi *getMemoryAccess(getMemoryAccess721,24228
  DominatorTree &getDomTree(getDomTree725,24373
  inline bool isLiveOnEntryDef(737,24919
  inline MemoryAccess *getLiveOnEntryDef(getLiveOnEntryDef741,25026
  using AccessList 750,25442
  using DefsList 751,25523
  const AccessList *getBlockAccesses(getBlockAccesses757,25732
  const DefsList *getBlockDefs(getBlockDefs765,25982
  enum class VerificationLevel 781,26660
  enum class VerificationLevel { Fast,781,26660
  enum class VerificationLevel { Fast, Full 781,26660
  enum InsertionPlace 788,27055
  enum InsertionPlace { Beginning,788,27055
  enum InsertionPlace { Beginning, End,788,27055
  enum InsertionPlace { Beginning, End, BeforeTerminator 788,27055
  AliasAnalysis &getAA(getAA797,27484
  AccessList *getWritableBlockAccesses(getWritableBlockAccesses809,27891
  DefsList *getWritableBlockDefs(getWritableBlockDefs815,28128
  void renamePass(828,28729
  using AccessMap 855,29787
  using DefsMap 856,29866
  AliasAnalysis *AA AA872,30767
  DominatorTree *DT;DT873,30798
  Function &F;F874,30819
  DenseMap<DenseMap877,30860
  DenseMap<const Value *, MemoryAccess *> ValueToMemoryAccess;877,30860
  AccessMap PerBlockAccesses;885,31283
  DefsMap PerBlockDefs;886,31313
  std::unique_ptr<std::unique_ptr887,31337
  std::unique_ptr<MemoryAccess, ValueDeleter> LiveOnEntryDef;887,31337
  mutable SmallPtrSet<SmallPtrSet892,31511
  mutable SmallPtrSet<const BasicBlock *, 16> BlockNumberingValid;892,31511
  mutable DenseMap<DenseMap893,31578
  mutable DenseMap<const MemoryAccess *, unsigned long> BlockNumbering;893,31578
  std::unique_ptr<ClobberWalkerBase> WalkerBase;896,31681
  std::unique_ptr<CachingWalker> Walker;897,31730
  std::unique_ptr<SkipSelfWalker> SkipWalker;898,31771
  unsigned NextID 899,31817
  bool IsOptimized 900,31840
class MemorySSAUtil 911,32241
class MemorySSAAnalysis 923,32581
  static AnalysisKey Key;926,32701
  struct Result 932,32945
    Result(933,32963
    MemorySSA &getMSSA(getMSSA935,33037
    std::unique_ptr<MemorySSA> MSSA;937,33087
class MemorySSAPrinterPass 947,33352
  raw_ostream &OS;OS948,33426
  bool EnsureOptimizedUses;949,33445
  explicit MemorySSAPrinterPass(952,33482
  static bool isRequired(957,33686
class MemorySSAWalkerPrinterPass961,33784
  raw_ostream &OS;OS963,33874
  explicit MemorySSAWalkerPrinterPass(966,33902
  static bool isRequired(970,34038
struct MemorySSAVerifierPass 974,34122
  static bool isRequired(976,34259
class MemorySSAWrapperPass 980,34361
  static char ID;984,34447
  MemorySSA &getMSSA(getMSSA988,34542
  const MemorySSA &getMSSA(getMSSA989,34583
  std::unique_ptr<MemorySSA> MSSA;997,34820
class MemorySSAWalker 1011,35600
  using MemoryAccessSet 1016,35705
  MemoryAccess *getClobberingMemoryAccess(getClobberingMemoryAccess1040,36613
  MemoryAccess *getClobberingMemoryAccess(getClobberingMemoryAccess1067,38133
  MemoryAccess *getClobberingMemoryAccess(getClobberingMemoryAccess1072,38289
  MemoryAccess *getClobberingMemoryAccess(getClobberingMemoryAccess1077,38442
  virtual void invalidateInfo(1088,38957
  MemorySSA *MSSA;MSSA1093,39133
using MemoryAccessPair 1111,39850
using ConstMemoryAccessPair 1112,39918
class memoryaccess_def_iterator_base1117,40139
  using BaseT 1121,40366
  memoryaccess_def_iterator_base(1124,40454
  bool operator==(operator==1127,40563
  BasicBlock *getPhiArgBlock(getPhiArgBlock1137,41123
  typename std::iterator_traits<BaseT>::pointer operator*(1143,41334
  memoryaccess_def_iterator_base &operator++(operator++1153,41761
  T *Access Access1167,42095
  unsigned ArgNo 1168,42118
inline memoryaccess_def_iterator MemoryAccess::defs_begin(defs_begin1171,42144
inline const_memoryaccess_def_iterator MemoryAccess::defs_begin(defs_begin1175,42251
inline memoryaccess_def_iterator MemoryAccess::defs_end(defs_end1179,42376
inline const_memoryaccess_def_iterator MemoryAccess::defs_end(defs_end1183,42477
template <> struct GraphTraits<GraphTraits1189,42703
  using NodeRef 1190,42752
  using ChildIteratorType 1191,42786
  static NodeRef getEntryNode(1193,42842
  static ChildIteratorType child_begin(1194,42897
  static ChildIteratorType child_end(1195,42975
template <> struct GraphTraits<GraphTraits1198,43053
  using NodeRef 1199,43111
  using ChildIteratorType 1200,43145
  static NodeRef getEntryNode(1202,43198
  static ChildIteratorType child_begin(1203,43253
  static ChildIteratorType child_end(1204,43331
class upward_defs_iterator1215,43884
  using BaseT 1219,44088
  upward_defs_iterator(1222,44157
  upward_defs_iterator(1231,44453
  bool operator==(operator==1233,44512
  typename std::iterator_traits<BaseT>::reference operator*(1237,44623
  upward_defs_iterator &operator++(operator++1244,44865
  BasicBlock *getPhiArgBlock(getPhiArgBlock1253,45140
  void fillInCurrentPair(1261,45510
  MemoryAccessPair CurrentPair;1286,46629
  memoryaccess_def_iterator DefIterator;1287,46661
  MemoryLocation Location;1288,46702
  MemoryAccess *OriginalAccess OriginalAccess1289,46729
  DominatorTree *DT DT1290,46771
  bool WalkingPhi 1291,46802
upward_defs_begin(1295,46861
inline upward_defs_iterator upward_defs_end(1299,46975
upward_defs(1302,47101
template <class T, bool UseOptimizedChain 1319,48012
  T operator*(1326,48324
  def_chain_iterator &operator++(operator++1328,48362
  bool operator==(operator==1342,48701
def_chain(1350,48863
inline iterator_range<def_chain_iterator<T, true>> optimized_def_chain(1359,49159

/usr/include/llvm/Analysis/MemorySSAUpdater.h,474
#define LLVM_ANALYSIS_MEMORYSSAUPDATER_H32,1358
class MemorySSAUpdater 54,1969
  MemorySSA *MSSA;MSSA56,2003
  SmallVector<SmallVector60,2187
  SmallVector<WeakVH, 16> InsertedPHIs;60,2187
  SmallPtrSet<SmallPtrSet62,2228
  SmallPtrSet<BasicBlock *, 8> VisitedBlocks;62,2228
  SmallSet<SmallSet63,2274
  SmallSet<AssertingVH<MemoryPhi>, 8> NonOptPhis;63,2274
  MemorySSAUpdater(66,2333
  void removeMemoryAccess(219,10763
  MemorySSA* getMemorySSA(239,11754

/usr/include/llvm/Analysis/ModelUnderTrainingRunner.h,56
#define LLVM_ANALYSIS_MODELUNDERTRAININGRUNNER_H11,422

/usr/include/llvm/Analysis/ModuleDebugInfoPrinter.h,267
#define LLVM_ANALYSIS_MODULEDEBUGINFOPRINTER_H10,417
class ModuleDebugInfoPrinterPass18,567
  DebugInfoFinder Finder;20,657
  raw_ostream &OS;OS21,683
  explicit ModuleDebugInfoPrinterPass(24,711
  PreservedAnalyses run(25,767
  static bool isRequired(26,830

/usr/include/llvm/Analysis/MustExecute.h,3442
#define LLVM_ANALYSIS_MUSTEXECUTE_H24,1152
class LoopSafetyInfo 60,2626
  DenseMap<DenseMap62,2694
  DenseMap<BasicBlock *, ColorVector> BlockColors;62,2694
  const DenseMap<DenseMap70,2922
class SimpleLoopSafetyInfo:SimpleLoopSafetyInfo110,4752
  bool MayThrow 111,4804
  bool HeaderMayThrow 113,4930
class ICFLoopSafetyInfo:ICFLoopSafetyInfo132,5702
  bool MayThrow 133,5751
  mutable ImplicitControlFlowTracking ICF;136,5954
  mutable MemoryWriteTracking MW;138,6073
enum class ExplorationDirection 177,7601
  BACKWARD 178,7635
  FORWARD 179,7651
struct MustBeExecutedIterator 272,10375
  typedef const Instruction *value_type;value_type275,10477
  typedef std::ptrdiff_t difference_type;276,10518
  typedef const Instruction **pointer;pointer277,10560
  typedef const Instruction *&reference;reference278,10599
  typedef std::input_iterator_tag iterator_category;279,10640
  using ExplorerTy 282,10701
  MustBeExecutedIterator(286,10828
  MustBeExecutedIterator &operator=(operator=290,11025
  MustBeExecutedIterator &operator++(operator++304,11390
  MustBeExecutedIterator operator++(309,11479
  bool operator==(operator==318,11693
  bool operator!=(operator!=322,11842
  const Instruction *&operator*(operator*328,11988
  const Instruction *getCurrentInst(getCurrentInst329,12042
  bool count(332,12175
  using VisitedSetTy 338,12359
  VisitedSetTy Visited;358,13094
  ExplorerTy &Explorer;Explorer361,13181
  const Instruction *CurInst;CurInst366,13401
  const Instruction *Head,Head371,13636
  const Instruction *Head, *Tail;Tail371,13636
struct MustBeExecutedContextExplorer 386,14364
      GetterTy<const DominatorTree> DTGetter 405,15437
      GetterTy<const PostDominatorTree> PDTGetter 407,15536
      : ExploreInterBlock(409,15640
        ExploreCFGForward(410,15686
        ExploreCFGBackward(411,15732
        ExploreCFGBackward(ExploreCFGBackward), LIGetter(411,15732
        DTGetter(412,15800
        DTGetter(DTGetter), PDTGetter(412,15800
  using iterator 416,15950
  using const_iterator 417,15993
  iterator &begin(begin420,16111
  const_iterator &begin(begin428,16341
  iterator &end(end434,16501
  iterator &end(end435,16543
  const_iterator &end(end437,16605
  const_iterator &end(end438,16659
  llvm::iterator_range<iterator> range(442,16808
  llvm::iterator_range<const_iterator> range(447,17001
  bool checkForAllContext(456,17301
  bool findInContextOf(470,17757
  bool findInContextOf(481,18136
  const bool ExploreInterBlock;516,19747
  const bool ExploreCFGForward;517,19779
  const bool ExploreCFGBackward;518,19811
  GetterTy<const LoopInfo> LIGetter;525,19961
  GetterTy<const DominatorTree> DTGetter;526,19998
  GetterTy<const PostDominatorTree> PDTGetter;527,20040
  DenseMap<DenseMap531,20166
  DenseMap<const BasicBlock *, std::optional<bool>> BlockTransferMap;531,20166
  DenseMap<DenseMap534,20288
  DenseMap<const Function *, std::optional<bool>> IrreducibleControlMap;534,20288
  DenseMap<DenseMap537,20432
      InstructionIteratorMap;538,20505
  MustBeExecutedIterator EndIterator;541,20565
class MustExecutePrinterPass 544,20607
  raw_ostream &OS;OS545,20685
  MustExecutePrinterPass(548,20713
  static bool isRequired(550,20834
class MustBeExecutedContextPrinterPass553,20882
  raw_ostream &OS;OS555,20984
  MustBeExecutedContextPrinterPass(558,21012
  static bool isRequired(560,21139

/usr/include/llvm/Analysis/ObjCARCAnalysisUtils.h,1013
#define LLVM_ANALYSIS_OBJCARCANALYSISUTILS_H23,1061
inline const Value *GetUnderlyingObjCPtr(GetUnderlyingObjCPtr69,2735
inline const Value *GetUnderlyingObjCPtrCached(GetUnderlyingObjCPtrCached81,3033
inline const Value *GetRCIdentityRoot(GetRCIdentityRoot110,4201
inline Value *GetRCIdentityRoot(GetRCIdentityRoot124,4663
inline Value *GetArgRCIdentityRoot(GetArgRCIdentityRoot131,4941
inline bool IsNullOrUndef(135,5062
inline bool IsNoopInstruction(139,5169
inline bool IsPotentialRetainableObjPtr(146,5421
inline ARCInstKind GetCallSiteClass(173,6498
inline bool IsObjCIdentifiedObject(186,6991
enum class ARCMDKindID 221,8277
  ImpreciseRelease,222,8302
  CopyOnEscape,223,8322
  NoObjCARCExceptions,224,8338
class ARCMDKindCache 228,8423
  Module *M;M229,8446
  std::optional<unsigned> ImpreciseReleaseMDKind;232,8522
  std::optional<unsigned> CopyOnEscapeMDKind;235,8636
  std::optional<unsigned> NoObjCARCExceptionsMDKind;238,8754
  void init(241,8816
  unsigned get(248,8989

/usr/include/llvm/Analysis/Passes.h,38
#define LLVM_ANALYSIS_PASSES_H15,599

/usr/include/llvm/Analysis/PhiValues.h,1084
#define LLVM_ANALYSIS_PHIVALUES_H20,940
class PhiValues 40,1412
  PhiValues(45,1522
  const ValueSet &getValuesForPhi(getValuesForPhi51,1724
  void invalidateValue(59,2169
  void releaseMemory(62,2252
  void print(65,2328
  DenseMap<DenseMap79,2818
  DenseMap<const PHINode *, unsigned int> DepthMap;79,2818
  DenseMap<DenseMap82,2923
  DenseMap<unsigned int, ValueSet> NonPhiReachableMap;82,2923
  DenseMap<DenseMap85,3027
  DenseMap<unsigned int, ConstValueSet> ReachableMap;85,3027
  DenseSet<DenseSet101,3608
  DenseSet<PhiValuesCallbackVH, DenseMapInfo<Value *>> TrackedValues;101,3608
  const Function &F;F104,3725
class PhiValuesAnalysis 115,4100
  static AnalysisKey Key;117,4219
  using Result 120,4254
class PhiValuesPrinterPass 129,4606
  raw_ostream &OS;OS130,4680
  explicit PhiValuesPrinterPass(133,4708
  static bool isRequired(135,4836
class PhiValuesWrapperPass 139,4929
  std::unique_ptr<PhiValues> Result;140,4980
  static char ID;143,5026
  PhiValues &getResult(getResult146,5071
  const PhiValues &getResult(getResult147,5116

/usr/include/llvm/Analysis/PostDominators.h,856
#define LLVM_ANALYSIS_POSTDOMINATORS_H14,559
class PostDominatorTree 28,901
  explicit PostDominatorTree(33,1050
  bool invalidate(35,1150
  using Base::dominates;39,1316
class PostDominatorTreeAnalysis47,1604
  static AnalysisKey Key;51,1752
  using Result 55,1841
class PostDominatorTreePrinterPass63,2086
  raw_ostream &OS;OS65,2180
  static bool isRequired(72,2335
struct PostDominatorTreeWrapperPass 75,2383
  static char ID;76,2443
  PostDominatorTree DT;78,2509
  PostDominatorTree &getPostDomTree(getPostDomTree82,2569
  const PostDominatorTree &getPostDomTree(getPostDomTree83,2622
  void getAnalysisUsage(89,2774
  void releaseMemory(93,2865
template <> struct GraphTraits<GraphTraits100,3015
  static NodeRef getEntryNode(102,3105
  static nodes_iterator nodes_begin(106,3195
  static nodes_iterator nodes_end(110,3298

/usr/include/llvm/Analysis/ProfileSummaryInfo.h,2691
#define LLVM_ANALYSIS_PROFILESUMMARYINFO_H15,583
class ProfileSummaryInfo 42,1511
  const Module *M;M44,1547
  std::unique_ptr<ProfileSummary> Summary;45,1566
  std::optional<uint64_t> HotCountThreshold,48,1705
  std::optional<uint64_t> HotCountThreshold, ColdCountThreshold;48,1705
  std::optional<bool> HasHugeWorkingSetSize;52,1947
  std::optional<bool> HasLargeWorkingSetSize;56,2171
  mutable DenseMap<DenseMap61,2485
  mutable DenseMap<int, uint64_t> ThresholdCache;61,2485
  ProfileSummaryInfo(64,2544
  bool hasProfileSummary(71,2787
  bool hasSampleProfile(74,2906
  bool hasInstrumentationProfile(80,3103
  bool hasCSInstrumentationProfile(86,3326
  bool invalidate(97,3772
  template <typename FuncT> bool isFunctionEntryHot(115,4709
  template <typename FuncT,126,5229
  bool isFunctionHotInCallGraph(127,5272
  template <typename FuncT,146,5889
  bool isFunctionColdInCallGraph(147,5932
  template <typename FuncT,167,6616
  bool isFunctionHotInCallGraphNthPercentile(168,6659
  template <typename FuncT,175,7025
  bool isFunctionColdInCallGraphNthPercentile(176,7068
  template <typename BBType,197,8258
  bool isHotBlock(198,8302
  template <typename BBType,204,8509
  bool isColdBlock(205,8553
  bool isColdBlock(211,8730
  template <typename BBType,216,8904
  bool isHotBlockNthPercentile(217,8948
  bool isHotBlockNthPercentile(224,9251
  template <typename BBType,234,9804
  bool isColdBlockNthPercentile(235,9848
  bool isColdBlockNthPercentile(241,10154
  uint64_t getHotCountThreshold(257,11006
  uint64_t getColdCountThreshold(261,11135
  std::optional<uint64_t> getTotalCallCount(267,11263
  template <bool isHot,271,11361
  template <bool isHot, typename FuncT,271,11361
  bool isFunctionHotOrColdInCallGraphNthPercentile(272,11416
  template <bool isHot,304,12645
  template <bool isHot, typename BBType,304,12645
  bool isHotOrColdBlockNthPercentile(305,12701
  template <bool isHot,314,13058
  bool isHotOrColdBlockNthPercentile(315,13097
  std::optional<Function::ProfileCount> getEntryCount(326,13537
ProfileSummaryInfo::getTotalCallCount<getTotalCallCount333,13697
class ProfileSummaryInfoWrapperPass 354,14506
  std::unique_ptr<ProfileSummaryInfo> PSI;355,14567
  static char ID;358,14619
  ProfileSummaryInfo &getPSI(getPSI361,14673
  const ProfileSummaryInfo &getPSI(getPSI362,14721
  void getAnalysisUsage(366,14870
class ProfileSummaryAnalysis372,15036
  typedef ProfileSummaryInfo Result;375,15130
  static AnalysisKey Key;381,15280
class ProfileSummaryPrinterPass385,15364
  raw_ostream &OS;OS387,15452
  explicit ProfileSummaryPrinterPass(390,15480
  static bool isRequired(392,15609

/usr/include/llvm/Analysis/RegionInfo.h,5345
#define LLVM_ANALYSIS_REGIONINFO_H37,2042
struct RegionTraits 75,3032
struct RegionTraits<RegionTraits85,3199
  using FuncT 86,3231
  using BlockT 87,3257
  using RegionT 88,3286
  using RegionNodeT 89,3312
  using RegionInfoT 90,3346
  using DomTreeT 91,3380
  using DomTreeNodeT 92,3414
  using DomFrontierT 93,3450
  using PostDomTreeT 94,3492
  using InstT 95,3534
  using LoopT 96,3563
  using LoopInfoT 97,3585
  static unsigned getNumSuccessors(99,3616
class FlatIt 112,4154
class RegionNodeBase 117,4278
  using BlockT 121,4341
  using RegionT 122,4379
  PointerIntPair<PointerIntPair135,4967
  PointerIntPair<BlockT *, 1, bool> entry;135,4967
  RegionT *parent;parent139,5078
  inline RegionNodeBase(150,5560
  inline RegionT *getParent(getParent166,6232
  inline BlockT *getEntry(getEntry174,6555
  inline bool isSubRegion(188,7067
class RegionBase 254,9497
  using FuncT 257,9580
  using BlockT 258,9616
  using RegionInfoT 259,9654
  using RegionT 260,9702
  using RegionNodeT 261,9742
  using DomTreeT 262,9790
  using LoopT 263,9832
  using LoopInfoT 264,9868
  using InstT 265,9912
  using BlockTraits 267,9949
  using InvBlockTraits 268,9994
  using SuccIterTy 269,10051
  using PredIterTy 270,10113
  RegionInfoT *RI;RI273,10229
  DomTreeT *DT;DT274,10248
  BlockT *exit;exit278,10356
  using RegionSet 280,10373
  RegionSet children;283,10469
  using BBNodeMapT 285,10492
  mutable BBNodeMapT BBNodeMap;288,10634
  BlockT *getEntry(getEntry322,11928
  BlockT *getExit(getExit359,13208
  RegionT *getParent(getParent364,13380
  RegionNodeT *getNode(getNode370,13580
  bool isTopLevelRegion(385,13984
  RegionInfoT *getRegionInfo(getRegionInfo426,15465
  enum PrintStyle 429,15570
  enum PrintStyle { PrintNone,429,15570
  enum PrintStyle { PrintNone, PrintBB,429,15570
  enum PrintStyle { PrintNone, PrintBB, PrintRN 429,15570
  bool contains(454,16518
  bool contains(469,16996
  using iterator 557,20637
  using const_iterator 558,20686
  iterator begin(560,20748
  iterator end(561,20796
  const_iterator begin(563,20841
  const_iterator end(564,20901
  class block_iterator_wrapper574,21268
        df_iterator<std::conditional_t<IsConst, const BlockT,578,21412
    block_iterator_wrapper(585,21636
    block_iterator_wrapper(594,21988
    /*implicit*/ block_iterator_wrapper(596,22068
    BlockT *operator*(operator*601,22339
  using block_iterator 606,22438
  using const_block_iterator 607,22494
  block_iterator block_begin(609,22556
  block_iterator block_end(611,22638
  const_block_iterator block_begin(613,22697
  const_block_iterator block_end(616,22802
  using block_range 618,22879
  using const_block_range 619,22933
  inline block_range blocks(622,23062
  inline const_block_range blocks(629,23272
  using element_iterator 640,23652
      df_iterator<RegionNodeT *, df_iterator_default_set<df_iterator_default_set641,23679
      df_iterator<RegionNodeT *, df_iterator_default_set<RegionNodeT *>, false,641,23679
  using const_element_iterator 644,23807
                  df_iterator_default_set<df_iterator_default_set646,23879
                  df_iterator_default_set<const RegionNodeT *>, false,646,23879
  iterator_range<element_iterator> elements(651,24074
  iterator_range<const_element_iterator> elements(657,24276
class RegionInfoBase 674,24854
  using BlockT 678,24939
  using FuncT 679,24977
  using RegionT 680,25013
  using RegionInfoT 681,25053
  using DomTreeT 682,25101
  using DomTreeNodeT 683,25143
  using PostDomTreeT 684,25193
  using DomFrontierT 685,25243
  using BlockTraits 686,25293
  using InvBlockTraits 687,25338
  using SuccIterTy 688,25395
  using PredIterTy 689,25457
  using BBtoBBMap 691,25523
  using BBtoRegionMap 692,25573
  RegionInfoBase(696,25650
  RegionInfoBase &operator=(operator=703,25886
  DomTreeT *DT;DT715,26189
  PostDomTreeT *PDT;PDT716,26205
  DomFrontierT *DF;DF717,26226
  RegionT *TopLevelRegion TopLevelRegion720,26275
  BBtoRegionMap BBtoRegion;723,26374
  void updateRegionTree(731,26658
  void wipe(744,27055
  static bool VerifyRegionInfo;802,29157
  static typename RegionT::PrintStyle printStyle;803,29189
  RegionT *getCommonRegion(getCommonRegion850,30717
  RegionT *getTopLevelRegion(getTopLevelRegion866,31353
  void clearNodeCache(871,31504
class RegionNode 879,31634
  inline RegionNode(881,31709
  bool operator==(operator==884,31869
class Region 889,31983
  bool operator==(operator==895,32181
class RegionInfo 900,32299
  using Base 902,32374
  RegionInfo(906,32456
  RegionInfo &operator=(operator=910,32583
class RegionInfoPass 942,33545
  RegionInfo RI;943,33590
  static char ID;946,33616
  RegionInfo &getRegionInfo(getRegionInfo951,33695
  const RegionInfo &getRegionInfo(getRegionInfo953,33741
class RegionInfoAnalysis 967,34176
  static AnalysisKey Key;970,34299
  using Result 973,34334
class RegionInfoPrinterPass 979,34468
  raw_ostream &OS;OS980,34544
  static bool isRequired(987,34692
struct RegionInfoVerifierPass 991,34781
  static bool isRequired(993,34920
RegionNodeBase<RegionTraits<Function>>::getNodeAs<getNodeAs999,35012
RegionNodeBase<RegionTraits<Function>>::getNodeAs<getNodeAs1007,35216
inline raw_ostream &operator<<(operator<<1014,35496

/usr/include/llvm/Analysis/RegionInfoImpl.h,4015
#define LLVM_ANALYSIS_REGIONINFOIMPL_H12,561
#define DEBUG_TYPE 34,1161
void RegionBase<Tr>::replaceEntry(replaceEntry55,1830
void RegionBase<Tr>::replaceExit(replaceExit60,1931
void RegionBase<Tr>::replaceEntryRecursive(replaceEntryRecursive66,2055
void RegionBase<Tr>::replaceExitRecursive(replaceExitRecursive84,2542
bool RegionBase<Tr>::contains(contains102,3021
bool RegionBase<Tr>::contains(contains119,3393
typename Tr::LoopT *RegionBase<Tr>::outermostLoopInRegion(outermostLoopInRegion141,3939
typename Tr::LoopT *RegionBase<Tr>::outermostLoopInRegion(outermostLoopInRegion153,4170
typename RegionBase<Tr>::BlockT *RegionBase<Tr>::getEnteringBlock(getEnteringBlock161,4463
bool RegionBase<Tr>::getExitingBlocks(getExitingBlocks171,4897
typename RegionBase<Tr>::BlockT *RegionBase<Tr>::getExitingBlock(getExitingBlock191,5259
bool RegionBase<Tr>::isSimple(isSimple205,5718
std::string RegionBase<Tr>::getNameStr(getNameStr210,5854
void RegionBase<Tr>::verifyBBInRegion(verifyBBInRegion235,6451
void RegionBase<Tr>::verifyWalk(verifyWalk259,7305
void RegionBase<Tr>::verifyRegion(verifyRegion273,7641
void RegionBase<Tr>::verifyRegionNest(verifyRegionNest285,8025
typename RegionBase<Tr>::element_iterator RegionBase<Tr>::element_begin(element_begin293,8192
typename RegionBase<Tr>::element_iterator RegionBase<Tr>::element_end(element_end298,8367
RegionBase<Tr>::element_begin(element_begin304,8586
RegionBase<Tr>::element_end(element_end311,8792
typename Tr::RegionT *RegionBase<Tr>::getSubRegionNode(getSubRegionNode317,8946
typename Tr::RegionNodeT *RegionBase<Tr>::getBBNode(getBBNode338,9442
typename Tr::RegionNodeT *RegionBase<Tr>::getNode(getNode354,9962
void RegionBase<Tr>::transferChildrenTo(transferChildrenTo363,10219
void RegionBase<Tr>::addSubRegion(addSubRegion372,10429
typename Tr::RegionT *RegionBase<Tr>::removeSubRegion(removeSubRegion415,11777
unsigned RegionBase<Tr>::getDepth(getDepth428,12267
typename Tr::RegionT *RegionBase<Tr>::getExpandedRegion(getExpandedRegion438,12454
void RegionBase<Tr>::print(print467,13270
void RegionBase<Tr>::dump(dump503,14222
void RegionBase<Tr>::clearNodeCache(clearNodeCache509,14355
RegionInfoBase<Tr>::~RegionInfoBase(~RegionInfoBase523,14695
void RegionInfoBase<Tr>::verifyBBMap(verifyBBMap528,14777
bool RegionInfoBase<Tr>::isCommonDomFrontier(isCommonDomFrontier543,15272
bool RegionInfoBase<Tr>::isRegion(isRegion554,15593
void RegionInfoBase<Tr>::insertShortCut(insertShortCut594,16657
RegionInfoBase<Tr>::getNextPostDom(getNextPostDom614,17308
bool RegionInfoBase<Tr>::isTrivialRegion(isTrivialRegion624,17578
typename Tr::RegionT *RegionInfoBase<Tr>::createRegion(createRegion637,17950
void RegionInfoBase<Tr>::findRegionsWithEntry(findRegionsWithEntry655,18436
void RegionInfoBase<Tr>::scanForRegions(scanForRegions696,19465
typename Tr::RegionT *RegionInfoBase<Tr>::getTopMostParent(getTopMostParent711,20059
void RegionInfoBase<Tr>::buildRegionsTree(buildRegionsTree719,20242
bool RegionInfoBase<Tr>::VerifyRegionInfo VerifyRegionInfo745,20972
bool RegionInfoBase<Tr>::VerifyRegionInfo VerifyRegionInfo748,21048
typename Tr::RegionT::PrintStyle RegionInfoBase<Tr>::printStyle printStyle752,21127
void RegionInfoBase<Tr>::print(print756,21245
void RegionInfoBase<Tr>::dump(dump764,21479
template <class Tr> void RegionInfoBase<Tr>::releaseMemory(releaseMemory767,21544
void RegionInfoBase<Tr>::verifyAnalysis(verifyAnalysis776,21737
typename Tr::RegionT *RegionInfoBase<Tr>::getRegionFor(getRegionFor789,22074
void RegionInfoBase<Tr>::setRegionFor(setRegionFor794,22204
RegionInfoBase<Tr>::getMaxRegionExit(getMaxRegionExit805,22474
typename Tr::RegionT *RegionInfoBase<Tr>::getCommonRegion(getCommonRegion844,23519
RegionInfoBase<Tr>::getCommonRegion(getCommonRegion859,23864
RegionInfoBase<Tr>::getCommonRegion(getCommonRegion870,24112
void RegionInfoBase<Tr>::calculate(calculate881,24363
#undef DEBUG_TYPE896,24849

/usr/include/llvm/Analysis/ScalarEvolution.h,10004
#define LLVM_ANALYSIS_SCALAREVOLUTION_H21,940
  friend 76,2262
  FoldingSetNodeIDRef FastID;80,2429
  const SCEVTypes SCEVType;83,2509
  const unsigned short ExpressionSize;87,2612
  enum NoWrapFlags 130,4826
    FlagAnyWrap 131,4847
    FlagNW 132,4888
    FlagNUW 133,4929
    FlagNSW 134,4974
    NoWrapMask 135,5017
  explicit SCEV(138,5053
  SCEVTypes getSCEVType(144,5310
  Type *getType(getType147,5416
  void print(179,6715
struct SCEVCouldNotCompute 209,7739
  SCEVCouldNotCompute(210,7782
  static bool classof(213,7880
class SCEVPredicate 218,8028
  FoldingSetNodeIDRef FastID;223,8250
  enum SCEVPredicateKind 226,8289
  enum SCEVPredicateKind { P_Union,226,8289
  enum SCEVPredicateKind { P_Union, P_Compare,226,8289
  enum SCEVPredicateKind { P_Union, P_Compare, P_Wrap 226,8289
  SCEVPredicateKind Kind;229,8358
  SCEVPredicateKind getKind(237,8606
  virtual unsigned getComplexity(241,8793
inline raw_ostream &operator<<(operator<<255,9313
struct FoldingSetTrait<FoldingSetTrait263,9544
  static void Profile(264,9624
  static bool Equals(268,9718
  static unsigned ComputeHash(273,9889
  enum IncrementWrapFlags 345,13031
    IncrementAnyWrap 346,13059
    IncrementNUSW 347,13106
    IncrementNSSW 348,13179
    IncrementNoWrapMask 350,13310
class SCEVUnionPredicate final : public SCEVPredicate 416,15979
class ScalarEvolution 452,17202
  enum LoopDisposition 457,17341
    LoopVariant,458,17366
    LoopInvariant,459,17426
    LoopComputable 460,17478
  enum BlockDisposition 464,17627
    DoesNotDominateBlock,465,17653
    DominatesBlock,466,17723
    ProperlyDominatesBlock 467,17785
  [[nodiscard]] static SCEV::NoWrapFlags maskFlags(472,17982
  [[nodiscard]] static SCEV::NoWrapFlags setFlags(476,18171
  clearFlags(481,18419
  [[nodiscard]] static bool hasFlags(484,18542
  LLVMContext &getContext(getContext494,18924
  const SCEV *getAddExpr(getAddExpr584,23215
  const SCEV *getAddExpr(getAddExpr590,23488
  const SCEV *getMulExpr(getMulExpr599,23960
  const SCEV *getMulExpr(getMulExpr605,24233
  const SCEV *getAddRecExpr(getAddRecExpr618,24988
  std::optional<std::optional628,25555
  const SCEV *getZero(getZero657,27075
  const SCEV *getOne(getOne660,27198
  const SCEV *getPowerOfTwo(getPowerOfTwo663,27315
  const SCEV *getMinusOne(getMinusOne669,27578
  enum ExitCountKind 860,37380
    Exact,863,37521
    ConstantMaximum,865,37606
    SymbolicMaximum,867,37704
  const SCEV *getConstantMaxBackedgeTakenCount(getConstantMaxBackedgeTakenCount902,39749
  const SCEV *getSymbolicMaxBackedgeTakenCount(getSymbolicMaxBackedgeTakenCount910,40137
  ConstantRange getUnsignedRange(978,43179
  APInt getUnsignedRangeMin(983,43351
  APInt getUnsignedRangeMax(988,43535
  ConstantRange getSignedRange(994,43780
  APInt getSignedRangeMin(999,43946
  APInt getSignedRangeMax(1004,44122
  std::pair<std::pair1039,45772
  struct ExitLimit 1095,48918
    const SCEV *ExactNotTaken;ExactNotTaken1096,48939
    const SCEV *ConstantMaxNotTaken;ConstantMaxNotTaken1097,49019
    const SCEV *SymbolicMaxNotTaken;SymbolicMaxNotTaken1099,49145
    SmallPtrSet<SmallPtrSet1107,49447
    SmallPtrSet<const SCEVPredicate *, 4> Predicates;1107,49447
    void addPredicate(1109,49502
    bool hasAnyInfo(1131,50477
    bool hasFullInfo(1137,50694
  enum MonotonicPredicateType 1161,51918
    MonotonicallyIncreasing,1162,51950
    MonotonicallyDecreasing1163,51979
  struct LoopInvariantPredicate 1175,52449
    ICmpInst::Predicate Pred;1176,52483
    const SCEV *LHS;LHS1177,52513
    const SCEV *RHS;RHS1178,52534
    LoopInvariantPredicate(1180,52556
  const DataLayout &getDataLayout(getDataLayout1260,56469
  bool loopHasNoAbnormalExits(1303,58552
  class FoldID 1324,59515
    unsigned short C;1327,59592
    FoldID(1330,59625
    FoldID(1335,59749
    unsigned computeHash(1337,59789
    bool operator==(operator==1343,60014
  Function &F;F1366,60612
  bool HasGuards;1371,60824
  TargetLibraryInfo &TLI;TLI1374,60913
  AssumptionCache &AC;AC1377,61005
  DominatorTree &DT;DT1380,61055
  LoopInfo &LI;LI1383,61149
  std::unique_ptr<SCEVCouldNotCompute> CouldNotCompute;1386,61235
  using HasRecMapType 1389,61322
  HasRecMapType HasRecMap;1392,61451
  using ValueSetVector 1395,61512
  using ExprValueMapType 1396,61565
  ExprValueMapType ExprValueMap;1400,61742
  using ValueExprMapType 1403,61809
      DenseMap<SCEVCallbackVH, const SCEV 1404,61836
  ValueExprMapType ValueExprMap;1407,61967
  DenseMap<DenseMap1411,62091
  DenseMap<FoldID, const SCEV *> FoldCache;1411,62091
  DenseMap<DenseMap1412,62135
  DenseMap<const SCEV *, SmallVector<FoldID, 2>> FoldCacheUser;1412,62135
  SmallPtrSet<SmallPtrSet1415,62272
  SmallPtrSet<const Value *, 6> PendingLoopPredicates;1415,62272
  SmallPtrSet<SmallPtrSet1418,62398
  SmallPtrSet<const PHINode *, 6> PendingPhiRanges;1418,62398
  SmallPtrSet<SmallPtrSet1421,62525
  SmallPtrSet<const PHINode *, 6> PendingPhiRangesIter;1421,62525
  SmallPtrSet<SmallPtrSet1424,62657
  SmallPtrSet<const PHINode *, 6> PendingMerges;1424,62657
  bool WalkingBEDominatingConds 1428,62838
  bool ProvingSplitPredicate 1432,63029
  DenseMap<DenseMap1435,63118
  DenseMap<const SCEV *, APInt> ConstantMultipleCache;1435,63118
  struct ExitNotTakenInfo 1445,63517
    PoisoningVH<BasicBlock> ExitingBlock;1446,63545
    const SCEV *ExactNotTaken;ExactNotTaken1447,63587
    const SCEV *ConstantMaxNotTaken;ConstantMaxNotTaken1448,63618
    const SCEV *SymbolicMaxNotTaken;SymbolicMaxNotTaken1449,63655
    SmallPtrSet<SmallPtrSet1450,63692
    SmallPtrSet<const SCEVPredicate *, 4> Predicates;1450,63692
    explicit ExitNotTakenInfo(1452,63747
    bool hasAlwaysTruePredicate(1460,64189
  class BackedgeTakenInfo 1468,64408
    SmallVector<SmallVector1473,64598
    SmallVector<ExitNotTakenInfo, 1> ExitNotTaken;1473,64598
    bool isComplete(1491,65357
    const SCEV *getConstantMax(getConstantMax1492,65408
    bool hasAnyInfo(1507,66046
    bool hasFullInfo(1513,66254
  DenseMap<DenseMap1564,68858
  DenseMap<const Loop *, BackedgeTakenInfo> BackedgeTakenCounts;1564,68858
  DenseMap<DenseMap1568,69031
  DenseMap<const Loop *, BackedgeTakenInfo> PredicatedBackedgeTakenCounts;1568,69031
  DenseMap<DenseMap1571,69184
      BECountUsers;1572,69264
  DenseMap<DenseMap1578,69574
  DenseMap<PHINode *, Constant *> ConstantEvolutionLoopExitValue;1578,69574
  DenseMap<DenseMap1583,69809
      ValuesAtScopes;1584,69889
  DenseMap<DenseMap1588,70030
      ValuesAtScopesUsers;1589,70110
  DenseMap<DenseMap1592,70185
      LoopDispositions;1594,70287
  struct LoopProperties 1596,70312
    bool HasNoAbnormalExits;1602,70708
    bool HasNoSideEffects;1606,70890
  DenseMap<DenseMap1610,70961
  DenseMap<const Loop *, LoopProperties> LoopPropertiesCache;1610,70961
  bool loopHasNoSideEffects(1615,71155
  DenseMap<DenseMap1623,71415
      BlockDispositions;1626,71526
  DenseMap<DenseMap1632,71741
  DenseMap<const SCEV *, SmallPtrSet<const SCEV *, 8> > SCEVUsers;1632,71741
  DenseMap<DenseMap1635,71846
  DenseMap<const SCEV *, ConstantRange> UnsignedRanges;1635,71846
  DenseMap<DenseMap1638,71940
  DenseMap<const SCEV *, ConstantRange> SignedRanges;1638,71940
  enum RangeSignHint 1641,72031
  enum RangeSignHint { HINT_RANGE_UNSIGNED,1641,72031
  enum RangeSignHint { HINT_RANGE_UNSIGNED, HINT_RANGE_SIGNED 1641,72031
  const ConstantRange &setRange(setRange1644,72146
  class ExitLimitCache 1771,78334
    SmallDenseMap<SmallDenseMap1777,78725
    SmallDenseMap<PointerIntPair<Value *, 1>, ExitLimit> TripCountMap;1777,78725
    const Loop *L;L1779,78797
    bool ExitIfTrue;1780,78816
    bool AllowPredicates;1781,78837
    ExitLimitCache(1784,78874
  using ExitLimitCacheTy 1796,79392
  std::pair<std::pair1891,84594
  std::optional<std::optional2147,97756
  FoldingSet<SCEV> UniqueSCEVs;2211,100853
  FoldingSet<SCEVPredicate> UniquePreds;2212,100885
  BumpPtrAllocator SCEVAllocator;2213,100926
  DenseMap<DenseMap2216,101033
  DenseMap<const Loop *, SmallVector<const SCEVAddRecExpr *, 4>> LoopUsers;2216,101033
  DenseMap<DenseMap2220,101250
      PredicatedSCEVRewrites;2222,101382
  SmallPtrSet<SmallPtrSet2226,101503
  SmallPtrSet<const SCEVAddRecExpr *, 16> UnsignedWrapViaInductionTried;2226,101503
  SmallPtrSet<SmallPtrSet2230,101667
  SmallPtrSet<const SCEVAddRecExpr *, 16> SignedWrapViaInductionTried;2230,101667
  SCEVUnknown *FirstUnknown FirstUnknown2235,101912
class ScalarEvolutionAnalysis2239,102025
  static AnalysisKey Key;2243,102167
  using Result 2246,102202
class ScalarEvolutionVerifierPass2252,102368
  static bool isRequired(2256,102535
class ScalarEvolutionPrinterPass2260,102644
  raw_ostream &OS;OS2262,102734
  explicit ScalarEvolutionPrinterPass(2265,102762
  static bool isRequired(2269,102898
class ScalarEvolutionWrapperPass 2272,102946
  std::unique_ptr<ScalarEvolution> SE;2273,103003
  static char ID;2276,103051
  ScalarEvolution &getSE(getSE2280,103103
  const ScalarEvolution &getSE(getSE2281,103146
class PredicatedScalarEvolution 2303,104164
  ScalarEvolution *getSE(getSE2335,105431
  using RewriteEntry 2356,106303
  DenseMap<DenseMap2363,106676
  DenseMap<const SCEV *, RewriteEntry> RewriteMap;2363,106676
  ValueMap<ValueMap2366,106786
  ValueMap<Value *, SCEVWrapPredicate::IncrementWrapFlags> FlagsMap;2366,106786
  ScalarEvolution &SE;SE2369,106892
  const Loop &L;L2372,106941
  std::unique_ptr<SCEVUnionPredicate> Preds;2376,107080
  unsigned Generation 2382,107406
  const SCEV *BackedgeCount BackedgeCount2385,107466
template <> struct DenseMapInfo<DenseMapInfo2388,107509
  static inline ScalarEvolution::FoldID getEmptyKey(2389,107568
  static inline ScalarEvolution::FoldID getTombstoneKey(2393,107678
  static unsigned getHashValue(2398,107793
  static bool isEqual(2402,107897

/usr/include/llvm/Analysis/ScalarEvolutionExpressions.h,6629
#define LLVM_ANALYSIS_SCALAREVOLUTIONEXPRESSIONS_H14,589
enum SCEVTypes 37,1085
  scConstant,40,1216
  scVScale,41,1230
  scTruncate,42,1242
  scZeroExtend,43,1256
  scSignExtend,44,1272
  scAddExpr,45,1288
  scMulExpr,46,1301
  scUDivExpr,47,1314
  scAddRecExpr,48,1328
  scUMaxExpr,49,1344
  scSMaxExpr,50,1358
  scUMinExpr,51,1372
  scSMinExpr,52,1386
  scSequentialUMinExpr,53,1400
  scPtrToInt,54,1424
  scUnknown,55,1438
  scCouldNotCompute56,1451
class SCEVConstant 60,1527
  ConstantInt *V;V63,1595
  SCEVConstant(65,1614
  ConstantInt *getValue(getValue69,1725
  const APInt &getAPInt(getAPInt70,1771
  Type *getType(getType72,1839
  static bool classof(75,1961
class SCEVVScale 80,2194
  SCEVVScale(83,2260
  Type *Ty;Ty86,2355
  Type *getType(getType89,2376
  static bool classof(92,2488
inline unsigned short computeExpressionSize(95,2570
class SCEVCastExpr 103,2869
  const SCEV *Op;Op105,2915
  Type *Ty;Ty106,2933
  const SCEV *getOperand(getOperand112,3060
  const SCEV *getOperand(getOperand113,3108
  ArrayRef<const SCEV *> operands(117,3225
  size_t getNumOperands(118,3282
  Type *getType(getType119,3328
  static bool classof(122,3440
class SCEVPtrToIntExpr 130,3733
  static bool classof(137,3971
class SCEVIntegralCastExpr 141,4124
  static bool classof(148,4388
class SCEVTruncateExpr 156,4652
  static bool classof(163,4897
class SCEVZeroExtendExpr 168,5080
  static bool classof(175,5329
class SCEVSignExtendExpr 182,5520
  static bool classof(189,5769
class SCEVNAryExpr 196,5947
  const SCEV *const *Operands;Operands202,6260
  size_t NumOperands;203,6291
  SCEVNAryExpr(205,6314
  size_t getNumOperands(211,6532
  const SCEV *getOperand(getOperand213,6589
  ArrayRef<const SCEV *> operands(218,6725
  NoWrapFlags getNoWrapFlags(222,6818
  bool hasNoUnsignedWrap(226,6938
  bool hasNoSignedWrap(230,7029
  bool hasNoSelfWrap(234,7118
  static bool classof(237,7270
class SCEVCommutativeExpr 247,7717
  SCEVCommutativeExpr(249,7778
  static bool classof(255,8020
  void setNoWrapFlags(262,8373
class SCEVAddExpr 266,8507
  Type *Ty;Ty269,8589
  SCEVAddExpr(271,8602
  Type *getType(getType283,9007
  static bool classof(286,9119
class SCEVMulExpr 290,9267
  SCEVMulExpr(293,9349
  Type *getType(getType297,9486
  static bool classof(300,9620
class SCEVUDivExpr 304,9767
  std::array<std::array307,9835
  std::array<const SCEV *, 2> Operands;307,9835
  SCEVUDivExpr(309,9876
  const SCEV *getLHS(getLHS316,10080
  const SCEV *getRHS(getRHS317,10133
  size_t getNumOperands(318,10186
  const SCEV *getOperand(getOperand319,10232
  ArrayRef<const SCEV *> operands(324,10388
  Type *getType(getType326,10452
  static bool classof(336,10955
class SCEVAddRecExpr 347,11415
  const Loop *L;L350,11493
  SCEVAddRecExpr(352,11511
  Type *getType(getType357,11685
  const SCEV *getStart(getStart358,11743
  const Loop *getLoop(getLoop359,11798
  const SCEV *getStepRecurrence(getStepRecurrence365,12093
  bool isAffine(375,12438
  bool isQuadratic(384,12802
  void setNoWrapFlags(389,13061
  static bool classof(418,14463
class SCEVMinMaxExpr 424,14607
  static bool isMinMaxType(427,14692
  SCEVMinMaxExpr(434,14919
  Type *getType(getType443,15206
  static bool classof(445,15268
  static enum SCEVTypes negate(447,15349
class SCEVSMaxExpr 464,15737
  SCEVSMaxExpr(467,15815
  static bool classof(472,16021
class SCEVUMaxExpr 476,16162
  SCEVUMaxExpr(479,16240
  static bool classof(484,16446
class SCEVSMinExpr 488,16584
  SCEVSMinExpr(491,16662
  static bool classof(496,16868
class SCEVUMinExpr 500,17009
  SCEVUMinExpr(503,17087
  static bool classof(508,17293
class SCEVSequentialMinMaxExpr 516,17700
  static bool isSequentialMinMaxType(519,17788
  void setNoWrapFlags(524,17964
  SCEVSequentialMinMaxExpr(528,18112
  Type *getType(getType537,18422
  static SCEVTypes getEquivalentNonSequentialSCEVType(539,18484
  SCEVTypes getEquivalentNonSequentialSCEVType(549,18750
  static bool classof(553,18874
class SCEVSequentialUMinExpr 559,19050
  SCEVSequentialUMinExpr(562,19148
  static bool classof(568,19409
class SCEVUnknown final : public SCEV,576,19676
template <typename SC,607,20739
template <typename SC, typename RetVal 607,20739
template <typename SV> class SCEVTraversal 661,22890
  SV &Visitor;Visitor662,22935
  SmallVector<SmallVector663,22950
  SmallVector<const SCEV *, 8> Worklist;663,22950
  SmallPtrSet<SmallPtrSet664,22991
  SmallPtrSet<const SCEV *, 8> Visited;664,22991
  void push(666,23032
  SCEVTraversal(672,23158
  void visitAll(674,23198
template <typename SV> void visitAll(712,24171
bool SCEVExprContains(719,24395
  struct FindClosure 720,24450
    PredTy Pred;722,24497
    FindClosure(724,24515
    bool follow(726,24561
    bool isDone(734,24683
class SCEVRewriteVisitor 746,24992
  ScalarEvolution &SE;SE748,25069
  SmallDenseMap<SmallDenseMap754,25436
  SmallDenseMap<const SCEV *, const SCEV *> RewriteResults;754,25436
  SCEVRewriteVisitor(757,25505
  const SCEV *visit(visit759,25560
  const SCEV *visitConstant(visitConstant769,25911
  const SCEV *visitVScale(visitVScale771,25991
  const SCEV *visitPtrToIntExpr(visitPtrToIntExpr773,26063
  const SCEV *visitTruncateExpr(visitTruncateExpr780,26325
  const SCEV *visitZeroExtendExpr(visitZeroExtendExpr787,26587
  const SCEV *visitSignExtendExpr(visitSignExtendExpr794,26855
  const SCEV *visitAddExpr(visitAddExpr801,27123
  const SCEV *visitMulExpr(visitMulExpr811,27448
  const SCEV *visitUDivExpr(visitUDivExpr821,27773
  const SCEV *visitAddRecExpr(visitAddRecExpr828,28062
  const SCEV *visitSMaxExpr(visitSMaxExpr840,28496
  const SCEV *visitUMaxExpr(visitUMaxExpr850,28824
  const SCEV *visitSMinExpr(visitSMinExpr860,29152
  const SCEV *visitUMinExpr(visitUMinExpr870,29480
  const SCEV *visitSequentialUMinExpr(visitSequentialUMinExpr880,29808
  const SCEV *visitUnknown(visitUnknown890,30177
  const SCEV *visitCouldNotCompute(visitCouldNotCompute892,30247
using ValueToValueMap 897,30342
using ValueToSCEVMapTy 898,30400
class SCEVParameterRewriter 902,30609
  static const SCEV *rewrite(rewrite904,30698
  SCEVParameterRewriter(910,30903
  const SCEV *visitUnknown(visitUnknown913,31012
  ValueToSCEVMapTy &Map;Map921,31186
using LoopToScevMapT 924,31215
class SCEVLoopAddRecRewriter928,31403
  SCEVLoopAddRecRewriter(931,31498
  static const SCEV *rewrite(rewrite934,31606
  const SCEV *visitAddRecExpr(visitAddRecExpr940,31810
  LoopToScevMapT &Map;Map953,32212

/usr/include/llvm/Analysis/SimplifyQuery.h,852
#define LLVM_ANALYSIS_SIMPLIFYQUERY_H10,408
struct InstrInfoQuery 24,807
  InstrInfoQuery(25,831
  MDNode *getMetadata(getMetadata29,940
  template <class InstT> bool hasNoUnsignedWrap(35,1093
  template <class InstT> bool hasNoSignedWrap(41,1249
  bool isExact(47,1401
  template <class InstT> bool hasNoSignedZeros(53,1586
struct SimplifyQuery 60,1743
  const DataLayout &DL;DL61,1766
  const TargetLibraryInfo *TLI TLI62,1790
  const DominatorTree *DT DT63,1832
  AssumptionCache *AC AC64,1869
  const Instruction *CxtI CxtI65,1902
  const DomConditionCache *DC DC66,1939
  const InstrInfoQuery IIQ;71,2157
  bool CanUseUndef 76,2419
  SimplifyQuery(78,2447
  SimplifyQuery(81,2551
  SimplifyQuery(89,2992
  SimplifyQuery getWithInstruction(96,3320
  SimplifyQuery getWithoutUndef(101,3456
  bool isUndefValue(109,3679

/usr/include/llvm/Analysis/StackLifetime.h,1755
#define LLVM_ANALYSIS_STACKLIFETIME_H10,408
class StackLifetime 37,1240
  struct BlockLifetimeInfo 41,1435
    explicit BlockLifetimeInfo(42,1464
    BitVector Begin;46,1624
    BitVector End;49,1692
    BitVector LiveIn;52,1785
    BitVector LiveOut;55,1884
  class LiveRange 63,2049
    BitVector Bits;64,2069
                                   const StackLifetime::LiveRange &R)R66,2141
    LiveRange(69,2223
    void addRange(70,2291
    bool overlaps(72,2366
    void join(76,2464
    bool test(78,2527
  enum class LivenessType 83,2712
    May,84,2740
    Must,85,2780
  const Function &F;F89,2837
  LivenessType Type;90,2858
  LivenessMap BlockLiveness;94,3007
  SmallVector<SmallVector98,3145
  SmallVector<const IntrinsicInst *, 64> Instructions;98,3145
  DenseMap<DenseMap102,3339
  DenseMap<const BasicBlock *, std::pair<unsigned, unsigned>> BlockInstRange;102,3339
  ArrayRef<const AllocaInst *> Allocas;104,3418
  unsigned NumAllocas;105,3458
  DenseMap<DenseMap106,3481
  DenseMap<const AllocaInst *, unsigned> AllocaNumbering;106,3481
  SmallVector<SmallVector109,3569
  SmallVector<LiveRange, 8> LiveRanges;109,3569
  BitVector InterestingAllocas;113,3753
  struct Marker 115,3786
    unsigned AllocaNo;116,3804
    bool IsStart;117,3827
  DenseMap<DenseMap121,3927
      BBMarkers;122,4003
  iterator_range<iterator_range140,4386
  getMarkers(143,4542
  LiveRange getFullLiveRange(162,5369
static inline raw_ostream &operator<<(operator<<169,5496
inline raw_ostream &operator<<(operator<<178,5723
class StackLifetimePrinterPass184,5895
  StackLifetime::LivenessType Type;186,5981
  raw_ostream &OS;OS187,6017
  StackLifetimePrinterPass(190,6045
  static bool isRequired(193,6220

/usr/include/llvm/Analysis/StackSafetyAnalysis.h,1242
#define LLVM_ANALYSIS_STACKSAFETYANALYSIS_H14,574
class StackSafetyInfo 26,851
  std::function<ScalarEvolution &()> GetSE;32,935
  mutable std::unique_ptr<InfoTy> Info;33,979
class StackSafetyGlobalInfo 58,1912
  Module *M M63,1977
  std::function<const StackSafetyInfo &(Function &F)> GetSSI;64,2000
  const ModuleSummaryIndex *Index Index65,2062
  mutable std::unique_ptr<InfoTy> Info;66,2107
class StackSafetyAnalysis 92,2987
  static AnalysisKey Key;94,3112
  using Result 97,3147
class StackSafetyPrinterPass 102,3307
  raw_ostream &OS;OS103,3385
  explicit StackSafetyPrinterPass(106,3413
  static bool isRequired(108,3543
class StackSafetyInfoWrapperPass 112,3647
  StackSafetyInfo SSI;113,3704
  static char ID;116,3736
  const StackSafetyInfo &getResult(getResult119,3787
class StackSafetyGlobalAnalysis129,4115
  static AnalysisKey Key;132,4262
  using Result 135,4297
class StackSafetyGlobalPrinterPass140,4456
  raw_ostream &OS;OS142,4550
  explicit StackSafetyGlobalPrinterPass(145,4578
  static bool isRequired(147,4710
class StackSafetyGlobalInfoWrapperPass 152,4859
  StackSafetyGlobalInfo SSGI;153,4920
  static char ID;156,4959
  const StackSafetyGlobalInfo &getResult(getResult161,5056

/usr/include/llvm/Analysis/StructuralHash.h,268
#define LLVM_ANALYSIS_STRUCTURALHASH_H10,409
class StructuralHashPrinterPass17,540
  raw_ostream &OS;OS19,628
  bool EnableDetailedStructuralHash;20,647
  explicit StructuralHashPrinterPass(23,693
  PreservedAnalyses run(26,821
  static bool isRequired(28,886

/usr/include/llvm/Analysis/TargetFolder.h,44
#define LLVM_ANALYSIS_TARGETFOLDER_H19,881

/usr/include/llvm/Analysis/TargetLibraryInfo.h,3866
#define LLVM_ANALYSIS_TARGETLIBRARYINFO_H10,412
class VecDesc 43,1594
  StringRef ScalarFnName;44,1610
  StringRef VectorFnName;45,1636
  ElementCount VectorizationFactor;46,1662
  bool Masked;47,1698
  StringRef VABIPrefix;48,1713
  VecDesc(52,1768
  StringRef getScalarFnName(58,2070
  StringRef getVectorFnName(59,2131
  ElementCount getVectorizationFactor(60,2192
  bool isMasked(61,2270
  StringRef getVABIPrefix(62,2313
  enum LibFunc 69,2563
#define TLI_DEFINE_ENUM70,2591
    NumLibFuncs,73,2663
    NotLibFunc74,2680
class TargetLibraryInfoImpl 83,3018
  DenseMap<DenseMap87,3134
  DenseMap<unsigned, std::string> CustomNames;87,3134
  static StringLiteral const StandardNames[StandardNames88,3181
  bool ShouldExtI32Param,89,3238
  bool ShouldExtI32Param, ShouldExtI32Return,89,3238
  bool ShouldExtI32Param, ShouldExtI32Return, ShouldSignExtI32Param,89,3238
  bool ShouldExtI32Param, ShouldExtI32Return, ShouldSignExtI32Param, ShouldSignExtI32Return;89,3238
  unsigned SizeOfInt;90,3331
  enum AvailabilityState 92,3354
    StandardName 93,3381
    CustomName 94,3427
    Unavailable 95,3447
  void setState(97,3498
  AvailabilityState getState(101,3645
  std::vector<VecDesc> VectorDescs;106,3837
  std::vector<VecDesc> ScalarDescs;109,4000
  enum VectorLibrary 124,4658
    NoLibrary,125,4681
    Accelerate,126,4736
    DarwinLibSystemM,127,4787
    LIBMVEC_X86,128,4838
    MASSV,129,4890
    SVML,130,4940
    SLEEFGNUABI,131,4998
    ArmPL 132,5076
  void setUnavailable(164,6339
  void setAvailable(169,6460
  void setAvailableWithName(175,6634
  bool isFunctionVectorizable(201,7537
  void setShouldExtI32Param(224,8659
  void setShouldExtI32Return(231,8909
  void setShouldSignExtI32Param(237,9130
  void setShouldSignExtI32Return(243,9356
  unsigned getIntSize(255,9774
  void setIntSize(260,9882
class TargetLibraryInfo 280,10586
  const TargetLibraryInfoImpl *Impl;Impl285,10738
  BitVector OverrideAsUnavailable;289,10901
  explicit TargetLibraryInfo(292,10945
  TargetLibraryInfo(317,11806
  TargetLibraryInfo &operator=(operator=320,11999
  bool areInlineCompatible(330,12433
  bool isValidProtoForLibFunc(343,13064
  bool getLibFunc(352,13402
  bool getLibFunc(356,13507
  bool getLibFunc(362,13765
  bool getLibFunc(369,14063
  void disableAllFunctions(376,14270
  void setUnavailable(381,14414
  TargetLibraryInfoImpl::AvailabilityState getState(385,14510
  bool has(392,14752
  bool isFunctionVectorizable(395,14848
  bool isFunctionVectorizable(398,14975
  StringRef getVectorizedFunction(401,15074
  const VecDesc *getVectorMappingInfo(getVectorMappingInfo405,15267
  bool hasOptimizedCodeGen(412,15559
  StringRef getName(444,17442
  static void initExtensionsForTriple(454,17788
  static Attribute::AttrKind getExtAttrForI32Param(485,19157
  static Attribute::AttrKind getExtAttrForI32Param(496,19574
  Attribute::AttrKind getExtAttrForI32Param(506,20087
  static Attribute::AttrKind getExtAttrForI32Return(515,20467
  static Attribute::AttrKind getExtAttrForI32Return(526,20884
  Attribute::AttrKind getExtAttrForI32Return(536,21402
  AttributeList getAttrList(544,21810
  unsigned getWCharSize(557,22322
  unsigned getSizeTSize(562,22463
  unsigned getIntSize(565,22596
  bool invalidate(573,22850
  bool invalidate(577,22985
  void getWidestVF(583,23215
  bool isKnownVectorFunctionInLibrary(589,23457
class TargetLibraryAnalysis 598,23730
  typedef TargetLibraryInfo Result;600,23818
  TargetLibraryAnalysis(611,24187
  static AnalysisKey Key;618,24441
  std::optional<TargetLibraryInfoImpl> BaselineInfoImpl;620,24468
class TargetLibraryInfoWrapperPass 623,24529
  TargetLibraryAnalysis TLA;624,24589
  std::optional<TargetLibraryInfo> TLI;625,24618
  static char ID;630,24693
  TargetLibraryInfo &getTLI(getTLI635,24879

/usr/include/llvm/Analysis/TargetTransformInfo.h,7361
#define LLVM_ANALYSIS_TARGETTRANSFORMINFO_H22,967
typedef unsigned ID;39,1391
struct MemIntrinsicInfo 72,2044
  Value *PtrVal PtrVal77,2312
  AtomicOrdering Ordering 80,2377
  unsigned short MatchingId 83,2508
  bool ReadMem 85,2542
  bool WriteMem 86,2566
  bool IsVolatile 87,2591
  bool isUnordered(89,2619
struct HardwareLoopInfo 97,2839
  Loop *L L100,2925
  BasicBlock *ExitBlock ExitBlock101,2946
  BranchInst *ExitBranch ExitBranch102,2981
  const SCEV *ExitCount ExitCount103,3017
  IntegerType *CountType CountType104,3052
  Value *LoopDecrement LoopDecrement105,3088
  bool IsNestingLegal 107,3223
  bool CounterInReg 109,3355
  bool PerformEntryTest 111,3483
class IntrinsicCostAttributes 120,3970
  const IntrinsicInst *II II121,4002
  Type *RetTy RetTy122,4039
  Intrinsic::ID IID;123,4064
  SmallVector<SmallVector124,4085
  SmallVector<Type *, 4> ParamTys;124,4085
  SmallVector<SmallVector125,4120
  SmallVector<const Value *, 4> Arguments;125,4120
  FastMathFlags FMF;126,4163
  InstructionCost ScalarizationCost 129,4320
  Intrinsic::ID getID(151,5182
  const IntrinsicInst *getInst(getInst152,5228
  Type *getReturnType(getReturnType153,5282
  FastMathFlags getFlags(154,5330
  InstructionCost getScalarizationCost(155,5379
  const SmallVectorImpl<const Value *> &getArgs(getArgs156,5456
  const SmallVectorImpl<Type *> &getArgTypes(getArgTypes157,5534
  bool isTypeBasedOnly(159,5609
  bool skipScalarizationCost(163,5677
enum class TailFoldingStyle 166,5758
  None,168,5817
  Data,177,6399
  DataWithoutLaneMask,183,6717
  DataAndControlFlow,189,7083
  DataAndControlFlowWithoutRuntimeCheck193,7312
struct TailFoldingInfo 196,7356
  TargetLibraryInfo *TLI;TLI197,7381
  LoopVectorizationLegality *LVL;LVL198,7407
  InterleavedAccessInfo *IAI;IAI199,7441
  TailFoldingInfo(200,7471
typedef TargetTransformInfo TTI;206,7662
class TargetTransformInfo 210,7802
  bool invalidate(239,8936
  enum TargetCostKind 255,9579
    TCK_RecipThroughput,256,9603
    TCK_Latency,257,9656
    TCK_CodeSize,258,9714
    TCK_SizeAndLatency 259,9767
  enum TargetCostConstants 280,11056
    TCC_Free 281,11085
    TCC_Basic 282,11147
    TCC_Expensive 283,11215
  struct PointersChainInfo 303,12128
    unsigned IsSameBaseAddress 305,12211
    unsigned IsUnitStride 308,12371
    unsigned IsKnownStride 310,12482
    unsigned Reserved 311,12514
    bool isSameBase(313,12543
    bool isUnitStride(314,12601
    bool isKnownStride(315,12677
    static PointersChainInfo getUnitStride(317,12756
    static PointersChainInfo getKnownStride(321,12907
    static PointersChainInfo getUnknownStride(325,13059
  InstructionCost getInstructionCost(408,17101
  std::pair<std::pair482,20403
  struct LSRCost 507,21724
    unsigned Insns;510,21843
    unsigned NumRegs;511,21863
    unsigned AddRecCost;512,21885
    unsigned NumIVMuls;513,21910
    unsigned NumBaseAdds;514,21934
    unsigned ImmCost;515,21960
    unsigned SetupCost;516,21982
    unsigned ScaleCost;517,22006
  struct UnrollingPreferences 521,22109
    unsigned Threshold;529,22631
    unsigned MaxPercentThresholdBoost;540,23345
    unsigned OptSizeThreshold;543,23496
    unsigned PartialThreshold;546,23670
    unsigned PartialOptSizeThreshold;550,23884
    unsigned Count;555,24195
    unsigned DefaultUnrollRuntimeCount;557,24280
    unsigned MaxCount;562,24587
    unsigned MaxUpperBound;566,24841
    unsigned FullUnrollMaxCount;570,25111
    unsigned BEInsns;575,25355
    bool Partial;578,25530
    bool Runtime;582,25723
    bool AllowRemainder;584,25819
    bool AllowExpensiveTripCount;587,25981
    bool Force;590,26116
    bool UpperBound;592,26192
    bool UnrollRemainder;594,26290
    bool UnrollAndJam;596,26392
    unsigned UnrollAndJamInnerLoopThreshold;601,26656
    unsigned MaxIterationsCountToAnalyze;604,26832
  struct PeelingPreferences 636,28452
    unsigned PeelCount;640,28706
    bool AllowPeeling;642,28773
    bool AllowLoopNestsPeeling;644,28854
    bool PeelProfiledIterations;649,29149
  enum PopcntSupportKind 692,31320
  enum PopcntSupportKind { PSK_Software,692,31320
  enum PopcntSupportKind { PSK_Software, PSK_SlowHardware,692,31320
  enum PopcntSupportKind { PSK_Software, PSK_SlowHardware, PSK_FastHardware 692,31320
  enum AddressingModeKind 744,33957
    AMK_PreIndexed,745,33985
    AMK_PostIndexed,746,34005
    AMK_None747,34026
  struct MemCmpExpansionOptions 895,41145
    operator bool(operator bool897,41230
    SmallVector<SmallVector903,41438
    SmallVector<unsigned, 8> LoadSizes;903,41438
    SmallVector<SmallVector929,42828
    SmallVector<unsigned, 4> AllowedTailExpansions;929,42828
  enum ShuffleKind 1031,48070
    SK_Broadcast,1032,48091
    SK_Reverse,1033,48164
    SK_Select,1034,48227
    SK_Transpose,1037,48461
    SK_InsertSubvector,1038,48514
    SK_ExtractSubvector,1039,48591
    SK_PermuteTwoSrc,1040,48668
    SK_PermuteSingleSrc,1042,48799
    SK_Splice 1044,48923
  enum OperandValueKind 1051,49316
    OK_AnyValue,1052,49342
    OK_UniformValue,1053,49404
    OK_UniformConstantValue,1054,49477
    OK_NonUniformConstantValue 1055,49540
  enum OperandValueProperties 1059,49673
    OP_None 1060,49705
    OP_PowerOf2 1061,49722
    OP_NegatedPowerOf2 1062,49743
  struct OperandValueInfo 1068,49989
    bool isConstant(1072,50108
    bool isUniform(1075,50228
    bool isPowerOf2(1078,50336
    bool isNegatedPowerOf2(1081,50412
    OperandValueInfo getNoProps(1085,50503
  enum RegisterKind 1109,51728
  enum RegisterKind { RGK_Scalar,1109,51728
  enum RegisterKind { RGK_Scalar, RGK_FixedWidthVector,1109,51728
  enum RegisterKind { RGK_Scalar, RGK_FixedWidthVector, RGK_ScalableVector 1109,51728
  enum class CacheLevel 1168,54649
    L1D,1169,54675
    L2D,1170,54705
  enum class CastContextHint 1302,61822
    None,1303,61863
    Normal,1304,61939
    Masked,1305,62006
    GatherScatter,1306,62073
    Interleave,1307,62137
    Reversed,1308,62210
  static bool requiresOrderedReduction(1433,68779
  enum MemIndexedMode 1577,76089
    MIM_Unindexed,1578,76113
    MIM_PreInc,1579,76150
    MIM_PreDec,1580,76192
    MIM_PostInc,1581,76234
    MIM_PostDec 1582,76277
  struct ReductionFlags 1629,78500
  struct VPLegalization 1687,80874
    enum VPTransform 1688,80900
      Legal 1690,80963
      Discard 1692,81034
      Convert 1694,81117
    VPTransform EVLParamStrategy;1701,81357
    VPTransform OpStrategy;1707,81575
    bool shouldDoNothing(1709,81604
    VPLegalization(1712,81712
  std::unique_ptr<Concept> TTIImpl;1746,82938
class TargetTransformInfo::Concept 1749,82978
  virtual std::pair<std::pair1792,85525
TargetTransformInfo::TargetTransformInfo(2858,137534
class TargetIRAnalysis 2872,138230
  typedef TargetTransformInfo Result;2874,138308
  TargetIRAnalysis(2889,138876
  TargetIRAnalysis(2891,138964
  TargetIRAnalysis &operator=(operator=2893,139058
  TargetIRAnalysis &operator=(operator=2897,139176
  static AnalysisKey Key;2906,139417
  std::function<Result(const Function &)> TTICallback;2918,140043
class TargetTransformInfoWrapperPass 2928,140378
  TargetIRAnalysis TIRA;2929,140440
  std::optional<TargetTransformInfo> TTI;2930,140465
  static char ID;2935,140542

/usr/include/llvm/Analysis/TargetTransformInfoImpl.h,8649
#define LLVM_ANALYSIS_TARGETTRANSFORMINFOIMPL_H15,614
class TargetTransformInfoImplBase 34,1158
  typedef TargetTransformInfo TTI;36,1205
  const DataLayout &DL;DL38,1241
  explicit TargetTransformInfoImplBase(40,1266
  TargetTransformInfoImplBase(45,1505
  const DataLayout &getDataLayout(getDataLayout47,1587
  InstructionCost getGEPCost(49,1645
  unsigned getEstimatedNumberOfCaseClusters(61,2124
  unsigned getInliningThresholdMultiplier(71,2478
  unsigned getInliningCostBenefitAnalysisSavingsMultiplier(72,2542
  unsigned getInliningCostBenefitAnalysisProfitableMultiplier(73,2623
  unsigned adjustInliningThreshold(76,2713
  unsigned getCallerAllocaCost(77,2788
  int getInlinerVectorBonusPercent(81,2889
  InstructionCost getMemcpyCost(83,2949
  uint64_t getMaxMemIntrinsicInlineSizeThreshold(87,3047
  BranchProbability getPredictableBranchThreshold(97,3539
  bool hasBranchDivergence(101,3643
  bool isSourceOfDivergence(103,3724
  bool isAlwaysUniform(105,3793
  bool isValidAddrSpaceCast(107,3857
  bool addrspacesMayAlias(111,3948
  unsigned getFlatAddressSpace(115,4032
  bool collectFlatAddressOperands(117,4087
  bool isNoopAddrSpaceCast(122,4238
  bool canHaveNonUndefGlobalInitializerInAddressSpace(123,4309
  unsigned getAssumedAddrSpace(127,4410
  bool isSingleThreaded(129,4479
  std::pair<std::pair131,4530
  getPredicatedAddrSpace(132,4567
  Value *rewriteIntrinsicWithAddressSpace(rewriteIntrinsicWithAddressSpace136,4661
  bool isLoweredToCall(141,4823
  bool isHardwareLoopProfitable(177,6322
  bool preferPredicateOverEpilogue(183,6558
  getPreferredTailFoldingStyle(186,6659
  std::optional<Instruction *> instCombineIntrinsic(190,6786
  simplifyDemandedUseBitsIntrinsic(196,6990
  std::optional<Value *> simplifyDemandedVectorEltsIntrinsic(202,7233
  void getUnrollingPreferences(210,7553
  void getPeelingPreferences(214,7741
  bool isLegalAddImmediate(217,7863
  bool isLegalICmpImmediate(219,7928
  bool isLegalAddressingMode(221,7994
  bool isLSRCostLess(229,8417
  bool isNumRegsMajorCostOfLSR(236,8776
  bool shouldFoldTerminatingConditionAfterLSR(238,8833
  bool isProfitableLSRChainElement(240,8906
  bool canMacroFuseCmp(242,8982
  bool canSaveCmp(244,9032
    getPreferredAddressingMode(251,9272
  bool isLegalMaskedStore(255,9378
  bool isLegalMaskedLoad(259,9468
  bool isLegalNTStore(263,9557
  bool isLegalNTLoad(270,9880
  bool isLegalBroadcastLoad(277,10200
  bool isLegalMaskedScatter(281,10302
  bool isLegalMaskedGather(285,10394
  bool forceScalarizeMaskedGather(289,10485
  bool forceScalarizeMaskedScatter(293,10589
  bool isLegalMaskedCompressStore(298,10729
  bool isLegalAltInstr(300,10804
  bool isLegalMaskedExpandLoad(305,10970
  bool enableOrderedReductions(307,11042
  bool hasDivRemOp(309,11100
  bool hasVolatileVariant(311,11175
  bool prefersVectorizedAddressing(315,11268
  InstructionCost getScalingFactorCost(317,11329
  bool LSRWithInstrQueries(328,11801
  bool isTruncateFree(330,11855
  bool isProfitableToHoist(332,11924
  bool useAA(334,11991
  bool isTypeLegal(336,12031
  unsigned getRegUsageForType(338,12085
  bool shouldBuildLookupTables(340,12146
  bool shouldBuildLookupTablesForConstant(342,12203
  bool shouldBuildRelLookupTables(344,12282
  bool useColdCCForColdCall(346,12343
  InstructionCost getScalarizationOverhead(348,12409
  getOperandsScalarizationOverhead(356,12726
  bool supportsEfficientVectorElementLoadStore(362,12940
  bool supportsTailCalls(364,13014
  bool supportsTailCallFor(366,13065
  bool enableAggressiveInterleaving(370,13157
  TTI::MemCmpExpansionOptions enableMemCmpExpansion(374,13248
  bool enableSelectOptimize(379,13410
  bool shouldTreatInstructionLikeSelect(381,13464
  bool enableInterleavedAccessVectorization(390,13855
  bool enableMaskedInterleavedAccessVectorization(392,13926
  bool isFPVectorizationPotentiallyUnsafe(394,14003
  bool allowsMisalignedMemoryAccesses(396,14072
  TTI::PopcntSupportKind getPopcntSupport(402,14314
  bool haveFastSqrt(406,14425
  bool isExpensiveToSpeculativelyExecute(408,14480
  bool isFCmpOrdCheaperThanFCmpZero(410,14561
  InstructionCost getFPOpCost(412,14631
  InstructionCost getIntImmCodeSizeCost(416,14727
  InstructionCost getIntImmCost(421,14893
  InstructionCost getIntImmCostInst(426,15055
  InstructionCost getIntImmCostIntrin(433,15356
  bool preferToKeepConstantsAttached(439,15600
  unsigned getNumberOfRegisters(444,15750
  unsigned getRegisterClassForType(446,15821
  const char *getRegisterClassName(getRegisterClassName450,15930
  TypeSize getRegisterBitWidth(461,16178
  unsigned getMinVectorRegisterBitWidth(465,16294
  std::optional<unsigned> getMaxVScale(467,16359
  std::optional<unsigned> getVScaleForTuning(468,16431
  bool isVScaleKnownToBeAPowerOfTwo(469,16509
  shouldMaximizeVectorBandwidth(472,16579
  ElementCount getMinimumVF(476,16679
  unsigned getMaximumVF(480,16802
  unsigned getStoreMinimumVF(481,16883
  bool shouldConsiderAddressTypePromotion(483,16963
  unsigned getCacheLineSize(489,17153
  getCacheSize(491,17229
  getCacheAssociativity(502,17558
  std::optional<unsigned> getMinPageSize(513,17871
  unsigned getPrefetchDistance(515,17936
  unsigned getMinPrefetchStride(516,17989
  unsigned getMaxPrefetchIterationsAhead(521,18206
  bool enableWritePrefetching(522,18276
  bool shouldPrefetchAddressSpace(523,18332
  unsigned getMaxInterleaveFactor(525,18402
  InstructionCost getArithmeticInstrCost(527,18474
  InstructionCost getAltInstrCost(568,19866
  getShuffleCost(576,20194
  InstructionCost getCastInstrCost(582,20436
  InstructionCost getExtractWithExtendCost(620,21718
  InstructionCost getCFInstrCost(626,21937
  InstructionCost getCmpSelInstrCost(635,22308
  InstructionCost getVectorInstrCost(642,22607
  InstructionCost getVectorInstrCost(649,22880
  unsigned getReplicationShuffleCost(655,23097
  InstructionCost getMemoryOpCost(661,23333
  InstructionCost getVPMemoryOpCost(669,23680
  InstructionCost getMaskedMemoryOpCost(676,23971
  InstructionCost getGatherScatterOpCost(682,24216
  unsigned getInterleavedMemoryOpCost(690,24595
  InstructionCost getIntrinsicInstrCost(697,24866
  InstructionCost getCallInstrCost(742,26402
  unsigned getNumberOfParts(749,26680
  InstructionCost getAddressComputationCost(751,26739
  InstructionCost getArithmeticReductionCost(756,26897
  InstructionCost getMinMaxReductionCost(762,27138
  InstructionCost getExtendedReductionCost(768,27357
  InstructionCost getMulAccReductionCost(775,27668
  InstructionCost getCostOfKeepingLiveOverCall(781,27894
  bool getTgtMemIntrinsic(785,27990
  unsigned getAtomicMemIntrinsicMaxElementSize(789,28092
  Value *getOrCreateResultFromMemIntrinsic(getOrCreateResultFromMemIntrinsic798,28486
  getMemcpyLoopLoweringType(804,28655
  void getMemcpyLoopResidualLoweringType(812,29083
  bool areInlineCompatible(823,29594
  unsigned getInlineCallPenalty(831,29927
  bool areTypesABICompatible(836,30105
  bool isIndexedLoadLegal(844,30473
  bool isIndexedStoreLegal(849,30614
  unsigned getLoadStoreVecRegBitWidth(854,30757
  bool isLegalToVectorizeLoad(856,30838
  bool isLegalToVectorizeStore(858,30906
  bool isLegalToVectorizeLoadChain(860,30976
  bool isLegalToVectorizeStoreChain(865,31140
  bool isLegalToVectorizeReduction(870,31306
  bool isElementTypeLegalForScalableVector(875,31460
  unsigned getLoadVectorFactor(877,31537
  unsigned getStoreVectorFactor(883,31736
  bool preferInLoopReduction(889,31939
  bool preferPredicatedReductionSelect(894,32082
  bool preferEpilogueVectorization(899,32245
  bool shouldExpandReduction(903,32312
  unsigned getGISelRematGlobalCost(905,32390
  unsigned getMinTripCountTailFoldingThreshold(907,32448
  bool supportsScalableVectors(909,32518
  bool enableScalableVectorization(911,32576
  bool hasActiveVectorLength(913,32638
  getVPLegalizationStrategy(919,32815
  bool hasArmWideBranch(925,33082
  unsigned getMaxNumArgs(927,33137
  unsigned minRequiredElementSize(932,33353
  bool isStridedAccess(986,35313
  const SCEVConstant *getConstantStrideStep(getConstantStrideStep990,35410
  bool isConstantStridedAccessLessThan(998,35731
class TargetTransformInfoImplCRTPBase 1014,36332
  typedef TargetTransformInfoImplBase BaseT;1016,36418
  explicit TargetTransformInfoImplCRTPBase(1019,36475
  using BaseT::getGEPCost;1022,36564
  InstructionCost getGEPCost(1024,36592
  InstructionCost getPointersChainCost(1102,39869
  InstructionCost getInstructionCost(1139,41734
  bool isExpensiveToSpeculativelyExecute(1411,53231

/usr/include/llvm/Analysis/TensorSpec.h,520
#define LLVM_ANALYSIS_TENSORSPEC_H10,407
#define SUPPORTED_TENSOR_TYPES(38,1551
enum class TensorType 50,2384
  Invalid,51,2408
#define _TENSOR_TYPE_ENUM_MEMBERS(52,2419
  SUPPORTED_TENSOR_TYPES(53,2468
  SUPPORTED_TENSOR_TYPES(_TENSOR_TYPE_ENUM_MEMBERS)53,2468
#undef _TENSOR_TYPE_ENUM_MEMBERS54,2520
      Total55,2553
class TensorSpec final 58,2569
  bool operator==(operator==72,3064
  bool operator!=(operator!=77,3230
#define TFUTILS_GETDATATYPE_DEF(123,4913
#undef TFUTILS_GETDATATYPE_DEF127,5098

/usr/include/llvm/Analysis/UniformityAnalysis.h,539
#define LLVM_ANALYSIS_UNIFORMITYANALYSIS_H15,573
class UniformityInfoAnalysis26,891
  static AnalysisKey Key;29,1029
  UniformityInfo run(36,1229
class UniformityInfoPrinterPass42,1367
  raw_ostream &OS;OS44,1455
  static bool isRequired(51,1607
class UniformityInfoWrapperPass 55,1713
  Function *m_function m_function56,1769
  UniformityInfo m_uniformityInfo;57,1803
  static char ID;60,1847
  UniformityInfo &getUniformityInfo(getUniformityInfo64,1898
  const UniformityInfo &getUniformityInfo(getUniformityInfo65,1965

/usr/include/llvm/Analysis/ValueLattice.h,1992
#define LLVM_ANALYSIS_VALUELATTICE_H10,407
class ValueLatticeElement 29,960
  enum ValueLatticeElementTy 30,988
    unknown,36,1320
    constant,53,2055
    notconstant,60,2332
    constantrange,67,2619
    constantrange_including_undef,74,2875
    overdefined,78,3051
  ValueLatticeElementTy Tag 81,3074
  unsigned NumRangeExtensions 83,3187
    Constant *ConstVal;ConstVal89,3458
    ConstantRange Range;90,3482
  void destroy(94,3586
  struct MergeOptions 111,3934
    bool MayIncludeUndef;113,4001
    bool CheckWiden;117,4129
    unsigned MaxWidenSteps;121,4245
    MergeOptions(123,4274
    MergeOptions(125,4326
    MergeOptions &setMayIncludeUndef(setMayIncludeUndef130,4538
    MergeOptions &setCheckWiden(setCheckWiden135,4646
    MergeOptions &setMaxWidenSteps(setMaxWidenSteps140,4744
  ValueLatticeElement(148,4938
  ~ValueLatticeElement(150,5004
  ValueLatticeElement(152,5045
  ValueLatticeElement(171,5518
  ValueLatticeElement &operator=(operator=191,6022
  ValueLatticeElement &operator=(operator=197,6172
  static ValueLatticeElement get(203,6328
  static ValueLatticeElement getNot(208,6450
  static ValueLatticeElement getRange(214,6642
  static ValueLatticeElement getOverdefined(231,7128
  bool isUndef(237,7253
  bool isUnknown(238,7301
  bool isUnknownOrUndef(239,7353
  bool isConstant(240,7428
  bool isNotConstant(241,7482
  bool isConstantRangeIncludingUndef(242,7542
  bool isConstantRange(249,7957
  bool isOverdefined(253,8174
  Constant *getConstant(getConstant255,8235
  Constant *getNotConstant(getNotConstant260,8369
  const ConstantRange &getConstantRange(getConstantRange269,8825
  std::optional<APInt> asConstantInteger(275,9036
  bool markOverdefined(284,9370
  bool markUndef(292,9502
  bool markConstant(301,9627
  bool markNotConstant(321,10162
  bool markConstantRange(347,11066
  bool mergeIn(385,12304
  unsigned getNumRangeExtensions(455,14391
  void setNumRangeExtensions(456,14463

/usr/include/llvm/Analysis/ValueTracking.h,2664
#define LLVM_ANALYSIS_VALUETRACKING_H15,592
struct KnownFPClass 217,10183
  std::optional<bool> SignBit;223,10443
  bool isKnownNever(226,10550
  bool isUnknown(230,10647
  bool isKnownNeverNaN(235,10789
  bool isKnownNeverInfinity(240,10922
  bool isKnownNeverPosInfinity(245,11058
  bool isKnownNeverNegInfinity(250,11200
  bool isKnownNeverSubnormal(255,11343
  bool isKnownNeverPosSubnormal(260,11496
  bool isKnownNeverNegSubnormal(265,11655
  bool isKnownNeverZero(271,11901
  bool isKnownNeverPosZero(276,12048
  bool isKnownNeverNegZero(282,12286
  bool cannotBeOrderedLessThanZero(310,13410
  bool cannotBeOrderedGreaterThanZero(321,13752
  KnownFPClass &operator|=(operator|=325,13858
  void knownNot(333,14056
  void fneg(337,14148
  void fabs(343,14262
  bool signBitIsZeroOrNaN(360,14680
  void signBitMustBeZero(365,14793
  void copysign(370,14892
  void propagateNaN(395,15903
  void resetAll(421,16988
inline KnownFPClass operator|(424,17038
inline KnownFPClass operator|(429,17144
inline KnownFPClass computeKnownFPClass(459,18501
inline bool cannotBeNegativeZero(483,19414
inline bool cannotBeOrderedLessThanZero(503,20276
inline bool isKnownNeverInfinity(519,21177
inline bool isKnownNeverInfOrNaN(532,21899
inline bool isKnownNeverNaN(545,22558
inline Value *GetPointerBaseWithConstantOffset(GetPointerBaseWithConstantOffset588,24659
GetPointerBaseWithConstantOffset(599,25125
struct ConstantDataArraySlice 611,25725
  const ConstantDataArray *Array;Array614,25908
  uint64_t Offset;617,25978
  uint64_t Length;620,26025
  void move(623,26100
inline Value *getArgumentAliasingToReturnedPointer(getArgumentAliasingToReturnedPointer660,27809
inline Value *getUnderlyingObject(getUnderlyingObject681,29029
inline const AllocaInst *findAllocaForValue(findAllocaForValue727,30851
enum class OverflowResult 822,36120
  AlwaysOverflowsLow,824,36218
  AlwaysOverflowsHigh,826,36310
  MayOverflow,828,36364
  NeverOverflows,830,36402
enum SelectPatternFlavor 1019,46381
  SPF_UNKNOWN 1020,46408
  SPF_SMIN,1021,46427
  SPF_UMIN,1022,46461
  SPF_SMAX,1023,46497
  SPF_UMAX,1024,46531
  SPF_FMINNUM,1025,46567
  SPF_FMAXNUM,1026,46608
  SPF_ABS,1027,46649
  SPF_NABS 1028,46683
enum SelectPatternNaNBehavior 1033,46819
  SPNB_NA 1034,46851
  SPNB_RETURNS_NAN,1035,46906
  SPNB_RETURNS_OTHER,1036,46970
  SPNB_RETURNS_ANY 1037,47038
struct SelectPatternResult 1042,47216
  SelectPatternFlavor Flavor;1043,47245
  SelectPatternNaNBehavior NaNBehavior;1044,47275
  bool Ordered;1046,47420
  static bool isMinOrMax(1051,47626
inline SelectPatternResult matchSelectPattern(1078,48726

/usr/include/llvm/Analysis/VectorUtils.h,2630
#define LLVM_ANALYSIS_VECTORUTILS_H14,541
class VFDatabase 29,940
  const Module *M;M31,996
  const CallInst &CI;CI33,1088
  const SmallVector<VFInfo,VFInfo36,1195
  const SmallVector<VFInfo, 8> ScalarToVectorMappings;36,1195
  static void getVFABIMappings(40,1351
  static SmallVector<SmallVector70,2559
  static SmallVector<VFInfo, 8> getMappings(70,2559
  static bool hasMaskedVariant(81,2829
  VFDatabase(96,3422
  Function *getVectorizedFunction(getVectorizedFunction103,3657
namespace Intrinsic 126,4209
typedef unsigned ID;127,4231
inline Type *ToVectorTy(ToVectorTy133,4434
inline Type *ToVectorTy(ToVectorTy139,4620
template <typename InstTy> class InterleaveGroup 439,18914
  InterleaveGroup(441,18973
  InterleaveGroup(445,19134
  bool isReverse(454,19391
  uint32_t getFactor(455,19436
  Align getAlign(456,19484
  uint32_t getNumMembers(457,19531
  bool insertMember(464,19853
  InstTy *getMember(getMember509,21299
  uint32_t getIndex(516,21526
  InstTy *getInsertPos(getInsertPos525,21748
  void setInsertPos(526,21801
  bool requiresScalarEpilogue(537,22263
  uint32_t Factor;552,22759
  bool Reverse;553,22800
  Align Alignment;554,22816
  DenseMap<DenseMap555,22835
  DenseMap<int32_t, InstTy *> Members;555,22835
  int32_t SmallestKey 556,22874
  int32_t LargestKey 557,22901
  InstTy *InsertPos;InsertPos570,23388
class InterleavedAccessInfo 581,23801
  InterleavedAccessInfo(583,23839
  ~InterleavedAccessInfo(588,24071
  bool invalidateGroups(601,24771
  bool isInterleaved(618,25226
  getInterleaveGroup(626,25474
  getInterleaveGroups(631,25655
  bool requiresScalarEpilogue(637,25899
  bool hasGroups(645,26285
  PredicatedScalarEvolution &PSE;PSE652,26631
  Loop *TheLoop;TheLoop654,26666
  DominatorTree *DT;DT655,26683
  LoopInfo *LI;LI656,26704
  const LoopAccessInfo *LAI;LAI657,26720
  bool RequiresScalarEpilogue 662,26972
  DenseMap<DenseMap665,27088
  DenseMap<Instruction *, InterleaveGroup<Instruction> *> InterleaveGroupMap;665,27088
  SmallPtrSet<SmallPtrSet667,27167
  SmallPtrSet<InterleaveGroup<Instruction> *, 4> InterleaveGroups;667,27167
  DenseMap<DenseMap671,27365
  DenseMap<Instruction *, SmallPtrSet<Instruction *, 2>> Dependences;671,27365
  struct StrideDescriptor 674,27486
    StrideDescriptor(676,27548
    Align Alignment;690,27998
  using StrideEntry 694,28093
  createInterleaveGroup(701,28370
  void releaseGroup(711,28803
  bool isPredicated(729,29458
  bool areDependencesValid(734,29647
  bool canReorderMemAccessesForInterleavedGroups(743,30036
  void collectDependences(790,31940

/usr/include/llvm/Analysis/WithCache.h,724
#define LLVM_ANALYSIS_WITHCACHE_H15,608
template <typename Arg> class WithCache 27,918
  static_assert(28,960
  template <typename T,33,1150
  using conditionally_const_t = std::conditional_t<Const, const T,34,1186
  mutable PointerIntPair<PointerIntPair43,1537
  mutable PointerIntPair<PointerType, 1, bool> Pointer;43,1537
  mutable KnownBits Known;44,1593
  void calculateKnownBits(46,1621
  WithCache(52,1776
  WithCache(53,1838
  [[nodiscard]] PointerType getValue(56,1944
  [[nodiscard]] const KnownBits &getKnownBits(getKnownBits58,2023
  [[nodiscard]] bool hasKnownBits(64,2178
  operator PointerType(operator PointerType66,2250
  PointerType operator->(67,2314
  ReferenceType operator*(68,2380

/usr/include/llvm/AsmParser/LLLexer.h,842
#define LLVM_ASMPARSER_LLLEXER_H14,540
  class LLLexer 28,799
    const char *CurPtr;CurPtr29,817
    StringRef CurBuf;30,841
    SMDiagnostic &ErrorInfo;ErrorInfo31,863
    SourceMgr &SM;SM32,892
    LLVMContext &Context;Context33,911
    const char *TokStart;TokStart36,982
    lltok::Kind CurKind;37,1008
    std::string StrVal;38,1033
    APSInt APSIntVal{APSIntVal42,1139
    lltok::Kind Lex(52,1463
    typedef SMLoc LocTy;56,1529
    LocTy getLoc(57,1554
    lltok::Kind getKind(58,1623
    const std::string &getStrVal(getStrVal59,1675
    Type *getTyVal(getTyVal60,1735
    unsigned getUIntVal(61,1780
    const APSInt &getAPSIntVal(getAPSIntVal62,1832
    const APFloat &getAPFloatVal(getAPFloatVal63,1893
    void setIgnoreColonInIdentifiers(65,1958
    bool Error(70,2108
    void Warning(73,2241

/usr/include/llvm/AsmParser/SlotMapping.h,328
#define LLVM_ASMPARSER_SLOTMAPPING_H14,559
struct SlotMapping 32,1097
  std::vector<GlobalValue *> GlobalValues;33,1118
  std::map<std::map34,1161
  std::map<unsigned, TrackingMDNodeRef> MetadataNodes;34,1161
  StringMap<Type *> NamedTypes;35,1216
  std::map<std::map36,1248
  std::map<unsigned, Type *> Types;36,1248

/usr/include/llvm/AsmParser/LLParser.h,5455
#define LLVM_ASMPARSER_LLPARSER_H14,545
  struct ValID 52,1557
      t_LocalID,54,1585
      t_GlobalID,55,1632
      t_LocalName,56,1679
      t_GlobalName,57,1727
      t_APSInt,58,1775
      t_APFloat,59,1827
      t_Null,60,1880
      t_Undef,61,1922
      t_Zero,62,1964
      t_None,63,2006
      t_Poison,64,2048
      t_EmptyArray,65,2090
      t_Constant,66,2136
      t_ConstantSplat,67,2190
      t_InlineAsm,68,2244
      t_ConstantStruct,69,2313
      t_PackedConstantStruct 70,2374
    LLLexer::LocTy Loc;73,2460
    unsigned UIntVal;74,2484
    std::string StrVal,76,2539
    std::string StrVal, StrVal2;76,2539
    APSInt APSIntVal;77,2572
    Constant *ConstantVal;ConstantVal79,2623
    std::unique_ptr<Constant *[]> ConstantStructElts;80,2650
    ValID(84,2752
    bool operator<(92,3077
  class LLParser 103,3530
    typedef LLLexer::LocTy LocTy;105,3559
    LLVMContext &Context;Context107,3604
    LLLexer OPLex;109,3695
    LLLexer Lex;110,3714
    Module *M;M112,3802
    ModuleSummaryIndex *Index;Index114,3888
    SlotMapping *Slots;Slots115,3919
    SmallVector<SmallVector117,3944
    SmallVector<Instruction*, 64> InstsWithTBAATag;117,3944
    DenseMap<DenseMap123,4255
    DenseMap<MDNode *, SmallVector<Instruction *, 2>> TempDIAssignIDAttachments;123,4255
    StringMap<StringMap127,4481
    StringMap<std::pair<Type*, LocTy> > NamedTypes;127,4481
    std::map<std::map128,4533
    std::map<unsigned, std::pair<Type*, LocTy> > NumberedTypes;128,4533
    std::map<std::map130,4598
    std::map<unsigned, TrackingMDNodeRef> NumberedMetadata;130,4598
    std::map<std::map131,4658
    std::map<unsigned, std::pair<TempMDTuple, LocTy>> ForwardRefMDNodes;131,4658
    std::map<std::map134,4775
    std::map<std::string, std::pair<GlobalValue*, LocTy> > ForwardRefVals;134,4775
    std::map<std::map135,4850
    std::map<unsigned, std::pair<GlobalValue*, LocTy> > ForwardRefValIDs;135,4850
    std::vector<GlobalValue*> NumberedVals;136,4924
    std::map<std::map139,5014
    std::map<std::string, LocTy> ForwardRefComdats;139,5014
    std::map<std::map143,5203
    std::map<ValID, std::map<ValID, GlobalValue *>> ForwardRefBlockAddresses;143,5203
    PerFunctionState *BlockAddressPFS;BlockAddressPFS148,5467
    std::map<std::map155,5836
    std::map<ValID, GlobalValue *> ForwardRefDSOLocalEquivalentNames;155,5836
    std::map<std::map156,5906
    std::map<ValID, GlobalValue *> ForwardRefDSOLocalEquivalentIDs;156,5906
    std::map<std::map159,6023
    std::map<Value*, std::vector<unsigned> > ForwardRefAttrGroups;159,6023
    std::map<std::map160,6090
    std::map<unsigned, AttrBuilder> NumberedAttrBuilders;160,6090
    std::map<std::map163,6200
        ForwardRefValueInfos;164,6267
    std::map<std::map165,6297
        ForwardRefAliasees;166,6367
    std::vector<ValueInfo> NumberedValueInfos;167,6395
    std::map<std::map170,6489
        ForwardRefTypeIds;171,6564
    std::map<std::map174,6625
    std::map<unsigned, StringRef> ModuleIdMap;174,6625
    bool UpgradeDebugInfo;178,6795
    std::string SourceFileName;180,6823
    LLParser(183,6866
    LLVMContext &getContext(getContext200,7567
    bool error(203,7629
    bool tokError(204,7707
    bool EatIfPresent(225,8681
    FastMathFlags EatFastMathFlagsIfPresent(231,8807
    bool parseOptionalToken(251,9640
    bool parseUInt32(265,10035
    bool parseUInt64(270,10185
    bool parseOptionalProgramAddrSpace(282,10672
    bool parseOptionalParamAttrs(289,11034
    bool parseOptionalReturnAttrs(292,11146
    bool parseIndexList(323,12875
        std::map<unsigned, std::vector<std::vector395,16228
    bool parseType(433,18344
    bool parseType(436,18470
    bool parseType(441,18659
    class NumberedValues 455,19246
      DenseMap<DenseMap456,19273
      DenseMap<unsigned, Value *> Vals;456,19273
      unsigned getNext(460,19359
      Value *get(get461,19415
      void add(462,19479
    class PerFunctionState 470,19689
      LLParser &P;P471,19718
      Function &F;F472,19737
      std::map<std::map473,19756
      std::map<std::string, std::pair<Value*, LocTy> > ForwardRefVals;473,19756
      std::map<std::map474,19827
      std::map<unsigned, std::pair<Value*, LocTy> > ForwardRefValIDs;474,19827
      NumberedValues NumberedVals;475,19897
      int FunctionNumber;479,20053
      Function &getFunction(getFunction486,20248
    bool parseValue(523,21886
    bool parseValue(527,21997
    bool parseTypeAndValue(533,22208
    bool parseTypeAndValue(536,22318
    bool parseTypeAndBasicBlock(542,22582
    struct ParamInfo 547,22731
      LocTy Loc;548,22754
      Value *V;V549,22771
      AttributeSet Attrs;550,22787
      ParamInfo(551,22813
#define HANDLE_SPECIALIZED_MDNODE_LEAF(600,25201
    struct ArgInfo 605,25395
      LocTy Loc;606,25416
      Type *Ty;Ty607,25433
      AttributeSet Attrs;608,25449
      std::string Name;609,25475
      ArgInfo(610,25499
    enum TailCallType 621,26067
    enum TailCallType { TCT_None,621,26067
    enum TailCallType { TCT_None, TCT_Tail,621,26067
    enum TailCallType { TCT_None, TCT_Tail, TCT_MustTail 621,26067
    enum InstResult 625,26286
    enum InstResult { InstNormal 625,26286
    enum InstResult { InstNormal = 0, InstError 625,26286
    enum InstResult { InstNormal = 0, InstError = 1, InstExtraComma 625,26286

/usr/include/llvm/AsmParser/LLToken.h,9750
#define LLVM_ASMPARSER_LLTOKEN_H14,540
enum Kind 18,609
  Eof,20,634
  Error,21,641
  dotdotdot,24,677
  equal,25,697
  comma,26,706
  star,27,723
  lsquare,28,737
  rsquare,29,748
  lbrace,30,767
  rbrace,31,777
  less,32,795
  greater,33,803
  lparen,34,822
  rparen,35,832
  exclaim,36,851
  bar,37,867
  colon,38,883
  kw_vscale,40,900
  kw_x,41,913
  kw_true,42,921
  kw_false,43,932
  kw_declare,44,944
  kw_define,45,958
  kw_global,46,971
  kw_constant,47,984
  kw_dso_local,49,1000
  kw_dso_preemptable,50,1016
  kw_private,52,1039
  kw_internal,53,1053
  kw_linkonce,54,1068
  kw_linkonce_odr,55,1083
  kw_weak,56,1102
  kw_weak_odr,57,1165
  kw_appending,58,1180
  kw_dllimport,59,1196
  kw_dllexport,60,1212
  kw_common,61,1228
  kw_available_externally,62,1241
  kw_default,63,1268
  kw_hidden,64,1282
  kw_protected,65,1295
  kw_unnamed_addr,66,1311
  kw_local_unnamed_addr,67,1330
  kw_externally_initialized,68,1355
  kw_extern_weak,69,1384
  kw_external,70,1402
  kw_thread_local,71,1417
  kw_localdynamic,72,1436
  kw_initialexec,73,1455
  kw_localexec,74,1473
  kw_zeroinitializer,75,1489
  kw_undef,76,1511
  kw_poison,77,1523
  kw_null,78,1536
  kw_none,79,1547
  kw_to,80,1558
  kw_caller,81,1567
  kw_within,82,1580
  kw_from,83,1593
  kw_tail,84,1604
  kw_musttail,85,1615
  kw_notail,86,1630
  kw_target,87,1643
  kw_triple,88,1656
  kw_source_filename,89,1669
  kw_unwind,90,1691
  kw_datalayout,91,1704
  kw_volatile,92,1721
  kw_atomic,93,1736
  kw_unordered,94,1749
  kw_monotonic,95,1765
  kw_acquire,96,1781
  kw_release,97,1795
  kw_acq_rel,98,1809
  kw_seq_cst,99,1823
  kw_syncscope,100,1837
  kw_nnan,101,1853
  kw_ninf,102,1864
  kw_nsz,103,1875
  kw_arcp,104,1885
  kw_contract,105,1896
  kw_reassoc,106,1911
  kw_afn,107,1925
  kw_fast,108,1935
  kw_nuw,109,1946
  kw_nsw,110,1956
  kw_exact,111,1966
  kw_disjoint,112,1978
  kw_inbounds,113,1993
  kw_nneg,114,2008
  kw_inrange,115,2019
  kw_addrspace,116,2033
  kw_section,117,2049
  kw_partition,118,2063
  kw_code_model,119,2079
  kw_alias,120,2096
  kw_ifunc,121,2108
  kw_module,122,2120
  kw_asm,123,2133
  kw_sideeffect,124,2143
  kw_inteldialect,125,2160
  kw_gc,126,2179
  kw_prefix,127,2188
  kw_prologue,128,2201
  kw_c,129,2216
  kw_cc,131,2225
  kw_ccc,132,2234
  kw_fastcc,133,2244
  kw_coldcc,134,2257
  kw_intel_ocl_bicc,135,2270
  kw_cfguard_checkcc,136,2291
  kw_x86_stdcallcc,137,2313
  kw_x86_fastcallcc,138,2333
  kw_x86_thiscallcc,139,2354
  kw_x86_vectorcallcc,140,2375
  kw_x86_regcallcc,141,2398
  kw_arm_apcscc,142,2418
  kw_arm_aapcscc,143,2435
  kw_arm_aapcs_vfpcc,144,2453
  kw_aarch64_vector_pcs,145,2475
  kw_aarch64_sve_vector_pcs,146,2500
  kw_aarch64_sme_preservemost_from_x0,147,2529
  kw_aarch64_sme_preservemost_from_x2,148,2568
  kw_msp430_intrcc,149,2607
  kw_avr_intrcc,150,2627
  kw_avr_signalcc,151,2644
  kw_ptx_kernel,152,2663
  kw_ptx_device,153,2680
  kw_spir_kernel,154,2697
  kw_spir_func,155,2715
  kw_x86_64_sysvcc,156,2731
  kw_win64cc,157,2751
  kw_anyregcc,158,2765
  kw_swiftcc,159,2780
  kw_swifttailcc,160,2794
  kw_preserve_mostcc,161,2812
  kw_preserve_allcc,162,2834
  kw_ghccc,163,2855
  kw_x86_intrcc,164,2867
  kw_hhvmcc,165,2884
  kw_hhvm_ccc,166,2897
  kw_cxx_fast_tlscc,167,2912
  kw_amdgpu_vs,168,2933
  kw_amdgpu_ls,169,2949
  kw_amdgpu_hs,170,2965
  kw_amdgpu_es,171,2981
  kw_amdgpu_gs,172,2997
  kw_amdgpu_ps,173,3013
  kw_amdgpu_cs,174,3029
  kw_amdgpu_cs_chain,175,3045
  kw_amdgpu_cs_chain_preserve,176,3067
  kw_amdgpu_kernel,177,3098
  kw_amdgpu_gfx,178,3118
  kw_tailcc,179,3135
  kw_m68k_rtdcc,180,3148
  kw_graalcc,181,3165
  kw_attributes,184,3197
  kw_sync,185,3214
  kw_async,186,3225
#define GET_ATTR_NAMES187,3237
#define ATTRIBUTE_ENUM(188,3260
  kw_read,193,3389
  kw_write,194,3400
  kw_readwrite,195,3412
  kw_argmem,196,3428
  kw_inaccessiblemem,197,3441
  kw_argmemonly,200,3495
  kw_inaccessiblememonly,201,3512
  kw_inaccessiblemem_or_argmemonly,202,3538
  kw_all,205,3601
  kw_nan,206,3611
  kw_snan,207,3621
  kw_qnan,208,3632
  kw_inf,209,3643
  kw_pinf,211,3684
  kw_norm,212,3695
  kw_nnorm,213,3706
  kw_pnorm,214,3718
  kw_nsub,216,3769
  kw_psub,217,3780
  kw_zero,218,3791
  kw_nzero,219,3802
  kw_pzero,220,3814
  kw_type,222,3827
  kw_opaque,223,3838
  kw_comdat,225,3852
  kw_any,228,3884
  kw_exactmatch,229,3894
  kw_largest,230,3911
  kw_nodeduplicate,231,3925
  kw_samesize,232,3945
  kw_eq,234,3961
  kw_ne,235,3970
  kw_slt,236,3979
  kw_sgt,237,3989
  kw_sle,238,3999
  kw_sge,239,4009
  kw_ult,240,4019
  kw_ugt,241,4029
  kw_ule,242,4039
  kw_uge,243,4049
  kw_oeq,244,4059
  kw_one,245,4069
  kw_olt,246,4079
  kw_ogt,247,4089
  kw_ole,248,4099
  kw_oge,249,4109
  kw_ord,250,4119
  kw_uno,251,4129
  kw_ueq,252,4139
  kw_une,253,4149
  kw_xchg,256,4225
  kw_nand,257,4236
  kw_max,258,4247
  kw_min,259,4257
  kw_umax,260,4267
  kw_umin,261,4278
  kw_fmax,262,4289
  kw_fmin,263,4300
  kw_uinc_wrap,264,4311
  kw_udec_wrap,265,4327
  kw_fneg,268,4390
  kw_add,269,4401
  kw_fadd,270,4411
  kw_sub,271,4422
  kw_fsub,272,4432
  kw_mul,273,4443
  kw_fmul,274,4453
  kw_udiv,275,4464
  kw_sdiv,276,4475
  kw_fdiv,277,4486
  kw_urem,278,4497
  kw_srem,279,4508
  kw_frem,280,4519
  kw_shl,281,4530
  kw_lshr,282,4540
  kw_ashr,283,4551
  kw_and,284,4562
  kw_or,285,4572
  kw_xor,286,4581
  kw_icmp,287,4591
  kw_fcmp,288,4602
  kw_phi,290,4614
  kw_call,291,4624
  kw_trunc,292,4635
  kw_zext,293,4647
  kw_sext,294,4658
  kw_fptrunc,295,4669
  kw_fpext,296,4683
  kw_uitofp,297,4695
  kw_sitofp,298,4708
  kw_fptoui,299,4721
  kw_fptosi,300,4734
  kw_inttoptr,301,4747
  kw_ptrtoint,302,4762
  kw_bitcast,303,4777
  kw_addrspacecast,304,4791
  kw_select,305,4811
  kw_va_arg,306,4824
  kw_landingpad,308,4838
  kw_personality,309,4855
  kw_cleanup,310,4873
  kw_catch,311,4887
  kw_filter,312,4899
  kw_ret,314,4913
  kw_br,315,4923
  kw_switch,316,4932
  kw_indirectbr,317,4945
  kw_invoke,318,4962
  kw_resume,319,4975
  kw_unreachable,320,4988
  kw_cleanupret,321,5006
  kw_catchswitch,322,5023
  kw_catchret,323,5041
  kw_catchpad,324,5056
  kw_cleanuppad,325,5071
  kw_callbr,326,5088
  kw_alloca,328,5102
  kw_load,329,5115
  kw_store,330,5126
  kw_fence,331,5138
  kw_cmpxchg,332,5150
  kw_atomicrmw,333,5164
  kw_getelementptr,334,5180
  kw_extractelement,336,5201
  kw_insertelement,337,5222
  kw_shufflevector,338,5242
  kw_splat,339,5262
  kw_extractvalue,340,5274
  kw_insertvalue,341,5293
  kw_blockaddress,342,5311
  kw_dso_local_equivalent,343,5330
  kw_no_cfi,344,5357
  kw_freeze,346,5371
  kw_distinct,349,5406
  kw_uselistorder,352,5454
  kw_uselistorder_bb,353,5473
  kw_path,356,5524
  kw_hash,357,5535
  kw_gv,358,5546
  kw_guid,359,5555
  kw_name,360,5566
  kw_summaries,361,5577
  kw_flags,362,5593
  kw_blockcount,363,5605
  kw_linkage,364,5622
  kw_visibility,365,5636
  kw_notEligibleToImport,366,5653
  kw_live,367,5679
  kw_dsoLocal,368,5690
  kw_canAutoHide,369,5705
  kw_function,370,5723
  kw_insts,371,5738
  kw_funcFlags,372,5750
  kw_readNone,373,5766
  kw_readOnly,374,5781
  kw_noRecurse,375,5796
  kw_returnDoesNotAlias,376,5812
  kw_noInline,377,5837
  kw_alwaysInline,378,5852
  kw_noUnwind,379,5871
  kw_mayThrow,380,5886
  kw_hasUnknownCall,381,5901
  kw_mustBeUnreachable,382,5922
  kw_calls,383,5946
  kw_callee,384,5958
  kw_params,385,5971
  kw_param,386,5984
  kw_hotness,387,5996
  kw_unknown,388,6010
  kw_critical,389,6024
  kw_relbf,390,6039
  kw_variable,391,6051
  kw_vTableFuncs,392,6066
  kw_virtFunc,393,6084
  kw_aliasee,394,6099
  kw_refs,395,6113
  kw_typeIdInfo,396,6124
  kw_typeTests,397,6141
  kw_typeTestAssumeVCalls,398,6157
  kw_typeCheckedLoadVCalls,399,6184
  kw_typeTestAssumeConstVCalls,400,6212
  kw_typeCheckedLoadConstVCalls,401,6244
  kw_vFuncId,402,6277
  kw_offset,403,6291
  kw_args,404,6304
  kw_typeid,405,6315
  kw_typeidCompatibleVTable,406,6328
  kw_summary,407,6357
  kw_typeTestRes,408,6371
  kw_kind,409,6389
  kw_unsat,410,6400
  kw_byteArray,411,6412
  kw_inline,412,6428
  kw_single,413,6441
  kw_allOnes,414,6454
  kw_sizeM1BitWidth,415,6468
  kw_alignLog2,416,6489
  kw_sizeM1,417,6505
  kw_bitMask,418,6518
  kw_inlineBits,419,6532
  kw_vcall_visibility,420,6549
  kw_wpdResolutions,421,6572
  kw_wpdRes,422,6593
  kw_indir,423,6606
  kw_singleImpl,424,6618
  kw_branchFunnel,425,6635
  kw_singleImplName,426,6654
  kw_resByArg,427,6675
  kw_byArg,428,6690
  kw_uniformRetVal,429,6702
  kw_uniqueRetVal,430,6722
  kw_virtualConstProp,431,6741
  kw_info,432,6764
  kw_byte,433,6775
  kw_bit,434,6786
  kw_varFlags,435,6796
  kw_callsites,437,6864
  kw_clones,438,6880
  kw_stackIds,439,6893
  kw_allocs,440,6908
  kw_versions,441,6921
  kw_memProf,442,6936
  kw_notcold,443,6950
  kw_no_sanitize_address,447,7083
  kw_no_sanitize_hwaddress,450,7231
  kw_sanitize_address_dyninit,453,7395
  LabelID,456,7466
  GlobalID,457,7487
  LocalVarID,458,7508
  AttrGrpID,459,7529
  SummaryID,460,7550
  LabelStr,463,7608
  GlobalVar,464,7636
  ComdatVar,465,7671
  LocalVar,466,7699
  MetadataVar,467,7734
  StringConstant,468,7762
  DwarfTag,469,7791
  DwarfAttEncoding,470,7825
  DwarfVirtuality,471,7859
  DwarfLang,472,7900
  DwarfCC,473,7935
  EmissionKind,474,7968
  NameTableKind,475,8006
  DwarfOp,476,8033
  DIFlag,477,8066
  DISPFlag,478,8099
  DwarfMacinfo,479,8134
  ChecksumKind,480,8172
  Type,483,8237
  APFloat,485,8246
  APSInt 486,8271

/usr/include/llvm/AsmParser/Parser.h,231
#define LLVM_ASMPARSER_PARSER_H14,553
typedef llvm::function_ref<std::optional<std::optional32,868
struct ParsedModuleAndIndex 68,2897
  std::unique_ptr<Module> Mod;69,2927
  std::unique_ptr<ModuleSummaryIndex> Index;70,2958

/usr/include/llvm/BinaryFormat/AMDGPUMetadataVerifier.h,405
#define LLVM_BINARYFORMAT_AMDGPUMETADATAVERIFIER_H17,740
class MetadataVerifier 44,1296
  bool Strict;45,1321
  bool verifyScalar(47,1337
  bool verifyInteger(49,1480
  bool verifyArray(50,1526
  bool verifyEntry(53,1702
  verifyScalarEntry(56,1859
  bool verifyIntegerEntry(59,2058
  bool verifyKernelArgs(61,2171
  bool verifyKernel(62,2220
  MetadataVerifier(67,2370
  bool verify(72,2531

/usr/include/llvm/BinaryFormat/COFF.h,19544
#define LLVM_BINARYFORMAT_COFF_H23,935
static const char ClGlObjMagic[ClGlObjMagic42,1472
static const char WinResMagic[WinResMagic48,1696
  Header16Size 55,1935
  Header32Size 56,1956
  NameSize 57,1977
  Symbol16Size 58,1993
  Symbol32Size 59,2014
  SectionSize 60,2035
  RelocationSize 61,2055
struct header 64,2081
  uint16_t Machine;65,2097
  int32_t NumberOfSections;66,2117
  uint32_t TimeDateStamp;67,2145
  uint32_t PointerToSymbolTable;68,2171
  uint32_t NumberOfSymbols;69,2204
  uint16_t SizeOfOptionalHeader;70,2232
  uint16_t Characteristics;71,2265
struct BigObjHeader 74,2297
  enum : uint16_t 75,2319
  enum : uint16_t { MinBigObjectVersion 75,2319
  uint16_t Sig1;77,2367
  uint16_t Sig2;78,2429
  uint16_t Version;79,2467
  uint16_t Machine;80,2487
  uint32_t TimeDateStamp;81,2507
  uint8_t UUID[UUID82,2533
  uint32_t unused1;83,2553
  uint32_t unused2;84,2573
  uint32_t unused3;85,2593
  uint32_t unused4;86,2613
  uint32_t NumberOfSections;87,2633
  uint32_t PointerToSymbolTable;88,2662
  uint32_t NumberOfSymbols;89,2695
enum MachineTypes 92,2727
  MT_Invalid 93,2758
  IMAGE_FILE_MACHINE_UNKNOWN 95,2782
  IMAGE_FILE_MACHINE_AM33 96,2818
  IMAGE_FILE_MACHINE_AMD64 97,2853
  IMAGE_FILE_MACHINE_ARM 98,2890
  IMAGE_FILE_MACHINE_ARMNT 99,2924
  IMAGE_FILE_MACHINE_ARM64 100,2960
  IMAGE_FILE_MACHINE_ARM64EC 101,2997
  IMAGE_FILE_MACHINE_ARM64X 102,3036
  IMAGE_FILE_MACHINE_EBC 103,3074
  IMAGE_FILE_MACHINE_I386 104,3108
  IMAGE_FILE_MACHINE_IA64 105,3143
  IMAGE_FILE_MACHINE_M32R 106,3178
  IMAGE_FILE_MACHINE_MIPS16 107,3214
  IMAGE_FILE_MACHINE_MIPSFPU 108,3251
  IMAGE_FILE_MACHINE_MIPSFPU16 109,3289
  IMAGE_FILE_MACHINE_POWERPC 110,3329
  IMAGE_FILE_MACHINE_POWERPCFP 111,3367
  IMAGE_FILE_MACHINE_R4000 112,3407
  IMAGE_FILE_MACHINE_RISCV32 113,3443
  IMAGE_FILE_MACHINE_RISCV64 114,3482
  IMAGE_FILE_MACHINE_RISCV128 115,3521
  IMAGE_FILE_MACHINE_SH3 116,3561
  IMAGE_FILE_MACHINE_SH3DSP 117,3595
  IMAGE_FILE_MACHINE_SH4 118,3632
  IMAGE_FILE_MACHINE_SH5 119,3666
  IMAGE_FILE_MACHINE_THUMB 120,3700
  IMAGE_FILE_MACHINE_WCEMIPSV2 121,3736
template <typename T> bool isArm64EC(124,3779
template <typename T> bool isAnyArm64(129,3929
template <typename T> bool is64Bit(133,4051
enum Characteristics 137,4171
  C_Invalid 138,4205
  IMAGE_FILE_RELOCS_STRIPPED 142,4367
  IMAGE_FILE_EXECUTABLE_IMAGE 144,4446
  IMAGE_FILE_LINE_NUMS_STRIPPED 147,4572
  IMAGE_FILE_LOCAL_SYMS_STRIPPED 150,4725
  IMAGE_FILE_AGGRESSIVE_WS_TRIM 152,4839
  IMAGE_FILE_LARGE_ADDRESS_AWARE 154,4922
  IMAGE_FILE_BYTES_REVERSED_LO 157,5064
  IMAGE_FILE_32BIT_MACHINE 159,5158
  IMAGE_FILE_DEBUG_STRIPPED 161,5234
  IMAGE_FILE_REMOVABLE_RUN_FROM_SWAP 163,5349
  IMAGE_FILE_NET_RUN_FROM_SWAP 165,5471
  IMAGE_FILE_SYSTEM 167,5571
  IMAGE_FILE_DLL 169,5632
  IMAGE_FILE_UP_SYSTEM_ONLY 171,5721
  IMAGE_FILE_BYTES_REVERSED_HI 174,5855
enum ResourceTypeID 177,5899
  RID_Cursor 178,5932
  RID_Bitmap 179,5950
  RID_Icon 180,5968
  RID_Menu 181,5984
  RID_Dialog 182,6000
  RID_String 183,6018
  RID_FontDir 184,6036
  RID_Font 185,6055
  RID_Accelerator 186,6071
  RID_RCData 187,6094
  RID_MessageTable 188,6113
  RID_Group_Cursor 189,6138
  RID_Group_Icon 190,6163
  RID_Version 191,6186
  RID_DLGInclude 192,6206
  RID_PlugPlay 193,6229
  RID_VXD 194,6250
  RID_AniCursor 195,6266
  RID_AniIcon 196,6288
  RID_HTML 197,6308
  RID_Manifest 198,6325
struct symbol 201,6350
  char Name[Name202,6366
  uint32_t Value;203,6389
  int32_t SectionNumber;204,6407
  uint16_t Type;205,6432
  uint8_t StorageClass;206,6449
  uint8_t NumberOfAuxSymbols;207,6473
enum SymbolSectionNumber 210,6507
  IMAGE_SYM_DEBUG 211,6544
  IMAGE_SYM_ABSOLUTE 212,6568
  IMAGE_SYM_UNDEFINED 213,6595
enum SymbolStorageClass 217,6686
  SSC_Invalid 218,6712
  IMAGE_SYM_CLASS_END_OF_FUNCTION 220,6735
  IMAGE_SYM_CLASS_NULL 221,6806
  IMAGE_SYM_CLASS_AUTOMATIC 222,6862
  IMAGE_SYM_CLASS_EXTERNAL 223,6923
  IMAGE_SYM_CLASS_STATIC 224,6985
  IMAGE_SYM_CLASS_REGISTER 225,7038
  IMAGE_SYM_CLASS_EXTERNAL_DEF 226,7102
  IMAGE_SYM_CLASS_LABEL 227,7168
  IMAGE_SYM_CLASS_UNDEFINED_LABEL 228,7220
  IMAGE_SYM_CLASS_MEMBER_OF_STRUCT 229,7282
  IMAGE_SYM_CLASS_ARGUMENT 230,7348
  IMAGE_SYM_CLASS_STRUCT_TAG 231,7412
  IMAGE_SYM_CLASS_MEMBER_OF_UNION 232,7472
  IMAGE_SYM_CLASS_UNION_TAG 233,7534
  IMAGE_SYM_CLASS_TYPE_DEFINITION 234,7590
  IMAGE_SYM_CLASS_UNDEFINED_STATIC 235,7652
  IMAGE_SYM_CLASS_ENUM_TAG 236,7715
  IMAGE_SYM_CLASS_MEMBER_OF_ENUM 237,7777
  IMAGE_SYM_CLASS_REGISTER_PARAM 238,7845
  IMAGE_SYM_CLASS_BIT_FIELD 239,7910
  IMAGE_SYM_CLASS_BLOCK 241,8015
  IMAGE_SYM_CLASS_FUNCTION 243,8098
  IMAGE_SYM_CLASS_END_OF_STRUCT 244,8132
  IMAGE_SYM_CLASS_FILE 245,8193
  IMAGE_SYM_CLASS_SECTION 247,8288
  IMAGE_SYM_CLASS_WEAK_EXTERNAL 248,8321
  IMAGE_SYM_CLASS_CLR_TOKEN 250,8421
enum SymbolBaseType 253,8459
  IMAGE_SYM_TYPE_NULL 254,8492
  IMAGE_SYM_TYPE_VOID 255,8568
  IMAGE_SYM_TYPE_CHAR 256,8641
  IMAGE_SYM_TYPE_SHORT 257,8702
  IMAGE_SYM_TYPE_INT 258,8761
  IMAGE_SYM_TYPE_LONG 259,8833
  IMAGE_SYM_TYPE_FLOAT 260,8892
  IMAGE_SYM_TYPE_DOUBLE 261,8958
  IMAGE_SYM_TYPE_STRUCT 262,9025
  IMAGE_SYM_TYPE_UNION 263,9072
  IMAGE_SYM_TYPE_ENUM 264,9116
  IMAGE_SYM_TYPE_MOE 265,9170
  IMAGE_SYM_TYPE_BYTE 266,9248
  IMAGE_SYM_TYPE_WORD 267,9315
  IMAGE_SYM_TYPE_UINT 268,9382
  IMAGE_SYM_TYPE_DWORD 269,9453
enum SymbolComplexType 272,9519
  IMAGE_SYM_DTYPE_NULL 273,9555
  IMAGE_SYM_DTYPE_POINTER 274,9633
  IMAGE_SYM_DTYPE_FUNCTION 275,9694
  IMAGE_SYM_DTYPE_ARRAY 276,9768
  SCT_COMPLEX_TYPE_SHIFT 279,9898
enum AuxSymbolType 282,9931
enum AuxSymbolType { IMAGE_AUX_SYMBOL_TYPE_TOKEN_DEF 282,9931
struct section 284,9992
  char Name[Name285,10009
  uint32_t VirtualSize;286,10032
  uint32_t VirtualAddress;287,10056
  uint32_t SizeOfRawData;288,10083
  uint32_t PointerToRawData;289,10109
  uint32_t PointerToRelocations;290,10138
  uint32_t PointerToLineNumbers;291,10171
  uint16_t NumberOfRelocations;292,10204
  uint16_t NumberOfLineNumbers;293,10236
  uint32_t Characteristics;294,10268
enum SectionCharacteristics 297,10300
  SC_Invalid 298,10341
  IMAGE_SCN_TYPE_NOLOAD 300,10369
  IMAGE_SCN_TYPE_NO_PAD 301,10407
  IMAGE_SCN_CNT_CODE 302,10445
  IMAGE_SCN_CNT_INITIALIZED_DATA 303,10480
  IMAGE_SCN_CNT_UNINITIALIZED_DATA 304,10527
  IMAGE_SCN_LNK_OTHER 305,10576
  IMAGE_SCN_LNK_INFO 306,10612
  IMAGE_SCN_LNK_REMOVE 307,10647
  IMAGE_SCN_LNK_COMDAT 308,10684
  IMAGE_SCN_GPREL 309,10721
  IMAGE_SCN_MEM_PURGEABLE 310,10753
  IMAGE_SCN_MEM_16BIT 311,10793
  IMAGE_SCN_MEM_LOCKED 312,10829
  IMAGE_SCN_MEM_PRELOAD 313,10866
  IMAGE_SCN_ALIGN_1BYTES 314,10904
  IMAGE_SCN_ALIGN_2BYTES 315,10943
  IMAGE_SCN_ALIGN_4BYTES 316,10982
  IMAGE_SCN_ALIGN_8BYTES 317,11021
  IMAGE_SCN_ALIGN_16BYTES 318,11060
  IMAGE_SCN_ALIGN_32BYTES 319,11100
  IMAGE_SCN_ALIGN_64BYTES 320,11140
  IMAGE_SCN_ALIGN_128BYTES 321,11180
  IMAGE_SCN_ALIGN_256BYTES 322,11221
  IMAGE_SCN_ALIGN_512BYTES 323,11262
  IMAGE_SCN_ALIGN_1024BYTES 324,11303
  IMAGE_SCN_ALIGN_2048BYTES 325,11345
  IMAGE_SCN_ALIGN_4096BYTES 326,11387
  IMAGE_SCN_ALIGN_8192BYTES 327,11429
  IMAGE_SCN_ALIGN_MASK 328,11471
  IMAGE_SCN_LNK_NRELOC_OVFL 329,11508
  IMAGE_SCN_MEM_DISCARDABLE 330,11550
  IMAGE_SCN_MEM_NOT_CACHED 331,11592
  IMAGE_SCN_MEM_NOT_PAGED 332,11633
  IMAGE_SCN_MEM_SHARED 333,11673
  IMAGE_SCN_MEM_EXECUTE 334,11710
  IMAGE_SCN_MEM_READ 335,11748
  IMAGE_SCN_MEM_WRITE 336,11783
struct relocation 339,11822
  uint32_t VirtualAddress;340,11842
  uint32_t SymbolTableIndex;341,11869
  uint16_t Type;342,11898
enum RelocationTypeI386 345,11919
  IMAGE_REL_I386_ABSOLUTE 346,11956
  IMAGE_REL_I386_DIR16 347,11992
  IMAGE_REL_I386_REL16 348,12025
  IMAGE_REL_I386_DIR32 349,12058
  IMAGE_REL_I386_DIR32NB 350,12091
  IMAGE_REL_I386_SEG12 351,12126
  IMAGE_REL_I386_SECTION 352,12159
  IMAGE_REL_I386_SECREL 353,12194
  IMAGE_REL_I386_TOKEN 354,12228
  IMAGE_REL_I386_SECREL7 355,12261
  IMAGE_REL_I386_REL32 356,12296
enum RelocationTypeAMD64 359,12332
  IMAGE_REL_AMD64_ABSOLUTE 360,12370
  IMAGE_REL_AMD64_ADDR64 361,12407
  IMAGE_REL_AMD64_ADDR32 362,12442
  IMAGE_REL_AMD64_ADDR32NB 363,12477
  IMAGE_REL_AMD64_REL32 364,12514
  IMAGE_REL_AMD64_REL32_1 365,12548
  IMAGE_REL_AMD64_REL32_2 366,12584
  IMAGE_REL_AMD64_REL32_3 367,12620
  IMAGE_REL_AMD64_REL32_4 368,12656
  IMAGE_REL_AMD64_REL32_5 369,12692
  IMAGE_REL_AMD64_SECTION 370,12728
  IMAGE_REL_AMD64_SECREL 371,12764
  IMAGE_REL_AMD64_SECREL7 372,12799
  IMAGE_REL_AMD64_TOKEN 373,12835
  IMAGE_REL_AMD64_SREL32 374,12869
  IMAGE_REL_AMD64_PAIR 375,12904
  IMAGE_REL_AMD64_SSPAN32 376,12937
enum RelocationTypesARM 379,12976
  IMAGE_REL_ARM_ABSOLUTE 380,13013
  IMAGE_REL_ARM_ADDR32 381,13048
  IMAGE_REL_ARM_ADDR32NB 382,13081
  IMAGE_REL_ARM_BRANCH24 383,13116
  IMAGE_REL_ARM_BRANCH11 384,13151
  IMAGE_REL_ARM_TOKEN 385,13186
  IMAGE_REL_ARM_BLX24 386,13218
  IMAGE_REL_ARM_BLX11 387,13250
  IMAGE_REL_ARM_REL32 388,13282
  IMAGE_REL_ARM_SECTION 389,13314
  IMAGE_REL_ARM_SECREL 390,13348
  IMAGE_REL_ARM_MOV32A 391,13381
  IMAGE_REL_ARM_MOV32T 392,13414
  IMAGE_REL_ARM_BRANCH20T 393,13447
  IMAGE_REL_ARM_BRANCH24T 394,13483
  IMAGE_REL_ARM_BLX23T 395,13519
  IMAGE_REL_ARM_PAIR 396,13552
enum RelocationTypesARM64 399,13587
  IMAGE_REL_ARM64_ABSOLUTE 400,13626
  IMAGE_REL_ARM64_ADDR32 401,13663
  IMAGE_REL_ARM64_ADDR32NB 402,13698
  IMAGE_REL_ARM64_BRANCH26 403,13735
  IMAGE_REL_ARM64_PAGEBASE_REL21 404,13772
  IMAGE_REL_ARM64_REL21 405,13815
  IMAGE_REL_ARM64_PAGEOFFSET_12A 406,13849
  IMAGE_REL_ARM64_PAGEOFFSET_12L 407,13892
  IMAGE_REL_ARM64_SECREL 408,13935
  IMAGE_REL_ARM64_SECREL_LOW12A 409,13970
  IMAGE_REL_ARM64_SECREL_HIGH12A 410,14012
  IMAGE_REL_ARM64_SECREL_LOW12L 411,14055
  IMAGE_REL_ARM64_TOKEN 412,14097
  IMAGE_REL_ARM64_SECTION 413,14131
  IMAGE_REL_ARM64_ADDR64 414,14167
  IMAGE_REL_ARM64_BRANCH19 415,14202
  IMAGE_REL_ARM64_BRANCH14 416,14239
  IMAGE_REL_ARM64_REL32 417,14276
enum COMDATType 420,14314
  IMAGE_COMDAT_SELECT_NODUPLICATES 421,14342
  IMAGE_COMDAT_SELECT_ANY,422,14382
  IMAGE_COMDAT_SELECT_SAME_SIZE,423,14409
  IMAGE_COMDAT_SELECT_EXACT_MATCH,424,14442
  IMAGE_COMDAT_SELECT_ASSOCIATIVE,425,14477
  IMAGE_COMDAT_SELECT_LARGEST,426,14512
  IMAGE_COMDAT_SELECT_NEWEST427,14543
struct AuxiliaryFunctionDefinition 431,14604
  uint32_t TagIndex;432,14641
  uint32_t TotalSize;433,14662
  uint32_t PointerToLinenumber;434,14684
  uint32_t PointerToNextFunction;435,14716
  char unused[unused436,14750
struct AuxiliarybfAndefSymbol 439,14772
  uint8_t unused1[unused1440,14804
  uint16_t Linenumber;441,14826
  uint8_t unused2[unused2442,14849
  uint32_t PointerToNextFunction;443,14871
  uint8_t unused3[unused3444,14905
struct AuxiliaryWeakExternal 447,14931
  uint32_t TagIndex;448,14962
  uint32_t Characteristics;449,14983
  uint8_t unused[unused450,15011
enum WeakExternalCharacteristics 453,15037
  IMAGE_WEAK_EXTERN_SEARCH_NOLIBRARY 454,15083
  IMAGE_WEAK_EXTERN_SEARCH_LIBRARY 455,15125
  IMAGE_WEAK_EXTERN_SEARCH_ALIAS 456,15165
  IMAGE_WEAK_EXTERN_ANTI_DEPENDENCY 457,15203
struct AuxiliarySectionDefinition 460,15247
  uint32_t Length;461,15283
  uint16_t NumberOfRelocations;462,15302
  uint16_t NumberOfLinenumbers;463,15334
  uint32_t CheckSum;464,15366
  uint32_t Number;465,15387
  uint8_t Selection;466,15406
  char unused;467,15427
struct AuxiliaryCLRToken 470,15446
  uint8_t AuxType;471,15473
  uint8_t unused1;472,15492
  uint32_t SymbolTableIndex;473,15511
  char unused2[unused2474,15540
union Auxiliary 477,15564
  AuxiliaryFunctionDefinition FunctionDefinition;478,15582
  AuxiliarybfAndefSymbol bfAndefSymbol;479,15632
  AuxiliaryWeakExternal WeakExternal;480,15672
  AuxiliarySectionDefinition SectionDefinition;481,15710
struct ImportDirectoryTableEntry 487,15867
  uint32_t ImportLookupTableRVA;488,15902
  uint32_t TimeDateStamp;489,15935
  uint32_t ForwarderChain;490,15961
  uint32_t NameRVA;491,15988
  uint32_t ImportAddressTableRVA;492,16008
struct ImportLookupTableEntry32 503,16394
  uint32_t data;504,16428
  bool isOrdinal(507,16497
  uint16_t getOrdinal(510,16620
  void setOrdinal(516,16797
  uint32_t getHintNameRVA(522,16932
  void setHintNameRVA(528,17117
struct DOSHeader 532,17228
  uint16_t Magic;533,17247
  uint16_t UsedBytesInTheLastPage;534,17265
  uint16_t FileSizeInPages;535,17300
  uint16_t NumberOfRelocationItems;536,17328
  uint16_t HeaderSizeInParagraphs;537,17364
  uint16_t MinimumExtraParagraphs;538,17399
  uint16_t MaximumExtraParagraphs;539,17434
  uint16_t InitialRelativeSS;540,17469
  uint16_t InitialSP;541,17499
  uint16_t Checksum;542,17521
  uint16_t InitialIP;543,17542
  uint16_t InitialRelativeCS;544,17564
  uint16_t AddressOfRelocationTable;545,17594
  uint16_t OverlayNumber;546,17631
  uint16_t Reserved[Reserved547,17657
  uint16_t OEMid;548,17681
  uint16_t OEMinfo;549,17699
  uint16_t Reserved2[Reserved2550,17719
  uint32_t AddressOfNewExeHeader;551,17745
struct PE32Header 554,17783
  enum { PE32 555,17803
  enum { PE32 = 0x10b, PE32_PLUS 555,17803
  uint16_t Magic;557,17848
  uint8_t MajorLinkerVersion;558,17866
  uint8_t MinorLinkerVersion;559,17896
  uint32_t SizeOfCode;560,17926
  uint32_t SizeOfInitializedData;561,17949
  uint32_t SizeOfUninitializedData;562,17983
  uint32_t AddressOfEntryPoint;563,18019
  uint32_t BaseOfCode;564,18058
  uint32_t BaseOfData;565,18097
  uint64_t ImageBase;566,18136
  uint32_t SectionAlignment;567,18158
  uint32_t FileAlignment;568,18187
  uint16_t MajorOperatingSystemVersion;569,18213
  uint16_t MinorOperatingSystemVersion;570,18253
  uint16_t MajorImageVersion;571,18293
  uint16_t MinorImageVersion;572,18323
  uint16_t MajorSubsystemVersion;573,18353
  uint16_t MinorSubsystemVersion;574,18387
  uint32_t Win32VersionValue;575,18421
  uint32_t SizeOfImage;576,18451
  uint32_t SizeOfHeaders;577,18475
  uint32_t CheckSum;578,18501
  uint16_t Subsystem;579,18522
  uint16_t DLLCharacteristics;581,18614
  uint64_t SizeOfStackReserve;582,18645
  uint64_t SizeOfStackCommit;583,18676
  uint64_t SizeOfHeapReserve;584,18706
  uint64_t SizeOfHeapCommit;585,18736
  uint32_t LoaderFlags;586,18765
  uint32_t NumberOfRvaAndSize;588,18860
struct DataDirectory 591,18895
  uint32_t RelativeVirtualAddress;592,18918
  uint32_t Size;593,18953
enum DataDirectoryIndex 596,18974
  EXPORT_TABLE 597,19011
  IMPORT_TABLE,598,19031
  RESOURCE_TABLE,599,19047
  EXCEPTION_TABLE,600,19065
  CERTIFICATE_TABLE,601,19084
  BASE_RELOCATION_TABLE,602,19105
  DEBUG_DIRECTORY,603,19130
  ARCHITECTURE,604,19149
  GLOBAL_PTR,605,19165
  TLS_TABLE,606,19179
  LOAD_CONFIG_TABLE,607,19192
  BOUND_IMPORT,608,19213
  IAT,609,19229
  DELAY_IMPORT_DESCRIPTOR,610,19236
  CLR_RUNTIME_HEADER,611,19263
  NUM_DATA_DIRECTORIES613,19286
enum WindowsSubsystem 616,19313
  IMAGE_SUBSYSTEM_UNKNOWN 617,19348
  IMAGE_SUBSYSTEM_NATIVE 618,19406
  IMAGE_SUBSYSTEM_WINDOWS_GUI 619,19486
  IMAGE_SUBSYSTEM_WINDOWS_CUI 620,19558
  IMAGE_SUBSYSTEM_OS2_CUI 621,19636
  IMAGE_SUBSYSTEM_POSIX_CUI 622,19711
  IMAGE_SUBSYSTEM_NATIVE_WINDOWS 623,19787
  IMAGE_SUBSYSTEM_WINDOWS_CE_GUI 624,19858
  IMAGE_SUBSYSTEM_EFI_APPLICATION 625,19915
  IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER 626,19980
  IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER 628,20120
  IMAGE_SUBSYSTEM_EFI_ROM 630,20264
  IMAGE_SUBSYSTEM_XBOX 631,20335
  IMAGE_SUBSYSTEM_WINDOWS_BOOT_APPLICATION 632,20394
enum DLLCharacteristics 635,20470
  IMAGE_DLL_CHARACTERISTICS_HIGH_ENTROPY_VA 637,20545
  IMAGE_DLL_CHARACTERISTICS_DYNAMIC_BASE 639,20640
  IMAGE_DLL_CHARACTERISTICS_FORCE_INTEGRITY 641,20733
  IMAGE_DLL_CHARACTERISTICS_NX_COMPAT 643,20818
  IMAGE_DLL_CHARACTERISTICS_NO_ISOLATION 645,20919
  IMAGE_DLL_CHARACTERISTICS_NO_SEH 648,21076
  IMAGE_DLL_CHARACTERISTICS_NO_BIND 650,21150
  IMAGE_DLL_CHARACTERISTICS_APPCONTAINER 652,21244
  IMAGE_DLL_CHARACTERISTICS_WDM_DRIVER 654,21316
  IMAGE_DLL_CHARACTERISTICS_GUARD_CF 656,21407
  IMAGE_DLL_CHARACTERISTICS_TERMINAL_SERVER_AWARE 658,21483
enum ExtendedDLLCharacteristics 661,21546
  IMAGE_DLL_CHARACTERISTICS_EX_CET_COMPAT 663,21621
enum DebugType 666,21676
  IMAGE_DEBUG_TYPE_UNKNOWN 667,21704
  IMAGE_DEBUG_TYPE_COFF 668,21736
  IMAGE_DEBUG_TYPE_CODEVIEW 669,21765
  IMAGE_DEBUG_TYPE_FPO 670,21798
  IMAGE_DEBUG_TYPE_MISC 671,21826
  IMAGE_DEBUG_TYPE_EXCEPTION 672,21855
  IMAGE_DEBUG_TYPE_FIXUP 673,21889
  IMAGE_DEBUG_TYPE_OMAP_TO_SRC 674,21919
  IMAGE_DEBUG_TYPE_OMAP_FROM_SRC 675,21955
  IMAGE_DEBUG_TYPE_BORLAND 676,21993
  IMAGE_DEBUG_TYPE_RESERVED10 677,22025
  IMAGE_DEBUG_TYPE_CLSID 678,22061
  IMAGE_DEBUG_TYPE_VC_FEATURE 679,22092
  IMAGE_DEBUG_TYPE_POGO 680,22128
  IMAGE_DEBUG_TYPE_ILTCG 681,22158
  IMAGE_DEBUG_TYPE_MPX 682,22189
  IMAGE_DEBUG_TYPE_REPRO 683,22218
  IMAGE_DEBUG_TYPE_EX_DLLCHARACTERISTICS 684,22249
enum BaseRelocationType 687,22300
  IMAGE_REL_BASED_ABSOLUTE 688,22337
  IMAGE_REL_BASED_HIGH 689,22369
  IMAGE_REL_BASED_LOW 690,22397
  IMAGE_REL_BASED_HIGHLOW 691,22424
  IMAGE_REL_BASED_HIGHADJ 692,22455
  IMAGE_REL_BASED_MIPS_JMPADDR 693,22486
  IMAGE_REL_BASED_ARM_MOV32A 694,22522
  IMAGE_REL_BASED_ARM_MOV32T 695,22556
  IMAGE_REL_BASED_MIPS_JMPADDR16 696,22590
  IMAGE_REL_BASED_DIR64 697,22628
enum ImportType 700,22661
  IMPORT_CODE 701,22690
  IMPORT_DATA 702,22709
  IMPORT_CONST 703,22728
enum ImportNameType 706,22751
  IMPORT_ORDINAL 711,23046
  IMPORT_NAME 713,23129
  IMPORT_NAME_NOPREFIX 716,23251
  IMPORT_NAME_UNDECORATE 719,23413
enum class GuardFlags 722,23446
  CF_INSTRUMENTED 725,23570
  CFW_INSTRUMENTED 727,23660
  CF_FUNCTION_TABLE_PRESENT 729,23746
  SECURITY_COOKIE_UNUSED 731,23842
  PROTECT_DELAYLOAD_IAT 733,23924
  DELAYLOAD_IAT_IN_ITS_OWN_SECTION 736,24077
  CF_EXPORT_SUPPRESSION_INFO_PRESENT 739,24267
  CF_ENABLE_EXPORT_SUPPRESSION 741,24359
  CF_LONGJUMP_TABLE_PRESENT 743,24450
  EH_CONTINUATION_TABLE_PRESENT 745,24547
  CF_FUNCTION_TABLE_SIZE_MASK 749,24759
  CF_FUNCTION_TABLE_SIZE_5BYTES 750,24803
  CF_FUNCTION_TABLE_SIZE_6BYTES 751,24849
  CF_FUNCTION_TABLE_SIZE_7BYTES 752,24895
  CF_FUNCTION_TABLE_SIZE_8BYTES 753,24941
  CF_FUNCTION_TABLE_SIZE_9BYTES 754,24987
  CF_FUNCTION_TABLE_SIZE_10BYTES 755,25033
  CF_FUNCTION_TABLE_SIZE_11BYTES 756,25080
  CF_FUNCTION_TABLE_SIZE_12BYTES 757,25127
  CF_FUNCTION_TABLE_SIZE_13BYTES 758,25174
  CF_FUNCTION_TABLE_SIZE_14BYTES 759,25221
  CF_FUNCTION_TABLE_SIZE_15BYTES 760,25268
  CF_FUNCTION_TABLE_SIZE_16BYTES 761,25315
  CF_FUNCTION_TABLE_SIZE_17BYTES 762,25362
  CF_FUNCTION_TABLE_SIZE_18BYTES 763,25409
  CF_FUNCTION_TABLE_SIZE_19BYTES 764,25456
struct ImportHeader 767,25507
  uint16_t Sig1;768,25529
  uint16_t Sig2;769,25591
  uint16_t Version;770,25629
  uint16_t Machine;771,25649
  uint32_t TimeDateStamp;772,25669
  uint32_t SizeOfData;773,25695
  uint16_t OrdinalHint;774,25718
  uint16_t TypeInfo;775,25742
  ImportType getType(777,25764
  ImportNameType getNameType(779,25846
enum CodeViewIdentifiers 784,25957
  DEBUG_SECTION_MAGIC 785,25984
  DEBUG_HASHES_SECTION_MAGIC 786,26013
enum Feat00Flags 791,26184
  SafeSEH 793,26255
  GuardStack 795,26307
  SDL 797,26365
  GuardCF 799,26421
  GuardEHCont 801,26485
  Kernel 803,26548
inline bool isReservedSectionNumber(806,26575

/usr/include/llvm/BinaryFormat/Dwarf.h,7986
#define LLVM_BINARYFORMAT_DWARF_H20,800
enum LLVMConstants 44,1454
  DW_TAG_invalid 47,1556
  DW_VIRTUALITY_invalid 48,1617
  DW_MACINFO_invalid 49,1685
  DW_LENGTH_lo_reserved 54,1824
  DW_LENGTH_DWARF64 55,1902
  DW_LENGTH_hi_reserved 56,1979
  DWARF_VERSION 61,2099
  DW_PUBTYPES_VERSION 62,2164
  DW_PUBNAMES_VERSION 63,2240
  DW_ARANGES_VERSION 64,2316
  DWARF_VENDOR_DWARF 69,2469
  DWARF_VENDOR_APPLE 70,2546
  DWARF_VENDOR_BORLAND 71,2572
  DWARF_VENDOR_GNU 72,2600
  DWARF_VENDOR_GOOGLE 73,2624
  DWARF_VENDOR_LLVM 74,2651
  DWARF_VENDOR_MIPS 75,2676
  DWARF_VENDOR_WASM 76,2701
  DWARF_VENDOR_ALTIUM,77,2726
  DWARF_VENDOR_COMPAQ,78,2749
  DWARF_VENDOR_GHS,79,2772
  DWARF_VENDOR_GO,80,2792
  DWARF_VENDOR_HP,81,2811
  DWARF_VENDOR_IBM,82,2830
  DWARF_VENDOR_INTEL,83,2850
  DWARF_VENDOR_PGI,84,2872
  DWARF_VENDOR_SUN,85,2892
  DWARF_VENDOR_UPC,86,2912
enum DwarfFormat 91,3004
enum DwarfFormat : uint8_t { DWARF32,91,3004
enum DwarfFormat : uint8_t { DWARF32, DWARF64 91,3004
const uint32_t DW_CIE_ID 96,3188
const uint64_t DW64_CIE_ID 97,3227
const uint32_t DW_INVALID_OFFSET 101,3344
enum Tag 103,3392
#define HANDLE_DW_TAG(104,3414
  DW_TAG_lo_user 106,3528
  DW_TAG_hi_user 107,3555
  DW_TAG_user_base 108,3582
inline bool isType(111,3651
#define HANDLE_DW_TAG(115,3723
enum Attribute 123,3982
#define HANDLE_DW_AT(124,4010
  DW_AT_lo_user 126,4116
  DW_AT_hi_user 127,4142
enum Form 130,4172
#define HANDLE_DW_FORM(131,4195
  DW_FORM_lo_user 133,4305
enum LocationAtom 136,4366
#define HANDLE_DW_OP(137,4386
  DW_OP_lo_user 139,4492
  DW_OP_hi_user 140,4516
  DW_OP_LLVM_fragment 141,4540
  DW_OP_LLVM_convert 142,4613
  DW_OP_LLVM_tag_offset 143,4686
  DW_OP_LLVM_entry_value 144,4759
  DW_OP_LLVM_implicit_pointer 145,4832
  DW_OP_LLVM_arg 146,4905
enum LlvmUserLocationAtom 149,4982
#define HANDLE_DW_OP_LLVM_USEROP(150,5010
enum TypeKind 154,5120
#define HANDLE_DW_ATE(155,5146
  DW_ATE_lo_user 157,5254
  DW_ATE_hi_user 158,5279
enum DecimalSignEncoding 161,5307
  DW_DS_unsigned 163,5369
  DW_DS_leading_overpunch 164,5394
  DW_DS_trailing_overpunch 165,5428
  DW_DS_leading_separate 166,5463
  DW_DS_trailing_separate 167,5496
enum EndianityEncoding 170,5533
#define HANDLE_DW_END(172,5590
  DW_END_lo_user 174,5681
  DW_END_hi_user 175,5706
enum AccessAttribute 178,5734
  DW_ACCESS_public 180,5782
  DW_ACCESS_protected 181,5809
  DW_ACCESS_private 182,5839
enum VisibilityAttribute 185,5870
  DW_VIS_local 187,5919
  DW_VIS_exported 188,5942
  DW_VIS_qualified 189,5968
enum VirtualityAttribute 192,5998
#define HANDLE_DW_VIRTUALITY(193,6025
  DW_VIRTUALITY_max 195,6130
enum DefaultedMemberAttribute 198,6161
#define HANDLE_DW_DEFAULTED(199,6193
  DW_DEFAULTED_max 201,6296
enum SourceLanguage 204,6326
#define HANDLE_DW_LANG(205,6348
  DW_LANG_lo_user 208,6491
  DW_LANG_hi_user 209,6519
inline bool isCPlusPlus(212,6550
inline bool isFortran(279,8196
inline bool isC(346,9844
inline TypeKind getArrayIndexTypeEncoding(409,11461
enum CaseSensitivity 413,11583
  DW_ID_case_sensitive 415,11633
  DW_ID_up_case 416,11664
  DW_ID_down_case 417,11688
  DW_ID_case_insensitive 418,11714
enum CallingConvention 421,11750
#define HANDLE_DW_CC(423,11803
  DW_CC_lo_user 425,11892
  DW_CC_hi_user 426,11916
enum InlineAttribute 429,11943
  DW_INL_not_inlined 431,11984
  DW_INL_inlined 432,12013
  DW_INL_declared_not_inlined 433,12038
  DW_INL_declared_inlined 434,12076
enum ArrayDimensionOrdering 437,12113
  DW_ORD_row_major 439,12163
  DW_ORD_col_major 440,12190
enum DiscriminantList 443,12220
  DW_DSC_label 445,12280
  DW_DSC_range 446,12303
enum LineNumberOps 450,12372
#define HANDLE_DW_LNS(451,12403
enum LineNumberExtendedOps 456,12541
#define HANDLE_DW_LNE(457,12570
  DW_LNE_lo_user 459,12661
  DW_LNE_hi_user 460,12686
enum LineNumberEntryFormat 463,12714
#define HANDLE_DW_LNCT(464,12743
  DW_LNCT_lo_user 466,12836
  DW_LNCT_hi_user 467,12864
enum MacinfoRecordType 470,12896
  DW_MACINFO_define 472,12949
  DW_MACINFO_undef 473,12977
  DW_MACINFO_start_file 474,13004
  DW_MACINFO_end_file 475,13036
  DW_MACINFO_vendor_ext 476,13066
enum MacroEntryType 480,13154
#define HANDLE_DW_MACRO(481,13176
  DW_MACRO_lo_user 483,13271
  DW_MACRO_hi_user 484,13298
enum GnuMacroEntryType 488,13389
#define HANDLE_DW_MACRO_GNU(489,13414
  DW_MACRO_GNU_lo_user 491,13517
  DW_MACRO_GNU_hi_user 492,13548
enum RnglistEntries 496,13629
#define HANDLE_DW_RLE(497,13651
enum LoclistEntries 502,13791
#define HANDLE_DW_LLE(503,13813
enum CallFrameInfo 508,13946
#define HANDLE_DW_CFA(509,13967
#define HANDLE_DW_CFA_PRED(510,14019
  DW_CFA_extended 512,14121
  DW_CFA_lo_user 514,14148
  DW_CFA_hi_user 515,14173
enum Constants 518,14201
  DW_CHILDREN_no 520,14237
  DW_CHILDREN_yes 521,14262
  DW_EH_PE_absptr 523,14289
  DW_EH_PE_omit 524,14315
  DW_EH_PE_uleb128 525,14339
  DW_EH_PE_udata2 526,14366
  DW_EH_PE_udata4 527,14392
  DW_EH_PE_udata8 528,14418
  DW_EH_PE_sleb128 529,14444
  DW_EH_PE_sdata2 530,14471
  DW_EH_PE_sdata4 531,14497
  DW_EH_PE_sdata8 532,14523
  DW_EH_PE_signed 533,14549
  DW_EH_PE_pcrel 534,14575
  DW_EH_PE_textrel 535,14600
  DW_EH_PE_datarel 536,14627
  DW_EH_PE_funcrel 537,14654
  DW_EH_PE_aligned 538,14681
  DW_EH_PE_indirect 539,14708
enum ApplePropertyAttributes 545,14891
#define HANDLE_DW_APPLE_PROPERTY(546,14922
enum UnitType 551,15081
#define HANDLE_DW_UT(552,15113
  DW_UT_lo_user 554,15202
  DW_UT_hi_user 555,15226
enum Index 558,15253
#define HANDLE_DW_IDX(559,15266
  DW_IDX_lo_user 561,15357
  DW_IDX_hi_user 562,15384
inline bool isUnitType(565,15414
inline bool isUnitType(579,15671
enum AcceleratorTable 592,15945
  DW_ATOM_null 594,15999
  DW_ATOM_die_offset 595,16069
  DW_ATOM_cu_offset 596,16137
  DW_ATOM_die_tag 598,16265
  DW_ATOM_type_flags 599,16307
  DW_ATOM_type_type_flags 601,16363
  DW_ATOM_qual_name_hash 602,16423
  DW_FLAG_type_implementation 608,16619
  DW_hash_function_djb 613,16709
enum GDBIndexEntryKind 617,16817
  GIEK_NONE,618,16842
  GIEK_TYPE,619,16855
  GIEK_VARIABLE,620,16868
  GIEK_FUNCTION,621,16885
  GIEK_OTHER,622,16902
  GIEK_UNUSED5,623,16916
  GIEK_UNUSED6,624,16932
  GIEK_UNUSED7625,16948
enum GDBIndexEntryLinkage 628,16967
enum GDBIndexEntryLinkage { GIEL_EXTERNAL,628,16967
enum GDBIndexEntryLinkage { GIEL_EXTERNAL, GIEL_STATIC 628,16967
inline uint8_t getDwarfOffsetByteSize(730,21163
struct FormParams 743,21557
  uint16_t Version;744,21577
  uint8_t AddrSize;745,21597
  DwarfFormat Format;746,21617
  bool DwarfUsesRelocationsAcrossSections 749,21745
  uint8_t getRefAddrByteSize(754,21974
  uint8_t getDwarfOffsetByteSize(761,22175
  explicit operator bool(operator bool765,22273
inline uint8_t getUnitLengthFieldByteSize(769,22420
struct PubIndexEntryDescriptor 814,24150
  GDBIndexEntryKind Kind;815,24183
  GDBIndexEntryLinkage Linkage;816,24209
  PubIndexEntryDescriptor(817,24241
  /* implicit */ PubIndexEntryDescriptor(819,24361
  explicit PubIndexEntryDescriptor(821,24472
  uint8_t toBits(826,24763
    KIND_OFFSET 832,24873
    KIND_MASK 833,24894
    LINKAGE_OFFSET 834,24928
    LINKAGE_MASK 835,24952
template <typename Enum> struct EnumTraits 839,25000
template <> struct EnumTraits<EnumTraits841,25073
  static constexpr char Type[Type842,25140
template <> struct EnumTraits<EnumTraits846,25255
  static constexpr char Type[Type847,25317
template <> struct EnumTraits<EnumTraits851,25437
  static constexpr char Type[Type852,25500
template <> struct EnumTraits<EnumTraits856,25612
  static constexpr char Type[Type857,25673
template <> struct EnumTraits<EnumTraits861,25783
  static constexpr char Type[Type862,25854
template <> struct EnumTraits<EnumTraits866,25971
  static constexpr char Type[Type867,26041
inline uint64_t computeTombstoneAddress(871,26164
  static void format(884,26688

/usr/include/llvm/BinaryFormat/Minidump.h,5664
#define LLVM_BINARYFORMAT_MINIDUMP_H19,751
struct Header 32,1131
  support::ulittle32_t Signature;36,1264
  support::ulittle32_t Version;39,1411
  support::ulittle32_t NumberOfStreams;40,1443
  support::ulittle32_t StreamDirectoryRVA;41,1483
  support::ulittle32_t Checksum;42,1526
  support::ulittle32_t TimeDateStamp;43,1559
  support::ulittle64_t Flags;44,1597
enum class StreamType 50,1808
#define HANDLE_MDMP_STREAM_TYPE(51,1843
  Unused 53,1951
  LastReserved 54,1965
struct LocationDescriptor 59,2132
  support::ulittle32_t DataSize;60,2160
  support::ulittle32_t RVA;61,2193
struct MemoryDescriptor 67,2428
  support::ulittle64_t StartOfMemoryRange;68,2454
  LocationDescriptor Memory;69,2497
struct MemoryInfoListHeader 73,2577
  support::ulittle32_t SizeOfHeader;74,2607
  support::ulittle32_t SizeOfEntry;75,2644
  support::ulittle64_t NumberOfEntries;76,2680
  MemoryInfoListHeader(79,2757
enum class MemoryProtection 86,3035
#define HANDLE_MDMP_PROTECT(87,3076
  LLVM_MARK_AS_BITMASK_ENUM(89,3192
  LLVM_MARK_AS_BITMASK_ENUM(/*LargestValue=*/0xffffffffu)xffffffffu89,3192
enum class MemoryState 92,3255
#define HANDLE_MDMP_MEMSTATE(93,3291
  LLVM_MARK_AS_BITMASK_ENUM(95,3408
  LLVM_MARK_AS_BITMASK_ENUM(/*LargestValue=*/0xffffffffu)xffffffffu95,3408
enum class MemoryType 98,3471
#define HANDLE_MDMP_MEMTYPE(99,3506
  LLVM_MARK_AS_BITMASK_ENUM(101,3622
  LLVM_MARK_AS_BITMASK_ENUM(/*LargestValue=*/0xffffffffu)xffffffffu101,3622
struct MemoryInfo 104,3685
  support::ulittle64_t BaseAddress;105,3705
  support::ulittle64_t AllocationBase;106,3741
  support::little_t<MemoryProtection> AllocationProtect;107,3780
  support::ulittle32_t Reserved0;108,3837
  support::ulittle64_t RegionSize;109,3871
  support::little_t<MemoryState> State;110,3906
  support::little_t<MemoryProtection> Protect;111,3946
  support::little_t<MemoryType> Type;112,3993
  support::ulittle32_t Reserved1;113,4031
struct Directory 120,4309
  support::little_t<StreamType> Type;121,4328
  LocationDescriptor Location;122,4366
enum class ProcessorArchitecture 128,4578
#define HANDLE_MDMP_ARCH(129,4624
enum class OSPlatform 135,4852
#define HANDLE_MDMP_PLATFORM(136,4887
union CPUInfo 142,5151
  struct X86Info 143,5167
    char VendorID[VendorID144,5186
    support::ulittle32_t VersionInfo;145,5258
    support::ulittle32_t FeatureInfo;146,5320
    support::ulittle32_t AMDExtendedFeatures;147,5382
  } X86;148,5453
  struct ArmInfo 149,5462
    support::ulittle32_t CPUID;150,5481
    support::ulittle32_t ElfHWCaps;151,5513
  } Arm;152,5580
  struct OtherInfo 153,5589
    uint8_t ProcessorFeatures[ProcessorFeatures154,5610
  } Other;155,5645
struct SystemInfo 161,5812
  support::little_t<ProcessorArchitecture> ProcessorArch;162,5832
  support::ulittle16_t ProcessorLevel;163,5890
  support::ulittle16_t ProcessorRevision;164,5929
  uint8_t NumberOfProcessors;166,5972
  uint8_t ProductType;167,6002
  support::ulittle32_t MajorVersion;169,6026
  support::ulittle32_t MinorVersion;170,6063
  support::ulittle32_t BuildNumber;171,6100
  support::little_t<OSPlatform> PlatformId;172,6136
  support::ulittle32_t CSDVersionRVA;173,6180
  support::ulittle16_t SuiteMask;175,6219
  support::ulittle16_t Reserved;176,6253
  CPUInfo CPU;178,6287
struct VSFixedFileInfo 182,6347
  support::ulittle32_t Signature;183,6372
  support::ulittle32_t StructVersion;184,6406
  support::ulittle32_t FileVersionHigh;185,6444
  support::ulittle32_t FileVersionLow;186,6484
  support::ulittle32_t ProductVersionHigh;187,6523
  support::ulittle32_t ProductVersionLow;188,6566
  support::ulittle32_t FileFlagsMask;189,6608
  support::ulittle32_t FileFlags;190,6646
  support::ulittle32_t FileOS;191,6680
  support::ulittle32_t FileType;192,6711
  support::ulittle32_t FileSubtype;193,6744
  support::ulittle32_t FileDateHigh;194,6780
  support::ulittle32_t FileDateLow;195,6817
inline bool operator==(operator==199,6903
struct Module 203,7046
  support::ulittle64_t BaseOfImage;204,7062
  support::ulittle32_t SizeOfImage;205,7098
  support::ulittle32_t Checksum;206,7134
  support::ulittle32_t TimeDateStamp;207,7167
  support::ulittle32_t ModuleNameRVA;208,7205
  VSFixedFileInfo VersionInfo;209,7243
  LocationDescriptor CvRecord;210,7274
  LocationDescriptor MiscRecord;211,7305
  support::ulittle64_t Reserved0;212,7338
  support::ulittle64_t Reserved1;213,7372
struct Thread 219,7535
  support::ulittle32_t ThreadId;220,7551
  support::ulittle32_t SuspendCount;221,7584
  support::ulittle32_t PriorityClass;222,7621
  support::ulittle32_t Priority;223,7659
  support::ulittle64_t EnvironmentBlock;224,7692
  MemoryDescriptor Stack;225,7733
  LocationDescriptor Context;226,7759
struct Exception 230,7830
  static constexpr size_t MaxParameters 231,7849
  support::ulittle32_t ExceptionCode;233,7896
  support::ulittle32_t ExceptionFlags;234,7934
  support::ulittle64_t ExceptionRecord;235,7973
  support::ulittle64_t ExceptionAddress;236,8013
  support::ulittle32_t NumberParameters;237,8054
  support::ulittle32_t UnusedAlignment;238,8095
  support::ulittle64_t ExceptionInformation[ExceptionInformation239,8135
struct ExceptionStream 243,8240
  support::ulittle32_t ThreadId;244,8265
  support::ulittle32_t UnusedAlignment;245,8298
  Exception ExceptionRecord;246,8338
  LocationDescriptor ThreadContext;247,8367
template <> struct DenseMapInfo<DenseMapInfo253,8479
  static minidump::StreamType getEmptyKey(254,8535
  static minidump::StreamType getTombstoneKey(256,8617
  static unsigned getHashValue(260,8709
  static bool isEqual(264,8850

/usr/include/llvm/BinaryFormat/MsgPackDocument.h,2740
#define LLVM_BINARYFORMAT_MSGPACKDOCUMENT_H18,829
struct KindAndDocument 31,1079
  Document *Doc;Doc32,1104
  Type Kind;33,1121
class DocNode 38,1259
  typedef std::map<DocNode,DocNode42,1303
  typedef std::map<DocNode, DocNode> MapTy;42,1303
  typedef std::vector<DocNode> ArrayTy;43,1347
  const KindAndDocument *KindAndDoc;KindAndDoc50,1634
    int64_t Int;55,1729
    uint64_t UInt;56,1746
    bool Bool;57,1765
    double Float;58,1780
    StringRef Raw;59,1798
    ArrayTy *Array;Array60,1817
    MapTy *Map;Map61,1837
  DocNode(67,1985
  bool isMap(70,2041
  bool isArray(71,2097
  bool isScalar(72,2157
  bool isString(73,2216
  bool isEmpty(78,2474
  Type getKind(79,2549
  Document *getDocument(getDocument80,2601
  int64_t &getInt(getInt82,2662
  uint64_t &getUInt(getUInt87,2741
  bool &getBool(getBool92,2824
  double &getFloat(getFloat97,2906
  int64_t getInt(102,2990
  uint64_t getUInt(107,3074
  bool getBool(112,3162
  double getFloat(117,3249
  StringRef getString(122,3338
  MemoryBufferRef getBinary(127,3430
  ArrayDocNode &getArray(getArray134,3660
  MapDocNode &getMap(getMap145,4037
  friend bool operator<(155,4346
  friend bool operator==(operator==185,5198
  friend bool operator!=(operator!=190,5337
  DocNode &operator=(operator=207,6160
  DocNode(218,6567
class MapDocNode 225,6722
  MapDocNode(228,6792
  size_t size(231,6892
  bool empty(232,6938
  MapTy::iterator begin(233,6979
  MapTy::iterator end(234,7030
  MapTy::iterator find(235,7077
  MapTy::iterator erase(237,7179
  size_t erase(238,7254
  MapTy::iterator erase(239,7310
class ArrayDocNode 255,7873
  ArrayDocNode(258,7947
  size_t size(261,8053
  bool empty(262,8101
  DocNode &back(back263,8142
  ArrayTy::iterator begin(264,8192
  ArrayTy::iterator end(265,8247
  void push_back(266,8298
class Document 278,8721
  std::vector<std::unique_ptr<DocNode::MapTy>> Maps;281,8844
  std::vector<std::unique_ptr<DocNode::ArrayTy>> Arrays;282,8897
  std::vector<std::unique_ptr<char[]>> Strings;283,8954
  DocNode Root;286,9039
  KindAndDocument KindAndDocs[KindAndDocs289,9126
  bool HexMode 292,9227
  Document(295,9260
  DocNode &getRoot(getRoot302,9441
  void clear(305,9526
  DocNode getEmptyNode(308,9632
  DocNode getNode(314,9790
  DocNode getNode(320,9942
  DocNode getNode(327,10118
  DocNode getNode(334,10290
  DocNode getNode(341,10469
  DocNode getNode(348,10651
  DocNode getNode(355,10830
  DocNode getNode(363,11097
  DocNode getNode(373,11423
  DocNode getNode(379,11666
  MapDocNode getMapNode(389,11952
  ArrayDocNode getArrayNode(397,12231
  StringRef addString(439,14414
  void setHexMode(446,14690
  bool getHexMode(449,14769

/usr/include/llvm/BinaryFormat/MsgPackWriter.h,401
#define LLVM_BINARYFORMAT_MSGPACKWRITER_H29,893
class Writer 41,1144
  Writer(51,1571
  void writeNil(59,1801
  void write(64,1919
  void write(71,2127
  void write(76,2279
  void write(81,2438
  void write(86,2578
  void write(93,2800
  void writeArraySize(104,3220
  void writeMapSize(116,3754
  void writeExt(121,3939
  support::endian::Writer EW;124,4003
  bool Compatible;125,4033

/usr/include/llvm/BinaryFormat/Swift.h,186
#define LLVM_BINARYFORMAT_SWIFT_H9,323
enum Swift5ReflectionSectionKind 14,401
#define HANDLE_SWIFT_SECTION(15,436
#undef HANDLE_SWIFT_SECTION17,534
  unknown,18,562
  last 19,573

/usr/include/llvm/BinaryFormat/XCOFF.h,5645
#define LLVM_BINARYFORMAT_XCOFF_H14,565
enum ReservedSectionNum 45,1513
enum ReservedSectionNum : int16_t { N_DEBUG 45,1513
enum ReservedSectionNum : int16_t { N_DEBUG = -2, N_ABS 45,1513
enum ReservedSectionNum : int16_t { N_DEBUG = -2, N_ABS = -1, N_UNDEF 45,1513
enum MagicNumber 47,1591
enum MagicNumber : uint16_t { XCOFF32 47,1591
enum MagicNumber : uint16_t { XCOFF32 = 0x01DF, XCOFF64 47,1591
enum AuxHeaderFlags64 62,2224
  SHR_SYMTAB 63,2259
  FORK_POLICY 65,2391
  FORK_COR 66,2467
enum XCOFFInterpret 72,2783
  OLD_XCOFF_INTERPRET 73,2816
  NEW_XCOFF_INTERPRET 74,2843
enum FileFlag 77,2873
  F_RELFLG 78,2900
  F_EXEC 79,2964
  F_LNNO 81,3073
  F_LSYMS 82,3134
  F_FDPR_PROF 83,3196
  F_FDPR_OPTI 84,3253
  F_DSA 85,3311
  F_DEP_1 87,3420
  F_VARPG 88,3481
  F_LPTEXT 89,3556
  F_LPDATA 90,3626
  F_DYNLOAD 91,3696
  F_SHROBJ 93,3828
  F_LOADONLY 94,3881
  F_DEP_2 97,4050
enum StorageMappingClass 102,4218
  XMC_PR 104,4282
  XMC_RO 105,4319
  XMC_DB 106,4362
  XMC_GL 107,4409
  XMC_XO 108,4475
  XMC_SV 109,4547
  XMC_SV64 110,4609
  XMC_SV3264 111,4668
  XMC_TI 112,4742
  XMC_TB 113,4788
  XMC_RW 116,4865
  XMC_TC0 117,4902
  XMC_TC 118,4957
  XMC_TD 119,4995
  XMC_DS 120,5044
  XMC_UA 121,5082
  XMC_BS 122,5140
  XMC_UC 123,5203
  XMC_TL 125,5249
  XMC_UL 126,5303
  XMC_TE 127,5359
enum SectionTypeFlags 133,5632
  STYP_PAD 134,5666
  STYP_DWARF 135,5687
  STYP_TEXT 136,5710
  STYP_DATA 137,5732
  STYP_BSS 138,5754
  STYP_EXCEPT 139,5775
  STYP_INFO 140,5799
  STYP_TDATA 141,5821
  STYP_TBSS 142,5844
  STYP_LOADER 143,5866
  STYP_DEBUG 144,5890
  STYP_TYPCHK 145,5913
  STYP_OVRFLO 146,5937
enum DwarfSectionSubtypeFlags 153,6230
  SSUBTYP_DWINFO 154,6272
enum StorageClass 169,6991
  C_FILE 171,7079
  C_BINCL 172,7109
  C_EINCL 173,7155
  C_GSYM 174,7198
  C_STSYM 175,7234
  C_BCOMM 176,7282
  C_ECOMM 177,7328
  C_ENTRY 178,7368
  C_BSTAT 179,7404
  C_ESTAT 180,7450
  C_GTLS 181,7490
  C_STTLS 182,7539
  C_DWARF 185,7634
  C_LSYM 188,7724
  C_PSYM 189,7782
  C_RSYM 190,7844
  C_RPSYM 191,7882
  C_ECOML 192,7955
  C_FUN 193,8004
  C_EXT 197,8141
  C_WEAKEXT 198,8179
  C_NULL 201,8282
  C_STAT 202,8296
  C_BLOCK 203,8324
  C_FCN 204,8360
  C_HIDEXT 205,8396
  C_INFO 206,8442
  C_DECL 207,8495
  C_AUTO 210,8592
  C_REG 211,8632
  C_EXTDEF 212,8671
  C_LABEL 213,8712
  C_ULABEL 214,8739
  C_MOS 215,8776
  C_ARG 216,8817
  C_STRTAG 217,8856
  C_MOU 218,8891
  C_UNTAG 219,8928
  C_TPDEF 220,8959
  C_USTATIC 221,8996
  C_ENTAG 222,9034
  C_MOE 223,9071
  C_REGPARM 224,9114
  C_FIELD 225,9154
  C_EOS 226,9185
  C_LINE 227,9223
  C_ALIAS 228,9239
  C_HIDDEN 229,9274
  C_EFCN 230,9330
  C_TCSYM 233,9409
enum SymbolType 239,9648
  XTY_ER 240,9676
  XTY_SD 241,9715
  XTY_LD 242,9776
  XTY_CM 244,9880
enum VisibilityType 250,10190
  SYM_V_UNSPECIFIED 251,10223
  SYM_V_INTERNAL 252,10253
  SYM_V_HIDDEN 253,10280
  SYM_V_PROTECTED 254,10305
  SYM_V_EXPORTED 255,10333
constexpr uint16_t VISIBILITY_MASK 258,10363
enum RelocationType 261,10465
  R_POS 262,10497
  R_RL 264,10607
  R_RLA 265,10687
  R_NEG 267,10767
  R_REL 269,10893
  R_TOC 273,11094
  R_TRL 276,11307
  R_TRLA 279,11439
  R_GL 286,11815
  R_TCL 289,12007
  R_REF 292,12161
  R_BA 297,12454
  R_BR 299,12610
  R_RBA 303,12915
  R_RBR 305,13042
  R_TLS 308,13199
  R_TLS_IE 309,13264
  R_TLS_LD 310,13326
  R_TLS_LE 311,13389
  R_TLSM 312,13449
  R_TLSML 314,13587
  R_TOCU 316,13654
  R_TOCL 318,13801
enum CFileStringType 322,13949
  XFT_FN 323,13982
  XFT_CT 324,14034
  XFT_CV 325,14089
  XFT_CD 326,14148
enum CFileLangId 329,14212
  TB_C 330,14241
  TB_Fortran 331,14277
  TB_CPLUSPLUS 332,14319
enum CFileCpuId 335,14361
  TCPU_PPC64 336,14389
  TCPU_COM 337,14453
  TCPU_970 338,14515
enum SymbolAuxType 341,14580
  AUX_EXCEPT 342,14611
  AUX_FCN 343,14677
  AUX_SYM 344,14741
  AUX_FILE 345,14803
  AUX_CSECT 346,14863
  AUX_SECT 347,14924
struct TracebackTable 361,15742
  enum LanguageID 362,15766
    C,363,15796
    Fortran,364,15803
    Pascal,365,15816
    Ada,366,15828
    PL1,367,15837
    Basic,368,15846
    Lisp,369,15857
    Cobol,370,15867
    Modula2,371,15878
    CPlusPlus,372,15891
    Rpg,373,15906
    PL8,374,15915
    PLIX 375,15924
    Assembly,376,15940
    Java,377,15954
    ObjectiveC378,15964
  static constexpr uint32_t VersionMask 381,15996
  static constexpr uint32_t LanguageIdMask 385,16110
  static constexpr uint32_t IsGlobaLinkageMask 389,16230
  static constexpr uint32_t IsBackChainStoredMask 409,17256
  static constexpr uint32_t HasExtensionTableMask 415,17493
  static constexpr uint32_t NumberOfFixedParmsMask 421,17736
  static constexpr uint32_t NumberOfFloatingPointParmsMask 425,17871
  static constexpr uint32_t ParmTypeIsFloatingBit 431,18200
  static constexpr uint16_t IsVRSavedOnStackMask 442,18778
  static constexpr uint16_t HasVarArgsMask 443,18837
  static constexpr uint8_t NumberOfVRSavedShift 444,18890
  static constexpr uint16_t NumberOfVectorParmsMask 446,18945
  static constexpr uint16_t HasVMXInstructionMask 447,19007
  static constexpr uint8_t NumberOfVectorParmsShift 448,19067
  static constexpr uint32_t ParmTypeIsVectorCharBit 450,19125
enum ExtendedTBTableFlag 459,19483
  TB_OS1 460,19520
  TB_RESERVED 461,19571
  TB_SSP_CANARY 462,19624
  TB_OS2 463,19693
  TB_EH_INFO 464,19744
  TB_LONGTBTABLE2 465,19807
struct CsectProperties 471,20020
  CsectProperties(472,20045
  StorageMappingClass MappingClass;474,20142
  SymbolType Type;475,20178

/usr/include/llvm/BinaryFormat/DXContainer.h,5917
#define LLVM_BINARYFORMAT_DXCONTAINER_H14,577
struct Hash 47,1952
  uint8_t Digest[Digest48,1966
enum class HashFlags 51,1992
  None 52,2026
  IncludesSource 53,2069
struct ShaderHash 57,2223
  uint32_t Flags;58,2243
  uint8_t Digest[Digest59,2280
  void swapBytes(63,2326
struct ContainerVersion 66,2380
  uint16_t Major;67,2406
  uint16_t Minor;68,2424
  void swapBytes(70,2443
struct Header 76,2534
  uint8_t Magic[Magic77,2550
  Hash FileHash;78,2580
  ContainerVersion Version;79,2597
  uint32_t FileSize;80,2625
  uint32_t PartCount;81,2646
  void swapBytes(83,2669
struct PartHeader 93,3014
  uint8_t Name[Name94,3034
  uint32_t Size;95,3053
  void swapBytes(97,3071
  StringRef getName(98,3120
struct BitcodeHeader 104,3303
  uint8_t Magic[Magic105,3326
  uint8_t MajorVersion;106,3367
  uint8_t MinorVersion;107,3408
  uint16_t Unused;108,3449
  uint32_t Offset;109,3468
  uint32_t Size;110,3537
  void swapBytes(113,3672
struct ProgramHeader 121,3839
  uint8_t MinorVersion 122,3862
  uint8_t MajorVersion 123,3890
  uint8_t Unused;124,3918
  uint16_t ShaderKind;125,3936
  uint32_t Size;126,3959
  BitcodeHeader Bitcode;127,4025
  void swapBytes(129,4051
#define CONTAINER_PART(138,4249
enum class PartType 139,4284
  Unknown 140,4306
#define SHADER_FLAG(144,4361
enum class FeatureFlags 145,4415
struct VertexPSVInfo 153,4650
  uint8_t OutputPositionPresent;154,4673
  uint8_t Unused[Unused155,4706
  void swapBytes(157,4728
struct HullPSVInfo 162,4780
  uint32_t InputControlPointCount;163,4801
  uint32_t OutputControlPointCount;164,4836
  uint32_t TessellatorDomain;165,4872
  uint32_t TessellatorOutputPrimitive;166,4902
  void swapBytes(168,4942
struct DomainPSVInfo 176,5163
  uint32_t InputControlPointCount;177,5186
  uint8_t OutputPositionPresent;178,5221
  uint8_t Unused[Unused179,5254
  uint32_t TessellatorDomain;180,5275
  void swapBytes(182,5306
struct GeometryPSVInfo 188,5426
  uint32_t InputPrimitive;189,5451
  uint32_t OutputTopology;190,5478
  uint32_t OutputStreamMask;191,5505
  uint8_t OutputPositionPresent;192,5534
  uint8_t Unused[Unused193,5567
  void swapBytes(195,5589
struct PixelPSVInfo 202,5740
  uint8_t DepthOutput;203,5762
  uint8_t SampleFrequency;204,5785
  uint8_t Unused[Unused205,5812
  void swapBytes(207,5834
struct MeshPSVInfo 212,5886
  uint32_t GroupSharedBytesUsed;213,5907
  uint32_t GroupSharedBytesDependentOnViewID;214,5940
  uint32_t PayloadSizeInBytes;215,5986
  uint16_t MaxOutputVertices;216,6017
  uint16_t MaxOutputPrimitives;217,6047
  void swapBytes(219,6080
struct AmplificationPSVInfo 228,6346
  uint32_t PayloadSizeInBytes;229,6376
  void swapBytes(231,6408
union PipelinePSVInfo 234,6475
  VertexPSVInfo VS;235,6499
  HullPSVInfo HS;236,6519
  DomainPSVInfo DS;237,6537
  GeometryPSVInfo GS;238,6557
  PixelPSVInfo PS;239,6579
  MeshPSVInfo MS;240,6598
  AmplificationPSVInfo AS;241,6616
  void swapBytes(243,6644
namespace PSV 275,7429
#define SEMANTIC_KIND(277,7446
enum class SemanticKind 278,7491
#define COMPONENT_TYPE(284,7622
enum class ComponentType 285,7668
#define INTERPOLATION_MODE(291,7802
enum class InterpolationMode 292,7852
namespace v0 298,7998
struct RuntimeInfo 299,8013
  PipelinePSVInfo StageInfo;300,8034
  uint32_t MinimumWaveLaneCount;301,8063
  uint32_t MaximumWaveLaneCount;302,8140
  void swapBytes(304,8262
  void swapBytes(310,8443
struct ResourceBindInfo 313,8527
  uint32_t Type;314,8553
  uint32_t Space;315,8570
  uint32_t LowerBound;316,8588
  uint32_t UpperBound;317,8611
  void swapBytes(319,8635
struct SignatureElement 327,8797
  uint32_t NameOffset;328,8823
  uint32_t IndicesOffset;329,8846
  uint8_t Rows;331,8873
  uint8_t StartRow;332,8889
  uint8_t Cols 333,8909
  uint8_t StartCol 334,8929
  uint8_t Allocated 335,8953
  uint8_t Unused 336,8978
  SemanticKind Kind;337,9000
  ComponentType Type;339,9022
  InterpolationMode Mode;340,9044
  uint8_t DynamicMask 341,9070
  uint8_t Stream 342,9097
  uint8_t Unused2 343,9119
  uint8_t Reserved;344,9142
  void swapBytes(346,9163
namespace v1 357,9414
struct MeshRuntimeInfo 359,9430
  uint8_t SigPrimVectors;360,9455
  uint8_t MeshOutputTopology;361,9508
union GeometryExtraInfo 364,9542
  uint16_t MaxVertexCount;365,9568
  uint8_t SigPatchConstOrPrimVectors;366,9647
  MeshRuntimeInfo MeshInfo;369,9859
struct RuntimeInfo 371,9890
  uint8_t ShaderStage;372,9936
  uint8_t UsesViewID;373,9976
  GeometryExtraInfo GeomData;374,9998
  uint8_t SigInputElements;377,10061
  uint8_t SigOutputElements;378,10089
  uint8_t SigPatchOrPrimElements;379,10118
  uint8_t SigInputVectors;382,10197
  uint8_t SigOutputVectors[SigOutputVectors383,10224
  void swapBytes(385,10256
  void swapBytes(389,10354
namespace v2 398,10573
struct RuntimeInfo 399,10588
  uint32_t NumThreadsX;400,10634
  uint32_t NumThreadsY;401,10658
  uint32_t NumThreadsZ;402,10682
  void swapBytes(404,10707
  void swapBytes(410,10844
struct ResourceBindInfo 415,10941
  uint32_t Kind;416,10997
  uint32_t Flags;417,11014
  void swapBytes(419,11033
#define COMPONENT_PRECISION(429,11200
enum class SigMinPrecision 430,11251
#define D3D_SYSTEM_VALUE(436,11392
enum class D3DSystemValue 437,11440
#define COMPONENT_TYPE(443,11578
enum class SigComponentType 444,11624
struct ProgramSignatureHeader 450,11768
  uint32_t ParamCount;451,11800
  uint32_t FirstParamOffset;452,11823
  void swapBytes(454,11853
struct ProgramSignatureElement 460,11960
  uint32_t Stream;461,11993
  uint32_t NameOffset;463,12114
  uint32_t Index;465,12275
  D3DSystemValue SystemValue;466,12316
  SigComponentType CompType;467,12394
  uint32_t Register;468,12441
  uint8_t Mask;469,12501
  uint8_t ExclusiveMask;476,12829
  uint16_t Unused;478,12855
  SigMinPrecision MinPrecision;479,12874
  void swapBytes(481,12949

/usr/include/llvm/BinaryFormat/ELF.h,35253
#define LLVM_BINARYFORMAT_ELF_H20,906
  EI_MAG0 48,1555
  EI_MAG1 49,1606
  EI_MAG2 50,1657
  EI_MAG3 51,1708
  EI_CLASS 52,1759
  EI_DATA 53,1795
  EI_VERSION 54,1834
  EI_OSABI 55,1872
  EI_ABIVERSION 56,1919
  EI_PAD 57,1956
  EI_NIDENT 58,2004
struct Elf32_Ehdr 61,2060
  unsigned char e_ident[e_ident62,2080
  Elf32_Half e_type;63,2144
  Elf32_Half e_machine;64,2213
  Elf32_Word e_version;65,2289
  Elf32_Addr e_entry;66,2337
  Elf32_Off e_phoff;67,2411
  Elf32_Off e_shoff;68,2485
  Elf32_Word e_flags;69,2559
  Elf32_Half e_ehsize;70,2613
  Elf32_Half e_phentsize;71,2671
  Elf32_Half e_phnum;72,2745
  Elf32_Half e_shentsize;73,2820
  Elf32_Half e_shnum;74,2894
  Elf32_Half e_shstrndx;75,2969
  bool checkMagic(77,3046
  unsigned char getFileClass(81,3142
  unsigned char getDataEncoding(82,3209
struct Elf64_Ehdr 87,3379
  unsigned char e_ident[e_ident88,3399
  Elf64_Half e_type;89,3435
  Elf64_Half e_machine;90,3456
  Elf64_Word e_version;91,3480
  Elf64_Addr e_entry;92,3504
  Elf64_Off e_phoff;93,3526
  Elf64_Off e_shoff;94,3547
  Elf64_Word e_flags;95,3568
  Elf64_Half e_ehsize;96,3590
  Elf64_Half e_phentsize;97,3613
  Elf64_Half e_phnum;98,3639
  Elf64_Half e_shentsize;99,3661
  Elf64_Half e_shnum;100,3687
  Elf64_Half e_shstrndx;101,3709
  bool checkMagic(103,3735
  unsigned char getFileClass(107,3831
  unsigned char getDataEncoding(108,3898
  ET_NONE 115,4098
  ET_REL 116,4136
  ET_EXEC 117,4178
  ET_DYN 118,4219
  ET_CORE 119,4263
  ET_LOOS 120,4298
  ET_HIOS 121,4368
  ET_LOPROC 122,4419
  ET_HIPROC 123,4482
enum { EV_NONE 127,4544
enum { EV_NONE = 0, EV_CURRENT 127,4544
  EM_NONE 133,4742
  EM_M32 134,4781
  EM_SPARC 135,4823
  EM_386 136,4857
  EM_68K 137,4895
  EM_88K 138,4938
  EM_IAMCU 139,4981
  EM_860 140,5019
  EM_MIPS 141,5059
  EM_S370 142,5098
  EM_MIPS_RS3_LE 143,5141
  EM_PARISC 144,5195
  EM_VPP500 145,5247
  EM_SPARC32PLUS 146,5290
  EM_960 147,5349
  EM_PPC 148,5389
  EM_PPC64 149,5425
  EM_S390 150,5463
  EM_SPU 151,5506
  EM_V800 152,5546
  EM_FR20 153,5583
  EM_RH32 154,5624
  EM_RCE 155,5662
  EM_ARM 156,5703
  EM_ALPHA 157,5735
  EM_SH 158,5773
  EM_SPARCV9 159,5812
  EM_TRICORE 160,5849
  EM_ARC 161,5893
  EM_H8_300 162,5940
  EM_H8_300H 163,5983
  EM_H8S 164,6027
  EM_H8_500 165,6067
  EM_IA_64 166,6110
  EM_MIPS_X 167,6173
  EM_COLDFIRE 168,6217
  EM_68HC12 169,6263
  EM_MMA 170,6308
  EM_PCP 171,6371
  EM_NCPU 172,6411
  EM_NDR1 173,6473
  EM_STARCORE 174,6527
  EM_ME16 175,6584
  EM_ST100 176,6634
  EM_TINYJ 177,6697
  EM_X86_64 178,6778
  EM_PDSP 179,6830
  EM_PDP10 180,6877
  EM_PDP11 181,6936
  EM_FX66 182,6995
  EM_ST9PLUS 183,7052
  EM_ST7 184,7129
  EM_68HC16 185,7202
  EM_68HC11 186,7264
  EM_68HC08 187,7326
  EM_68HC05 188,7388
  EM_SVX 189,7450
  EM_ST19 190,7499
  EM_VAX 191,7573
  EM_CRIS 192,7613
  EM_JAVELIN 193,7687
  EM_FIREPATH 194,7763
  EM_ZSP 195,7823
  EM_MMIX 196,7882
  EM_HUANY 197,7954
  EM_PRISM 198,8034
  EM_AVR 199,8075
  EM_FR30 200,8135
  EM_D10V 201,8176
  EM_D30V 202,8220
  EM_V850 203,8264
  EM_M32R 204,8301
  EM_MN10300 205,8345
  EM_MN10200 206,8392
  EM_PJ 207,8439
  EM_OPENRISC 208,8476
  EM_ARC_COMPACT 209,8539
  EM_XTENSA 211,8667
  EM_VIDEOCORE 212,8725
  EM_TMM_GPP 213,8785
  EM_NS32K 214,8859
  EM_TPC 215,8923
  EM_SNP1K 216,8979
  EM_ST200 217,9033
  EM_IP2K 218,9099
  EM_MAX 219,9164
  EM_CR 220,9206
  EM_F2MC16 221,9284
  EM_MSP430 222,9327
  EM_BLACKFIN 223,9405
  EM_SE_C33 224,9473
  EM_SEP 225,9540
  EM_ARCA 226,9598
  EM_UNICORE 227,9651
  EM_EXCESS 229,9779
  EM_DXP 230,9854
  EM_ALTERA_NIOS2 231,9932
  EM_CRX 232,9995
  EM_XGATE 233,10062
  EM_C166 234,10124
  EM_M16C 235,10182
  EM_DSPIC30F 236,10246
  EM_CE 238,10358
  EM_M32C 239,10427
  EM_TSK3000 240,10491
  EM_RS08 241,10539
  EM_SHARC 242,10601
  EM_ECOG2 244,10710
  EM_SCORE7 245,10775
  EM_DSP24 246,10834
  EM_VIDEOCORE3 247,10905
  EM_LATTICEMICO32 248,10966
  EM_SE_C17 249,11040
  EM_TI_C6000 250,11092
  EM_TI_C2000 251,11166
  EM_TI_C5500 252,11240
  EM_MMDSP_PLUS 253,11313
  EM_CYPRESS_M8C 254,11394
  EM_R32C 255,11450
  EM_TRIMEDIA 256,11515
  EM_HEXAGON 257,11592
  EM_8051 258,11648
  EM_STXP7X 259,11701
  EM_NDS32 261,11839
  EM_ECOG1 263,11963
  EM_ECOG1X 264,12022
  EM_MAXQ30 265,12081
  EM_XIMO16 266,12161
  EM_MANIK 267,12233
  EM_CRAYNV2 268,12303
  EM_RX 269,12366
  EM_METAG 270,12413
  EM_MCST_ELBRUS 272,12524
  EM_ECOG16 273,12603
  EM_CR16 274,12662
  EM_ETPU 276,12782
  EM_SLE9X 277,12851
  EM_L10M 278,12913
  EM_K10M 279,12953
  EM_AARCH64 280,12993
  EM_AVR32 281,13034
  EM_STM8 282,13110
  EM_TILE64 283,13184
  EM_TILEPRO 284,13257
  EM_MICROBLAZE 285,13331
  EM_CUDA 286,13410
  EM_TILEGX 287,13464
  EM_CLOUDSHIELD 288,13538
  EM_COREA_1ST 289,13599
  EM_COREA_2ND 290,13678
  EM_ARC_COMPACT2 291,13757
  EM_OPEN8 292,13808
  EM_RL78 293,13874
  EM_VIDEOCORE5 294,13923
  EM_78KOR 295,13983
  EM_56800EX 296,14033
  EM_BA1 297,14112
  EM_BA2 298,14169
  EM_XCORE 299,14226
  EM_MCHP_PIC 300,14283
  EM_INTEL205 301,14342
  EM_INTEL206 302,14389
  EM_INTEL207 303,14436
  EM_INTEL208 304,14483
  EM_INTEL209 305,14530
  EM_KM32 306,14577
  EM_KMX32 307,14634
  EM_KMX16 308,14692
  EM_KMX8 309,14750
  EM_KVARC 310,14806
  EM_CDP 311,14857
  EM_COGE 312,14917
  EM_COOL 313,14979
  EM_NORC 314,15027
  EM_CSR_KALIMBA 315,15081
  EM_AMDGPU 316,15142
  EM_RISCV 317,15192
  EM_LANAI 318,15228
  EM_BPF 319,15280
  EM_VE 320,15342
  EM_CSKY 321,15388
  EM_LOONGARCH 322,15440
  ELFCLASSNONE 327,15514
  ELFCLASS32 328,15534
  ELFCLASS64 329,15574
  ELFDATANONE 334,15656
  ELFDATA2LSB 335,15701
  ELFDATA2MSB 336,15749
  ELFOSABI_NONE 341,15831
  ELFOSABI_HPUX 342,15883
  ELFOSABI_NETBSD 343,15940
  ELFOSABI_GNU 344,15981
  ELFOSABI_LINUX 345,16025
  ELFOSABI_HURD 346,16094
  ELFOSABI_SOLARIS 347,16137
  ELFOSABI_AIX 348,16179
  ELFOSABI_IRIX 349,16217
  ELFOSABI_FREEBSD 350,16256
  ELFOSABI_TRU64 351,16298
  ELFOSABI_MODESTO 352,16343
  ELFOSABI_OPENBSD 353,16392
  ELFOSABI_OPENVMS 354,16434
  ELFOSABI_NSK 355,16476
  ELFOSABI_AROS 356,16542
  ELFOSABI_FENIXOS 357,16581
  ELFOSABI_CLOUDABI 358,16623
  ELFOSABI_CUDA 359,16671
  ELFOSABI_FIRST_ARCH 360,16731
  ELFOSABI_AMDGPU_HSA 361,16800
  ELFOSABI_AMDGPU_PAL 362,16850
  ELFOSABI_AMDGPU_MESA3D 363,16900
  ELFOSABI_ARM 364,16972
  ELFOSABI_C6000_ELFABI 365,17010
  ELFOSABI_C6000_LINUX 366,17067
  ELFOSABI_STANDALONE 367,17119
  ELFOSABI_LAST_ARCH 368,17187
  ELFABIVERSION_AMDGPU_HSA_V2 375,17416
  ELFABIVERSION_AMDGPU_HSA_V3 376,17451
  ELFABIVERSION_AMDGPU_HSA_V4 377,17486
  ELFABIVERSION_AMDGPU_HSA_V5 378,17521
#define ELF_RELOC(381,17559
  EF_PPC64_ABI 404,18065
  STO_PPC64_LOCAL_BIT 409,18173
  STO_PPC64_LOCAL_MASK 410,18200
static inline int64_t decodePPC64LocalEntryOffset(412,18255
  STO_AARCH64_VARIANT_PCS 430,18745
enum : unsigned 434,18806
  EF_ARM_SOFT_FLOAT 435,18824
  EF_ARM_ABI_FLOAT_SOFT 436,18887
  EF_ARM_VFP_FLOAT 437,18939
  EF_ARM_ABI_FLOAT_HARD 438,19002
  EF_ARM_BE8 439,19054
  EF_ARM_EABI_UNKNOWN 440,19082
  EF_ARM_EABI_VER1 441,19119
  EF_ARM_EABI_VER2 442,19153
  EF_ARM_EABI_VER3 443,19187
  EF_ARM_EABI_VER4 444,19221
  EF_ARM_EABI_VER5 445,19255
  EF_ARM_EABIMASK 446,19289
enum : unsigned 455,19421
  EF_ARC_MACH_MSK 456,19439
  EF_ARC_OSABI_MSK 457,19471
  E_ARC_MACH_ARC600 458,19504
  E_ARC_MACH_ARC601 459,19538
  E_ARC_MACH_ARC700 460,19572
  EF_ARC_CPU_ARCV2EM 461,19606
  EF_ARC_CPU_ARCV2HS 462,19641
  E_ARC_OSABI_ORIG 463,19676
  E_ARC_OSABI_V2 464,19709
  E_ARC_OSABI_V3 465,19740
  E_ARC_OSABI_V4 466,19771
  EF_ARC_PIC 467,19802
enum : unsigned 476,19928
  EF_AVR_ARCH_AVR1 477,19946
  EF_AVR_ARCH_AVR2 478,19970
  EF_AVR_ARCH_AVR25 479,19994
  EF_AVR_ARCH_AVR3 480,20020
  EF_AVR_ARCH_AVR31 481,20044
  EF_AVR_ARCH_AVR35 482,20070
  EF_AVR_ARCH_AVR4 483,20096
  EF_AVR_ARCH_AVR5 484,20120
  EF_AVR_ARCH_AVR51 485,20144
  EF_AVR_ARCH_AVR6 486,20170
  EF_AVR_ARCH_AVRTINY 487,20194
  EF_AVR_ARCH_XMEGA1 488,20223
  EF_AVR_ARCH_XMEGA2 489,20251
  EF_AVR_ARCH_XMEGA3 490,20279
  EF_AVR_ARCH_XMEGA4 491,20307
  EF_AVR_ARCH_XMEGA5 492,20335
  EF_AVR_ARCH_XMEGA6 493,20363
  EF_AVR_ARCH_XMEGA7 494,20391
  EF_AVR_ARCH_MASK 496,20420
  EF_AVR_LINKRELAX_PREPARED 498,20482
enum : unsigned 508,20718
  EF_MIPS_NOREORDER 509,20736
  EF_MIPS_PIC 510,20800
  EF_MIPS_CPIC 511,20863
  EF_MIPS_ABI2 512,20943
  EF_MIPS_32BITMODE 513,20998
  EF_MIPS_FP64 515,21122
  EF_MIPS_NAN2008 517,21260
  EF_MIPS_ABI_O32 520,21344
  EF_MIPS_ABI_O64 521,21423
  EF_MIPS_ABI_EABI32 522,21500
  EF_MIPS_ABI_EABI64 523,21559
  EF_MIPS_ABI 524,21618
  EF_MIPS_MACH_NONE 527,21724
  EF_MIPS_MACH_3900 528,21796
  EF_MIPS_MACH_4010 529,21850
  EF_MIPS_MACH_4100 530,21900
  EF_MIPS_MACH_4650 531,21951
  EF_MIPS_MACH_4120 532,22002
  EF_MIPS_MACH_4111 533,22053
  EF_MIPS_MACH_SB1 534,22111
  EF_MIPS_MACH_OCTEON 535,22165
  EF_MIPS_MACH_XLR 536,22228
  EF_MIPS_MACH_OCTEON2 537,22276
  EF_MIPS_MACH_OCTEON3 538,22340
  EF_MIPS_MACH_5400 539,22404
  EF_MIPS_MACH_5900 540,22455
  EF_MIPS_MACH_5500 541,22506
  EF_MIPS_MACH_9000 542,22557
  EF_MIPS_MACH_LS2E 543,22605
  EF_MIPS_MACH_LS2F 544,22677
  EF_MIPS_MACH_LS3A 545,22749
  EF_MIPS_MACH 546,22801
  EF_MIPS_MICROMIPS 549,22888
  EF_MIPS_ARCH_ASE_M16 550,22939
  EF_MIPS_ARCH_ASE_MDMX 551,23007
  EF_MIPS_ARCH_ASE 552,23079
  EF_MIPS_ARCH_1 555,23167
  EF_MIPS_ARCH_2 556,23226
  EF_MIPS_ARCH_3 557,23285
  EF_MIPS_ARCH_4 558,23344
  EF_MIPS_ARCH_5 559,23403
  EF_MIPS_ARCH_32 560,23462
  EF_MIPS_ARCH_64 561,23542
  EF_MIPS_ARCH_32R2 562,23622
  EF_MIPS_ARCH_64R2 563,23688
  EF_MIPS_ARCH_32R6 564,23754
  EF_MIPS_ARCH_64R6 565,23800
  EF_MIPS_ARCH 566,23846
  SHN_MIPS_ACOMMON 571,23967
  SHN_MIPS_TEXT 572,24048
  SHN_MIPS_DATA 573,24100
  SHN_MIPS_SCOMMON 574,24152
  SHN_MIPS_SUNDEFINED 575,24222
  STO_MIPS_OPTIONAL 585,24457
  STO_MIPS_PLT 586,24525
  STO_MIPS_PIC 587,24596
  STO_MIPS_MICROMIPS 588,24668
  STO_MIPS_MIPS16 589,24732
  ODK_NULL 594,24846
  ODK_REGINFO 595,24881
  ODK_EXCEPTIONS 596,24933
  ODK_PAD 597,24987
  ODK_HWPATCH 598,25036
  ODK_FILL 599,25086
  ODK_TAGS 600,25129
  ODK_HWAND 601,25184
  ODK_HWOR 602,25238
  ODK_GP_GROUP 603,25291
  ODK_IDENT 604,25355
  ODK_PAGESIZE 605,25395
  EF_HEXAGON_MACH_V2 611,25529
  EF_HEXAGON_MACH_V3 612,25580
  EF_HEXAGON_MACH_V4 613,25631
  EF_HEXAGON_MACH_V5 614,25682
  EF_HEXAGON_MACH_V55 615,25733
  EF_HEXAGON_MACH_V60 616,25785
  EF_HEXAGON_MACH_V62 617,25837
  EF_HEXAGON_MACH_V65 618,25889
  EF_HEXAGON_MACH_V66 619,25941
  EF_HEXAGON_MACH_V67 620,25993
  EF_HEXAGON_MACH_V67T 621,26045
  EF_HEXAGON_MACH_V68 622,26098
  EF_HEXAGON_MACH_V69 623,26150
  EF_HEXAGON_MACH_V71 624,26202
  EF_HEXAGON_MACH_V71T 625,26254
  EF_HEXAGON_MACH_V73 626,26307
  EF_HEXAGON_MACH 627,26359
  EF_HEXAGON_ISA_MACH 630,26443
  EF_HEXAGON_ISA_V2 632,26564
  EF_HEXAGON_ISA_V3 633,26618
  EF_HEXAGON_ISA_V4 634,26672
  EF_HEXAGON_ISA_V5 635,26726
  EF_HEXAGON_ISA_V55 636,26780
  EF_HEXAGON_ISA_V60 637,26835
  EF_HEXAGON_ISA_V62 638,26890
  EF_HEXAGON_ISA_V65 639,26945
  EF_HEXAGON_ISA_V66 640,27000
  EF_HEXAGON_ISA_V67 641,27055
  EF_HEXAGON_ISA_V68 642,27110
  EF_HEXAGON_ISA_V69 643,27165
  EF_HEXAGON_ISA_V71 644,27220
  EF_HEXAGON_ISA_V73 645,27275
  EF_HEXAGON_ISA_V75 646,27330
  EF_HEXAGON_ISA 647,27385
  SHN_HEXAGON_SCOMMON 652,27509
  SHN_HEXAGON_SCOMMON_1 653,27565
  SHN_HEXAGON_SCOMMON_2 654,27620
  SHN_HEXAGON_SCOMMON_4 655,27680
  SHN_HEXAGON_SCOMMON_8 656,27735
enum : unsigned 670,27982
  EF_RISCV_RVC 671,28000
  EF_RISCV_FLOAT_ABI 672,28025
  EF_RISCV_FLOAT_ABI_SOFT 673,28056
  EF_RISCV_FLOAT_ABI_SINGLE 674,28092
  EF_RISCV_FLOAT_ABI_DOUBLE 675,28130
  EF_RISCV_FLOAT_ABI_QUAD 676,28168
  EF_RISCV_RVE 677,28204
  EF_RISCV_TSO 678,28229
  STO_RISCV_VARIANT_CC 689,28437
enum : unsigned 703,28660
  EF_AMDGPU_MACH 705,28737
  EF_AMDGPU_MACH_NONE 708,28794
  EF_AMDGPU_MACH_R600_R600 713,28895
  EF_AMDGPU_MACH_R600_R630 714,28931
  EF_AMDGPU_MACH_R600_RS880 715,28967
  EF_AMDGPU_MACH_R600_RV670 716,29004
  EF_AMDGPU_MACH_R600_RV710 718,29076
  EF_AMDGPU_MACH_R600_RV730 719,29113
  EF_AMDGPU_MACH_R600_RV770 720,29150
  EF_AMDGPU_MACH_R600_CEDAR 722,29227
  EF_AMDGPU_MACH_R600_CYPRESS 723,29264
  EF_AMDGPU_MACH_R600_JUNIPER 724,29303
  EF_AMDGPU_MACH_R600_REDWOOD 725,29342
  EF_AMDGPU_MACH_R600_SUMO 726,29381
  EF_AMDGPU_MACH_R600_BARTS 728,29464
  EF_AMDGPU_MACH_R600_CAICOS 729,29501
  EF_AMDGPU_MACH_R600_CAYMAN 730,29539
  EF_AMDGPU_MACH_R600_TURKS 731,29577
  EF_AMDGPU_MACH_R600_RESERVED_FIRST 734,29656
  EF_AMDGPU_MACH_R600_RESERVED_LAST 735,29702
  EF_AMDGPU_MACH_R600_FIRST 738,29787
  EF_AMDGPU_MACH_R600_LAST 739,29843
  EF_AMDGPU_MACH_AMDGCN_GFX600 743,29952
  EF_AMDGPU_MACH_AMDGCN_GFX601 744,29999
  EF_AMDGPU_MACH_AMDGCN_GFX700 745,30046
  EF_AMDGPU_MACH_AMDGCN_GFX701 746,30093
  EF_AMDGPU_MACH_AMDGCN_GFX702 747,30140
  EF_AMDGPU_MACH_AMDGCN_GFX703 748,30187
  EF_AMDGPU_MACH_AMDGCN_GFX704 749,30234
  EF_AMDGPU_MACH_AMDGCN_RESERVED_0X27 750,30281
  EF_AMDGPU_MACH_AMDGCN_GFX801 751,30328
  EF_AMDGPU_MACH_AMDGCN_GFX802 752,30375
  EF_AMDGPU_MACH_AMDGCN_GFX803 753,30422
  EF_AMDGPU_MACH_AMDGCN_GFX810 754,30469
  EF_AMDGPU_MACH_AMDGCN_GFX900 755,30516
  EF_AMDGPU_MACH_AMDGCN_GFX902 756,30563
  EF_AMDGPU_MACH_AMDGCN_GFX904 757,30610
  EF_AMDGPU_MACH_AMDGCN_GFX906 758,30657
  EF_AMDGPU_MACH_AMDGCN_GFX908 759,30704
  EF_AMDGPU_MACH_AMDGCN_GFX909 760,30751
  EF_AMDGPU_MACH_AMDGCN_GFX90C 761,30798
  EF_AMDGPU_MACH_AMDGCN_GFX1010 762,30845
  EF_AMDGPU_MACH_AMDGCN_GFX1011 763,30892
  EF_AMDGPU_MACH_AMDGCN_GFX1012 764,30939
  EF_AMDGPU_MACH_AMDGCN_GFX1030 765,30986
  EF_AMDGPU_MACH_AMDGCN_GFX1031 766,31033
  EF_AMDGPU_MACH_AMDGCN_GFX1032 767,31080
  EF_AMDGPU_MACH_AMDGCN_GFX1033 768,31127
  EF_AMDGPU_MACH_AMDGCN_GFX602 769,31174
  EF_AMDGPU_MACH_AMDGCN_GFX705 770,31221
  EF_AMDGPU_MACH_AMDGCN_GFX805 771,31268
  EF_AMDGPU_MACH_AMDGCN_GFX1035 772,31315
  EF_AMDGPU_MACH_AMDGCN_GFX1034 773,31362
  EF_AMDGPU_MACH_AMDGCN_GFX90A 774,31409
  EF_AMDGPU_MACH_AMDGCN_GFX940 775,31456
  EF_AMDGPU_MACH_AMDGCN_GFX1100 776,31503
  EF_AMDGPU_MACH_AMDGCN_GFX1013 777,31550
  EF_AMDGPU_MACH_AMDGCN_GFX1150 778,31597
  EF_AMDGPU_MACH_AMDGCN_GFX1103 779,31644
  EF_AMDGPU_MACH_AMDGCN_GFX1036 780,31691
  EF_AMDGPU_MACH_AMDGCN_GFX1101 781,31738
  EF_AMDGPU_MACH_AMDGCN_GFX1102 782,31785
  EF_AMDGPU_MACH_AMDGCN_GFX1200 783,31832
  EF_AMDGPU_MACH_AMDGCN_RESERVED_0X49 784,31879
  EF_AMDGPU_MACH_AMDGCN_GFX1151 785,31926
  EF_AMDGPU_MACH_AMDGCN_GFX941 786,31973
  EF_AMDGPU_MACH_AMDGCN_GFX942 787,32020
  EF_AMDGPU_MACH_AMDGCN_RESERVED_0X4D 788,32067
  EF_AMDGPU_MACH_AMDGCN_GFX1201 789,32114
  EF_AMDGPU_MACH_AMDGCN_RESERVED_0X4F 790,32161
  EF_AMDGPU_MACH_AMDGCN_RESERVED_0X50 791,32208
  EF_AMDGPU_MACH_AMDGCN_FIRST 795,32318
  EF_AMDGPU_MACH_AMDGCN_LAST 796,32380
  EF_AMDGPU_FEATURE_XNACK_V2 802,32620
  EF_AMDGPU_FEATURE_TRAP_HANDLER_V2 807,32824
  EF_AMDGPU_FEATURE_XNACK_V3 813,33046
  EF_AMDGPU_FEATURE_SRAMECC_V3 818,33263
  EF_AMDGPU_FEATURE_XNACK_V4 823,33446
  EF_AMDGPU_FEATURE_XNACK_UNSUPPORTED_V4 825,33513
  EF_AMDGPU_FEATURE_XNACK_ANY_V4 827,33602
  EF_AMDGPU_FEATURE_XNACK_OFF_V4 829,33663
  EF_AMDGPU_FEATURE_XNACK_ON_V4 831,33723
  EF_AMDGPU_FEATURE_SRAMECC_V4 836,33911
  EF_AMDGPU_FEATURE_SRAMECC_UNSUPPORTED_V4 838,33982
  EF_AMDGPU_FEATURE_SRAMECC_ANY_V4 840,34075
  EF_AMDGPU_FEATURE_SRAMECC_OFF_V4 842,34140
  EF_AMDGPU_FEATURE_SRAMECC_ON_V4 844,34204
enum : unsigned 853,34356
  EF_CUDA_SM 855,34428
  EF_CUDA_SM20 858,34482
  EF_CUDA_SM21 859,34505
  EF_CUDA_SM30 860,34528
  EF_CUDA_SM32 861,34551
  EF_CUDA_SM35 862,34574
  EF_CUDA_SM37 863,34597
  EF_CUDA_SM50 864,34620
  EF_CUDA_SM52 865,34643
  EF_CUDA_SM53 866,34666
  EF_CUDA_SM60 867,34689
  EF_CUDA_SM61 868,34712
  EF_CUDA_SM62 869,34735
  EF_CUDA_SM70 870,34758
  EF_CUDA_SM72 871,34781
  EF_CUDA_SM75 872,34804
  EF_CUDA_SM80 873,34827
  EF_CUDA_SM86 874,34850
  EF_CUDA_SM87 875,34873
  EF_CUDA_SM89 876,34896
  EF_CUDA_SM90 878,34971
  EF_CUDA_TEXMODE_UNIFIED 881,35036
  EF_CUDA_TEXMODE_INDEPENDANT 883,35116
  EF_CUDA_64BIT_ADDRESS 885,35199
  EF_CUDA_ACCELERATORS 887,35274
  EF_CUDA_SW_FLAG_V2 889,35342
  EF_CUDA_VIRTUAL_SM 892,35444
enum : unsigned 906,35654
  EF_MSP430_MACH_MSP430x11 907,35672
  EF_MSP430_MACH_MSP430x11x1 908,35705
  EF_MSP430_MACH_MSP430x12 909,35741
  EF_MSP430_MACH_MSP430x13 910,35774
  EF_MSP430_MACH_MSP430x14 911,35807
  EF_MSP430_MACH_MSP430x15 912,35840
  EF_MSP430_MACH_MSP430x16 913,35873
  EF_MSP430_MACH_MSP430x20 914,35906
  EF_MSP430_MACH_MSP430x22 915,35939
  EF_MSP430_MACH_MSP430x23 916,35972
  EF_MSP430_MACH_MSP430x24 917,36005
  EF_MSP430_MACH_MSP430x26 918,36038
  EF_MSP430_MACH_MSP430x31 919,36071
  EF_MSP430_MACH_MSP430x32 920,36104
  EF_MSP430_MACH_MSP430x33 921,36137
  EF_MSP430_MACH_MSP430x41 922,36170
  EF_MSP430_MACH_MSP430x42 923,36203
  EF_MSP430_MACH_MSP430x43 924,36236
  EF_MSP430_MACH_MSP430x44 925,36269
  EF_MSP430_MACH_MSP430X 926,36302
  EF_MSP430_MACH_MSP430x46 927,36333
  EF_MSP430_MACH_MSP430x47 928,36366
  EF_MSP430_MACH_MSP430x54 929,36399
enum : unsigned 943,36609
  EF_CSKY_801 944,36627
  EF_CSKY_802 945,36648
  EF_CSKY_803 946,36670
  EF_CSKY_805 947,36691
  EF_CSKY_807 948,36713
  EF_CSKY_810 949,36734
  EF_CSKY_860 950,36755
  EF_CSKY_800 951,36776
  EF_CSKY_FLOAT 952,36798
  EF_CSKY_DSP 953,36824
  EF_CSKY_ABIV2 954,36848
  EF_CSKY_EFV1 955,36878
  EF_CSKY_EFV2 956,36906
  EF_CSKY_EFV3 957,36934
enum : unsigned 966,37069
  EF_LOONGARCH_ABI_SOFT_FLOAT 972,37289
  EF_LOONGARCH_ABI_SINGLE_FLOAT 973,37329
  EF_LOONGARCH_ABI_DOUBLE_FLOAT 974,37369
  EF_LOONGARCH_ABI_MODIFIER_MASK 975,37409
  EF_LOONGARCH_OBJABI_V0 978,37480
  EF_LOONGARCH_OBJABI_V1 979,37514
  EF_LOONGARCH_OBJABI_MASK 980,37549
enum : unsigned 989,37699
  EF_XTENSA_MACH 991,37757
  EF_XTENSA_MACH_NONE 993,37812
  EF_XTENSA_XT_INSN 994,37880
  EF_XTENSA_XT_LIT 995,37914
#undef ELF_RELOC1003,38029
struct Elf32_Shdr 1006,38066
  Elf32_Word sh_name;1007,38086
  Elf32_Word sh_type;1008,38155
  Elf32_Word sh_flags;1009,38206
  Elf32_Addr sh_addr;1010,38258
  Elf32_Off sh_offset;1011,38326
  Elf32_Word sh_size;1012,38394
  Elf32_Word sh_link;1013,38450
  Elf32_Word sh_info;1014,38526
  Elf32_Word sh_addralign;1015,38596
  Elf32_Word sh_entsize;1016,38652
struct Elf64_Shdr 1020,38800
  Elf64_Word sh_name;1021,38820
  Elf64_Word sh_type;1022,38842
  Elf64_Xword sh_flags;1023,38864
  Elf64_Addr sh_addr;1024,38888
  Elf64_Off sh_offset;1025,38910
  Elf64_Xword sh_size;1026,38933
  Elf64_Word sh_link;1027,38956
  Elf64_Word sh_info;1028,38978
  Elf64_Xword sh_addralign;1029,39000
  Elf64_Xword sh_entsize;1030,39028
  SHN_UNDEF 1035,39093
  SHN_LORESERVE 1036,39169
  SHN_LOPROC 1037,39220
  SHN_HIPROC 1038,39281
  SHN_LOOS 1039,39343
  SHN_HIOS 1040,39411
  SHN_ABS 1041,39480
  SHN_COMMON 1042,39561
  SHN_XINDEX 1043,39636
  SHN_HIRESERVE 1044,39705
enum : unsigned 1048,39779
  SHT_NULL 1049,39797
  SHT_PROGBITS 1050,39866
  SHT_SYMTAB 1051,39921
  SHT_STRTAB 1052,39964
  SHT_RELA 1053,40007
  SHT_HASH 1054,40074
  SHT_DYNAMIC 1055,40122
  SHT_NOTE 1056,40184
  SHT_NOBITS 1057,40241
  SHT_REL 1058,40306
  SHT_SHLIB 1059,40376
  SHT_DYNSYM 1060,40415
  SHT_INIT_ARRAY 1061,40458
  SHT_FINI_ARRAY 1062,40525
  SHT_PREINIT_ARRAY 1063,40589
  SHT_GROUP 1064,40650
  SHT_SYMTAB_SHNDX 1065,40694
  SHT_RELR 1068,40902
  SHT_LOOS 1069,40964
  SHT_ANDROID_REL 1072,41217
  SHT_ANDROID_RELA 1073,41249
  SHT_LLVM_ODRTAB 1074,41282
  SHT_LLVM_LINKER_OPTIONS 1075,41341
  SHT_LLVM_ADDRSIG 1076,41405
  SHT_LLVM_DEPENDENT_LIBRARIES 1078,41541
  SHT_LLVM_SYMPART 1080,41647
  SHT_LLVM_PART_EHDR 1081,41717
  SHT_LLVM_PART_PHDR 1082,41790
  SHT_LLVM_BB_ADDR_MAP_V0 1083,41858
  SHT_LLVM_CALL_GRAPH_PROFILE 1086,42004
  SHT_LLVM_BB_ADDR_MAP 1087,42076
  SHT_LLVM_OFFLOADING 1088,42153
  SHT_LLVM_LTO 1089,42229
  SHT_ANDROID_RELR 1092,42478
  SHT_GNU_ATTRIBUTES 1093,42550
  SHT_GNU_HASH 1094,42607
  SHT_GNU_verdef 1095,42667
  SHT_GNU_verneed 1096,42730
  SHT_GNU_versym 1097,42792
  SHT_HIOS 1098,42857
  SHT_LOPROC 1099,42935
  SHT_ARM_EXIDX 1102,43095
  SHT_ARM_PREEMPTMAP 1104,43173
  SHT_ARM_ATTRIBUTES 1106,43252
  SHT_ARM_DEBUGOVERLAY 1107,43288
  SHT_ARM_OVERLAYSECTION 1108,43326
  SHT_AARCH64_AUTH_RELR 1111,43538
  SHT_AARCH64_MEMTAG_GLOBALS_STATIC 1114,43753
  SHT_AARCH64_MEMTAG_GLOBALS_DYNAMIC 1115,43804
  SHT_HEX_ORDERED 1116,43856
  SHT_X86_64_UNWIND 1118,44002
  SHT_MIPS_REGINFO 1120,44059
  SHT_MIPS_OPTIONS 1121,44123
  SHT_MIPS_DWARF 1122,44176
  SHT_MIPS_ABIFLAGS 1123,44238
  SHT_MSP430_ATTRIBUTES 1125,44293
  SHT_RISCV_ATTRIBUTES 1127,44333
  SHT_CSKY_ATTRIBUTES 1129,44372
  SHT_HIPROC 1131,44410
  SHT_LOUSER 1132,44478
  SHT_HIUSER 1133,44547
enum : unsigned 1137,44639
  SHF_WRITE 1139,44712
  SHF_ALLOC 1142,44787
  SHF_EXECINSTR 1145,44862
  SHF_MERGE 1148,44931
  SHF_STRINGS 1151,45010
  SHF_INFO_LINK 1154,45098
  SHF_LINK_ORDER 1157,45182
  SHF_OS_NONCONFORMING 1161,45301
  SHF_GROUP 1164,45385
  SHF_TLS 1167,45454
  SHF_COMPRESSED 1170,45529
  SHF_GNU_RETAIN 1173,45622
  SHF_EXCLUDE 1176,45727
  SHF_MASKOS 1180,45795
  SHF_SUNW_NODISCARD 1183,45866
  SHF_MASKPROC 1186,45949
  XCORE_SHF_DP_SECTION 1191,46161
  XCORE_SHF_CP_SECTION 1196,46388
  SHF_X86_64_LARGE 1205,46950
  SHF_HEX_GPREL 1209,47083
  SHF_MIPS_NODUPES 1213,47228
  SHF_MIPS_NAMES 1216,47316
  SHF_MIPS_LOCAL 1219,47384
  SHF_MIPS_NOSTRIP 1222,47448
  SHF_MIPS_GPREL 1225,47529
  SHF_MIPS_MERGE 1228,47597
  SHF_MIPS_ADDR 1231,47687
  SHF_MIPS_STRING 1234,47763
  SHF_ARM_PURECODE 1237,47856
enum : unsigned 1241,47915
  GRP_COMDAT 1242,47933
  GRP_MASKOS 1243,47953
  GRP_MASKPROC 1244,47980
struct Elf32_Sym 1248,48047
  Elf32_Word st_name;1249,48066
  Elf32_Addr st_value;1250,48133
  Elf32_Word st_size;1251,48206
  unsigned char st_info;1252,48254
  unsigned char st_other;1253,48320
  Elf32_Half st_shndx;1254,48372
  unsigned char getBinding(1258,48599
  unsigned char getType(1259,48659
  void setBinding(1260,48718
  void setType(1261,48790
  void setBindingAndType(1262,48862
struct Elf64_Sym 1268,49003
  Elf64_Word st_name;1269,49022
  unsigned char st_info;1270,49089
  unsigned char st_other;1271,49155
  Elf64_Half st_shndx;1272,49207
  Elf64_Addr st_value;1273,49285
  Elf64_Xword st_size;1274,49358
  unsigned char getBinding(1278,49509
  unsigned char getType(1279,49569
  void setBinding(1280,49628
  void setType(1281,49700
  void setBindingAndType(1282,49772
  SYMENTRY_SIZE32 1289,49933
  SYMENTRY_SIZE64 1290,49985
  STB_LOCAL 1295,50069
  STB_GLOBAL 1296,50148
  STB_WEAK 1297,50227
  STB_GNU_UNIQUE 1298,50294
  STB_LOOS 1299,50317
  STB_HIOS 1300,50385
  STB_LOPROC 1301,50454
  STB_HIPROC 1302,50515
  STT_NOTYPE 1307,50605
  STT_OBJECT 1308,50661
  STT_FUNC 1309,50734
  STT_SECTION 1310,50802
  STT_FILE 1311,50854
  STT_COMMON 1312,50924
  STT_TLS 1313,50979
  STT_GNU_IFUNC 1314,51029
  STT_LOOS 1315,51076
  STT_HIOS 1316,51146
  STT_LOPROC 1317,51217
  STT_HIPROC 1318,51280
  STT_AMDGPU_HSA_KERNEL 1321,51370
  STV_DEFAULT 1325,51410
  STV_INTERNAL 1326,51473
  STV_HIDDEN 1327,51529
  STV_PROTECTED 1328,51584
enum { STN_UNDEF 1332,51677
  RSS_UNDEF 1336,51781
  RSS_GP 1337,51806
  RSS_GP0 1338,51838
  RSS_LOC 1339,51908
struct Elf32_Rel 1343,52014
  Elf32_Addr r_offset;1344,52033
  Elf32_Word r_info;1345,52112
  Elf32_Word getSymbol(1349,52332
  unsigned char getType(1350,52389
  void setSymbol(1351,52465
  void setType(1352,52532
  void setSymbolAndType(1353,52602
struct Elf32_Rela 1359,52736
  Elf32_Addr r_offset;1360,52756
  Elf32_Word r_info;1361,52836
  Elf32_Sword r_addend;1362,52914
  Elf32_Word getSymbol(1366,53135
  unsigned char getType(1367,53192
  void setSymbol(1368,53268
  void setType(1369,53335
  void setSymbolAndType(1370,53405
typedef Elf32_Word Elf32_Relr;1376,53578
struct Elf64_Rel 1379,53698
  Elf64_Addr r_offset;1380,53717
  Elf64_Xword r_info;1381,53797
  Elf64_Word getSymbol(1385,54018
  Elf64_Word getType(1386,54076
  void setSymbol(1387,54152
  void setType(1388,54219
  void setSymbolAndType(1389,54286
struct Elf64_Rela 1395,54447
  Elf64_Addr r_offset;1396,54467
  Elf64_Xword r_info;1397,54547
  Elf64_Sxword r_addend;1398,54625
  Elf64_Word getSymbol(1402,54848
  Elf64_Word getType(1403,54906
  void setSymbol(1404,54982
  void setType(1405,55049
  void setSymbolAndType(1406,55116
typedef Elf64_Xword Elf64_Relr;1412,55316
struct Elf32_Phdr 1415,55420
  Elf32_Word p_type;1416,55440
  Elf32_Off p_offset;1417,55482
  Elf32_Addr p_vaddr;1418,55555
  Elf32_Addr p_paddr;1419,55621
  Elf32_Word p_filesz;1420,55702
  Elf32_Word p_memsz;1421,55781
  Elf32_Word p_flags;1422,55859
  Elf32_Word p_align;1423,55899
struct Elf64_Phdr 1427,55987
  Elf64_Word p_type;1428,56007
  Elf64_Word p_flags;1429,56050
  Elf64_Off p_offset;1430,56091
  Elf64_Addr p_vaddr;1431,56165
  Elf64_Addr p_paddr;1432,56232
  Elf64_Xword p_filesz;1433,56311
  Elf64_Xword p_memsz;1434,56391
  Elf64_Xword p_align;1435,56470
  PT_NULL 1440,56555
  PT_LOAD 1441,56600
  PT_DYNAMIC 1442,56647
  PT_INTERP 1443,56705
  PT_NOTE 1444,56756
  PT_SHLIB 1445,56808
  PT_PHDR 1446,56847
  PT_TLS 1447,56909
  PT_LOOS 1448,56973
  PT_HIOS 1449,57050
  PT_LOPROC 1450,57128
  PT_HIPROC 1451,57207
  PT_GNU_EH_FRAME 1455,57366
  PT_SUNW_EH_FRAME 1456,57398
  PT_SUNW_UNWIND 1457,57431
  PT_GNU_STACK 1459,57463
  PT_GNU_RELRO 1460,57529
  PT_GNU_PROPERTY 1461,57592
  PT_OPENBSD_MUTABLE 1463,57663
  PT_OPENBSD_RANDOMIZE 1464,57732
  PT_OPENBSD_WXNEEDED 1465,57795
  PT_OPENBSD_NOBTCFI 1466,57864
  PT_OPENBSD_SYSCALLS 1467,57938
  PT_OPENBSD_BOOTDATA 1468,57997
  PT_ARM_ARCHEXT 1471,58097
  PT_ARM_EXIDX 1473,58216
  PT_ARM_UNWIND 1474,58245
  PT_AARCH64_MEMTAG_MTE 1476,58308
  PT_MIPS_REGINFO 1479,58379
  PT_MIPS_RTPROC 1480,58443
  PT_MIPS_OPTIONS 1481,58504
  PT_MIPS_ABIFLAGS 1482,58557
  PT_RISCV_ATTRIBUTES 1485,58645
enum : unsigned 1489,58707
  PF_X 1490,58725
  PF_W 1491,58763
  PF_R 1492,58799
  PF_MASKOS 1493,58834
  PF_MASKPROC 1494,58910
struct Elf32_Dyn 1498,59017
  Elf32_Sword d_tag;1499,59036
    Elf32_Word d_val;1501,59099
    Elf32_Addr d_ptr;1502,59148
  } d_un;1503,59197
struct Elf64_Dyn 1507,59245
  Elf64_Sxword d_tag;1508,59264
    Elf64_Xword d_val;1510,59328
    Elf64_Addr d_ptr;1511,59378
  } d_un;1512,59428
#define DYNAMIC_TAG(1517,59478
#undef DYNAMIC_TAG1519,59557
  DF_ORIGIN 1524,59607
  DF_SYMBOLIC 1525,59667
  DF_TEXTREL 1526,59741
  DF_BIND_NOW 1527,59814
  DF_STATIC_TLS 1528,59873
  DF_1_NOW 1533,60026
  DF_1_GLOBAL 1534,60090
  DF_1_GROUP 1535,60157
  DF_1_NODELETE 1536,60223
  DF_1_LOADFLTR 1537,60292
  DF_1_INITFIRST 1538,60361
  DF_1_NOOPEN 1539,60431
  DF_1_ORIGIN 1540,60498
  DF_1_DIRECT 1541,60557
  DF_1_TRANS 1542,60615
  DF_1_INTERPOSE 1543,60642
  DF_1_NODEFLIB 1544,60706
  DF_1_NODUMP 1545,60773
  DF_1_CONFALT 1546,60835
  DF_1_ENDFILTEE 1547,60905
  DF_1_DISPRELDNE 1548,60974
  DF_1_DISPRELPND 1549,61043
  DF_1_NODIRECT 1550,61110
  DF_1_IGNMULDEF 1551,61175
  DF_1_NOKSYMS 1552,61206
  DF_1_NOHDR 1553,61235
  DF_1_EDITED 1554,61262
  DF_1_NORELOC 1555,61325
  DF_1_SYMINTPOSE 1556,61354
  DF_1_GLOBAUDIT 1557,61424
  DF_1_SINGLETON 1558,61485
  DF_1_PIE 1559,61548
  RHF_NONE 1564,61664
  RHF_QUICKSTART 1565,61720
  RHF_NOTPOT 1566,61790
  RHS_NO_LIBRARY_REPLACEMENT 1567,61869
  RHF_NO_MOVE 1568,61939
  RHF_SGI_ONLY 1569,62019
  RHF_GUARANTEE_INIT 1570,62088
  RHF_DELTA_C_PLUS_PLUS 1573,62312
  RHF_GUARANTEE_START_INIT 1574,62383
  RHF_PIXIE 1577,62606
  RHF_DEFAULT_DELAY_LOAD 1578,62672
  RHF_REQUICKSTART 1579,62745
  RHF_REQUICKSTARTED 1580,62820
  RHF_CORD 1581,62897
  RHF_NO_UNRES_UNDEF 1582,62962
  RHF_RLD_ORDER_SAFE 1584,63099
enum { VER_DEF_NONE 1588,63233
enum { VER_DEF_NONE = 0, VER_DEF_CURRENT 1588,63233
enum { VER_FLG_BASE 1591,63323
enum { VER_FLG_BASE = 0x1, VER_FLG_WEAK 1591,63323
enum { VER_FLG_BASE = 0x1, VER_FLG_WEAK = 0x2, VER_FLG_INFO 1591,63323
  VER_NDX_LOCAL 1595,63474
  VER_NDX_GLOBAL 1596,63529
  VERSYM_VERSION 1597,63585
  VERSYM_HIDDEN 1598,63634
enum { VER_NEED_NONE 1602,63753
enum { VER_NEED_NONE = 0, VER_NEED_CURRENT 1602,63753
enum : unsigned 1607,63855
  NT_VERSION 1608,63873
  NT_ARCH 1609,63891
  NT_GNU_BUILD_ATTRIBUTE_OPEN 1610,63906
  NT_GNU_BUILD_ATTRIBUTE_FUNC 1611,63945
enum : unsigned 1615,64008
  NT_PRSTATUS 1616,64026
  NT_FPREGSET 1617,64045
  NT_PRPSINFO 1618,64064
  NT_TASKSTRUCT 1619,64083
  NT_AUXV 1620,64104
  NT_PSTATUS 1621,64119
  NT_FPREGS 1622,64138
  NT_PSINFO 1623,64156
  NT_LWPSTATUS 1624,64174
  NT_LWPSINFO 1625,64195
  NT_WIN32PSTATUS 1626,64215
  NT_PPC_VMX 1628,64240
  NT_PPC_VSX 1629,64262
  NT_PPC_TAR 1630,64284
  NT_PPC_PPR 1631,64306
  NT_PPC_DSCR 1632,64328
  NT_PPC_EBB 1633,64351
  NT_PPC_PMU 1634,64373
  NT_PPC_TM_CGPR 1635,64395
  NT_PPC_TM_CFPR 1636,64421
  NT_PPC_TM_CVMX 1637,64447
  NT_PPC_TM_CVSX 1638,64473
  NT_PPC_TM_SPR 1639,64499
  NT_PPC_TM_CTAR 1640,64524
  NT_PPC_TM_CPPR 1641,64550
  NT_PPC_TM_CDSCR 1642,64576
  NT_386_TLS 1644,64604
  NT_386_IOPERM 1645,64626
  NT_X86_XSTATE 1646,64651
  NT_S390_HIGH_GPRS 1648,64677
  NT_S390_TIMER 1649,64706
  NT_S390_TODCMP 1650,64731
  NT_S390_TODPREG 1651,64757
  NT_S390_CTRS 1652,64784
  NT_S390_PREFIX 1653,64808
  NT_S390_LAST_BREAK 1654,64834
  NT_S390_SYSTEM_CALL 1655,64864
  NT_S390_TDB 1656,64895
  NT_S390_VXRS_LOW 1657,64918
  NT_S390_VXRS_HIGH 1658,64946
  NT_S390_GS_CB 1659,64975
  NT_S390_GS_BC 1660,65000
  NT_ARM_VFP 1662,65026
  NT_ARM_TLS 1663,65048
  NT_ARM_HW_BREAK 1664,65070
  NT_ARM_HW_WATCH 1665,65097
  NT_ARM_SVE 1666,65124
  NT_ARM_PAC_MASK 1667,65146
  NT_ARM_TAGGED_ADDR_CTRL 1668,65173
  NT_ARM_SSVE 1669,65208
  NT_ARM_ZA 1670,65231
  NT_ARM_ZT 1671,65252
  NT_FILE 1673,65274
  NT_PRXFPREG 1674,65298
  NT_SIGINFO 1675,65326
  NT_LLVM_HWASAN_GLOBALS 1680,65388
  NT_GNU_ABI_TAG 1685,65448
  NT_GNU_HWCAP 1686,65470
  NT_GNU_BUILD_ID 1687,65490
  NT_GNU_GOLD_VERSION 1688,65513
  NT_GNU_PROPERTY_TYPE_0 1689,65540
  FDO_PACKAGING_METADATA 1690,65570
  NT_ANDROID_TYPE_IDENT 1695,65643
  NT_ANDROID_TYPE_KUSER 1696,65672
  NT_ANDROID_TYPE_MEMTAG 1697,65701
  NT_ARM_TYPE_PAUTH_ABI_TAG 1702,65761
  NT_MEMTAG_LEVEL_NONE 1713,66307
  NT_MEMTAG_LEVEL_ASYNC 1714,66335
  NT_MEMTAG_LEVEL_SYNC 1715,66364
  NT_MEMTAG_LEVEL_MASK 1716,66392
  NT_MEMTAG_HEAP 1719,66528
  NT_MEMTAG_STACK 1720,66550
enum : unsigned 1724,66630
  GNU_PROPERTY_STACK_SIZE 1725,66648
  GNU_PROPERTY_NO_COPY_ON_PROTECTED 1726,66679
  GNU_PROPERTY_AARCH64_FEATURE_1_AND 1727,66720
  GNU_PROPERTY_X86_FEATURE_1_AND 1728,66771
  GNU_PROPERTY_X86_UINT32_OR_LO 1730,66819
  GNU_PROPERTY_X86_FEATURE_2_NEEDED 1731,66865
  GNU_PROPERTY_X86_ISA_1_NEEDED 1732,66938
  GNU_PROPERTY_X86_UINT32_OR_AND_LO 1734,67008
  GNU_PROPERTY_X86_FEATURE_2_USED 1735,67058
  GNU_PROPERTY_X86_ISA_1_USED 1736,67133
enum : unsigned 1740,67243
  GNU_PROPERTY_AARCH64_FEATURE_1_BTI 1741,67261
  GNU_PROPERTY_AARCH64_FEATURE_1_PAC 1742,67308
  GNU_PROPERTY_AARCH64_FEATURE_1_GCS 1743,67355
enum : unsigned 1747,67437
  GNU_PROPERTY_X86_FEATURE_1_IBT 1748,67455
  GNU_PROPERTY_X86_FEATURE_1_SHSTK 1749,67498
  GNU_PROPERTY_X86_FEATURE_2_X86 1751,67544
  GNU_PROPERTY_X86_FEATURE_2_X87 1752,67587
  GNU_PROPERTY_X86_FEATURE_2_MMX 1753,67630
  GNU_PROPERTY_X86_FEATURE_2_XMM 1754,67673
  GNU_PROPERTY_X86_FEATURE_2_YMM 1755,67716
  GNU_PROPERTY_X86_FEATURE_2_ZMM 1756,67759
  GNU_PROPERTY_X86_FEATURE_2_FXSR 1757,67802
  GNU_PROPERTY_X86_FEATURE_2_XSAVE 1758,67846
  GNU_PROPERTY_X86_FEATURE_2_XSAVEOPT 1759,67891
  GNU_PROPERTY_X86_FEATURE_2_XSAVEC 1760,67939
  GNU_PROPERTY_X86_ISA_1_BASELINE 1762,67986
  GNU_PROPERTY_X86_ISA_1_V2 1763,68030
  GNU_PROPERTY_X86_ISA_1_V3 1764,68068
  GNU_PROPERTY_X86_ISA_1_V4 1765,68106
  NT_FREEBSD_ABI_TAG 1770,68178
  NT_FREEBSD_NOINIT_TAG 1771,68204
  NT_FREEBSD_ARCH_TAG 1772,68233
  NT_FREEBSD_FEATURE_CTL 1773,68260
  NT_FREEBSD_FCTL_ASLR_DISABLE 1778,68372
  NT_FREEBSD_FCTL_PROTMAX_DISABLE 1779,68417
  NT_FREEBSD_FCTL_STKGAP_DISABLE 1780,68465
  NT_FREEBSD_FCTL_WXNEEDED 1781,68512
  NT_FREEBSD_FCTL_LA48 1782,68553
  NT_FREEBSD_FCTL_ASG_DISABLE 1783,68590
  NT_FREEBSD_THRMISC 1788,68673
  NT_FREEBSD_PROCSTAT_PROC 1789,68699
  NT_FREEBSD_PROCSTAT_FILES 1790,68731
  NT_FREEBSD_PROCSTAT_VMMAP 1791,68764
  NT_FREEBSD_PROCSTAT_GROUPS 1792,68798
  NT_FREEBSD_PROCSTAT_UMASK 1793,68833
  NT_FREEBSD_PROCSTAT_RLIMIT 1794,68867
  NT_FREEBSD_PROCSTAT_OSREL 1795,68902
  NT_FREEBSD_PROCSTAT_PSSTRINGS 1796,68936
  NT_FREEBSD_PROCSTAT_AUXV 1797,68974
  NT_NETBSDCORE_PROCINFO 1802,69045
  NT_NETBSDCORE_AUXV 1803,69075
  NT_NETBSDCORE_LWPSTATUS 1804,69101
  NT_OPENBSD_PROCINFO 1809,69172
  NT_OPENBSD_AUXV 1810,69200
  NT_OPENBSD_REGS 1811,69224
  NT_OPENBSD_FPREGS 1812,69248
  NT_OPENBSD_XFPREGS 1813,69274
  NT_OPENBSD_WCOOKIE 1814,69301
  SHN_AMDGPU_LDS 1819,69375
  NT_AMD_HSA_CODE_OBJECT_VERSION 1824,69511
  NT_AMD_HSA_HSAIL 1825,69549
  NT_AMD_HSA_ISA_VERSION 1826,69573
  NT_AMD_HSA_METADATA 1828,69673
  NT_AMD_HSA_ISA_NAME 1829,69701
  NT_AMD_PAL_METADATA 1830,69729
  NT_AMDGPU_METADATA 1836,69888
enum : unsigned 1840,69952
  NT_LLVM_OPENMP_OFFLOAD_VERSION 1841,69970
  NT_LLVM_OPENMP_OFFLOAD_PRODUCER 1842,70008
  NT_LLVM_OPENMP_OFFLOAD_PRODUCER_VERSION 1843,70047
  GNU_ABI_TAG_LINUX 1847,70104
  GNU_ABI_TAG_HURD 1848,70129
  GNU_ABI_TAG_SOLARIS 1849,70153
  GNU_ABI_TAG_FREEBSD 1850,70180
  GNU_ABI_TAG_NETBSD 1851,70207
  GNU_ABI_TAG_SYLLABLE 1852,70233
  GNU_ABI_TAG_NACL 1853,70261
constexpr const char *ELF_NOTE_GNU ELF_NOTE_GNU1856,70289
  RELOCATION_GROUPED_BY_INFO_FLAG 1860,70383
  RELOCATION_GROUPED_BY_OFFSET_DELTA_FLAG 1861,70422
  RELOCATION_GROUPED_BY_ADDEND_FLAG 1862,70469
  RELOCATION_GROUP_HAS_ADDEND_FLAG 1863,70510
struct Elf32_Chdr 1867,70594
  Elf32_Word ch_type;1868,70614
  Elf32_Word ch_size;1869,70636
  Elf32_Word ch_addralign;1870,70658
struct Elf64_Chdr 1874,70729
  Elf64_Word ch_type;1875,70749
  Elf64_Word ch_reserved;1876,70771
  Elf64_Xword ch_size;1877,70797
  Elf64_Xword ch_addralign;1878,70820
struct Elf32_Nhdr 1882,70878
  Elf32_Word n_namesz;1883,70898
  Elf32_Word n_descsz;1884,70921
  Elf32_Word n_type;1885,70944
struct Elf64_Nhdr 1889,70995
  Elf64_Word n_namesz;1890,71015
  Elf64_Word n_descsz;1891,71038
  Elf64_Word n_type;1892,71061
  ELFCOMPRESS_ZLIB 1897,71157
  ELFCOMPRESS_ZSTD 1898,71219
  ELFCOMPRESS_LOOS 1899,71277
  ELFCOMPRESS_HIOS 1900,71337
  ELFCOMPRESS_LOPROC 1901,71395
  ELFCOMPRESS_HIPROC 1902,71462

/usr/include/llvm/BinaryFormat/GOFF.h,2751
#define LLVM_BINARYFORMAT_GOFF_H19,787
enum RecordType 44,1652
  RT_ESD 45,1680
  RT_TXT 46,1694
  RT_RLD 47,1708
  RT_LEN 48,1722
  RT_END 49,1736
  RT_HDR 50,1750
enum ESDSymbolType 53,1769
  ESD_ST_SectionDefinition 54,1800
  ESD_ST_ElementDefinition 55,1832
  ESD_ST_LabelDefinition 56,1864
  ESD_ST_PartReference 57,1894
  ESD_ST_ExternalReference 58,1922
enum ESDNameSpaceId 61,1958
  ESD_NS_ProgramManagementBinder 62,1990
  ESD_NS_NormalName 63,2028
  ESD_NS_PseudoRegister 64,2053
  ESD_NS_Parts 65,2082
enum ESDReserveQwords 68,2105
  ESD_RQ_0 69,2139
  ESD_RQ_1 70,2155
  ESD_RQ_2 71,2171
  ESD_RQ_3 72,2187
enum ESDAmode 75,2206
  ESD_AMODE_None 76,2232
  ESD_AMODE_24 77,2254
  ESD_AMODE_31 78,2274
  ESD_AMODE_ANY 79,2294
  ESD_AMODE_64 80,2315
  ESD_AMODE_MIN 81,2335
enum ESDRmode 84,2361
  ESD_RMODE_None 85,2387
  ESD_RMODE_24 86,2409
  ESD_RMODE_31 87,2429
  ESD_RMODE_64 88,2449
enum ESDTextStyle 91,2473
  ESD_TS_ByteOriented 92,2503
  ESD_TS_Structured 93,2530
  ESD_TS_Unstructured 94,2555
enum ESDBindingAlgorithm 97,2586
  ESD_BA_Concatenate 98,2623
  ESD_BA_Merge 99,2649
enum ESDTaskingBehavior 102,2673
  ESD_TA_Unspecified 103,2709
  ESD_TA_NonReus 104,2735
  ESD_TA_Reus 105,2757
  ESD_TA_Rent 106,2776
enum ESDExecutable 109,2799
  ESD_EXE_Unspecified 110,2830
  ESD_EXE_DATA 111,2857
  ESD_EXE_CODE 112,2877
enum ESDDuplicateSymbolSeverity 115,2901
  ESD_DSS_NoWarning 116,2945
  ESD_DSS_Warning 117,2970
  ESD_DSS_Error 118,2993
  ESD_DSS_Reserved 119,3014
enum ESDBindingStrength 122,3042
  ESD_BST_Strong 123,3078
  ESD_BST_Weak 124,3100
enum ESDLoadingBehavior 127,3124
  ESD_LB_Initial 128,3160
  ESD_LB_Deferred 129,3182
  ESD_LB_NoLoad 130,3205
  ESD_LB_Reserved 131,3226
enum ESDBindingScope 134,3253
  ESD_BSC_Unspecified 135,3286
  ESD_BSC_Section 136,3313
  ESD_BSC_Module 137,3336
  ESD_BSC_Library 138,3358
  ESD_BSC_ImportExport 139,3381
enum ESDLinkageType 142,3413
enum ESDLinkageType : uint8_t { ESD_LT_OS 142,3413
enum ESDLinkageType : uint8_t { ESD_LT_OS = 0, ESD_LT_XPLink 142,3413
enum ESDAlignment 144,3482
  ESD_ALIGN_Byte 145,3512
  ESD_ALIGN_Halfword 146,3534
  ESD_ALIGN_Fullword 147,3560
  ESD_ALIGN_Doubleword 148,3586
  ESD_ALIGN_Quadword 149,3614
  ESD_ALIGN_32byte 150,3640
  ESD_ALIGN_64byte 151,3664
  ESD_ALIGN_128byte 152,3688
  ESD_ALIGN_256byte 153,3713
  ESD_ALIGN_512byte 154,3738
  ESD_ALIGN_1024byte 155,3763
  ESD_ALIGN_2Kpage 156,3790
  ESD_ALIGN_4Kpage 157,3815
enum ENDEntryPointRequest 160,3844
  END_EPR_None 161,3882
  END_EPR_EsdidOffset 162,3902
  END_EPR_ExternalName 163,3929
  END_EPR_Reserved 164,3957
enum SubsectionKind 168,4057
  SK_PPA1 169,4089
  SK_PPA2 170,4104

/usr/include/llvm/BinaryFormat/MachO.h,42401
#define LLVM_BINARYFORMAT_MACHO_H14,565
enum : uint32_t 27,827
  MH_MAGIC 30,947
  MH_CIGAM 31,973
  MH_MAGIC_64 32,999
  MH_CIGAM_64 33,1028
  FAT_MAGIC 34,1057
  FAT_CIGAM 35,1084
  FAT_MAGIC_64 36,1111
  FAT_CIGAM_64 37,1141
enum HeaderFileType 40,1174
  MH_OBJECT 43,1301
  MH_EXECUTE 44,1321
  MH_FVMLIB 45,1342
  MH_CORE 46,1362
  MH_PRELOAD 47,1380
  MH_DYLIB 48,1401
  MH_DYLINKER 49,1420
  MH_BUNDLE 50,1442
  MH_DYLIB_STUB 51,1462
  MH_DSYM 52,1486
  MH_KEXT_BUNDLE 53,1504
  MH_FILESET 54,1529
  MH_NOUNDEFS 60,1667
  MH_INCRLINK 61,1696
  MH_DYLDLINK 62,1725
  MH_BINDATLOAD 63,1754
  MH_PREBOUND 64,1785
  MH_SPLIT_SEGS 65,1814
  MH_LAZY_INIT 66,1845
  MH_TWOLEVEL 67,1875
  MH_FORCE_FLAT 68,1904
  MH_NOMULTIDEFS 69,1935
  MH_NOFIXPREBINDING 70,1967
  MH_PREBINDABLE 71,2003
  MH_ALLMODSBOUND 72,2035
  MH_SUBSECTIONS_VIA_SYMBOLS 73,2068
  MH_CANONICAL 74,2112
  MH_WEAK_DEFINES 75,2142
  MH_BINDS_TO_WEAK 76,2175
  MH_ALLOW_STACK_EXECUTION 77,2209
  MH_ROOT_SAFE 78,2251
  MH_SETUID_SAFE 79,2281
  MH_NO_REEXPORTED_DYLIBS 80,2313
  MH_PIE 81,2354
  MH_DEAD_STRIPPABLE_DYLIB 82,2378
  MH_HAS_TLV_DESCRIPTORS 83,2420
  MH_NO_HEAP_EXECUTION 84,2460
  MH_APP_EXTENSION_SAFE 85,2498
  MH_NLIST_OUTOFSYNC_WITH_DYLDINFO 86,2537
  MH_SIM_SUPPORT 87,2587
  MH_DYLIB_IN_CACHE 88,2619
enum : uint32_t 91,2658
  LC_REQ_DYLD 93,2736
#define HANDLE_LOAD_COMMAND(96,2768
enum LoadCommandType 98,2842
#undef HANDLE_LOAD_COMMAND102,2919
enum : uint32_t 104,2947
  SG_HIGHVM 106,3038
  SG_FVMLIB 107,3058
  SG_NORELOC 108,3078
  SG_PROTECTED_VERSION_1 109,3099
  SG_READ_ONLY 110,3132
  SECTION_TYPE 114,3256
  SECTION_ATTRIBUTES 115,3312
  SECTION_ATTRIBUTES_USR 116,3374
  SECTION_ATTRIBUTES_SYS 117,3440
enum SectionType 122,3655
  S_REGULAR 127,3858
  S_ZEROFILL 129,3927
  S_CSTRING_LITERALS 131,4008
  S_4BYTE_LITERALS 133,4093
  S_8BYTE_LITERALS 135,4176
  S_LITERAL_POINTERS 137,4266
  S_NON_LAZY_SYMBOL_POINTERS 139,4370
  S_LAZY_SYMBOL_POINTERS 141,4474
  S_SYMBOL_STUBS 144,4606
  S_MOD_INIT_FUNC_POINTERS 147,4727
  S_MOD_TERM_FUNC_POINTERS 150,4855
  S_COALESCED 152,4962
  S_GB_ZEROFILL 155,5080
  S_INTERPOSING 158,5195
  S_16BYTE_LITERALS 160,5282
  S_DTRACE_DOF 162,5371
  S_LAZY_DYLIB_SYMBOL_POINTERS 165,5495
  S_THREAD_LOCAL_REGULAR 167,5593
  S_THREAD_LOCAL_ZEROFILL 169,5690
  S_THREAD_LOCAL_VARIABLES 172,5815
  S_THREAD_LOCAL_VARIABLE_POINTERS 175,5948
  S_THREAD_LOCAL_INIT_FUNCTION_POINTERS 178,6117
  S_INIT_FUNC_OFFSETS 181,6254
  LAST_KNOWN_SECTION_TYPE 183,6286
enum : uint32_t 186,6338
  S_ATTR_PURE_INSTRUCTIONS 192,6594
  S_ATTR_NO_TOC 195,6749
  S_ATTR_STRIP_STATIC_SYMS 198,6898
  S_ATTR_NO_DEAD_STRIP 200,6988
  S_ATTR_LIVE_SUPPORT 202,7101
  S_ATTR_SELF_MODIFYING_CODE 205,7225
  S_ATTR_DEBUG 207,7307
  S_ATTR_SOME_INSTRUCTIONS 213,7564
  S_ATTR_EXT_RELOC 215,7672
  S_ATTR_LOC_RELOC 217,7769
  INDIRECT_SYMBOL_LOCAL 221,7893
  INDIRECT_SYMBOL_ABS 222,7932
enum DataRegionType 225,7972
  DICE_KIND_DATA 227,8064
  DICE_KIND_JUMP_TABLE8 228,8087
  DICE_KIND_JUMP_TABLE16 229,8117
  DICE_KIND_JUMP_TABLE32 230,8148
  DICE_KIND_ABS_JUMP_TABLE32 231,8179
enum RebaseType 234,8217
  REBASE_TYPE_POINTER 235,8235
  REBASE_TYPE_TEXT_ABSOLUTE32 236,8263
  REBASE_TYPE_TEXT_PCREL32 237,8299
enum { REBASE_OPCODE_MASK 240,8335
enum { REBASE_OPCODE_MASK = 0xF0u, REBASE_IMMEDIATE_MASK 240,8335
enum RebaseOpcode 242,8404
  REBASE_OPCODE_DONE 243,8424
  REBASE_OPCODE_SET_TYPE_IMM 244,8454
  REBASE_OPCODE_SET_SEGMENT_AND_OFFSET_ULEB 245,8492
  REBASE_OPCODE_ADD_ADDR_ULEB 246,8545
  REBASE_OPCODE_ADD_ADDR_IMM_SCALED 247,8584
  REBASE_OPCODE_DO_REBASE_IMM_TIMES 248,8629
  REBASE_OPCODE_DO_REBASE_ULEB_TIMES 249,8674
  REBASE_OPCODE_DO_REBASE_ADD_ADDR_ULEB 250,8720
  REBASE_OPCODE_DO_REBASE_ULEB_TIMES_SKIPPING_ULEB 251,8769
enum BindType 254,8832
  BIND_TYPE_POINTER 255,8848
  BIND_TYPE_TEXT_ABSOLUTE32 256,8874
  BIND_TYPE_TEXT_PCREL32 257,8908
enum BindSpecialDylib 260,8942
  BIND_SPECIAL_DYLIB_SELF 261,8966
  BIND_SPECIAL_DYLIB_MAIN_EXECUTABLE 262,8997
  BIND_SPECIAL_DYLIB_FLAT_LOOKUP 263,9040
  BIND_SPECIAL_DYLIB_WEAK_LOOKUP 264,9079
  BIND_SYMBOL_FLAGS_WEAK_IMPORT 268,9128
  BIND_SYMBOL_FLAGS_NON_WEAK_DEFINITION 269,9168
  BIND_OPCODE_MASK 271,9217
  BIND_IMMEDIATE_MASK 272,9245
enum BindOpcode 275,9279
  BIND_OPCODE_DONE 276,9297
  BIND_OPCODE_SET_DYLIB_ORDINAL_IMM 277,9325
  BIND_OPCODE_SET_DYLIB_ORDINAL_ULEB 278,9370
  BIND_OPCODE_SET_DYLIB_SPECIAL_IMM 279,9416
  BIND_OPCODE_SET_SYMBOL_TRAILING_FLAGS_IMM 280,9461
  BIND_OPCODE_SET_TYPE_IMM 281,9514
  BIND_OPCODE_SET_ADDEND_SLEB 282,9550
  BIND_OPCODE_SET_SEGMENT_AND_OFFSET_ULEB 283,9589
  BIND_OPCODE_ADD_ADDR_ULEB 284,9640
  BIND_OPCODE_DO_BIND 285,9677
  BIND_OPCODE_DO_BIND_ADD_ADDR_ULEB 286,9708
  BIND_OPCODE_DO_BIND_ADD_ADDR_IMM_SCALED 287,9753
  BIND_OPCODE_DO_BIND_ULEB_TIMES_SKIPPING_ULEB 288,9804
  EXPORT_SYMBOL_FLAGS_KIND_MASK 292,9870
  EXPORT_SYMBOL_FLAGS_WEAK_DEFINITION 293,9911
  EXPORT_SYMBOL_FLAGS_REEXPORT 294,9958
  EXPORT_SYMBOL_FLAGS_STUB_AND_RESOLVER 295,9998
enum ExportSymbolKind 298,10050
  EXPORT_SYMBOL_FLAGS_KIND_REGULAR 299,10074
  EXPORT_SYMBOL_FLAGS_KIND_THREAD_LOCAL 300,10118
  EXPORT_SYMBOL_FLAGS_KIND_ABSOLUTE 301,10167
  N_STAB 307,10318
  N_PEXT 308,10335
  N_TYPE 309,10352
  N_EXT 310,10369
enum NListType 313,10388
  N_UNDF 316,10506
  N_ABS 317,10523
  N_SECT 318,10539
  N_PBUD 319,10556
  N_INDR 320,10573
enum SectionOrdinal 323,10593
  NO_SECT 326,10706
  MAX_SECT 327,10722
  REFERENCE_TYPE 334,10900
  REFERENCE_FLAG_UNDEFINED_NON_LAZY 335,10924
  REFERENCE_FLAG_UNDEFINED_LAZY 336,10965
  REFERENCE_FLAG_DEFINED 337,11002
  REFERENCE_FLAG_PRIVATE_DEFINED 338,11032
  REFERENCE_FLAG_PRIVATE_UNDEFINED_NON_LAZY 339,11070
  REFERENCE_FLAG_PRIVATE_UNDEFINED_LAZY 340,11119
  N_ARM_THUMB_DEF 342,11225
  REFERENCED_DYNAMICALLY 343,11254
  N_NO_DEAD_STRIP 344,11290
  N_WEAK_REF 345,11319
  N_WEAK_DEF 346,11343
  N_SYMBOL_RESOLVER 347,11367
  N_ALT_ENTRY 348,11398
  N_COLD_FUNC 349,11423
  SELF_LIBRARY_ORDINAL 352,11561
  MAX_LIBRARY_ORDINAL 353,11591
  DYNAMIC_LOOKUP_ORDINAL 354,11621
  EXECUTABLE_ORDINAL 355,11654
enum StabType 358,11686
  N_GSYM 361,11829
  N_FNAME 362,11847
  N_FUN 363,11866
  N_STSYM 364,11883
  N_LCSYM 365,11902
  N_BNSYM 366,11921
  N_PC 367,11940
  N_AST 368,11956
  N_OPT 369,11973
  N_RSYM 370,11990
  N_SLINE 371,12008
  N_ENSYM 372,12027
  N_SSYM 373,12046
  N_SO 374,12064
  N_OSO 375,12080
  N_LIB 376,12097
  N_LSYM 377,12114
  N_BINCL 378,12132
  N_SOL 379,12151
  N_PARAMS 380,12168
  N_VERSION 381,12188
  N_OLEVEL 382,12209
  N_PSYM 383,12229
  N_EINCL 384,12247
  N_ENTRY 385,12266
  N_LBRAC 386,12285
  N_EXCL 387,12304
  N_RBRAC 388,12322
  N_BCOMM 389,12341
  N_ECOMM 390,12360
  N_ECOML 391,12379
  N_LENG 392,12398
enum : uint32_t 395,12419
  R_ABS 398,12554
  R_SCATTERED 402,12662
enum RelocationInfoType 405,12693
  GENERIC_RELOC_INVALID 409,12859
  GENERIC_RELOC_VANILLA 410,12891
  GENERIC_RELOC_PAIR 411,12920
  GENERIC_RELOC_SECTDIFF 412,12946
  GENERIC_RELOC_PB_LA_PTR 413,12976
  GENERIC_RELOC_LOCAL_SECTDIFF 414,13007
  GENERIC_RELOC_TLV 415,13043
  PPC_RELOC_VANILLA 420,13229
  PPC_RELOC_PAIR 421,13274
  PPC_RELOC_BR14 422,13313
  PPC_RELOC_BR24 423,13335
  PPC_RELOC_HI16 424,13357
  PPC_RELOC_LO16 425,13379
  PPC_RELOC_HA16 426,13401
  PPC_RELOC_LO14 427,13423
  PPC_RELOC_SECTDIFF 428,13445
  PPC_RELOC_PB_LA_PTR 429,13471
  PPC_RELOC_HI16_SECTDIFF 430,13498
  PPC_RELOC_LO16_SECTDIFF 431,13530
  PPC_RELOC_HA16_SECTDIFF 432,13562
  PPC_RELOC_JBSR 433,13594
  PPC_RELOC_LO14_SECTDIFF 434,13617
  PPC_RELOC_LOCAL_SECTDIFF 435,13649
  ARM_RELOC_VANILLA 440,13840
  ARM_RELOC_PAIR 441,13885
  ARM_RELOC_SECTDIFF 442,13924
  ARM_RELOC_LOCAL_SECTDIFF 443,13971
  ARM_RELOC_PB_LA_PTR 444,14003
  ARM_RELOC_BR24 445,14030
  ARM_THUMB_RELOC_BR22 446,14052
  ARM_THUMB_32BIT_BRANCH 447,14080
  ARM_RELOC_HALF 448,14122
  ARM_RELOC_HALF_SECTDIFF 449,14144
  ARM64_RELOC_UNSIGNED 456,14355
  ARM64_RELOC_SUBTRACTOR 458,14432
  ARM64_RELOC_BRANCH26 460,14512
  ARM64_RELOC_PAGE21 462,14580
  ARM64_RELOC_PAGEOFF12 464,14651
  ARM64_RELOC_GOT_LOAD_PAGE21 466,14722
  ARM64_RELOC_GOT_LOAD_PAGEOFF12 468,14814
  ARM64_RELOC_POINTER_TO_GOT 470,14884
  ARM64_RELOC_TLVP_LOAD_PAGE21 472,14961
  ARM64_RELOC_TLVP_LOAD_PAGEOFF12 474,15055
  ARM64_RELOC_ADDEND 476,15164
  ARM64_RELOC_AUTHENTICATED_POINTER 478,15222
  X86_64_RELOC_UNSIGNED 483,15424
  X86_64_RELOC_SIGNED 484,15453
  X86_64_RELOC_BRANCH 485,15480
  X86_64_RELOC_GOT_LOAD 486,15507
  X86_64_RELOC_GOT 487,15536
  X86_64_RELOC_SUBTRACTOR 488,15560
  X86_64_RELOC_SIGNED_1 489,15591
  X86_64_RELOC_SIGNED_2 490,15620
  X86_64_RELOC_SIGNED_4 491,15649
  X86_64_RELOC_TLV 492,15678
enum { VM_PROT_READ 497,15770
enum { VM_PROT_READ = 0x1, VM_PROT_WRITE 497,15770
enum { VM_PROT_READ = 0x1, VM_PROT_WRITE = 0x2, VM_PROT_EXECUTE 497,15770
enum PlatformType 500,15899
#define PLATFORM(501,15919
enum { TOOL_CLANG 508,16182
enum { TOOL_CLANG = 1, TOOL_SWIFT 508,16182
enum { TOOL_CLANG = 1, TOOL_SWIFT = 2, TOOL_LD 508,16182
enum { TOOL_CLANG = 1, TOOL_SWIFT = 2, TOOL_LD = 3, TOOL_LLD 508,16182
struct mach_header 512,16286
  uint32_t magic;513,16307
  uint32_t cputype;514,16325
  uint32_t cpusubtype;515,16345
  uint32_t filetype;516,16368
  uint32_t ncmds;517,16389
  uint32_t sizeofcmds;518,16407
  uint32_t flags;519,16430
struct mach_header_64 522,16452
  uint32_t magic;523,16476
  uint32_t cputype;524,16494
  uint32_t cpusubtype;525,16514
  uint32_t filetype;526,16537
  uint32_t ncmds;527,16558
  uint32_t sizeofcmds;528,16576
  uint32_t flags;529,16599
  uint32_t reserved;530,16617
struct load_command 533,16642
  uint32_t cmd;534,16664
  uint32_t cmdsize;535,16680
struct segment_command 538,16704
  uint32_t cmd;539,16729
  uint32_t cmdsize;540,16745
  char segname[segname541,16765
  uint32_t vmaddr;542,16785
  uint32_t vmsize;543,16804
  uint32_t fileoff;544,16823
  uint32_t filesize;545,16843
  uint32_t maxprot;546,16864
  uint32_t initprot;547,16884
  uint32_t nsects;548,16905
  uint32_t flags;549,16924
struct segment_command_64 552,16946
  uint32_t cmd;553,16974
  uint32_t cmdsize;554,16990
  char segname[segname555,17010
  uint64_t vmaddr;556,17030
  uint64_t vmsize;557,17049
  uint64_t fileoff;558,17068
  uint64_t filesize;559,17088
  uint32_t maxprot;560,17109
  uint32_t initprot;561,17129
  uint32_t nsects;562,17150
  uint32_t flags;563,17169
struct section 566,17191
  char sectname[sectname567,17208
  char segname[segname568,17229
  uint32_t addr;569,17249
  uint32_t size;570,17266
  uint32_t offset;571,17283
  uint32_t align;572,17302
  uint32_t reloff;573,17320
  uint32_t nreloc;574,17339
  uint32_t flags;575,17358
  uint32_t reserved1;576,17376
  uint32_t reserved2;577,17398
struct section_64 580,17424
  char sectname[sectname581,17444
  char segname[segname582,17465
  uint64_t addr;583,17485
  uint64_t size;584,17502
  uint32_t offset;585,17519
  uint32_t align;586,17538
  uint32_t reloff;587,17556
  uint32_t nreloc;588,17575
  uint32_t flags;589,17594
  uint32_t reserved1;590,17612
  uint32_t reserved2;591,17634
  uint32_t reserved3;592,17656
inline bool isVirtualSection(595,17682
struct fvmlib 600,17852
  uint32_t name;601,17868
  uint32_t minor_version;602,17885
  uint32_t header_addr;603,17911
struct fvmlib_command 607,17998
  uint32_t cmd;608,18022
  uint32_t cmdsize;609,18038
  struct fvmlib fvmlib;610,18058
struct dylib 613,18086
  uint32_t name;614,18101
  uint32_t timestamp;615,18118
  uint32_t current_version;616,18140
  uint32_t compatibility_version;617,18168
struct dylib_command 620,18206
  uint32_t cmd;621,18229
  uint32_t cmdsize;622,18245
  struct dylib dylib;623,18265
struct sub_framework_command 626,18291
  uint32_t cmd;627,18322
  uint32_t cmdsize;628,18338
  uint32_t umbrella;629,18358
struct sub_client_command 632,18383
  uint32_t cmd;633,18411
  uint32_t cmdsize;634,18427
  uint32_t client;635,18447
struct sub_umbrella_command 638,18470
  uint32_t cmd;639,18500
  uint32_t cmdsize;640,18516
  uint32_t sub_umbrella;641,18536
struct sub_library_command 644,18565
  uint32_t cmd;645,18594
  uint32_t cmdsize;646,18610
  uint32_t sub_library;647,18630
struct prebound_dylib_command 651,18725
  uint32_t cmd;652,18757
  uint32_t cmdsize;653,18773
  uint32_t name;654,18793
  uint32_t nmodules;655,18810
  uint32_t linked_modules;656,18831
struct dylinker_command 659,18862
  uint32_t cmd;660,18888
  uint32_t cmdsize;661,18904
  uint32_t name;662,18924
struct thread_command 665,18945
  uint32_t cmd;666,18969
  uint32_t cmdsize;667,18985
struct routines_command 670,19009
  uint32_t cmd;671,19035
  uint32_t cmdsize;672,19051
  uint32_t init_address;673,19071
  uint32_t init_module;674,19096
  uint32_t reserved1;675,19120
  uint32_t reserved2;676,19142
  uint32_t reserved3;677,19164
  uint32_t reserved4;678,19186
  uint32_t reserved5;679,19208
  uint32_t reserved6;680,19230
struct routines_command_64 683,19256
  uint32_t cmd;684,19285
  uint32_t cmdsize;685,19301
  uint64_t init_address;686,19321
  uint64_t init_module;687,19346
  uint64_t reserved1;688,19370
  uint64_t reserved2;689,19392
  uint64_t reserved3;690,19414
  uint64_t reserved4;691,19436
  uint64_t reserved5;692,19458
  uint64_t reserved6;693,19480
struct symtab_command 696,19506
  uint32_t cmd;697,19530
  uint32_t cmdsize;698,19546
  uint32_t symoff;699,19566
  uint32_t nsyms;700,19585
  uint32_t stroff;701,19603
  uint32_t strsize;702,19622
struct dysymtab_command 705,19646
  uint32_t cmd;706,19672
  uint32_t cmdsize;707,19688
  uint32_t ilocalsym;708,19708
  uint32_t nlocalsym;709,19730
  uint32_t iextdefsym;710,19752
  uint32_t nextdefsym;711,19775
  uint32_t iundefsym;712,19798
  uint32_t nundefsym;713,19820
  uint32_t tocoff;714,19842
  uint32_t ntoc;715,19861
  uint32_t modtaboff;716,19878
  uint32_t nmodtab;717,19900
  uint32_t extrefsymoff;718,19920
  uint32_t nextrefsyms;719,19945
  uint32_t indirectsymoff;720,19969
  uint32_t nindirectsyms;721,19996
  uint32_t extreloff;722,20022
  uint32_t nextrel;723,20044
  uint32_t locreloff;724,20064
  uint32_t nlocrel;725,20086
struct dylib_table_of_contents 728,20110
  uint32_t symbol_index;729,20143
  uint32_t module_index;730,20168
struct dylib_module 733,20197
  uint32_t module_name;734,20219
  uint32_t iextdefsym;735,20243
  uint32_t nextdefsym;736,20266
  uint32_t irefsym;737,20289
  uint32_t nrefsym;738,20309
  uint32_t ilocalsym;739,20329
  uint32_t nlocalsym;740,20351
  uint32_t iextrel;741,20373
  uint32_t nextrel;742,20393
  uint32_t iinit_iterm;743,20413
  uint32_t ninit_nterm;744,20437
  uint32_t objc_module_info_addr;745,20461
  uint32_t objc_module_info_size;746,20495
struct dylib_module_64 749,20533
  uint32_t module_name;750,20558
  uint32_t iextdefsym;751,20582
  uint32_t nextdefsym;752,20605
  uint32_t irefsym;753,20628
  uint32_t nrefsym;754,20648
  uint32_t ilocalsym;755,20668
  uint32_t nlocalsym;756,20690
  uint32_t iextrel;757,20712
  uint32_t nextrel;758,20732
  uint32_t iinit_iterm;759,20752
  uint32_t ninit_nterm;760,20776
  uint32_t objc_module_info_size;761,20800
  uint64_t objc_module_info_addr;762,20834
struct dylib_reference 765,20872
  uint32_t isym 766,20897
  uint32_t isym : 24, flags 766,20897
struct twolevel_hints_command 770,21001
  uint32_t cmd;771,21033
  uint32_t cmdsize;772,21049
  uint32_t offset;773,21069
  uint32_t nhints;774,21088
struct twolevel_hint 778,21178
  uint32_t isub_image 779,21201
  uint32_t isub_image : 8, itoc 779,21201
struct prebind_cksum_command 783,21309
  uint32_t cmd;784,21340
  uint32_t cmdsize;785,21356
  uint32_t cksum;786,21376
struct uuid_command 789,21398
  uint32_t cmd;790,21420
  uint32_t cmdsize;791,21436
  uint8_t uuid[uuid792,21456
struct rpath_command 795,21480
  uint32_t cmd;796,21503
  uint32_t cmdsize;797,21519
  uint32_t path;798,21539
struct linkedit_data_command 801,21560
  uint32_t cmd;802,21591
  uint32_t cmdsize;803,21607
  uint32_t dataoff;804,21627
  uint32_t datasize;805,21647
struct data_in_code_entry 808,21672
  uint32_t offset;809,21700
  uint16_t length;810,21719
  uint16_t kind;811,21738
struct source_version_command 814,21759
  uint32_t cmd;815,21791
  uint32_t cmdsize;816,21807
  uint64_t version;817,21827
struct encryption_info_command 820,21851
  uint32_t cmd;821,21884
  uint32_t cmdsize;822,21900
  uint32_t cryptoff;823,21920
  uint32_t cryptsize;824,21941
  uint32_t cryptid;825,21963
struct encryption_info_command_64 828,21987
  uint32_t cmd;829,22023
  uint32_t cmdsize;830,22039
  uint32_t cryptoff;831,22059
  uint32_t cryptsize;832,22080
  uint32_t cryptid;833,22102
  uint32_t pad;834,22122
struct version_min_command 837,22142
  uint32_t cmd;838,22171
  uint32_t cmdsize;840,22266
  uint32_t version;841,22324
  uint32_t sdk;842,22386
struct note_command 845,22452
  uint32_t cmd;846,22474
  uint32_t cmdsize;847,22508
  char data_owner[data_owner848,22562
  uint64_t offset;849,22616
  uint64_t size;850,22667
struct build_tool_version 853,22719
  uint32_t tool;854,22747
  uint32_t version;855,22788
struct build_version_command 858,22835
  uint32_t cmd;859,22866
  uint32_t cmdsize;860,22907
  uint32_t platform;862,23037
  uint32_t minos;863,23070
  uint32_t sdk;864,23133
  uint32_t ntools;865,23196
struct dyld_env_command 868,23262
  uint32_t cmd;869,23288
  uint32_t cmdsize;870,23304
  uint32_t name;871,23324
struct dyld_info_command 874,23345
  uint32_t cmd;875,23372
  uint32_t cmdsize;876,23388
  uint32_t rebase_off;877,23408
  uint32_t rebase_size;878,23431
  uint32_t bind_off;879,23455
  uint32_t bind_size;880,23476
  uint32_t weak_bind_off;881,23498
  uint32_t weak_bind_size;882,23524
  uint32_t lazy_bind_off;883,23551
  uint32_t lazy_bind_size;884,23577
  uint32_t export_off;885,23604
  uint32_t export_size;886,23627
struct linker_option_command 889,23655
  uint32_t cmd;890,23686
  uint32_t cmdsize;891,23702
  uint32_t count;892,23722
union lc_str 895,23744
  uint32_t offset;896,23759
struct fileset_entry_command 899,23782
  uint32_t cmd;900,23813
  uint32_t cmdsize;901,23829
  uint64_t vmaddr;902,23849
  uint64_t fileoff;903,23868
  union lc_str entry_id;904,23888
  uint32_t reserved;905,23913
struct symseg_command 909,23997
  uint32_t cmd;910,24021
  uint32_t cmdsize;911,24037
  uint32_t offset;912,24057
  uint32_t size;913,24076
struct ident_command 917,24155
  uint32_t cmd;918,24178
  uint32_t cmdsize;919,24194
struct fvmfile_command 923,24278
  uint32_t cmd;924,24303
  uint32_t cmdsize;925,24319
  uint32_t name;926,24339
  uint32_t header_addr;927,24356
struct tlv_descriptor_32 930,24384
  uint32_t thunk;931,24411
  uint32_t key;932,24429
  uint32_t offset;933,24445
struct tlv_descriptor_64 936,24468
  uint64_t thunk;937,24495
  uint64_t key;938,24513
  uint64_t offset;939,24529
struct tlv_descriptor 942,24552
  uintptr_t thunk;943,24576
  uintptr_t key;944,24595
  uintptr_t offset;945,24612
struct entry_point_command 948,24636
  uint32_t cmd;949,24665
  uint32_t cmdsize;950,24681
  uint64_t entryoff;951,24701
  uint64_t stacksize;952,24722
struct fat_header 956,24779
  uint32_t magic;957,24799
  uint32_t nfat_arch;958,24817
struct fat_arch 961,24843
  uint32_t cputype;962,24861
  uint32_t cpusubtype;963,24881
  uint32_t offset;964,24904
  uint32_t size;965,24923
  uint32_t align;966,24940
struct fat_arch_64 969,24962
  uint32_t cputype;970,24983
  uint32_t cpusubtype;971,25003
  uint64_t offset;972,25026
  uint64_t size;973,25045
  uint32_t align;974,25062
  uint32_t reserved;975,25080
struct relocation_info 979,25138
  int32_t r_address;980,25163
  uint32_t r_symbolnum 981,25184
  uint32_t r_symbolnum : 24, r_pcrel 981,25184
  uint32_t r_symbolnum : 24, r_pcrel : 1, r_length 981,25184
  uint32_t r_symbolnum : 24, r_pcrel : 1, r_length : 2, r_extern 981,25184
      r_type 982,25254
struct scattered_relocation_info 985,25276
  uint32_t r_scattered 987,25388
  uint32_t r_scattered : 1, r_pcrel 987,25388
  uint32_t r_scattered : 1, r_pcrel : 1, r_length 987,25388
  uint32_t r_scattered : 1, r_pcrel : 1, r_length : 2, r_type 987,25388
      r_address 988,25455
  uint32_t r_address 990,25483
  uint32_t r_address : 24, r_type 990,25483
  uint32_t r_address : 24, r_type : 4, r_length 990,25483
  uint32_t r_address : 24, r_type : 4, r_length : 2, r_pcrel 990,25483
      r_scattered 991,25549
  int32_t r_value;993,25579
struct any_relocation_info 997,25673
  uint32_t r_word0,998,25702
  uint32_t r_word0, r_word1;998,25702
struct nlist_base 1002,25768
  uint32_t n_strx;1003,25788
  uint8_t n_type;1004,25807
  uint8_t n_sect;1005,25825
  uint16_t n_desc;1006,25843
struct nlist 1009,25866
  uint32_t n_strx;1010,25881
  uint8_t n_type;1011,25900
  uint8_t n_sect;1012,25918
  int16_t n_desc;1013,25936
  uint32_t n_value;1014,25954
struct nlist_64 1017,25978
  uint32_t n_strx;1018,25996
  uint8_t n_type;1019,26015
  uint8_t n_sect;1020,26033
  uint16_t n_desc;1021,26051
  uint64_t n_value;1022,26070
enum ChainedImportFormat 1026,26152
  DYLD_CHAINED_IMPORT 1027,26179
  DYLD_CHAINED_IMPORT_ADDEND 1028,26206
  DYLD_CHAINED_IMPORT_ADDEND64 1029,26240
  DYLD_CHAINED_SYMBOL_UNCOMPRESSED 1034,26345
  DYLD_CHAINED_SYMBOL_ZLIB 1035,26385
  DYLD_CHAINED_PTR_START_NONE 1040,26486
  DYLD_CHAINED_PTR_START_MULTI 1041,26526
  DYLD_CHAINED_PTR_START_LAST 1042,26601
  DYLD_CHAINED_PTR_ARM64E 1047,26752
  DYLD_CHAINED_PTR_64 1048,26783
  DYLD_CHAINED_PTR_32 1049,26810
  DYLD_CHAINED_PTR_32_CACHE 1050,26837
  DYLD_CHAINED_PTR_32_FIRMWARE 1051,26870
  DYLD_CHAINED_PTR_64_OFFSET 1052,26906
  DYLD_CHAINED_PTR_ARM64E_KERNEL 1053,26940
  DYLD_CHAINED_PTR_64_KERNEL_CACHE 1054,26978
  DYLD_CHAINED_PTR_ARM64E_USERLAND 1055,27018
  DYLD_CHAINED_PTR_ARM64E_FIRMWARE 1056,27058
  DYLD_CHAINED_PTR_X86_64_KERNEL_CACHE 1057,27099
  DYLD_CHAINED_PTR_ARM64E_USERLAND24 1058,27144
struct dyld_chained_fixups_header 1064,27326
  uint32_t fixups_version;1065,27362
  uint32_t starts_offset;1066,27396
  uint32_t imports_offset;1067,27468
  uint32_t symbols_offset;1068,27539
  uint32_t imports_count;1069,27611
  uint32_t imports_format;1070,27676
  uint32_t symbols_format;1071,27729
struct dyld_chained_starts_in_image 1077,28023
  uint32_t seg_count;1078,28061
  uint32_t seg_info_offset[seg_info_offset1079,28083
struct dyld_chained_starts_in_segment 1082,28118
  uint32_t size;1083,28158
  uint16_t page_size;1084,28238
  uint16_t pointer_format;1085,28311
  uint64_t segment_offset;1086,28364
  uint32_t max_valid_pointer;1087,28433
  uint16_t page_count;1088,28514
  uint16_t page_start[page_start1089,28580
struct dyld_chained_import 1094,28762
  uint32_t lib_ordinal 1095,28791
  uint32_t weak_import 1096,28819
  uint32_t name_offset 1097,28847
struct dyld_chained_import_addend 1101,28910
  uint32_t lib_ordinal 1102,28946
  uint32_t weak_import 1103,28974
  uint32_t name_offset 1104,29002
  int32_t addend;1105,29031
struct dyld_chained_import_addend64 1109,29085
  uint64_t lib_ordinal 1110,29123
  uint64_t weak_import 1111,29152
  uint64_t reserved 1112,29180
  uint64_t name_offset 1113,29206
  uint64_t addend;1114,29235
struct dyld_chained_ptr_64_bind 1121,29457
  uint64_t ordinal 1122,29491
  uint64_t addend 1123,29516
  uint64_t reserved 1124,29539
  uint64_t next 1125,29565
  uint64_t bind 1126,29587
struct dyld_chained_ptr_64_rebase 1130,29674
  uint64_t target 1131,29710
  uint64_t high8 1132,29734
  uint64_t reserved 1133,29756
  uint64_t next 1134,29781
  uint64_t bind 1135,29803
inline void swapStruct(1140,29892
inline void swapStruct(1145,30004
inline void swapStruct(1153,30213
inline void swapStruct(1162,30460
inline void swapStruct(1172,30744
inline void swapStruct(1183,31057
inline void swapStruct(1188,31167
inline void swapStruct(1197,31411
inline void swapStruct(1210,31807
inline void swapStruct(1223,32200
inline void swapStruct(1235,32561
inline void swapStruct(1247,32919
inline void swapStruct(1262,33443
inline void swapStruct(1271,33728
inline void swapStruct(1277,33878
inline void swapStruct(1283,34031
inline void swapStruct(1289,34182
inline void swapStruct(1295,34327
inline void swapStruct(1308,34723
inline void swapStruct(1321,35122
inline void swapStruct(1326,35231
inline void swapStruct(1332,35372
inline void swapStruct(1337,35479
inline void swapStruct(1343,35617
inline void swapStruct(1349,35767
inline void swapStruct(1356,35950
inline void swapStruct(1364,36170
inline void swapStruct(1373,36422
inline void swapStruct(1396,37207
inline void swapStruct(1401,37337
inline void swapStruct(1406,37444
inline void swapStruct(1412,37587
inline void swapStruct(1418,37733
inline void swapStruct(1425,37916
inline void swapStruct(1431,38063
inline void swapStruct(1440,38319
inline void swapStruct(1447,38495
inline void swapStruct(1454,38664
inline void swapStruct(1463,38906
inline void swapStruct(1468,39020
inline void swapStruct(1474,39165
inline void swapStruct(1477,39295
inline void swapStruct(1484,39509
inline void swapStruct(1492,39757
inline void swapStruct(1501,40038
inline void swapStruct(1509,40274
inline void swapStruct(1517,40503
inline void swapStruct(1522,40611
inline void swapStruct(1529,40815
inline uint16_t GET_LIBRARY_ORDINAL(1537,40992
inline void SET_LIBRARY_ORDINAL(1541,41087
inline uint8_t GET_COMM_ALIGN(1545,41217
inline void SET_COMM_ALIGN(1549,41302
enum : uint32_t 1554,41457
  CPU_ARCH_MASK 1556,41532
  CPU_ARCH_ABI64 1557,41592
  CPU_ARCH_ABI64_32 1558,41637
enum CPUType 1562,41743
  CPU_TYPE_ANY 1563,41758
  CPU_TYPE_X86 1564,41779
  CPU_TYPE_I386 1565,41799
  CPU_TYPE_X86_64 1566,41831
  CPU_TYPE_MC98000 1568,41914
  CPU_TYPE_ARM 1569,41963
  CPU_TYPE_ARM64 1570,41984
  CPU_TYPE_ARM64_32 1571,42034
  CPU_TYPE_SPARC 1572,42090
  CPU_TYPE_POWERPC 1573,42113
  CPU_TYPE_POWERPC64 1574,42138
enum : uint32_t 1577,42199
  CPU_SUBTYPE_MASK 1579,42276
  CPU_SUBTYPE_LIB64 1580,42340
  CPU_SUBTYPE_MULTIPLE 1583,42431
enum CPUSubTypeX86 1587,42503
  CPU_SUBTYPE_I386_ALL 1588,42524
  CPU_SUBTYPE_386 1589,42552
  CPU_SUBTYPE_486 1590,42575
  CPU_SUBTYPE_486SX 1591,42598
  CPU_SUBTYPE_586 1592,42626
  CPU_SUBTYPE_PENT 1593,42649
  CPU_SUBTYPE_PENTPRO 1594,42687
  CPU_SUBTYPE_PENTII_M3 1595,42717
  CPU_SUBTYPE_PENTII_M5 1596,42749
  CPU_SUBTYPE_CELERON 1597,42781
  CPU_SUBTYPE_CELERON_MOBILE 1598,42811
  CPU_SUBTYPE_PENTIUM_3 1599,42848
  CPU_SUBTYPE_PENTIUM_3_M 1600,42880
  CPU_SUBTYPE_PENTIUM_3_XEON 1601,42914
  CPU_SUBTYPE_PENTIUM_M 1602,42951
  CPU_SUBTYPE_PENTIUM_4 1603,42983
  CPU_SUBTYPE_PENTIUM_4_M 1604,43015
  CPU_SUBTYPE_ITANIUM 1605,43049
  CPU_SUBTYPE_ITANIUM_2 1606,43079
  CPU_SUBTYPE_XEON 1607,43111
  CPU_SUBTYPE_XEON_MP 1608,43138
  CPU_SUBTYPE_X86_ALL 1610,43169
  CPU_SUBTYPE_X86_64_ALL 1611,43196
  CPU_SUBTYPE_X86_ARCH1 1612,43226
  CPU_SUBTYPE_X86_64_H 1613,43255
inline int CPU_SUBTYPE_INTEL(1615,43285
inline int CPU_SUBTYPE_INTEL_FAMILY(1618,43373
inline int CPU_SUBTYPE_INTEL_MODEL(1621,43458
enum { CPU_SUBTYPE_INTEL_FAMILY_MAX 1622,43538
enum { CPU_SUBTYPE_INTEL_FAMILY_MAX = 15, CPU_SUBTYPE_INTEL_MODEL_ALL 1622,43538
enum CPUSubTypeARM 1624,43616
  CPU_SUBTYPE_ARM_ALL 1625,43637
  CPU_SUBTYPE_ARM_V4T 1626,43664
  CPU_SUBTYPE_ARM_V6 1627,43691
  CPU_SUBTYPE_ARM_V5 1628,43717
  CPU_SUBTYPE_ARM_V5TEJ 1629,43743
  CPU_SUBTYPE_ARM_XSCALE 1630,43772
  CPU_SUBTYPE_ARM_V7 1631,43802
  CPU_SUBTYPE_ARM_V7S 1633,43860
  CPU_SUBTYPE_ARM_V7K 1634,43888
  CPU_SUBTYPE_ARM_V6M 1635,43916
  CPU_SUBTYPE_ARM_V7M 1636,43944
  CPU_SUBTYPE_ARM_V7EM 1637,43972
enum CPUSubTypeARM64 1640,44004
  CPU_SUBTYPE_ARM64_ALL 1641,44027
  CPU_SUBTYPE_ARM64_V8 1642,44056
  CPU_SUBTYPE_ARM64E 1643,44084
enum CPUSubTypeARM64_32 1646,44114
enum CPUSubTypeARM64_32 { CPU_SUBTYPE_ARM64_32_V8 1646,44114
enum CPUSubTypeSPARC 1648,44172
enum CPUSubTypeSPARC { CPU_SUBTYPE_SPARC_ALL 1648,44172
enum CPUSubTypePowerPC 1650,44225
  CPU_SUBTYPE_POWERPC_ALL 1651,44250
  CPU_SUBTYPE_POWERPC_601 1652,44281
  CPU_SUBTYPE_POWERPC_602 1653,44312
  CPU_SUBTYPE_POWERPC_603 1654,44343
  CPU_SUBTYPE_POWERPC_603e 1655,44374
  CPU_SUBTYPE_POWERPC_603ev 1656,44406
  CPU_SUBTYPE_POWERPC_604 1657,44439
  CPU_SUBTYPE_POWERPC_604e 1658,44470
  CPU_SUBTYPE_POWERPC_620 1659,44502
  CPU_SUBTYPE_POWERPC_750 1660,44533
  CPU_SUBTYPE_POWERPC_7400 1661,44564
  CPU_SUBTYPE_POWERPC_7450 1662,44597
  CPU_SUBTYPE_POWERPC_970 1663,44630
  CPU_SUBTYPE_MC980000_ALL 1665,44664
  CPU_SUBTYPE_MC98601 1666,44718
struct x86_thread_state32_t 1672,44870
  uint32_t eax;1673,44900
  uint32_t ebx;1674,44916
  uint32_t ecx;1675,44932
  uint32_t edx;1676,44948
  uint32_t edi;1677,44964
  uint32_t esi;1678,44980
  uint32_t ebp;1679,44996
  uint32_t esp;1680,45012
  uint32_t ss;1681,45028
  uint32_t eflags;1682,45043
  uint32_t eip;1683,45062
  uint32_t cs;1684,45078
  uint32_t ds;1685,45093
  uint32_t es;1686,45108
  uint32_t fs;1687,45123
  uint32_t gs;1688,45138
struct x86_thread_state64_t 1691,45157
  uint64_t rax;1692,45187
  uint64_t rbx;1693,45203
  uint64_t rcx;1694,45219
  uint64_t rdx;1695,45235
  uint64_t rdi;1696,45251
  uint64_t rsi;1697,45267
  uint64_t rbp;1698,45283
  uint64_t rsp;1699,45299
  uint64_t r8;1700,45315
  uint64_t r9;1701,45330
  uint64_t r10;1702,45345
  uint64_t r11;1703,45361
  uint64_t r12;1704,45377
  uint64_t r13;1705,45393
  uint64_t r14;1706,45409
  uint64_t r15;1707,45425
  uint64_t rip;1708,45441
  uint64_t rflags;1709,45457
  uint64_t cs;1710,45476
  uint64_t fs;1711,45491
  uint64_t gs;1712,45506
enum x86_fp_control_precis 1715,45525
  x86_FP_PREC_24B 1716,45554
  x86_FP_PREC_53B 1717,45577
  x86_FP_PREC_64B 1718,45600
enum x86_fp_control_rc 1721,45626
  x86_FP_RND_NEAR 1722,45651
  x86_FP_RND_DOWN 1723,45674
  x86_FP_RND_UP 1724,45697
  x86_FP_CHOP 1725,45718
struct fp_control_t 1728,45740
  unsigned short invalid 1729,45762
  unsigned short invalid : 1, denorm 1729,45762
  unsigned short invalid : 1, denorm : 1, zdiv 1729,45762
  unsigned short invalid : 1, denorm : 1, zdiv : 1, ovrfl 1729,45762
  unsigned short invalid : 1, denorm : 1, zdiv : 1, ovrfl : 1, undfl 1729,45762
      precis 1730,45836
      precis : 1, : 2, pc 1730,45836
      precis : 1, : 2, pc : 2, rc 1730,45836
struct fp_status_t 1733,45889
  unsigned short invalid 1734,45910
  unsigned short invalid : 1, denorm 1734,45910
  unsigned short invalid : 1, denorm : 1, zdiv 1734,45910
  unsigned short invalid : 1, denorm : 1, zdiv : 1, ovrfl 1734,45910
  unsigned short invalid : 1, denorm : 1, zdiv : 1, ovrfl : 1, undfl 1734,45910
      precis 1735,45984
      precis : 1, stkflt 1735,45984
      precis : 1, stkflt : 1, errsumm 1735,45984
      precis : 1, stkflt : 1, errsumm : 1, c0 1735,45984
      precis : 1, stkflt : 1, errsumm : 1, c0 : 1, c1 1735,45984
      precis : 1, stkflt : 1, errsumm : 1, c0 : 1, c1 : 1, c2 1735,45984
      precis : 1, stkflt : 1, errsumm : 1, c0 : 1, c1 : 1, c2 : 1, tos 1735,45984
      c3 1736,46060
      c3 : 1, busy 1736,46060
struct mmst_reg_t 1739,46088
  char mmst_reg[mmst_reg1740,46108
  char mmst_rsrv[mmst_rsrv1741,46129
struct xmm_reg_t 1744,46154
  char xmm_reg[xmm_reg1745,46173
struct x86_float_state64_t 1748,46197
  int32_t fpu_reserved[fpu_reserved1749,46226
  fp_control_t fpu_fcw;1750,46253
  fp_status_t fpu_fsw;1751,46277
  uint8_t fpu_ftw;1752,46300
  uint8_t fpu_rsrv1;1753,46319
  uint16_t fpu_fop;1754,46340
  uint32_t fpu_ip;1755,46360
  uint16_t fpu_cs;1756,46379
  uint16_t fpu_rsrv2;1757,46398
  uint32_t fpu_dp;1758,46420
  uint16_t fpu_ds;1759,46439
  uint16_t fpu_rsrv3;1760,46458
  uint32_t fpu_mxcsr;1761,46480
  uint32_t fpu_mxcsrmask;1762,46502
  mmst_reg_t fpu_stmm0;1763,46528
  mmst_reg_t fpu_stmm1;1764,46552
  mmst_reg_t fpu_stmm2;1765,46576
  mmst_reg_t fpu_stmm3;1766,46600
  mmst_reg_t fpu_stmm4;1767,46624
  mmst_reg_t fpu_stmm5;1768,46648
  mmst_reg_t fpu_stmm6;1769,46672
  mmst_reg_t fpu_stmm7;1770,46696
  xmm_reg_t fpu_xmm0;1771,46720
  xmm_reg_t fpu_xmm1;1772,46742
  xmm_reg_t fpu_xmm2;1773,46764
  xmm_reg_t fpu_xmm3;1774,46786
  xmm_reg_t fpu_xmm4;1775,46808
  xmm_reg_t fpu_xmm5;1776,46830
  xmm_reg_t fpu_xmm6;1777,46852
  xmm_reg_t fpu_xmm7;1778,46874
  xmm_reg_t fpu_xmm8;1779,46896
  xmm_reg_t fpu_xmm9;1780,46918
  xmm_reg_t fpu_xmm10;1781,46940
  xmm_reg_t fpu_xmm11;1782,46963
  xmm_reg_t fpu_xmm12;1783,46986
  xmm_reg_t fpu_xmm13;1784,47009
  xmm_reg_t fpu_xmm14;1785,47032
  xmm_reg_t fpu_xmm15;1786,47055
  char fpu_rsrv4[fpu_rsrv41787,47078
  uint32_t fpu_reserved1;1788,47104
struct x86_exception_state64_t 1791,47134
  uint16_t trapno;1792,47167
  uint16_t cpu;1793,47186
  uint32_t err;1794,47202
  uint64_t faultvaddr;1795,47218
inline void swapStruct(1798,47245
inline void swapStruct(1817,47759
inline void swapStruct(1841,48419
inline void swapStruct(1858,48972
struct x86_state_hdr_t 1865,49154
  uint32_t flavor;1866,49179
  uint32_t count;1867,49198
struct x86_thread_state_t 1870,49220
  x86_state_hdr_t tsh;1871,49248
    x86_thread_state64_t ts64;1873,49281
    x86_thread_state32_t ts32;1874,49312
  } uts;1875,49343
struct x86_float_state_t 1878,49356
  x86_state_hdr_t fsh;1879,49383
    x86_float_state64_t fs64;1881,49416
  } ufs;1882,49446
struct x86_exception_state_t 1885,49459
  x86_state_hdr_t esh;1886,49490
    x86_exception_state64_t es64;1888,49523
  } ues;1889,49557
inline void swapStruct(1892,49570
enum X86ThreadFlavors 1897,49681
  x86_THREAD_STATE32 1898,49705
  x86_FLOAT_STATE32 1899,49731
  x86_EXCEPTION_STATE32 1900,49756
  x86_THREAD_STATE64 1901,49785
  x86_FLOAT_STATE64 1902,49811
  x86_EXCEPTION_STATE64 1903,49836
  x86_THREAD_STATE 1904,49865
  x86_FLOAT_STATE 1905,49889
  x86_EXCEPTION_STATE 1906,49912
  x86_DEBUG_STATE32 1907,49939
  x86_DEBUG_STATE64 1908,49965
  x86_DEBUG_STATE 1909,49991
inline void swapStruct(1912,50018
inline void swapStruct(1918,50160
inline void swapStruct(1924,50300
const uint32_t x86_THREAD_STATE32_COUNT 1930,50448
const uint32_t x86_THREAD_STATE64_COUNT 1933,50544
const uint32_t x86_FLOAT_STATE64_COUNT 1935,50639
const uint32_t x86_EXCEPTION_STATE64_COUNT 1937,50732
const uint32_t x86_THREAD_STATE_COUNT 1940,50834
const uint32_t x86_FLOAT_STATE_COUNT 1942,50925
const uint32_t x86_EXCEPTION_STATE_COUNT 1944,51014
struct arm_thread_state32_t 1947,51112
  uint32_t r[r1948,51142
  uint32_t sp;1949,51160
  uint32_t lr;1950,51175
  uint32_t pc;1951,51190
  uint32_t cpsr;1952,51205
inline void swapStruct(1955,51226
struct arm_thread_state64_t 1964,51456
  uint64_t x[x1965,51486
  uint64_t fp;1966,51504
  uint64_t lr;1967,51519
  uint64_t sp;1968,51534
  uint64_t pc;1969,51549
  uint32_t cpsr;1970,51564
  uint32_t pad;1971,51581
inline void swapStruct(1974,51601
struct arm_state_hdr_t 1984,51859
  uint32_t flavor;1985,51884
  uint32_t count;1986,51903
struct arm_thread_state_t 1989,51925
  arm_state_hdr_t tsh;1990,51953
    arm_thread_state32_t ts32;1992,51986
  } uts;1993,52017
inline void swapStruct(1996,52030
enum ARMThreadFlavors 2001,52141
  ARM_THREAD_STATE 2002,52165
  ARM_VFP_STATE 2003,52189
  ARM_EXCEPTION_STATE 2004,52210
  ARM_DEBUG_STATE 2005,52237
  ARN_THREAD_STATE_NONE 2006,52260
  ARM_THREAD_STATE64 2007,52289
  ARM_EXCEPTION_STATE64 2008,52315
inline void swapStruct(2011,52347
const uint32_t ARM_THREAD_STATE_COUNT 2017,52487
const uint32_t ARM_THREAD_STATE64_COUNT 2020,52581
struct ppc_thread_state32_t 2023,52677
  uint32_t srr0;2024,52707
  uint32_t srr1;2025,52724
  uint32_t r0;2026,52741
  uint32_t r1;2027,52756
  uint32_t r2;2028,52771
  uint32_t r3;2029,52786
  uint32_t r4;2030,52801
  uint32_t r5;2031,52816
  uint32_t r6;2032,52831
  uint32_t r7;2033,52846
  uint32_t r8;2034,52861
  uint32_t r9;2035,52876
  uint32_t r10;2036,52891
  uint32_t r11;2037,52907
  uint32_t r12;2038,52923
  uint32_t r13;2039,52939
  uint32_t r14;2040,52955
  uint32_t r15;2041,52971
  uint32_t r16;2042,52987
  uint32_t r17;2043,53003
  uint32_t r18;2044,53019
  uint32_t r19;2045,53035
  uint32_t r20;2046,53051
  uint32_t r21;2047,53067
  uint32_t r22;2048,53083
  uint32_t r23;2049,53099
  uint32_t r24;2050,53115
  uint32_t r25;2051,53131
  uint32_t r26;2052,53147
  uint32_t r27;2053,53163
  uint32_t r28;2054,53179
  uint32_t r29;2055,53195
  uint32_t r30;2056,53211
  uint32_t r31;2057,53227
  uint32_t ct;2058,53243
  uint32_t xer;2059,53258
  uint32_t lr;2060,53274
  uint32_t ctr;2061,53289
  uint32_t mq;2062,53305
  uint32_t vrsave;2063,53320
inline void swapStruct(2066,53343
struct ppc_state_hdr_t 2109,54548
  uint32_t flavor;2110,54573
  uint32_t count;2111,54592
struct ppc_thread_state_t 2114,54614
  ppc_state_hdr_t tsh;2115,54642
    ppc_thread_state32_t ts32;2117,54675
  } uts;2118,54706
inline void swapStruct(2121,54719
enum PPCThreadFlavors 2126,54830
  PPC_THREAD_STATE 2127,54854
  PPC_FLOAT_STATE 2128,54878
  PPC_EXCEPTION_STATE 2129,54901
  PPC_VECTOR_STATE 2130,54928
  PPC_THREAD_STATE64 2131,54952
  PPC_EXCEPTION_STATE64 2132,54978
  PPC_THREAD_STATE_NONE 2133,55007
inline void swapStruct(2136,55039
const uint32_t PPC_THREAD_STATE_COUNT 2142,55179
#define LOAD_COMMAND_STRUCT(2146,55319
inline void swapStruct(2154,55499
inline void swapStruct(2164,55836
inline void swapStruct(2170,56058
enum CodeSignAttrs 2182,56449
  CS_VALID 2183,56470
  CS_ADHOC 2184,56528
  CS_GET_TASK_ALLOW 2185,56582
  CS_INSTALLER 2186,56653
  CS_FORCED_LV 2188,56720
  CS_INVALID_ALLOWED 2190,56815
  CS_HARD 2193,56954
  CS_KILL 2194,57021
  CS_CHECK_EXPIRATION 2195,57098
  CS_RESTRICT 2196,57166
  CS_ENFORCEMENT 2198,57239
  CS_REQUIRE_LV 2199,57296
  CS_ENTITLEMENTS_VALIDATED 2200,57360
  CS_NVRAM_UNRESTRICTED 2202,57461
  CS_RUNTIME 2206,57605
  CS_LINKER_SIGNED 2207,57676
  CS_ALLOWED_MACHO 2209,57751
  CS_EXEC_SET_HARD 2213,57919
  CS_EXEC_SET_KILL 2214,57993
  CS_EXEC_SET_ENFORCEMENT 2215,58067
  CS_EXEC_INHERIT_SIP 2217,58161
  CS_KILLED 2220,58250
  CS_DYLD_PLATFORM 2221,58318
  CS_PLATFORM_BINARY 2223,58407
  CS_PLATFORM_PATH 2224,58474
  CS_DEBUGGED 2227,58567
  CS_SIGNED 2229,58708
  CS_DEV_CODE 2230,58788
  CS_DATAVAULT_CONTROLLER 2233,58952
  CS_ENTITLEMENT_FLAGS 2236,59043
enum CodeSignExecSegFlags 2242,59216
  CS_EXECSEG_MAIN_BINARY 2244,59245
  CS_EXECSEG_ALLOW_UNSIGNED 2245,59326
  CS_EXECSEG_DEBUGGER 2246,59405
  CS_EXECSEG_JIT 2247,59471
  CS_EXECSEG_SKIP_LV 2248,59525
  CS_EXECSEG_CAN_LOAD_CDHASH 2249,59601
  CS_EXECSEG_CAN_EXEC_CDHASH 2250,59676
enum CodeSignMagic 2256,59794
  CSMAGIC_REQUIREMENT 2257,59815
  CSMAGIC_REQUIREMENTS 2258,59881
  CSMAGIC_CODEDIRECTORY 2260,59974
  CSMAGIC_EMBEDDED_SIGNATURE 2261,60042
  CSMAGIC_EMBEDDED_SIGNATURE_OLD 2262,60123
  CSMAGIC_EMBEDDED_ENTITLEMENTS 2263,60180
  CSMAGIC_DETACHED_SIGNATURE 2264,60255
  CSMAGIC_BLOBWRAPPER 2266,60355
  CS_SUPPORTSSCATTER 2268,60432
  CS_SUPPORTSTEAMID 2269,60464
  CS_SUPPORTSCODELIMIT64 2270,60495
  CS_SUPPORTSEXECSEG 2271,60531
  CS_SUPPORTSRUNTIME 2272,60563
  CS_SUPPORTSLINKAGE 2273,60595
  CSSLOT_CODEDIRECTORY 2275,60628
  CSSLOT_INFOSLOT 2276,60691
  CSSLOT_REQUIREMENTS 2277,60714
  CSSLOT_RESOURCEDIR 2278,60741
  CSSLOT_APPLICATION 2279,60767
  CSSLOT_ENTITLEMENTS 2280,60793
  CSSLOT_ALTERNATE_CODEDIRECTORIES 2282,60821
  CSSLOT_ALTERNATE_CODEDIRECTORY_MAX 2284,60916
  CSSLOT_ALTERNATE_CODEDIRECTORY_LIMIT 2285,60997
  CSSLOT_SIGNATURESLOT 2289,61146
  CSSLOT_IDENTIFICATIONSLOT 2290,61200
  CSSLOT_TICKETSLOT 2291,61239
  CSTYPE_INDEX_REQUIREMENTS 2293,61271
  CSTYPE_INDEX_ENTITLEMENTS 2294,61336
  CS_HASHTYPE_SHA1 2296,61402
  CS_HASHTYPE_SHA256 2297,61426
  CS_HASHTYPE_SHA256_TRUNCATED 2298,61452
  CS_HASHTYPE_SHA384 2299,61488
  CS_SHA1_LEN 2301,61515
  CS_SHA256_LEN 2302,61535
  CS_SHA256_TRUNCATED_LEN 2303,61557
  CS_CDHASH_LEN 2305,61590
  CS_HASH_MAX_SIZE 2306,61658
  CS_SIGNER_TYPE_UNKNOWN 2312,61885
  CS_SIGNER_TYPE_LEGACYVPN 2313,61915
  CS_SIGNER_TYPE_MAC_APP_STORE 2314,61947
  CS_SUPPL_SIGNER_TYPE_UNKNOWN 2316,61984
  CS_SUPPL_SIGNER_TYPE_TRUSTCACHE 2317,62020
  CS_SUPPL_SIGNER_TYPE_LOCAL 2318,62059
struct CS_CodeDirectory 2321,62097
  uint32_t magic;2322,62123
  uint32_t length;2323,62192
  uint32_t version;2324,62259
  uint32_t flags;2325,62313
  uint32_t hashOffset;2326,62366
  uint32_t identOffset;2327,62440
  uint32_t nSpecialSlots;2328,62500
  uint32_t nCodeSlots;2329,62561
  uint32_t codeLimit;2330,62630
  uint8_t hashSize;2331,62698
  uint8_t hashType;2332,62757
  uint8_t platform;2333,62826
  uint8_t pageSize;2334,62907
  uint32_t spare2;2335,62979
  uint32_t scatterOffset;2338,63058
  uint32_t teamOffset;2341,63149
  uint32_t spare3;2344,63238
  uint64_t codeLimit64;2345,63290
  uint64_t execSegBase;2348,63390
  uint64_t execSegLimit;2349,63450
  uint64_t execSegFlags;2350,63509
struct CS_BlobIndex 2355,63617
  uint32_t type;2356,63639
  uint32_t offset;2357,63678
struct CS_SuperBlob 2360,63723
  uint32_t magic;2361,63745
  uint32_t length;2362,63783
  uint32_t count;2363,63834
enum SecCSDigestAlgorithm 2367,63976
  kSecCodeSignatureNoHash 2368,64004
  kSecCodeSignatureHashSHA1 2369,64056
  kSecCodeSignatureHashSHA256 2370,64103
  kSecCodeSignatureHashSHA256Truncated 2371,64152
  kSecCodeSignatureHashSHA384 2373,64270
  kSecCodeSignatureHashSHA512 2374,64319
enum LinkerOptimizationHintKind 2377,64372
  LOH_ARM64_ADRP_ADRP 2378,64406
  LOH_ARM64_ADRP_LDR 2379,64433
  LOH_ARM64_ADRP_ADD_LDR 2380,64459
  LOH_ARM64_ADRP_LDR_GOT_LDR 2381,64489
  LOH_ARM64_ADRP_ADD_STR 2382,64523
  LOH_ARM64_ADRP_LDR_GOT_STR 2383,64553
  LOH_ARM64_ADRP_ADD 2384,64587
  LOH_ARM64_ADRP_LDR_GOT 2385,64613

/usr/include/llvm/BinaryFormat/Magic.h,1327
#define LLVM_BINARYFORMAT_MAGIC_H10,404
struct file_magic 20,623
  enum Impl 21,643
    unknown 22,657
    bitcode,23,703
    clang_ast,24,744
    archive,25,789
    elf,26,839
    elf_relocatable,27,884
    elf_executable,28,940
    elf_shared_object,29,989
    elf_core,30,1051
    goff_object,31,1094
    macho_object,32,1139
    macho_executable,33,1186
    macho_fixed_virtual_memory_shared_lib,34,1232
    macho_core,35,1306
    macho_preload_executable,36,1374
    macho_dynamically_linked_shared_lib,37,1453
    macho_dynamic_linker,38,1532
    macho_bundle,39,1609
    macho_dynamically_linked_shared_lib_stub,40,1679
    macho_dsym_companion,41,1753
    macho_kext_bundle,42,1831
    macho_universal_binary,43,1906
    macho_file_set,44,1981
    minidump,45,2055
    coff_cl_gl_object,46,2128
    coff_object,47,2206
    coff_import_library,48,2259
    pecoff_executable,49,2315
    windows_resource,50,2374
    xcoff_object_32,51,2448
    xcoff_object_64,52,2509
    wasm_object,53,2570
    pdb,54,2630
    tapi_file,55,2694
    cuda_fatbinary,56,2767
    offload_binary,57,2830
    dxcontainer_object,58,2891
    offload_bundle,59,2950
    offload_bundle_compressed,60,3012
    spirv_object,61,3085
  bool is_object(64,3148
  file_magic(67,3225
  operator Impl(68,3256

/usr/include/llvm/BinaryFormat/MsgPack.h,426
#define LLVM_BINARYFORMAT_MSGPACK_H15,581
namespace FirstByte 27,920
#define HANDLE_MP_FIRST_BYTE(28,942
namespace FixBits 39,1443
#define HANDLE_MP_FIX_BITS(40,1463
namespace FixBitsMask 52,1956
#define HANDLE_MP_FIX_BITS_MASK(53,1980
namespace FixMax 61,2324
#define HANDLE_MP_FIX_MAX(62,2343
namespace FixLen 71,2680
#define HANDLE_MP_FIX_LEN(72,2699
namespace FixMin 84,3210
#define HANDLE_MP_FIX_MIN(85,3229

/usr/include/llvm/BinaryFormat/MsgPackReader.h,771
#define LLVM_BINARYFORMAT_MSGPACKREADER_H39,1113
enum class Type 53,1553
  Int,54,1581
  UInt,55,1588
  Nil,56,1596
  Boolean,57,1603
  Float,58,1614
  String,59,1623
  Binary,60,1633
  Array,61,1643
  Map,62,1652
  Extension,63,1659
  Empty,64,1672
struct ExtensionType 69,1842
  int8_t Type;71,1900
  StringRef Bytes;73,1956
struct Object 81,2211
  Type Kind;82,2227
    int64_t Int;85,2282
    uint64_t UInt;87,2332
    bool Bool;89,2387
    double Float;91,2436
    StringRef Raw;93,2509
    size_t Length;95,2579
    ExtensionType Extension;97,2636
  Object(100,2671
class Reader 104,2773
  MemoryBufferRef InputBuffer;131,3774
  StringRef::iterator Current;132,3805
  StringRef::iterator End;133,3836
  size_t remainingSpace(135,3864

/usr/include/llvm/BinaryFormat/Wasm.h,9829
#define LLVM_BINARYFORMAT_WASM_H15,637
enum : unsigned 34,1107
  WASM_SEC_CUSTOM 35,1125
  WASM_SEC_TYPE 36,1185
  WASM_SEC_IMPORT 37,1247
  WASM_SEC_FUNCTION 38,1297
  WASM_SEC_TABLE 39,1349
  WASM_SEC_MEMORY 40,1420
  WASM_SEC_GLOBAL 41,1468
  WASM_SEC_EXPORT 42,1518
  WASM_SEC_START 43,1556
  WASM_SEC_ELEM 44,1613
  WASM_SEC_CODE 45,1660
  WASM_SEC_DATA 46,1713
  WASM_SEC_DATACOUNT 47,1757
  WASM_SEC_TAG 48,1806
  WASM_SEC_LAST_KNOWN 49,1853
enum : unsigned 53,1949
  WASM_TYPE_I32 54,1967
  WASM_TYPE_I64 55,1991
  WASM_TYPE_F32 56,2015
  WASM_TYPE_F64 57,2039
  WASM_TYPE_V128 58,2063
  WASM_TYPE_FUNCREF 59,2088
  WASM_TYPE_EXTERNREF 60,2116
  WASM_TYPE_FUNC 61,2146
  WASM_TYPE_NORESULT 62,2171
enum : unsigned 66,2289
  WASM_EXTERNAL_FUNCTION 67,2307
  WASM_EXTERNAL_TABLE 68,2339
  WASM_EXTERNAL_MEMORY 69,2368
  WASM_EXTERNAL_GLOBAL 70,2398
  WASM_EXTERNAL_TAG 71,2428
enum : unsigned 75,2503
  WASM_OPCODE_END 76,2521
  WASM_OPCODE_CALL 77,2547
  WASM_OPCODE_LOCAL_GET 78,2574
  WASM_OPCODE_LOCAL_SET 79,2606
  WASM_OPCODE_LOCAL_TEE 80,2638
  WASM_OPCODE_GLOBAL_GET 81,2670
  WASM_OPCODE_GLOBAL_SET 82,2703
  WASM_OPCODE_I32_STORE 83,2736
  WASM_OPCODE_I64_STORE 84,2768
  WASM_OPCODE_I32_CONST 85,2800
  WASM_OPCODE_I64_CONST 86,2832
  WASM_OPCODE_F32_CONST 87,2864
  WASM_OPCODE_F64_CONST 88,2896
  WASM_OPCODE_I32_ADD 89,2928
  WASM_OPCODE_I32_SUB 90,2958
  WASM_OPCODE_I32_MUL 91,2988
  WASM_OPCODE_I64_ADD 92,3018
  WASM_OPCODE_I64_SUB 93,3048
  WASM_OPCODE_I64_MUL 94,3078
  WASM_OPCODE_REF_NULL 95,3108
enum : unsigned 99,3183
  WASM_OPCODE_BLOCK 100,3201
  WASM_OPCODE_BR 101,3229
  WASM_OPCODE_BR_TABLE 102,3254
  WASM_OPCODE_RETURN 103,3285
  WASM_OPCODE_DROP 104,3314
  WASM_OPCODE_MISC_PREFIX 105,3341
  WASM_OPCODE_MEMORY_INIT 106,3375
  WASM_OPCODE_MEMORY_FILL 107,3409
  WASM_OPCODE_DATA_DROP 108,3443
  WASM_OPCODE_ATOMICS_PREFIX 109,3475
  WASM_OPCODE_ATOMIC_NOTIFY 110,3512
  WASM_OPCODE_I32_ATOMIC_WAIT 111,3548
  WASM_OPCODE_I32_ATOMIC_STORE 112,3586
  WASM_OPCODE_I32_RMW_CMPXCHG 113,3625
enum : unsigned 116,3667
  WASM_LIMITS_FLAG_NONE 117,3685
  WASM_LIMITS_FLAG_HAS_MAX 118,3716
  WASM_LIMITS_FLAG_IS_SHARED 119,3750
  WASM_LIMITS_FLAG_IS_64 120,3786
enum : unsigned 123,3822
  WASM_DATA_SEGMENT_IS_PASSIVE 124,3840
  WASM_DATA_SEGMENT_HAS_MEMINDEX 125,3879
enum : unsigned 128,3924
  WASM_ELEM_SEGMENT_IS_PASSIVE 129,3942
  WASM_ELEM_SEGMENT_HAS_TABLE_NUMBER 130,3981
  WASM_ELEM_SEGMENT_HAS_INIT_EXPRS 131,4026
const unsigned WASM_ELEM_SEGMENT_MASK_HAS_ELEM_KIND 133,4072
enum : uint8_t 136,4204
  WASM_FEATURE_PREFIX_USED 137,4221
  WASM_FEATURE_PREFIX_REQUIRED 138,4255
  WASM_FEATURE_PREFIX_DISALLOWED 139,4293
enum : unsigned 143,4385
  WASM_NAMES_MODULE 144,4403
  WASM_NAMES_FUNCTION 145,4428
  WASM_NAMES_LOCAL 146,4455
  WASM_NAMES_GLOBAL 147,4479
  WASM_NAMES_DATA_SEGMENT 148,4504
enum : unsigned 152,4590
  WASM_SEGMENT_INFO 153,4608
  WASM_INIT_FUNCS 154,4635
  WASM_COMDAT_INFO 155,4660
  WASM_SYMBOL_TABLE 156,4686
enum : unsigned 160,4767
  WASM_DYLINK_MEM_INFO 161,4785
  WASM_DYLINK_NEEDED 162,4815
  WASM_DYLINK_EXPORT_INFO 163,4843
  WASM_DYLINK_IMPORT_INFO 164,4876
enum : unsigned 168,4988
  WASM_COMDAT_DATA 169,5006
  WASM_COMDAT_FUNCTION 170,5032
  WASM_COMDAT_SECTION 172,5133
enum WasmSymbolType 176,5242
  WASM_SYMBOL_TYPE_FUNCTION 177,5275
  WASM_SYMBOL_TYPE_DATA 178,5310
  WASM_SYMBOL_TYPE_GLOBAL 179,5341
  WASM_SYMBOL_TYPE_SECTION 180,5374
  WASM_SYMBOL_TYPE_TAG 181,5408
  WASM_SYMBOL_TYPE_TABLE 182,5438
enum WasmSegmentFlag 185,5474
  WASM_SEG_FLAG_STRINGS 186,5508
  WASM_SEG_FLAG_TLS 187,5539
enum WasmTagAttribute 191,5598
  WASM_TAG_ATTRIBUTE_EXCEPTION 192,5632
const unsigned WASM_SYMBOL_BINDING_MASK 195,5674
const unsigned WASM_SYMBOL_VISIBILITY_MASK 196,5721
const unsigned WASM_SYMBOL_BINDING_GLOBAL 198,5772
const unsigned WASM_SYMBOL_BINDING_WEAK 199,5821
const unsigned WASM_SYMBOL_BINDING_LOCAL 200,5868
const unsigned WASM_SYMBOL_VISIBILITY_DEFAULT 201,5916
const unsigned WASM_SYMBOL_VISIBILITY_HIDDEN 202,5969
const unsigned WASM_SYMBOL_UNDEFINED 203,6021
const unsigned WASM_SYMBOL_EXPORTED 204,6066
const unsigned WASM_SYMBOL_EXPLICIT_NAME 205,6110
const unsigned WASM_SYMBOL_NO_STRIP 206,6159
const unsigned WASM_SYMBOL_TLS 207,6203
const unsigned WASM_SYMBOL_ABSOLUTE 208,6243
#define WASM_RELOC(210,6289
enum : unsigned 212,6336
#undef WASM_RELOC216,6384
struct WasmObjectHeader 218,6403
  StringRef Magic;219,6429
  uint32_t Version;220,6448
enum class ValType 224,6513
  I32 225,6534
  I64 226,6557
  F32 227,6580
  F64 228,6603
  V128 229,6626
  FUNCREF 230,6651
  EXTERNREF 231,6682
struct WasmDylinkImportInfo 234,6721
  StringRef Module;235,6751
  StringRef Field;236,6771
  uint32_t Flags;237,6790
struct WasmDylinkExportInfo 240,6812
  StringRef Name;241,6842
  uint32_t Flags;242,6860
struct WasmDylinkInfo 245,6882
  uint32_t MemorySize;246,6906
  uint32_t MemoryAlignment;247,6953
  uint32_t TableSize;248,7008
  uint32_t TableAlignment;249,7057
  std::vector<StringRef> Needed;250,7110
  std::vector<WasmDylinkImportInfo> ImportInfo;251,7174
  std::vector<WasmDylinkExportInfo> ExportInfo;252,7222
struct WasmProducerInfo 255,7274
  std::vector<std::vector256,7300
  std::vector<std::pair<std::string, std::string>> Languages;256,7300
  std::vector<std::vector257,7362
  std::vector<std::pair<std::string, std::string>> Tools;257,7362
  std::vector<std::vector258,7420
  std::vector<std::pair<std::string, std::string>> SDKs;258,7420
struct WasmFeatureEntry 261,7481
  uint8_t Prefix;262,7507
  std::string Name;263,7525
struct WasmExport 266,7549
  StringRef Name;267,7569
  uint8_t Kind;268,7587
  uint32_t Index;269,7603
struct WasmLimits 272,7625
  uint8_t Flags;273,7645
  uint64_t Minimum;274,7662
  uint64_t Maximum;275,7682
struct WasmTableType 278,7706
  ValType ElemType;279,7729
  WasmLimits Limits;280,7749
struct WasmTable 283,7774
  uint32_t Index;284,7793
  WasmTableType Type;285,7811
  StringRef SymbolName;286,7833
struct WasmInitExprMVP 289,7891
  uint8_t Opcode;290,7916
    int32_t Int32;292,7944
    int64_t Int64;293,7963
    uint32_t Float32;294,7982
    uint64_t Float64;295,8004
    uint32_t Global;296,8026
  } Value;297,8047
struct WasmInitExpr 300,8062
  uint8_t Extended;301,8084
  WasmInitExprMVP Inst;303,8205
  ArrayRef<uint8_t> Body;304,8229
struct WasmGlobalType 307,8259
  uint8_t Type;308,8283
  bool Mutable;309,8329
struct WasmGlobal 312,8349
  uint32_t Index;313,8369
  WasmGlobalType Type;314,8387
  WasmInitExpr InitExpr;315,8410
  StringRef SymbolName;316,8435
struct WasmTag 319,8493
  uint32_t Index;320,8510
  uint32_t SigIndex;321,8528
  StringRef SymbolName;322,8549
struct WasmImport 325,8607
  StringRef Module;326,8627
  StringRef Field;327,8647
  uint8_t Kind;328,8666
    uint32_t SigIndex;330,8692
    WasmGlobalType Global;331,8715
    WasmTableType Table;332,8742
    WasmLimits Memory;333,8767
struct WasmLocalDecl 337,8799
  uint8_t Type;338,8822
  uint32_t Count;339,8838
struct WasmFunction 342,8860
  uint32_t Index;343,8882
  uint32_t SigIndex;344,8900
  std::vector<WasmLocalDecl> Locals;345,8921
  ArrayRef<uint8_t> Body;346,8958
  uint32_t CodeSectionOffset;347,8984
  uint32_t Size;348,9014
  uint32_t CodeOffset;349,9031
  std::optional<StringRef> ExportName;350,9083
  StringRef SymbolName;351,9151
  StringRef DebugName;352,9205
  uint32_t Comdat;353,9256
struct WasmDataSegment 356,9318
  uint32_t InitFlags;357,9343
  uint32_t MemoryIndex;359,9425
  WasmInitExpr Offset;361,9512
  ArrayRef<uint8_t> Content;363,9536
  StringRef Name;364,9565
  uint32_t Alignment;365,9618
  uint32_t LinkingFlags;366,9640
  uint32_t Comdat;367,9665
struct WasmElemSegment 370,9722
  uint32_t Flags;371,9747
  uint32_t TableNumber;372,9765
  ValType ElemKind;373,9789
  WasmInitExpr Offset;374,9809
  std::vector<uint32_t> Functions;375,9832
struct WasmDataReference 380,10022
  uint32_t Segment;381,10049
  uint64_t Offset;382,10069
  uint64_t Size;383,10088
struct WasmRelocation 386,10109
  uint8_t Type;387,10133
  uint32_t Index;388,10183
  uint64_t Offset;389,10251
  int64_t Addend;390,10311
struct WasmInitFunc 393,10367
  uint32_t Priority;394,10389
  uint32_t Symbol;395,10410
struct WasmSymbolInfo 398,10433
  StringRef Name;399,10457
  uint8_t Kind;400,10475
  uint32_t Flags;401,10491
  std::optional<StringRef> ImportModule;403,10561
  std::optional<StringRef> ImportName;405,10652
  std::optional<StringRef> ExportName;407,10745
    uint32_t ElementIndex;411,10901
    WasmDataReference DataRef;413,11000
enum class NameType 417,11040
  FUNCTION,418,11062
  GLOBAL,419,11074
  DATA_SEGMENT,420,11084
struct WasmDebugName 423,11104
  NameType Type;424,11127
  uint32_t Index;425,11144
  StringRef Name;426,11162
struct WasmLinkingData 429,11184
  uint32_t Version;430,11209
  std::vector<WasmInitFunc> InitFunctions;431,11229
  std::vector<StringRef> Comdats;432,11272
  std::vector<WasmSymbolInfo> SymbolTable;433,11306
struct WasmSignature 436,11353
  SmallVector<SmallVector437,11376
  SmallVector<ValType, 1> Returns;437,11376
  SmallVector<SmallVector438,11411
  SmallVector<ValType, 4> Params;438,11411
  enum { Plain,440,11509
  enum { Plain, Empty,440,11509
  enum { Plain, Empty, Tombstone 440,11509
  enum { Plain, Empty, Tombstone } State 440,11509
  WasmSignature(442,11560
inline bool operator==(operator==449,11777
inline bool operator!=(operator!=454,11957
inline bool operator==(operator==458,12061
inline bool operator!=(operator!=462,12204
inline bool operator==(operator==466,12310
inline bool operator==(operator==472,12581

/usr/include/llvm/BinaryFormat/WasmTraits.h,730
#define LLVM_BINARYFORMAT_WASMTRAITS_H14,569
template <> struct DenseMapInfo<DenseMapInfo48,1535
  static wasm::WasmGlobalType getEmptyKey(49,1597
  static wasm::WasmGlobalType getTombstoneKey(52,1689
  static unsigned getHashValue(55,1785
  static bool isEqual(58,1924
template <> struct DenseMapInfo<DenseMapInfo65,2112
  static wasm::WasmLimits getEmptyKey(66,2170
  static wasm::WasmLimits getTombstoneKey(69,2263
  static unsigned getHashValue(72,2360
  static bool isEqual(80,2657
template <> struct DenseMapInfo<DenseMapInfo87,2840
  static wasm::WasmTableType getEmptyKey(88,2901
  static wasm::WasmTableType getTombstoneKey(92,3062
  static unsigned getHashValue(97,3239
  static bool isEqual(102,3446

/usr/include/llvm/Bitcode/BitcodeAnalyzer.h,888
#define LLVM_BITCODE_BITCODEANALYZER_H14,569
enum CurStreamTypeType 29,889
  UnknownBitstream,30,914
  LLVMIRBitstream,31,934
  ClangSerializedASTBitstream,32,953
  ClangSerializedDiagnosticsBitstream,33,984
  LLVMBitstreamRemarks34,1023
struct BCDumpOptions 37,1050
  raw_ostream &OS;OS39,1091
  bool Histogram 41,1142
  bool Symbolic 43,1237
  bool ShowBinaryBlobs 45,1306
  bool DumpBlockinfo 47,1375
  BCDumpOptions(49,1406
class BitcodeAnalyzer 52,1455
  BitstreamCursor Stream;53,1479
  BitstreamBlockInfo BlockInfo;54,1505
  CurStreamTypeType CurStreamType;55,1537
  std::optional<BitstreamCursor> BlockInfoStream;56,1572
  unsigned NumTopBlocks 57,1622
  struct PerRecordStats 59,1652
  struct PerBlockIDStats 66,1803
    std::vector<PerRecordStats> CodeFreq;79,2460
  std::map<std::map83,2541
  std::map<unsigned, PerBlockIDStats> BlockIDStats;83,2541

/usr/include/llvm/Bitcode/BitcodeCommon.h,392
#define LLVM_BITCODE_BITCODECOMMON_H15,579
struct AllocaPackedValues 21,668
  using UsedWithInAlloca = Bitfield::Element<bool, AlignLower::NextBit,26,923
  using ExplicitType = Bitfield::Element<bool, UsedWithInAlloca::NextBit,27,999
  using SwiftError = Bitfield::Element<bool, ExplicitType::NextBit,28,1077
  using AlignUpper = Bitfield::Element<unsigned, SwiftError::NextBit,29,1149

/usr/include/llvm/Bitcode/BitcodeConvenience.h,3839
#define LLVM_BITCODE_BITCODECONVENIENCE_H31,1163
template <uint64_t Value> class BCLiteral 64,2297
  static void emitOp(66,2376
  template <typename T> static void assertValid(70,2479
template <unsigned Width> class BCFixed 78,2762
  static void emitOp(82,2904
  static void assertValid(86,3037
  template <typename T> static void assertValid(91,3190
template <unsigned Width> class BCVBR 103,3623
  static void emitOp(107,3777
  template <typename T> static void assertValid(111,3908
class BCChar6 122,4327
  static void emitOp(124,4378
  template <typename T> static void assertValid(128,4504
  template <typename T> char convert(132,4648
class BCBlob 140,4849
  static void emitOp(142,4903
template <typename ElementTy> class BCArray 150,5136
  static void emitOp(154,5303
namespace detail 160,5463
template <typename FieldTy> static void emitOps(166,5615
template <typename FieldTy,175,5854
template <typename FieldTy, typename Next,175,5854
static void emitOps(176,5915
template <typename ElementTy,186,6251
template <typename ElementTy, typename... Fields> class BCRecordCoding 186,6251
public:public187,6324
  static void emit(189,6407
  template <typename T,199,6873
  template <typename T, typename ElementDataTy,199,6873
  static void read(200,6941
  template <typename T,208,7280
  static void read(209,7324
template <typename ElementTy> class BCRecordCoding<BCRecordCoding223,7894
public:public224,7958
  static void emit(226,8014
  template <typename T,235,8355
  static void read(236,8396
  template <typename T> static void read(241,8574
template <typename ElementTy> class BCRecordCoding<BCRecordCoding252,8928
  static void emit(255,9040
  template <typename BufferTy,261,9251
  static void emit(262,9300
  template <typename BufferTy,273,9721
  template <typename BufferTy, typename ElementDataTy,273,9721
  static void emit(274,9796
  static void emit(281,10092
  static void read(287,10288
  template <typename T,291,10378
  static void read(292,10420
  template <typename T> static void read(297,10611
template <> class BCRecordCoding<BCRecordCoding307,10880
  static void emit(310,10962
  template <typename T> static void read(315,11138
  template <typename T,319,11339
template <typename Head,324,11524
template <typename Head, typename... Tail> struct last_type 324,11524
  using type 325,11586
template <typename Head> struct last_type<last_type328,11640
template <typename Head> struct last_type<Head> { using type 328,11640
using has_blob 332,11819
template <typename T> struct is_array 336,12007
  typedef bool value_type;342,12147
  static constexpr bool value 343,12174
                                              decltype(check(false))>::value;value344,12251
using has_array 350,12468
template <typename IDField,357,12732
template <typename IDField, typename... Fields> class BCGenericRecordLayout 357,12732
  llvm::BitstreamWriter &Stream;Stream358,12810
  const unsigned AbbrevCode;365,13041
  explicit BCGenericRecordLayout(368,13142
  template <typename BufferTy,375,13425
  void emit(376,13474
  static unsigned emitAbbrev(383,13766
  template <typename BufferTy,396,14380
  static void emitRecord(397,14429
  template <typename ElementTy,414,15303
  static void readRecord(415,15353
  template <typename BufferTy,430,16133
  static void readRecord(431,16182
template <unsigned RecordCode,437,16366
class BCRecordLayout438,16417
  using Base 440,16509
  enum : unsigned 443,16590
    Code 445,16663
  explicit BCRecordLayout(449,16762
  template <typename BufferTy,455,16998
  void emit(456,17047
  template <typename BufferTy,465,17424
  static void emitRecord(466,17473
class BCBlockRAII 474,17785
  llvm::BitstreamWriter &Stream;Stream475,17805
  BCBlockRAII(478,17847
  ~BCBlockRAII(483,17996

/usr/include/llvm/Bitcode/BitcodeWriter.h,311
#define LLVM_BITCODE_BITCODEWRITER_H14,565
  class BitcodeWriter 32,938
    SmallVectorImpl<char> &Buffer;Buffer33,962
    std::unique_ptr<BitstreamWriter> Stream;34,997
    StringTableBuilder StrtabBuilder{StrtabBuilder36,1043
    BumpPtrAllocator Alloc;40,1203
    std::vector<Module *> Mods;46,1354

/usr/include/llvm/Bitcode/BitcodeReader.h,1590
#define LLVM_BITCODE_BITCODEREADER_H14,564
typedef std::function<std::optional<std::optional44,1398
typedef std::function<Type Type47,1501
typedef std::function<unsigned(unsigned49,1557
typedef std::function<void(void51,1632
typedef std::function<void(void55,1769
struct ParserCallbacks 72,2401
  std::optional<DataLayoutCallbackFuncTy> DataLayout;73,2426
  std::optional<ValueTypeCallbackTy> ValueType;81,2901
  std::optional<MDTypeCallbackTy> MDType;83,3014
  explicit ParserCallbacks(86,3088
  struct BitcodeLTOInfo 93,3297
    bool IsThinLTO;94,3323
    bool HasSummary;95,3343
    bool EnableSplitLTOUnit;96,3364
    bool UnifiedLTO;97,3393
  class BitcodeModule 101,3465
    ArrayRef<uint8_t> Buffer;103,3559
    StringRef ModuleIdentifier;104,3589
    StringRef Strtab;107,3677
    uint64_t IdentificationBit;110,3759
    uint64_t ModuleBit;113,3853
    BitcodeModule(115,3878
    StringRef getBuffer(130,4494
    StringRef getStrtab(134,4604
    StringRef getModuleIdentifier(136,4656
  struct BitcodeFileContents 164,5942
    std::vector<BitcodeModule> Mods;165,5973
    StringRef Symtab,166,6010
    StringRef Symtab, StrtabForSymtab;166,6010
  inline bool isBitcodeWrapper(239,9724
  inline bool isRawBitcode(252,10247
  inline bool isBitcode(265,10778
  inline bool SkipBitcodeWrapperHeader(287,11753
  enum class BitcodeError 309,12623
  enum class BitcodeError { CorruptedBitcode 309,12623
  inline std::error_code make_error_code(310,12675
namespace std 316,12837
template <> struct is_error_code_enum<is_error_code_enum318,12854

/usr/include/llvm/Bitcode/BitcodeWriterPass.h,323
#define LLVM_BITCODE_BITCODEWRITERPASS_H15,557
class BitcodeWriterPass 41,1405
  raw_ostream &OS;OS42,1473
  bool ShouldPreserveUseListOrder;43,1492
  bool EmitSummaryIndex;44,1527
  bool EmitModuleHash;45,1552
  explicit BitcodeWriterPass(55,1884
  PreservedAnalyses run(64,2357
  static bool isRequired(66,2419

/usr/include/llvm/Bitcode/LLVMBitCodes.h,14300
#define LLVM_BITCODE_LLVMBITCODES_H18,738
enum BlockIDs 28,1148
  MODULE_BLOCK_ID 30,1176
  PARAMATTR_BLOCK_ID,33,1252
  PARAMATTR_GROUP_BLOCK_ID,34,1274
  CONSTANTS_BLOCK_ID,36,1303
  FUNCTION_BLOCK_ID,37,1325
  IDENTIFICATION_BLOCK_ID,42,1511
  VALUE_SYMTAB_BLOCK_ID,44,1539
  METADATA_BLOCK_ID,45,1564
  METADATA_ATTACHMENT_ID,46,1585
  TYPE_BLOCK_ID_NEW,48,1612
  USELIST_BLOCK_ID,50,1634
  MODULE_STRTAB_BLOCK_ID,52,1655
  GLOBALVAL_SUMMARY_BLOCK_ID,53,1681
  OPERAND_BUNDLE_TAGS_BLOCK_ID,55,1712
  METADATA_KIND_BLOCK_ID,57,1745
  STRTAB_BLOCK_ID,59,1772
  FULL_LTO_GLOBALVAL_SUMMARY_BLOCK_ID,61,1792
  SYMTAB_BLOCK_ID,63,1832
  SYNC_SCOPE_NAMES_BLOCK_ID,65,1852
enum IdentificationCodes 70,2024
  IDENTIFICATION_CODE_STRING 71,2051
  IDENTIFICATION_CODE_EPOCH 72,2122
enum { BITCODE_CURRENT_EPOCH 81,2533
enum ModuleCodes 84,2636
  MODULE_CODE_VERSION 85,2655
  MODULE_CODE_TRIPLE 86,2713
  MODULE_CODE_DATALAYOUT 87,2773
  MODULE_CODE_ASM 88,2833
  MODULE_CODE_SECTIONNAME 89,2893
  MODULE_CODE_DEPLIB 92,3015
  MODULE_CODE_GLOBALVAR 96,3190
  MODULE_CODE_FUNCTION 100,3353
  MODULE_CODE_ALIAS_OLD 103,3442
  MODULE_CODE_GCNAME 105,3472
  MODULE_CODE_COMDAT 106,3523
  MODULE_CODE_VSTOFFSET 108,3585
  MODULE_CODE_ALIAS 111,3716
  MODULE_CODE_METADATA_VALUES_UNUSED 113,3743
  MODULE_CODE_SOURCE_FILENAME 116,3824
  MODULE_CODE_HASH 119,3880
  MODULE_CODE_IFUNC 122,3984
enum AttributeCodes 126,4085
  PARAMATTR_CODE_ENTRY_OLD 128,4168
  PARAMATTR_CODE_ENTRY 130,4293
  PARAMATTR_GRP_CODE_ENTRY 131,4361
enum TypeCodes 135,4500
  TYPE_CODE_NUMENTRY 136,4517
  TYPE_CODE_VOID 139,4586
  TYPE_CODE_FLOAT 140,4619
  TYPE_CODE_DOUBLE 141,4653
  TYPE_CODE_LABEL 142,4688
  TYPE_CODE_OPAQUE 143,4722
  TYPE_CODE_INTEGER 144,4757
  TYPE_CODE_POINTER 145,4802
  TYPE_CODE_FUNCTION_OLD 147,4855
  TYPE_CODE_HALF 150,4980
  TYPE_CODE_ARRAY 152,5012
  TYPE_CODE_VECTOR 153,5064
  TYPE_CODE_X86_FP80 158,5281
  TYPE_CODE_FP128 159,5328
  TYPE_CODE_PPC_FP128 160,5390
  TYPE_CODE_METADATA 162,5450
  TYPE_CODE_X86_MMX 164,5490
  TYPE_CODE_STRUCT_ANON 166,5528
  TYPE_CODE_STRUCT_NAME 167,5597
  TYPE_CODE_STRUCT_NAMED 168,5657
  TYPE_CODE_FUNCTION 170,5728
  TYPE_CODE_TOKEN 172,5798
  TYPE_CODE_BFLOAT 174,5832
  TYPE_CODE_X86_AMX 175,5882
  TYPE_CODE_OPAQUE_POINTER 177,5920
  TYPE_CODE_TARGET_TYPE 179,5985
enum OperandBundleTagCode 182,6034
  OPERAND_BUNDLE_TAG 183,6062
enum SyncScopeNameCode 186,6113
  SYNC_SCOPE_NAME 187,6138
enum ValueSymtabCodes 191,6194
  VST_CODE_ENTRY 192,6218
  VST_CODE_BBENTRY 193,6280
  VST_CODE_FNENTRY 194,6341
  VST_CODE_COMBINED_ENTRY 196,6457
enum ModulePathSymtabCodes 200,6559
  MST_CODE_ENTRY 201,6588
  MST_CODE_HASH 202,6646
enum GlobalValueSummarySymtabCodes 207,6785
  FS_PERMODULE 210,6926
  FS_PERMODULE_PROFILE 214,7109
  FS_PERMODULE_GLOBALVAR_INIT_REFS 216,7203
  FS_COMBINED 219,7352
  FS_COMBINED_PROFILE 223,7538
  FS_COMBINED_GLOBALVAR_INIT_REFS 225,7637
  FS_ALIAS 227,7714
  FS_COMBINED_ALIAS 229,7784
  FS_COMBINED_ORIGINAL_NAME 231,7859
  FS_VERSION 233,7960
  FS_TYPE_TESTS 237,8126
  FS_TYPE_TEST_ASSUME_VCALLS 242,8333
  FS_TYPE_CHECKED_LOAD_VCALLS 247,8548
  FS_TYPE_TEST_ASSUME_CONST_VCALL 251,8757
  FS_TYPE_CHECKED_LOAD_CONST_VCALL 255,8965
  FS_VALUE_GUID 259,9178
  FS_CFI_FUNCTION_DEFS 263,9314
  FS_CFI_FUNCTION_DECLS 267,9460
  FS_PERMODULE_RELBF 272,9732
  FS_FLAGS 274,9781
  FS_TYPE_ID 280,10134
  FS_TYPE_ID_METADATA 294,10986
  FS_PERMODULE_VTABLE_GLOBALVAR_INIT_REFS 300,11338
  FS_BLOCK_COUNT 302,11439
  FS_PARAM_ACCESS 305,11606
  FS_PERMODULE_CALLSITE_INFO 308,11717
  FS_PERMODULE_ALLOC_INFO 311,11863
  FS_COMBINED_CALLSITE_INFO 315,12049
  FS_COMBINED_ALLOC_INFO 320,12259
  FS_STACK_IDS 321,12290
enum MetadataCodes 324,12315
  METADATA_STRING_OLD 325,12336
  METADATA_VALUE 326,12394
  METADATA_NODE 327,12465
  METADATA_NAME 328,12527
  METADATA_DISTINCT_NODE 329,12585
  METADATA_KIND 330,12647
  METADATA_LOCATION 331,12698
  METADATA_OLD_NODE 332,12774
  METADATA_OLD_FN_NODE 333,12851
  METADATA_NAMED_NODE 334,12928
  METADATA_ATTACHMENT 335,12991
  METADATA_GENERIC_DEBUG 336,13058
  METADATA_SUBRANGE 337,13134
  METADATA_ENUMERATOR 338,13190
  METADATA_BASIC_TYPE 339,13259
  METADATA_FILE 340,13333
  METADATA_DERIVED_TYPE 341,13414
  METADATA_COMPOSITE_TYPE 342,13469
  METADATA_SUBROUTINE_TYPE 343,13524
  METADATA_COMPILE_UNIT 344,13592
  METADATA_SUBPROGRAM 345,13647
  METADATA_LEXICAL_BLOCK 346,13702
  METADATA_LEXICAL_BLOCK_FILE 347,13779
  METADATA_NAMESPACE 348,13856
  METADATA_TEMPLATE_TYPE 349,13937
  METADATA_TEMPLATE_VALUE 350,14008
  METADATA_GLOBAL_VAR 351,14086
  METADATA_LOCAL_VAR 352,14138
  METADATA_EXPRESSION 353,14190
  METADATA_OBJC_PROPERTY 354,14250
  METADATA_IMPORTED_ENTITY 355,14320
  METADATA_MODULE 356,14399
  METADATA_MACRO 357,14464
  METADATA_MACRO_FILE 358,14539
  METADATA_STRINGS 359,14612
  METADATA_GLOBAL_DECL_ATTACHMENT 360,14687
  METADATA_GLOBAL_VAR_EXPR 361,14758
  METADATA_INDEX_OFFSET 362,14823
  METADATA_INDEX 363,14875
  METADATA_LABEL 364,14927
  METADATA_STRING_TYPE 365,15006
  METADATA_COMMON_BLOCK 368,15173
  METADATA_GENERIC_SUBRANGE 369,15248
  METADATA_ARG_LIST 370,15319
  METADATA_ASSIGN_ID 371,15384
enum ConstantsCodes 376,15571
  CST_CODE_SETTYPE 377,15593
  CST_CODE_NULL 378,15653
  CST_CODE_UNDEF 379,15694
  CST_CODE_INTEGER 380,15736
  CST_CODE_WIDE_INTEGER 381,15796
  CST_CODE_FLOAT 382,15860
  CST_CODE_AGGREGATE 383,15919
  CST_CODE_STRING 384,15989
  CST_CODE_CSTRING 385,16049
  CST_CODE_CE_BINOP 386,16109
  CST_CODE_CE_CAST 387,16183
  CST_CODE_CE_GEP 388,16256
  CST_CODE_CE_SELECT 389,16322
  CST_CODE_CE_EXTRACTELT 390,16395
  CST_CODE_CE_INSERTELT 391,16467
  CST_CODE_CE_SHUFFLEVEC 392,16540
  CST_CODE_CE_CMP 393,16613
  CST_CODE_INLINEASM_OLD 394,16691
  CST_CODE_CE_SHUFVEC_EX 396,16835
  CST_CODE_CE_INBOUNDS_GEP 397,16914
  CST_CODE_BLOCKADDRESS 398,16980
  CST_CODE_DATA 399,17057
  CST_CODE_INLINEASM_OLD2 400,17123
  CST_CODE_CE_GEP_WITH_INRANGE_INDEX 402,17278
  CST_CODE_CE_UNOP 403,17357
  CST_CODE_POISON 404,17433
  CST_CODE_DSO_LOCAL_EQUIVALENT 405,17486
  CST_CODE_INLINEASM_OLD3 406,17564
  CST_CODE_NO_CFI_VALUE 409,17785
  CST_CODE_INLINEASM 410,17836
enum CastOpcodes 420,18369
  CAST_TRUNC 421,18388
  CAST_ZEXT 422,18406
  CAST_SEXT 423,18423
  CAST_FPTOUI 424,18440
  CAST_FPTOSI 425,18459
  CAST_UITOFP 426,18478
  CAST_SITOFP 427,18497
  CAST_FPTRUNC 428,18516
  CAST_FPEXT 429,18536
  CAST_PTRTOINT 430,18554
  CAST_INTTOPTR 431,18575
  CAST_BITCAST 432,18597
  CAST_ADDRSPACECAST 433,18618
enum UnaryOpcodes 440,18917
  UNOP_FNEG 441,18937
enum BinaryOpcodes 448,19229
  BINOP_ADD 449,19250
  BINOP_SUB 450,19267
  BINOP_MUL 451,19284
  BINOP_UDIV 452,19301
  BINOP_SDIV 453,19319
  BINOP_UREM 454,19358
  BINOP_SREM 455,19376
  BINOP_SHL 456,19415
  BINOP_LSHR 457,19432
  BINOP_ASHR 458,19450
  BINOP_AND 459,19468
  BINOP_OR 460,19486
  BINOP_XOR 461,19503
enum RMWOperations 467,19745
  RMW_XCHG 468,19766
  RMW_ADD 469,19782
  RMW_SUB 470,19797
  RMW_AND 471,19812
  RMW_NAND 472,19827
  RMW_OR 473,19843
  RMW_XOR 474,19857
  RMW_MAX 475,19872
  RMW_MIN 476,19887
  RMW_UMAX 477,19902
  RMW_UMIN 478,19918
  RMW_FADD 479,19935
  RMW_FSUB 480,19952
  RMW_FMAX 481,19969
  RMW_FMIN 482,19986
  RMW_UINC_WRAP 483,20003
  RMW_UDEC_WRAP 484,20025
enum OverflowingBinaryOperatorOptionalFlags 489,20180
  OBO_NO_UNSIGNED_WRAP 490,20226
  OBO_NO_SIGNED_WRAP 491,20254
enum FastMathMap 497,20452
  UnsafeAlgebra 498,20471
  NoNaNs 499,20511
  NoInfs 500,20541
  NoSignedZeros 501,20571
  AllowReciprocal 502,20601
  AllowContract 503,20631
  ApproxFunc 504,20661
  AllowReassoc 505,20691
enum PossiblyNonNegInstOptionalFlags 509,20802
enum PossiblyNonNegInstOptionalFlags { PNNI_NON_NEG 509,20802
enum PossiblyExactOperatorOptionalFlags 513,20984
enum PossiblyExactOperatorOptionalFlags { PEO_EXACT 513,20984
enum PossiblyDisjointInstOptionalFlags 517,21164
enum PossiblyDisjointInstOptionalFlags { PDI_DISJOINT 517,21164
enum AtomicOrderingCodes 520,21261
  ORDERING_NOTATOMIC 521,21288
  ORDERING_UNORDERED 522,21314
  ORDERING_MONOTONIC 523,21340
  ORDERING_ACQUIRE 524,21366
  ORDERING_RELEASE 525,21390
  ORDERING_ACQREL 526,21414
  ORDERING_SEQCST 527,21437
enum CallMarkersFlags 531,21507
  CALL_TAIL 532,21531
  CALL_CCONV 533,21548
  CALL_MUSTTAIL 534,21566
  CALL_EXPLICIT_TYPE 535,21588
  CALL_NOTAIL 536,21615
  CALL_FMF 537,21635
enum FunctionCodes 542,21825
  FUNC_CODE_DECLAREBLOCKS 543,21846
  FUNC_CODE_INST_BINOP 545,21900
  FUNC_CODE_INST_CAST 546,21975
  FUNC_CODE_INST_GEP_OLD 547,22049
  FUNC_CODE_INST_SELECT 548,22112
  FUNC_CODE_INST_EXTRACTELT 549,22186
  FUNC_CODE_INST_INSERTELT 550,22255
  FUNC_CODE_INST_SHUFFLEVEC 551,22329
  FUNC_CODE_INST_CMP 552,22403
  FUNC_CODE_INST_RET 554,22479
  FUNC_CODE_INST_BR 555,22552
  FUNC_CODE_INST_SWITCH 556,22623
  FUNC_CODE_INST_INVOKE 557,22690
  FUNC_CODE_INST_UNREACHABLE 559,22781
  FUNC_CODE_INST_PHI 561,22832
  FUNC_CODE_INST_ALLOCA 564,22932
  FUNC_CODE_INST_LOAD 565,23003
  FUNC_CODE_INST_VAARG 568,23109
  FUNC_CODE_INST_STORE_OLD 572,23357
  FUNC_CODE_INST_EXTRACTVAL 574,23452
  FUNC_CODE_INST_INSERTVAL 575,23516
  FUNC_CODE_INST_CMP2 578,23702
  FUNC_CODE_INST_VSELECT 580,23806
  FUNC_CODE_INST_INBOUNDS_GEP_OLD 581,23881
  FUNC_CODE_INST_INDIRECTBR 582,23953
  FUNC_CODE_DEBUG_LOC_AGAIN 584,24049
  FUNC_CODE_INST_CALL 586,24103
  FUNC_CODE_DEBUG_LOC 588,24176
  FUNC_CODE_INST_FENCE 589,24255
  FUNC_CODE_INST_CMPXCHG_OLD 590,24325
  FUNC_CODE_INST_ATOMICRMW_OLD 593,24552
  FUNC_CODE_INST_RESUME 596,24768
  FUNC_CODE_INST_LANDINGPAD_OLD 597,24828
  FUNC_CODE_INST_LOADATOMIC 599,24940
  FUNC_CODE_INST_STOREATOMIC_OLD 601,25072
  FUNC_CODE_INST_GEP 603,25220
  FUNC_CODE_INST_STORE 604,25293
  FUNC_CODE_INST_STOREATOMIC 605,25372
  FUNC_CODE_INST_CMPXCHG 606,25444
  FUNC_CODE_INST_LANDINGPAD 609,25669
  FUNC_CODE_INST_CLEANUPRET 610,25744
  FUNC_CODE_INST_CATCHRET 611,25813
  FUNC_CODE_INST_CATCHPAD 612,25871
  FUNC_CODE_INST_CLEANUPPAD 613,25941
  FUNC_CODE_INST_CATCHSWITCH 614,26005
  FUNC_CODE_OPERAND_BUNDLE 618,26134
  FUNC_CODE_INST_UNOP 619,26204
  FUNC_CODE_INST_CALLBR 620,26273
  FUNC_CODE_INST_FREEZE 622,26419
  FUNC_CODE_INST_ATOMICRMW 623,26478
  FUNC_CODE_BLOCKADDR_USERS 626,26694
enum UseListCodes 629,26763
  USELIST_CODE_DEFAULT 630,26783
  USELIST_CODE_BB 631,26844
enum AttributeKindCodes 634,26901
  ATTR_KIND_ALIGNMENT 636,26946
  ATTR_KIND_ALWAYS_INLINE 637,26973
  ATTR_KIND_BY_VAL 638,27004
  ATTR_KIND_INLINE_HINT 639,27028
  ATTR_KIND_IN_REG 640,27057
  ATTR_KIND_MIN_SIZE 641,27081
  ATTR_KIND_NAKED 642,27107
  ATTR_KIND_NEST 643,27130
  ATTR_KIND_NO_ALIAS 644,27152
  ATTR_KIND_NO_BUILTIN 645,27178
  ATTR_KIND_NO_CAPTURE 646,27207
  ATTR_KIND_NO_DUPLICATE 647,27236
  ATTR_KIND_NO_IMPLICIT_FLOAT 648,27267
  ATTR_KIND_NO_INLINE 649,27303
  ATTR_KIND_NON_LAZY_BIND 650,27331
  ATTR_KIND_NO_RED_ZONE 651,27363
  ATTR_KIND_NO_RETURN 652,27393
  ATTR_KIND_NO_UNWIND 653,27421
  ATTR_KIND_OPTIMIZE_FOR_SIZE 654,27449
  ATTR_KIND_READ_NONE 655,27485
  ATTR_KIND_READ_ONLY 656,27513
  ATTR_KIND_RETURNED 657,27541
  ATTR_KIND_RETURNS_TWICE 658,27568
  ATTR_KIND_S_EXT 659,27600
  ATTR_KIND_STACK_ALIGNMENT 660,27624
  ATTR_KIND_STACK_PROTECT 661,27658
  ATTR_KIND_STACK_PROTECT_REQ 662,27690
  ATTR_KIND_STACK_PROTECT_STRONG 663,27726
  ATTR_KIND_STRUCT_RET 664,27765
  ATTR_KIND_SANITIZE_ADDRESS 665,27794
  ATTR_KIND_SANITIZE_THREAD 666,27829
  ATTR_KIND_SANITIZE_MEMORY 667,27863
  ATTR_KIND_UW_TABLE 668,27897
  ATTR_KIND_Z_EXT 669,27924
  ATTR_KIND_BUILTIN 670,27948
  ATTR_KIND_COLD 671,27974
  ATTR_KIND_OPTIMIZE_NONE 672,27997
  ATTR_KIND_IN_ALLOCA 673,28029
  ATTR_KIND_NON_NULL 674,28057
  ATTR_KIND_JUMP_TABLE 675,28084
  ATTR_KIND_DEREFERENCEABLE 676,28113
  ATTR_KIND_DEREFERENCEABLE_OR_NULL 677,28147
  ATTR_KIND_CONVERGENT 678,28189
  ATTR_KIND_SAFESTACK 679,28218
  ATTR_KIND_ARGMEMONLY 680,28246
  ATTR_KIND_SWIFT_SELF 681,28275
  ATTR_KIND_SWIFT_ERROR 682,28304
  ATTR_KIND_NO_RECURSE 683,28334
  ATTR_KIND_INACCESSIBLEMEM_ONLY 684,28363
  ATTR_KIND_INACCESSIBLEMEM_OR_ARGMEMONLY 685,28402
  ATTR_KIND_ALLOC_SIZE 686,28450
  ATTR_KIND_WRITEONLY 687,28479
  ATTR_KIND_SPECULATABLE 688,28507
  ATTR_KIND_STRICT_FP 689,28538
  ATTR_KIND_SANITIZE_HWADDRESS 690,28566
  ATTR_KIND_NOCF_CHECK 691,28603
  ATTR_KIND_OPT_FOR_FUZZING 692,28632
  ATTR_KIND_SHADOWCALLSTACK 693,28666
  ATTR_KIND_SPECULATIVE_LOAD_HARDENING 694,28700
  ATTR_KIND_IMMARG 695,28745
  ATTR_KIND_WILLRETURN 696,28770
  ATTR_KIND_NOFREE 697,28799
  ATTR_KIND_NOSYNC 698,28824
  ATTR_KIND_SANITIZE_MEMTAG 699,28849
  ATTR_KIND_PREALLOCATED 700,28883
  ATTR_KIND_NO_MERGE 701,28914
  ATTR_KIND_NULL_POINTER_IS_VALID 702,28941
  ATTR_KIND_NOUNDEF 703,28981
  ATTR_KIND_BYREF 704,29007
  ATTR_KIND_MUSTPROGRESS 705,29031
  ATTR_KIND_NO_CALLBACK 706,29062
  ATTR_KIND_HOT 707,29092
  ATTR_KIND_NO_PROFILE 708,29114
  ATTR_KIND_VSCALE_RANGE 709,29143
  ATTR_KIND_SWIFT_ASYNC 710,29174
  ATTR_KIND_NO_SANITIZE_COVERAGE 711,29204
  ATTR_KIND_ELEMENTTYPE 712,29243
  ATTR_KIND_DISABLE_SANITIZER_INSTRUMENTATION 713,29273
  ATTR_KIND_NO_SANITIZE_BOUNDS 714,29325
  ATTR_KIND_ALLOC_ALIGN 715,29362
  ATTR_KIND_ALLOCATED_POINTER 716,29392
  ATTR_KIND_ALLOC_KIND 717,29428
  ATTR_KIND_PRESPLIT_COROUTINE 718,29457
  ATTR_KIND_FNRETTHUNK_EXTERN 719,29494
  ATTR_KIND_SKIP_PROFILE 720,29530
  ATTR_KIND_MEMORY 721,29561
  ATTR_KIND_NOFPCLASS 722,29586
  ATTR_KIND_OPTIMIZE_FOR_DEBUGGING 723,29614
  ATTR_KIND_WRITABLE 724,29655
  ATTR_KIND_CORO_ONLY_DESTROY_WHEN_COMPLETE 725,29682
  ATTR_KIND_DEAD_ON_UNWIND 726,29732
enum ComdatSelectionKindCodes 729,29769
  COMDAT_SELECTION_KIND_ANY 730,29801
  COMDAT_SELECTION_KIND_EXACT_MATCH 731,29834
  COMDAT_SELECTION_KIND_LARGEST 732,29875
  COMDAT_SELECTION_KIND_NO_DUPLICATES 733,29912
  COMDAT_SELECTION_KIND_SAME_SIZE 734,29955
enum StrtabCodes 737,29998
  STRTAB_BLOB 738,30017
enum SymtabCodes 741,30040
  SYMTAB_BLOB 742,30059

/usr/include/llvm/Bitstream/BitCodeEnums.h,745
#define LLVM_BITSTREAM_BITCODEENUMS_H22,959
enum BitstreamWrapperHeader 26,1077
  BWH_MagicField 27,1118
  BWH_VersionField 28,1144
  BWH_OffsetField 29,1172
  BWH_SizeField 30,1199
  BWH_CPUTypeField 31,1224
  BWH_HeaderSize 32,1252
enum StandardWidths 36,1298
  BlockIDWidth 37,1320
  CodeLenWidth 38,1373
  BlockSizeWidth 39,1417
enum FixedAbbrevIDs 44,1642
  END_BLOCK 45,1664
  ENTER_SUBBLOCK 46,1742
  DEFINE_ABBREV 53,2118
  UNABBREV_RECORD 57,2288
  FIRST_APPLICATION_ABBREV 60,2387
enum StandardBlockIDs 65,2565
  BLOCKINFO_BLOCK_ID 69,2752
  FIRST_APPLICATION_BLOCKID 72,2833
enum BlockInfoCodes 77,2959
  BLOCKINFO_CODE_SETBID 81,3104
  BLOCKINFO_CODE_BLOCKNAME 82,3161
  BLOCKINFO_CODE_SETRECORDNAME 83,3217

/usr/include/llvm/Bitstream/BitCodes.h,991
#define LLVM_BITSTREAM_BITCODES_H18,712
class BitCodeAbbrevOp 33,1262
  uint64_t Val;34,1286
  bool IsLiteral 35,1356
  unsigned Enc 36,1434
  enum Encoding 38,1492
    Fixed 39,1510
    VBR 40,1580
    Array 41,1656
    Char6 42,1730
    Blob 43,1798
  static bool isValidEncoding(46,1865
  explicit BitCodeAbbrevOp(50,1943
  explicit BitCodeAbbrevOp(51,2012
  bool isLiteral(54,2116
  bool isEncoding(55,2164
  uint64_t getLiteralValue(58,2243
  Encoding getEncoding(61,2350
  uint64_t getEncodingData(62,2429
  bool hasEncodingData(67,2534
  static bool hasEncodingData(68,2608
  static bool isChar6(82,2918
  static unsigned EncodeChar6(83,2995
  static char DecodeChar6(92,3317
class BitCodeAbbrev 103,3742
  SmallVector<SmallVector104,3764
  SmallVector<BitCodeAbbrevOp, 32> OperandList;104,3764
  explicit BitCodeAbbrev(109,3851
  unsigned getNumOperandInfos(112,3965
  const BitCodeAbbrevOp &getOperandInfo(getOperandInfo115,4063
  void Add(119,4155

/usr/include/llvm/Bitstream/BitstreamReader.h,3550
#define LLVM_BITSTREAM_BITSTREAMREADER_H15,635
class BitstreamBlockInfo 37,1168
  struct BlockInfo 41,1350
    std::vector<std::shared_ptr<BitCodeAbbrev>> Abbrevs;43,1397
    std::string Name;44,1454
    std::vector<std::vector45,1476
    std::vector<std::pair<unsigned, std::string>> RecordNames;45,1476
  std::vector<BlockInfo> BlockInfoRecords;49,1554
  const BlockInfo *getBlockInfo(getBlockInfo54,1697
  BlockInfo &getOrCreateBlockInfo(getOrCreateBlockInfo65,2062
class SimpleBitstreamCursor 79,2547
  ArrayRef<uint8_t> BitcodeBytes;80,2577
  size_t NextChar 81,2611
  using word_t 89,2968
  word_t CurWord 92,3003
  unsigned BitsInCurWord 96,3147
  explicit SimpleBitstreamCursor(100,3223
  explicit SimpleBitstreamCursor(102,3326
  explicit SimpleBitstreamCursor(104,3444
  bool canSkipToPos(107,3567
  bool AtEndOfStream(112,3731
  uint64_t GetCurrentBitNo(117,3877
  uint64_t getCurrentByteNo(122,4018
  ArrayRef<uint8_t> getBitcodeBytes(124,4089
  Error JumpToBit(127,4211
  const uint8_t *getPointerToByte(getPointerToByte148,4827
  const uint8_t *getPointerToBit(getPointerToBit155,5068
  Error fillCurWord(160,5254
  Expected<word_t> Read(185,6146
  Expected<uint32_t> ReadVBR(228,7418
  Expected<uint64_t> ReadVBR64(263,8421
  void SkipToFourByteBoundary(295,9318
  size_t SizeInBytes(309,9701
  void skipToEnd(312,9798
  bool isSizePlausible(315,9919
struct BitstreamEntry 324,10258
    Error,326,10291
    EndBlock,327,10337
    SubBlock,329,10492
    Record 330,10563
  } Kind;331,10623
  unsigned ID;333,10634
  static BitstreamEntry getError(335,10650
  static BitstreamEntry getEndBlock(339,10740
  static BitstreamEntry getSubBlock(343,10836
  static BitstreamEntry getRecord(347,10954
class BitstreamCursor 357,11296
  unsigned CurCodeSize 360,11432
  std::vector<std::shared_ptr<BitCodeAbbrev>> CurAbbrevs;363,11503
  struct Block 365,11562
    unsigned PrevCodeSize;366,11579
    std::vector<std::shared_ptr<BitCodeAbbrev>> PrevAbbrevs;367,11606
    explicit Block(369,11668
  SmallVector<SmallVector373,11779
  SmallVector<Block, 8> BlockScope;373,11779
  BitstreamBlockInfo *BlockInfo BlockInfo375,11816
  static const size_t MaxChunkSize 378,11868
  explicit BitstreamCursor(381,11941
  explicit BitstreamCursor(383,12047
  explicit BitstreamCursor(385,12145
  using SimpleBitstreamCursor::AtEndOfStream;388,12250
  using SimpleBitstreamCursor::canSkipToPos;389,12296
  using SimpleBitstreamCursor::fillCurWord;390,12341
  using SimpleBitstreamCursor::getBitcodeBytes;391,12385
  using SimpleBitstreamCursor::GetCurrentBitNo;392,12433
  using SimpleBitstreamCursor::getCurrentByteNo;393,12481
  using SimpleBitstreamCursor::getPointerToByte;394,12530
  using SimpleBitstreamCursor::JumpToBit;395,12579
  using SimpleBitstreamCursor::Read;396,12621
  using SimpleBitstreamCursor::ReadVBR;397,12658
  using SimpleBitstreamCursor::ReadVBR64;398,12698
  using SimpleBitstreamCursor::SizeInBytes;399,12740
  using SimpleBitstreamCursor::skipToEnd;400,12784
  unsigned getAbbrevIDWidth(403,12887
    AF_DontPopBlockAtEnd 409,13146
    AF_DontAutoprocessAbbrevs 413,13269
  Expected<BitstreamEntry> advance(417,13386
  Expected<BitstreamEntry> advanceSkippingSubblocks(456,14671
  Expected<unsigned> ReadCode(473,15198
  Expected<unsigned> ReadSubBlockID(479,15427
  Error SkipBlock(483,15607
  bool ReadBlockEnd(517,16859
  void popBlockScope(529,17065
  Expected<const BitCodeAbbrev *> getAbbrev(542,17484
  void setBlockInfo(572,18791

/usr/include/llvm/Bitstream/BitstreamWriter.h,2077
#define LLVM_BITSTREAM_BITSTREAMWRITER_H15,636
class BitstreamWriter 30,998
  SmallVectorImpl<char> &Out;Out32,1073
  raw_fd_stream *FS;FS36,1260
  const uint64_t FlushThreshold;40,1371
  unsigned CurBit;43,1486
  uint32_t CurValue;46,1572
  unsigned CurCodeSize;50,1698
  unsigned BlockInfoCurBID;54,1827
  std::vector<std::shared_ptr<BitCodeAbbrev>> CurAbbrevs;57,1911
  struct Block 59,1970
    unsigned PrevCodeSize;60,1987
    size_t StartSizeWord;61,2014
    std::vector<std::shared_ptr<BitCodeAbbrev>> PrevAbbrevs;62,2040
    Block(63,2101
  std::vector<Block> BlockScope;67,2258
  struct BlockInfo 71,2451
    unsigned BlockID;72,2472
    std::vector<std::shared_ptr<BitCodeAbbrev>> Abbrevs;73,2494
  std::vector<BlockInfo> BlockInfoRecords;75,2556
  void WriteWord(77,2600
  uint64_t GetNumOfFlushedBytes(84,2846
  size_t GetBufferOffset(86,2919
  size_t GetWordIndex(88,3001
  void FlushToFile(96,3284
  BitstreamWriter(113,3829
  ~BitstreamWriter(118,4074
  uint64_t GetCurrentBitNo(124,4292
  unsigned GetAbbrevIDWidth(127,4444
  void BackpatchByte(135,4816
  void BackpatchHalfWord(194,7286
  void BackpatchWord(199,7439
  void BackpatchWord64(204,7600
  void Emit(209,7755
  void FlushToWord(228,8221
  void EmitVBR(236,8338
  void EmitVBR64(250,8738
  void EmitCode(269,9294
  BlockInfo *getBlockInfo(getBlockInfo279,9652
  void EnterSubblock(290,9999
  void ExitBlock(317,10944
  void EmitAbbreviatedLiteral(348,12041
  void EmitAbbreviatedField(359,12454
  void EmitRecordWithAbbrevImpl(386,13537
  void emitBlob(474,17016
  void emitBlob(490,17529
  void EmitRecord(498,17848
  void EmitRecordWithAbbrev(518,18580
  void EmitRecordWithBlob(528,19098
  void EmitRecordWithBlob(533,19318
  void EmitRecordWithArray(542,19737
  void EmitRecordWithArray(547,19961
  void EncodeAbbrev(559,20467
  unsigned EmitAbbrev(578,21067
  void EnterBlockInfoBlock(590,21552
  void SwitchToBlockID(598,21827
  BlockInfo &getOrCreateBlockInfo(getOrCreateBlockInfo606,22056
  unsigned EmitBlockInfoAbbrev(620,22435

/usr/include/llvm/CodeGen/GlobalISel/CSEMIRBuilder.h,324
#define LLVM_CODEGEN_GLOBALISEL_CSEMIRBUILDER_H13,597
class CSEMIRBuilder 32,1383
  bool dominates(43,2010
  void profileSrcOp(63,2878
  void profileMBBOpcode(70,3093
  using MachineIRBuilder::MachineIRBuilder;92,4135
  using MachineIRBuilder::buildConstant;98,4421
  using MachineIRBuilder::buildFConstant;104,4642

/usr/include/llvm/CodeGen/GlobalISel/GISelChangeObserver.h,1055
#define LLVM_CODEGEN_GLOBALISEL_GISELCHANGEOBSERVER_H15,606
class GISelChangeObserver 29,1162
  SmallPtrSet<MachineInstr MachineInstr30,1190
  SmallPtrSet<MachineInstr *, 4> ChangingAllUsesOfReg;30,1190
  void changingAllUsesOfReg(55,2262
  void finishedChangingAllUsesOfReg(58,2442
class GISelObserverWrapper 66,2729
  SmallVector<SmallVector68,2850
  SmallVector<GISelChangeObserver *, 4> Observers;68,2850
  GISelObserverWrapper(72,2946
  void addObserver(75,3074
  void removeObserver(78,3234
  void erasingInstr(84,3407
  void createdInstr(88,3517
  void changingInstr(92,3627
  void changedInstr(96,3739
  void MF_HandleInsertion(101,3888
  void MF_HandleRemoval(102,3963
class RAIIDelegateInstaller 108,4195
  MachineFunction &MF;MF109,4225
  MachineFunction::Delegate *Delegate;Delegate110,4248
class RAIIMFObserverInstaller 120,4563
  MachineFunction &MF;MF121,4595
class RAIIMFObsDelInstaller 129,4780
  RAIIDelegateInstaller DelI;130,4810
  RAIIMFObserverInstaller ObsI;131,4840
  RAIIMFObsDelInstaller(134,4881

/usr/include/llvm/CodeGen/GlobalISel/GISelWorkList.h,534
#define LLVM_CODEGEN_GLOBALISEL_GISELWORKLIST_H10,408
class GISelWorkList 27,941
  SmallVector<MachineInstr MachineInstr28,963
  SmallVector<MachineInstr *, N> Worklist;28,963
  DenseMap<MachineInstr MachineInstr29,1006
  DenseMap<MachineInstr *, unsigned> WorklistMap;29,1006
  GISelWorkList(36,1134
  bool empty(38,1173
  unsigned size(40,1227
  void deferred_insert(50,1849
  void finalize(61,2231
  void insert(74,2709
  void remove(83,2992
  void clear(97,3395
  MachineInstr *pop_back_val(pop_back_val102,3464

/usr/include/llvm/CodeGen/GlobalISel/InlineAsmLowering.h,353
#define LLVM_CODEGEN_GLOBALISEL_INLINEASMLOWERING_H15,601
class InlineAsmLowering 28,839
  const TargetLowering *TLI;TLI29,865
  virtual void anchor(31,895
  bool lowerInlineAsm(38,1165
  const TargetLowering *getTLI(getTLI53,1950
  template <class XXXTargetLowering> const XXXTargetLowering *getTLI(getTLI56,2061
  InlineAsmLowering(61,2209

/usr/include/llvm/CodeGen/GlobalISel/LostDebugLocObserver.h,451
#define LLVM_CODEGEN_GLOBALISEL_LOSTDEBUGLOCOBSERVER_H13,600
class LostDebugLocObserver 19,762
  StringRef DebugType;20,820
  SmallSet<DebugLoc,DebugLoc21,843
  SmallSet<DebugLoc, 4> LostDebugLocs;21,843
  SmallPtrSet<MachineInstr MachineInstr22,882
  SmallPtrSet<MachineInstr *, 4> PotentialMIsForDebugLocs;22,882
  LostDebugLocObserver(26,983
  unsigned getNumLostDebugLocs(28,1054
  void checkpoint(38,1744
  void createdInstr(40,1792

/usr/include/llvm/CodeGen/GlobalISel/MIPatternMatch.h,7826
#define LLVM_CODEGEN_GLOBALISEL_MIPATTERNMATCH_H14,575
[[nodiscard]] bool mi_match(31,1029
template <typename SubPatternT> struct OneUse_match 37,1208
  SubPatternT SubPat;38,1262
  OneUse_match(39,1284
  bool match(41,1339
inline OneUse_match<SubPat> m_OneUse(47,1492
template <typename SubPatternT> struct OneNonDBGUse_match 51,1565
  SubPatternT SubPat;52,1625
  OneNonDBGUse_match(53,1647
  bool match(55,1708
inline OneNonDBGUse_match<SubPat> m_OneNonDBGUse(61,1867
inline std::optional<APInt> matchConstant(70,2118
inline std::optional<int64_t> matchConstant(76,2305
template <typename ConstT> struct ConstantMatch 81,2488
  ConstT &CR;CR82,2538
  ConstantMatch(83,2552
  bool match(84,2590
inline ConstantMatch<APInt> m_ICst(93,2783
inline ConstantMatch<int64_t> m_ICst(96,2870
inline std::optional<APInt> matchConstantSplat(105,3140
matchConstantSplat(112,3368
template <typename ConstT> struct ICstOrSplatMatch 116,3483
  ConstT &CR;CR117,3536
  ICstOrSplatMatch(118,3550
  bool match(119,3591
inline ICstOrSplatMatch<APInt> m_ICstOrSplat(134,3908
inline ICstOrSplatMatch<int64_t> m_ICstOrSplat(138,4009
struct GCstAndRegMatch 142,4116
  std::optional<ValueAndVReg> &ValReg;ValReg143,4141
  GCstAndRegMatch(144,4180
  bool match(145,4255
inline GCstAndRegMatch m_GCst(151,4417
struct GFCstAndRegMatch 155,4523
  std::optional<FPValueAndVReg> &FPValReg;FPValReg156,4549
  GFCstAndRegMatch(157,4592
  bool match(159,4682
inline GFCstAndRegMatch m_GFCst(165,4848
struct GFCstOrSplatGFCstMatch 169,4963
  std::optional<FPValueAndVReg> &FPValReg;FPValReg170,4995
  GFCstOrSplatGFCstMatch(171,5038
  bool match(173,5134
m_GFCstOrSplat(180,5359
struct SpecificConstantMatch 185,5506
  int64_t RequestedVal;186,5537
  SpecificConstantMatch(187,5561
  bool match(188,5639
inline SpecificConstantMatch m_SpecificICst(195,5864
struct SpecificConstantSplatMatch 200,6028
  int64_t RequestedVal;201,6064
  SpecificConstantSplatMatch(202,6088
  bool match(204,6177
inline SpecificConstantSplatMatch m_SpecificICstSplat(211,6422
struct SpecificConstantOrSplatMatch 216,6613
  int64_t RequestedVal;217,6651
  SpecificConstantOrSplatMatch(218,6675
  bool match(220,6766
m_SpecificICstOrSplat(232,7204
inline SpecificConstantMatch m_ZeroInt(238,7369
inline SpecificConstantMatch m_AllOnesInt(239,7447
struct SpecificRegisterMatch 245,7574
  Register RequestedReg;246,7605
  SpecificRegisterMatch(247,7630
  bool match(248,7709
inline SpecificRegisterMatch m_SpecificReg(254,7873
struct operand_type_match 263,8194
  bool match(264,8222
  bool match(265,8298
inline operand_type_match m_Reg(270,8397
template <typename... Preds> struct And 273,8491
  bool match(275,8564
template <typename Pred,280,8652
  Pred P;282,8741
  And(283,8751
  bool match(287,8902
template <typename... Preds> struct Or 292,9037
  bool match(294,9109
template <typename Pred,299,9198
  Pred P;301,9285
  Or(302,9295
  bool match(305,9441
template <typename... Preds> And<Preds...> m_all_of(310,9575
template <typename... Preds> Or<Preds...> m_any_of(314,9706
template <typename BindTy> struct bind_helper 318,9835
  static bool bind(319,9883
template <> struct bind_helper<bind_helper325,9996
  static bool bind(326,10045
  static bool bind(333,10233
template <> struct bind_helper<bind_helper340,10382
  static bool bind(341,10420
template <> struct bind_helper<bind_helper349,10589
  static bool bind(350,10642
template <typename Class> struct bind_ty 359,10846
  Class &VR;VR360,10889
  bind_ty(362,10903
  template <typename ITy> bool match(364,10935
inline bind_ty<Register> m_Reg(369,11072
inline bind_ty<MachineInstr *> m_MInstr(370,11130
inline bind_ty<LLT> m_Type(371,11204
inline bind_ty<CmpInst::Predicate> m_Pred(372,11254
inline operand_type_match m_Pred(373,11333
struct ImplicitDefMatch 375,11402
  bool match(376,11428
inline ImplicitDefMatch m_GImplicitDef(384,11650
inline bind_ty<const ConstantFP *> m_GFCst(387,11758
template <typename LHS_P,390,11910
template <typename LHS_P, typename RHS_P,390,11910
template <typename LHS_P, typename RHS_P, unsigned Opcode,390,11910
          bool Commutable 391,11969
template <typename LHS_P,413,12743
template <typename LHS_P, typename RHS_P,413,12743
template <typename LHS_P, typename RHS_P, bool Commutable 413,12743
template <typename LHS,437,13572
inline BinaryOpc_match<LHS, RHS, false> m_BinOp(438,13610
template <typename LHS,443,13813
m_CommutativeBinOp(445,13890
template <typename LHS,449,14015
m_GAdd(451,14112
template <typename LHS,455,14220
m_GBuildVector(457,14327
template <typename LHS,461,14453
m_GBuildVectorTrunc(463,14566
template <typename LHS,468,14780
m_GPtrAdd(470,14882
template <typename LHS,474,14998
inline BinaryOp_match<LHS, RHS, TargetOpcode::G_SUB> m_GSub(475,15036
template <typename LHS,480,15251
m_GMul(482,15348
template <typename LHS,486,15456
m_GFAdd(488,15554
template <typename LHS,492,15664
m_GFMul(494,15762
template <typename LHS,498,15872
m_GFSub(500,15971
template <typename LHS,504,16082
m_GAnd(506,16179
template <typename LHS,510,16287
m_GXor(512,16384
template <typename LHS,516,16492
inline BinaryOp_match<LHS, RHS, TargetOpcode::G_OR, true> m_GOr(517,16530
template <typename LHS,522,16758
m_GShl(524,16856
template <typename LHS,528,16965
m_GLShr(530,17064
template <typename LHS,534,17175
m_GAShr(536,17274
template <typename LHS,540,17385
m_GSMax(542,17484
template <typename LHS,546,17595
m_GSMin(548,17694
template <typename SrcTy,553,17863
template <typename SrcTy, unsigned Opcode> struct UnaryOp_match 553,17863
  SrcTy L;554,17929
  UnaryOp_match(556,17941
  bool match(558,18014
m_GAnyExt(571,18395
inline UnaryOp_match<SrcTy, TargetOpcode::G_SEXT> m_GSExt(576,18514
inline UnaryOp_match<SrcTy, TargetOpcode::G_ZEXT> m_GZExt(581,18679
inline UnaryOp_match<SrcTy, TargetOpcode::G_FPEXT> m_GFPExt(586,18844
inline UnaryOp_match<SrcTy, TargetOpcode::G_TRUNC> m_GTrunc(591,19012
m_GBitcast(597,19233
m_GPtrToInt(603,19408
m_GIntToPtr(609,19585
m_GFPTrunc(615,19761
inline UnaryOp_match<SrcTy, TargetOpcode::G_FABS> m_GFabs(620,19882
inline UnaryOp_match<SrcTy, TargetOpcode::G_FNEG> m_GFNeg(625,20047
inline UnaryOp_match<SrcTy, TargetOpcode::COPY> m_Copy(630,20212
inline UnaryOp_match<SrcTy, TargetOpcode::G_FSQRT> m_GFSqrt(635,20388
template <typename Pred_P,641,20642
template <typename Pred_P, typename LHS_P,641,20642
template <typename Pred_P, typename LHS_P, typename RHS_P,641,20642
template <typename Pred_P, typename LHS_P, typename RHS_P, unsigned Opcode,641,20642
          bool Commutable 642,20718
template <typename Pred,672,21617
template <typename Pred, typename LHS,672,21617
m_GICmp(674,21731
template <typename Pred,678,21860
template <typename Pred, typename LHS,678,21860
m_GFCmp(680,21974
template <typename Pred,693,22328
template <typename Pred, typename LHS,693,22328
m_c_GICmp(695,22448
template <typename Pred,708,22815
template <typename Pred, typename LHS,708,22815
m_c_GFCmp(710,22935
struct CheckType 715,23125
  LLT Ty;716,23144
  CheckType(717,23154
  bool match(719,23193
inline CheckType m_SpecificType(724,23297
template <typename Src0Ty,726,23353
template <typename Src0Ty, typename Src1Ty,726,23353
template <typename Src0Ty, typename Src1Ty, typename Src2Ty,726,23353
struct TernaryOp_match 727,23431
  Src0Ty Src0;728,23456
  Src1Ty Src1;729,23471
  Src2Ty Src2;730,23486
  TernaryOp_match(732,23502
  bool match(735,23653
template <typename Src0Ty,747,24092
template <typename Src0Ty, typename Src1Ty,747,24092
m_GInsertVecElt(750,24258
template <typename Src0Ty,755,24467
template <typename Src0Ty, typename Src1Ty,755,24467
m_GISelect(757,24599
m_Neg(766,24942
m_Not(774,25177

/usr/include/llvm/CodeGen/GlobalISel/CSEInfo.h,1463
#define LLVM_CODEGEN_GLOBALISEL_CSEINFO_H13,567
class UniqueMachineInstr 29,1164
  const MachineInstr *MI;MI31,1244
  explicit UniqueMachineInstr(32,1270
  void Profile(35,1345
class CSEConfigFull 39,1431
class CSEConfigConstantOnly 46,1602
class GISelCSEInfo 69,2822
  BumpPtrAllocator UniqueInstrAllocator;73,2950
  FoldingSet<UniqueMachineInstr> CSEMap;74,2991
  MachineRegisterInfo *MRI MRI75,3032
  MachineFunction *MF MF76,3070
  std::unique_ptr<CSEConfigBase> CSEOpt;77,3103
  DenseMap<DenseMap82,3384
  DenseMap<const MachineInstr *, UniqueMachineInstr *> InstrMapping;82,3384
  GISelWorkList<8> TemporaryInsts;87,3669
  DenseMap<DenseMap90,3732
  DenseMap<unsigned, unsigned> OpcodeHitTable;90,3732
  bool HandlingRecordedInstrs 114,4785
  void setCSEConfig(146,5855
class GISelInstProfileBuilder 169,6406
  FoldingSetNodeID &ID;ID170,6438
  const MachineRegisterInfo &MRI;MRI171,6462
  GISelInstProfileBuilder(174,6505
class GISelCSEAnalysisWrapper 204,7834
  GISelCSEInfo Info;205,7866
  MachineFunction *MF MF206,7887
  bool AlreadyComputed 207,7920
  void setMF(216,8301
  void setComputed(217,8355
  void releaseMemory(218,8421
class GISelCSEAnalysisWrapperPass 222,8512
  GISelCSEAnalysisWrapper Wrapper;223,8577
  static char ID;226,8621
  const GISelCSEAnalysisWrapper &getCSEWrapper(getCSEWrapper231,8733
  GISelCSEAnalysisWrapper &getCSEWrapper(getCSEWrapper232,8808
  void releaseMemory(236,8932

/usr/include/llvm/CodeGen/GlobalISel/CallLowering.h,2438
#define LLVM_CODEGEN_GLOBALISEL_CALLLOWERING_H15,587
class CallLowering 44,1319
  const TargetLowering *TLI;TLI45,1340
  virtual void anchor(47,1370
  struct BaseArgInfo 49,1403
    Type *Ty;Ty50,1426
    SmallVector<ISD::ArgFlagsTy,ISD::ArgFlagsTy51,1440
    SmallVector<ISD::ArgFlagsTy, 4> Flags;51,1440
    bool IsFixed;52,1483
    BaseArgInfo(54,1502
    BaseArgInfo(59,1718
  struct ArgInfo 62,1775
    SmallVector<SmallVector63,1815
    SmallVector<Register, 4> Regs;63,1815
    SmallVector<SmallVector67,2042
    SmallVector<Register, 2> OrigRegs;67,2042
    unsigned OrigArgIndex;76,2425
    ArgInfo(81,2570
    ArgInfo(94,3239
  struct CallLoweringInfo 102,3545
    ArgInfo OrigRet;111,3895
    SmallVector<SmallVector114,3986
    SmallVector<ArgInfo, 32> OrigArgs;114,3986
    Register SwiftErrorVReg;118,4174
    Register DemoteRegister;143,4985
    int DemoteStackIndex;146,5058
  struct ValueAssigner 164,5803
    ValueAssigner(165,5828
    bool isIncomingArgumentHandler(180,6416
    virtual bool assignArg(188,6744
    CCAssignFn *AssignFn;AssignFn199,7235
    CCAssignFn *AssignFnVarArg;AssignFnVarArg203,7380
    CCAssignFn *getAssignFn(getAssignFn210,7613
    const bool IsIncomingArgumentHandler;215,7733
  struct IncomingValueAssigner 219,7808
    IncomingValueAssigner(220,7864
  struct OutgoingValueAssigner 225,8045
    OutgoingValueAssigner(226,8101
  struct ValueHandler 231,8283
    MachineIRBuilder &MIRBuilder;MIRBuilder232,8307
    MachineRegisterInfo &MRI;MRI233,8341
    const bool IsIncomingArgumentHandler;234,8371
    ValueHandler(236,8414
    bool isIncomingArgumentHandler(245,8803
    virtual void assignValueToAddress(283,10726
    virtual unsigned assignCustomValue(297,11509
  struct IncomingValueHandler 320,12715
    IncomingValueHandler(321,12769
  struct OutgoingValueHandler 336,13480
    OutgoingValueHandler(337,13534
  const TargetLowering *getTLI(getTLI343,13744
    const XXXTargetLowering *getTLI(getTLI349,13898
  CallLowering(440,18450
  virtual bool supportSwiftError(446,18753
  virtual bool canLowerReturn(495,21217
  virtual bool lowerReturn(511,21864
  virtual bool lowerReturn(523,22405
  virtual bool fallBackToDAGISel(529,22618
  virtual bool lowerFormalArguments(543,23343
  virtual bool lowerCall(555,23833
  virtual bool enableBigEndian(591,25514
  virtual bool isTypeIsValidForThisReturn(595,25716

/usr/include/llvm/CodeGen/GlobalISel/Combiner.h,600
#define LLVM_CODEGEN_GLOBALISEL_COMBINER_H16,740
class Combiner 34,1294
  GISelWorkList<512> WorkList;37,1378
  std::unique_ptr<MachineIRBuilder> Builder;45,1793
  std::unique_ptr<WorkListMaintainer> WLObserver;46,1838
  std::unique_ptr<GISelObserverWrapper> ObserverWrapper;47,1888
  CombinerInfo &CInfo;CInfo64,2420
  GISelChangeObserver &Observer;Observer65,2443
  MachineIRBuilder &B;B66,2476
  MachineFunction &MF;MF67,2499
  MachineRegisterInfo &MRI;MRI68,2522
  GISelKnownBits *KB;KB69,2550
  const TargetPassConfig *TPC;TPC71,2573
  GISelCSEInfo *CSEInfo;CSEInfo72,2604

/usr/include/llvm/CodeGen/GlobalISel/CombinerHelper.h,1839
#define LLVM_CODEGEN_GLOBALISEL_COMBINERHELPER_H18,850
struct PreferredTuple 49,1566
  LLT Ty;50,1590
  unsigned ExtendOpcode;51,1649
  MachineInstr *MI;MI52,1700
struct IndexedLoadStoreMatchInfo 55,1724
  Register Addr;56,1759
  Register Base;57,1776
  Register Offset;58,1793
  bool RematOffset;59,1812
  bool IsPre;61,1946
struct PtrAddChain 64,1964
  int64_t Imm;65,1985
  Register Base;66,2000
  const RegisterBank *Bank;Bank67,2017
struct RegisterImmPair 70,2049
  Register Reg;71,2074
  int64_t Imm;72,2090
struct ShiftOfShiftedLogic 75,2109
  MachineInstr *Logic;Logic76,2138
  MachineInstr *Shift2;Shift277,2161
  Register LogicNonShiftReg;78,2185
  uint64_t ValSum;79,2214
using BuildFnTy 82,2237
using OperandBuildSteps 84,2297
struct InstructionBuildSteps 86,2387
  unsigned Opcode 87,2418
  OperandBuildSteps OperandFns;88,2495
  InstructionBuildSteps(90,2609
struct InstructionStepsMatchInfo 94,2741
  SmallVector<SmallVector96,2835
  SmallVector<InstructionBuildSteps, 2> InstrsToBuild;96,2835
  InstructionStepsMatchInfo(98,2931
class CombinerHelper 103,3070
  MachineIRBuilder &Builder;Builder105,3104
  MachineRegisterInfo &MRI;MRI106,3133
  GISelChangeObserver &Observer;Observer107,3161
  GISelKnownBits *KB;KB108,3194
  MachineDominatorTree *MDT;MDT109,3216
  bool IsPreLegalize;110,3245
  const LegalizerInfo *LI;LI111,3267
  const RegisterBankInfo *RBI;RBI112,3294
  const TargetRegisterInfo *TRI;TRI113,3325
  GISelKnownBits *getKnownBits(getKnownBits122,3628
  MachineIRBuilder &getBuilder(getBuilder126,3689
  std::optional<std::optional840,35099
  std::optional<std::optional854,35702
  enum class SelectPatternNaNBehaviour 867,36336
    NOT_APPLICABLE 868,36377
    RETURNS_NAN,869,36434
    RETURNS_OTHER,870,36500
    RETURNS_ANY 871,36570

/usr/include/llvm/CodeGen/GlobalISel/CombinerInfo.h,304
#define LLVM_CODEGEN_GLOBALISEL_COMBINERINFO_H15,587
struct CombinerInfo 24,781
  CombinerInfo(25,803
  bool IllegalOpsAllowed;37,1484
  bool LegalizeIllegalOps;41,1650
  const LegalizerInfo *LInfo;LInfo42,1704
  bool EnableOpt;47,1916
  bool EnableOptSize;49,1975
  bool EnableMinSize;51,2047

/usr/include/llvm/CodeGen/GlobalISel/GIMatchTableExecutor.h,4708
#define LLVM_CODEGEN_GLOBALISEL_GIMATCHTABLEEXECUTOR_H16,731
  GICXXPred_Invalid 53,1572
  GICXXCustomAction_Invalid 54,1597
  GIM_Try,88,3104
  GIM_SwitchOpcode,96,3460
  GIM_SwitchType,105,3871
  GIM_RecordInsn,112,4122
  GIM_RecordInsnIgnoreCopies,113,4140
  GIM_CheckFeatures,117,4239
  GIM_CheckOpcode,122,4387
  GIM_CheckOpcodeIsEither,129,4621
  GIM_CheckNumOperands,134,4802
  GIM_CheckI64ImmPredicate,139,4972
  GIM_CheckAPIntImmPredicate,143,5159
  GIM_CheckAPFloatImmPredicate,147,5349
  GIM_CheckImmOperandPredicate,152,5565
  GIM_CheckAtomicOrdering,157,5758
  GIM_CheckAtomicOrderingOrStrongerThan,158,5785
  GIM_CheckAtomicOrderingWeakerThan,159,5826
  GIM_CheckMemorySizeEqualTo,165,6078
  GIM_CheckMemoryAddressSpace,174,6437
  GIM_CheckMemoryAlignment,181,6702
  GIM_CheckMemorySizeEqualToLLT,188,6995
  GIM_CheckMemorySizeLessThanLLT,189,7028
  GIM_CheckMemorySizeGreaterThanLLT,190,7062
  GIM_CheckIsBuildVectorAllOnes,197,7366
  GIM_CheckIsBuildVectorAllZeros,198,7399
  GIM_CheckSimplePredicate,204,7636
  GIM_CheckCxxInsnPredicate,209,7820
  GIM_CheckHasNoUse,213,7942
  GIM_CheckType,219,8121
  GIM_CheckPointerToAny,225,8344
  GIM_CheckRegBankForClass,231,8577
  GIM_CheckComplexPattern,238,8833
  GIM_CheckConstantInt,244,9019
  GIM_CheckConstantInt8,250,9215
  GIM_CheckLiteralInt,257,9457
  GIM_CheckIntrinsicID,263,9651
  GIM_CheckCmpPredicate,269,9841
  GIM_CheckIsMBB,274,9991
  GIM_CheckIsImm,279,10134
  GIM_CheckIsSafeToFold,284,10283
  GIM_CheckIsSameOperand,293,10641
  GIM_CheckIsSameOperandIgnoreCopies,294,10667
  GIM_CheckCanReplaceReg,301,10876
  GIM_MIFlags,307,11087
  GIM_MIFlagsNot,308,11102
  GIM_RecordNamedOperand,317,11581
  GIM_RecordRegType,323,11821
  GIM_Reject,327,11945
  GIR_MutateOpcode,335,12164
  GIR_BuildMI,340,12308
  GIR_BuildConstant,345,12476
  GIR_Copy,351,12705
  GIR_CopyOrAddZeroReg,359,13036
  GIR_CopySubReg,365,13314
  GIR_AddImplicitDef,371,13522
  GIR_AddImplicitUse,375,13699
  GIR_AddRegister,380,13897
  GIR_SetImplicitDefDead,387,14134
  GIR_SetMIFlags,393,14324
  GIR_UnsetMIFlags,394,14342
  GIR_CopyMIFlags,401,14603
  GIR_AddTempRegister,407,14848
  GIR_AddSimpleTempRegister,413,15078
  GIR_AddTempSubRegister,420,15387
  GIR_AddImm,425,15555
  GIR_AddImm8,430,15721
  GIR_AddCImm,436,15921
  GIR_ComplexRenderer,441,16092
  GIR_ComplexSubOperandRenderer,446,16342
  GIR_ComplexSubOperandSubRegRenderer,453,16672
  GIR_CustomRenderer,459,16973
  GIR_CustomAction,470,17412
  GIR_CustomOperandRenderer,480,17837
  GIR_CopyConstantAsSImm,486,18084
  GIR_CopyFConstantAsFPImm,492,18329
  GIR_ConstrainOperandRC,498,18561
  GIR_ConstrainSelectedInstOperands,503,18728
  GIR_MergeMemOperands,510,19033
  GIR_EraseFromParent,514,19133
  GIR_MakeTempReg,519,19319
  GIR_ReplaceReg,527,19563
  GIR_ReplaceRegWithTempReg,533,19734
  GIR_Done,536,19792
  GIR_Coverage,540,19905
  GIU_NumOpcodes,543,19999
class GIMatchTableExecutor 549,20206
  CodeGenCoverage *CoverageInfo CoverageInfo553,20289
  GISelKnownBits *KB KB554,20332
  MachineFunction *MF MF555,20364
  ProfileSummaryInfo *PSI PSI556,20397
  BlockFrequencyInfo *BFI BFI557,20434
  MachineBasicBlock *CurMBB CurMBB559,20531
  virtual void setupMF(564,20679
  using ComplexRendererFns 578,21083
  using RecordedMIVector 580,21193
  using NewMIVector 581,21252
  struct MatcherState 583,21312
    std::vector<ComplexRendererFns::value_type> Renderers;584,21336
    RecordedMIVector MIs;585,21395
    DenseMap<DenseMap586,21421
    DenseMap<unsigned, unsigned> TempRegisters;586,21421
    std::array<std::array591,21780
    std::array<const MachineOperand *, 3> RecordedOperands;591,21780
    SmallVector<SmallVector595,21961
    SmallVector<LLT, 4> RecordedTypes;595,21961
  bool shouldOptForSize(600,22048
public:public606,22278
  struct ExecInfoTy 609,22384
    ExecInfoTy(610,22406
    const LLT *TypeObjects;TypeObjects621,22896
    const PredicateBitset *FeatureBitsets;FeatureBitsets622,22924
    const ComplexMatcherMemFn *ComplexPredicates;ComplexPredicates623,22967
    const CustomRendererFn *CustomRenderers;CustomRenderers624,23017
    SmallDenseMap<SmallDenseMap626,23063
    SmallDenseMap<LLT, unsigned, 64> TypeIDMap;626,23063
  virtual const uint8_t *getMatchTable(getMatchTable646,23994
  virtual bool testImmPredicate_I64(650,24121
  virtual bool testImmPredicate_APInt(654,24284
  virtual bool testImmPredicate_APFloat(658,24455
  virtual bool testMIPredicate_MI(662,24630
  virtual bool testSimplePredicate(668,24866
  virtual void runCustomAction(672,24998
  template <typename Ty> static Ty readBytesAs(692,25982

/usr/include/llvm/CodeGen/GlobalISel/GIMatchTableExecutorImpl.h,206
#define LLVM_CODEGEN_GLOBALISEL_GIMATCHTABLEEXECUTORIMPL_H16,684
  enum RejectAction 66,2567
  enum RejectAction { RejectAndGiveUp,66,2567
  enum RejectAction { RejectAndGiveUp, RejectAndResume 66,2567

/usr/include/llvm/CodeGen/GlobalISel/GISelKnownBits.h,1428
#define LLVM_CODEGEN_GLOBALISEL_GISELKNOWNBITS_H15,600
class GISelKnownBits 29,950
  MachineFunction &MF;MF30,1002
  MachineRegisterInfo &MRI;MRI31,1025
  const TargetLowering &TL;TL32,1053
  const DataLayout &DL;DL33,1081
  unsigned MaxDepth;34,1105
  SmallDenseMap<Register,Register36,1184
  SmallDenseMap<Register, KnownBits,36,1184
  SmallDenseMap<Register, KnownBits, 16> ComputeKnownBitsCache;36,1184
  void computeKnownBitsMin(38,1249
  unsigned computeNumSignBitsMin(42,1427
  GISelKnownBits(46,1580
  const MachineFunction &getMachineFunction(getMachineFunction49,1682
  const DataLayout &getDataLayout(getDataLayout53,1756
  virtual void computeKnownBitsImpl(57,1820
  unsigned computeNumSignBits(61,2007
  unsigned computeNumSignBits(63,2127
  KnownBits getKnownBits(66,2209
  KnownBits getKnownBits(67,2247
  KnownBits getKnownBits(71,2411
  APInt getKnownZeroes(72,2455
  APInt getKnownOnes(73,2491
  bool maskedValueIsZero(78,2719
  bool signBitIsZero(84,2962
  static void computeKnownBitsForAlignment(86,2998
  Align computeKnownAlignment(93,3299
  void erasingInstr(96,3420
  void createdInstr(97,3470
  void changingInstr(98,3520
  void changedInstr(99,3571
  unsigned getMaxDepth(102,3633
class GISelKnownBitsAnalysis 113,4071
  std::unique_ptr<GISelKnownBits> Info;114,4131
  static char ID;117,4180
  GISelKnownBitsAnalysis(118,4198
  void releaseMemory(124,4495

/usr/include/llvm/CodeGen/GlobalISel/GenericMachineInstrs.h,3582
#define LLVM_CODEGEN_GLOBALISEL_GENERICMACHINEINSTRS_H15,637
class GenericMachineInstr 26,950
  Register getReg(32,1167
  static bool classof(34,1243
class GMemOperation 40,1401
  MachineMemOperand &getMMO(getMMO43,1513
  bool isAtomic(46,1663
  bool isVolatile(48,1797
  bool isSimple(50,1931
  bool isUnordered(54,2186
  uint64_t getMemSize(57,2303
  uint64_t getMemSizeInBits(59,2417
  static bool classof(61,2491
class GLoadStore 68,2713
  Register getPointerReg(71,2815
  static bool classof(73,2884
class GIndexedLoad 89,3347
  Register getDstReg(92,3454
  Register getWritebackReg(94,3569
  Register getBaseReg(96,3689
  Register getOffsetReg(98,3806
  bool isPre(100,3874
  bool isPost(101,3935
  static bool classof(103,3979
class GIndexedExtLoad 109,4149
  static bool classof(111,4203
class GIndexedAnyExtLoad 118,4469
  static bool classof(120,4526
class GIndexedZExtLoad 133,4825
  static bool classof(135,4876
class GIndexedSExtLoad 141,5025
  static bool classof(143,5076
class GIndexedStore 149,5227
  Register getWritebackReg(152,5331
  Register getValueReg(154,5438
  Register getBaseReg(156,5554
  Register getOffsetReg(158,5671
  bool isPre(160,5739
  bool isPost(161,5800
  static bool classof(163,5844
class GAnyLoad 169,6034
  Register getDstReg(172,6134
  static bool classof(174,6199
class GLoad 187,6470
  static bool classof(189,6510
class GExtLoad 195,6668
  static bool classof(197,6711
class GSExtLoad 204,6910
  static bool classof(206,6954
class GZExtLoad 212,7095
  static bool classof(214,7139
class GStore 220,7277
  Register getValueReg(223,7357
  static bool classof(225,7424
class GUnmerge 231,7568
  unsigned getNumDefs(234,7665
  Register getSourceReg(236,7767
  static bool classof(238,7846
class GMergeLikeInstr 246,8126
  unsigned getNumSources(249,8233
  Register getSourceReg(251,8339
  static bool classof(253,8408
class GMerge 266,8705
  static bool classof(268,8753
class GConcatVectors 274,8904
  static bool classof(276,8960
class GBuildVector 282,9111
  static bool classof(284,9165
class GPtrAdd 290,9309
  Register getBaseReg(292,9362
  Register getOffsetReg(293,9414
  static bool classof(295,9469
class GImplicitDef 301,9613
  static bool classof(303,9671
class GSelect 309,9814
  Register getCondReg(311,9867
  Register getTrueReg(312,9919
  Register getFalseReg(313,9971
  static bool classof(315,10025
class GAnyCmp 321,10169
  CmpInst::Predicate getCond(323,10222
  Register getLHSReg(326,10339
  Register getRHSReg(327,10390
  static bool classof(329,10442
class GICmp 336,10628
  static bool classof(338,10667
class GFCmp 344,10799
  static bool classof(346,10838
class GBinOpCarryOut 356,11136
  Register getDstReg(358,11196
  Register getCarryOutReg(359,11247
  MachineOperand &getLHS(getLHS360,11303
  MachineOperand &getRHS(getRHS361,11356
  static bool classof(363,11410
class GAddSubCarryOut 387,12048
  bool isAdd(389,12104
  bool isSub(400,12344
  bool isSigned(402,12387
  bool isUnsigned(413,12630
  static bool classof(415,12681
class GAddSubCarryInOut 434,13197
  Register getCarryInReg(436,13256
  static bool classof(438,13312
class GIntrinsic final : public GenericMachineInstr 452,13624
class GVecReduce 494,14730
  static bool classof(496,14786
  unsigned getScalarOpcForReduction(521,15676
class GPhi 577,17307
  unsigned getNumIncomingValues(580,17402
  Register getIncomingValue(582,17519
  MachineBasicBlock *getIncomingBlock(getIncomingBlock586,17659
  static bool classof(590,17765

/usr/include/llvm/CodeGen/GlobalISel/IRTranslator.h,3453
#define LLVM_CODEGEN_GLOBALISEL_IRTRANSLATOR_H19,850
class IRTranslator 66,2341
  static char ID;68,2399
  class ValueToVRegInfo 75,2607
        DenseMap<const Value *, VRegListT *>::const_iterator;const_iterator83,2808
        DenseMap<const Value *, OffsetListT *>::const_iterator;const_iterator85,2904
    inline const_vreg_iterator vregs_end(87,2969
    VRegListT *getVRegs(getVRegs89,3048
    OffsetListT *getOffsets(getOffsets97,3225
    const_vreg_iterator findVRegs(105,3423
    bool contains(109,3522
    void reset(111,3599
    VRegListT *insertVRegs(insertVRegs119,3753
    OffsetListT *insertOffsets(insertOffsets129,4121
    SpecificBumpPtrAllocator<VRegListT> VRegAlloc;136,4395
    SpecificBumpPtrAllocator<OffsetListT> OffsetAlloc;137,4446
    DenseMap<const Value 141,4640
    DenseMap<const Value *, VRegListT*> ValToVRegs;141,4640
    DenseMap<const Type 142,4692
    DenseMap<const Type *, OffsetListT*> TypeToOffsets;142,4692
  ValueToVRegInfo VMap;147,4866
  DenseMap<const BasicBlock 152,5061
  DenseMap<const BasicBlock *, MachineBasicBlock *> BBToMBB;152,5061
  DenseMap<DenseMap160,5568
  DenseMap<CFGEdge, SmallVector<MachineBasicBlock *, 1>> MachinePreds;160,5568
  SmallVector<SmallVector164,5775
      PendingPHIs;165,5852
  DenseMap<DenseMap169,5970
  DenseMap<const AllocaInst *, int> FrameIndices;169,5970
  SwiftErrorValueTracking SwiftError;171,6021
  bool translateICmp(324,13120
  bool translateFCmp(329,13305
  bool translateAdd(445,18822
  bool translateSub(448,18959
  bool translateAnd(451,19096
  bool translateMul(454,19233
  bool translateOr(457,19370
  bool translateXor(460,19505
  bool translateUDiv(464,19643
  bool translateSDiv(467,19782
  bool translateURem(470,19921
  bool translateSRem(473,20060
  bool translateIntToPtr(476,20199
  bool translatePtrToInt(479,20342
  bool translateTrunc(482,20485
  bool translateFPTrunc(485,20622
  bool translateFPExt(488,20763
  bool translateFPToUI(491,20900
  bool translateFPToSI(494,21039
  bool translateUIToFP(497,21178
  bool translateSIToFP(500,21317
  bool translateSExt(505,21531
  bool translateZExt(509,21667
  bool translateShl(513,21803
  bool translateLShr(516,21940
  bool translateAShr(519,22079
  bool translateFAdd(523,22219
  bool translateFSub(526,22358
  bool translateFMul(529,22497
  bool translateFDiv(532,22636
  bool translateFRem(535,22775
  bool translateResume(554,23593
  bool translateCleanupRet(557,23685
  bool translateCatchRet(560,23781
  bool translateCatchSwitch(563,23875
  bool translateAddrSpaceCast(566,23972
  bool translateCleanupPad(569,24126
  bool translateCatchPad(572,24222
  bool translateUserOp1(575,24316
  bool translateUserOp2(578,24409
  std::unique_ptr<MachineIRBuilder> CurBuilder;589,24788
  std::unique_ptr<MachineIRBuilder> EntryBuilder;594,24996
  CodeGenOptLevel OptLevel;607,25384
  std::unique_ptr<OptimizationRemarkEmitter> ORE;610,25481
  FunctionLoweringInfo FuncInfo;615,25638
  StackProtectorDescriptor SPDescriptor;625,25967
  class GISelSwitchLowering 628,26049
    GISelSwitchLowering(630,26123
    void addSuccessorWithProb(635,26289
    IRTranslator *IRT;IRT644,26567
  std::unique_ptr<GISelSwitchLowering> SL;647,26596
  Register getOrCreateVReg(690,28453
  SmallVector<SmallVector727,30193
  SmallVector<MachineBasicBlock *, 1> getMachinePredBBs(727,30193
  StringRef getPassName(746,30930

/usr/include/llvm/CodeGen/GlobalISel/InstructionSelect.h,238
#define LLVM_CODEGEN_GLOBALISEL_INSTRUCTIONSELECT_H14,681
class InstructionSelect 33,1305
  static char ID;35,1368
  StringRef getPassName(36,1386
  void getAnalysisUsage(38,1460
  MachineFunctionProperties getSetProperties(47,1819

/usr/include/llvm/CodeGen/GlobalISel/InstructionSelector.h,203
#define LLVM_CODEGEN_GLOBALISEL_INSTRUCTIONSELECTOR_H14,578
class InstructionSelector 19,709
  virtual ~InstructionSelector(21,775
  void setTargetPassConfig(35,1297
  void setRemarkEmitter(37,1365

/usr/include/llvm/CodeGen/GlobalISel/LegacyLegalizerInfo.h,2748
#define LLVM_CODEGEN_GLOBALISEL_LEGACYLEGALIZERINFO_H16,759
enum LegacyLegalizeAction 28,1042
  Legal,31,1200
  NarrowScalar,36,1411
  WidenScalar,41,1613
  FewerElements,46,1834
  MoreElements,52,2109
  Bitcast,55,2199
  Lower,59,2355
  Libcall,64,2570
  Custom,68,2723
  Unsupported,72,2836
  NotFound,75,2926
                        LegacyLegalizeActions::LegacyLegalizeAction Action)79,3023
struct InstrAspect 84,3315
  unsigned Opcode;85,3336
  unsigned Idx 86,3355
  LLT Type;87,3375
  InstrAspect(89,3388
  InstrAspect(90,3461
  bool operator==(operator==93,3565
struct LegacyLegalizeActionStep 101,3863
  LegacyLegalizeActions::LegacyLegalizeAction Action;103,3943
  unsigned TypeIdx;105,4070
  LLT NewType;107,4164
  LegacyLegalizeActionStep(109,4180
  bool operator==(operator==113,4386
class LegacyLegalizerInfo 120,4563
  using SizeAndAction 122,4599
  using SizeAndActionsVec 124,4695
  using SizeChangeStrategy 125,4751
  static bool needsLegalizingToDifferentSize(130,4875
  void setAction(154,5681
  void setLegalizeScalarToDifferentSizeStrategy(180,7056
  void setLegalizeVectorElementToDifferentSizeStrategy(191,7646
  unsupportedForDifferentSizes(210,8682
  widenToLargerTypesAndNarrowToLargest(221,9213
  widenToLargerTypesUnsupportedOtherwise(231,9636
  narrowToSmallerAndUnsupportedIfTooSmall(238,9918
  moreToWiderTypesAndLessToWidest(263,11192
  std::pair<std::pair291,12511
  void setScalarAction(311,13573
  void setPointerAction(317,13891
  void setScalarInVectorAction(334,14872
  void setVectorNumElementAction(345,15377
  static void checkPartialSizeAndActionsVector(360,16141
  static void checkFullSizeAndActionsVector(408,17804
  void setActions(419,18184
  std::pair<std::pair442,19220
  std::pair<std::pair446,19414
  static const int FirstOp 449,19535
  static const int LastOp 450,19609
  using TypeMap 453,19757
  SmallVector<SmallVector454,19835
  SmallVector<TypeMap, 1> SpecifiedActions[SpecifiedActions454,19835
  SmallVector<SmallVector455,19901
      ScalarSizeChangeStrategies[ScalarSizeChangeStrategies456,19938
  SmallVector<SmallVector457,19994
      VectorElementSizeChangeStrategies[VectorElementSizeChangeStrategies458,20031
  bool TablesInitialized 459,20094
  SmallVector<SmallVector462,20169
  SmallVector<SizeAndActionsVec, 1> ScalarActions[ScalarActions462,20169
  SmallVector<SmallVector463,20242
  SmallVector<SizeAndActionsVec, 1> ScalarInVectorActions[ScalarInVectorActions463,20242
  std::unordered_map<std::unordered_map464,20323
      AddrSpace2PointerActions[AddrSpace2PointerActions465,20389
  std::unordered_map<std::unordered_map466,20443
      NumElements2Actions[NumElements2Actions467,20509

/usr/include/llvm/CodeGen/GlobalISel/LegalizationArtifactCombiner.h,1854
#define LLVM_CODEGEN_GLOBALISEL_LEGALIZATIONARTIFACTCOMBINER_H15,786
#define DEBUG_TYPE 31,1434
class LegalizationArtifactCombiner 34,1483
  MachineIRBuilder &Builder;Builder35,1520
  MachineRegisterInfo &MRI;MRI36,1549
  const LegalizerInfo &LI;LI37,1577
  GISelKnownBits *KB;KB38,1604
  static bool isArtifactCast(40,1627
  LegalizationArtifactCombiner(53,1889
  bool tryCombineAnyExt(58,2133
  bool tryCombineZExt(112,4321
  bool tryCombineSExt(187,7609
  bool tryCombineTrunc(244,9897
  bool tryFoldImplicitDef(363,14521
  bool tryFoldUnmergeCast(399,15996
  static bool canFoldMergeOpcode(493,19439
  static void replaceRegOrBuildCopy(547,21498
  static unsigned getDefIndex(572,22524
  class ArtifactValueFinder 587,23023
    MachineRegisterInfo &MRI;MRI588,23053
    MachineIRBuilder &MIB;MIB589,23083
    const LegalizerInfo &LI;LI590,23110
    Register findValueFromConcat(600,23532
    Register findValueFromBuildVector(632,24894
    Register findValueFromInsert(686,27206
    Register findValueFromExt(759,30030
    Register findValueFromTrunc(787,31080
    Register findValueFromDefImpl(805,31731
    ArtifactValueFinder(854,33773
    Register findValueFromDef(862,34197
    bool tryCombineUnmergeDefs(872,34682
    GUnmerge *findUnmergeThatDefinesReg(findUnmergeThatDefinesReg901,35744
    bool isSequenceFromUnmerge(915,36382
    bool tryCombineMergeLike(937,37416
  bool tryCombineUnmergeValues(1037,41790
  bool tryCombineExtract(1234,48890
  bool tryCombineInstruction(1287,50892
  static Register getArtifactSrcReg(1390,55341
  void markDefDead(1414,56244
  void markInstAndDefDead(1472,58206
  void deleteMarkedDeadInsts(1485,58940
  bool isInstUnsupported(1497,59415
  bool isInstLegal(1503,59621
  bool isConstantUnsupported(1507,59746
  Register lookThroughCopyInstrs(1518,60152

/usr/include/llvm/CodeGen/GlobalISel/Legalizer.h,426
#define LLVM_CODEGEN_GLOBALISEL_LEGALIZER_H21,924
class Legalizer 37,1312
  static char ID;39,1367
  struct MFResult 41,1386
    bool Changed;42,1406
    const MachineInstr *FailedOn;FailedOn43,1424
  void init(48,1521
  Legalizer(52,1590
  StringRef getPassName(54,1606
  void getAnalysisUsage(56,1672
  MachineFunctionProperties getSetProperties(63,1903
  MachineFunctionProperties getClearedProperties(68,2073

/usr/include/llvm/CodeGen/GlobalISel/LegalizerHelper.h,2318
#define LLVM_CODEGEN_GLOBALISEL_LEGALIZERHELPER_H21,937
class LegalizerHelper 47,1595
  MachineIRBuilder &MIRBuilder;MIRBuilder51,1720
  GISelChangeObserver &Observer;Observer54,1813
  MachineRegisterInfo &MRI;MRI57,1856
  const LegalizerInfo &LI;LI58,1884
  const TargetLowering &TLI;TLI59,1911
  GISelKnownBits *KB;KB60,1940
  enum LegalizeResult 63,1971
    AlreadyLegal,66,2088
    Legalized,69,2179
    UnableToLegalize,73,2287
  const LegalizerInfo &getLegalizerInfo(getLegalizerInfo77,2369
  const TargetLowering &getTargetLowering(getTargetLowering78,2432
  GISelKnownBits *getKnownBits(getKnownBits79,2498
  LegalizerHelper(81,2553
  LegalizerHelper(83,2663
  LegalizeResult legalizeInstrStep(94,3260
  LegalizeResult libcall(98,3458
  LegalizeResult narrowScalar(102,3627
  LegalizeResult widenScalar(107,3906
  LegalizeResult bitcast(110,4043
  LegalizeResult lower(114,4222
  LegalizeResult fewerElementsVector(118,4449
  LegalizeResult moreElementsVector(123,4709
  Register coerceToScalar(131,5118
  void widenScalarSrc(137,5418
  void narrowScalarSrc(143,5736
  void widenScalarDst(148,6045
  void narrowScalarDst(154,6385
  void moreElementsVectorDst(159,6728
  void moreElementsVectorSrc(164,7037
  void bitcastSrc(168,7241
  void bitcastDst(172,7436
  widenScalarMergeValues(176,7528
  widenScalarUnmergeValues(178,7619
  widenScalarExtract(180,7712
  widenScalarInsert(182,7799
  LegalizeResult widenScalarAddSubOverflow(183,7868
  LegalizeResult widenScalarAddSubShlSat(185,8003
  LegalizeResult widenScalarMulo(187,8134
  void insertParts(199,8715
  void mergeMixedSubvectors(204,8969
  void appendVectorElts(206,9045
  LLT extractGCDType(212,9377
  void extractGCDType(218,9685
  LLT buildLCMMergePieces(236,10529
  void buildWidenedRemergeToDst(243,10923
  void multiplyRegisters(249,11248
  void changeOpcode(253,11433
  LegalizeResult tryNarrowPow2Reduction(255,11493
  LegalizeResult lowerMemset(260,11736
  LegalizeResult lowerMemcpyInline(263,11923
  LegalizeResult lowerMemcpy(266,12143
  LegalizeResult lowerMemmove(269,12361
  LegalizeResult createGetStateLibcall(274,12648
  LegalizeResult createSetStateLibcall(277,12849
  LegalizeResult createResetStateLibcall(280,13050
  Align getStackTemporaryAlignment(287,13356

/usr/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h,7948
#define LLVM_CODEGEN_GLOBALISEL_LEGALIZERINFO_H15,656
namespace LegalizeActions 43,1370
enum LegalizeAction 44,1398
  Legal,47,1550
  NarrowScalar,52,1761
  WidenScalar,57,1963
  FewerElements,65,2423
  MoreElements,71,2698
  Bitcast,74,2788
  Lower,78,2944
  Libcall,83,3159
  Custom,87,3312
  Unsupported,91,3425
  NotFound,94,3515
  UseLegacyRules,98,3608
using LegalizeActions::LegalizeAction;103,3747
struct LegalityQuery 109,4041
  unsigned Opcode;110,4064
  ArrayRef<LLT> Types;111,4083
  struct MemDesc 113,4107
    LLT MemoryTy;114,4126
    uint64_t AlignInBits;115,4144
    AtomicOrdering Ordering;116,4170
    MemDesc(119,4225
    MemDesc(121,4376
  ArrayRef<MemDesc> MMODescrs;129,4676
  constexpr LegalityQuery(131,4708
  constexpr LegalityQuery(134,4901
struct LegalizeActionStep 143,5234
  LegalizeAction Action;145,5308
  unsigned TypeIdx;147,5406
  LLT NewType;149,5500
  LegalizeActionStep(151,5516
  LegalizeActionStep(155,5681
  bool operator==(operator==194,6911
using LegalityPredicate 200,7081
using LegalizeMutation 201,7152
namespace LegalityPredicates 204,7246
struct TypePairAndMemDesc 205,7277
  LLT Type0;206,7305
  LLT Type1;207,7318
  LLT MemTy;208,7331
  uint64_t Align;209,7344
  bool operator==(operator==211,7363
  bool isCompatible(218,7702
template <typename Predicate> Predicate predNot(228,8093
Predicate all(234,8285
template<typename Predicate,240,8458
Predicate all(241,8505
Predicate any(247,8663
template<typename Predicate,253,8836
Predicate any(254,8883
inline LegalityPredicate typeIsNot(265,9336
namespace LegalizeMutations 353,13176
class LegalizeRule 399,15298
  LegalityPredicate Predicate;400,15319
  LegalizeAction Action;401,15350
  LegalizeMutation Mutation;402,15375
  LegalizeRule(405,15413
  bool match(410,15647
  LegalizeAction getAction(414,15730
  std::pair<std::pair417,15821
  std::pair<unsigned, LLT> determineMutation(417,15821
class LegalizeRuleSet 424,15995
  unsigned AliasOf 426,16070
  bool IsAliasedByAnother 428,16155
  SmallVector<SmallVector429,16190
  SmallVector<LegalizeRule, 2> Rules;429,16190
  unsigned typeIdx(445,17016
  void markAllIdxsAsCovered(455,17278
  void add(462,17390
  static bool always(468,17564
  LegalizeRuleSet &actionIf(actionIf472,17742
  LegalizeRuleSet &actionIf(actionIf479,18016
  LegalizeRuleSet &actionFor(actionFor486,18352
  LegalizeRuleSet &actionFor(actionFor493,18705
  LegalizeRuleSet &actionFor(actionFor502,19147
  LegalizeRuleSet &actionFor(actionFor510,19551
  LegalizeRuleSet &actionForTypeWithAnyImm(actionForTypeWithAnyImm520,20060
  LegalizeRuleSet &actionForTypeWithAnyImm(actionForTypeWithAnyImm527,20365
  LegalizeRuleSet &actionForCartesianProduct(actionForCartesianProduct537,20876
  actionForCartesianProduct(548,21441
  LegalizeRuleSet &actionForCartesianProduct(actionForCartesianProduct559,22023
  bool isAliasedByAnother(571,22496
  void setIsAliasedByAnother(572,22555
  void aliasTo(573,22617
  unsigned getAlias(579,22846
  unsigned immIdx(581,22895
  LegalizeRuleSet &legalIf(legalIf592,23218
  LegalizeRuleSet &legalFor(legalFor599,23579
  LegalizeRuleSet &legalFor(legalFor604,23798
  LegalizeRuleSet &legalForTypeWithAnyImm(legalForTypeWithAnyImm609,24048
  LegalizeRuleSet &legalForTypeWithAnyImm(legalForTypeWithAnyImm614,24225
  LegalizeRuleSet &legalForTypesWithMemDesc(legalForTypesWithMemDesc622,24581
  LegalizeRuleSet &legalForCartesianProduct(legalForCartesianProduct631,25071
  LegalizeRuleSet &legalForCartesianProduct(legalForCartesianProduct636,25319
  LegalizeRuleSet &legalForCartesianProduct(legalForCartesianProduct642,25660
  LegalizeRuleSet &alwaysLegal(alwaysLegal649,26026
  LegalizeRuleSet &bitcastIf(bitcastIf656,26249
  LegalizeRuleSet &lower(lower665,26647
  LegalizeRuleSet &lowerIf(lowerIf674,27028
  LegalizeRuleSet &lowerIf(lowerIf682,27415
  LegalizeRuleSet &lowerFor(lowerFor691,27896
  LegalizeRuleSet &lowerFor(lowerFor696,28104
  LegalizeRuleSet &lowerFor(lowerFor702,28426
  LegalizeRuleSet &lowerFor(lowerFor707,28663
  LegalizeRuleSet &lowerForCartesianProduct(lowerForCartesianProduct713,28965
  LegalizeRuleSet &lowerForCartesianProduct(lowerForCartesianProduct720,29350
  LegalizeRuleSet &libcall(libcall729,29808
  LegalizeRuleSet &libcallIf(libcallIf738,30145
  LegalizeRuleSet &libcallFor(libcallFor744,30443
  libcallFor(748,30587
  libcallForCartesianProduct(752,30730
  libcallForCartesianProduct(756,30889
  LegalizeRuleSet &widenScalarIf(widenScalarIf763,31194
  LegalizeRuleSet &narrowScalarIf(narrowScalarIf772,31662
  narrowScalarFor(782,32177
  LegalizeRuleSet &moreElementsIf(moreElementsIf789,32465
  LegalizeRuleSet &fewerElementsIf(fewerElementsIf798,32941
  LegalizeRuleSet &unsupported(unsupported807,33362
  LegalizeRuleSet &unsupportedIf(unsupportedIf811,33487
  LegalizeRuleSet &unsupportedFor(unsupportedFor815,33617
  LegalizeRuleSet &unsupportedIfMemSizeNotPow2(unsupportedIfMemSizeNotPow2819,33750
  LegalizeRuleSet &lowerIfMemSizeNotPow2(lowerIfMemSizeNotPow2827,34091
  LegalizeRuleSet &lowerIfMemSizeNotByteSizePow2(lowerIfMemSizeNotByteSizePow2835,34471
  LegalizeRuleSet &customIf(customIf840,34640
  LegalizeRuleSet &customFor(customFor846,34942
  LegalizeRuleSet &customFor(customFor852,35165
  LegalizeRuleSet &customForCartesianProduct(customForCartesianProduct856,35304
  customForCartesianProduct(862,35578
  customForCartesianProduct(869,35911
  LegalizeRuleSet &custom(custom877,36266
  LegalizeRuleSet &widenScalarToNextPow2(widenScalarToNextPow2883,36470
  LegalizeRuleSet &widenScalarToNextMultipleOf(widenScalarToNextMultipleOf893,36925
  LegalizeRuleSet &widenScalarOrEltToNextPow2(widenScalarOrEltToNextPow2903,37429
  LegalizeRuleSet &narrowScalar(narrowScalar911,37782
  LegalizeRuleSet &scalarize(scalarize917,38015
  LegalizeRuleSet &scalarizeIf(scalarizeIf923,38248
  LegalizeRuleSet &minScalarOrElt(minScalarOrElt931,38610
  LegalizeRuleSet &minScalarOrEltIf(minScalarOrEltIf940,39013
  LegalizeRuleSet &widenVectorEltsToVectorMinSize(widenVectorEltsToVectorMinSize952,39572
  LegalizeRuleSet &minScalar(minScalar973,40451
  LegalizeRuleSet &minScalarIf(minScalarIf982,40840
  LegalizeRuleSet &maxScalarOrElt(maxScalarOrElt998,41442
  LegalizeRuleSet &maxScalar(maxScalar1007,41831
  LegalizeRuleSet &maxScalarIf(maxScalarIf1018,42346
  LegalizeRuleSet &clampScalar(clampScalar1034,42964
  LegalizeRuleSet &clampScalarOrElt(clampScalarOrElt1041,43284
  LegalizeRuleSet &minScalarSameAs(minScalarSameAs1047,43542
  LegalizeRuleSet &maxScalarSameAs(maxScalarSameAs1058,43974
  LegalizeRuleSet &scalarSameSizeAs(scalarSameSizeAs1070,44448
  LegalizeRuleSet &minScalarEltSameAsIf(minScalarEltSameAsIf1076,44704
  LegalizeRuleSet &maxScalarEltSameAsIf(maxScalarEltSameAsIf1094,45482
  LegalizeRuleSet &moreElementsToNextPow2(moreElementsToNextPow21113,46254
  LegalizeRuleSet &clampMinNumElements(clampMinNumElements1121,46619
  LegalizeRuleSet &alignNumElementsTo(alignNumElementsTo1140,47384
  LegalizeRuleSet &clampMaxNumElements(clampMaxNumElements1159,48182
  LegalizeRuleSet &clampNumElements(clampNumElements1183,49272
  LegalizeRuleSet &clampMaxNumElementsStrict(clampMaxNumElementsStrict1200,50171
  LegalizeRuleSet &fallback(fallback1208,50531
class LegalizerInfo 1226,51257
  const LegacyLegalizerInfo &getLegacyLegalizerInfo(getLegacyLegalizerInfo1230,51326
  LegacyLegalizerInfo &getLegacyLegalizerInfo(getLegacyLegalizerInfo1233,51415
  bool isLegal(1283,53873
  bool isLegalOrCustom(1287,53990
  virtual bool legalizeCustom(1297,54431
  virtual bool legalizeIntrinsic(1306,54838
  static const int FirstOp 1318,55304
  static const int LastOp 1319,55378
  LegalizeRuleSet RulesForOpcode[RulesForOpcode1321,55450
  LegacyLegalizerInfo LegacyInfo;1322,55506

/usr/include/llvm/CodeGen/GlobalISel/LoadStoreOpt.h,1120
#define LLVM_CODEGEN_GLOBALISEL_LOADSTOREOPT_H15,663
struct BaseIndexOffset 38,1342
  Register BaseReg;39,1367
  Register IndexReg;40,1387
using namespace GISelAddressing;62,2355
class LoadStoreOpt 64,2389
  static char ID;66,2447
  std::function<bool(const MachineFunction &)> DoNotRunPass;71,2575
  MachineRegisterInfo *MRI MRI73,2637
  const TargetLowering *TLI TLI74,2675
  MachineFunction *MF MF75,2714
  AliasAnalysis *AA AA76,2747
  const LegalizerInfo *LI LI77,2778
  MachineIRBuilder Builder;79,2816
  class StoreMergeCandidate 84,2928
    Register BasePtr;87,3043
    uint64_t CurrentLowestOffset;92,3372
    SmallVector<GStore *> Stores;93,3406
    SmallVector<SmallVector101,3958
    SmallVector<std::pair<MachineInstr *, unsigned>> PotentialAliases;101,3958
    void reset(106,4128
  DenseMap<DenseMap148,6218
  DenseMap<unsigned, BitVector> LegalStoreSizes;148,6218
  bool IsPreLegalizer 149,6267
  SmallSet<SmallSet151,6367
  SmallSet<MachineInstr *, 16> InstsToErase;151,6367
  StringRef getPassName(157,6502
  MachineFunctionProperties getRequiredProperties(159,6571

/usr/include/llvm/CodeGen/GlobalISel/Localizer.h,395
#define LLVM_CODEGEN_GLOBALISEL_LOCALIZER_H22,1068
class Localizer 43,1812
  static char ID;45,1867
  std::function<bool(const MachineFunction &)> DoNotRunPass;50,1995
  typedef SmallSetVector<MachineInstr MachineInstr68,2753
  typedef SmallSetVector<MachineInstr *, 32> LocalizedSetVecT;68,2753
  StringRef getPassName(85,3392
  MachineFunctionProperties getRequiredProperties(87,3458

/usr/include/llvm/CodeGen/GlobalISel/MachineIRBuilder.h,7480
#define LLVM_CODEGEN_GLOBALISEL_MACHINEIRBUILDER_H14,613
struct MachineIRBuilderState 44,1484
  DebugLoc DL;52,1881
  MachineBasicBlock::iterator II;59,2092
class DstOp 67,2219
    LLT LLTTy;69,2243
    Register Reg;70,2258
    const TargetRegisterClass *RC;RC71,2276
  enum class DstType 75,2325
  enum class DstType { Ty_LLT,75,2325
  enum class DstType { Ty_LLT, Ty_Reg,75,2325
  enum class DstType { Ty_LLT, Ty_Reg, Ty_RC 75,2325
  DstOp(76,2373
  DstOp(77,2426
  DstOp(78,2479
  DstOp(79,2556
  DstOp(80,2612
  void addDefToMIB(82,2686
  LLT getLLTTy(96,3041
  Register getReg(108,3331
  const TargetRegisterClass *getRegClass(getRegClass113,3435
  DstType getDstOpKind(122,3614
  DstType Ty;125,3670
class SrcOp 128,3688
    MachineInstrBuilder SrcMIB;130,3712
    Register Reg;131,3744
    CmpInst::Predicate Pred;132,3762
    int64_t Imm;133,3791
  enum class SrcType 137,3822
  enum class SrcType { Ty_Reg,137,3822
  enum class SrcType { Ty_Reg, Ty_MIB,137,3822
  enum class SrcType { Ty_Reg, Ty_MIB, Ty_Predicate,137,3822
  enum class SrcType { Ty_Reg, Ty_MIB, Ty_Predicate, Ty_Imm 137,3822
  SrcOp(138,3885
  SrcOp(139,3938
  SrcOp(140,4015
  SrcOp(141,4093
  SrcOp(147,4403
  SrcOp(148,4456
  void addSrcToMIB(150,4509
  LLT getLLTTy(167,4879
  Register getReg(180,5270
  CmpInst::Predicate getPredicate(193,5608
  int64_t getImm(202,5795
  SrcType getSrcOpKind(211,5952
  SrcType Ty;214,6008
class MachineIRBuilder 221,6243
  MachineIRBuilderState State;223,6269
  void recordInsertion(237,6776
  MachineIRBuilder(245,6995
  MachineIRBuilder(247,7051
  MachineIRBuilder(252,7194
  MachineIRBuilder(258,7349
  MachineIRBuilder(265,7526
  const TargetInstrInfo &getTII(getTII267,7602
  MachineFunction &getMF(getMF273,7771
  const MachineFunction &getMF(getMF278,7881
  const DataLayout &getDataLayout(getDataLayout283,8003
  LLVMContext &getContext(getContext287,8115
  const DebugLoc &getDL(getDL292,8229
  MachineRegisterInfo *getMRI(getMRI295,8298
  const MachineRegisterInfo *getMRI(getMRI296,8352
  MachineIRBuilderState &getState(getState299,8446
  void setState(302,8528
  const MachineBasicBlock &getMBB(getMBB305,8659
  MachineBasicBlock &getMBB(getMBB310,8788
  GISelCSEInfo *getCSEInfo(getCSEInfo315,8932
  const GISelCSEInfo *getCSEInfo(getCSEInfo316,8987
  MachineBasicBlock::iterator getInsertPt(319,9107
  void setInsertPt(324,9316
  void setCSEInfo(333,9545
  void setMBB(342,9860
  void setInstr(351,10127
  void setInstrAndDebugLoc(361,10465
  void setChangeObserver(366,10570
  GISelChangeObserver *getObserver(getObserver370,10665
  void stopObservingChanges(372,10730
  bool isObservingChanges(374,10791
  void setDebugLoc(378,10948
  const DebugLoc &getDebugLoc(getDebugLoc381,11065
  void setPCSections(384,11200
  MDNode *getPCSections(getPCSections387,11319
  MachineInstrBuilder buildInstr(396,11665
  MachineInstrBuilder buildPtrMask(521,17494
  MachineInstrBuilder buildUAddo(582,20323
  MachineInstrBuilder buildUSubo(588,20616
  MachineInstrBuilder buildSAddo(594,20909
  MachineInstrBuilder buildSSubo(600,21201
  MachineInstrBuilder buildUAdde(619,22039
  MachineInstrBuilder buildUSube(627,22454
  MachineInstrBuilder buildSAdde(635,22869
  MachineInstrBuilder buildSSube(643,23284
  MachineInstrBuilder buildSExtInReg(681,25044
  MachineInstrBuilder buildFPExt(686,25262
  MachineInstrBuilder buildPtrToInt(692,25531
  MachineInstrBuilder buildIntToPtr(697,25722
  MachineInstrBuilder buildBitcast(702,25913
  MachineInstrBuilder buildAddrSpaceCast(707,26111
  MachineInstrBuilder buildAssertInstr(891,34245
  MachineInstrBuilder buildAssertZExt(899,34574
  MachineInstrBuilder buildAssertSExt(907,34912
  MachineInstrBuilder buildAssertAlign(915,35255
  MachineInstrBuilder buildLoad(930,35867
  MachineInstrBuilder buildIsFPClass(1198,48338
  MachineInstrBuilder buildExtractVectorElementConstant(1240,50291
  MachineInstrBuilder buildFreeze(1538,65012
  MachineInstrBuilder buildAdd(1563,65961
  MachineInstrBuilder buildSub(1580,66672
  MachineInstrBuilder buildMul(1596,67379
  MachineInstrBuilder buildUMulH(1602,67653
  MachineInstrBuilder buildSMulH(1608,67935
  MachineInstrBuilder buildURem(1615,68271
  MachineInstrBuilder buildFMul(1621,68549
  buildFMinNum(1628,68849
  buildFMaxNum(1634,69086
  buildFMinNumIEEE(1640,69323
  buildFMaxNumIEEE(1646,69573
  MachineInstrBuilder buildShl(1651,69801
  MachineInstrBuilder buildLShr(1657,70075
  MachineInstrBuilder buildAShr(1663,70353
  MachineInstrBuilder buildAnd(1680,71043
  MachineInstrBuilder buildOr(1695,71641
  MachineInstrBuilder buildXor(1702,71964
  MachineInstrBuilder buildNot(1710,72259
  MachineInstrBuilder buildNeg(1718,72566
  MachineInstrBuilder buildCTPOP(1724,72821
  MachineInstrBuilder buildCTLZ(1729,73014
  MachineInstrBuilder buildCTLZ_ZERO_UNDEF(1734,73216
  MachineInstrBuilder buildCTTZ(1739,73429
  MachineInstrBuilder buildCTTZ_ZERO_UNDEF(1744,73631
  MachineInstrBuilder buildBSwap(1749,73837
  MachineInstrBuilder buildFAdd(1754,74029
  buildStrictFAdd(1762,74390
  MachineInstrBuilder buildFSub(1768,74669
  MachineInstrBuilder buildFDiv(1775,75001
  MachineInstrBuilder buildFMA(1782,75340
  MachineInstrBuilder buildFMAD(1789,75701
  MachineInstrBuilder buildFNeg(1796,76050
  MachineInstrBuilder buildFAbs(1802,76317
  buildFCanonicalize(1809,76616
  buildIntrinsicTrunc(1816,76904
  buildFFloor(1823,77193
  MachineInstrBuilder buildFLog(1829,77426
  MachineInstrBuilder buildFLog2(1835,77692
  MachineInstrBuilder buildFExp2(1841,77961
  MachineInstrBuilder buildFPow(1847,78239
  buildFLdexp(1855,78597
  buildFFrexp(1862,78889
  MachineInstrBuilder buildFCopysign(1868,79160
  MachineInstrBuilder buildUITOFP(1874,79417
  MachineInstrBuilder buildSITOFP(1879,79606
  MachineInstrBuilder buildFPTOUI(1884,79795
  MachineInstrBuilder buildFPTOSI(1889,79984
  buildIntrinsicRoundeven(1895,80217
  MachineInstrBuilder buildSMin(1902,80517
  MachineInstrBuilder buildSMax(1908,80764
  MachineInstrBuilder buildUMin(1914,81011
  MachineInstrBuilder buildUMax(1920,81258
  MachineInstrBuilder buildAbs(1926,81496
  MachineInstrBuilder buildVecReduceSeqFAdd(1942,82139
  MachineInstrBuilder buildVecReduceSeqFMul(1953,82642
  MachineInstrBuilder buildVecReduceFAdd(1964,83109
  MachineInstrBuilder buildVecReduceFMul(1974,83539
  MachineInstrBuilder buildVecReduceFMax(1981,83867
  MachineInstrBuilder buildVecReduceFMin(1986,84076
  MachineInstrBuilder buildVecReduceFMaximum(1991,84289
  MachineInstrBuilder buildVecReduceFMinimum(1997,84555
  MachineInstrBuilder buildVecReduceAdd(2003,84816
  MachineInstrBuilder buildVecReduceMul(2008,85022
  MachineInstrBuilder buildVecReduceAnd(2013,85228
  MachineInstrBuilder buildVecReduceOr(2018,85433
  MachineInstrBuilder buildVecReduceXor(2023,85637
  MachineInstrBuilder buildVecReduceSMax(2028,85844
  MachineInstrBuilder buildVecReduceSMin(2033,86053
  MachineInstrBuilder buildVecReduceUMax(2038,86262
  MachineInstrBuilder buildVecReduceUMin(2043,86471
  MachineInstrBuilder buildMemTransferInst(2048,86669
  MachineInstrBuilder buildMemCpy(2060,87209
  MachineInstrBuilder buildSbfx(2068,87625
  MachineInstrBuilder buildUbfx(2074,87906
  MachineInstrBuilder buildRotateRight(2080,88176
  MachineInstrBuilder buildRotateLeft(2086,88433
  MachineInstrBuilder buildBitReverse(2092,88686

/usr/include/llvm/CodeGen/GlobalISel/RegBankSelect.h,2745
#define LLVM_CODEGEN_GLOBALISEL_REGBANKSELECT_H65,3135
class RegBankSelect 91,3916
  static char ID;93,3975
  enum Mode 96,4055
    Fast,98,4134
    Greedy102,4305
  class InsertPoint 111,4662
    MachineBasicBlock::iterator getPoint(149,6008
    MachineBasicBlock &getInsertMBB(getInsertMBB168,6779
    MachineBasicBlock::iterator insert(180,7207
    virtual bool isSplit(188,7552
    virtual uint64_t frequency(195,7875
    virtual bool canMaterialize(200,8128
  class InstrInsertPoint 204,8246
    MachineInstr &Instr;Instr207,8330
    bool Before;210,8415
    MachineBasicBlock::iterator getPointImpl(214,8467
    MachineBasicBlock &getInsertMBBImpl(getInsertMBBImpl221,8689
    bool canMaterialize(233,9102
  class MBBInsertPoint 237,9230
    MachineBasicBlock &MBB;MBB240,9312
    bool Beginning;243,9409
    void materialize(245,9430
    MachineBasicBlock::iterator getPointImpl(248,9504
    MachineBasicBlock &getInsertMBBImpl(getInsertMBBImpl252,9619
    MBBInsertPoint(255,9697
    bool isSplit(267,10245
    bool canMaterialize(269,10351
  class EdgeInsertPoint 273,10450
    MachineBasicBlock &Src;Src276,10536
    MachineBasicBlock *DstOrSplit;DstOrSplit281,10709
    Pass &P;P284,10808
    MachineBasicBlock::iterator getPointImpl(288,10856
    MachineBasicBlock &getInsertMBBImpl(getInsertMBBImpl298,11286
    EdgeInsertPoint(301,11372
    bool isSplit(304,11496
  class RepairingPlacement 314,11799
    enum RepairingKind 317,11894
      None,319,11971
      Insert,321,12044
      Reassign,323,12113
      Impossible325,12184
    RepairingKind Kind;337,12533
    unsigned OpIdx;339,12609
    bool CanMaterialize;341,12680
    InsertionPoints InsertPoints;346,12907
    Pass &P;P348,13013
    RepairingKind getKind(362,13560
    unsigned getOpIdx(363,13611
    bool canMaterialize(364,13659
    bool hasSplit(365,13718
    insertpt_iterator begin(383,14476
    insertpt_iterator end(384,14539
    const_insertpt_iterator begin(386,14599
    const_insertpt_iterator end(387,14674
    unsigned getNumInsertPoints(389,14746
    void switchTo(399,15185
  class MappingCost 422,16302
    uint64_t LocalFreq;431,16666
    MappingCost(433,16691
    bool operator!=(operator!=466,17941
    bool operator>(468,18068
    friend raw_ostream &operator<<(operator<<479,18363
  std::unique_ptr<MachineOptimizationRemarkEmitter> MORE;505,19181
  MachineIRBuilder MIRBuilder;508,19289
  Mode OptMode;511,19358
  const TargetPassConfig *TPC;TPC514,19449
  StringRef getPassName(622,23811
  MachineFunctionProperties getRequiredProperties(626,23941
  MachineFunctionProperties getSetProperties(632,24173
  MachineFunctionProperties getClearedProperties(637,24349

/usr/include/llvm/CodeGen/GlobalISel/Utils.h,804
#define LLVM_CODEGEN_GLOBALISEL_UTILS_H15,599
#define GISEL_VECREDUCE_CASES_ALL 54,1575
#define GISEL_VECREDUCE_CASES_NONSEQ 73,2992
struct ValueAndVReg 183,9386
  APInt Value;184,9408
  Register VReg;185,9423
struct FPValueAndVReg 201,10147
  APFloat Value;202,10171
  Register VReg;203,10188
struct DefinitionAndSourceRegister 224,11072
  MachineInstr *MI;MI225,11109
  Register Reg;226,11129
T *getOpcodeDef(getOpcodeDef274,13334
inline bool isKnownNeverSNaN(328,16029
class RegOrConstant 379,18484
  int64_t Cst;380,18506
  Register Reg;381,18521
  bool IsReg;382,18537
  explicit RegOrConstant(385,18560
  explicit RegOrConstant(386,18626
  bool isReg(387,18692
  bool isCst(388,18731
  Register getReg(389,18771
  int64_t getCst(393,18866
using SmallInstListTy 533,25354

/usr/include/llvm/CodeGen/MIRParser/MIRParser.h,186
#define LLVM_CODEGEN_MIRPARSER_MIRPARSER_H18,710
typedef llvm::function_ref<std::optional<std::optional37,1060
class MIRParser 42,1259
  std::unique_ptr<MIRParserImpl> Impl;43,1277

/usr/include/llvm/CodeGen/MIRParser/MIParser.h,2226
#define LLVM_CODEGEN_MIRPARSER_MIPARSER_H14,572
struct VRegInfo 39,1124
  enum uint8_t 40,1142
    UNKNOWN,41,1159
    UNKNOWN, NORMAL,41,1159
    UNKNOWN, NORMAL, GENERIC,41,1159
    UNKNOWN, NORMAL, GENERIC, REGBANK41,1159
    const TargetRegisterClass *RC;RC45,1305
    const RegisterBank *RegBank;RegBank46,1340
  } D;47,1373
  Register VReg;48,1380
  Register PreferredReg;49,1397
using Name2RegClassMap 52,1426
using Name2RegBankMap 53,1491
struct PerTargetMIParsingState 55,1549
  const TargetSubtargetInfo &Subtarget;Subtarget57,1591
  StringMap<unsigned> Names2InstrOpCodes;60,1679
  StringMap<Register> Names2Regs;63,1767
  StringMap<const uint32_t *> Names2RegMasks;66,1857
  StringMap<unsigned> Names2SubRegIndices;69,1962
  StringMap<int> Names2TargetIndices;72,2060
  StringMap<unsigned> Names2DirectTargetFlags;75,2174
  StringMap<unsigned> Names2BitmaskTargetFlags;78,2298
  StringMap<MachineMemOperand::Flags> Names2MMOTargetFlags;81,2412
  Name2RegClassMap Names2RegClasses;84,2531
  Name2RegBankMap Names2RegBanks;87,2624
  PerTargetMIParsingState(153,4962
struct PerFunctionMIParsingState 164,5206
  BumpPtrAllocator Allocator;165,5241
  MachineFunction &MF;MF166,5271
  SourceMgr *SM;SM167,5294
  const SlotMapping &IRSlots;IRSlots168,5311
  PerTargetMIParsingState &Target;Target169,5341
  std::map<std::map171,5377
  std::map<unsigned, TrackingMDNodeRef> MachineMetadataNodes;171,5377
  std::map<std::map172,5439
  std::map<unsigned, std::pair<TempMDTuple, SMLoc>> MachineForwardRefMDNodes;172,5439
  DenseMap<DenseMap174,5518
  DenseMap<unsigned, MachineBasicBlock *> MBBSlots;174,5518
  DenseMap<DenseMap175,5570
  DenseMap<Register, VRegInfo *> VRegInfos;175,5570
  StringMap<VRegInfo *> VRegInfosNamed;176,5614
  DenseMap<DenseMap177,5654
  DenseMap<unsigned, int> FixedStackObjectSlots;177,5654
  DenseMap<DenseMap178,5703
  DenseMap<unsigned, int> StackObjectSlots;178,5703
  DenseMap<DenseMap179,5747
  DenseMap<unsigned, unsigned> ConstantPoolSlots;179,5747
  DenseMap<DenseMap180,5797
  DenseMap<unsigned, unsigned> JumpTableSlots;180,5797
  DenseMap<DenseMap183,5904
  DenseMap<unsigned, const Value *> Slots2Values;183,5904

/usr/include/llvm/CodeGen/PBQP/CostAllocator.h,1319
#define LLVM_CODEGEN_PBQP_COSTALLOCATOR_H18,779
template <typename ValueT> class ValuePool 28,947
  class PoolEntry 33,1059
    PoolEntry(36,1172
    ~PoolEntry(39,1270
    const ValueT &getValue(getValue41,1316
    ValuePool &Pool;Pool44,1381
    ValueT Value;45,1402
  class PoolEntryDSInfo 48,1426
    static inline PoolEntry *getEmptyKey(getEmptyKey50,1462
    static inline PoolEntry *getTombstoneKey(getTombstoneKey52,1526
    static unsigned getHashValue(57,1687
    static unsigned getHashValue(61,1777
    static unsigned getHashValue(65,1875
    template <typename ValueKeyT1,69,1979
    static bool isEqual(70,2035
    static bool isEqual(75,2169
    static bool isEqual(81,2354
  EntrySetT EntrySet;90,2608
  void removeEntry(92,2631
  template <typename ValueKeyT> PoolRef getValue(95,2696
template <typename VectorT,107,3077
template <typename VectorT, typename MatrixT> class PoolCostAllocator 107,3077
  using VectorCostPool 109,3158
  using MatrixCostPool 110,3203
  using Vector 113,3257
  using Matrix 114,3283
  using VectorPtr 115,3309
  using MatrixPtr 116,3363
  template <typename VectorKeyT> VectorPtr getVector(118,3418
  template <typename MatrixKeyT> MatrixPtr getMatrix(122,3538
  VectorCostPool VectorPool;127,3667
  MatrixCostPool MatrixPool;128,3696

/usr/include/llvm/CodeGen/PBQP/Graph.h,4394
#define LLVM_CODEGEN_PBQP_GRAPH_H14,512
  class GraphBase 26,711
    static NodeId invalidNodeId(32,869
    static EdgeId invalidEdgeId(37,1030
  class Graph 46,1241
    class NodeEntry 62,1848
      NodeEntry(68,2033
      static AdjEdgeIdx getInvalidAdjEdgeIdx(70,2096
      AdjEdgeIdx addAdjEdgeId(74,2209
      void removeAdjEdgeId(80,2361
      const AdjEdgeList& getAdjEdgeIds(92,2887
      VectorPtr Costs;94,2958
      NodeMetadata Metadata;95,2981
      AdjEdgeList AdjEdgeIds;98,3024
    class EdgeEntry 101,3062
      EdgeEntry(103,3096
      void connectToN(111,3378
      void connect(118,3695
      void setAdjEdgeIdx(123,3830
      void disconnectFromN(132,4113
      void disconnectFrom(140,4484
      NodeId getN1Id(149,4727
      NodeId getN2Id(150,4776
      MatrixPtr Costs;152,4826
      EdgeMetadata Metadata;153,4849
      NodeId NIds[NIds156,4892
      typename NodeEntry::AdjEdgeIdx ThisEdgeAdjIdxs[ThisEdgeAdjIdxs157,4914
    GraphMetadata Metadata;162,5007
    CostAllocator CostAlloc;163,5035
    NodeVector Nodes;168,5191
    FreeNodeVector FreeNodeIds;169,5213
    EdgeVector Edges;173,5341
    FreeEdgeVector FreeEdgeIds;174,5363
    Graph(176,5396
    NodeEntry &getNode(getNode180,5467
    const NodeEntry &getNode(getNode184,5594
    EdgeEntry& getEdge(189,5734
    const EdgeEntry& getEdge(190,5792
    NodeId addConstructedNode(192,5863
    EdgeId addConstructedEdge(205,6180
    void operator=(operator=225,6741
    class NodeItr 230,6850
      NodeItr(238,7076
      bool operator==(operator==243,7287
      bool operator!=(operator!=244,7364
      NodeItr& operator++(245,7436
      NodeId operator*(246,7516
      NodeId findNextInUse(249,7580
      NodeId CurNId,256,7748
      NodeId CurNId, EndNId;256,7748
      const FreeNodeVector &FreeNodeIds;FreeNodeIds257,7777
    class EdgeItr 260,7826
      EdgeItr(262,7858
      bool operator==(operator==267,8069
      bool operator!=(operator!=268,8146
      EdgeItr& operator++(269,8218
      EdgeId operator*(270,8298
      EdgeId findNextInUse(273,8362
      EdgeId CurEId,280,8530
      EdgeId CurEId, EndEId;280,8530
      const FreeEdgeVector &FreeEdgeIds;FreeEdgeIds281,8559
    class NodeIdSet 284,8608
      NodeIdSet(286,8642
      NodeItr begin(288,8685
      NodeItr end(289,8739
      bool empty(291,8805
      typename NodeVector::size_type size(293,8859
      const Graph& G;298,8987
    class EdgeIdSet 301,9017
      EdgeIdSet(303,9051
      EdgeItr begin(305,9094
      EdgeItr end(306,9148
      bool empty(308,9214
      typename NodeVector::size_type size(310,9268
      const Graph& G;315,9396
    class AdjEdgeIdSet 318,9426
      AdjEdgeIdSet(320,9463
      typename NodeEntry::AdjEdgeItr begin(322,9516
      typename NodeEntry::AdjEdgeItr end(326,9621
      bool empty(330,9722
      typename NodeEntry::AdjEdgeList::size_type size(332,9787
      const NodeEntry &NE;NE337,9915
    Graph(344,10082
    GraphMetadata& getMetadata(347,10199
    const GraphMetadata& getMetadata(350,10307
    void setSolver(356,10661
    void unsetSolver(366,10964
    NodeId addNode(375,11242
    NodeId addNodeBypassingCostAllocator(396,12208
    EdgeId addEdge(409,12675
    NodeId addEdgeBypassingCostAllocator(434,13866
    bool empty(447,14420
    NodeIdSet nodeIds(449,14481
    EdgeIdSet edgeIds(450,14540
    AdjEdgeIdSet adjEdgeIds(452,14600
    unsigned getNumNodes(456,14772
    unsigned getNumEdges(460,14934
    void setNodeCosts(466,15149
    const VectorPtr& getNodeCostsPtr(481,15811
    const Vector& getNodeCosts(488,16004
    NodeMetadata& getNodeMetadata(492,16098
    const NodeMetadata& getNodeMetadata(496,16189
    typename NodeEntry::AdjEdgeList::size_type getNodeDegree(500,16292
    void updateEdgeCosts(508,16571
    const MatrixPtr& getEdgeCostsPtr(523,17235
    const Matrix& getEdgeCosts(530,17429
    EdgeMetadata& getEdgeMetadata(534,17521
    const EdgeMetadata& getEdgeMetadata(538,17612
    NodeId getEdgeNode1Id(545,17854
    NodeId getEdgeNode2Id(552,18085
    NodeId getEdgeOtherNodeId(560,18379
    EdgeId findEdge(573,18815
    void removeNode(585,19142
    void disconnectEdge(625,20775
    void disconnectAllNeighborsFromNode(635,21062
    void reconnectEdge(644,21404
    void removeEdge(653,21663
    void clear(663,21934

/usr/include/llvm/CodeGen/PBQP/Math.h,1328
#define LLVM_CODEGEN_PBQP_MATH_H10,403
class Vector 25,662
  friend hash_code hash_value(26,677
  explicit Vector(30,782
  Vector(34,934
  Vector(40,1142
  Vector(46,1342
  bool operator==(operator==52,1463
  unsigned getLength(60,1720
  Vector& operator+=(operator+=80,2312
  unsigned minIndex(89,2669
  unsigned Length;95,2841
  std::unique_ptr<PBQPNum []> Data;96,2860
inline hash_code hash_value(100,2946
OStream& operator<<(109,3323
class Matrix 121,3587
  Matrix(127,3724
  Matrix(133,3929
  Matrix(140,4176
  Matrix(147,4404
  bool operator==(operator==153,4542
  unsigned getRows(161,4841
  unsigned getCols(167,5004
  Vector getRowAsVector(187,5604
  Vector getColAsVector(196,5863
  Matrix transpose(205,6102
  Matrix& operator+=(operator+=215,6395
  Matrix operator+(224,6739
  unsigned Rows,232,6908
  unsigned Rows, Cols;232,6908
  std::unique_ptr<PBQPNum []> Data;233,6931
inline hash_code hash_value(237,7016
OStream& operator<<(247,7412
class MDVector 255,7653
  MDVector(257,7694
  MDVector(258,7748
  const Metadata& getMetadata(260,7810
  Metadata md;263,7873
inline hash_code hash_value(267,7921
class MDMatrix 272,8064
  MDMatrix(274,8105
  MDMatrix(275,8159
  const Metadata& getMetadata(277,8221
  Metadata md;280,8284
inline hash_code hash_value(284,8332

/usr/include/llvm/CodeGen/PBQP/ReductionRules.h,50
#define LLVM_CODEGEN_PBQP_REDUCTIONRULES_H14,520

/usr/include/llvm/CodeGen/PBQP/Solution.h,172
#define LLVM_CODEGEN_PBQP_SOLUTION_H14,518
  class Solution 26,801
    SelectionsMap selections;29,896
    void setSelection(38,1124
    unsigned getSelection(45,1344

/usr/include/llvm/CodeGen/Analysis.h,39
#define LLVM_CODEGEN_ANALYSIS_H14,564

/usr/include/llvm/CodeGen/AsmPrinterHandler.h,433
#define LLVM_CODEGEN_ASMPRINTERHANDLER_H15,601
typedef MCSymbol *ExceptionSymbolProvider(ExceptionSymbolProvider28,815
class AsmPrinterHandler 33,1039
  virtual ~AsmPrinterHandler(35,1073
  virtual void beginModule(41,1275
  virtual void markFunctionEnd(53,1726
  virtual void beginBasicBlockSection(62,2125
  virtual void endBasicBlockSection(69,2532
  virtual void beginFunclet(72,2651
  virtual void endFunclet(74,2765

/usr/include/llvm/CodeGen/AtomicExpandUtils.h,48
#define LLVM_CODEGEN_ATOMICEXPANDUTILS_H10,411

/usr/include/llvm/CodeGen/ByteProvider.h,456
#define LLVM_CODEGEN_BYTEPROVIDER_H18,802
template <typename ISelOp> class ByteProvider 30,1222
  ByteProvider(32,1279
  template <typename T> class is_op 37,1530
        std::is_same<decltype(test<remove_pointer_t>(0)), yes>::value;value51,1963
  static ByteProvider getSrc(66,2494
  static ByteProvider getConstantZero(73,2805
  bool isConstantZero(76,2904
  bool hasSrc(78,2952
  bool hasSameSrc(80,3003
  bool operator==(operator==82,3084

/usr/include/llvm/CodeGen/CFIFixup.h,138
#define LLVM_CODEGEN_CFIFIXUP_H15,552
class CFIFixup 21,684
  static char ID;23,738
  CFIFixup(25,757
  void getAnalysisUsage(29,865

/usr/include/llvm/CodeGen/CSEConfigBase.h,108
#define LLVM_CODEGEN_CSECONFIGBASE_H10,407
class CSEConfigBase 17,767
  virtual bool shouldCSEOpc(23,990

/usr/include/llvm/CodeGen/CalcSpillWeights.h,360
#define LLVM_CODEGEN_CALCSPILLWEIGHTS_H10,410
  class VirtRegAuxInfo 45,1771
    MachineFunction &MF;MF46,1796
    LiveIntervals &LIS;LIS47,1821
    const VirtRegMap &VRM;VRM48,1845
    const MachineLoopInfo &Loops;Loops49,1872
    const MachineBlockFrequencyInfo &MBFI;MBFI50,1906
    VirtRegAuxInfo(57,2129
    virtual float normalize(100,4313

/usr/include/llvm/CodeGen/CodeGenCommonISel.h,2115
#define LLVM_CODEGEN_CODEGENCOMMONISEL_H15,604
public:public117,5815
  StackProtectorDescriptor(118,5823
  bool 122,6014
  bool shouldEmitStackProtector(122,6014
  bool shouldEmitStackProtector() const 122,6014
  bool 126,6111
  bool shouldEmitFunctionBasedCheckStackProtector(126,6111
  bool shouldEmitFunctionBasedCheckStackProtector() const 126,6111
  void 132,6315
  void initialize(132,6315
  void initialize(const 132,6315
  void initialize(const BasicBlock 132,6315
  void initialize(const BasicBlock *BB,BB132,6315
  void initialize(const BasicBlock *BB, MachineBasicBlock 132,6315
  void initialize(const BasicBlock *BB, MachineBasicBlock *MBB,MBB132,6315
                  bool 133,6379
                  bool FunctionBasedInstrumentation)133,6379
  void 154,7261
  void resetPerBBState(154,7261
  void 168,7686
  void resetPerFunctionState(168,7686
  MachineBasicBlock 170,7744
  MachineBasicBlock *getParentMBB(getParentMBB170,7744
  MachineBasicBlock 171,7802
  MachineBasicBlock *getSuccessMBB(getSuccessMBB171,7802
  MachineBasicBlock 172,7862
  MachineBasicBlock *getFailureMBB(getFailureMBB172,7862
private:private174,7923
  MachineBasicBlock 182,8310
  MachineBasicBlock *ParentMBB ParentMBB182,8310
  MachineBasicBlock 186,8464
  MachineBasicBlock *SuccessMBB SuccessMBB186,8464
  MachineBasicBlock 190,8626
  MachineBasicBlock *FailureMBB FailureMBB190,8626
  MachineBasicBlock 195,8896
  MachineBasicBlock *addSuccessorMBB(addSuccessorMBB195,8896
  MachineBasicBlock *addSuccessorMBB(const 195,8896
  MachineBasicBlock *addSuccessorMBB(const BasicBlock 195,8896
  MachineBasicBlock *addSuccessorMBB(const BasicBlock *BB,BB195,8896
                                     MachineBasicBlock 196,8955
                                     MachineBasicBlock *ParentMBB,ParentMBB196,8955
                                     bool 197,9022
                                     bool IsLikely,197,9022
                                     MachineBasicBlock 198,9074
                                     MachineBasicBlock *SuccMBB SuccMBB198,9074

/usr/include/llvm/CodeGen/ComplexDeinterleavingPass.h,567
#define LLVM_CODEGEN_COMPLEXDEINTERLEAVING_H15,639
struct ComplexDeinterleavingPass24,775
  TargetMachine *TM;TM27,873
  ComplexDeinterleavingPass(30,903
  PreservedAnalyses run(32,963
enum class ComplexDeinterleavingOperation 35,1034
  CAdd,36,1078
  CMulPartial,37,1086
  Deinterleave,40,1245
  Splat,41,1261
  Symmetric,42,1270
  ReductionPHI,43,1283
  ReductionOperation,44,1299
  ReductionSelect,45,1321
enum class ComplexDeinterleavingRotation 48,1344
  Rotation_0 49,1387
  Rotation_90 50,1405
  Rotation_180 51,1424
  Rotation_270 52,1444

/usr/include/llvm/CodeGen/CostTable.h,546
#define LLVM_CODEGEN_COSTTABLE_H_15,547
struct CostTblEntryT 25,757
  int ISD;26,780
  MVT::SimpleValueType Type;27,791
  CostType Cost;28,820
using CostTblEntry 30,840
CostTableLookup(35,976
template <size_t N,46,1261
CostTableLookup(48,1336
struct TypeConversionCostTblEntryT 55,1587
  int ISD;56,1624
  MVT::SimpleValueType Dst;57,1635
  MVT::SimpleValueType Src;58,1663
  CostType Cost;59,1691
using TypeConversionCostTblEntry 61,1711
ConvertCostTableLookup(66,1905
template <size_t N,79,2292
ConvertCostTableLookup(81,2381

/usr/include/llvm/CodeGen/DAGCombine.h,185
#define LLVM_CODEGEN_DAGCOMBINE_H11,407
enum CombineLevel 15,460
  BeforeLegalizeTypes,16,480
  AfterLegalizeTypes,17,503
  AfterLegalizeVectorOps,18,525
  AfterLegalizeDAG19,551

/usr/include/llvm/CodeGen/DFAPacketizer.h,1339
#define LLVM_CODEGEN_DFAPACKETIZER_H26,1408
class DefaultVLIWScheduler 51,2007
  AAResults *AA;AA53,2072
  std::vector<std::unique_ptr<ScheduleDAGMutation>> Mutations;55,2137
  void addMutation(65,2440
class DFAPacketizer 73,2599
  const InstrItineraryData *InstrItins;InstrItins75,2630
  Automaton<uint64_t> A;76,2670
  ArrayRef<unsigned> ItinActions;79,2833
  DFAPacketizer(82,2876
  void clearResources(90,3228
  void setTrackResources(97,3463
  const InstrItineraryData *getInstrItins(getInstrItins126,4548
class VLIWPacketizerList 136,5140
  MachineFunction &MF;MF138,5178
  const TargetInstrInfo *TII;TII139,5201
  AAResults *AA;AA140,5231
  DefaultVLIWScheduler *VLIWScheduler;VLIWScheduler143,5274
  std::vector<MachineInstr*> CurrentPacketMIs;145,5373
  DFAPacketizer *ResourceTracker;ResourceTracker147,5447
  std::map<std::map149,5501
  std::map<MachineInstr*, SUnit*> MIToSUnit;149,5501
  DFAPacketizer *getResourceTracker(getResourceTracker165,6130
  virtual MachineBasicBlock::iterator addToPacket(168,6244
  virtual void initPacketizerState(182,6840
  virtual bool ignorePseudoInstruction(185,6956
  virtual bool isSoloInstruction(192,7242
  virtual bool shouldAddToPacket(200,7688
  virtual bool isLegalToPacketizeTogether(203,7824
  virtual bool isLegalToPruneDependencies(208,7981

/usr/include/llvm/CodeGen/DIE.h,8454
#define LLVM_CODEGEN_DIE_H14,527
class DIEAbbrevData 49,1411
  dwarf::Attribute Attribute;51,1461
  dwarf::Form Form;54,1515
  DIEAbbrevData(60,1621
  DIEAbbrevData(62,1705
  dwarf::Attribute getAttribute(67,1850
  dwarf::Form getForm(68,1912
  int64_t getValue(69,1959
class DIEAbbrev 79,2294
  unsigned Number 81,2366
  dwarf::Tag Tag;84,2412
  bool Children;90,2619
  SmallVector<SmallVector93,2676
  SmallVector<DIEAbbrevData, 12> Data;93,2676
  DIEAbbrev(96,2724
  dwarf::Tag getTag(100,2810
  unsigned getNumber(101,2854
  bool hasChildren(102,2902
  const SmallVectorImpl<DIEAbbrevData> &getData(getData103,2950
  void setChildrenFlag(104,3023
  void setNumber(105,3086
  void AddAttribute(109,3210
  void AddImplicitConstAttribute(114,3390
  void AddAttribute(119,3595
class DIEAbbrevSet 140,4380
  BumpPtrAllocator &Alloc;Alloc143,4505
  FoldingSet<DIEAbbrev> AbbreviationsSet;145,4581
  std::vector<DIEAbbrev *> Abbreviations;147,4676
  DIEAbbrevSet(150,4727
class DIEInteger 168,5370
  uint64_t Integer;169,5389
  explicit DIEInteger(172,5418
  static dwarf::Form BestForm(175,5509
  uint64_t getValue(195,6119
  void setValue(196,6167
class DIEExpr 206,6505
  const MCExpr *Expr;Expr207,6521
  explicit DIEExpr(210,6552
  const MCExpr *getValue(getValue213,6620
class DIELabel 223,6952
  const MCSymbol *Label;Label224,6969
  explicit DIELabel(227,7003
  const MCSymbol *getValue(getValue230,7077
class DIEBaseTypeRef 240,7418
  const DwarfCompileUnit *CU;CU241,7441
  const uint64_t Index;242,7471
  static constexpr unsigned ULEB128PadSize 243,7495
  explicit DIEBaseTypeRef(246,7552
  uint64_t getIndex(255,7932
class DIEDelta 261,8100
  const MCSymbol *LabelHi;LabelHi262,8117
  const MCSymbol *LabelLo;LabelLo263,8144
  DIEDelta(266,8180
class DIEString 278,8655
  DwarfStringPoolEntryRef S;279,8673
  DIEString(282,8711
  StringRef getString(285,8802
class DIEInlineString 297,9222
  StringRef S;298,9246
  explicit DIEInlineString(302,9302
  StringRef getString(307,9453
class DIEEntry 319,9919
  DIE *Entry;Entry320,9936
  explicit DIEEntry(324,9982
  DIE &getEntry(getEntry326,10026
class DIELocList 337,10408
  size_t Index;339,10467
  DIELocList(342,10492
  size_t getValue(345,10564
class DIEAddrOffset 355,10896
  DIEInteger Addr;356,10918
  DIEDelta Offset;357,10937
  explicit DIEAddrOffset(360,10965
class DIEValue 374,11477
  enum Type 376,11502
    isNone,377,11516
#define HANDLE_DIEVALUE(378,11528
  Type Ty 384,11654
  dwarf::Attribute Attribute 385,11674
  dwarf::Form Form 386,11726
  using ValTy 392,11930
      AlignedCharArrayUnion<DIEInteger, DIEString,393,11946
      AlignedCharArrayUnion<DIEInteger, DIEString, DIEExpr,393,11946
      AlignedCharArrayUnion<DIEInteger, DIEString, DIEExpr, DIELabel,393,11946
                            DIEDelta 394,12016
                            DIEDelta *, DIEEntry,394,12016
                            DIEDelta *, DIEEntry, DIEBlock 394,12016
                            DIEDelta *, DIEEntry, DIEBlock *, DIELoc 394,12016
                            DIELocList,395,12088
                            DIELocList, DIEBaseTypeRef 395,12088
  ValTy Val;402,12373
  template <class T> void construct(404,12387
  template <class T> T *get(get411,12644
  template <class T> const T *get(get412,12714
  template <class T> void destruct(415,12808
  void destroyVal(422,13124
#define HANDLE_DIEVALUE_SMALL(426,13195
#define HANDLE_DIEVALUE_LARGE(430,13450
  void copyVal(443,13963
#define HANDLE_DIEVALUE_SMALL(447,14048
#define HANDLE_DIEVALUE_LARGE(451,14303
  DIEValue(462,14639
  DIEValue &operator=(operator=466,14741
  ~DIEValue(477,14944
#define HANDLE_DIEVALUE_SMALL(479,14977
#define HANDLE_DIEVALUE_LARGE(484,15305
  Type getType(494,15778
  dwarf::Attribute getAttribute(495,15816
  dwarf::Form getForm(496,15878
  explicit operator bool(operator bool497,15925
#define HANDLE_DIEVALUE_SMALL(500,15983
#define HANDLE_DIEVALUE_LARGE(505,16311
struct IntrusiveBackListNode 522,16930
  PointerIntPair<PointerIntPair523,16961
  PointerIntPair<IntrusiveBackListNode *, 1> Next;523,16961
  IntrusiveBackListNode(525,17013
  IntrusiveBackListNode *getNext(getNext527,17062
struct IntrusiveBackListBase 532,17169
  using Node 533,17200
  Node *Last Last535,17239
  bool empty(537,17264
  void push_back(539,17304
  void push_front(550,17580
template <class T> class IntrusiveBackList 563,17910
  using IntrusiveBackListBase::empty;565,17987
  void push_back(567,18026
  void push_front(568,18090
  T &back(back570,18157
  const T &back(back571,18205
  T &front(front572,18265
  const T &front(front575,18356
  void takeNodes(579,18460
  bool deleteNode(598,19015
  class iterator618,19458
    explicit iterator(626,19647
    iterator &operator++(operator++628,19686
    explicit operator bool(operator bool633,19766
    T &operator*(operator*634,19815
    bool operator==(operator==636,19874
  class const_iterator639,19946
    const_iterator(647,20221
    explicit const_iterator(648,20295
    const_iterator &operator++(operator++650,20346
    explicit operator bool(operator bool655,20432
    const T &operator*(operator*656,20481
    bool operator==(operator==658,20552
  iterator begin(661,20630
  const_iterator begin(664,20734
  iterator end(667,20830
  const_iterator end(668,20870
  static iterator toIterator(670,20929
  static const_iterator toIterator(671,20989
class DIEValueList 689,21765
  struct Node 690,21786
    DIEValue V;691,21826
    explicit Node(693,21843
  using ListTy 696,21889
  ListTy List;698,21932
  class value_iterator702,21986
        iterator_adaptor_base<value_iterator, ListTy::iterator,708,22225
                              std::forward_iterator_tag,709,22289
    explicit value_iterator(713,22400
    explicit operator bool(operator bool715,22474
    DIEValue &operator*(operator*716,22537
  class const_value_iterator 719,22600
        iterator_adaptor_base<const_value_iterator, ListTy::const_iterator,723,22851
                              std::forward_iterator_tag,724,22927
    const_value_iterator(728,23050
    explicit const_value_iterator(730,23150
    explicit operator bool(operator bool733,23244
    const DIEValue &operator*(operator*734,23307
  using value_range 737,23376
  using const_value_range 738,23430
  value_iterator addValue(740,23497
  value_iterator addValue(745,23696
  bool replaceValue(752,23967
  bool replaceValue(767,24415
  bool replaceValue(779,24770
  bool deleteValue(791,25074
  void takeValues(805,25384
  value_range values(807,25456
  const_value_range values(810,25566
class DIE 819,25906
  unsigned Offset 824,26061
  unsigned Size 826,26119
  unsigned AbbrevNumber 827,26140
  dwarf::Tag Tag 829,26193
  bool ForceChildren 832,26378
  IntrusiveBackList<DIE> Children;834,26429
  PointerUnion<PointerUnion838,26594
  PointerUnion<DIE *, DIEUnit *> Owner;838,26594
  explicit DIE(840,26635
  static DIE *get(get849,26854
  unsigned getAbbrevNumber(854,26969
  dwarf::Tag getTag(855,27029
  unsigned getOffset(857,27134
  unsigned getSize(862,27341
  bool hasChildren(867,27540
  void setForceChildren(868,27614
  using child_iterator 870,27670
  using const_child_iterator 871,27729
  using child_range 872,27800
  using const_child_range 873,27854
  child_range children(875,27921
  const_child_range children(878,28009
  void setAbbrevNumber(891,28397
  void setOffset(930,30240
  void setSize(931,30285
  DIE &addChild(addChild934,30357
  DIE &addChildFront(addChildFront941,30540
class DIEUnit 960,31195
  DIE Die;966,31595
  MCSection *Section Section969,31754
  uint64_t Offset 970,31786
  void setSection(984,32325
  virtual const MCSymbol *getCrossSectionRelativeBaseAddress(getCrossSectionRelativeBaseAddress989,32427
  MCSection *getSection(getSection996,32644
  void setDebugSectionOffset(997,32696
  uint64_t getDebugSectionOffset(998,32753
  DIE &getUnitDie(getUnitDie999,32813
  const DIE &getUnitDie(getUnitDie1000,32849
struct BasicDIEUnit final : DIEUnit 1003,32901
class DIELoc 1010,33139
  mutable unsigned Size 1011,33176
  void setSize(1020,33450
  dwarf::Form BestForm(1024,33552
class DIEBlock 1046,34297
  mutable unsigned Size 1047,34336
  void setSize(1056,34612
  dwarf::Form BestForm(1060,34714

/usr/include/llvm/CodeGen/DbgEntityHistoryCalculator.h,1333
#define LLVM_CODEGEN_DBGENTITYHISTORYCALCULATOR_H10,420
class InstructionOrdering 30,1009
  void initialize(32,1045
  void clear(33,1091
  bool isBefore(37,1270
class DbgValueHistoryMap 46,1613
  typedef size_t EntryIndex;49,1681
  static const EntryIndex NoEntry 53,1803
  class Entry 72,2615
    enum EntryKind 76,2673
    enum EntryKind { DbgValue,76,2673
    enum EntryKind { DbgValue, Clobber 76,2673
    Entry(78,2716
    const MachineInstr *getInstr(getInstr81,2821
    EntryIndex getEndIndex(82,2893
    EntryKind getEntryKind(83,2949
    bool isClobber(85,3012
    bool isDbgValue(86,3077
    bool isClosed(87,3144
    PointerIntPair<PointerIntPair92,3255
    PointerIntPair<const MachineInstr *, 1, EntryKind> Instr;92,3255
    EntryIndex EndIndex;93,3317
  using Entries 95,3347
  using InlinedEntity 96,3388
  using EntriesMap 97,3459
  EntriesMap VarEntries;100,3525
  Entry &getEntry(getEntry107,3738
  bool empty(119,4282
  void clear(120,4334
  EntriesMap::const_iterator begin(121,4373
  EntriesMap::const_iterator end(122,4447
class DbgLabelInstrMap 132,4837
  using InlinedEntity 134,4870
  using InstrMap 135,4941
  InstrMap LabelInstr;138,5018
  bool empty(143,5114
  void clear(144,5166
  InstrMap::const_iterator begin(145,5205
  InstrMap::const_iterator end(146,5277

/usr/include/llvm/CodeGen/DebugHandlerBase.h,1200
#define LLVM_CODEGEN_DEBUGHANDLERBASE_H15,616
struct DbgVariableLocation 31,1025
  unsigned Register;33,1075
  SmallVector<int64_t,int64_t37,1234
  SmallVector<int64_t, 1> LoadChain;37,1234
  std::optional<llvm::DIExpression::FragmentInfo> FragmentInfo;40,1332
class DebugHandlerBase 53,1953
  AsmPrinter *Asm Asm58,2089
  MachineModuleInfo *MMI MMI61,2163
  DebugLoc PrevInstLoc;67,2466
  MCSymbol *PrevLabel PrevLabel68,2490
  const MachineBasicBlock *PrevInstBB PrevInstBB69,2523
  DebugLoc PrologEndLoc;73,2666
  const MachineBasicBlock *EpilogBeginBlock EpilogBeginBlock76,2741
  const MachineInstr *CurMI CurMI79,2872
  LexicalScopes LScopes;81,2912
  DbgValueHistoryMap DbgValues;85,3066
  DbgLabelInstrMap DbgLabels;88,3166
  DenseMap<DenseMap93,3353
  DenseMap<const MachineInstr *, MCSymbol *> LabelsBeforeInsn;93,3353
  DenseMap<DenseMap96,3478
  DenseMap<const MachineInstr *, MCSymbol *> LabelsAfterInsn;96,3478
  void requestLabelBeforeInsn(103,3717
  void requestLabelAfterInsn(108,3888
  virtual void skippedNonDebugFunction(114,4133
  InstructionOrdering InstOrdering;117,4187
  const InstructionOrdering &getInstOrdering(getInstOrdering144,5099

/usr/include/llvm/CodeGen/DetectDeadLanes.h,663
#define LLVM_CODEGEN_DETECTDEADLANES_H29,1179
class DeadLaneDetector 42,1416
  struct VRegInfo 46,1569
    LaneBitmask UsedLanes;47,1589
    LaneBitmask DefinedLanes;48,1616
  DeadLaneDetector(51,1652
  void computeSubRegisterLaneBitInfo(55,1836
  const VRegInfo &getVRegInfo(getVRegInfo57,1877
  bool isDefinedByCopy(61,1967
  void addUsedLanesOnOperand(69,2275
  void transferUsedLanesStep(74,2552
  void transferDefinedLanesStep(79,2848
  LaneBitmask transferDefinedLanes(86,3149
  std::unique_ptr<VRegInfo[]> VRegInfos;108,3945
  std::deque<unsigned> Worklist;110,4029
  BitVector WorklistMembers;111,4062
  BitVector DefinedByCopy;114,4219

/usr/include/llvm/CodeGen/EdgeBundles.h,453
#define LLVM_CODEGEN_EDGEBUNDLES_H16,708
class EdgeBundles 24,875
  IntEqClasses EC;30,1126
  SmallVector<SmallVector<unsigned,unsigned33,1211
  SmallVector<SmallVector<unsigned, 8>, 4> Blocks;33,1211
  static char ID;36,1271
  EdgeBundles(37,1289
  unsigned getBundle(41,1450
  unsigned getNumBundles(44,1597
  ArrayRef<unsigned> getBlocks(47,1736
  const MachineFunction *getMachineFunction(getMachineFunction50,1888
  void view(53,2022

/usr/include/llvm/CodeGen/ExecutionDomainFix.h,1305
#define LLVM_CODEGEN_EXECUTIONDOMAINFIX_H23,1007
struct DomainValue 51,2128
  unsigned AvailableDomains;58,2413
  DomainValue *Next;Next63,2648
  SmallVector<MachineInstr MachineInstr66,2736
  SmallVector<MachineInstr *, 8> Instrs;66,2736
  DomainValue(68,2778
  bool isCollapsed(72,2957
  bool hasDomain(75,3039
  void addDomain(83,3297
  void setSingleDomain(91,3553
  unsigned getCommonDomains(99,3834
  unsigned getFirstDomain(104,3956
  void clear(109,4116
class ExecutionDomainFix 116,4207
  SpecificBumpPtrAllocator<DomainValue> Allocator;117,4263
  SmallVector<SmallVector118,4314
  SmallVector<DomainValue *, 16> Avail;118,4314
  const TargetRegisterClass *const RC;120,4355
  MachineFunction *MF MF121,4394
  const TargetInstrInfo *TII TII122,4427
  const TargetRegisterInfo *TRI TRI123,4467
  std::vector<std::vector124,4510
  std::vector<SmallVector<int, 1>> AliasMap;124,4510
  const unsigned NumRegs;125,4555
  using LiveRegsDVInfo 128,4707
  LiveRegsDVInfo LiveRegs;129,4760
  using OutRegsInfoMap 133,4990
  OutRegsInfoMap MBBOutRegsInfos;134,5047
  ReachingDefAnalysis *RDA RDA136,5082
  ExecutionDomainFix(139,5129
  void getAnalysisUsage(142,5270
  MachineFunctionProperties getRequiredProperties(150,5511
  DomainValue *retain(retain165,5993

/usr/include/llvm/CodeGen/ExpandReductions.h,113
#define LLVM_CODEGEN_EXPANDREDUCTIONS_H10,410
class ExpandReductionsPass16,503
  PreservedAnalyses run(19,589

/usr/include/llvm/CodeGen/ExpandVectorPredication.h,127
#define LLVM_CODEGEN_EXPANDVECTORPREDICATION_H10,417
class ExpandVectorPredicationPass16,517
  PreservedAnalyses run(19,617

/usr/include/llvm/CodeGen/FaultMaps.h,646
#define LLVM_CODEGEN_FAULTMAPS_H10,403
class FaultMaps 21,552
  enum FaultKind 23,578
    FaultingLoad 24,597
    FaultingLoadStore,25,619
    FaultingStore,26,642
    FaultKindMax27,661
  explicit FaultMaps(30,684
  static const char *faultTypeToString(faultTypeToString32,723
  void recordFaultingOp(34,775
  void serializeToFaultMapSection(36,904
  void reset(37,941
  static const char *WFMP;WFMP42,999
  struct FaultInfo 44,1027
    explicit FaultInfo(51,1207
  struct MCSymbolComparator 61,1607
    bool operator()(operator()62,1637
  std::map<std::map67,1765
      FunctionInfos;68,1834
  AsmPrinter &AP;AP69,1855

/usr/include/llvm/CodeGen/GCMetadataPrinter.h,337
#define LLVM_CODEGEN_GCMETADATAPRINTER_H20,931
class GCMetadataPrinter 39,1436
  GCStrategy *S;S43,1499
  GCMetadataPrinter(47,1557
  virtual ~GCMetadataPrinter(52,1714
  GCStrategy &getStrategy(getStrategy54,1747
  virtual void beginAssembly(58,1911
  virtual void finishAssembly(62,2110
  virtual bool emitStackMaps(67,2374

/usr/include/llvm/CodeGen/HardwareLoops.h,874
#define LLVM_CODEGEN_HARDWARELOOPS_H15,565
struct HardwareLoopOptions 21,655
  std::optional<unsigned> Decrement;22,684
  std::optional<unsigned> Bitwidth;23,721
  std::optional<bool> Force;24,757
  std::optional<bool> ForcePhi;25,786
  std::optional<bool> ForceNested;26,818
  std::optional<bool> ForceGuard;27,853
  HardwareLoopOptions &setDecrement(setDecrement29,888
  HardwareLoopOptions &setCounterBitwidth(setCounterBitwidth33,987
  HardwareLoopOptions &setForce(setForce37,1091
  HardwareLoopOptions &setForcePhi(setForcePhi41,1184
  HardwareLoopOptions &setForceNested(setForceNested45,1277
  HardwareLoopOptions &setForceGuard(setForceGuard49,1376
  bool getForcePhi(53,1473
  bool getForceNested(56,1559
  bool getForceGuard(59,1654
class HardwareLoopsPass 64,1750
  HardwareLoopOptions Opts;65,1818
  explicit HardwareLoopsPass(68,1855

/usr/include/llvm/CodeGen/IntrinsicLowering.h,225
#define LLVM_CODEGEN_INTRINSICLOWERING_H16,712
class IntrinsicLowering 22,806
  const DataLayout &DL;DL23,832
  explicit IntrinsicLowering(28,889
  void LowerIntrinsicCall(38,1439
  static bool LowerToByteSwap(42,1617

/usr/include/llvm/CodeGen/LatencyPriorityQueue.h,629
#define LLVM_CODEGEN_LATENCYPRIORITYQUEUE_H16,704
  struct latency_sort 25,922
    LatencyPriorityQueue *PQ;PQ26,946
    explicit latency_sort(27,976
    bool operator(29,1041
  class LatencyPriorityQueue 32,1110
    std::vector<unsigned> NumNodesSolelyBlocking;40,1512
    std::vector<SUnit*> Queue;43,1590
    latency_sort Picker;44,1621
    LatencyPriorityQueue(47,1657
    bool isBottomUp(50,1708
    void initNodes(52,1764
    void addNode(57,1909
    void updateNode(61,2017
    void releaseState(64,2072
    unsigned getLatency(68,2138
    unsigned getNumSolelyBlockNodes(73,2282
    bool empty(78,2452

/usr/include/llvm/CodeGen/LazyMachineBlockFrequencyInfo.h,444
#define LLVM_CODEGEN_LAZYMACHINEBLOCKFREQUENCYINFO_H17,798
class LazyMachineBlockFrequencyInfoPass 37,1688
  mutable std::unique_ptr<MachineBlockFrequencyInfo> OwnedMBFI;40,1821
  mutable std::unique_ptr<MachineLoopInfo> OwnedMLI;43,1939
  mutable std::unique_ptr<MachineDominatorTree> OwnedMDT;46,2046
  static char ID;56,2322
  MachineBlockFrequencyInfo &getBFI(getBFI61,2429
  const MachineBlockFrequencyInfo &getBFI(getBFI64,2554

/usr/include/llvm/CodeGen/LexicalScopes.h,2213
#define LLVM_CODEGEN_LEXICALSCOPES_H17,656
class LexicalScope 44,1432
  LexicalScope(46,1461
  LexicalScope *getParent(getParent60,1999
  const MDNode *getDesc(getDesc61,2052
  const DILocation *getInlinedAt(getInlinedAt62,2101
  const DILocalScope *getScopeNode(getScopeNode63,2172
  bool isAbstractScope(64,2232
  SmallVectorImpl<LexicalScope *> &getChildren(getChildren65,2289
  SmallVectorImpl<InsnRange> &getRanges(getRanges66,2359
  void addChild(69,2457
  void openInsnRange(72,2594
  void extendInsnRange(82,2828
  void closeInsnRange(92,3186
  bool dominates(104,3668
  unsigned getDFSOut(113,3933
  void setDFSOut(114,3981
  unsigned getDFSIn(115,4026
  void setDFSIn(116,4072
  LexicalScope *Parent;Parent122,4200
  const DILocalScope *Desc;Desc123,4272
  const DILocation *InlinedAtLocation;InlinedAtLocation124,4345
  bool AbstractScope;126,4486
  SmallVector<SmallVector127,4551
  SmallVector<LexicalScope *, 4> Children;127,4551
  SmallVector<SmallVector129,4696
  SmallVector<InsnRange, 4> Ranges;129,4696
class LexicalScopes 141,5202
  bool empty(153,5555
  LexicalScope *getCurrentFunctionScope(getCurrentFunctionScope156,5695
  ArrayRef<LexicalScope *> getAbstractScopesList(175,6559
  LexicalScope *findAbstractScope(findAbstractScope180,6719
  LexicalScope *findInlinedScope(findInlinedScope186,6964
  LexicalScope *findLexicalScope(findLexicalScope192,7251
  LexicalScope *getOrCreateLexicalScope(getOrCreateLexicalScope205,7837
  const MachineFunction *MF MF226,8821
  std::unordered_map<std::unordered_map230,9003
  std::unordered_map<const DILocalScope *, LexicalScope> LexicalScopeMap;230,9003
  std::unordered_map<std::unordered_map234,9167
      InlinedLexicalScopeMap;237,9350
  std::unordered_map<std::unordered_map241,9529
  std::unordered_map<const DILocalScope *, LexicalScope> AbstractScopeMap;241,9529
  SmallVector<SmallVector245,9702
  SmallVector<LexicalScope *, 4> AbstractScopesList;245,9702
  LexicalScope *CurrentFnLexicalScope CurrentFnLexicalScope249,9834
  using BlockSetT 253,10023
  DenseMap<DenseMap254,10086
  DenseMap<const DILocation *, std::unique_ptr<BlockSetT>> DominatedBlocks;254,10086

/usr/include/llvm/CodeGen/LinkAllAsmWriterComponents.h,130
#define LLVM_CODEGEN_LINKALLASMWRITERCOMPONENTS_H15,624
  struct ForceAsmWriterLinking 21,739
    ForceAsmWriterLinking(22,772

/usr/include/llvm/CodeGen/LiveIntervalCalc.h,168
#define LLVM_CODEGEN_LIVEINTERVALCALC_H18,875
class LiveIntervalCalc 28,1086
  void extendToUses(39,1720
  void createDeadDefs(48,2060
  void extendToUses(54,2306

/usr/include/llvm/CodeGen/LiveIntervalUnion.h,1021
#define LLVM_CODEGEN_LIVEINTERVALUNION_H17,736
class LiveIntervalUnion 42,1468
  LiveSegments Segments;62,2276
  explicit LiveIntervalUnion(65,2344
  SegmentIter begin(69,2516
  SegmentIter end(70,2567
  SegmentIter find(71,2614
  ConstSegmentIter begin(72,2675
  ConstSegmentIter end(73,2737
  ConstSegmentIter find(74,2795
  bool empty(76,2868
  SlotIndex startIndex(77,2918
  SlotIndex endIndex(78,2978
  const Map &getMap(getMap82,3141
  unsigned getTag(85,3272
  bool changedSince(88,3395
  void clear(97,3776
  class Query 112,4303
    LiveRange::const_iterator LRI;115,4404
    ConstSegmentIter LiveUnionI;116,4468
    SmallVector<SmallVector117,4539
    SmallVector<const LiveInterval *, 4> InterferingVRegs;117,4539
    Query(132,5106
    void reset(137,5287
    void init(148,5633
    bool checkInterference(159,6073
    const SmallVectorImpl<const LiveInterval *> &interferingVRegs(interferingVRegs162,6194
  class Array 171,6550
    ~Array(177,6662
    unsigned size(183,6858

/usr/include/llvm/CodeGen/LiveRangeCalc.h,842
#define LLVM_CODEGEN_LIVERANGECALC_H24,1131
class LiveRangeCalc 45,1678
  BitVector Seen;63,2525
  using EntryInfoMap = DenseMap<LiveRange *, std::pair<std::pair76,3319
  EntryInfoMap EntryInfos;77,3398
  LiveOutMap Map;96,4146
  struct LiveInBlock 100,4309
    LiveRange &LR;LR103,4476
    MachineDomTreeNode *DomNode;DomNode107,4629
    SlotIndex Kill;112,4889
    LiveInBlock(117,5002
  SmallVector<SmallVector125,5393
  SmallVector<LiveInBlock, 16> LiveIn;125,5393
  const MachineFunction *getMachineFunction(getMachineFunction166,7259
  const MachineRegisterInfo *getRegInfo(getRegInfo167,7320
  SlotIndexes *getIndexes(getIndexes168,7384
  MachineDominatorTree *getDomTree(getDomTree169,7432
  VNInfo::Allocator *getVNAlloc(getVNAlloc170,7489
  void setLiveOutValue(229,9901
  void addLiveInBlock(243,10580

/usr/include/llvm/CodeGen/LiveRangeEdit.h,1770
#define LLVM_CODEGEN_LIVERANGEEDIT_H18,734
class LiveRangeEdit 42,1349
  class Delegate 45,1468
    virtual void anchor(46,1487
    virtual void LRE_WillEraseInstruction(52,1631
    virtual bool LRE_CanEraseVirtReg(56,1816
    virtual void LRE_WillShrinkVirtReg(59,1951
    virtual void LRE_DidCloneVirtReg(63,2134
  const LiveInterval *const Parent;67,2217
  SmallVectorImpl<Register> &NewRegs;NewRegs68,2253
  MachineRegisterInfo &MRI;MRI69,2291
  LiveIntervals &LIS;LIS70,2319
  VirtRegMap *VRM;VRM71,2341
  const TargetInstrInfo &TII;TII72,2360
  Delegate *const TheDelegate;73,2390
  const unsigned FirstNew;76,2485
  SmallPtrSet<MachineInstr MachineInstr83,2780
  SmallPtrSet<MachineInstr *, 32> *DeadRemats;DeadRemats83,2780
  SmallPtrSet<const VNInfo 87,2947
  SmallPtrSet<const VNInfo *, 4> Remattable;87,2947
  SmallPtrSet<const VNInfo 91,3118
  SmallPtrSet<const VNInfo *, 4> Rematted;91,3118
  void scanRemattable(94,3236
  bool foldAsLoad(98,3413
  void eliminateDeadDef(103,3584
  void MRI_NoteNewVirtualRegister(107,3742
  ~LiveRangeEdit(138,5476
  const LiveInterval &getParent(getParent140,5534
  Register getReg(145,5649
  iterator begin(149,5835
  iterator end(150,5899
  unsigned size(151,5948
  bool empty(152,6010
  Register get(153,6055
  void pop_back(163,6677
  ArrayRef<Register> regs(165,6720
  Register createFrom(168,6867
  LiveInterval &createEmptyInterval(createEmptyInterval172,7000
  Register create(176,7097
  bool anyRematerializable(181,7321
  bool checkRematerializable(185,7478
  struct Remat 188,7623
    const VNInfo *const ParentVNI;189,7640
    explicit Remat(193,7864
  bool allUsesAvailableAt(198,8078
  void markRematerialized(220,9295
  bool didRematerialize(225,9464

/usr/include/llvm/CodeGen/LiveRegMatrix.h,510
#define LLVM_CODEGEN_LIVEREGMATRIX_H24,1191
class LiveRegMatrix 40,1518
  LiveIntervalUnion::Allocator LIUAlloc;49,1840
  LiveIntervalUnion::Array Matrix;50,1881
  std::unique_ptr<LiveIntervalUnion::Query[]> Queries;53,1956
  BitVector RegMaskUsable;58,2115
  static char ID;66,2337
  void invalidateVirtRegs(81,2850
  enum InterferenceKind 83,2894
    IK_Free 85,2966
    IK_VirtReg,90,3197
    IK_RegUnit,95,3404
    IK_RegMask100,3649
  LiveIntervalUnion *getLiveUnions(getLiveUnions157,6394

/usr/include/llvm/CodeGen/LiveStacks.h,710
#define LLVM_CODEGEN_LIVESTACKS_H16,667
class LiveStacks 35,1062
  VNInfo::Allocator VNInfoAllocator;40,1223
  SS2IntervalMap S2IMap;44,1385
  std::map<std::map47,1473
  std::map<int, const TargetRegisterClass *> S2RCMap;47,1473
  static char ID;50,1536
  LiveStacks(52,1602
  const_iterator begin(59,1817
  const_iterator end(60,1875
  iterator begin(61,1929
  iterator end(62,1975
  unsigned getNumIntervals(64,2018
  LiveInterval &getInterval(getInterval68,2169
  const LiveInterval &getInterval(getInterval75,2422
  bool hasInterval(82,2693
  const TargetRegisterClass *getIntervalRegClass(getIntervalRegClass84,2760
  VNInfo::Allocator &getVNInfoAllocator(getVNInfoAllocator93,3106

/usr/include/llvm/CodeGen/LoopTraversal.h,394
#define LLVM_CODEGEN_LOOPTRAVERSAL_H19,802
class LoopTraversal 65,2860
  struct MBBInfo 67,2891
  MBBInfoMap MBBInfos;84,3510
  struct TraversedMBBInfo 87,3542
    TraversedMBBInfo(97,3831
  typedef SmallVector<TraversedMBBInfo,TraversedMBBInfo105,4186
  typedef SmallVector<TraversedMBBInfo, 4> TraversalOrder;105,4186
  TraversalOrder traverse(106,4245
  bool isBlockDone(110,4380

/usr/include/llvm/CodeGen/LowLevelTypeUtils.h,48
#define LLVM_CODEGEN_LOWLEVELTYPEUTILS_H17,680

/usr/include/llvm/CodeGen/MIRFSDiscriminator.h,448
#define LLVM_CODEGEN_MIRFSDISCRIMINATOR_H18,813
class MIRAddFSDiscriminators 32,1125
  FSDiscriminatorPass Pass;34,1218
  unsigned LowBit;35,1246
  unsigned HighBit;36,1265
  static char ID;39,1294
  MIRAddFSDiscriminators(41,1384
  StringRef getPassName(48,1653
  unsigned getNumFSBBs(53,1821
  uint64_t getNumFSSamples(57,1942
  const MachineFunction *getMachineFunction(getMachineFunction60,2037
  bool runOnMachineFunction(63,2114

/usr/include/llvm/CodeGen/MIRPrinter.h,41
#define LLVM_CODEGEN_MIRPRINTER_H15,619

/usr/include/llvm/CodeGen/MIRSampleProfile.h,520
#define LLVM_CODEGEN_MIRSAMPLEPROFILE_H15,626
using namespace sampleprof;34,1026
class MIRProfileLoaderPass 37,1079
  MachineFunction *MF;MF38,1137
  std::string ProfileFileName;39,1160
  FSDiscriminatorPass P;40,1191
  unsigned LowBit;41,1216
  unsigned HighBit;42,1235
  static char ID;45,1264
  const MachineFunction *getMachineFunction(getMachineFunction53,1665
  StringRef getPassName(55,1733
  std::unique_ptr<MIRProfileLoader> MIRSampleLoader;63,2018
  MachineBlockFrequencyInfo *MBFI;MBFI65,2128

/usr/include/llvm/CodeGen/MachORelocation.h,462
#define LLVM_CODEGEN_MACHORELOCATION_H15,545
  class MachORelocation 24,790
    uint32_t r_address;25,816
    uint32_t r_symbolnum;26,895
    bool     r_pcrel;27,973
    uint8_t  r_length;28,1036
    bool     r_extern;29,1087
    uint8_t  r_type;30,1116
    bool     r_scattered;31,1189
    int32_t  r_value;32,1251
    uint32_t getPackedFields(35,1371
    uint32_t getAddress(43,1700
    uint32_t getRawAddress(44,1778
    MachORelocation(46,1836

/usr/include/llvm/CodeGen/MachineBranchProbabilityInfo.h,279
#define LLVM_CODEGEN_MACHINEBRANCHPROBABILITYINFO_H14,587
class MachineBranchProbabilityInfo 22,770
  virtual void anchor(23,830
  static char ID;34,1379
  MachineBranchProbabilityInfo(36,1398
  void getAnalysisUsage(38,1433
  BranchProbability getEdgeProbability(43,1554

/usr/include/llvm/CodeGen/MachineCFGPrinter.h,653
class DOTMachineFuncInfo 20,724
  const MachineFunction *F;F22,760
  DOTMachineFuncInfo(25,797
  const MachineFunction *getFunction(getFunction27,855
struct GraphTraits<GraphTraits31,936
  static NodeRef getEntryNode(33,1031
  using nodes_iterator 38,1220
  static nodes_iterator nodes_begin(40,1297
  static nodes_iterator nodes_end(44,1429
  static size_t size(48,1557
struct DOTGraphTraits<DOTGraphTraits54,1672
  DOTGraphTraits(56,1750
  static void eraseComment(58,1828
  static std::string getSimpleNodeLabel(63,1979
          HandleComment 75,2540
  std::string getNodeLabel(79,2662
  static std::string getGraphName(87,2900

/usr/include/llvm/CodeGen/MachineCombinerPattern.h,4071
#define LLVM_CODEGEN_MACHINECOMBINERPATTERN_H15,601
enum class MachineCombinerPattern 20,739
  REASSOC_AX_BY,23,932
  REASSOC_AX_YB,24,949
  REASSOC_XA_BY,25,966
  REASSOC_XA_YB,26,983
  REASSOC_XY_AMM_BMM,29,1075
  REASSOC_XMM_AMM_BMM,30,1097
  REASSOC_XY_BCA,34,1230
  REASSOC_XY_BAC,35,1248
  SUBADD_OP1,38,1338
  SUBADD_OP2,39,1352
  MULADDW_OP1,42,1445
  MULADDW_OP2,43,1460
  MULSUBW_OP1,44,1475
  MULSUBW_OP2,45,1490
  MULADDWI_OP1,46,1505
  MULSUBWI_OP1,47,1521
  MULADDX_OP1,48,1537
  MULADDX_OP2,49,1552
  MULSUBX_OP1,50,1567
  MULSUBX_OP2,51,1582
  MULADDXI_OP1,52,1597
  MULSUBXI_OP1,53,1613
  MULADDv8i8_OP1,55,1656
  MULADDv8i8_OP2,56,1674
  MULADDv16i8_OP1,57,1692
  MULADDv16i8_OP2,58,1711
  MULADDv4i16_OP1,59,1730
  MULADDv4i16_OP2,60,1749
  MULADDv8i16_OP1,61,1768
  MULADDv8i16_OP2,62,1787
  MULADDv2i32_OP1,63,1806
  MULADDv2i32_OP2,64,1825
  MULADDv4i32_OP1,65,1844
  MULADDv4i32_OP2,66,1863
  MULSUBv8i8_OP1,68,1883
  MULSUBv8i8_OP2,69,1901
  MULSUBv16i8_OP1,70,1919
  MULSUBv16i8_OP2,71,1938
  MULSUBv4i16_OP1,72,1957
  MULSUBv4i16_OP2,73,1976
  MULSUBv8i16_OP1,74,1995
  MULSUBv8i16_OP2,75,2014
  MULSUBv2i32_OP1,76,2033
  MULSUBv2i32_OP2,77,2052
  MULSUBv4i32_OP1,78,2071
  MULSUBv4i32_OP2,79,2090
  MULADDv4i16_indexed_OP1,81,2110
  MULADDv4i16_indexed_OP2,82,2137
  MULADDv8i16_indexed_OP1,83,2164
  MULADDv8i16_indexed_OP2,84,2191
  MULADDv2i32_indexed_OP1,85,2218
  MULADDv2i32_indexed_OP2,86,2245
  MULADDv4i32_indexed_OP1,87,2272
  MULADDv4i32_indexed_OP2,88,2299
  MULSUBv4i16_indexed_OP1,90,2327
  MULSUBv4i16_indexed_OP2,91,2354
  MULSUBv8i16_indexed_OP1,92,2381
  MULSUBv8i16_indexed_OP2,93,2408
  MULSUBv2i32_indexed_OP1,94,2435
  MULSUBv2i32_indexed_OP2,95,2462
  MULSUBv4i32_indexed_OP1,96,2489
  MULSUBv4i32_indexed_OP2,97,2516
  FMULADDH_OP1,100,2564
  FMULADDH_OP2,101,2580
  FMULSUBH_OP1,102,2596
  FMULSUBH_OP2,103,2612
  FMULADDS_OP1,104,2628
  FMULADDS_OP2,105,2644
  FMULSUBS_OP1,106,2660
  FMULSUBS_OP2,107,2676
  FMULADDD_OP1,108,2692
  FMULADDD_OP2,109,2708
  FMULSUBD_OP1,110,2724
  FMULSUBD_OP2,111,2740
  FNMULSUBH_OP1,112,2756
  FNMULSUBS_OP1,113,2773
  FNMULSUBD_OP1,114,2790
  FMLAv1i32_indexed_OP1,115,2807
  FMLAv1i32_indexed_OP2,116,2832
  FMLAv1i64_indexed_OP1,117,2857
  FMLAv1i64_indexed_OP2,118,2882
  FMLAv4f16_OP1,119,2907
  FMLAv4f16_OP2,120,2924
  FMLAv8f16_OP1,121,2941
  FMLAv8f16_OP2,122,2958
  FMLAv2f32_OP2,123,2975
  FMLAv2f32_OP1,124,2992
  FMLAv2f64_OP1,125,3009
  FMLAv2f64_OP2,126,3026
  FMLAv4i16_indexed_OP1,127,3043
  FMLAv4i16_indexed_OP2,128,3068
  FMLAv8i16_indexed_OP1,129,3093
  FMLAv8i16_indexed_OP2,130,3118
  FMLAv2i32_indexed_OP1,131,3143
  FMLAv2i32_indexed_OP2,132,3168
  FMLAv2i64_indexed_OP1,133,3193
  FMLAv2i64_indexed_OP2,134,3218
  FMLAv4f32_OP1,135,3243
  FMLAv4f32_OP2,136,3260
  FMLAv4i32_indexed_OP1,137,3277
  FMLAv4i32_indexed_OP2,138,3302
  FMLSv1i32_indexed_OP2,139,3327
  FMLSv1i64_indexed_OP2,140,3352
  FMLSv4f16_OP1,141,3377
  FMLSv4f16_OP2,142,3394
  FMLSv8f16_OP1,143,3411
  FMLSv8f16_OP2,144,3428
  FMLSv2f32_OP1,145,3445
  FMLSv2f32_OP2,146,3462
  FMLSv2f64_OP1,147,3479
  FMLSv2f64_OP2,148,3496
  FMLSv4i16_indexed_OP1,149,3513
  FMLSv4i16_indexed_OP2,150,3538
  FMLSv8i16_indexed_OP1,151,3563
  FMLSv8i16_indexed_OP2,152,3588
  FMLSv2i32_indexed_OP1,153,3613
  FMLSv2i32_indexed_OP2,154,3638
  FMLSv2i64_indexed_OP1,155,3663
  FMLSv2i64_indexed_OP2,156,3688
  FMLSv4f32_OP1,157,3713
  FMLSv4f32_OP2,158,3730
  FMLSv4i32_indexed_OP1,159,3747
  FMLSv4i32_indexed_OP2,160,3772
  FMULv2i32_indexed_OP1,162,3798
  FMULv2i32_indexed_OP2,163,3823
  FMULv2i64_indexed_OP1,164,3848
  FMULv2i64_indexed_OP2,165,3873
  FMULv4i16_indexed_OP1,166,3898
  FMULv4i16_indexed_OP2,167,3923
  FMULv4i32_indexed_OP1,168,3948
  FMULv4i32_indexed_OP2,169,3973
  FMULv8i16_indexed_OP1,170,3998
  FMULv8i16_indexed_OP2,171,4023
  FMADD_AX,174,4090
  FMADD_XA,175,4102
  FMSUB,176,4114
  FNMSUB,177,4123
  DPWSSD,180,4148
  FNMADD,182,4159

/usr/include/llvm/CodeGen/MachineConstantPool.h,1129
#define LLVM_CODEGEN_MACHINECONSTANTPOOL_H16,655
class MachineConstantPoolValue 35,1056
  virtual void anchor(36,1089
  Type *Ty;Ty38,1115
  explicit MachineConstantPoolValue(41,1136
  Type *getType(getType44,1244
  virtual unsigned getSizeInBytes(46,1284
class MachineConstantPoolEntry 67,1981
    const Constant *ConstVal;ConstVal71,2059
    MachineConstantPoolValue *MachineCPVal;MachineCPVal72,2089
  } Val;73,2133
  Align Alignment;76,2188
  bool IsMachineConstantPoolEntry;78,2208
  MachineConstantPoolEntry(80,2244
  MachineConstantPoolEntry(85,2384
  bool isMachineConstantPoolEntry(93,2707
  Align getAlign(95,2789
class MachineConstantPool 117,3804
  Align PoolAlignment;118,3832
  std::vector<MachineConstantPoolEntry> Constants;119,3888
  DenseSet<MachineConstantPoolValue*> MachineCPVsSharingEntries;121,4046
  const DataLayout &DL;DL122,4111
  const DataLayout &getDataLayout(getDataLayout124,4136
  explicit MachineConstantPool(128,4230
  Align getConstantPoolAlign(134,4460
  bool isEmpty(143,4920
  const std::vector<MachineConstantPoolEntry> &getConstants(getConstants145,4974

/usr/include/llvm/CodeGen/MachineDominanceFrontier.h,1115
#define LLVM_CODEGEN_MACHINEDOMINANCEFRONTIER_H10,418
class MachineDominanceFrontier 20,711
  ForwardDominanceFrontierBase<MachineBasicBlock> Base;21,773
 using DomSetType = DominanceFrontierBase<MachineBasicBlock, false>::DomSetType;DomSetType26,946
 using iterator = DominanceFrontierBase<MachineBasicBlock, false>::iterator;iterator27,1027
     DominanceFrontierBase<MachineBasicBlock, false>::const_iterator;const_iterator29,1128
 static char ID;34,1351
 MachineDominanceFrontier(36,1369
 ForwardDominanceFrontierBase<MachineBasicBlock> &getBase(getBase38,1399
 const SmallVectorImpl<MachineBasicBlock *> &getRoots(getRoots40,1477
  MachineBasicBlock *getRoot(getRoot44,1573
  bool isPostDominator(48,1644
  iterator begin(52,1717
  const_iterator begin(56,1768
  iterator end(60,1831
  const_iterator end(64,1878
  iterator find(68,1937
  const_iterator find(72,2007
  iterator addBasicBlock(76,2089
  void removeBlock(80,2217
  void addToFrontier(84,2299
  void removeFromFrontier(88,2404
  bool compareDomSet(92,2519
  bool compare(96,2634
  bool runOnMachineFunction(100,2750

/usr/include/llvm/CodeGen/MachineDominators.h,1790
#define LLVM_CODEGEN_MACHINEDOMINATORS_H15,641
using MachineDomTree 44,1516
using MachineDomTreeNode 45,1571
class MachineDominatorTree 51,1800
  struct CriticalEdge 54,1963
    MachineBasicBlock *FromBB;FromBB55,1987
    MachineBasicBlock *ToBB;ToBB56,2018
    MachineBasicBlock *NewBB;NewBB57,2047
  mutable SmallVector<SmallVector63,2264
  mutable SmallVector<CriticalEdge, 32> CriticalEdgesToSplit;63,2264
  mutable SmallSet<SmallSet71,2640
  mutable SmallSet<MachineBasicBlock *, 32> NewBBs;71,2640
  std::unique_ptr<MachineDomTree> DT;74,2770
  static char ID;84,3082
  explicit MachineDominatorTree(87,3162
  MachineDomTree &getBase(getBase91,3267
  MachineBasicBlock *getRoot(getRoot100,3460
  MachineDomTreeNode *getRootNode(getRootNode105,3561
  bool dominates(114,3769
  void getDescendants(120,3937
  bool dominates(126,4122
  bool dominates(133,4406
  bool properlyDominates(146,4832
  bool properlyDominates(152,5024
  MachineBasicBlock *findNearestCommonDominator(findNearestCommonDominator160,5366
  MachineDomTreeNode *getNode(getNode174,5869
  MachineDomTreeNode *addNewBlock(addNewBlock182,6198
  void changeImmediateDominator(191,6541
  void changeImmediateDominator(197,6739
  void eraseNode(206,7166
  void splitBlock(213,7380
  bool isReachableFromEntry(220,7604
  void recordSplitCriticalEdge(243,8502
struct MachineDomTreeGraphTraitsBase 260,9114
  using NodeRef 261,9153
  using ChildIteratorType 262,9179
  static NodeRef getEntryNode(264,9223
  static ChildIteratorType child_begin(265,9278
  static ChildIteratorType child_end(266,9351
struct GraphTraits<GraphTraits272,9476
struct GraphTraits<GraphTraits278,9677
template <> struct GraphTraits<GraphTraits283,9878
  static NodeRef getEntryNode(285,9979

/usr/include/llvm/CodeGen/MachineFrameInfo.h,6019
#define LLVM_CODEGEN_MACHINEFRAMEINFO_H14,545
class CalleeSavedInfo 34,1153
  Register Reg;35,1177
    int FrameIdx;37,1203
    unsigned DstReg;38,1221
  explicit CalleeSavedInfo(58,2292
  Register getReg(61,2386
  int getFrameIdx(62,2451
  unsigned getDstReg(63,2521
  void setFrameIdx(64,2589
  void setDstReg(68,2667
  bool isRestored(72,2757
  void setRestored(73,2827
  bool isSpilledToReg(74,2894
class MachineFrameInfo 106,4623
  enum SSPLayoutKind 110,4787
    SSPLK_None,111,4810
    SSPLK_LargeArray,113,4926
    SSPLK_SmallArray,115,5055
    SSPLK_AddrOf 117,5186
  struct StackObject 123,5409
    int64_t SPOffset;126,5578
    uint64_t Size;130,5713
    Align Alignment;133,5783
    bool isImmutable;138,6007
    bool isSpillSlot;142,6134
    uint8_t StackID;160,7062
    const AllocaInst *Alloca;Alloca164,7220
    bool isAliased;174,7686
    StackObject(184,7900
  Align StackAlignment;193,8331
  bool StackRealignable;206,9129
  bool ForcedRealign;209,9215
  std::vector<StackObject> Objects;212,9281
  unsigned NumFixedObjects 217,9531
  bool HasVarSizedObjects 221,9664
  bool FrameAddressTaken 225,9796
  bool ReturnAddressTaken 229,9928
  bool HasStackMap 233,10069
  bool HasPatchPoint 237,10205
  uint64_t StackSize 243,10505
  int OffsetAdjustment 254,11184
  Align MaxAlignment;263,11604
  bool AdjustsStack 268,11798
  bool HasCalls 271,11887
  int StackProtectorIdx 274,11960
  int FunctionContextIdx 277,12065
  unsigned MaxCallFrameSize 283,12398
  unsigned CVBytesOfCalleeSavedRegisters 287,12585
  std::vector<CalleeSavedInfo> CSInfo;293,12902
  bool CSIValid 296,12973
  SmallVector<SmallVector300,13119
  SmallVector<std::pair<int, int64_t>, 32> LocalFrameObjects;300,13119
  int64_t LocalFrameSize 303,13233
  Align LocalFrameMaxAlign;307,13375
  bool UseLocalStackAllocationBlock 312,13589
  bool HasOpaqueSPAdjustment 316,13770
  bool HasCopyImplyingStackAdjustment 320,13936
  bool HasVAStart 323,14058
  bool HasMustTailInVarArgFunc 326,14158
  bool HasTailCall 331,14426
  MachineBasicBlock *Save Save334,14529
  MachineBasicBlock *Restore Restore336,14640
  uint64_t UnsafeStackSize 339,14717
  explicit MachineFrameInfo(342,14758
  bool hasStackObjects(350,15119
  bool hasVarSizedObjects(355,15360
  int getStackProtectorIndex(358,15481
  void setStackProtectorIndex(359,15548
  bool hasStackProtectorIndex(360,15612
  int getFunctionContextIndex(364,15790
  void setFunctionContextIndex(365,15859
  bool hasFunctionContextIndex(366,15925
  bool isFrameAddressTaken(371,16168
  void setFrameAddressIsTaken(372,16233
  bool isReturnAddressTaken(377,16466
  void setReturnAddressIsTaken(378,16533
  bool hasStackMap(383,16767
  void setHasStackMap(384,16818
  bool hasPatchPoint(389,17045
  void setHasPatchPoint(390,17100
  bool needsSplitStackProlog(402,17815
  int getObjectIndexBegin(407,17953
  int getObjectIndexEnd(410,18071
  unsigned getNumFixedObjects(413,18194
  unsigned getNumObjects(416,18297
  void mapLocalFrameObject(419,18410
  std::pair<std::pair425,18676
  std::pair<int, int64_t> getLocalFrameObjectMap(425,18676
  int64_t getLocalFrameObjectCount(432,18964
  void setLocalFrameSize(435,19090
  int64_t getLocalFrameSize(438,19198
  void setLocalFrameMaxAlign(442,19373
  Align getLocalFrameMaxAlign(447,19524
  bool getUseLocalStackAllocationBlock(451,19720
  void setUseLocalStackAllocationBlock(458,19981
  bool isObjectPreAllocated(463,20145
  int64_t getObjectSize(470,20410
  void setObjectSize(477,20669
  Align getObjectAlign(484,20938
  bool contributesToMaxAlignment(491,21210
  void setObjectAlignment(497,21447
  const AllocaInst* getObjectAllocation(510,21994
  void clearObjectAllocation(518,22367
  int64_t getObjectOffset(526,22683
  bool isObjectZExt(534,22994
  void setObjectZExt(540,23198
  bool isObjectSExt(546,23412
  void setObjectSExt(552,23616
  void setObjectOffset(560,23964
  SSPLayoutKind getObjectSSPLayout(568,24288
  void setObjectSSPLayout(574,24525
  uint64_t getStackSize(585,25055
  void setStackSize(588,25143
  int getOffsetAdjustment(594,25367
  void setOffsetAdjustment(597,25475
  Align getMaxAlign(601,25695
  bool adjustsStack(609,26027
  void setAdjustsStack(610,26080
  bool hasCalls(613,26200
  void setHasCalls(614,26245
  bool hasOpaqueSPAdjustment(617,26369
  void setHasOpaqueSPAdjustment(618,26440
  bool hasCopyImplyingStackAdjustment(622,26647
  void setHasCopyImplyingStackAdjustment(625,26742
  bool hasVAStart(630,26908
  void setHasVAStart(631,26957
  bool hasMustTailInVarArgFunc(634,27084
  void setHasMustTailInVarArgFunc(635,27159
  bool hasTailCall(638,27292
  void setHasTailCall(639,27343
  unsigned getMaxCallFrameSize(654,28091
  bool isMaxCallFrameSizeComputed(661,28359
  void setMaxCallFrameSize(664,28443
  unsigned getCVBytesOfCalleeSavedRegisters(668,28631
  void setCVBytesOfCalleeSavedRegisters(671,28731
  bool isFixedObjectIndex(688,29540
  bool isAliasedObjectIndex(694,29779
  bool isImmutableObjectIndex(701,30072
  void setIsImmutableObjectIndex(711,30443
  bool isSpillSlotObjectIndex(718,30755
  bool isStatepointSpillSlotObjectIndex(724,30974
  uint8_t getStackID(731,31232
  void setStackID(736,31355
  bool isDeadObjectIndex(745,31765
  bool isVariableSizedObjectIndex(753,32069
  void markAsStatepointSpillSlotObjectIndex(759,32294
  void RemoveStackObject(776,33125
  const std::vector<CalleeSavedInfo> &getCalleeSavedInfo(getCalleeSavedInfo787,33620
  std::vector<CalleeSavedInfo> &getCalleeSavedInfo(getCalleeSavedInfo791,33746
  void setCalleeSavedInfo(795,33910
  bool isCalleeSavedInfoValid(800,34059
  void setCalleeSavedInfoValid(802,34119
  MachineBasicBlock *getSavePoint(getSavePoint804,34177
  void setSavePoint(805,34236
  MachineBasicBlock *getRestorePoint(getRestorePoint806,34304
  void setRestorePoint(807,34369
  uint64_t getUnsafeStackSize(809,34450
  void setUnsafeStackSize(810,34516

/usr/include/llvm/CodeGen/MachineFunctionPass.h,534
#define LLVM_CODEGEN_MACHINEFUNCTIONPASS_H19,937
class MachineFunctionPass 30,1318
  bool doInitialization(32,1376
  explicit MachineFunctionPass(41,1706
  void getAnalysisUsage(54,2202
  virtual MachineFunctionProperties getSetProperties(59,2374
  virtual MachineFunctionProperties getClearedProperties(62,2481
  MachineFunctionProperties RequiredProperties;67,2602
  MachineFunctionProperties SetProperties;68,2650
  MachineFunctionProperties ClearedProperties;69,2693
  Pass *createPrinterPass(createPrinterPass72,2804

/usr/include/llvm/CodeGen/MachineInstrBundle.h,1543
#define LLVM_CODEGEN_MACHINEINSTRBUNDLE_H15,584
inline MachineBasicBlock::const_instr_iterator getBundleStart(52,2225
inline MachineBasicBlock::instr_iterator getBundleEnd(60,2462
inline MachineBasicBlock::const_instr_iterator getBundleEnd(69,2692
class MIBundleOperandIteratorBase94,3359
  MachineBasicBlock::instr_iterator InstrI,97,3535
  MachineBasicBlock::instr_iterator InstrI, InstrE;97,3535
  MachineInstr::mop_iterator OpI,98,3587
  MachineInstr::mop_iterator OpI, OpE;98,3587
  void advance(102,3740
  explicit MIBundleOperandIteratorBase(120,4270
  explicit MIBundleOperandIteratorBase(130,4643
  bool isValid(136,4937
  void operator++(139,5031
  ValueT &operator*(operator*145,5162
  ValueT *operator->(operator->146,5207
  bool operator==(operator==148,5255
  unsigned getOperandNo(158,5765
class MIBundleOperands 166,5944
  MIBundleOperands(168,6081
  MIBundleOperands(173,6254
  static MIBundleOperands end(176,6380
class ConstMIBundleOperands185,6698
  ConstMIBundleOperands(189,6851
  ConstMIBundleOperands(194,7034
  static ConstMIBundleOperands end(198,7205
const_mi_bundle_ops(205,7468
inline iterator_range<MIBundleOperands> mi_bundle_ops(210,7630
struct VirtRegInfo 218,7900
  bool Reads;221,8063
  bool Writes;224,8142
  bool Tied;229,8332
struct PhysRegInfo 253,9317
  bool Clobbered;256,9444
  bool Defined;260,9566
  bool FullyDefined;263,9671
  bool Read;267,9781
  bool FullyRead;269,9860
  bool DeadDef;275,10052
  bool PartialDeadDef;279,10153
  bool Killed;282,10253

/usr/include/llvm/CodeGen/MachineInstrBundleIterator.h,2367
#define LLVM_CODEGEN_MACHINEINSTRBUNDLEITERATOR_H14,563
  using list_type 32,1232
  using instr_iterator 33,1300
  using nonconst_instr_iterator 34,1363
  using const_instr_iterator 35,1435
  using list_type 38,1590
  using instr_iterator 39,1658
  using nonconst_instr_iterator 40,1719
  using const_instr_iterator 41,1783
  using list_type 44,1929
  using instr_iterator 45,1997
  using nonconst_instr_iterator 46,2066
  using const_instr_iterator 47,2138
template <> struct MachineInstrBundleIteratorHelper<MachineInstrBundleIteratorHelper51,2284
  template <class Iterator> static Iterator getBundleBegin(53,2392
  template <class Iterator> static Iterator getBundleFinal(61,2602
  template <class Iterator> static void increment(69,2804
  template <class Iterator> static void decrement(74,2952
template <> struct MachineInstrBundleIteratorHelper<MachineInstrBundleIteratorHelper79,3063
  template <class Iterator> static Iterator getBundleBegin(81,3170
  template <class Iterator> static Iterator getBundleFinal(88,3418
  template <class Iterator> static void increment(95,3658
  template <class Iterator> static void decrement(100,3806
template <typename Ty,107,4042
template <typename Ty, bool IsReverse 107,4042
  reference operator*(178,7143
  pointer operator->(179,7190
  friend bool operator==(operator==184,7320
  friend bool operator==(operator==188,7477
  friend bool operator==(operator==192,7664
  friend bool operator==(operator==196,7851
  friend bool operator==(operator==200,8041
  friend bool operator==(operator==204,8231
  friend bool operator==(operator==207,8397
  friend bool operator==(operator==210,8563
  friend bool operator==(operator==214,8735
  friend bool operator!=(operator!=219,8908
  friend bool operator!=(operator!=223,9060
  friend bool operator!=(operator!=227,9206
  friend bool operator!=(operator!=231,9352
  friend bool operator!=(operator!=235,9501
  friend bool operator!=(operator!=239,9650
  friend bool operator!=(operator!=242,9757
  friend bool operator!=(operator!=245,9864
  friend bool operator!=(operator!=249,9998
  MachineInstrBundleIterator &operator--(operator--255,10175
  MachineInstrBundleIterator &operator++(operator++259,10268
  MachineInstrBundleIterator operator--(263,10361
  MachineInstrBundleIterator operator++(268,10487

/usr/include/llvm/CodeGen/MachineLoopUtils.h,117
#define LLVM_CODEGEN_MACHINELOOPUTILS_H10,410
enum LoopPeelDirection 17,544
  LPD_Front,18,569
  LPD_Back 19,625

/usr/include/llvm/CodeGen/MachineModuleInfo.h,1592
#define LLVM_CODEGEN_MACHINEMODULEINFO_H31,1534
class MachineModuleInfoImpl 56,2259
class MachineModuleInfo 74,2913
  const LLVMTargetMachine &TM;TM78,3023
  MCContext Context;81,3119
  MCContext *ExternalContext ExternalContext84,3243
  const Module *TheModule TheModule87,3331
  MachineModuleInfoImpl *ObjFileMMI;ObjFileMMI92,3523
  unsigned CurCallSite 98,3672
  bool DbgInfoAvailable 109,4150
  bool UsesMSVCFloatingPoint 113,4332
  DenseMap<DenseMap116,4436
  DenseMap<const Function*, std::unique_ptr<MachineFunction>> MachineFunctions;116,4436
  unsigned NextFnNum 118,4574
  const Function *LastRequest LastRequest119,4600
  MachineFunction *LastResult LastResult120,4671
  const LLVMTargetMachine &getTarget(getTarget137,5115
  const MCContext &getContext(getContext139,5176
  MCContext &getContext(getContext142,5277
  const Module *getModule(getModule146,5367
  Ty &getObjFileInfo(getObjFileInfo166,6223
  const Ty &getObjFileInfo(getObjFileInfo173,6384
  bool hasDebugInfo(178,6548
  bool usesMSVCFloatingPoint(180,6606
  void setUsesMSVCFloatingPoint(182,6678
  void setCurrentCallSite(188,6842
  unsigned getCurrentCallSite(192,6995
  bool invalidate(197,7119
class MachineModuleInfoWrapperPass 203,7289
  MachineModuleInfo MMI;204,7349
  static char ID;207,7383
  MachineModuleInfo &getMMI(getMMI217,7787
  const MachineModuleInfo &getMMI(getMMI218,7833
class MachineModuleAnalysis 222,7954
  static AnalysisKey Key;224,8085
  const LLVMTargetMachine *TM;TM226,8112
  using Result 230,8206
  MachineModuleAnalysis(232,8243

/usr/include/llvm/CodeGen/MachineModuleInfoImpls.h,1176
#define LLVM_CODEGEN_MACHINEMODULEINFOIMPLS_H15,597
class MachineModuleInfoMachO 28,905
  DenseMap<MCSymbol MCSymbol32,1155
  DenseMap<MCSymbol *, StubValueTy> GVStubs;32,1155
  DenseMap<MCSymbol MCSymbol37,1400
  DenseMap<MCSymbol *, StubValueTy> ThreadLocalGVStubs;37,1400
  virtual void anchor(39,1457
  MachineModuleInfoMachO(42,1522
  StubValueTy &getGVStubEntry(getGVStubEntry44,1578
  StubValueTy &getThreadLocalGVStubEntry(getThreadLocalGVStubEntry49,1696
  SymbolListTy GetGVStubList(55,1903
  SymbolListTy GetThreadLocalGVStubList(56,1970
class MachineModuleInfoELF 63,2164
  DenseMap<DenseMap66,2312
  DenseMap<MCSymbol *, StubValueTy> GVStubs;66,2312
  MachineModuleInfoELF(71,2423
  StubValueTy &getGVStubEntry(getGVStubEntry73,2477
  SymbolListTy GetGVStubList(80,2663
class MachineModuleInfoCOFF 85,2831
  DenseMap<DenseMap88,2980
  DenseMap<MCSymbol *, StubValueTy> GVStubs;88,2980
  MachineModuleInfoCOFF(93,3091
  StubValueTy &getGVStubEntry(getGVStubEntry95,3146
  SymbolListTy GetGVStubList(102,3332
class MachineModuleInfoWasm 107,3500
  MachineModuleInfoWasm(111,3626
  SetVector<StringRef> MachineSymbolsUsed;113,3681

/usr/include/llvm/CodeGen/MachineModuleSlotTracker.h,425
#define LLVM_CODEGEN_MACHINEMODULESLOTTRACKER_H10,418
class MachineModuleSlotTracker 22,638
  const Function &TheFunction;TheFunction23,698
  const MachineModuleInfo &TheMMI;TheMMI24,729
  void processMachineFunctionMetadata(27,810
  void processMachineModule(29,947
  void processMachineFunction(31,1088
  MachineModuleSlotTracker(36,1274
  ~MachineModuleSlotTracker(38,1397
  void collectMachineMDNodes(40,1429

/usr/include/llvm/CodeGen/MachineOptimizationRemarkEmitter.h,1399
#define LLVM_CODEGEN_MACHINEOPTIMIZATIONREMARKEMITTER_H16,765
class DiagnosticInfoMIROptimization 30,1158
  DiagnosticInfoMIROptimization(32,1244
  struct MachineArgument 41,1729
    MachineArgument(43,1844
  static bool classof(46,1910
  const MachineBasicBlock *getBlock(getBlock51,2068
  const MachineBasicBlock *MBB;MBB54,2138
class MachineOptimizationRemark 58,2235
  MachineOptimizationRemark(65,2651
  static bool classof(71,2982
  bool isEnabled(76,3149
class MachineOptimizationRemarkMissed 84,3410
  MachineOptimizationRemarkMissed(91,3839
  static bool classof(97,4194
  bool isEnabled(102,4367
class MachineOptimizationRemarkAnalysis 110,4630
  MachineOptimizationRemarkAnalysis(117,5063
  MachineOptimizationRemarkAnalysis(123,5426
  static bool classof(129,5780
  bool isEnabled(134,5955
namespace ore 142,6209
using MNV 143,6225
class MachineOptimizationRemarkEmitter 152,6604
  MachineOptimizationRemarkEmitter(154,6653
  bool allowExtraAnalysis(168,7324
  void emit(178,7720
  MachineBlockFrequencyInfo *getBFI(getBFI193,8301
  MachineFunction &MF;MF198,8372
  MachineBlockFrequencyInfo *MBFI;MBFI201,8444
  bool shouldEmitVerbose(212,8893
class MachineOptimizationRemarkEmitterPass 220,9152
  std::unique_ptr<MachineOptimizationRemarkEmitter> ORE;221,9226
  MachineOptimizationRemarkEmitter &getORE(getORE230,9455
  static char ID;235,9563

/usr/include/llvm/CodeGen/MachinePassRegistry.h,1222
#define LLVM_CODEGEN_MACHINEPASSREGISTRY_H18,876
template <class PassCtorTy> class MachinePassRegistryListener 32,1311
  virtual void anchor(33,1375
template <typename PassCtorTy> class MachinePassRegistryNode 48,1874
  MachinePassRegistryNode *Next Next50,1946
  StringRef Name;51,2020
  StringRef Description;52,2086
  PassCtorTy Ctor;53,2149
  MachinePassRegistryNode(56,2215
  MachinePassRegistryNode *getNext(getNext60,2345
  MachinePassRegistryNode **getNextAddress(getNextAddress61,2410
  StringRef getName(62,2476
  StringRef getDescription(63,2539
  PassCtorTy getCtor(64,2609
  void setNext(65,2655
template <typename PassCtorTy> class MachinePassRegistry 73,2959
  MachinePassRegistryNode<PassCtorTy> *List;List75,3027
  PassCtorTy Default;76,3099
      *Listener;Listener78,3220
  MachinePassRegistryNode<PassCtorTy> *getList(getList86,3403
  PassCtorTy getDefault(87,3469
  void setDefault(88,3515
  void setDefault(90,3620
  void setListener(102,3944
  void Add(106,4091
  void Remove(116,4396
class RegisterPassParser135,4995
  RegisterPassParser(140,5191
  ~RegisterPassParser(142,5294
  void initialize(144,5369
  void NotifyAdd(160,5934
  void NotifyRemove(164,6090

/usr/include/llvm/CodeGen/MachinePostDominators.h,569
#define LLVM_CODEGEN_MACHINEPOSTDOMINATORS_H15,593
class MachinePostDominatorTree 27,914
  std::unique_ptr<PostDomTreeT> PDT;29,1035
  static char ID;32,1081
  PostDomTreeT &getBase(getBase36,1131
  MachineDomTreeNode *getRootNode(getRootNode44,1287
  MachineDomTreeNode *getNode(getNode50,1459
  bool dominates(54,1554
  bool dominates(59,1692
  bool properlyDominates(63,1811
  bool properlyDominates(68,1973
  bool isVirtualRoot(73,2133
  MachineBasicBlock *findNearestCommonDominator(findNearestCommonDominator77,2236
  void releaseMemory(89,2789

/usr/include/llvm/CodeGen/MachineRegionInfo.h,1348
#define LLVM_CODEGEN_MACHINEREGIONINFO_H10,411
class MachineRegionNode 49,1595
  inline MachineRegionNode(51,1684
  bool operator==(operator==56,1953
class MachineRegion 61,2081
  bool operator==(operator==68,2365
class MachineRegionInfo 73,2497
class MachineRegionInfoPass 85,2916
  MachineRegionInfo RI;86,2975
  static char ID;89,3008
  MachineRegionInfo &getRegionInfo(getRegionInfo94,3101
  const MachineRegionInfo &getRegionInfo(getRegionInfo96,3154
RegionNodeBase<RegionTraits<MachineFunction>>::getNodeAs<getNodeAs112,3603
RegionNodeBase<RegionTraits<MachineFunction>>::getNodeAs<getNodeAs121,3839
struct GraphTraits<GraphTraits137,4449
  using nodes_iterator 139,4545
  using nodes_iterator = df_iterator<NodeRef, df_iterator_default_set<df_iterator_default_set139,4545
                                     false,140,4625
  static NodeRef getEntryNode(142,4701
  static nodes_iterator nodes_begin(147,4858
  static nodes_iterator nodes_end(151,4976
struct GraphTraits<GraphTraits157,5105
  using nodes_iterator 159,5197
  using nodes_iterator = df_iterator<NodeRef, df_iterator_default_set<df_iterator_default_set159,5197
                                     false,160,5277
  static NodeRef getEntryNode(162,5353
  static nodes_iterator nodes_begin(166,5498
  static nodes_iterator nodes_end(170,5648

/usr/include/llvm/CodeGen/MachineSSAUpdater.h,339
#define LLVM_CODEGEN_MACHINESSAUPDATER_H14,549
class MachineSSAUpdater 34,1172
  SmallVectorImpl<MachineInstr*> *InsertedPHIs;InsertedPHIs48,1720
  explicit MachineSSAUpdater(56,1992
  ~MachineSSAUpdater(60,2242
  void Initialize(64,2353
  void Initialize(65,2384
  void AddAvailableValue(69,2572
  bool HasValueForBlock(73,2747

/usr/include/llvm/CodeGen/MachineSizeOpts.h,46
#define LLVM_CODEGEN_MACHINESIZEOPTS_H14,580

/usr/include/llvm/CodeGen/MachineUniformityAnalysis.h,56
#define LLVM_CODEGEN_MACHINEUNIFORMITYANALYSIS_H15,582

/usr/include/llvm/CodeGen/MultiHazardRecognizer.h,222
#define LLVM_CODEGEN_MULTIHAZARDRECOGNIZER_H15,629
class MultiHazardRecognizer 25,813
  SmallVector<std::unique_ptr<std::unique_ptr26,877
  SmallVector<std::unique_ptr<ScheduleHazardRecognizer>, 4> Recognizers;26,877

/usr/include/llvm/CodeGen/PBQPRAConstraint.h,263
#define LLVM_CODEGEN_PBQPRACONSTRAINT_H16,665
using PBQPRAGraph 33,931
class PBQPRAConstraint 37,1118
class PBQPRAConstraintList 50,1432
  void apply(52,1495
  void addConstraint(57,1591
  std::vector<std::unique_ptr<PBQPRAConstraint>> Constraints;63,1719

/usr/include/llvm/CodeGen/PreISelIntrinsicLowering.h,206
#define LLVM_CODEGEN_PREISELINTRINSICLOWERING_H14,598
struct PreISelIntrinsicLoweringPass23,735
  const TargetMachine &TM;TM25,823
  PreISelIntrinsicLoweringPass(27,851
  PreservedAnalyses run(28,919

/usr/include/llvm/CodeGen/RDFGraph.h,7067
#define LLVM_CODEGEN_RDFGRAPH_H225,10545
struct NodeAttrs 266,11490
  enum : uint16_t 268,11531
    None 269,11551
    TypeMask 272,11614
    Code 273,11642
    Ref 274,11689
    KindMask 277,11757
    Def 278,11790
    Use 279,11831
    Phi 280,11872
    Stmt 281,11913
    Block 282,11954
    Func 283,11995
    FlagMask 286,12066
    Shadow 287,12099
    Clobbering 288,12170
    PhiRef 289,12245
    Preserving 290,12310
    Fixed 291,12384
    Undef 292,12446
    Dead 293,12519
  static uint16_t type(297,12617
  static uint16_t kind(300,12686
  static uint16_t flags(303,12755
  static uint16_t set_type(306,12825
  static uint16_t set_kind(310,12915
  static uint16_t set_flags(314,13005
  static bool contains(319,13123
struct BuildOptions 336,13452
  enum : unsigned 337,13474
    None 338,13494
    KeepDeadPhis 339,13511
    OmitReserved 340,13577
template <typename T> struct NodeAddr 344,13647
  NodeAddr(346,13711
  NodeAddr(351,13880
  bool operator==(operator==353,13961
  bool operator!=(operator!=357,14090
  T Addr 361,14175
  NodeId Id 362,14195
using Node 381,14536
using Ref 383,14572
using Def 384,14605
using Use 385,14638
using PhiUse 386,14708
using Code 388,14748
using Instr 389,14783
using Phi 390,14820
using Stmt 391,14853
using Block 392,14888
using Func 393,14925
struct NodeAllocator 411,15829
  enum { NodeMemSize 413,15894
  NodeAllocator(415,15924
  NodeBase *ptr(ptr421,16099
  uint32_t makeId(436,16451
  const uint32_t NodesPerBlock;441,16638
  const uint32_t BitsPerIndex;442,16670
  const uint32_t IndexMask;443,16701
  char *ActiveEnd ActiveEnd444,16729
  std::vector<char *> Blocks;445,16758
  using AllocatorTy 446,16788
  AllocatorTy MemPool;447,16856
using RegisterSet 450,16883
struct TargetOperandInfo 452,16927
  TargetOperandInfo(453,16954
  const TargetInstrInfo &TII;TII460,17283
struct PackedRegisterRef 464,17370
  RegisterId Reg;465,17397
  uint32_t MaskId;466,17415
struct LaneMaskIndex 469,17438
  LaneBitmask getLaneMaskForIndex(472,17525
  uint32_t getIndexForLaneMask(476,17636
  uint32_t getIndexForLaneMask(481,17750
struct NodeBase 487,17871
  uint16_t getType(492,17952
  uint16_t getKind(493,18014
  uint16_t getFlags(494,18076
  NodeId getNext(495,18140
  uint16_t getAttrs(497,18183
  void setAttrs(498,18229
  void setFlags(499,18272
  void init(505,18467
  void setNext(507,18517
  uint16_t Attrs;510,18568
  uint16_t Reserved;511,18586
  NodeId Next;512,18607
  struct Def_struct 516,18837
    NodeId DD,517,18859
    NodeId DD, DU;517,18859
  struct PhiU_struct 519,18924
    NodeId PredB;520,18947
  struct Code_struct 522,19016
    void *CP;CP523,19039
    NodeId FirstM,524,19096
    NodeId FirstM, LastM;524,19096
  struct Ref_struct 526,19163
    NodeId RD,527,19185
    NodeId RD, Sib;527,19185
      Def_struct Def;529,19261
      PhiU_struct PhiU;530,19283
      MachineOperand *Op;Op533,19326
      PackedRegisterRef PR;534,19398
    Ref_struct RefData;540,19516
    Code_struct CodeData;541,19540
using NodeList 550,19900
using NodeSet 551,19939
struct RefNode 553,19974
  MachineOperand &getOp(getOp558,20089
  NodeId getReachingDef(566,20302
  void setReachingDef(567,20357
  NodeId getSibling(569,20412
  void setSibling(570,20464
  bool isUse(572,20518
  bool isDef(577,20627
struct DefNode 588,20916
  NodeId getReachedDef(589,20950
  void setReachedDef(590,21008
  NodeId getReachedUse(591,21063
  void setReachedUse(592,21121
struct UseNode 597,21220
struct PhiUseNode 601,21297
  NodeId getPredecessor(602,21334
  void setPredecessor(606,21447
struct CodeNode 612,21561
  template <typename T> T getCode(613,21597
  void setCode(616,21688
struct InstrNode 629,22162
struct PhiNode 633,22244
  MachineInstr *getCode(getCode634,22280
struct StmtNode 637,22336
  MachineInstr *getCode(getCode638,22373
struct BlockNode 643,22466
  MachineBasicBlock *getCode(getCode644,22503
struct FuncNode 651,22651
  MachineFunction *getCode(getCode652,22687
struct DataFlowGraph 660,22909
  struct Config 669,23377
    Config(671,23419
    Config(672,23464
    Config(673,23536
    Config(674,23617
    SmallVector<const TargetRegisterClass *> Classes;678,23751
    std::set<RegisterId> TrackRegs;679,23805
  template <typename T> T ptr(683,23880
  template <typename T> NodeAddr<T> addr(689,24010
  Func getFunc(693,24101
  MachineFunction &getMF(getMF694,24144
  const TargetInstrInfo &getTII(getTII695,24192
  const TargetRegisterInfo &getTRI(getTRI696,24248
  const PhysicalRegisterInfo &getPRI(getPRI697,24307
  const MachineDominatorTree &getDT(getDT698,24368
  const MachineDominanceFrontier &getDF(getDF699,24428
  const RegisterAggr &getLiveIns(getLiveIns700,24492
  struct DefStack 702,24554
    bool empty(705,24601
    struct Iterator 709,24711
      Iterator &up(up712,24781
      Iterator &down(down716,24864
      value_type operator*(721,24952
      const value_type *operator->(operator->725,25057
      bool operator==(operator==729,25171
      bool operator!=(operator!=730,25245
      const DefStack &DS;DS739,25518
      unsigned Pos;740,25544
    iterator top(746,25614
    iterator bottom(747,25673
    void push(750,25764
    bool isDelimiter(760,25982
    StorageType Stack;767,26206
  using DefStackMap 772,26355
  void build(775,26456
  PackedRegisterRef pack(781,26638
  PackedRegisterRef pack(784,26740
  RegisterRef unpack(787,26848
  Block findBlock(799,27242
  void unlinkUse(801,27320
  void unlinkDef(807,27447
  template <uint16_t Kind> static bool IsRef(817,27707
  template <uint16_t Kind> static bool IsCode(821,27853
  static bool IsDef(825,28001
  static bool IsUse(830,28143
  static bool IsPhi(835,28285
  static bool IsPreservingDef(840,28428
  std::pair<std::pair863,29285
  using BlockRefsMap 865,29360
  void removeFromOwner(882,29960
  std::unique_ptr<TargetOperandInfo> DefaultTOI;888,30135
  MachineFunction &MF;MF890,30185
  const TargetInstrInfo &TII;TII891,30208
  const TargetRegisterInfo &TRI;TRI892,30238
  const PhysicalRegisterInfo PRI;893,30271
  const MachineDominatorTree &MDT;MDT894,30305
  const MachineDominanceFrontier &MDF;MDF895,30340
  const TargetOperandInfo &TOI;TOI896,30379
  RegisterAggr LiveIns;898,30412
  Func TheFunc;899,30436
  NodeAllocator Memory;900,30452
  std::map<std::map902,30535
  std::map<MachineBasicBlock *, Block> BlockNodes;902,30535
  LaneMaskIndex LMI;904,30606
  Config BuildCfg;906,30628
  std::set<unsigned> TrackedUnits;907,30647
  BitVector ReservedRegs;908,30682
Ref RefNode::getNextRef(getNextRef912,30766
NodeList CodeNode::members_if(members_if946,32058
template <typename T> struct Print 960,32342
  Print(961,32379
  const T &Obj;Obj963,32442
  const DataFlowGraph &G;G964,32458
template <typename T> Print(const T &, const DataFlowGraph &) -> Print<Print967,32488
template <typename T> struct PrintNode 969,32564
  PrintNode(970,32626

/usr/include/llvm/CodeGen/RDFLiveness.h,1352
#define LLVM_CODEGEN_RDFLIVENESS_H13,521
namespace std 42,1073
template <> struct hash<hash44,1090
  std::size_t operator()(operator()45,1144
namespace llvm::rdf 53,1362
struct Liveness 55,1385
  Liveness(62,1618
  NodeList getAllReachingDefs(70,2020
  NodeList getAllReachingDefs(75,2199
  NodeSet getAllReachedUses(82,2478
  std::pair<std::pair86,2609
  LiveMapType &getLiveMap(getLiveMap94,3024
  const LiveMapType &getLiveMap(getLiveMap95,3072
  const RefMap &getRealUses(getRealUses97,3133
  void trace(108,3407
  const DataFlowGraph &DFG;DFG111,3453
  const TargetRegisterInfo &TRI;TRI112,3481
  const PhysicalRegisterInfo &PRI;PRI113,3514
  const MachineDominatorTree &MDT;MDT114,3549
  const MachineDominanceFrontier &MDF;MDF115,3584
  LiveMapType LiveMap;116,3623
  const RefMap Empty;117,3646
  const RegisterAggr NoRegs;118,3668
  DenseMap<DenseMap124,3913
  DenseMap<NodeId, MachineBasicBlock *> NBMap;124,3913
  DenseMap<DenseMap131,4123
  DenseMap<NodeId, RefMap> RealUseMap;131,4123
  std::map<std::map134,4205
  std::map<MachineBasicBlock *, std::set<MachineBasicBlock *>> IIDF;134,4205
  std::map<std::map137,4295
  std::map<MachineBasicBlock *, RefMap> PhiLON;137,4295
  std::map<std::map144,4713
  std::map<MachineBasicBlock *, RefMap> PhiLOX;144,4713
  std::pair<std::pair150,4900

/usr/include/llvm/CodeGen/RDFRegisters.h,3580
#define LLVM_CODEGEN_RDFREGISTERS_H10,406
template <typename T,53,1450
template <typename T, unsigned N 53,1450
struct RegisterRef 88,2321
  RegisterId Reg 89,2342
  LaneBitmask Mask 90,2364
  constexpr explicit RegisterRef(93,2470
  constexpr bool isReg(98,2710
  constexpr bool isUnit(99,2778
  constexpr bool isMask(100,2836
  constexpr unsigned idx(102,2895
  constexpr operator bool(operator bool104,2952
  size_t hash(108,3042
  static constexpr bool isRegId(113,3177
  static constexpr bool isUnitId(116,3273
  static constexpr bool isMaskId(119,3369
  static constexpr RegisterId toUnitId(123,3460
  static constexpr unsigned toIdx(127,3565
struct PhysicalRegisterInfo 141,3978
  RegisterId getRegMaskId(145,4114
  const uint32_t *getRegMaskBits(getRegMaskBits149,4230
  RegisterRef getRefForUnit(158,4509
  const BitVector &getMaskUnits(getMaskUnits162,4623
  const BitVector &getUnitAliases(getUnitAliases168,4806
  const TargetRegisterInfo &getTRI(getTRI173,4951
  struct RegInfo 182,5236
  struct UnitInfo 185,5311
    LaneBitmask Mask;187,5355
  struct MaskInfo 189,5382
    BitVector Units;190,5402
  struct AliasInfo 192,5428
    BitVector Regs;193,5449
  const TargetRegisterInfo &TRI;TRI196,5475
  IndexedSet<const uint32_t *> RegMasks;197,5508
  std::vector<RegInfo> RegInfos;198,5549
  std::vector<UnitInfo> UnitInfos;199,5582
  std::vector<MaskInfo> MaskInfos;200,5617
  std::vector<AliasInfo> AliasInfos;201,5652
struct RegisterAggr 204,5693
  RegisterAggr(205,5715
  unsigned size(209,5872
  bool empty(210,5922
  const PhysicalRegisterInfo &getPRI(getPRI214,6051
  bool operator==(operator==216,6113
  static bool isCoverOf(220,6228
  size_t hash(236,6804
  struct ref_iterator 238,6884
    MapType Masks;242,6975
    MapType::iterator Pos;243,6994
    unsigned Index;244,7021
    const RegisterAggr *Owner;Owner245,7041
    RegisterRef operator*(250,7136
    ref_iterator &operator++(operator++254,7230
    bool operator==(operator==260,7318
    bool operator!=(operator!=266,7458
  ref_iterator ref_begin(269,7539
  ref_iterator ref_end(270,7611
  using unit_iterator 272,7681
  unit_iterator unit_begin(273,7750
  unit_iterator unit_end(274,7820
  iterator_range<ref_iterator> refs(276,7887
  iterator_range<unit_iterator> units(279,7984
  BitVector Units;284,8095
  const PhysicalRegisterInfo &PRI;PRI285,8114
template <typename KeyType> struct RegisterAggrMap 290,8276
  RegisterAggrMap(291,8329
  auto begin(297,8494
  auto end(298,8533
  auto begin(299,8568
  auto end(300,8613
  auto find(301,8654
  RegisterAggr Empty;304,8728
  std::map<std::map305,8750
  std::map<KeyType, RegisterAggr> Map;305,8750
  using key_type 308,8798
  using mapped_type 309,8851
  using value_type 310,8910
struct PrintLaneMaskShort 316,9113
  PrintLaneMaskShort(317,9141
  LaneBitmask Mask;318,9190
namespace std 325,9333
template <> struct hash<hash327,9350
  size_t operator()(operator()328,9400
template <> struct hash<hash333,9486
  size_t operator()(operator()334,9537
template <> struct equal_to<equal_to339,9631
  constexpr equal_to(340,9685
  bool operator()(operator()342,9766
  const llvm::rdf::PhysicalRegisterInfo *PRI;PRI348,9956
template <> struct equal_to<equal_to351,10006
  bool operator()(operator()352,10061
template <> struct less<less358,10200
  constexpr less(359,10250
  bool operator()(operator()361,10327
  const llvm::rdf::PhysicalRegisterInfo *PRI;PRI368,10563
namespace llvm::rdf 373,10633
using RegisterSet 374,10655

/usr/include/llvm/CodeGen/ReachingDefAnalysis.h,1344
#define LLVM_CODEGEN_REACHINGDEFANALYSIS_H22,929
class ReachingDef 40,1538
  uintptr_t Encoded;41,1558
  explicit ReachingDef(43,1631
  ReachingDef(46,1704
  ReachingDef(47,1750
  operator int(48,1818
struct PointerLikeTypeTraits<PointerLikeTypeTraits52,1889
  static constexpr int NumLowBitsAvailable 53,1933
  static inline void *getAsVoidPointer(getAsVoidPointer55,1982
  static inline ReachingDef getFromVoidPointer(59,2100
  static inline ReachingDef getFromVoidPointer(63,2219
class ReachingDefAnalysis 69,2398
  MachineFunction *MF MF71,2464
  const TargetRegisterInfo *TRI TRI72,2497
  LoopTraversal::TraversalOrder TraversedMBBOrder;73,2540
  unsigned NumRegUnits 74,2591
  using LiveRegsDefInfo 79,2890
  LiveRegsDefInfo LiveRegs;80,2934
  using OutRegsInfoMap 85,3169
  OutRegsInfoMap MBBOutRegsInfos;86,3227
  int CurInstr 90,3350
  DenseMap<DenseMap94,3477
  DenseMap<MachineInstr *, int> InstIds;94,3477
  using MBBRegUnitDefs 97,3579
  using MBBDefsInfo 99,3689
  using MBBReachingDefsInfo 101,3796
  MBBReachingDefsInfo MBBReachingDefs;102,3855
  const int ReachingDefDefaultVal 105,3956
  using InstSet 107,4005
  using BlockSet 108,4055
  static char ID;111,4120
  ReachingDefAnalysis(113,4186
  void getAnalysisUsage(118,4349
  MachineFunctionProperties getRequiredProperties(125,4547

/usr/include/llvm/CodeGen/RegAllocCommon.h,85
#define LLVM_CODEGEN_REGALLOCCOMMON_H10,408
typedef std::function<bool(bool19,542

/usr/include/llvm/CodeGen/RegAllocPBQP.h,3327
#define LLVM_CODEGEN_REGALLOCPBQP_H16,661
class MatrixMetadata 53,1563
  MatrixMetadata(55,1594
  unsigned getWorstRow(81,2479
  unsigned getWorstCol(82,2531
  const bool* getUnsafeRows(83,2583
  const bool* getUnsafeCols(84,2648
  std::unique_ptr<bool[]> UnsafeRows;89,2773
  std::unique_ptr<bool[]> UnsafeCols;90,2811
class AllowedRegVector 94,2913
  AllowedRegVector(101,3088
  unsigned size(106,3272
  bool operator==(operator==109,3377
  bool operator!=(operator!=115,3568
  unsigned NumOpts 120,3669
  std::unique_ptr<MCRegister[]> Opts;121,3693
inline hash_code hash_value(124,3735
class GraphMetadata 132,4060
  using AllowedRegVecPool 134,4091
  using AllowedRegVecRef 137,4157
  GraphMetadata(139,4213
  MachineFunction &MF;MF144,4374
  LiveIntervals &LIS;LIS145,4397
  MachineBlockFrequencyInfo &MBFI;MBFI146,4419
  void setNodeIdForVReg(148,4455
  GraphBase::NodeId getNodeIdForVReg(152,4559
  AllowedRegVecRef getAllowedRegs(159,4776
  DenseMap<DenseMap164,4908
  DenseMap<Register, GraphBase::NodeId> VRegToNodeId;164,4908
  AllowedRegVecPool AllowedRegVecs;165,4962
class NodeMetadata 169,5075
  using AllowedRegVector 171,5104
  using ReductionState 176,5350
  NodeMetadata(185,5516
  void setVReg(203,6113
  Register getVReg(204,6166
  void setAllowedRegs(206,6211
  const AllowedRegVector& getAllowedRegs(209,6332
  void setup(211,6407
  ReductionState getReductionState(216,6560
  void setReductionState(217,6618
  void handleAddEdge(229,6998
  void handleRemoveEdge(237,7308
  bool isConservativelyAllocatable(245,7621
  bool wasConservativelyAllocatable(252,7847
  ReductionState RS 258,7956
  unsigned NumOpts 259,7991
  unsigned DeniedOpts 260,8015
  std::unique_ptr<unsigned[]> OptUnsafeEdges;261,8042
  Register VReg;262,8088
  GraphMetadata::AllowedRegVecRef AllowedRegs;263,8105
  bool everConservativelyAllocatable 266,8189
class RegAllocSolverImpl 270,8246
  using RAMatrix 272,8282
  using RawVector 275,8336
  using RawMatrix 276,8370
  using Vector 277,8404
  using Matrix 278,8435
  using CostAllocator 279,8462
  using NodeId 281,8528
  using EdgeId 282,8564
  using NodeMetadata 284,8601
  struct EdgeMetadata 285,8648
  using GraphMetadata 286,8674
  using Graph 288,8724
  RegAllocSolverImpl(290,8774
  Solution solve(292,8816
  void handleAddNode(301,8966
  void handleRemoveNode(307,9184
  void handleSetNodeCosts(308,9223
  void handleAddEdge(310,9289
  void handleDisconnectEdge(315,9435
  void handleReconnectEdge(322,9693
  void handleUpdateCosts(328,9924
  void promote(353,10877
  void removeFromCurrentSet(365,11324
  void moveToOptimallyReducibleNodes(389,12278
  void moveToConservativelyAllocatableNodes(396,12493
  void moveToNotProvablyAllocatableNodes(403,12729
  void setup(410,12956
  std::vector<GraphBase::NodeId> reduce(428,13693
  class SpillCostComparator 480,15580
    SpillCostComparator(482,15620
    bool operator()(operator()484,15671
    const Graph& G;493,15941
  Graph& G;496,15967
  using NodeSet 497,15979
  NodeSet OptimallyReducibleNodes;498,16015
  NodeSet ConservativelyAllocatableNodes;499,16050
  NodeSet NotProvablyAllocatableNodes;500,16092
class PBQPRAGraph 503,16135
  using BaseT 505,16205
  PBQPRAGraph(508,16263
inline Solution solve(522,16657

/usr/include/llvm/CodeGen/RegAllocRegistry.h,521
#define LLVM_CODEGEN_REGALLOCREGISTRY_H15,607
class RegisterRegAllocBase 30,1051
  static MachinePassRegistry<FunctionPassCtor> Registry;34,1191
  RegisterRegAllocBase(36,1249
  ~RegisterRegAllocBase(41,1394
  SubClass *getNext(getNext44,1464
  static SubClass *getList(getList48,1571
  static FunctionPassCtor getDefault(52,1663
  static void setDefault(54,1737
  static void setListener(56,1811
class RegisterRegAlloc 61,1926
  RegisterRegAlloc(63,2007
RegisterRegAllocBase<T>::Registry;Registry70,2280

/usr/include/llvm/CodeGen/Register.h,1555
#define LLVM_CODEGEN_REGISTER_H10,402
class Register 19,599
  unsigned Reg;20,616
  constexpr Register(23,641
  constexpr Register(24,694
  static_assert(36,1273
  static constexpr bool isStackSlot(44,1677
  constexpr bool isStack(49,1818
  static int stackSlot2Index(52,1972
  static Register index2StackSlot(58,2194
  static constexpr bool isPhysicalRegister(65,2455
  static constexpr bool isVirtualRegister(71,2662
  static unsigned virtReg2Index(77,2899
  static Register index2VirtReg(84,3182
  constexpr bool isVirtual(91,3460
  constexpr bool isPhysical(95,3627
  unsigned virtRegIndex(99,3829
  constexpr operator unsigned(operator unsigned101,3893
  constexpr unsigned id(103,3948
  constexpr operator MCRegister(operator MCRegister105,3997
  MCRegister asMCReg(110,4227
  constexpr bool isValid(116,4384
  constexpr bool operator==(operator==119,4503
  constexpr bool operator!=(operator!=122,4595
  constexpr bool operator==(operator==125,4687
  constexpr bool operator!=(operator!=128,4782
  constexpr bool operator==(operator==136,5007
  constexpr bool operator!=(operator!=137,5082
  constexpr bool operator==(operator==138,5157
  constexpr bool operator!=(operator!=139,5237
  constexpr bool operator==(operator==141,5382
  constexpr bool operator!=(operator!=144,5474
template <> struct DenseMapInfo<DenseMapInfo150,5607
  static inline unsigned getEmptyKey(151,5651
  static inline unsigned getTombstoneKey(154,5746
  static unsigned getHashValue(157,5849
  static bool isEqual(160,5966

/usr/include/llvm/CodeGen/RegisterClassInfo.h,928
#define LLVM_CODEGEN_REGISTERCLASSINFO_H17,771
class RegisterClassInfo 29,1043
  struct RCInfo 30,1069
    std::unique_ptr<MCPhysReg[]> Order;36,1226
    operator ArrayRef<MCPhysReg>(operator ArrayRef<MCPhysReg>40,1292
  std::unique_ptr<RCInfo[]> RegClass;46,1447
  SmallVector<SmallVector57,1829
  SmallVector<MCPhysReg, 16> LastCalleeSavedRegs;57,1829
  SmallVector<SmallVector60,1934
  SmallVector<MCPhysReg, 4> CalleeSavedAliases;60,1934
  BitVector IgnoreCSRForAllocOrder;64,2131
  BitVector Reserved;67,2211
  std::unique_ptr<unsigned[]> PSetLimits;69,2234
  ArrayRef<uint8_t> RegCosts;72,2308
  const RCInfo &get(get78,2473
  unsigned getNumAllocatableRegs(94,2973
  ArrayRef<MCPhysReg> getOrder(101,3255
  bool isProperSubClass(111,3672
  MCRegister getLastCalleeSavedAlias(118,3940
  uint8_t getMinCost(127,4294
  unsigned getLastCostChange(135,4580
  unsigned getRegPressureSetLimit(142,4829

/usr/include/llvm/CodeGen/RegisterPressure.h,3735
#define LLVM_CODEGEN_REGISTERPRESSURE_H15,613
struct RegisterMaskPair 38,1140
  Register RegUnit;39,1166
  LaneBitmask LaneMask;40,1226
  RegisterMaskPair(42,1251
struct RegisterPressure 47,1408
  std::vector<unsigned> MaxSetPressure;49,1506
  SmallVector<SmallVector52,1615
  SmallVector<RegisterMaskPair,8> LiveInRegs;52,1615
  SmallVector<SmallVector53,1661
  SmallVector<RegisterMaskPair,8> LiveOutRegs;53,1661
struct IntervalPressure 67,2319
  SlotIndex TopIdx;69,2419
  SlotIndex BottomIdx;70,2439
struct RegionPressure 82,2761
  MachineBasicBlock::const_iterator TopPos;84,2859
  MachineBasicBlock::const_iterator BottomPos;85,2903
class PressureChange 102,3610
  uint16_t PSetID 103,3633
  int16_t UnitInc 104,3676
  PressureChange(108,3738
  bool isValid(112,3868
  unsigned getPSet(114,3915
  unsigned getPSetOrMax(120,4096
  int getUnitInc(124,4199
  void setUnitInc(126,4245
  bool operator==(operator==128,4292
class PressureDiff 140,4725
  enum { MaxPSets 144,4978
  PressureChange PressureChanges[PressureChanges146,5005
  using iterator 148,5050
  iterator nonconst_begin(150,5088
  iterator nonconst_end(151,5148
  using const_iterator 154,5222
  const_iterator begin(156,5272
  const_iterator end(157,5335
class RegisterOperands 166,5637
  SmallVector<SmallVector169,5746
  SmallVector<RegisterMaskPair, 8> Uses;169,5746
  SmallVector<SmallVector172,5891
  SmallVector<RegisterMaskPair, 8> Defs;172,5891
  SmallVector<SmallVector175,6026
  SmallVector<RegisterMaskPair, 8> DeadDefs;175,6026
class PressureDiffs 197,7038
  PressureDiff *PDiffArray PDiffArray198,7060
  unsigned Size 199,7098
  unsigned Max 200,7119
  ~PressureDiffs(206,7296
  void clear(208,7338
struct RegPressureDelta 240,8629
  PressureChange Excess;241,8655
  PressureChange CriticalMax;242,8680
  PressureChange CurrentMax;243,8710
  bool operator==(operator==247,8773
  bool operator!=(operator!=251,8937
class LiveRegSet 261,9270
  struct IndexMaskPair 263,9298
    unsigned Index;264,9323
    LaneBitmask LaneMask;265,9343
    IndexMaskPair(267,9370
    unsigned getSparseSetIndex(270,9473
  using RegSet 275,9546
  RegSet Regs;276,9589
  unsigned NumRegUnits 277,9604
  unsigned getSparseIndexFromReg(279,9634
  Register getRegFromSparseIndex(286,9823
  LaneBitmask contains(296,10096
  LaneBitmask insert(306,10460
  LaneBitmask erase(319,10983
  size_t size(329,11304
  void appendTo(334,11389
class RegPressureTracker 359,12609
  const MachineFunction *MF MF360,12636
  const TargetRegisterInfo *TRI TRI361,12675
  const RegisterClassInfo *RCI RCI362,12718
  const MachineRegisterInfo *MRI MRI363,12760
  const LiveIntervals *LIS LIS364,12804
  const MachineBasicBlock *MBB MBB367,12907
  RegisterPressure &P;P370,13015
  bool RequireIntervals;374,13194
  bool TrackUntiedDefs 377,13264
  bool TrackLaneMasks 380,13340
  MachineBasicBlock::const_iterator CurrPos;385,13547
  std::vector<unsigned> CurrSetPressure;388,13654
  LiveRegSet LiveRegs;391,13725
  SparseSet<SparseSet394,13797
  SparseSet<Register, VirtReg2IndexFunctor> UntiedDefs;394,13797
  std::vector<unsigned> LiveThruPressure;396,13882
  RegPressureTracker(399,13933
  RegPressureTracker(400,14011
  MachineBasicBlock::const_iterator getPos(415,14665
  void setPos(421,15005
  void initLiveThru(452,16201
  ArrayRef<unsigned> getLiveThru(456,16329
  RegisterPressure &getPressure(getPressure460,16540
  const RegisterPressure &getPressure(getPressure461,16588
  const std::vector<unsigned> &getRegSetPressureAtPos(getRegSetPressureAtPos465,16781
  void getMaxPressureDelta(503,18702
  void getPressureAfterInst(526,19819
  bool hasUntiedDef(536,20247

/usr/include/llvm/CodeGen/RegisterUsageInfo.h,251
#define LLVM_CODEGEN_REGISTERUSAGEINFO_H19,811
class PhysicalRegisterUsageInfo 34,1102
  static char ID;36,1167
  PhysicalRegisterUsageInfo(38,1186
  DenseMap<DenseMap64,2166
  DenseMap<const Function *, std::vector<uint32_t>> RegMasks;64,2166

/usr/include/llvm/CodeGen/ReplaceWithVeclib.h,214
#define LLVM_CODEGEN_REPLACEWITHVECLIB_H15,710
struct ReplaceWithVeclib 24,908
  PreservedAnalyses run(25,977
struct ReplaceWithVeclibLegacy 29,1063
  static char ID;30,1118
  ReplaceWithVeclibLegacy(31,1136

/usr/include/llvm/CodeGen/ResourcePriorityQueue.h,1082
#define LLVM_CODEGEN_RESOURCEPRIORITYQUEUE_H17,718
  struct resource_sort 30,1031
    ResourcePriorityQueue *PQ;PQ31,1056
    explicit resource_sort(32,1087
    bool operator(34,1154
  class ResourcePriorityQueue 37,1223
    std::vector<SUnit> *SUnits;SUnits39,1339
    std::vector<unsigned> NumNodesSolelyBlocking;45,1617
    std::vector<SUnit*> Queue;48,1695
    std::vector<unsigned> RegPressure;52,1807
    std::vector<unsigned> RegLimit;56,1939
    resource_sort Picker;58,1976
    const TargetRegisterInfo *TRI;TRI59,2002
    const TargetLowering *TLI;TLI60,2037
    const TargetInstrInfo *TII;TII61,2068
    const InstrItineraryData* InstrItins;62,2100
    std::unique_ptr<DFAPacketizer> ResourcesModel;66,2286
    std::vector<SUnit*> Packet;70,2421
    unsigned ParallelLiveRanges;73,2507
    int HorizontalVerticalBalance;74,2540
    bool isBottomUp(79,2636
    void addNode(83,2750
    void updateNode(87,2858
    void releaseState(89,2908
    unsigned getLatency(93,2974
    unsigned getNumSolelyBlockNodes(98,3118
    bool empty(113,3665

/usr/include/llvm/CodeGen/SDNodeProperties.td,666
class SDPatternOperator 12,429
  list<SDNodeProperty> Properties 13,455
def SDNPCommutative : SDNodeProperty;21,662
def SDNPAssociative : SDNodeProperty;22,722
def SDNPHasChain    : SDNodeProperty;23,796
def SDNPOutGlue     : SDNodeProperty;24,868
def SDNPInGlue      : SDNodeProperty;25,931
def SDNPOptInGlue   : SDNodeProperty;26,994
def SDNPMayStore    : SDNodeProperty;27,1068
def SDNPMayLoad     : SDNodeProperty;28,1149
def SDNPSideEffect  : SDNodeProperty;29,1225
def SDNPMemOperand  : SDNodeProperty;30,1301
def SDNPVariadic    : SDNodeProperty;31,1381
def SDNPWantRoot    : SDNodeProperty;32,1453
def SDNPWantParent  : SDNodeProperty;33,1534

/usr/include/llvm/CodeGen/ScheduleDAGMutation.h,114
#define LLVM_CODEGEN_SCHEDULEDAGMUTATION_H15,642
class ScheduleDAGMutation 22,790
  virtual void anchor(23,818

/usr/include/llvm/CodeGen/ScheduleDFS.h,1106
#define LLVM_CODEGEN_SCHEDULEDFS_H14,565
struct ILPValue 34,1167
  unsigned InstrCount;35,1185
  unsigned Length;38,1335
  ILPValue(40,1355
  void print(59,1881
class SchedDFSResult 65,2016
  static const unsigned InvalidSubtreeID 68,2069
  struct NodeData 76,2442
  struct TreeData 84,2611
  struct Connection 92,2811
    unsigned TreeID;93,2833
    unsigned Level;94,2854
    Connection(96,2875
  bool IsBottomUp;99,2958
  unsigned SubtreeLimit;100,2977
  std::vector<NodeData> DFSNodeData;102,3048
  SmallVector<SmallVector105,3131
  SmallVector<TreeData, 16> DFSTreeData;105,3131
  std::vector<std::vector109,3265
  std::vector<SmallVector<Connection, 4>> SubtreeConnections;109,3265
  std::vector<unsigned> SubtreeConnectLevels;113,3441
  SchedDFSResult(116,3496
  unsigned getSubtreeLimit(120,3654
  bool empty(125,3843
  void clear(128,3922
  void resize(136,4119
  unsigned getNumInstrs(145,4378
  unsigned getNumSubInstrs(151,4568
  ILPValue getILP(158,4760
  unsigned getNumSubtrees(163,4937
  unsigned getSubtreeID(169,5179
  unsigned getSubtreeLevel(180,5558

/usr/include/llvm/CodeGen/ScheduleHazardRecognizer.h,755
#define LLVM_CODEGEN_SCHEDULEHAZARDRECOGNIZER_H15,629
class ScheduleHazardRecognizer 25,902
  virtual ~ScheduleHazardRecognizer(35,1316
  enum HazardType 37,1356
    NoHazard,38,1376
    Hazard,39,1445
    NoopHazard 40,1516
  unsigned getMaxLookAhead(43,1596
  bool isEnabled(45,1657
  virtual bool atIssueLimit(51,1878
  virtual HazardType getHazardType(60,2411
  virtual void Reset(67,2664
  virtual void EmitInstruction(71,2807
  virtual void EmitInstruction(75,2984
  virtual unsigned PreEmitNoops(82,3309
  virtual unsigned PreEmitNoops(88,3504
  virtual bool ShouldPreferAnother(95,3809
  virtual void AdvanceCycle(104,4220
  virtual void RecedeCycle(109,4451
  virtual void EmitNoop(113,4581
  virtual void EmitNoops(120,4784

/usr/include/llvm/CodeGen/ScoreboardHazardRecognizer.h,475
#define LLVM_CODEGEN_SCOREBOARDHAZARDRECOGNIZER_H16,697
class ScoreboardHazardRecognizer 29,948
  class Scoreboard 39,1478
    ~Scoreboard(54,1985
    size_t getDepth(58,2033
    void reset(68,2344
    void advance(78,2542
    void recede(82,2607
  const char *DebugType;DebugType92,2824
  const InstrItineraryData *ItinData;ItinData95,2886
  const ScheduleDAG *DAG;DAG97,2925
  Scoreboard ReservedScoreboard;105,3119
  Scoreboard RequiredScoreboard;106,3152

/usr/include/llvm/CodeGen/SelectionDAGAddressAnalysis.h,487
#define LLVM_CODEGEN_SELECTIONDAGADDRESSANALYSIS_H10,421
class BaseIndexOffset 32,1213
  SDValue Base;34,1246
  SDValue Index;35,1262
  std::optional<int64_t> Offset;36,1279
  BaseIndexOffset(41,1383
  BaseIndexOffset(43,1519
  SDValue getBase(48,1714
  SDValue getBase(49,1751
  SDValue getIndex(50,1794
  SDValue getIndex(51,1833
  void addToOffset(52,1878
  bool hasValidOffset(55,1967
  int64_t getOffset(56,2028
  bool equalBaseIndex(64,2408
  bool contains(76,2876

/usr/include/llvm/CodeGen/Spiller.h,130
#define LLVM_CODEGEN_SPILLER_H10,401
class Spiller 24,678
  virtual void anchor(25,694
  virtual void postOptimization(33,857

/usr/include/llvm/CodeGen/SwiftErrorValueTracking.h,585
#define LLVM_CODEGEN_SWIFTERRORVALUETRACKING_H16,692
class SwiftErrorValueTracking 34,1082
  MachineFunction *MF;MF36,1190
  const Function *Fn;Fn37,1213
  const TargetLowering *TLI;TLI38,1235
  const TargetInstrInfo *TII;TII39,1264
  DenseMap<std::pair<std::pair43,1408
      VRegDefMap;44,1482
  DenseMap<DenseMap49,1701
      VRegUpwardsUse;50,1775
  llvm::DenseMap<llvm::DenseMap54,1923
      VRegDefUses;55,1996
  const Value *SwiftErrorArg;SwiftErrorArg58,2071
  SwiftErrorValues SwiftErrorVals;64,2321
  const Value *getFunctionArg(getFunctionArg72,2595

/usr/include/llvm/CodeGen/TailDuplicator.h,678
#define LLVM_CODEGEN_TAILDUPLICATOR_H15,606
class TailDuplicator 39,1217
  const TargetInstrInfo *TII;TII40,1240
  const TargetRegisterInfo *TRI;TRI41,1270
  const MachineBranchProbabilityInfo *MBPI;MBPI42,1303
  const MachineModuleInfo *MMI;MMI43,1347
  MachineRegisterInfo *MRI;MRI44,1379
  MachineFunction *MF;MF45,1407
  MBFIWrapper *MBFI;MBFI46,1430
  ProfileSummaryInfo *PSI;PSI47,1451
  bool PreRegAlloc;48,1478
  bool LayoutMode;49,1498
  unsigned TailDupSize;50,1517
  SmallVector<Register,Register53,1605
  SmallVector<Register, 16> SSAUpdateVRs;53,1605
  DenseMap<DenseMap59,1824
  DenseMap<Register, AvailableValsTy> SSAUpdateVals;59,1824

/usr/include/llvm/CodeGen/TargetCallingConv.h,3315
#define LLVM_CODEGEN_TARGETCALLINGCONV_H14,574
  struct ArgFlagsTy 27,861
    unsigned IsZExt 29,894
    unsigned IsSExt 30,942
    unsigned IsInReg 31,990
    unsigned IsSRet 32,1043
    unsigned IsByVal 33,1099
    unsigned IsByRef 34,1156
    unsigned IsNest 35,1207
    unsigned IsReturned 36,1264
    unsigned IsSplit 37,1314
    unsigned IsInAlloca 38,1340
    unsigned IsPreallocated 39,1397
    unsigned IsSplitEnd 40,1458
    unsigned IsSwiftSelf 41,1515
    unsigned IsSwiftAsync 42,1572
    unsigned IsSwiftError 43,1639
    unsigned IsCFGuardTarget 44,1697
    unsigned IsHva 45,1762
    unsigned IsHvaStart 46,1812
    unsigned IsSecArgPass 47,1868
    unsigned MemAlign 48,1920
    unsigned OrigAlign 51,2151
    unsigned IsInConsecutiveRegsLast 52,2215
    unsigned IsInConsecutiveRegs 53,2257
    unsigned IsCopyElisionCandidate 54,2295
    unsigned IsPointer 55,2373
    ArgFlagsTy(62,2555
    bool isZExt(73,3119
    void setZExt(74,3162
    bool isSExt(76,3198
    void setSExt(77,3241
    bool isInReg(79,3277
    void setInReg(80,3322
    bool isSRet(82,3360
    void setSRet(83,3403
    bool isByVal(85,3439
    void setByVal(86,3484
    bool isByRef(88,3522
    void setByRef(89,3567
    bool isInAlloca(91,3605
    void setInAlloca(92,3656
    bool isPreallocated(94,3700
    void setPreallocated(95,3759
    bool isSwiftSelf(97,3811
    void setSwiftSelf(98,3864
    bool isSwiftAsync(100,3910
    void setSwiftAsync(101,3965
    bool isSwiftError(103,4013
    void setSwiftError(104,4068
    bool isCFGuardTarget(106,4116
    void setCFGuardTarget(107,4177
    bool isHva(109,4231
    void setHva(110,4272
    bool isHvaStart(112,4306
    void setHvaStart(113,4357
    bool isSecArgPass(115,4401
    void setSecArgPass(116,4456
    bool isNest(118,4504
    void setNest(119,4547
    bool isReturned(121,4583
    void setReturned(122,4634
    bool isInConsecutiveRegs(124,4691
    void setInConsecutiveRegs(125,4761
    bool isInConsecutiveRegsLast(127,4842
    void setInConsecutiveRegsLast(128,4919
    bool isSplit(132,5018
    void setSplit(133,5065
    bool isSplitEnd(135,5104
    void setSplitEnd(136,5157
    bool isCopyElisionCandidate(138,5202
    void setCopyElisionCandidate(139,5278
    bool isPointer(141,5346
    void setPointer(142,5396
    Align getNonZeroMemAlign(144,5438
    void setMemAlign(148,5538
    Align getNonZeroByValAlign(153,5669
    Align getNonZeroOrigAlign(160,5857
    void setOrigAlign(164,5959
    unsigned getByValSize(169,6093
    void setByValSize(173,6205
    unsigned getByRefSize(178,6315
    void setByRefSize(182,6427
    unsigned getPointerAddrSpace(187,6537
    void setPointerAddrSpace(188,6607
  struct InputArg 195,6884
    ArgFlagsTy Flags;196,6904
    MVT VT 197,6926
    EVT ArgVT;198,6951
    bool Used 199,6966
    unsigned OrigArgIndex;202,7034
    static const unsigned NoArgIndex 204,7128
    unsigned PartOffset;209,7399
    InputArg(212,7451
    bool isOrigArg(219,7699
    unsigned getOrigArgIndex(223,7776
  struct OutputArg 233,8127
    ArgFlagsTy Flags;234,8148
    MVT VT;235,8170
    EVT ArgVT;236,8182
    bool IsFixed 239,8279
    unsigned OrigArgIndex;242,8350
    unsigned PartOffset;247,8601
    OutputArg(250,8654

/usr/include/llvm/CodeGen/TargetOpcodes.h,267
#define LLVM_CODEGEN_TARGETOPCODES_H14,559
#define HANDLE_TARGET_OPCODE(22,728
#define HANDLE_TARGET_OPCODE_MARKER(23,767
inline bool isPreISelGenericOpcode(30,1008
inline bool isTargetSpecificOpcode(36,1257
inline bool isPreISelGenericOptimizationHint(42,1485

/usr/include/llvm/CodeGen/TypePromotion.h,173
#define LLVM_CODEGEN_TYPEPROMOTION_H15,549
class TypePromotionPass 24,677
  const TargetMachine *TM;TM26,754
  TypePromotionPass(29,790
  PreservedAnalyses run(30,847

/usr/include/llvm/CodeGen/UnreachableBlockElim.h,124
#define LLVM_CODEGEN_UNREACHABLEBLOCKELIM_H23,1084
class UnreachableBlockElimPass29,1181
  PreservedAnalyses run(32,1275

/usr/include/llvm/CodeGen/ValueTypes.h,2448
#define LLVM_CODEGEN_VALUETYPES_H16,716
  struct EVT 34,1191
    constexpr EVT(41,1331
    constexpr EVT(42,1387
    bool operator==(operator==44,1423
    bool operator!=(operator!=47,1494
    static EVT getFloatingPointVT(58,1908
    static EVT getIntegerVT(64,2108
    static EVT getVectorVT(73,2471
    static EVT getVectorVT(83,2938
    EVT changeVectorElementTypeToInteger(93,3356
    EVT changeVectorElementType(101,3706
    EVT changeTypeToInteger(113,4227
    bool isZeroSized(124,4561
    bool isSimple(129,4710
    bool isExtended(134,4876
    bool isFloatingPoint(139,4996
    bool isInteger(144,5181
    bool isScalarInteger(149,5341
    bool isScalableTargetExtVT(155,5557
    bool isVector(160,5711
    bool isScalableVector(166,5906
    bool isFixedLengthVector(170,6026
    bool isScalableVT(176,6231
    bool is16BitVector(181,6383
    bool is32BitVector(186,6547
    bool is64BitVector(191,6711
    bool is128BitVector(196,6876
    bool is256BitVector(201,7044
    bool is512BitVector(206,7212
    bool is1024BitVector(211,7381
    bool is2048BitVector(216,7553
    bool isOverloaded(221,7734
    bool isByteSized(226,7909
    bool isRound(231,8083
    bool bitsEq(239,8331
    bool knownBitsGT(245,8541
    bool knownBitsGE(251,8754
    bool knownBitsLT(256,8945
    bool knownBitsLE(262,9159
    bool bitsGT(267,9325
    bool bitsGE(275,9614
    bool bitsLT(283,9899
    bool bitsLE(291,10188
    MVT getSimpleVT(299,10491
    EVT getScalarType(306,10693
    EVT getVectorElementType(311,10852
    unsigned getVectorNumElements(319,11130
    ElementCount getVectorElementCount(333,11678
    unsigned getVectorMinNumElements(342,11979
    TypeSize getSizeInBits(351,12337
    uint64_t getFixedSizeInBits(359,12606
    uint64_t getScalarSizeInBits(363,12701
    TypeSize getStoreSize(373,13094
    uint64_t getScalarStoreSize(380,13399
    TypeSize getStoreSizeInBits(390,13789
    EVT getRoundIntegerType(397,14051
    EVT getHalfSizedIntegerVT(408,14578
    EVT widenIntegerVectorElementType(422,15205
    EVT getHalfNumVectorElementsVT(431,15617
    EVT getDoubleNumVectorElementsVT(441,16086
    bool isPow2VectorType(448,16364
    EVT getPow2VectorType(455,16604
    void print(474,17239
    intptr_t getRawBits(488,17847
    struct compareRawBits 497,18073
      bool operator()(operator()498,18101
  inline raw_ostream &operator<<(operator<<538,19992

/usr/include/llvm/CodeGen/ValueTypes.td,9082
  string Namespace 16,670
  string LLVMName 17,698
  int Size 18,724
  int Value 19,743
  int nElem 20,764
  ValueType ElementType 21,781
  int isOverloaded 22,810
  int isInteger 23,838
  int isFP 24,863
  int isVector 25,883
  int isScalable 26,907
class VTAny<VTAny29,936
  let isOverloaded 30,983
    : ValueType<ValueType34,1046
    : ValueType<ValueType39,1136
  let nElem 45,1286
  let ElementType 46,1307
  let isInteger 47,1332
  let isFP 48,1365
  let isVector 49,1388
    : VTVec<VTVec53,1471
defset list<ValueType> ValueTypes 57,1532
def i1      : VTInt<VTInt63,1652
def i2      : VTInt<VTInt64,1707
def i4      : VTInt<VTInt65,1760
def i8      : VTInt<VTInt66,1813
def i16     : VTInt<VTInt67,1866
def i32     : VTInt<VTInt68,1920
def i64     : VTInt<VTInt69,1974
def i128    : VTInt<VTInt70,2028
def bf16    : VTFP<VTFP72,2084
def f16     : VTFP<VTFP73,2151
def f32     : VTFP<VTFP74,2212
def f64     : VTFP<VTFP75,2273
def f80     : VTFP<VTFP76,2334
def f128    : VTFP<VTFP77,2395
def ppcf128 : VTFP<VTFP78,2457
def v1i1    : VTVec<VTVec80,2524
def v2i1    : VTVec<VTVec81,2586
def v4i1    : VTVec<VTVec82,2648
def v8i1    : VTVec<VTVec83,2710
def v16i1   : VTVec<VTVec84,2772
def v32i1   : VTVec<VTVec85,2834
def v64i1   : VTVec<VTVec86,2896
def v128i1  : VTVec<VTVec87,2958
def v256i1  : VTVec<VTVec88,3020
def v512i1  : VTVec<VTVec89,3082
def v1024i1 : VTVec<VTVec90,3144
def v2048i1 : VTVec<VTVec91,3206
def v128i2  : VTVec<VTVec93,3269
def v256i2  : VTVec<VTVec94,3332
def v64i4   : VTVec<VTVec96,3396
def v128i4  : VTVec<VTVec97,3459
def v1i8    : VTVec<VTVec99,3523
def v2i8    : VTVec<VTVec100,3585
def v4i8    : VTVec<VTVec101,3647
def v8i8    : VTVec<VTVec102,3709
def v16i8   : VTVec<VTVec103,3771
def v32i8   : VTVec<VTVec104,3833
def v64i8   : VTVec<VTVec105,3895
def v128i8  : VTVec<VTVec106,3957
def v256i8  : VTVec<VTVec107,4019
def v512i8  : VTVec<VTVec108,4081
def v1024i8 : VTVec<VTVec109,4143
def v1i16   : VTVec<VTVec111,4206
def v2i16   : VTVec<VTVec112,4268
def v3i16   : VTVec<VTVec113,4330
def v4i16   : VTVec<VTVec114,4392
def v8i16   : VTVec<VTVec115,4454
def v16i16  : VTVec<VTVec116,4516
def v32i16  : VTVec<VTVec117,4578
def v64i16  : VTVec<VTVec118,4640
def v128i16 : VTVec<VTVec119,4702
def v256i16 : VTVec<VTVec120,4764
def v512i16 : VTVec<VTVec121,4826
def v1i32    : VTVec<VTVec123,4889
def v2i32    : VTVec<VTVec124,4954
def v3i32    : VTVec<VTVec125,5019
def v4i32    : VTVec<VTVec126,5084
def v5i32    : VTVec<VTVec127,5149
def v6i32    : VTVec<VTVec128,5214
def v7i32    : VTVec<VTVec129,5279
def v8i32    : VTVec<VTVec130,5344
def v9i32    : VTVec<VTVec131,5409
def v10i32   : VTVec<VTVec132,5474
def v11i32   : VTVec<VTVec133,5539
def v12i32   : VTVec<VTVec134,5604
def v16i32   : VTVec<VTVec135,5669
def v32i32   : VTVec<VTVec136,5734
def v64i32   : VTVec<VTVec137,5799
def v128i32  : VTVec<VTVec138,5864
def v256i32  : VTVec<VTVec139,5929
def v512i32  : VTVec<VTVec140,5994
def v1024i32 : VTVec<VTVec141,6059
def v2048i32 : VTVec<VTVec142,6124
def v1i64   : VTVec<VTVec144,6190
def v2i64   : VTVec<VTVec145,6252
def v3i64   : VTVec<VTVec146,6314
def v4i64   : VTVec<VTVec147,6376
def v8i64   : VTVec<VTVec148,6438
def v16i64  : VTVec<VTVec149,6500
def v32i64  : VTVec<VTVec150,6562
def v64i64  : VTVec<VTVec151,6624
def v128i64 : VTVec<VTVec152,6686
def v256i64 : VTVec<VTVec153,6748
def v1i128  : VTVec<VTVec155,6811
def v1f16    : VTVec<VTVec157,6874
def v2f16    : VTVec<VTVec158,6940
def v3f16    : VTVec<VTVec159,7006
def v4f16    : VTVec<VTVec160,7072
def v8f16    : VTVec<VTVec161,7138
def v16f16   : VTVec<VTVec162,7204
def v32f16   : VTVec<VTVec163,7270
def v64f16   : VTVec<VTVec164,7336
def v128f16  : VTVec<VTVec165,7402
def v256f16  : VTVec<VTVec166,7468
def v512f16  : VTVec<VTVec167,7534
def v2bf16   : VTVec<VTVec169,7601
def v3bf16   : VTVec<VTVec170,7668
def v4bf16   : VTVec<VTVec171,7735
def v8bf16   : VTVec<VTVec172,7802
def v16bf16  : VTVec<VTVec173,7869
def v32bf16  : VTVec<VTVec174,7936
def v64bf16  : VTVec<VTVec175,8003
def v128bf16 : VTVec<VTVec176,8070
def v1f32    : VTVec<VTVec178,8138
def v2f32    : VTVec<VTVec179,8204
def v3f32    : VTVec<VTVec180,8270
def v4f32    : VTVec<VTVec181,8336
def v5f32    : VTVec<VTVec182,8402
def v6f32    : VTVec<VTVec183,8468
def v7f32    : VTVec<VTVec184,8534
def v8f32    : VTVec<VTVec185,8600
def v9f32    : VTVec<VTVec186,8666
def v10f32   : VTVec<VTVec187,8732
def v11f32   : VTVec<VTVec188,8798
def v12f32   : VTVec<VTVec189,8864
def v16f32   : VTVec<VTVec190,8930
def v32f32   : VTVec<VTVec191,8996
def v64f32   : VTVec<VTVec192,9062
def v128f32  : VTVec<VTVec193,9128
def v256f32  : VTVec<VTVec194,9194
def v512f32  : VTVec<VTVec195,9260
def v1024f32 : VTVec<VTVec196,9326
def v2048f32 : VTVec<VTVec197,9392
def v1f64    : VTVec<VTVec199,9459
def v2f64    : VTVec<VTVec200,9525
def v3f64    : VTVec<VTVec201,9591
def v4f64    : VTVec<VTVec202,9657
def v8f64    : VTVec<VTVec203,9723
def v16f64   : VTVec<VTVec204,9789
def v32f64   : VTVec<VTVec205,9855
def v64f64   : VTVec<VTVec206,9921
def v128f64  : VTVec<VTVec207,9987
def v256f64  : VTVec<VTVec208,10053
def nxv1i1  : VTScalableVec<VTScalableVec210,10120
def nxv2i1  : VTScalableVec<VTScalableVec211,10192
def nxv4i1  : VTScalableVec<VTScalableVec212,10264
def nxv8i1  : VTScalableVec<VTScalableVec213,10336
def nxv16i1 : VTScalableVec<VTScalableVec214,10408
def nxv32i1 : VTScalableVec<VTScalableVec215,10480
def nxv64i1 : VTScalableVec<VTScalableVec216,10552
def nxv1i8  : VTScalableVec<VTScalableVec218,10625
def nxv2i8  : VTScalableVec<VTScalableVec219,10697
def nxv4i8  : VTScalableVec<VTScalableVec220,10769
def nxv8i8  : VTScalableVec<VTScalableVec221,10841
def nxv16i8 : VTScalableVec<VTScalableVec222,10913
def nxv32i8 : VTScalableVec<VTScalableVec223,10985
def nxv64i8 : VTScalableVec<VTScalableVec224,11057
def nxv1i16  : VTScalableVec<VTScalableVec226,11130
def nxv2i16  : VTScalableVec<VTScalableVec227,11204
def nxv4i16  : VTScalableVec<VTScalableVec228,11278
def nxv8i16  : VTScalableVec<VTScalableVec229,11352
def nxv16i16 : VTScalableVec<VTScalableVec230,11426
def nxv32i16 : VTScalableVec<VTScalableVec231,11500
def nxv1i32  : VTScalableVec<VTScalableVec233,11575
def nxv2i32  : VTScalableVec<VTScalableVec234,11649
def nxv4i32  : VTScalableVec<VTScalableVec235,11723
def nxv8i32  : VTScalableVec<VTScalableVec236,11797
def nxv16i32 : VTScalableVec<VTScalableVec237,11871
def nxv32i32 : VTScalableVec<VTScalableVec238,11945
def nxv1i64  : VTScalableVec<VTScalableVec240,12020
def nxv2i64  : VTScalableVec<VTScalableVec241,12094
def nxv4i64  : VTScalableVec<VTScalableVec242,12168
def nxv8i64  : VTScalableVec<VTScalableVec243,12242
def nxv16i64 : VTScalableVec<VTScalableVec244,12316
def nxv32i64 : VTScalableVec<VTScalableVec245,12390
def nxv1f16  : VTScalableVec<VTScalableVec247,12465
def nxv2f16  : VTScalableVec<VTScalableVec248,12540
def nxv4f16  : VTScalableVec<VTScalableVec249,12615
def nxv8f16  : VTScalableVec<VTScalableVec250,12690
def nxv16f16 : VTScalableVec<VTScalableVec251,12765
def nxv32f16 : VTScalableVec<VTScalableVec252,12840
def nxv1bf16  : VTScalableVec<VTScalableVec254,12916
def nxv2bf16  : VTScalableVec<VTScalableVec255,12993
def nxv4bf16  : VTScalableVec<VTScalableVec256,13070
def nxv8bf16  : VTScalableVec<VTScalableVec257,13147
def nxv16bf16 : VTScalableVec<VTScalableVec258,13224
def nxv32bf16 : VTScalableVec<VTScalableVec259,13301
def nxv1f32  : VTScalableVec<VTScalableVec261,13379
def nxv2f32  : VTScalableVec<VTScalableVec262,13454
def nxv4f32  : VTScalableVec<VTScalableVec263,13529
def nxv8f32  : VTScalableVec<VTScalableVec264,13604
def nxv16f32 : VTScalableVec<VTScalableVec265,13679
def nxv1f64  : VTScalableVec<VTScalableVec267,13755
def nxv2f64  : VTScalableVec<VTScalableVec268,13830
def nxv4f64  : VTScalableVec<VTScalableVec269,13905
def nxv8f64  : VTScalableVec<VTScalableVec270,13980
def x86mmx    : ValueType<ValueType272,14056
def FlagVT    : ValueType<ValueType273,14112
def isVoid    : ValueType<ValueType276,14199
def untyped   : ValueType<ValueType277,14259
def funcref   : ValueType<ValueType280,14357
def externref : ValueType<ValueType281,14426
def x86amx    : ValueType<ValueType282,14497
def i64x8     : ValueType<ValueType283,14553
              : ValueType<ValueType285,14643
def spirvbuiltin : ValueType<ValueType286,14714
def token      : ValueType<ValueType288,14779
def MetadataVT : ValueType<ValueType289,14827
def iPTRAny    : VTAny<VTAny295,15021
def vAny       : VTAny<VTAny298,15105
def fAny       : VTAny<VTAny301,15190
def iAny       : VTAny<VTAny304,15280
def iPTR       : ValueType<ValueType307,15366
def Any        : VTAny<VTAny310,15460
  int AddrSpace 322,15921

/usr/include/llvm/CodeGen/VirtRegMap.h,1376
#define LLVM_CODEGEN_VIRTREGMAP_H17,804
  class VirtRegMap 33,1157
      NO_PHYS_REG 36,1228
      NO_STACK_SLOT 37,1251
      MAX_STACK_SLOT 38,1287
    IndexedMap<Register,Register52,1790
    IndexedMap<Register, VirtReg2IndexFunctor> Virt2PhysMap;52,1790
    IndexedMap<int,int58,2066
    IndexedMap<int, VirtReg2IndexFunctor> Virt2StackSlotMap;58,2066
    IndexedMap<unsigned,unsigned62,2223
    IndexedMap<unsigned, VirtReg2IndexFunctor> Virt2SplitMap;62,2223
    DenseMap<unsigned,unsigned66,2382
    DenseMap<unsigned, ShapeT> Virt2ShapeMap;66,2382
    unsigned createSpillSlot(69,2494
    static char ID;72,2566
    VirtRegMap(74,2587
    bool runOnMachineFunction(80,2832
    MachineFunction &getMachineFunction(getMachineFunction87,3040
    MachineRegisterInfo &getRegInfo(getRegInfo92,3192
    const TargetRegisterInfo &getTargetRegInfo(getTargetRegInfo93,3253
    bool hasPhys(99,3440
    MCRegister getPhys(105,3623
    bool isShapeMapEmpty(114,3941
    bool hasShape(116,4009
    ShapeT getShape(120,4102
    void assignVirt2Shape(125,4234
    void clearVirt(131,4427
    void clearAllVirt(139,4737
    void setIsSplitFromReg(153,5233
    Register getPreSplitReg(161,5491
    Register getOriginal(169,5819
    bool isAssignedReg(176,6072
    int getStackSlot(187,6488
  inline raw_ostream &operator<<(operator<<204,7030

/usr/include/llvm/CodeGen/WasmEHFuncInfo.h,928
#define LLVM_CODEGEN_WASMEHFUNCINFO_H14,551
enum Tag 27,793
enum Tag { CPP_EXCEPTION 27,793
enum Tag { CPP_EXCEPTION = 0, C_LONGJMP 27,793
using BBOrMBB 30,843
struct WasmEHFuncInfo 32,915
  DenseMap<BBOrMBB,BBOrMBB35,1055
  DenseMap<BBOrMBB, BBOrMBB> SrcToUnwindDest;35,1055
  DenseMap<BBOrMBB,BBOrMBB36,1101
  DenseMap<BBOrMBB, SmallPtrSet<BBOrMBB,BBOrMBB36,1101
  DenseMap<BBOrMBB, SmallPtrSet<BBOrMBB, 4>> UnwindDestToSrcs;36,1101
  const BasicBlock *getUnwindDest(getUnwindDest39,1202
  SmallPtrSet<const BasicBlock 43,1366
  SmallPtrSet<const BasicBlock *, 4> getUnwindSrcs(43,1366
  void setUnwindDest(51,1669
  bool hasUnwindDest(55,1813
  bool hasUnwindSrcs(58,1906
  MachineBasicBlock *getUnwindDest(getUnwindDest62,2001
  SmallPtrSet<MachineBasicBlock MachineBasicBlock66,2171
  getUnwindSrcs(67,2209
  void setUnwindDest(75,2483
  bool hasUnwindDest(79,2632
  bool hasUnwindSrcs(82,2728

/usr/include/llvm/CodeGen/WinEHFuncInfo.h,2432
#define LLVM_CODEGEN_WINEHFUNCINFO_H14,574
struct CxxUnwindMapEntry 40,1146
  int ToState;41,1173
  MBBOrBasicBlock Cleanup;42,1188
struct SEHUnwindMapEntry 46,1279
  int ToState 49,1436
  bool IsFinally 51,1457
  const Function *Filter Filter54,1528
  MBBOrBasicBlock Handler;57,1616
struct WinEHHandlerType 60,1647
  int Adjectives;61,1673
    const AllocaInst *Alloca;Alloca65,1798
    int FrameIndex;66,1828
  } CatchObj 67,1848
  GlobalVariable *TypeDescriptor;TypeDescriptor68,1867
  MBBOrBasicBlock Handler;69,1901
struct WinEHTryBlockMapEntry 72,1932
  int TryLow 73,1963
  int TryHigh 74,1982
  int CatchHigh 75,2002
  SmallVector<WinEHHandlerType,WinEHHandlerType76,2024
  SmallVector<WinEHHandlerType, 1> HandlerArray;76,2024
enum class ClrHandlerType 79,2077
enum class ClrHandlerType { Catch,79,2077
enum class ClrHandlerType { Catch, Finally,79,2077
enum class ClrHandlerType { Catch, Finally, Fault,79,2077
enum class ClrHandlerType { Catch, Finally, Fault, Filter 79,2077
struct ClrEHUnwindMapEntry 81,2139
  MBBOrBasicBlock Handler;82,2168
  uint32_t TypeToken;83,2195
  int HandlerParentState;84,2217
  int TryParentState;85,2293
  ClrHandlerType HandlerType;87,2445
struct WinEHFuncInfo 90,2479
  DenseMap<const Instruction 91,2502
  DenseMap<const Instruction *, int> EHPadStateMap;91,2502
  DenseMap<const FuncletPadInst 92,2554
  DenseMap<const FuncletPadInst *, int> FuncletBaseStateMap;92,2554
  DenseMap<const InvokeInst 93,2615
  DenseMap<const InvokeInst *, int> InvokeStateMap;93,2615
  DenseMap<MCSymbol MCSymbol94,2667
  DenseMap<MCSymbol *, std::pair<std::pair94,2667
  DenseMap<MCSymbol *, std::pair<int, MCSymbol *>> LabelToStateMap;94,2667
  DenseMap<DenseMap95,2735
  DenseMap<const BasicBlock *, int> BlockToStateMap;95,2735
  SmallVector<SmallVector96,2804
  SmallVector<CxxUnwindMapEntry, 4> CxxUnwindMap;96,2804
  SmallVector<SmallVector97,2854
  SmallVector<WinEHTryBlockMapEntry, 4> TryBlockMap;97,2854
  SmallVector<SmallVector98,2907
  SmallVector<SEHUnwindMapEntry, 4> SEHUnwindMap;98,2907
  SmallVector<SmallVector99,2957
  SmallVector<ClrEHUnwindMapEntry, 4> ClrEHUnwindMap;99,2957
  int UnwindHelpFrameIdx 100,3011
  int PSPSymFrameIdx 101,3071
  int getLastStateNumber(103,3128
  int EHRegNodeFrameIndex 110,3398
  int EHRegNodeEndOffset 111,3459
  int EHGuardFrameIndex 112,3519
  int SEHSetFrameOffset 113,3578

/usr/include/llvm/CodeGen/AccelTable.h,3733
#define LLVM_CODEGEN_ACCELTABLE_H14,562
class AccelTableData 114,4249
  virtual void print(126,4512
class AccelTableBase 135,4834
  using HashFn 137,4865
  struct HashData 140,4985
    DwarfStringPoolEntryRef Name;141,5005
    uint32_t HashValue;142,5039
    std::vector<AccelTableData *> Values;143,5063
    MCSymbol *Sym;Sym144,5105
    void dump(157,5540
  using HashList 160,5593
  using BucketList 161,5637
  BumpPtrAllocator Allocator;165,5734
  using StringEntries 167,5765
  StringEntries Entries;168,5821
  HashFn *Hash;Hash170,5847
  uint32_t BucketCount 171,5863
  uint32_t UniqueHashCount 172,5891
  HashList Hashes;174,5924
  BucketList Buckets;175,5943
  AccelTableBase(179,5996
  ArrayRef<HashList> getBuckets(183,6104
  uint32_t getBucketCount(184,6164
  uint32_t getUniqueHashCount(185,6222
  uint32_t getUniqueNameCount(186,6288
  void dump(190,6406
template <typename DataT> class AccelTable 202,6885
  AccelTable(204,6962
  void clear(208,7106
  const StringEntries getEntries(210,7187
void AccelTable<AccelTableDataT>::addName(addName215,7317
class AppleAccelTableData 232,8047
  struct Atom 237,8306
    const uint16_t Type;239,8341
    const uint16_t Form;241,8386
    constexpr Atom(243,8412
    void dump(247,8544
  static uint32_t hash(255,8714
struct OffsetAndUnitID 260,8887
  using Base 261,8944
  OffsetAndUnitID(262,8990
  OffsetAndUnitID(264,9030
  uint64_t offset(265,9108
  uint32_t unitID(266,9153
struct DenseMapInfo<DenseMapInfo270,9215
class DWARF5AccelTableData 276,9551
  struct AttributeEncoding 278,9612
    dwarf::Index Index;279,9641
    dwarf::Form Form;280,9665
  static uint32_t hash(283,9693
  DWARF5AccelTableData(287,9881
  uint64_t getDieOffset(298,10312
  OffsetAndUnitID getDieOffsetAndUnitID(303,10467
  unsigned getDieTag(307,10559
  unsigned getUnitID(308,10607
  bool isTU(309,10655
  void normalizeDIEToOffset(310,10692
  bool isNormalized(316,10946
  std::optional<uint64_t> getParentDieOffset(320,11037
  std::optional<OffsetAndUnitID> getParentDieOffsetAndUnitID(326,11206
  std::variant<std::variant338,11650
  std::variant<const DIE *, uint64_t> OffsetVal;338,11650
  std::optional<uint64_t> ParentOffset;339,11699
  uint32_t DieTag 340,11739
  uint32_t UnitID 341,11763
  uint32_t IsTU 342,11787
  uint64_t order(344,11809
struct TypeUnitMetaInfo 347,11874
  std::variant<std::variant349,11976
  std::variant<MCSymbol *, uint64_t> LabelOrSignature;349,11976
  unsigned UniqueID;351,12060
using TUVectorTy 353,12084
class DWARF5AccelTable 354,12137
  TUVectorTy TUSymbolsOrHashes;356,12270
  struct UnitIndexAndEncoding 359,12311
    unsigned Index;360,12343
    DWARF5AccelTableData::AttributeEncoding Encoding;361,12363
  const TUVectorTy &getTypeUnitsSymbols(getTypeUnitsSymbols364,12470
  void convertDieToOffset(371,12805
  void addTypeEntries(383,13190
void emitAppleAccelTable(402,13957
class AppleAccelTableOffsetData 425,15078
  AppleAccelTableOffsetData(427,15149
  static constexpr Atom Atoms[Atoms431,15250
  uint64_t order(438,15428
  const DIE &Die;Die440,15491
class AppleAccelTableTypeData 444,15590
  AppleAccelTableTypeData(446,15665
  static constexpr Atom Atoms[Atoms450,15786
class AppleAccelTableStaticOffsetData 462,16203
  AppleAccelTableStaticOffsetData(464,16280
  static constexpr Atom Atoms[Atoms468,16398
  uint64_t order(475,16576
  uint32_t Offset;477,16630
class AppleAccelTableStaticTypeData 482,16772
  AppleAccelTableStaticTypeData(484,16859
  static constexpr Atom Atoms[Atoms493,17262
  uint64_t order(502,17566
  uint32_t QualifiedNameHash;504,17620
  uint16_t Tag;505,17650
  bool ObjCClassIsImplementation;506,17666

/usr/include/llvm/CodeGen/AntiDepBreaker.h,138
#define LLVM_CODEGEN_ANTIDEPBREAKER_H15,642
class AntiDepBreaker 31,1102
  void UpdateDbgValue(59,2302
  void UpdateDbgValues(75,2919

/usr/include/llvm/CodeGen/AsmPrinter.h,4861
#define LLVM_CODEGEN_ASMPRINTER_H16,665
class AsmPrinter 84,2206
  TargetMachine &TM;TM87,2296
  const MCAsmInfo *MAI MAI90,2356
  MCContext &OutContext;OutContext94,2549
  std::unique_ptr<MCStreamer> OutStreamer;99,2780
  MachineFunction *MF MF102,2860
  MachineModuleInfo *MMI MMI105,2952
  MachineDominatorTree *MDT MDT108,3050
  MachineLoopInfo *MLI MLI111,3146
  MachineOptimizationRemarkEmitter *ORE ORE114,3216
  MCSymbol *CurrentPatchableFunctionEntrySym CurrentPatchableFunctionEntrySym117,3332
  MCSymbol *CurrentFnSym CurrentFnSym121,3516
  MCSymbol *CurrentFnDescSym CurrentFnDescSym125,3693
  MCSymbol *CurrentFnSymForSize CurrentFnSymForSize130,3932
  struct MBBSectionRange 134,4100
    MCSymbol *BeginLabel,BeginLabel135,4127
    MCSymbol *BeginLabel, *EndLabel;EndLabel135,4127
  MapVector<MapVector138,4170
  MapVector<unsigned, MBBSectionRange> MBBSectionRanges;138,4170
  using GOTEquivUsePair 142,4350
  MapVector<MapVector143,4421
  MapVector<const MCSymbol *, GOTEquivUsePair> GlobalGOTEquivs;143,4421
  struct HandlerInfo 147,4600
    std::unique_ptr<AsmPrinterHandler> Handler;148,4623
    StringRef TimerName;149,4671
    StringRef TimerDescription;150,4696
    StringRef TimerGroupName;151,4728
    StringRef TimerGroupDescription;152,4758
    HandlerInfo(154,4796
  enum class CFISection 163,5276
    None 164,5313
    EH 165,5377
    Debug 166,5411
  MCSymbol *CurrentFnEnd CurrentFnEnd170,5463
  DenseMap<DenseMap175,5676
  DenseMap<unsigned, MCSymbol *> MBBSectionExceptionSyms;175,5676
  MCSymbol *CurrentSectionBeginSym CurrentSectionBeginSym179,5881
  std::unique_ptr<AddrLabelMap> AddrLabelSymbols;183,6041
  DenseMap<DenseMap186,6145
  DenseMap<GCStrategy *, std::unique_ptr<GCMetadataPrinter>> GCMetadataPrinters;186,6145
  bool VerboseAsm;189,6283
  std::unique_ptr<raw_fd_ostream> StackUsageStream;192,6366
  DenseMap<DenseMap195,6474
  DenseMap<const MDNode *, SmallVector<const MCSymbol *>> PCSectionsSymbols;195,6474
  static char ID;197,6552
  MCSymbol *CurrentFnBegin CurrentFnBegin200,6582
  MCSymbol *CurrentFnBeginLocal CurrentFnBeginLocal203,6695
  std::vector<HandlerInfo> Handlers;207,6854
  size_t NumUserHandlers 208,6891
  StackMaps SM;210,6922
  std::unique_ptr<MachineDominatorTree> OwnedMDT;214,7001
  std::unique_ptr<MachineLoopInfo> OwnedMLI;217,7105
  DwarfDebug *DD DD220,7224
  PseudoProbeHandler *PP PP224,7341
  CFISection ModuleCFISection 227,7456
  bool HasSplitStack 232,7728
  bool HasNoSplitStack 237,7949
  DwarfDebug *getDwarfDebug(getDwarfDebug245,8109
  DwarfDebug *getDwarfDebug(getDwarfDebug246,8154
  bool isVerbose(265,8722
  virtual const MCSymbol *getFunctionFrameSymbol(getFunctionFrameSymbol272,8961
  MCSymbol *getFunctionBegin(getFunctionBegin274,9039
  MCSymbol *getFunctionEnd(getFunctionEnd275,9103
  MCSymbol *getAddrLabelSymbol(getAddrLabelSymbol284,9537
  bool doesDwarfUseRelocationsAcrossSections(330,11374
  void setDwarfUsesRelocationsAcrossSections(334,11481
  enum class SledKind 343,11873
    FUNCTION_ENTER 344,11907
    FUNCTION_EXIT 345,11931
    TAIL_CALL 346,11954
    LOG_ARGS_ENTER 347,11973
    CUSTOM_EVENT 348,11997
    TYPED_EVENT 349,12019
  struct XRayFunctionEntry 356,12365
    const MCSymbol *Sled;Sled357,12394
    const MCSymbol *Function;Function358,12420
    SledKind Kind;359,12450
    bool AlwaysInstrument;360,12469
    const class Function *Fn;Fn361,12496
    uint8_t Version;362,12526
  SmallVector<SmallVector368,12628
  SmallVector<XRayFunctionEntry, 4> Sleds;368,12628
  bool runOnMachineFunction(395,13668
  CFISection getModuleCFISectionType(442,15278
  struct Structor 474,16655
  using AliasMapTy 507,18096
  using AliasMapTy = DenseMap<uint64_t, SmallVector<SmallVector507,18096
  void addAsmPrinterHandler(533,19378
  virtual void emitStartOfAsmFile(543,19734
  virtual void emitEndOfAsmFile(547,19897
  virtual void emitFunctionBodyStart(551,20041
  virtual void emitFunctionBodyEnd(555,20180
  virtual void emitInstruction(567,20729
  virtual void emitFunctionDescriptor(576,21007
  virtual void emitXXStructor(584,21333
  virtual const MCSubtargetInfo *getIFuncMCSubtargetInfo(getIFuncMCSubtargetInfo602,22142
  virtual void emitMachOIFuncStubBody(606,22234
  virtual void emitMachOIFuncStubHelperBody(612,22466
  void emitLabelReference(691,25756
  void emitDwarfStringOffset(727,27492
  virtual unsigned getISAEncoding(755,28786
  template <typename T> void emitDwarfAbbrevs(771,29437
  virtual std::tuple<std::tuple792,30176
  mutable const MachineInstr *LastMI LastMI859,33681
  mutable unsigned LastFn 860,33729
  mutable unsigned Counter 861,33760
  bool DwarfUsesRelocationsAcrossSections 863,33795
  virtual bool shouldEmitWeakSwiftAsyncExtendedFramePointerFlags(908,35711

/usr/include/llvm/CodeGen/AssignmentTrackingAnalysis.h,1371
#define LLVM_CODEGEN_ASSIGNMENTTRACKINGANALYSIS_H10,420
namespace llvm 24,738
enum class VariableID 26,817
enum class VariableID : unsigned { Reserved 26,817
struct VarLocInfo 28,926
  llvm::VariableID VariableID;29,946
  DebugLoc DL;31,1009
class FunctionVarLocs 38,1294
  SmallVector<DebugVariable> Variables;40,1389
  SmallVector<VarLocInfo> VarLocRecords;44,1644
  unsigned SingleVarLocEnd 47,1830
  DenseMap<DenseMap49,1937
      VarLocsBeforeInst;50,2000
  DILocalVariable *getDILocalVariable(getDILocalVariable55,2123
  DILocalVariable *getDILocalVariable(getDILocalVariable60,2345
  const DebugVariable &getVariable(getVariable64,2536
  const VarLocInfo *single_locs_begin(single_locs_begin71,2735
  const VarLocInfo *single_locs_end(single_locs_end73,2885
  const VarLocInfo *locs_begin(locs_begin79,3103
  const VarLocInfo *locs_end(locs_end87,3404
class DebugAssignmentTrackingAnalysis105,3889
  static AnalysisKey Key;108,4054
  using Result 111,4089
class DebugAssignmentTrackingPrinterPass115,4184
  raw_ostream &OS;OS117,4290
  DebugAssignmentTrackingPrinterPass(120,4318
class AssignmentTrackingAnalysis 124,4456
  std::unique_ptr<FunctionVarLocs> Results;125,4513
  static char ID;128,4566
  static bool isRequired(134,4663
  void getAnalysisUsage(136,4708
  const FunctionVarLocs *getResults(getResults140,4799

/usr/include/llvm/CodeGen/BasicBlockSectionUtils.h,53
#define LLVM_CODEGEN_BASICBLOCKSECTIONUTILS_H10,416

/usr/include/llvm/CodeGen/BasicBlockSectionsProfileReader.h,1647
#define LLVM_CODEGEN_BASICBLOCKSECTIONSPROFILEREADER_H16,719
using namespace llvm;32,1220
struct BBClusterInfo 38,1403
  UniqueBBID BBID;40,1447
  unsigned ClusterID;42,1511
  unsigned PositionInCluster;44,1582
struct FunctionPathAndClusterInfo 48,1675
  SmallVector<BBClusterInfo> ClusterInfo;50,1767
  SmallVector<SmallVector<unsigned>> ClonePaths;54,2042
template <> struct DenseMapInfo<DenseMapInfo58,2136
  static inline UniqueBBID getEmptyKey(59,2182
  static inline UniqueBBID getTombstoneKey(63,2335
  static unsigned getHashValue(67,2508
  static bool isEqual(72,2740
class BasicBlockSectionsProfileReader 78,2958
  BasicBlockSectionsProfileReader(81,3065
  BasicBlockSectionsProfileReader(84,3204
  std::pair<std::pair96,3782
  StringRef getAliasName(104,4040
  Error createProfileParseError(110,4258
  const MemoryBuffer *MBuf MBuf134,5156
  line_iterator LineIt;137,5235
  StringMap<SmallString<128>> FunctionNameToDIFilename;141,5387
  StringMap<FunctionPathAndClusterInfo> ProgramPathAndClusterInfo;149,5780
  StringMap<StringRef> FuncAliasMap;153,5988
class BasicBlockSectionsProfileReaderAnalysis166,6522
  static AnalysisKey Key;170,6651
  typedef BasicBlockSectionsProfileReader Result;171,6677
  BasicBlockSectionsProfileReaderAnalysis(172,6727
  const TargetMachine *TM;TM177,6873
class BasicBlockSectionsProfileReaderWrapperPass 180,6904
  static char ID;182,6986
  BasicBlockSectionsProfileReader BBSPR;183,7004
  BasicBlockSectionsProfileReaderWrapperPass(185,7046
  BasicBlockSectionsProfileReaderWrapperPass(191,7300
  StringRef getPassName(197,7527
  std::pair<std::pair203,7674

/usr/include/llvm/CodeGen/BasicTTIImpl.h,5327
#define LLVM_CODEGEN_BASICTTIIMPL_H17,666
class BasicTTIImplBase 79,2676
  T *thisT(thisT85,2887
  InstructionCost getBroadcastShuffleOverhead(89,3026
  InstructionCost getPermuteShuffleOverhead(106,3829
  InstructionCost getExtractSubvectorOverhead(127,4895
  InstructionCost getInsertSubvectorOverhead(155,6187
  const TargetSubtargetInfo *getST(getST182,7445
  const TargetLoweringBase *getTLI(getTLI187,7617
  static ISD::MemIndexedMode getISDIndexedMode(191,7718
  InstructionCost getCommonMaskedMemoryOpCost(207,8163
  explicit BasicTTIImplBase(262,10683
  using TargetTransformInfoImplBase::DL;266,10821
  bool allowsMisalignedMemoryAccesses(271,10919
  bool hasBranchDivergence(279,11316
  bool isSourceOfDivergence(281,11391
  bool isAlwaysUniform(283,11454
  bool isValidAddrSpaceCast(285,11512
  bool addrspacesMayAlias(289,11603
  unsigned getFlatAddressSpace(293,11687
  bool collectFlatAddressOperands(298,11782
  bool isNoopAddrSpaceCast(303,11933
  unsigned getAssumedAddrSpace(307,12080
  bool isSingleThreaded(311,12204
  std::pair<std::pair316,12338
  getPredicatedAddrSpace(317,12375
  Value *rewriteIntrinsicWithAddressSpace(rewriteIntrinsicWithAddressSpace321,12496
  bool isLegalAddImmediate(326,12658
  bool isLegalICmpImmediate(330,12752
  bool isLegalAddressingMode(334,12848
  int64_t getPreferredLargeGEPBaseOffset(345,13286
  unsigned getStoreMinimumVF(349,13447
  bool isIndexedLoadLegal(369,14237
  bool isIndexedStoreLegal(375,14469
  bool isLSRCostLess(381,14704
  bool isNumRegsMajorCostOfLSR(385,14829
  bool shouldFoldTerminatingConditionAfterLSR(389,14936
  bool isProfitableLSRChainElement(394,15088
  InstructionCost getScalingFactorCost(398,15218
  bool isTruncateFree(411,15685
  bool isProfitableToHoist(415,15783
  bool useAA(419,15878
  bool isTypeLegal(421,15929
  unsigned getRegUsageForType(426,16048
  InstructionCost getGEPCost(431,16202
  unsigned getEstimatedNumberOfCaseClusters(437,16495
  bool shouldBuildLookupTables(496,18848
  bool shouldBuildRelLookupTables(502,19068
  bool haveFastSqrt(527,19940
  bool isFCmpOrdCheaperThanFCmpZero(534,20156
  InstructionCost getFPOpCost(538,20226
  bool preferToKeepConstantsAttached(548,20603
  unsigned getInliningThresholdMultiplier(567,21132
  unsigned adjustInliningThreshold(568,21196
  unsigned getCallerAllocaCost(569,21265
  int getInlinerVectorBonusPercent(573,21365
  void getUnrollingPreferences(575,21425
  void getPeelingPreferences(647,24430
  bool isHardwareLoopProfitable(655,24680
  bool preferPredicateOverEpilogue(662,25000
  getPreferredTailFoldingStyle(667,25135
  std::optional<Instruction *> instCombineIntrinsic(671,25275
  simplifyDemandedUseBitsIntrinsic(677,25491
  std::optional<Value *> simplifyDemandedVectorEltsIntrinsic(684,25854
  getCacheSize(695,26324
  getCacheAssociativity(701,26523
  virtual unsigned getCacheLineSize(711,26811
  virtual unsigned getPrefetchDistance(715,26902
  virtual unsigned getMinPrefetchStride(719,26999
  virtual unsigned getMaxPrefetchIterationsAhead(727,27413
  virtual bool enableWritePrefetching(731,27530
  virtual bool shouldPrefetchAddressSpace(735,27629
  TypeSize getRegisterBitWidth(744,27808
  std::optional<unsigned> getMaxVScale(748,27924
  std::optional<unsigned> getVScaleForTuning(749,27996
  bool isVScaleKnownToBeAPowerOfTwo(750,28074
  InstructionCost getScalarizationOverhead(755,28318
  InstructionCost getScalarizationOverhead(785,29544
  getOperandsScalarizationOverhead(801,30283
  InstructionCost getScalarizationOverhead(830,31459
  std::pair<std::pair848,32299
  std::pair<InstructionCost, MVT> getTypeLegalizationCost(848,32299
  unsigned getMaxInterleaveFactor(882,33551
  InstructionCost getArithmeticInstrCost(884,33617
  TTI::ShuffleKind improveShuffleKindFromMask(962,37026
  InstructionCost getShuffleCost(1010,38873
  InstructionCost getCastInstrCost(1039,40181
  InstructionCost getExtractWithExtendCost(1199,46666
  InstructionCost getCFInstrCost(1208,47185
  InstructionCost getCmpSelInstrCost(1213,47392
  InstructionCost getVectorInstrCost(1265,49453
  InstructionCost getVectorInstrCost(1271,49722
  InstructionCost getReplicationShuffleCost(1284,50219
  getMemoryOpCost(1318,51890
  InstructionCost getMaskedMemoryOpCost(1362,53904
  InstructionCost getGatherScatterOpCost(1369,54261
  InstructionCost getInterleavedMemoryOpCost(1378,54756
  InstructionCost getIntrinsicInstrCost(1522,61380
  getTypeBasedIntrinsicInstrCost(1808,74147
  InstructionCost getCallInstrCost(2333,96312
  unsigned getNumberOfParts(2339,96517
  InstructionCost getAddressComputationCost(2344,96690
  InstructionCost getTreeReductionCost(2370,98185
  InstructionCost getOrderedReductionCost(2447,101908
  InstructionCost getArithmeticReductionCost(2464,102626
  InstructionCost getMinMaxReductionCost(2475,103206
  InstructionCost getExtendedReductionCost(2524,105460
  InstructionCost getMulAccReductionCost(2540,106219
  InstructionCost getVectorSplitCost(2559,107082
class BasicTTIImpl 2566,107235
  using BaseT 2567,107296
  const TargetSubtargetInfo *ST;ST2571,107393
  const TargetLoweringBase *TLI;TLI2572,107426
  const TargetSubtargetInfo *getST(getST2574,107460
  const TargetLoweringBase *getTLI(getTLI2575,107518

/usr/include/llvm/CodeGen/CallBrPrepare.h,108
#define LLVM_CODEGEN_CALLBRPREPARE_H10,407
class CallBrPreparePass 16,497
  PreservedAnalyses run(18,573

/usr/include/llvm/CodeGen/CallingConvLower.h,3529
#define LLVM_CODEGEN_CALLINGCONVLOWER_H15,615
class CCValAssign 33,1055
  enum LocInfo 35,1083
    Full,36,1100
    SExt,37,1153
    ZExt,38,1215
    AExt,39,1277
    SExtUpper,40,1344
    ZExtUpper,42,1471
    AExtUpper,44,1598
    BCvt,46,1746
    Trunc,47,1808
    VExt,48,1866
    FPExt,51,2071
    Indirect 52,2146
  std::variant<std::variant62,2520
  std::variant<Register, int64_t, unsigned> Data;62,2520
  unsigned ValNo;65,2652
  unsigned isCustom 68,2739
  LocInfo HTP 71,2816
  MVT ValVT;74,2888
  MVT LocVT;77,2960
  CCValAssign(79,2974
  static CCValAssign getReg(84,3148
  static CCValAssign getCustomReg(91,3406
  static CCValAssign getMem(96,3619
  static CCValAssign getCustomMem(103,3868
  static CCValAssign getPending(108,4082
  void convertToReg(115,4324
  void convertToMem(117,4389
  unsigned getValNo(119,4445
  MVT getValVT(120,4491
  bool isRegLoc(122,4533
  bool isMemLoc(123,4608
  bool isPendingLoc(124,4682
  bool needsCustom(126,4762
  Register getLocReg(128,4811
  int64_t getLocMemOffset(129,4877
  unsigned getExtraInfo(130,4947
  MVT getLocVT(132,5017
  LocInfo getLocInfo(134,5059
  bool isExtInLoc(135,5104
  bool isUpperBitsInLoc(139,5193
struct ForwardedRegister 146,5398
  ForwardedRegister(147,5425
  Register VReg;149,5526
  MCPhysReg PReg;150,5543
  MVT VT;151,5561
typedef bool CCAssignFn(156,5723
typedef bool CCCustomFn(163,6113
class CCState 170,6535
  CallingConv::ID CallingConv;172,6560
  bool IsVarArg;173,6591
  bool AnalyzingMustTailForwardedRegs 174,6608
  MachineFunction &MF;MF175,6655
  const TargetRegisterInfo &TRI;TRI176,6678
  SmallVectorImpl<CCValAssign> &Locs;Locs177,6711
  LLVMContext &Context;Context178,6749
  bool NegativeOffsets;180,6837
  uint64_t StackSize;182,6862
  Align MaxStackArgAlign;183,6884
  SmallVector<SmallVector184,6910
  SmallVector<uint32_t, 16> UsedRegs;184,6910
  SmallVector<SmallVector185,6948
  SmallVector<CCValAssign, 4> PendingLocs;185,6948
  SmallVector<SmallVector186,6991
  SmallVector<ISD::ArgFlagsTy, 4> PendingArgFlags;186,6991
  struct ByValInfo 215,8267
    ByValInfo(216,8288
    unsigned Begin;219,8404
    unsigned End;222,8491
  SmallVector<SmallVector224,8514
  SmallVector<ByValInfo, 4 > ByValRegs;224,8514
  unsigned InRegsParamsProcessed;228,8665
  void addLoc(235,8884
  LLVMContext &getContext(getContext239,8950
  MachineFunction &getMachineFunction(getMachineFunction240,9004
  CallingConv::ID getCallingConv(241,9065
  bool isVarArg(242,9130
  uint64_t getStackSize(245,9248
  uint64_t getAlignedCallFrameSize(250,9501
  bool isAllocated(256,9692
  void AnalyzeArguments(266,10094
  void AnalyzeArguments(294,11314
  unsigned getFirstUnallocated(315,12253
  void DeallocateReg(322,12445
  MCRegister AllocateReg(330,12772
  MCRegister AllocateReg(338,12977
  MCPhysReg AllocateReg(349,13374
  MCPhysReg AllocateRegBlock(363,13965
  MCRegister AllocateReg(390,14852
  int64_t AllocateStack(404,15389
  int64_t AllocateStack(422,15996
  unsigned getInRegsParamsCount(438,16680
  unsigned getInRegsParamsProcessed(441,16807
  void getInRegsParamInfo(445,16997
  void addInRegsParamInfo(456,17410
  bool nextInRegsParam(463,17675
  void clearByValRegsInfo(471,17888
  void rewindByValRegsInfo(477,18020
  SmallVectorImpl<CCValAssign> &getPendingLocs(getPendingLocs482,18124
  SmallVectorImpl<ISD::ArgFlagsTy> &getPendingArgFlags(getPendingArgFlags487,18257
  void AnalyzeArgumentsSecondPass(516,19694

/usr/include/llvm/CodeGen/CodeGenPassBuilder.h,5349
#define LLVM_CODEGEN_CODEGENPASSBUILDER_H16,640
#define DUMMY_FUNCTION_PASS(80,3228
#define DUMMY_MACHINE_MODULE_PASS(87,3719
#define DUMMY_MACHINE_FUNCTION_PASS(99,4615
#define DUMMY_MACHINE_FUNCTION_ANALYSIS(108,5268
template <typename DerivedT> class CodeGenPassBuilder 127,6446
  explicit CodeGenPassBuilder(129,6510
  std::pair<std::pair154,7678
  void registerAnalyses(156,7752
  PassInstrumentationCallbacks *getPassInstrumentationCallbacks(getPassInstrumentationCallbacks162,7950
  class AddIRPass 178,8540
    AddIRPass(180,8570
    ~AddIRPass(181,8650
    void operator()(operator()187,8804
    ModulePassManager &MPM;MPM216,9678
    FunctionPassManager FPM;217,9706
    const DerivedT &PB;PB218,9735
  class AddMachinePass 222,9841
    AddMachinePass(224,9876
    template <typename PassT> void operator()(operator()227,9976
    template <typename PassT> void insertPass(241,10370
    MachineFunctionPassManager releasePM(249,10659
    MachineFunctionPassManager &PM;PM252,10740
    const DerivedT &PB;PB253,10776
  LLVMTargetMachine &TM;TM256,10806
  CGPassBuilderOption Opt;257,10831
  PassInstrumentationCallbacks *PIC;PIC258,10858
  void registerTargetAnalysis(261,10965
  void registerTargetAnalysis(262,11029
  void registerTargetAnalysis(263,11095
  std::pair<std::pair264,11168
  std::pair<StringRef, bool> getTargetPassNameFromLegacyName(264,11168
  template <typename TMC> TMC &getTM(getTM268,11277
  CodeGenOptLevel getOptLevel(269,11357
  bool isGlobalISelAbortEnabled(274,11582
  bool reportDiagnosticWhenGlobalISelFallback(281,11913
  Error addInstSelector(287,12195
  void addGlobalMergePass(293,12460
  void addILPOpts(301,12872
  void addPreRegAlloc(305,13036
  void addPreRewrite(319,13776
  void addPostRewrite(323,13931
  void addPostRegAlloc(327,14135
  void addPreSched2(331,14345
  void addPreEmitPass(335,14513
  void addPreEmitPass2(342,14914
  void addPreISel(349,15131
  Error addIRTranslator(355,15376
  void addPreLegalizeMachineIR(362,15676
  Error addLegalizeMachineIR(366,15876
  void addPreRegBankSelect(373,16201
  Error addRegBankSelect(378,16426
  void addPreGlobalInstructionSelect(385,16750
  Error addGlobalInstructionSelect(391,17060
  void addGCPasses(452,19762
  void addAsmPrinter(459,20009
  DerivedT &derived(derived480,20835
  const DerivedT &derived(derived481,20900
  bool runBeforeAdding(485,20990
  mutable SmallVector<SmallVector496,21311
      BeforeCallbacks;497,21376
  mutable SmallVector<SmallVector498,21399
  mutable SmallVector<llvm::unique_function<void(StringRef)>, 4> AfterCallbacks;498,21399
Error CodeGenPassBuilder<Derived>::buildPipeline(buildPipeline506,21655
void CodeGenPassBuilder<Derived>::setStartStopPasses(setStartStopPasses537,22754
Error CodeGenPassBuilder<Derived>::verifyStartStop(verifyStartStop580,24056
static inline AAManager registerAAAnalyses(598,24679
void CodeGenPassBuilder<Derived>::registerModuleAnalyses(registerModuleAnalyses616,25239
#define MODULE_ANALYSIS(618,25337
void CodeGenPassBuilder<Derived>::registerFunctionAnalyses(registerFunctionAnalyses625,25584
#define FUNCTION_ANALYSIS(629,25748
void CodeGenPassBuilder<Derived>::registerMachineFunctionAnalyses(registerMachineFunctionAnalyses636,25995
#define MACHINE_FUNCTION_ANALYSIS(638,26112
CodeGenPassBuilder<Derived>::getPassNameFromLegacyName(getPassNameFromLegacyName650,26624
#define FUNCTION_PASS(655,26774
#define DUMMY_FUNCTION_PASS(658,26967
#define MODULE_PASS(661,27160
#define DUMMY_MODULE_PASS(664,27353
#define MACHINE_MODULE_PASS(667,27546
#define DUMMY_MACHINE_MODULE_PASS(670,27738
#define MACHINE_FUNCTION_PASS(673,27930
#define DUMMY_MACHINE_FUNCTION_PASS(676,28122
void CodeGenPassBuilder<Derived>::addISelPasses(addISelPasses692,28632
void CodeGenPassBuilder<Derived>::addIRPasses(addIRPasses708,29165
void CodeGenPassBuilder<Derived>::addPassesToHandleExceptions(addPassesToHandleExceptions774,31947
void CodeGenPassBuilder<Derived>::addCodeGenPrepare(addCodeGenPrepare821,33911
void CodeGenPassBuilder<Derived>::addISelPrepare(addISelPrepare831,34320
Error CodeGenPassBuilder<Derived>::addCoreISelPasses(addCoreISelPasses851,35018
  enum class SelectorType 857,35287
  enum class SelectorType { SelectionDAG,857,35287
  enum class SelectorType { SelectionDAG, FastISel,857,35287
  enum class SelectorType { SelectionDAG, FastISel, GlobalISel 857,35287
Error CodeGenPassBuilder<Derived>::addMachinePasses(addMachinePasses943,38658
void CodeGenPassBuilder<Derived>::addMachineSSAOptimization(addMachineSSAOptimization1050,41976
void CodeGenPassBuilder<Derived>::addTargetRegisterAllocator(addTargetRegisterAllocator1102,44129
void CodeGenPassBuilder<Derived>::addRegAllocPass(addRegAllocPass1114,44584
Error CodeGenPassBuilder<Derived>::addRegAssignmentFast(addRegAssignmentFast1120,44821
Error CodeGenPassBuilder<Derived>::addRegAssignmentOptimized(addRegAssignmentOptimized1128,45056
Error CodeGenPassBuilder<Derived>::addFastRegAlloc(addFastRegAlloc1150,45801
void CodeGenPassBuilder<Derived>::addOptimizedRegAlloc(addOptimizedRegAlloc1161,46242
void CodeGenPassBuilder<Derived>::addMachineLateOptimization(addMachineLateOptimization1207,47897
void CodeGenPassBuilder<Derived>::addBlockPlacement(addBlockPlacement1228,48654

/usr/include/llvm/CodeGen/CodeGenPrepare.h,169
#define LLVM_CODEGEN_PREPARE_H15,544
class CodeGenPreparePass 24,666
  const TargetMachine *TM;TM26,745
  CodeGenPreparePass(29,781
  PreservedAnalyses run(30,839

/usr/include/llvm/CodeGen/CommandFlags.h,81
#define LLVM_CODEGEN_COMMANDFLAGS_H16,672
struct RegisterCodeGenFlags 158,3514

/usr/include/llvm/CodeGen/DwarfEHPrepare.h,185
#define LLVM_CODEGEN_DWARFEHPREPARE_H15,627
class DwarfEHPreparePass 23,740
  const TargetMachine *TM;TM24,810
  explicit DwarfEHPreparePass(27,846
  PreservedAnalyses run(28,915

/usr/include/llvm/CodeGen/DwarfStringPoolEntry.h,793
#define LLVM_CODEGEN_DWARFSTRINGPOOLENTRY_H10,414
struct DwarfStringPoolEntry 20,596
  bool isIndexed(27,748
struct DwarfStringPoolEntryWithExtString 31,866
  StringRef String;32,939
class DwarfStringPoolEntryRef 49,1646
  using ByValStringEntryPtr 51,1726
  using ExtStringEntryPtr 54,1849
  PointerUnion<PointerUnion57,1967
  PointerUnion<ByValStringEntryPtr, ExtStringEntryPtr> MapEntry 57,1967
  DwarfStringPoolEntryRef(64,2211
  DwarfStringPoolEntryRef(69,2437
  explicit operator bool(operator bool72,2540
  MCSymbol *getSymbol(getSymbol75,2649
  uint64_t getOffset(81,2817
  unsigned getIndex(84,2920
  StringRef getString(90,3066
  const DwarfStringPoolEntry &getEntry(getEntry98,3322
  bool operator==(operator==105,3526
  bool operator!=(operator!=109,3660

/usr/include/llvm/CodeGen/ExpandLargeDivRem.h,194
#define LLVM_CODEGEN_EXPANDLARGEDIVREM_H10,411
class ExpandLargeDivRemPass 18,527
  const TargetMachine *TM;TM20,612
  explicit ExpandLargeDivRemPass(23,648
  PreservedAnalyses run(25,721

/usr/include/llvm/CodeGen/ExpandLargeFpConvert.h,202
#define LLVM_CODEGEN_EXPANDLARGEFPCONVERT_H10,414
class ExpandLargeFpConvertPass18,533
  const TargetMachine *TM;TM21,628
  explicit ExpandLargeFpConvertPass(24,664
  PreservedAnalyses run(26,740

/usr/include/llvm/CodeGen/ExpandMemCmp.h,179
#define LLVM_CODEGEN_EXPANDMEMCMP_H10,406
class ExpandMemCmpPass 18,517
  const TargetMachine *TM;TM19,583
  explicit ExpandMemCmpPass(22,619
  PreservedAnalyses run(24,687

/usr/include/llvm/CodeGen/FastISel.h,2300
#define LLVM_CODEGEN_FASTISEL_H15,543
class FastISel 66,1795
  struct CallLoweringInfo 70,1928
    bool RetSExt 72,1983
    bool RetZExt 73,2005
    bool IsVarArg 74,2027
    bool IsInReg 75,2050
    bool DoesNotReturn 76,2072
    bool IsReturnValueUsed 77,2100
    bool IsPatchPoint 78,2132
    ArgListTy Args;88,2452
    Register ResultReg;91,2540
    SmallVector<SmallVector94,2597
    SmallVector<Value *, 16> OutVals;94,2597
    SmallVector<SmallVector95,2635
    SmallVector<ISD::ArgFlagsTy, 16> OutFlags;95,2635
    SmallVector<SmallVector96,2682
    SmallVector<Register, 16> OutRegs;96,2682
    SmallVector<SmallVector97,2721
    SmallVector<ISD::InputArg, 4> Ins;97,2721
    SmallVector<SmallVector98,2760
    SmallVector<Register, 4> InRegs;98,2760
    CallLoweringInfo(100,2798
    CallLoweringInfo &setCallee(setCallee104,2977
    CallLoweringInfo &setCallee(setCallee126,3670
    CallLoweringInfo &setCallee(setCallee150,4491
    CallLoweringInfo &setCallee(setCallee166,5160
    CallLoweringInfo &setTailCall(setTailCall177,5556
    CallLoweringInfo &setIsPatchPoint(setIsPatchPoint182,5664
    ArgListTy &getArgs(getArgs187,5778
    void clearOuts(189,5821
    void clearIns(195,5921
  DenseMap<DenseMap202,6007
  DenseMap<const Value *, Register> LocalValueMap;202,6007
  FunctionLoweringInfo &FuncInfo;FuncInfo203,6058
  MachineFunction *MF;MF204,6092
  MachineRegisterInfo &MRI;MRI205,6115
  MachineFrameInfo &MFI;MFI206,6143
  MachineConstantPool &MCP;MCP207,6168
  MIMetadata MIMD;208,6196
  const TargetMachine &TM;TM209,6215
  const DataLayout &DL;DL210,6242
  const TargetInstrInfo &TII;TII211,6266
  const TargetLowering &TLI;TLI212,6296
  const TargetRegisterInfo &TRI;TRI213,6325
  const TargetLibraryInfo *LibInfo;LibInfo214,6358
  bool SkipTargetIndependentISel;215,6394
  MachineInstr *getLastLocalValue(getLastLocalValue233,7128
  void setLastLocalValue(237,7314
  DebugLoc getCurDebugLoc(250,7635
  virtual bool tryToFoldLoadIntoMI(300,9815
  virtual unsigned fastMaterializeConstant(473,17954
  virtual unsigned fastMaterializeAlloca(476,18103
  virtual unsigned fastMaterializeFloatZero(480,18274
  bool shouldOptForSize(520,19901
  MachineBasicBlock::iterator SavedInsertPt;563,21929

/usr/include/llvm/CodeGen/FunctionLoweringInfo.h,3143
#define LLVM_CODEGEN_FUNCTIONLOWERINGINFO_H15,588
class FunctionLoweringInfo 57,1792
  const Function *Fn;Fn59,1829
  MachineFunction *MF;MF60,1851
  const TargetLowering *TLI;TLI61,1874
  MachineRegisterInfo *RegInfo;RegInfo62,1903
  BranchProbabilityInfo *BPI;BPI63,1935
  const UniformityInfo *UA;UA64,1965
  bool CanLowerReturn;67,2088
  bool SplitCSR;70,2180
  Register DemoteRegister;74,2338
  DenseMap<const BasicBlock*BasicBlock77,2443
  DenseMap<const BasicBlock*, MachineBasicBlock *> MBBMap;77,2443
  DenseMap<const Value 82,2680
  DenseMap<const Value *, Register> ValueMap;82,2680
  DenseMap<Register,Register89,3053
  DenseMap<Register, const Value*> VirtReg2Value;89,3053
  const Value *getValueFromVirtualReg(getValueFromVirtualReg93,3253
  DenseMap<const Value 96,3370
  DenseMap<const Value *, Register> CatchPadExceptionPointers;96,3370
  struct StatepointRelocationRecord 100,3582
    enum RelocType 101,3620
      NoRelocate,103,3711
      Spill,105,3802
      VReg,108,3919
      SDValueNode,112,4115
    union payload_t 116,4313
      payload_t(117,4335
      int FI;118,4365
      Register Reg;119,4379
    } payload;120,4399
  DenseMap<const Instruction 128,4712
  DenseMap<const Instruction *, StatepointSpillMapTy> StatepointRelocationMaps;128,4712
  DenseMap<const AllocaInst*AllocaInst133,4981
  DenseMap<const AllocaInst*, int> StaticAllocaMap;133,4981
  DenseMap<const Argument*Argument136,5113
  DenseMap<const Argument*, int> ByValArgFrameIndexMap;136,5113
  SmallVector<MachineInstr*MachineInstr140,5322
  SmallVector<MachineInstr*, 8> ArgDbgValues;140,5322
  BitVector DescribedArgs;144,5513
  DenseMap<Register,Register147,5615
  DenseMap<Register, Register> RegFixups;147,5615
  DenseSet<Register> RegsWithFixups;149,5658
  SmallVector<unsigned,unsigned155,5945
  SmallVector<unsigned, 50> StatepointStackSlots;155,5945
  MachineBasicBlock *MBB;MBB158,6027
  MachineBasicBlock::iterator InsertPt;161,6120
  struct LiveOutInfo 163,6161
    unsigned NumSignBits 164,6184
    unsigned IsValid 165,6215
    LiveOutInfo(168,6267
  DenseMap<DenseMap173,6423
  DenseMap<const Value *, ISD::NodeType> PreferredExtendType;173,6423
  SmallPtrSet<SmallPtrSet177,6578
  SmallPtrSet<const BasicBlock*, 4> VisitedBBs;177,6578
  std::vector<std::vector183,6903
  std::vector<std::pair<MachineInstr*, unsigned> > PHINodesToUpdate;183,6903
  unsigned OrigNumPHINodesToUpdate;184,6972
  unsigned ExceptionPointerVirtReg,189,7203
  unsigned ExceptionPointerVirtReg, ExceptionSelectorVirtReg;189,7203
  SmallPtrSet<SmallPtrSet193,7373
  SmallPtrSet<const DbgDeclareInst *, 8> PreprocessedDbgDeclares;193,7373
  SmallPtrSet<SmallPtrSet194,7439
  SmallPtrSet<const DPValue *, 8> PreprocessedDPVDeclares;194,7439
  bool isExportedInst(208,7987
  Register InitializeRegForValue(218,8225
  const LiveOutInfo *GetLiveOutRegInfo(GetLiveOutRegInfo230,8686
  void AddLiveOutRegInfo(249,9421
  void InvalidatePHILiveOutRegInfo(268,10164
  IndexedMap<IndexedMap294,10990
  IndexedMap<LiveOutInfo, VirtReg2IndexFunctor> LiveOutRegInfo;294,10990

/usr/include/llvm/CodeGen/GCMetadata.h,2056
#define LLVM_CODEGEN_GCMETADATA_H33,1590
struct GCPoint 57,2106
  MCSymbol *Label;Label58,2123
  DebugLoc Loc;59,2159
  GCPoint(61,2176
struct GCRoot 67,2343
  int Num;68,2359
  int StackOffset 69,2415
  const Constant *Metadata;Metadata70,2479
  GCRoot(73,2594
class GCFunctionInfo 78,2795
  using iterator 80,2826
  using roots_iterator 81,2877
  using live_iterator 82,2933
  const Function &F;F85,3004
  GCStrategy &S;S86,3025
  uint64_t FrameSize;87,3042
  std::vector<GCRoot> Roots;88,3064
  std::vector<GCPoint> SafePoints;89,3093
  const Function &getFunction(getFunction110,3757
  GCStrategy &getStrategy(getStrategy113,3871
  void addStackRoot(118,4113
  roots_iterator removeStackRoot(123,4259
  void addSafePoint(130,4536
  uint64_t getFrameSize(135,4709
  void setFrameSize(136,4763
  iterator begin(139,4860
  iterator end(140,4910
  size_t size(141,4956
  roots_iterator roots_begin(144,5080
  roots_iterator roots_end(145,5137
  size_t roots_size(146,5190
  live_iterator live_begin(149,5320
  live_iterator live_end(150,5392
  size_t live_size(151,5460
struct GCStrategyMap 154,5533
  StringMap<std::unique_ptr<GCStrategy>> StrategyMap;155,5556
class CollectorMetadataAnalysis167,5997
  static AnalysisKey Key;170,6151
  using Result 173,6186
class GCFunctionAnalysis 180,6455
  static AnalysisKey Key;182,6584
  using Result 185,6619
class GCLoweringPass 195,7028
class GCModuleInfo 203,7381
  SmallVector<SmallVector205,7490
  SmallVector<std::unique_ptr<GCStrategy>, 1> GCStrategyList;205,7490
  StringMap<GCStrategy*> GCStrategyMap;207,7610
  using FuncInfoVec 217,7992
  FuncInfoVec::iterator funcinfo_begin(219,8061
  FuncInfoVec::iterator funcinfo_end(220,8132
  FuncInfoVec Functions;224,8278
  using finfo_map_type 228,8426
  finfo_map_type FInfoMap;229,8497
  using iterator 232,8533
  using iterator = SmallVector<std::unique_ptr<GCStrategy>, 1>::const_iterator;const_iterator232,8533
  static char ID;234,8614
  iterator begin(245,8838
  iterator end(246,8898

/usr/include/llvm/CodeGen/GlobalMerge.h,210
#define LLVM_CODEGEN_GLOBALMERGE_H10,405
struct GlobalMergeOptions 18,515
class GlobalMergePass 37,1359
  const TargetMachine *TM;TM38,1423
  GlobalMergeOptions Options;39,1450
  GlobalMergePass(42,1489

/usr/include/llvm/CodeGen/ISDOpcodes.h,11027
#define LLVM_CODEGEN_ISDOPCODES_H14,552
enum NodeType 40,1604
  DELETED_NODE,44,1752
  EntryToken,47,1847
  TokenFactor,52,2064
  AssertSext,61,2547
  AssertZext,62,2561
  AssertAlign,68,2858
  BasicBlock,71,2900
  VALUETYPE,72,2914
  CONDCODE,73,2927
  Register,74,2939
  RegisterMask,75,2951
  Constant,76,2967
  ConstantFP,77,2979
  GlobalAddress,78,2993
  GlobalTLSAddress,79,3010
  FrameIndex,80,3030
  JumpTable,81,3044
  ConstantPool,82,3057
  ExternalSymbol,83,3073
  BlockAddress,84,3091
  GLOBAL_OFFSET_TABLE,87,3137
  FRAMEADDR,94,3522
  RETURNADDR,95,3535
  ADDROFRETURNADDR,101,3801
  SPONENTRY,106,4008
  LOCAL_RECOVER,114,4397
  READ_REGISTER,118,4570
  WRITE_REGISTER,119,4587
  FRAME_TO_ARGS_OFFSET,124,4792
  EH_DWARF_CFA,129,5008
  EH_RETURN,135,5306
  EH_SJLJ_SETJMP,141,5537
  EH_SJLJ_LONGJMP,147,5767
  EH_SJLJ_SETUP_DISPATCH,151,5890
  TargetConstant,158,6249
  TargetConstantFP,159,6267
  TargetGlobalAddress,164,6493
  TargetGlobalTLSAddress,165,6516
  TargetFrameIndex,166,6542
  TargetJumpTable,167,6562
  TargetConstantPool,168,6581
  TargetExternalSymbol,169,6603
  TargetBlockAddress,170,6627
  MCSymbol,172,6650
  TargetIndex,177,6867
  INTRINSIC_WO_CHAIN,184,7216
  INTRINSIC_W_CHAIN,192,7670
  INTRINSIC_VOID,199,8045
  CopyToReg,203,8180
  CopyFromReg,208,8419
  UNDEF,211,8468
  FREEZE,216,8693
  EXTRACT_ELEMENT,222,9007
  BUILD_PAIR,229,9379
  MERGE_VALUES,236,9733
  ADD,239,9800
  SUB,240,9807
  MUL,241,9814
  SDIV,242,9821
  UDIV,243,9829
  SREM,244,9837
  UREM,245,9845
  SMUL_LOHI,250,10037
  UMUL_LOHI,251,10050
  SDIVREM,255,10164
  UDIVREM,256,10175
  CARRY_FALSE,260,10322
  ADDC,269,10837
  SUBC,270,10845
  ADDE,279,11329
  SUBE,280,11337
  UADDO_CARRY,303,12558
  USUBO_CARRY,304,12573
  SADDO_CARRY,313,13131
  SSUBO_CARRY,314,13146
  SADDO,323,13665
  UADDO,324,13674
  SSUBO,327,13712
  USUBO,328,13721
  SMULO,331,13762
  UMULO,332,13771
  SADDSAT,340,14190
  UADDSAT,341,14201
  SSUBSAT,349,14625
  USUBSAT,350,14636
  SSHLSAT,359,15170
  USHLSAT,360,15181
  SMULFIX,367,15531
  UMULFIX,368,15542
  SMULFIXSAT,373,15744
  UMULFIXSAT,374,15758
  SDIVFIX,380,16027
  UDIVFIX,381,16038
  SDIVFIXSAT,386,16240
  UDIVFIXSAT,387,16254
  FADD,390,16315
  FSUB,391,16323
  FMUL,392,16331
  FDIV,393,16339
  FREM,394,16347
  STRICT_FADD,400,16582
  STRICT_FSUB,401,16597
  STRICT_FMUL,402,16612
  STRICT_FDIV,403,16627
  STRICT_FREM,404,16642
  STRICT_FMA,405,16657
  STRICT_FSQRT,411,16969
  STRICT_FPOW,412,16985
  STRICT_FPOWI,413,17000
  STRICT_FLDEXP,414,17016
  STRICT_FSIN,415,17033
  STRICT_FCOS,416,17048
  STRICT_FEXP,417,17063
  STRICT_FEXP2,418,17078
  STRICT_FLOG,419,17094
  STRICT_FLOG10,420,17109
  STRICT_FLOG2,421,17126
  STRICT_FRINT,422,17142
  STRICT_FNEARBYINT,423,17158
  STRICT_FMAXNUM,424,17179
  STRICT_FMINNUM,425,17197
  STRICT_FCEIL,426,17215
  STRICT_FFLOOR,427,17231
  STRICT_FROUND,428,17248
  STRICT_FROUNDEVEN,429,17265
  STRICT_FTRUNC,430,17286
  STRICT_LROUND,431,17303
  STRICT_LLROUND,432,17320
  STRICT_LRINT,433,17338
  STRICT_LLRINT,434,17354
  STRICT_FMAXIMUM,435,17371
  STRICT_FMINIMUM,436,17390
  STRICT_FP_TO_SINT,442,17650
  STRICT_FP_TO_UINT,443,17671
  STRICT_SINT_TO_FP,449,17933
  STRICT_UINT_TO_FP,450,17954
  STRICT_FP_ROUND,465,18772
  STRICT_FP_EXTEND,470,18952
  STRICT_FSETCC,476,19216
  STRICT_FSETCCS,477,19233
  FPTRUNC_ROUND,480,19322
  FMA,483,19406
  FMAD,487,19520
  FCOPYSIGN,493,19799
  FGETSIGN,497,19929
  FCANONICALIZE,500,20021
  IS_FPCLASS,507,20358
  BUILD_VECTOR,515,20766
  INSERT_VECTOR_ELT,524,21172
  EXTRACT_VECTOR_ELT,535,21712
  CONCAT_VECTORS,543,22193
  INSERT_SUBVECTOR,559,23138
  EXTRACT_SUBVECTOR,573,23982
  VECTOR_DEINTERLEAVE,580,24357
  VECTOR_INTERLEAVE,586,24686
  VECTOR_REVERSE,591,24906
  VECTOR_SHUFFLE,600,25431
  VECTOR_SPLICE,612,26179
  SCALAR_TO_VECTOR,620,26635
  SPLAT_VECTOR,627,26984
  SPLAT_VECTOR_PARTS,636,27510
  STEP_VECTOR,646,27958
  MULHU,651,28133
  MULHS,652,28142
  AVGFLOORS,657,28335
  AVGFLOORU,658,28348
  AVGCEILS,662,28562
  AVGCEILU,663,28574
  ABDS,669,28846
  ABDU,670,28854
  SMIN,674,28949
  SMAX,675,28957
  UMIN,676,28965
  UMAX,677,28973
  AND,680,29046
  OR,681,29053
  XOR,682,29059
  ABS,688,29269
  SHL,705,30224
  SRA,706,30231
  SRL,707,30238
  ROTL,708,30245
  ROTR,709,30253
  FSHL,710,30261
  FSHR,711,30269
  BSWAP,714,30318
  CTTZ,715,30327
  CTLZ,716,30335
  CTPOP,717,30343
  BITREVERSE,718,30352
  PARITY,719,30366
  CTTZ_ZERO_UNDEF,722,30448
  CTLZ_ZERO_UNDEF,723,30467
  SELECT,727,30630
  VSELECT,736,31178
  SELECT_CC,742,31468
  SETCC,750,31916
  SETCCCARRY,758,32276
  SHL_PARTS,763,32471
  SRA_PARTS,764,32484
  SRL_PARTS,765,32497
  SIGN_EXTEND,774,32823
  ZERO_EXTEND,780,33083
  ANY_EXTEND,783,33172
  TRUNCATE,786,33235
  SINT_TO_FP,790,33381
  UINT_TO_FP,791,33395
  SIGN_EXTEND_INREG,798,33747
  ANY_EXTEND_VECTOR_INREG,809,34430
  SIGN_EXTEND_VECTOR_INREG,820,35088
  ZERO_EXTEND_VECTOR_INREG,831,35747
  FP_TO_SINT,836,36007
  FP_TO_UINT,837,36021
  FP_TO_SINT_SAT,855,36892
  FP_TO_UINT_SAT,856,36910
  FP_ROUND,869,37610
  GET_ROUNDING,880,37926
  SET_ROUNDING,885,38122
  FP_EXTEND,888,38212
  BITCAST,903,39067
  ADDRSPACECAST,907,39176
  FP16_TO_FP,913,39491
  FP_TO_FP16,914,39505
  STRICT_FP16_TO_FP,915,39519
  STRICT_FP_TO_FP16,916,39540
  BF16_TO_FP,922,39828
  FP_TO_BF16,923,39842
  FNEG,928,40029
  FABS,929,40037
  FSQRT,930,40045
  FCBRT,931,40054
  FSIN,932,40063
  FCOS,933,40071
  FPOW,934,40079
  FPOWI,935,40087
  FLDEXP,937,40151
  FFREXP,942,40319
  FLOG,944,40330
  FLOG2,945,40338
  FLOG10,946,40347
  FEXP,947,40357
  FEXP2,948,40365
  FEXP10,949,40374
  FCEIL,950,40384
  FTRUNC,951,40393
  FRINT,952,40403
  FNEARBYINT,953,40412
  FROUND,954,40426
  FROUNDEVEN,955,40436
  FFLOOR,956,40450
  LROUND,957,40460
  LLROUND,958,40470
  LRINT,959,40481
  LLRINT,960,40490
  FMINNUM,969,40788
  FMAXNUM,970,40799
  FMINNUM_IEEE,976,41083
  FMAXNUM_IEEE,977,41099
  FMINIMUM,982,41345
  FMAXIMUM,983,41357
  FSINCOS,986,41436
  GET_FPENV,991,41631
  SET_FPENV,996,41836
  RESET_FPENV,1000,41962
  GET_FPENV_MEM,1005,42176
  SET_FPENV_MEM,1010,42394
  GET_FPMODE,1014,42510
  SET_FPMODE,1019,42696
  RESET_FPMODE,1023,42804
  LOAD,1029,43075
  STORE,1030,43083
  DYNAMIC_STACKALLOC,1039,43625
  BR,1045,43828
  BRIND,1050,44010
  BR_JT,1054,44168
  JUMP_TABLE_DEBUG_INFO,1058,44303
  BRCOND,1068,44897
  BR_CC,1075,45283
  INLINEASM,1092,46167
  INLINEASM_BR,1095,46253
  EH_LABEL,1100,46464
  ANNOTATION_LABEL,1106,46714
  CATCHRET,1111,46918
  CLEANUPRET,1115,47080
  STACKSAVE,1120,47261
  STACKRESTORE,1124,47389
  CALLSEQ_START,1138,48105
  CALLSEQ_END,1139,48154
  VAARG,1144,48369
  VACOPY,1149,48549
  VAEND,1153,48669
  VASTART,1154,48678
  PREALLOCATED_SETUP,1158,48806
  PREALLOCATED_ARG,1161,48959
  SRCVALUE,1165,49101
  MDNODE_SDNODE,1169,49228
  PCMARKER,1172,49307
  READCYCLECOUNTER,1180,49765
  HANDLENODE,1183,49849
  INIT_TRAMPOLINE,1191,50272
  ADJUST_TRAMPOLINE,1197,50594
  TRAP,1200,50650
  DEBUGTRAP,1203,50727
  UBSANTRAP,1207,50830
  PREFETCH,1213,51085
  ARITH_FENCE,1217,51230
  MEMBARRIER,1220,51306
  ATOMIC_FENCE,1225,51530
  ATOMIC_LOAD,1229,51648
  ATOMIC_STORE,1233,51767
  ATOMIC_CMP_SWAP,1240,52077
  ATOMIC_CMP_SWAP_WITH_SUCCESS,1246,52279
  ATOMIC_SWAP,1254,52672
  ATOMIC_LOAD_ADD,1255,52687
  ATOMIC_LOAD_SUB,1256,52706
  ATOMIC_LOAD_AND,1257,52725
  ATOMIC_LOAD_CLR,1258,52744
  ATOMIC_LOAD_OR,1259,52763
  ATOMIC_LOAD_XOR,1260,52781
  ATOMIC_LOAD_NAND,1261,52800
  ATOMIC_LOAD_MIN,1262,52820
  ATOMIC_LOAD_MAX,1263,52839
  ATOMIC_LOAD_UMIN,1264,52858
  ATOMIC_LOAD_UMAX,1265,52878
  ATOMIC_LOAD_FADD,1266,52898
  ATOMIC_LOAD_FSUB,1267,52918
  ATOMIC_LOAD_FMAX,1268,52938
  ATOMIC_LOAD_FMIN,1269,52958
  ATOMIC_LOAD_UINC_WRAP,1270,52978
  ATOMIC_LOAD_UDEC_WRAP,1271,53003
  MLOAD,1279,53299
  MSTORE,1280,53308
  MGATHER,1291,53800
  MSCATTER,1292,53811
  LIFETIME_START,1296,53965
  LIFETIME_END,1297,53983
  GC_TRANSITION_START,1305,54387
  GC_TRANSITION_END,1306,54410
  GET_DYNAMIC_AREA_OFFSET,1312,54725
  PSEUDO_PROBE,1316,54864
  VSCALE,1321,55090
  VECREDUCE_SEQ_FADD,1331,55573
  VECREDUCE_SEQ_FMUL,1332,55595
  VECREDUCE_FADD,1344,56198
  VECREDUCE_FMUL,1345,56216
  VECREDUCE_FMAX,1347,56296
  VECREDUCE_FMIN,1348,56314
  VECREDUCE_FMAXIMUM,1351,56452
  VECREDUCE_FMINIMUM,1352,56474
  VECREDUCE_ADD,1356,56705
  VECREDUCE_MUL,1357,56722
  VECREDUCE_AND,1358,56739
  VECREDUCE_OR,1359,56756
  VECREDUCE_XOR,1360,56772
  VECREDUCE_SMAX,1361,56789
  VECREDUCE_SMIN,1362,56807
  VECREDUCE_UMAX,1363,56825
  VECREDUCE_UMIN,1364,56843
  STACKMAP,1369,57022
  PATCHPOINT,1375,57231
#define BEGIN_REGISTER_VP_SDNODE(1378,57268
  BUILTIN_OP_END1383,57490
static const int FIRST_TARGET_STRICTFP_OPCODE 1389,57703
static const int FIRST_TARGET_MEMORY_OPCODE 1395,58041
inline bool isBitwiseLogicOp(1398,58152
enum MemIndexedMode 1455,60995
enum MemIndexedMode { UNINDEXED 1455,60995
enum MemIndexedMode { UNINDEXED = 0, PRE_INC,1455,60995
enum MemIndexedMode { UNINDEXED = 0, PRE_INC, PRE_DEC,1455,60995
enum MemIndexedMode { UNINDEXED = 0, PRE_INC, PRE_DEC, POST_INC,1455,60995
enum MemIndexedMode { UNINDEXED = 0, PRE_INC, PRE_DEC, POST_INC, POST_DEC 1455,60995
static const int LAST_INDEXED_MODE 1457,61073
enum MemIndexType 1468,61602
enum MemIndexType { SIGNED_SCALED 1468,61602
enum MemIndexType { SIGNED_SCALED = 0, UNSIGNED_SCALED 1468,61602
static const int LAST_MEM_INDEX_TYPE 1470,61661
inline bool isIndexTypeSigned(1472,61722
enum LoadExtType 1486,62348
enum LoadExtType { NON_EXTLOAD 1486,62348
enum LoadExtType { NON_EXTLOAD = 0, EXTLOAD,1486,62348
enum LoadExtType { NON_EXTLOAD = 0, EXTLOAD, SEXTLOAD,1486,62348
enum LoadExtType { NON_EXTLOAD = 0, EXTLOAD, SEXTLOAD, ZEXTLOAD 1486,62348
static const int LAST_LOADEXT_TYPE 1488,62416
enum CondCode 1506,63333
  SETFALSE,1508,63403
  SETOEQ,1509,63466
  SETOGT,1510,63526
  SETOGE,1511,63593
  SETOLT,1512,63669
  SETOLE,1513,63733
  SETONE,1514,63806
  SETO,1515,63881
  SETUO,1516,63941
  SETUEQ,1517,64014
  SETUGT,1518,64075
  SETUGE,1519,64143
  SETULT,1520,64219
  SETULE,1521,64284
  SETUNE,1522,64357
  SETTRUE,1523,64422
  SETFALSE2,1525,64545
  SETEQ,1526,64608
  SETGT,1527,64656
  SETGE,1528,64711
  SETLT,1529,64775
  SETLE,1530,64827
  SETNE,1531,64888
  SETTRUE2,1532,64940
  SETCC_INVALID 1534,65003
inline bool isSignedIntSetCC(1539,65158
inline bool isUnsignedIntSetCC(1545,65403
inline bool isIntEqualitySetCC(1551,65654
inline bool isFPEqualitySetCC(1557,65874
inline bool isTrueWhenEqual(1564,66189
inline unsigned getUnorderedFlavor(1569,66479
inline bool isExtOpcode(1577,66718
inline bool isExtVecInRegOpcode(1582,66869
namespace GlobalISel 1588,67076

/usr/include/llvm/CodeGen/IndirectBrExpand.h,182
#define LLVM_CODEGEN_INDIRECTBREXPAND_H10,410
class IndirectBrExpandPass 18,525
  const TargetMachine *TM;TM19,599
  IndirectBrExpandPass(22,635
  PreservedAnalyses run(23,695

/usr/include/llvm/CodeGen/IndirectThunks.h,277
#define LLVM_CODEGEN_INDIRECTTHUNKS_H15,569
template <typename Derived,47,1633
void ThunkInserter<Derived, InsertedThunksTy>::createThunkFunction(createThunkFunction48,1688
template <typename Derived,93,3493
bool ThunkInserter<Derived, InsertedThunksTy>::run(run94,3548

/usr/include/llvm/CodeGen/InterleavedAccess.h,194
#define LLVM_CODEGEN_INTERLEAVEDACCESS_H16,642
class InterleavedAccessPass 24,758
  const TargetMachine *TM;TM25,834
  explicit InterleavedAccessPass(28,870
  PreservedAnalyses run(29,940

/usr/include/llvm/CodeGen/InterleavedLoadCombine.h,208
#define LLVM_CODEGEN_INTERLEAVEDLOADCOMBINE_H10,416
class InterleavedLoadCombinePass18,537
  const TargetMachine *TM;TM20,627
  explicit InterleavedLoadCombinePass(23,663
  PreservedAnalyses run(24,738

/usr/include/llvm/CodeGen/JMCInstrumenter.h,112
#define LLVM_CODEGEN_JMCINSTRUMENTER_H10,409
class JMCInstrumenterPass 16,501
  PreservedAnalyses run(18,581

/usr/include/llvm/CodeGen/LinkAllCodegenComponents.h,124
#define LLVM_CODEGEN_LINKALLCODEGENCOMPONENTS_H15,621
  struct ForceCodegenLinking 23,818
    ForceCodegenLinking(24,849

/usr/include/llvm/CodeGen/LiveInterval.h,5366
#define LLVM_CODEGEN_LIVEINTERVAL_H21,1088
  class VNInfo 53,1894
    unsigned id;58,1999
    SlotIndex def;61,2064
    VNInfo(64,2112
    VNInfo(67,2250
    void copyFrom(70,2370
    bool isPHIDef(78,2657
    bool isUnused(81,2756
    void markUnused(84,2845
  class LiveQueryResult 90,3097
    VNInfo *const EarlyVal;91,3123
    VNInfo *const LateVal;92,3151
    const SlotIndex EndPoint;93,3178
    const bool Kill;94,3208
    LiveQueryResult(97,3240
    VNInfo *valueIn(valueIn105,3615
    bool isKill(112,3847
    bool isDeadDef(117,3955
    VNInfo *valueOut(valueOut123,4163
    VNInfo *valueOutOrDead(valueOutOrDead129,4386
    VNInfo *valueDefined(valueDefined135,4606
    SlotIndex endPoint(147,5085
  class LiveRange 157,5483
    struct Segment 162,5704
      SlotIndex start;163,5725
      SlotIndex end;164,5792
      Segment(170,6006
      bool contains(176,6237
      bool containsInterval(181,6406
      bool operator==(operator==189,6725
      bool operator!=(operator!=193,6843
    Segments segments;203,7067
    VNInfoList valnos;204,7117
    std::unique_ptr<SegmentSet> segmentSet;210,7414
    iterator begin(215,7554
    iterator end(216,7604
    const_iterator begin(218,7653
    const_iterator end(219,7715
    vni_iterator vni_begin(224,7882
    vni_iterator vni_end(225,7938
    const_vni_iterator vni_begin(227,7993
    const_vni_iterator vni_end(228,8061
    iterator_range<vni_iterator> vnis(230,8128
    iterator_range<const_vni_iterator> vnis(234,8226
    LiveRange(239,8379
    LiveRange(245,8644
    void assign(252,8955
    iterator advanceTo(271,9842
    const_iterator advanceTo(279,10027
    const_iterator find(296,10655
    void clear(300,10763
    size_t size(305,10835
    bool hasAtLeastOneValue(309,10898
    bool containsOneValue(311,10963
    unsigned getNumValNums(313,11029
    inline VNInfo *getValNumInfo(getValNumInfo317,11172
    inline const VNInfo *getValNumInfo(getValNumInfo320,11257
    bool containsValue(325,11422
    VNInfo *getNextValue(getNextValue331,11697
    VNInfo *createValueCopy(createValueCopy349,12478
    bool empty(382,14070
    SlotIndex beginIndex(385,14185
    SlotIndex endIndex(392,14421
    bool expiredAt(397,14559
    bool liveAt(401,14644
    const Segment *getSegmentContaining(getSegmentContaining408,14872
    Segment *getSegmentContaining(getSegmentContaining415,15137
    VNInfo *getVNInfoAt(getVNInfoAt421,15353
    VNInfo *getVNInfoBefore(getVNInfoBefore429,15715
    iterator FindSegmentContaining(436,15998
    const_iterator FindSegmentContaining(441,16143
    bool overlaps(448,16402
    std::pair<std::pair496,18845
    bool isLocal(518,20079
    void removeSegment(529,20555
    LiveQueryResult Query(542,21081
    bool isZeroLength(587,22920
    bool operator<(600,23422
    bool isUndefIn(608,23708
    template <typename Range,627,24601
    bool findIndexesLiveAt(628,24650
    void verify(665,25877
  inline raw_ostream &operator<<(operator<<680,26183
  class LiveInterval 687,26386
    class SubRange 694,26661
      LaneBitmask LaneMask;697,26745
      SubRange(700,26818
      SubRange(703,26958
    const Register Reg;714,27336
    Register reg(718,27470
    float weight(719,27511
    void incrementWeight(720,27555
    void setWeight(721,27610
    LiveInterval(723,27663
    ~LiveInterval(725,27739
    class SingleLinkedListIterator 730,27817
      T *P;P731,27854
      SingleLinkedListIterator(734,27879
      SingleLinkedListIterator<T> &operator++(operator++736,27927
      SingleLinkedListIterator<T> operator++(740,28028
      bool operator!=(operator!=745,28171
      bool operator==(operator==748,28291
      T &operator*(operator*751,28411
      T *operator->(operator->754,28467
    subrange_iterator subrange_begin(762,28676
    subrange_iterator subrange_end(765,28766
    const_subrange_iterator subrange_begin(769,28853
    const_subrange_iterator subrange_end(772,28961
    iterator_range<subrange_iterator> subranges(776,29066
    iterator_range<const_subrange_iterator> subranges(780,29184
    SubRange *createSubRange(createSubRange786,29463
    SubRange *createSubRangeFrom(createSubRangeFrom795,29812
    bool hasSubRanges(804,30199
    bool isSpillable(820,30695
    void markNotSpillable(823,30815
    bool operator<(877,33783
    void verify(890,34238
    void appendSubRange(897,34439
  inline raw_ostream &operator<<(operator<<906,34625
  inline raw_ostream &operator<<(operator<<912,34782
  inline bool operator<(919,34970
  inline bool operator<(923,35067
  class LiveRangeUpdater 935,35565
    LiveRange *LR;LR936,35592
    SlotIndex LastStart;937,35611
    LiveRange::iterator WriteI;938,35636
    LiveRange::iterator ReadI;939,35668
    SmallVector<SmallVector940,35699
    SmallVector<LiveRange::Segment, 16> Spills;940,35699
    LiveRangeUpdater(946,35919
    ~LiveRangeUpdater(948,35978
    void add(955,36223
    bool isDirty(961,36442
    void setDest(968,36664
    LiveRange *getDest(getDest975,36818
  inline raw_ostream &operator<<(operator<<981,36930
  class ConnectedVNInfoEqClasses 999,37570
    LiveIntervals &LIS;LIS1000,37605
    IntEqClasses EqClass;1001,37629
    explicit ConnectedVNInfoEqClasses(1004,37666
    unsigned getEqClass(1012,38028

/usr/include/llvm/CodeGen/LiveIntervals.h,2297
#define LLVM_CODEGEN_LIVEINTERVALS_H20,999
  class LiveIntervals 53,1850
    VNInfo::Allocator VNInfoAllocator;63,2252
    IndexedMap<IndexedMap66,2354
    IndexedMap<LiveInterval*, VirtReg2IndexFunctor> VirtRegIntervals;66,2354
    SmallVector<SmallVector70,2573
    SmallVector<SlotIndex, 8> RegMaskSlots;70,2573
    SmallVector<SmallVector83,3219
    SmallVector<const uint32_t*, 8> RegMaskBits;83,3219
    SmallVector<SmallVector90,3562
    SmallVector<std::pair<unsigned, unsigned>, 8> RegMaskBlocks;90,3562
    SmallVector<SmallVector94,3727
    SmallVector<LiveRange*, 0> RegUnitRanges;94,3727
    static char ID;97,3784
    LiveInterval &getInterval(getInterval112,4374
    const LiveInterval &getInterval(getInterval119,4551
    bool hasInterval(123,4681
    LiveInterval &createEmptyInterval(createEmptyInterval129,4851
    LiveInterval &createAndComputeVirtRegInterval(createAndComputeVirtRegInterval136,5112
    LiveInterval &getOrCreateEmptyInterval(getOrCreateEmptyInterval145,5465
    void removeInterval(150,5634
    void extendToIndices(192,7725
    LLVM_ATTRIBUTE_UNUSED void pruneValue(210,8660
    SlotIndexes *getSlotIndexes(getSlotIndexes216,8906
    bool isNotInMIMap(222,9087
    SlotIndex getInstructionIndex(227,9248
    MachineInstr* getInstructionFromIndex(232,9439
    SlotIndex getMBBStartIdx(237,9624
    SlotIndex getMBBEndIdx(242,9797
    bool isLiveInToMBB(246,9910
    bool isLiveOutOfMBB(251,10067
    MachineBasicBlock* getMBBFromIndex(256,10238
    void insertMBBInMaps(260,10355
    SlotIndex InsertMachineInstrInMaps(267,10636
    void InsertMachineInstrRangeInMaps(271,10754
    void RemoveMachineInstrFromMaps(277,11009
    SlotIndex ReplaceMachineInstrInMaps(281,11119
    VNInfo::Allocator& getVNInfoAllocator(285,11267
    ArrayRef<SlotIndex> getRegMaskSlots(352,14461
    ArrayRef<SlotIndex> getRegMaskSlotsInBlock(356,14677
    ArrayRef<const uint32_t*> getRegMaskBits(363,14971
    ArrayRef<const uint32_t*> getRegMaskBitsInBlock(367,15148
    LiveRange &getRegUnit(getRegUnit394,16348
    LiveRange *getCachedRegUnit(getCachedRegUnit407,16863
    const LiveRange *getCachedRegUnit(getCachedRegUnit411,16953
    void removeRegUnit(417,17181
    void removeAllRegUnitsForPhysReg(426,17606

/usr/include/llvm/CodeGen/LivePhysRegs.h,490
#define LLVM_CODEGEN_LIVEPHYSREGS_H30,1281
class LivePhysRegs 50,1806
  RegisterSet LiveRegs;53,1935
  LivePhysRegs(60,2125
  void init(68,2381
  void clear(75,2541
  bool empty(78,2619
  void addReg(81,2739
  void removeReg(90,3097
  void removeRegsInMask(98,3428
  bool contains(107,3908
  bool available(110,4056
  const_iterator begin(156,6126
  const_iterator end(157,6186
inline raw_ostream &operator<<(operator<<175,6758
static inline bool recomputeLiveIns(198,7682

/usr/include/llvm/CodeGen/LiveRegUnits.h,765
#define LLVM_CODEGEN_LIVEREGUNITS_H15,579
class LiveRegUnits 30,952
  BitVector Units;32,1016
  LiveRegUnits(39,1179
  static void accumulateUsedDefed(47,1505
  void init(73,2523
  void clear(80,2676
  bool empty(83,2751
  void addReg(86,2861
  void addRegMasked(93,3073
  void removeReg(102,3396
  void removeRegsNotPreserved(109,3657
  void addRegsInMask(113,3862
  bool available(116,3977
  void stepBackward(127,4352
  void accumulate(132,4580
  void addLiveOuts(138,4865
  void addLiveIns(141,4963
  void addUnits(144,5080
  void removeUnits(148,5222
  const BitVector &getBitVector(getBitVector152,5364
  void addPristines(159,5554
    filter_iterator<ConstMIBundleOperands,ConstMIBundleOperands165,5780
phys_regs_and_masks(166,5858

/usr/include/llvm/CodeGen/LiveVariables.h,887
#define LLVM_CODEGEN_LIVEVARIABLES_H29,1582
class LiveVariables 47,2055
  static char ID;49,2114
  LiveVariables(50,2179
  struct VarInfo 80,4072
    SparseBitVector<> AliveBlocks;85,4266
    std::vector<MachineInstr*> Kills;90,4443
    bool removeKill(95,4670
  IndexedMap<IndexedMap119,5476
  IndexedMap<VarInfo, VirtReg2IndexFunctor> VirtRegInfo;119,5476
  std::vector<MachineInstr *> PhysRegDef;131,5909
  std::vector<MachineInstr *> PhysRegUse;136,6167
  std::vector<std::vector138,6210
  std::vector<SmallVector<unsigned, 4>> PHIVarInfo;138,6210
  DenseMap<DenseMap142,6362
  DenseMap<MachineInstr*, unsigned> DistanceMap;142,6362
  void addVirtualRegisterKilled(199,8945
  bool removeVirtualRegisterKilled(209,9436
  void addVirtualRegisterDead(234,10271
  bool removeVirtualRegisterDead(244,10749
  void releaseMemory(263,11265
  bool isLiveIn(280,11940

/usr/include/llvm/CodeGen/LowLevelType.h,2793
#define LLVM_CODEGEN_LOWLEVELTYPE_H27,1134
class LLT 39,1351
  static constexpr LLT scalar(42,1428
  static constexpr LLT pointer(49,1709
  static constexpr LLT vector(56,2064
  static constexpr LLT vector(63,2419
  static constexpr LLT float16(76,2997
  static constexpr LLT float32(81,3097
  static constexpr LLT float64(86,3198
  static constexpr LLT fixed_vector(92,3354
  static constexpr LLT fixed_vector(99,3648
  static constexpr LLT scalable_vector(105,3883
  static constexpr LLT scalable_vector(112,4189
  static constexpr LLT scalarOrVector(116,4346
  static constexpr LLT scalarOrVector(120,4487
  explicit constexpr LLT(126,4770
  explicit constexpr LLT(132,5043
  constexpr bool isValid(137,5170
  constexpr bool isScalar(139,5241
  constexpr bool isPointer(141,5297
  constexpr bool isVector(145,5387
  constexpr uint16_t getNumElements(149,5553
  constexpr bool isScalable(160,5982
  constexpr bool isFixedVector(168,6327
  constexpr bool isScalableVector(172,6528
  constexpr ElementCount getElementCount(174,6610
  constexpr TypeSize getSizeInBits(183,7060
  constexpr TypeSize getSizeInBytes(193,7497
  constexpr LLT getScalarType(198,7664
  constexpr LLT changeElementType(204,7912
  constexpr LLT changeElementSize(211,8278
  constexpr LLT changeElementCount(220,8665
  constexpr LLT divide(227,9000
  constexpr LLT multiplyElements(244,9672
  constexpr bool isByteSized(253,9923
  constexpr unsigned getScalarSizeInBits(257,10016
  constexpr unsigned getAddressSpace(270,10398
  constexpr LLT getElementType(280,10787
  constexpr bool operator==(operator==294,11176
  constexpr bool operator!=(operator!=299,11365
  typedef int BitFieldInfo[BitFieldInfo315,12072
  static const constexpr BitFieldInfo ScalarSizeFieldInfo{ScalarSizeFieldInfo323,12418
  static const constexpr BitFieldInfo PointerSizeFieldInfo{PointerSizeFieldInfo327,12585
  static const constexpr BitFieldInfo VectorElementsFieldInfo{VectorElementsFieldInfo337,13085
  static const constexpr BitFieldInfo PointerVectorElementsFieldInfo{PointerVectorElementsFieldInfo349,13694
  uint64_t IsScalar 362,14423
  uint64_t IsPointer 363,14448
  uint64_t IsVector 364,14474
  uint64_t RawData 365,14499
  static constexpr uint64_t getMask(367,14525
  static constexpr uint64_t maskAndShift(371,14694
  static constexpr uint64_t maskAndShift(376,14916
  constexpr uint64_t getFieldValue(381,15113
  constexpr void init(385,15250
  constexpr uint64_t getUniqueRAWLLTData(418,16697
inline raw_ostream& operator<<(424,16884
template<> struct DenseMapInfo<DenseMapInfo429,16981
  static inline LLT getEmptyKey(430,17019
  static inline LLT getTombstoneKey(435,17126
  static inline unsigned getHashValue(440,17236
  static bool isEqual(444,17394

/usr/include/llvm/CodeGen/LowerEmuTLS.h,104
#define LLVM_CODEGEN_LOWEREMUTLS_H16,595
class LowerEmuTLSPass 22,683
  PreservedAnalyses run(24,755

/usr/include/llvm/CodeGen/MBFIWrapper.h,347
#define LLVM_CODEGEN_MBFIWRAPPER_H15,646
class MBFIWrapper 26,852
  MBFIWrapper(28,881
  BlockFrequency getBlockFreq(30,945
  const MachineBlockFrequencyInfo &getMBFI(getMBFI37,1261
  const MachineBlockFrequencyInfo &MBFI;MBFI40,1339
  DenseMap<DenseMap41,1380
  DenseMap<const MachineBasicBlock *, BlockFrequency> MergedBBFreq;41,1380

/usr/include/llvm/CodeGen/MIRFormatter.h,342
#define LLVM_CODEGEN_MIRFORMATTER_H14,558
class MIRFormatter 32,970
      ErrorCallbackType;35,1068
  virtual void printImm(43,1376
  virtual bool parseImmMnemonic(50,1646
  printCustomPseudoSourceValue(60,2129
  virtual bool parseCustomPseudoSourceValue(66,2378
  static void printIRValue(76,2867
  static bool parseIRValue(82,3170

/usr/include/llvm/CodeGen/MIRYamlMapping.h,9237
#define LLVM_CODEGEN_MIRYAMLMAPPING_H15,615
struct StringValue 34,1118
  std::string Value;35,1139
  SMRange SourceRange;36,1160
  StringValue(39,1211
  StringValue(40,1273
  bool operator==(operator==42,1322
template <> struct ScalarTraits<ScalarTraits47,1415
  static void output(48,1462
  static StringRef input(52,1556
  static QuotingType mustQuote(60,1817
struct FlowStringValue 63,1892
  FlowStringValue(65,1962
template <> struct ScalarTraits<ScalarTraits68,2038
  static void output(69,2089
  static StringRef input(73,2230
  static QuotingType mustQuote(77,2372
struct BlockStringValue 80,2447
  StringValue Value;81,2473
  bool operator==(operator==83,2495
template <> struct BlockScalarTraits<BlockScalarTraits88,2593
  static void output(89,2650
  static StringRef input(93,2797
struct UnsignedValue 100,3046
  unsigned Value 101,3069
  SMRange SourceRange;102,3091
  UnsignedValue(105,3144
  bool operator==(operator==107,3195
template <> struct ScalarTraits<ScalarTraits112,3290
  static void output(113,3339
  static StringRef input(117,3488
  static QuotingType mustQuote(124,3784
template <> struct ScalarEnumerationTraits<ScalarEnumerationTraits129,3897
  static void enumeration(130,3977
template <> struct ScalarTraits<ScalarTraits147,4797
  static void output(148,4843
  static StringRef input(152,5010
  static QuotingType mustQuote(161,5327
template <> struct ScalarTraits<ScalarTraits164,5403
  static void output(165,5444
  static StringRef input(168,5555
  static QuotingType mustQuote(177,5848
namespace llvm 187,6152
namespace yaml 188,6169
struct VirtualRegisterDefinition 190,6187
  UnsignedValue ID;191,6222
  StringValue Class;192,6242
  StringValue PreferredRegister;193,6263
  bool operator==(operator==197,6355
template <> struct MappingTraits<MappingTraits203,6539
  static void mapping(204,6601
  static const bool flow 211,6899
struct MachineFunctionLiveIn 214,6936
  StringValue Register;215,6967
  StringValue VirtualRegister;216,6991
  bool operator==(operator==218,7023
template <> struct MappingTraits<MappingTraits224,7187
  static void mapping(225,7245
  static const bool flow 232,7513
struct MachineStackObject 242,7886
  enum ObjectType 243,7914
  enum ObjectType { DefaultType,243,7914
  enum ObjectType { DefaultType, SpillSlot,243,7914
  enum ObjectType { DefaultType, SpillSlot, VariableSized 243,7914
  UnsignedValue ID;244,7975
  StringValue Name;245,7995
  ObjectType Type 247,8067
  int64_t Offset 248,8100
  uint64_t Size 249,8122
  MaybeAlign Alignment 250,8143
  TargetStackID::Value StackID;251,8182
  StringValue CalleeSavedRegister;252,8214
  bool CalleeSavedRestored 253,8249
  std::optional<int64_t> LocalOffset;254,8284
  StringValue DebugVar;255,8322
  StringValue DebugExpr;256,8346
  StringValue DebugLoc;257,8371
  bool operator==(operator==259,8396
template <> struct ScalarEnumerationTraits<ScalarEnumerationTraits271,8951
  static void enumeration(272,9028
template <> struct MappingTraits<MappingTraits279,9327
  static void mapping(280,9382
  static const bool flow 306,10849
struct EntryValueObject 311,10985
  StringValue EntryValueRegister;312,11011
  StringValue DebugVar;313,11045
  StringValue DebugExpr;314,11069
  StringValue DebugLoc;315,11094
  bool operator==(operator==316,11118
template <> struct MappingTraits<MappingTraits323,11356
  static void mapping(324,11409
  static const bool flow 330,11751
struct FixedMachineStackObject 335,11883
  enum ObjectType 336,11916
  enum ObjectType { DefaultType,336,11916
  enum ObjectType { DefaultType, SpillSlot 336,11916
  UnsignedValue ID;337,11962
  ObjectType Type 338,11982
  int64_t Offset 339,12015
  uint64_t Size 340,12037
  MaybeAlign Alignment 341,12058
  TargetStackID::Value StackID;342,12097
  bool IsImmutable 343,12129
  bool IsAliased 344,12157
  StringValue CalleeSavedRegister;345,12183
  bool CalleeSavedRestored 346,12218
  StringValue DebugVar;347,12253
  StringValue DebugExpr;348,12277
  StringValue DebugLoc;349,12302
  bool operator==(operator==351,12327
struct ScalarEnumerationTraits<ScalarEnumerationTraits364,12909
  static void enumeration(365,12979
struct ScalarEnumerationTraits<ScalarEnumerationTraits373,13255
  static void enumeration(374,13310
template <> struct MappingTraits<MappingTraits383,13691
  static void mapping(384,13751
  static const bool flow 409,15152
struct FrameIndex 414,15284
  int FI;418,15486
  bool IsFixed;419,15496
  SMRange SourceRange;420,15512
template <> struct ScalarTraits<ScalarTraits428,15688
  static void output(429,15734
  static StringRef input(433,15883
  static QuotingType mustQuote(454,16563
struct CallSiteInfo 458,16687
  struct ArgRegPair 461,16794
    StringValue Reg;462,16816
    uint16_t ArgNo;463,16837
    bool operator==(operator==465,16858
  struct MachineInstrLoc 471,17042
    unsigned BlockNum;472,17069
    unsigned Offset;473,17092
    bool operator==(operator==475,17114
  MachineInstrLoc CallLocation;480,17251
  std::vector<ArgRegPair> ArgForwardingRegs;481,17283
  bool operator==(operator==483,17329
template <> struct MappingTraits<MappingTraits489,17518
  static void mapping(490,17579
  static const bool flow 495,17742
namespace llvm 502,17851
namespace yaml 503,17868
template <> struct MappingTraits<MappingTraits505,17886
  static void mapping(506,17935
struct DebugValueSubstitution 517,18347
  unsigned SrcInst;518,18379
  unsigned SrcOp;519,18399
  unsigned DstInst;520,18417
  unsigned DstOp;521,18437
  unsigned Subreg;522,18455
  bool operator==(operator==524,18475
template <> struct MappingTraits<MappingTraits530,18678
  static void mapping(531,18737
  static const bool flow 539,19037
namespace llvm 546,19180
namespace yaml 547,19197
struct MachineConstantPoolValue 548,19214
  UnsignedValue ID;549,19248
  StringValue Value;550,19268
  bool operator==(operator==554,19362
template <> struct MappingTraits<MappingTraits561,19586
  static void mapping(562,19647
struct MachineJumpTable 570,19983
  struct Entry 571,20009
    UnsignedValue ID;572,20026
    std::vector<FlowStringValue> Blocks;573,20048
    bool operator==(operator==575,20090
  MachineJumpTableInfo::JTEntryKind Kind 580,20205
  std::vector<Entry> Entries;581,20283
  bool operator==(operator==583,20314
template <> struct MappingTraits<MappingTraits588,20438
  static void mapping(589,20498
namespace llvm 607,21250
namespace yaml 608,21267
template <> struct MappingTraits<MappingTraits610,21285
  static void mapping(611,21338
struct MachineFrameInfo 625,21932
  bool IsFrameAddressTaken 626,21958
  bool IsReturnAddressTaken 627,21994
  bool HasStackMap 628,22031
  bool HasPatchPoint 629,22059
  uint64_t StackSize 630,22089
  int OffsetAdjustment 631,22115
  unsigned MaxAlignment 632,22143
  bool AdjustsStack 633,22172
  bool HasCalls 634,22201
  StringValue StackProtector;635,22226
  StringValue FunctionContext;636,22256
  unsigned MaxCallFrameSize 637,22287
  unsigned CVBytesOfCalleeSavedRegisters 638,22356
  bool HasOpaqueSPAdjustment 639,22402
  bool HasVAStart 640,22440
  bool HasMustTailInVarArgFunc 641,22467
  bool HasTailCall 642,22507
  unsigned LocalFrameSize 643,22535
  StringValue SavePoint;644,22566
  StringValue RestorePoint;645,22591
  bool operator==(operator==647,22620
template <> struct MappingTraits<MappingTraits670,23764
  static void mapping(671,23817
struct MachineFunctionInfo 704,25772
  virtual void mappingImpl(706,25845
template <> struct MappingTraits<MappingTraits709,25891
  static void mapping(710,25964
struct MachineFunction 716,26096
  StringRef Name;717,26121
  MaybeAlign Alignment 718,26139
  bool ExposesReturnsTwice 719,26178
  bool Legalized 721,26252
  bool RegBankSelected 722,26278
  bool Selected 723,26310
  bool FailedISel 724,26335
  bool TracksRegLiveness 726,26388
  bool HasWinCFI 727,26422
  bool CallsEHReturn 729,26449
  bool CallsUnwindInit 730,26479
  bool HasEHCatchret 731,26511
  bool HasEHScopes 732,26541
  bool HasEHFunclets 733,26569
  bool IsOutlined 734,26599
  bool FailsVerification 736,26627
  bool TracksDebugUserValues 737,26661
  bool UseDebugInstrRef 738,26699
  std::vector<VirtualRegisterDefinition> VirtualRegisters;739,26732
  std::vector<MachineFunctionLiveIn> LiveIns;740,26791
  std::optional<std::vector<FlowStringValue>> CalleeSavedRegisters;741,26837
  MachineFrameInfo FrameInfo;744,26977
  std::vector<FixedMachineStackObject> FixedStackObjects;745,27007
  std::vector<EntryValueObject> EntryValueObjects;746,27065
  std::vector<MachineStackObject> StackObjects;747,27116
  std::vector<MachineConstantPoolValue> Constants;748,27164
  std::unique_ptr<MachineFunctionInfo> MachineFuncInfo;749,27234
  std::vector<CallSiteInfo> CallSitesInfo;750,27290
  std::vector<DebugValueSubstitution> DebugValueSubstitutions;751,27333
  MachineJumpTable JumpTableInfo;752,27396
  std::vector<StringValue> MachineMetadataNodes;753,27430
  BlockStringValue Body;754,27479
template <> struct MappingTraits<MappingTraits757,27508
  static void mapping(758,27560

/usr/include/llvm/CodeGen/MachineBasicBlock.h,11843
#define LLVM_CODEGEN_MACHINEBASICBLOCK_H14,565
struct MBBSectionID 51,1553
  enum SectionType 52,1575
    Default 53,1596
    Exception,55,1708
    Cold,56,1779
  } Type;57,1836
  unsigned Number;58,1846
  MBBSectionID(60,1866
  const static MBBSectionID ColdSectionID;63,1984
  const static MBBSectionID ExceptionSectionID;64,2027
  MBBSectionID(74,2359
struct UniqueBBID 79,2531
  unsigned BaseID;80,2551
  unsigned CloneID;81,2570
template <> struct ilist_traits<ilist_traits84,2594
  MachineBasicBlock *Parent;Parent88,2726
  using instr_iterator 90,2756
      simple_ilist<MachineInstr, ilist_sentinel_tracking<true>>::iterator;iterator91,2781
class MachineBasicBlock101,3115
  struct RegisterMaskPair 107,3398
    MCPhysReg PhysReg;109,3436
    LaneBitmask LaneMask;110,3459
    RegisterMaskPair(112,3486
    bool operator==(operator==115,3599
  using Instructions 121,3748
  const BasicBlock *BB;BB123,3824
  int Number;124,3848
  unsigned CallFrameSize 132,4183
  MachineFunction *xParent;xParent134,4214
  Instructions Insts;135,4242
  std::vector<MachineBasicBlock *> Predecessors;138,4327
  std::vector<MachineBasicBlock *> Successors;139,4376
  std::vector<BranchProbability> Probs;144,4597
  using probability_iterator 145,4637
  using const_probability_iterator 146,4710
  std::optional<uint64_t> IrrLoopHeaderWeight;149,4802
  using LiveInVector 152,4928
  LiveInVector LiveIns;153,4982
  Align Alignment;157,5101
  unsigned MaxBytesForAlignment 161,5313
  bool IsEHPad 164,5425
  bool MachineBlockAddressTaken 168,5604
  BasicBlock *AddressTakenIRBlock AddressTakenIRBlock172,5775
  bool LabelMustBeEmitted 176,5949
  bool IsEHScopeEntry 181,6156
  bool IsEHCatchretTarget 184,6245
  bool IsEHFuncletEntry 187,6355
  bool IsCleanupFuncletEntry 190,6467
  std::optional<UniqueBBID> BBID;194,6633
  MBBSectionID SectionID{SectionID197,6748
  bool IsBeginSection 200,6832
  bool IsEndSection 203,6916
  bool IsInlineAsmBrIndirectTarget 206,7024
  mutable MCSymbol *CachedMCSymbol CachedMCSymbol210,7185
  mutable MCSymbol *CachedEHCatchretMCSymbol CachedEHCatchretMCSymbol213,7299
  mutable MCSymbol *CachedEndMCSymbol CachedEndMCSymbol217,7511
  const BasicBlock *getBasicBlock(getBasicBlock233,8021
  void clearBasicBlock(237,8207
  bool hasAddressTaken(251,8740
  bool isMachineBlockAddressTaken(259,9135
  bool isIRBlockAddressTaken(263,9372
  BasicBlock *getAddressTakenIRBlock(getAddressTakenIRBlock266,9518
  void setMachineBlockAddressTaken(271,9785
  void setAddressTakenIRBlock(275,9966
  bool hasLabelMustBeEmitted(278,10102
  void setLabelMustBeEmitted(282,10275
  const MachineFunction *getParent(getParent285,10400
  MachineFunction *getParent(getParent286,10463
  using instr_iterator 288,10515
  using const_instr_iterator 289,10564
  using reverse_instr_iterator 290,10625
  using const_reverse_instr_iterator 291,10690
  using iterator 293,10768
  using const_iterator 294,10829
  using reverse_iterator 295,10902
  using const_reverse_iterator 296,10977
  unsigned size(299,11071
  bool empty(301,11187
  MachineInstr       &instr_front(instr_front303,11235
  MachineInstr       &instr_back(instr_back304,11303
  const MachineInstr &instr_front(instr_front305,11371
  const MachineInstr &instr_back(instr_back306,11439
  MachineInstr       &front(front308,11508
  MachineInstr       &back(back309,11576
  const MachineInstr &front(front310,11644
  const MachineInstr &back(back311,11712
  instr_iterator                instr_begin(313,11781
  const_instr_iterator          instr_begin(314,11860
  instr_iterator                  instr_end(315,11939
  const_instr_iterator            instr_end(316,12018
  reverse_instr_iterator       instr_rbegin(317,12097
  const_reverse_instr_iterator instr_rbegin(318,12176
  reverse_instr_iterator       instr_rend 319,12255
  const_reverse_instr_iterator instr_rend 320,12334
  using instr_range 322,12414
  using const_instr_range 323,12468
  instr_range instrs(324,12534
  const_instr_range instrs(325,12609
  iterator                begin(329,12709
  const_iterator          begin(330,12776
  iterator                end 331,12843
  const_iterator          end 332,12910
  reverse_iterator rbegin(333,12977
  const_reverse_iterator rbegin(336,13074
  reverse_iterator rend(339,13189
  const_reverse_iterator rend(340,13258
  static Instructions MachineBasicBlock::*getSublistAccess(getSublistAccess345,13399
  inline iterator_range<iterator> terminators(349,13519
  inline iterator_range<const_iterator> terminators(352,13625
  inline iterator_range<iterator> phis(357,13814
  inline iterator_range<const_iterator> phis(360,13911
  using pred_iterator 365,14056
  using const_pred_iterator 366,14124
  using succ_iterator 367,14204
  using const_succ_iterator 368,14272
  using pred_reverse_iterator 369,14352
  using const_pred_reverse_iterator 371,14442
  using succ_reverse_iterator 373,14544
  using const_succ_reverse_iterator 375,14634
  pred_iterator        pred_begin(377,14736
  const_pred_iterator  pred_begin(378,14811
  pred_iterator        pred_end(379,14886
  const_pred_iterator  pred_end(380,14961
  pred_reverse_iterator        pred_rbegin(381,15036
  const_pred_reverse_iterator  pred_rbegin(383,15156
  pred_reverse_iterator        pred_rend(385,15282
  const_pred_reverse_iterator  pred_rend(387,15400
  unsigned             pred_size(389,15526
  bool                 pred_empty(392,15616
  succ_iterator        succ_begin(393,15691
  const_succ_iterator  succ_begin(394,15766
  succ_iterator        succ_end(395,15841
  const_succ_iterator  succ_end(396,15916
  succ_reverse_iterator        succ_rbegin(397,15991
  const_succ_reverse_iterator  succ_rbegin(399,16111
  succ_reverse_iterator        succ_rend(401,16237
  const_succ_reverse_iterator  succ_rend(403,16355
  unsigned             succ_size(405,16481
  bool                 succ_empty(408,16569
  inline iterator_range<pred_iterator> predecessors(410,16645
  inline iterator_range<const_pred_iterator> predecessors(413,16754
  inline iterator_range<succ_iterator> successors(416,16875
  inline iterator_range<const_succ_iterator> successors(419,16982
  void addLiveIn(428,17357
  void addLiveIn(432,17523
  using livein_iterator 459,18596
  livein_iterator livein_begin_dbg(465,18890
  iterator_range<livein_iterator> liveins_dbg(466,18961
  livein_iterator livein_end(471,19119
  bool            livein_empty(472,19184
  iterator_range<livein_iterator> liveins(473,19251
  std::vector<RegisterMaskPair> getLiveIns(480,19485
  class liveout_iterator 482,19557
    liveout_iterator(490,19829
    liveout_iterator &operator++(operator++507,20448
    liveout_iterator operator++(518,20760
    reference operator*(524,20877
    pointer operator->(528,20942
    bool operator==(operator==532,21007
    bool operator!=(operator!=538,21203
    bool advanceToValidPosition(542,21307
    MCPhysReg ExceptionPointer,556,21629
    MCPhysReg ExceptionPointer, ExceptionSelector;556,21629
    const_succ_iterator BlockI;557,21680
    const_succ_iterator BlockEnd;558,21712
    livein_iterator LiveRegI;559,21746
  liveout_iterator liveout_end(566,22033
  iterator_range<liveout_iterator> liveouts(569,22126
  Align getAlignment(582,22672
  void setAlignment(585,22764
  void setAlignment(587,22813
  unsigned getMaxBytesForAlignment(593,23009
  void setMaxBytesForAlignment(596,23163
  bool isEHPad(602,23375
  void setIsEHPad(606,23532
  bool isEHScopeEntry(615,23866
  void setIsEHScopeEntry(619,24081
  bool isEHCatchretTarget(622,24206
  void setIsEHCatchretTarget(625,24329
  bool isEHFuncletEntry(628,24466
  void setIsEHFuncletEntry(631,24589
  bool isCleanupFuncletEntry(634,24726
  void setIsCleanupFuncletEntry(637,24863
  bool isBeginSection(640,24995
  bool isEndSection(643,25104
  void setIsBeginSection(645,25158
  void setIsEndSection(647,25223
  std::optional<UniqueBBID> getBBID(649,25284
  MBBSectionID getSectionID(652,25396
  unsigned getSectionIDNum(655,25519
  void setBBID(661,25723
  void setSectionID(667,25884
  bool isInlineAsmBrIndirectTarget(678,26324
  void setIsInlineAsmBrIndirectTarget(683,26479
  bool sameSection(699,27059
  void normalizeSuccProbs(738,29231
  bool hasSuccessorProbabilities(786,31541
  MachineBasicBlock *getSingleSuccessor(getSingleSuccessor805,32430
  MachineBasicBlock *getSinglePredecessor(getSinglePredecessor814,32777
  MachineBasicBlock *getLogicalFallThrough(getLogicalFallThrough829,33507
  const_iterator getFirstNonPHI(844,34272
  const_iterator getFirstTerminator(863,35247
  const_iterator getFirstNonDebugInstr(893,37071
  const_iterator getLastNonDebugInstr(915,38518
  bool isReturnBlock(922,38784
  bool isEHScopeReturnBlock(928,38964
  void pop_front(958,40417
  void pop_back(959,40459
  void push_back(960,40499
  void insert(972,41107
  iterator insert(979,41357
  iterator insertAfter(988,41747
  instr_iterator insertAfterBundle(998,42235
  instr_iterator erase_instr(1018,43128
  iterator erase(1023,43298
  iterator erase(1030,43567
  iterator erase(1038,43804
  MachineInstr *remove(remove1047,44114
  void clear(1059,44577
  void splice(1067,44822
  void splice(1078,45284
  DebugLoc findDebugLoc(1102,46340
  DebugLoc rfindDebugLoc(1110,46681
  DebugLoc findPrevDebugLoc(1118,47063
  DebugLoc rfindPrevDebugLoc(1127,47526
  enum LivenessQueryResult 1136,47880
    LQR_Live,1137,47909
    LQR_Dead,1138,47981
    LQR_Unknown 1139,48038
  enum PrintNameFlag 1162,49066
    PrintNameIr 1163,49089
    PrintNameAttributes 1164,49150
  int getNumber(1175,49625
  void setNumber(1176,49668
  unsigned getCallFrameSize(1179,49772
  void setCallFrameSize(1181,49894
  std::optional<uint64_t> getIrrLoopHeaderWeight(1189,50133
  void setIrrLoopHeaderWeight(1193,50229
struct MBB2NumberFunctor 1238,51956
  using argument_type 1239,51983
  unsigned operator()(operator()1240,52034
template <> struct GraphTraits<GraphTraits1253,52488
  using NodeRef 1254,52542
  using ChildIteratorType 1255,52581
  static NodeRef getEntryNode(1257,52644
  static ChildIteratorType child_begin(1258,52712
  static ChildIteratorType child_end(1259,52790
template <> struct GraphTraits<GraphTraits1262,52868
  using NodeRef 1263,52928
  using ChildIteratorType 1264,52973
  static NodeRef getEntryNode(1266,53042
  static ChildIteratorType child_begin(1267,53116
  static ChildIteratorType child_end(1268,53194
template <> struct GraphTraits<GraphTraits1277,53562
  using NodeRef 1278,53624
  using ChildIteratorType 1279,53663
  static NodeRef getEntryNode(1281,53726
  static ChildIteratorType child_begin(1285,53815
  static ChildIteratorType child_end(1286,53893
template <> struct GraphTraits<GraphTraits1289,53971
  using NodeRef 1290,54039
  using ChildIteratorType 1291,54084
  static NodeRef getEntryNode(1293,54153
  static ChildIteratorType child_begin(1297,54248
  static ChildIteratorType child_end(1298,54326
inline auto successors(1302,54480
inline auto predecessors(1303,54561
class MachineInstrSpan 1311,54921
  MachineBasicBlock &MBB;MBB1312,54946
  MachineBasicBlock::iterator I,1313,54972
  MachineBasicBlock::iterator I, B,1313,54972
  MachineBasicBlock::iterator I, B, E;1313,54972
  MachineInstrSpan(1316,55020
  MachineBasicBlock::iterator begin(1322,55248
  MachineBasicBlock::iterator end(1325,55348
  bool empty(1326,55398
  MachineBasicBlock::iterator getInitial(1328,55443
inline IterT skipDebugInstructionsForward(1336,55809
inline IterT skipDebugInstructionsBackward(1349,56366
inline IterT next_nodbg(1360,56775
inline IterT prev_nodbg(1367,57074
inline auto instructionsWithoutDebug(1374,57388

/usr/include/llvm/CodeGen/MachineBlockFrequencyInfo.h,216
#define LLVM_CODEGEN_MACHINEBLOCKFREQUENCYINFO_H14,558
class MachineBlockFrequencyInfo 33,1079
  std::unique_ptr<ImplType> MBFI;35,1204
  static char ID;38,1247
  double getBlockFreqRelativeToEntryBlock(68,2616

/usr/include/llvm/CodeGen/MachineCycleAnalysis.h,289
#define LLVM_CODEGEN_MACHINECYCLEANALYSIS_H15,627
namespace llvm 21,802
class MachineCycleInfoWrapperPass 27,995
  MachineCycleInfo CI;29,1092
  static char ID;32,1124
  MachineCycleInfo &getCycleInfo(getCycleInfo36,1177
  const MachineCycleInfo &getCycleInfo(getCycleInfo37,1227

/usr/include/llvm/CodeGen/MachineFunction.h,3539
#define LLVM_CODEGEN_MACHINEFUNCTION_H18,776
template <> struct ilist_callback_traits<ilist_callback_traits82,2327
  void transferNodesFromList(87,2511
struct MachineFunctionInfo 96,2942
  template <typename FuncInfoTy,103,3161
  template <typename FuncInfoTy, typename SubtargetTy 103,3161
  static Ty *create(create110,3468
  clone(119,3928
class MachineFunctionProperties 129,4295
  enum class Property 179,7375
    IsSSA,180,7410
    NoPHIs,181,7421
    TracksLiveness,182,7433
    NoVRegs,183,7453
    FailedISel,184,7466
    Legalized,185,7482
    RegBankSelected,186,7497
    Selected,187,7518
    TiedOpsRewritten,188,7532
    FailsVerification,189,7554
    TracksDebugUserValues,190,7577
    LastProperty 191,7604
  bool hasProperty(194,7652
  MachineFunctionProperties &set(set198,7745
  MachineFunctionProperties &reset(reset203,7861
  MachineFunctionProperties &reset(reset209,8013
  MachineFunctionProperties &set(set214,8099
  MachineFunctionProperties &reset(reset219,8229
  bool verifyRequiredProperties(226,8458
  BitVector Properties 234,8695
struct SEHHandler 238,8790
  const Function *FilterOrFinally;FilterOrFinally240,8872
  const BlockAddress *RecoverBA;RecoverBA243,8974
struct LandingPadInfo 247,9091
  MachineBasicBlock *LandingPadBlock;LandingPadBlock248,9115
  SmallVector<SmallVector249,9180
  SmallVector<MCSymbol *, 1> BeginLabels;249,9180
  SmallVector<SmallVector250,9250
  SmallVector<MCSymbol *, 1> EndLabels;250,9250
  SmallVector<SmallVector251,9317
  SmallVector<SEHHandler, 1> SEHHandlers;251,9317
  MCSymbol *LandingPadLabel LandingPadLabel252,9397
  std::vector<int> TypeIds;253,9478
  explicit LandingPadInfo(255,9562
  class VariableDbgInfo 415,15406
    std::variant<std::variant416,15432
    std::variant<int, MCRegister> Address;416,15432
    const DILocalVariable *Var;Var419,15486
    const DIExpression *Expr;Expr420,15518
    const DILocation *Loc;Loc421,15548
    VariableDbgInfo(423,15576
    VariableDbgInfo(427,15763
    bool inStackSlot(432,16028
    bool inEntryValueRegister(435,16181
    int getStackSlot(441,16377
    MCRegister getEntryValueRegister(445,16542
    void updateStackSlot(451,16731
  class Delegate 457,16837
    virtual void MF_HandleChangeDesc(468,17291
  struct ArgRegPair 477,17620
    Register Reg;478,17642
    uint16_t ArgNo;479,17660
    ArgRegPair(480,17680
  class DebugSubstitution 533,19861
    DebugInstrOperandPair Src;535,19899
    DebugInstrOperandPair Dest;536,19971
    unsigned Subreg;537,20048
    DebugSubstitution(539,20128
    bool operator<(545,20453
  class DebugPHIRegallocPos 561,21256
    MachineBasicBlock *MBB;MBB563,21296
    Register Reg;564,21374
    unsigned SubReg;565,21450
    DebugPHIRegallocPos(566,21521
template <> struct GraphTraits<GraphTraits1371,54979
  static NodeRef getEntryNode(1373,55073
  using nodes_iterator 1376,55224
  static nodes_iterator nodes_begin(1378,55295
  static nodes_iterator nodes_end(1382,55397
  static unsigned       size 1386,55495
template <> struct GraphTraits<GraphTraits1388,55576
  static NodeRef getEntryNode(1390,55682
  using nodes_iterator 1393,55839
  static nodes_iterator nodes_begin(1395,55916
  static nodes_iterator nodes_end 1399,56024
  static unsigned       size 1403,56130
template <> struct GraphTraits<GraphTraits1413,56501
  static NodeRef getEntryNode(1415,56613
template <> struct GraphTraits<GraphTraits1419,56712
  static NodeRef getEntryNode(1421,56836

/usr/include/llvm/CodeGen/MachineInstr.h,9566
#define LLVM_CODEGEN_MACHINEINSTR_H16,666
class MachineInstr66,2104
  enum CommentFlag 76,2520
    ReloadReuse 77,2541
    NoSchedComment 78,2620
    TAsmComments 79,2646
  enum MIFlag 82,2731
    NoFlags 83,2747
    FrameSetup 84,2764
    FrameDestroy 86,2888
    BundledPred 88,3018
    BundledSucc 89,3088
    FmNoNans 90,3156
    FmNoInfs 92,3271
    FmNsz 94,3391
    FmArcp 96,3513
    FmContract 98,3635
    FmAfn 100,3763
    FmReassoc 102,3885
    NoUWrap 104,4012
    NoSWrap 106,4131
    IsExact 108,4248
    NoFPExcept 110,4364
    NoMerge 112,4482
    Unpredictable 115,4668
    NoConvergent 116,4742
  const MCInstrDesc *MCID;MCID120,4835
#define LLVM_MI_NUMOPERANDS_BITS 126,5104
#define LLVM_MI_FLAGS_BITS 127,5140
#define LLVM_MI_ASMPRINTERFLAGS_BITS 128,5170
  uint32_t NumOperands : LLVM_MI_NUMOPERANDS_BITS;131,5251
  OperandCapacity CapOperands;136,5468
  uint32_t Flags : LLVM_MI_FLAGS_BITS;139,5620
  uint8_t AsmPrinterFlags : LLVM_MI_ASMPRINTERFLAGS_BITS;144,5878
  class ExtraInfo final : TrailingObjects<ExtraInfo,ExtraInfo152,6269
  class ExtraInfo final : TrailingObjects<ExtraInfo, MachineMemOperand 152,6269
                                          MCSymbol 153,6343
                                          MCSymbol *, MDNode 153,6343
  enum ExtraInfoInlineKinds 265,10777
    EIIK_MMO 266,10807
    EIIK_PreInstrSymbol,267,10825
    EIIK_PostInstrSymbol,268,10850
    EIIK_OutOfLine269,10876
  PointerSumType<PointerSumType277,11251
      Info;282,11573
  DebugLoc DbgLoc;284,11586
  unsigned DebugInstrNum;288,11748
  void setParent(293,11905
  static bool opIsRegDef(312,12682
  static bool opIsRegUse(316,12777
  const MachineBasicBlock* getParent(326,13070
  MachineBasicBlock* getParent(327,13134
  MachineFunction *getMF(getMF338,13507
  uint8_t getAsmPrinterFlags(344,13688
  void clearAsmPrinterFlags(347,13792
  bool getAsmPrinterFlag(350,13896
  void setAsmPrinterFlag(357,14157
  void clearAsmPrinterFlag(364,14404
  uint32_t getFlags(371,14656
  bool getFlag(376,14749
  void setFlag(383,14949
  void setFlags(389,15126
  void clearFlag(398,15463
  bool isInsideBundle(439,16717
  bool isBundled(445,16934
  bool isBundledWithPred(451,17137
  bool isBundledWithSucc(455,17319
  const DebugLoc &getDebugLoc(getDebugLoc472,17923
  const MachineOperand &getDebugOffset(getDebugOffset477,18194
  MachineOperand &getDebugOffset(getDebugOffset481,18329
  unsigned peekDebugInstrNum(519,19772
  void setDebugInstrNum(523,19951
  void dropDebugNumber(529,20273
  const MCInstrDesc &getDesc(getDesc540,20745
  unsigned getOpcode(543,20848
  unsigned getNumOperands(546,20946
  unsigned getNumDebugOperands(549,21075
  const MachineOperand& getOperand(553,21197
  MachineOperand& getOperand(557,21346
  MachineOperand &getDebugOperand(getDebugOperand562,21484
  const MachineOperand &getDebugOperand(getDebugOperand566,21668
  bool hasDebugOperandForReg(573,21967
  template <typename Operand,581,22241
  static iterator_range<iterator_range582,22293
  getDebugOperandsForReg(584,22386
  iterator_range<iterator_range589,22634
  getDebugOperandsForReg(591,22772
  iterator_range<iterator_range595,22973
  getDebugOperandsForReg(597,23099
  bool isDebugOperand(602,23244
  unsigned getDebugOperandIndex(606,23386
  unsigned getNumDefs(612,23626
  bool hasImplicitDef(617,23790
  unsigned getNumImplicitOperands(625,24008
  bool isOperandSubregIdx(630,24175
  mop_iterator operands_begin(653,24945
  mop_iterator operands_end(654,24998
  const_mop_iterator operands_begin(656,25064
  const_mop_iterator operands_end(657,25129
  iterator_range<mop_iterator> operands(659,25207
  iterator_range<const_mop_iterator> operands(662,25312
  iterator_range<mop_iterator> explicit_operands(665,25429
  iterator_range<const_mop_iterator> explicit_operands(669,25594
  iterator_range<mop_iterator> implicit_operands(673,25771
  iterator_range<const_mop_iterator> implicit_operands(676,25894
  iterator_range<mop_iterator> debug_operands(681,26156
  iterator_range<const_mop_iterator> debug_operands(688,26484
  iterator_range<mop_iterator> defs(696,26916
  iterator_range<const_mop_iterator> defs(701,27086
  iterator_range<mop_iterator> uses(707,27390
  iterator_range<const_mop_iterator> uses(711,27536
  iterator_range<mop_iterator> explicit_uses(714,27672
  iterator_range<const_mop_iterator> explicit_uses(718,27856
  iterator_range<filtered_mop_iterator> all_defs(730,28375
  iterator_range<filtered_const_mop_iterator> all_defs(734,28512
  iterator_range<filtered_mop_iterator> all_uses(740,28739
  iterator_range<filtered_const_mop_iterator> all_uses(744,28872
  unsigned getOperandNo(749,29057
  ArrayRef<MachineMemOperand *> memoperands(756,29353
  mmo_iterator memoperands_begin(774,29873
  mmo_iterator memoperands_end(781,30193
  bool memoperands_empty(786,30445
  bool hasOneMemOperand(789,30586
  unsigned getNumMemOperands(792,30701
  MCSymbol *getPreInstrSymbol(getPreInstrSymbol795,30844
  MCSymbol *getPostInstrSymbol(getPostInstrSymbol807,31181
  MDNode *getHeapAllocMarker(getHeapAllocMarker819,31515
  MDNode *getPCSections(getPCSections829,31769
  uint32_t getCFIType(839,32015
  enum QueryType 851,32304
    IgnoreBundle,852,32323
    AnyInBundle,853,32362
    AllInBundle 854,32440
  bool hasProperty(862,32818
  bool isPreISelOpcode(875,33433
  bool isVariadic(883,33784
  bool hasOptionalDef(889,34026
  bool isPseudo(895,34255
  bool isMetaInstruction(901,34470
  bool isReturn(905,34581
  bool isEHScopeReturn(911,34815
  bool isCall(915,34932
  bool isBarrier(930,35652
  bool isTerminator(939,36029
  bool isBranch(947,36387
  bool isIndirectBranch(953,36582
  bool isConditionalBranch(961,36952
  bool isUnconditionalBranch(969,37307
  bool isPredicable(977,37737
  bool isCompare(984,38008
  bool isMoveImmediate(990,38221
  bool isMoveReg(996,38442
  bool isBitcast(1001,38612
  bool isSelect(1006,38781
  bool isNotDuplicable(1013,39087
  bool isConvergent(1022,39425
  bool hasDelaySlot(1035,39882
  bool canFoldAsLoad(1047,40525
  bool isRegSequenceLike(1061,41038
  bool isExtractSubregLike(1076,41602
  bool isInsertSubregLike(1090,42159
  bool mayLoad(1101,42674
  bool mayStore(1114,43224
  bool mayLoadOrStore(1124,43581
  bool mayRaiseFPException(1134,44135
  bool isCommutable(1153,45072
  bool isConvertibleTo3Addr(1171,46041
  bool usesCustomInsertionHook(1183,46670
  bool hasPostISelHook(1191,47059
  bool isRematerializable(1199,47449
  bool isAsCheapAsAMove(1211,48133
  bool hasExtraSrcRegAllocReq(1222,48746
  bool hasExtraDefRegAllocReq(1232,49293
  enum MICheckType 1236,49423
    CheckDefs,1237,49444
    CheckKillDead,1238,49499
    IgnoreDefs,1239,49571
    IgnoreVRegDefs 1240,49617
  bool isEHLabel(1285,51570
  bool isGCLabel(1286,51645
  bool isAnnotationLabel(1287,51720
  bool isLabel(1292,51877
  bool isCFIInstruction(1296,51969
  bool isPseudoProbe(1300,52065
  bool isPosition(1305,52223
  bool isNonListDebugValue(1307,52294
  bool isDebugValueList(1310,52386
  bool isDebugValue(1313,52480
  bool isDebugLabel(1316,52570
  bool isDebugRef(1317,52649
  bool isDebugValueLike(1318,52730
  bool isDebugPHI(1319,52805
  bool isDebugInstr(1320,52880
  bool isDebugOrPseudoInstr(1323,52991
  bool isDebugOffsetImm(1327,53080
  bool isIndirectDebugValue(1333,53296
  bool isUndefDebugValue(1343,53662
  bool isJumpTableDebugInfo(1353,53948
  bool isPHI(1357,54054
  bool isKill(1361,54175
  bool isImplicitDef(1362,54243
  bool isInlineAsm(1363,54324
  bool isInsertSubreg(1375,54792
  bool isSubregToReg(1379,54884
  bool isRegSequence(1383,54975
  bool isBundle(1387,55065
  bool isCopy(1391,55144
  bool isFullCopy(1395,55219
  bool isExtractSubreg(1399,55333
  bool isCopyLike(1405,55539
  bool isIdentityCopy(1410,55670
  bool isTransient(1418,56074
  bool readsRegister(1445,57016
  bool readsVirtualRegister(1453,57349
  std::pair<std::pair1460,57659
  bool killsRegister(1466,57978
  bool definesRegister(1475,58391
  bool modifiesRegister(1483,58748
  bool registerDefIsDead(1491,59112
  MachineOperand *findRegisterUseOperand(findRegisterUseOperand1508,59963
  const MachineOperand *findRegisterUseOperand(findRegisterUseOperand1514,60237
  findRegisterDefOperand(1534,61249
  findRegisterDefOperand(1542,61575
  bool isRegTiedToUseOperand(1621,65269
  bool isRegTiedToDefOperand(1634,65771
  void setDebugLoc(1828,74764
  void untieRegOperand(1915,78382
  void setDebugValueUndef(1936,79131
  std::tuple<std::tuple1946,79369
  std::tuple<Register, Register> getFirst2Regs(1946,79369
  std::tuple<std::tuple1950,79502
  std::tuple<Register, Register, Register> getFirst3Regs(1950,79502
  std::tuple<std::tuple1955,79691
  std::tuple<Register, Register, Register, Register> getFirst4Regs(1955,79691
  std::tuple<std::tuple1960,79914
  getFirst5Regs(1961,79977
  std::tuple<std::tuple1967,80195
  std::tuple<std::tuple1968,80241
  std::tuple<std::tuple1969,80292
  std::tuple<std::tuple1970,80348
  std::tuple<std::tuple1972,80410
  std::tuple<std::tuple1973,80479
  std::tuple<std::tuple1975,80565
  std::tuple<std::tuple1977,80666
struct MachineInstrExpressionTrait 2020,82649
  static inline MachineInstr *getEmptyKey(getEmptyKey2021,82716
  static inline MachineInstr *getTombstoneKey(getTombstoneKey2025,82787
  static bool isEqual(2031,82954
inline raw_ostream& operator<<(2043,83385

/usr/include/llvm/CodeGen/MachineInstrBuilder.h,4461
#define LLVM_CODEGEN_MACHINEINSTRBUILDER_H20,854
  Define 45,1479
  Implicit 47,1557
  Kill 49,1609
  Dead 51,1648
  Undef 53,1707
  EarlyClobber 55,1770
  Debug 57,1840
  InternalRead 60,1946
  Renamable 62,2006
  DefineNoRead 63,2027
  ImplicitDefine 64,2060
  ImplicitKill 65,2098
class MachineInstrBuilder 70,2164
  MachineFunction *MF MF71,2192
  MachineInstr *MI MI72,2225
  MachineInstrBuilder(79,2443
  MachineInstrBuilder(80,2521
  operator MachineInstr*(operator MachineInstr*84,2701
  MachineInstr *operator->(operator->85,2749
  operator MachineBasicBlock::iterator(iterator86,2799
  MachineInstr *getInstr(getInstr90,2956
  Register getReg(95,3139
  const MachineInstrBuilder &addReg(addReg98,3261
  const MachineInstrBuilder &addDef(addDef117,4361
  const MachineInstrBuilder &addUse(addUse124,4694
  const MachineInstrBuilder &addImm(addImm132,5025
  const MachineInstrBuilder &addCImm(addCImm137,5162
  const MachineInstrBuilder &addFPImm(addFPImm142,5312
  const MachineInstrBuilder &addMBB(addMBB147,5463
  const MachineInstrBuilder &addFrameIndex(addFrameIndex153,5686
  addConstantPoolIndex(159,5855
  const MachineInstrBuilder &addTargetIndex(addTargetIndex165,6066
  const MachineInstrBuilder &addJumpTableIndex(addJumpTableIndex172,6387
  const MachineInstrBuilder &addGlobalAddress(addGlobalAddress178,6622
  const MachineInstrBuilder &addExternalSymbol(addExternalSymbol185,6936
  const MachineInstrBuilder &addBlockAddress(addBlockAddress191,7179
  const MachineInstrBuilder &addRegMask(addRegMask198,7491
  const MachineInstrBuilder &addMemOperand(addMemOperand203,7646
  setMemRefs(209,7807
  const MachineInstrBuilder &cloneMemRefs(cloneMemRefs214,7918
  cloneMergedMemRefs(220,8086
  const MachineInstrBuilder &add(add225,8222
  const MachineInstrBuilder &add(add230,8341
  const MachineInstrBuilder &addMetadata(addMetadata237,8515
  const MachineInstrBuilder &addCFIIndex(addCFIIndex248,9036
  const MachineInstrBuilder &addIntrinsicID(addIntrinsicID253,9194
  const MachineInstrBuilder &addPredicate(addPredicate258,9351
  const MachineInstrBuilder &addShuffleMask(addShuffleMask263,9513
  const MachineInstrBuilder &addSym(addSym268,9672
  const MachineInstrBuilder &setMIFlags(setMIFlags274,9896
  const MachineInstrBuilder &setMIFlag(setMIFlag279,10008
  const MachineInstrBuilder &setOperandDead(setOperandDead284,10128
  const MachineInstrBuilder &addDisp(addDisp290,10336
  const MachineInstrBuilder &setPCSections(setPCSections319,11711
  copyImplicitOps(327,11938
  bool constrainAllUses(332,12055
class MIMetadata 341,12442
  MIMetadata(344,12495
  MIMetadata(346,12604
  explicit MIMetadata(348,12711
  explicit MIMetadata(351,12858
  const DebugLoc &getDL(getDL354,12975
  MDNode *getPCSections(getPCSections355,13022
  DebugLoc DL;358,13087
  MDNode *PCSections PCSections359,13102
inline MachineInstrBuilder BuildMI(363,13215
inline MachineInstrBuilder BuildMI(371,13582
inline MachineInstrBuilder BuildMI(381,14115
inline MachineInstrBuilder BuildMI(399,14946
inline MachineInstrBuilder BuildMI(411,15475
inline MachineInstrBuilder BuildMI(422,16039
inline MachineInstrBuilder BuildMI(431,16479
inline MachineInstrBuilder BuildMI(441,16926
inline MachineInstrBuilder BuildMI(451,17379
inline MachineInstrBuilder BuildMI(461,17888
inline MachineInstrBuilder BuildMI(469,18282
inline MachineInstrBuilder BuildMI(478,18694
inline unsigned getDefRegState(531,21564
inline unsigned getImplRegState(534,21642
inline unsigned getKillRegState(537,21723
inline unsigned getDeadRegState(540,21800
inline unsigned getUndefRegState(543,21877
inline unsigned getInternalReadRegState(546,21956
inline unsigned getDebugRegState(549,22049
inline unsigned getRenamableRegState(552,22128
inline unsigned getRegState(557,22280
class MIBundleBuilder 573,23070
  MachineBasicBlock &MBB;MBB574,23094
  MachineBasicBlock::instr_iterator Begin;575,23120
  MachineBasicBlock::instr_iterator End;576,23163
  MIBundleBuilder(581,23341
  MIBundleBuilder(585,23551
  explicit MIBundleBuilder(599,24015
  MachineBasicBlock &getMBB(getMBB604,24219
  bool empty(608,24413
  MachineBasicBlock::instr_iterator begin(611,24519
  MachineBasicBlock::instr_iterator end(614,24650
  MIBundleBuilder &insert(insert618,24823
  MIBundleBuilder &prepend(prepend640,25542
  MIBundleBuilder &append(append646,25759

/usr/include/llvm/CodeGen/MachineJumpTableInfo.h,766
#define LLVM_CODEGEN_MACHINEJUMPTABLEINFO_H20,888
struct MachineJumpTableEntry 34,1159
  std::vector<MachineBasicBlock*> MBBs;36,1267
  explicit MachineJumpTableEntry(38,1308
class MachineJumpTableInfo 42,1402
  enum JTEntryKind 46,1546
    EK_BlockAddress,49,1664
    EK_GPRel64BlockAddress,54,1838
    EK_GPRel32BlockAddress,59,2019
    EK_LabelDifference32,68,2425
    EK_LabelDifference64,74,2684
    EK_Inline,78,2860
    EK_Custom3282,3013
  JTEntryKind EntryKind;86,3044
  std::vector<MachineJumpTableEntry> JumpTables;87,3069
  explicit MachineJumpTableInfo(89,3126
  JTEntryKind getEntryKind(91,3197
  bool isEmpty(104,3722
  const std::vector<MachineJumpTableEntry> &getJumpTables(getJumpTables106,3777
  void RemoveJumpTable(112,3984

/usr/include/llvm/CodeGen/MachineLoopInfo.h,1635
#define LLVM_CODEGEN_MACHINELOOPINFO_H30,1300
class MachineLoop 45,1694
  MachineBasicBlock *getTopBlock(getTopBlock50,1959
  MachineBasicBlock *getBottomBlock(getBottomBlock55,2185
  MachineBasicBlock *findLoopControlBlock(findLoopControlBlock61,2484
class MachineLoopInfo 98,3928
  LoopInfoBase<LoopInfoBase101,4039
  LoopInfoBase<MachineBasicBlock, MachineLoop> LI;101,4039
  static char ID;104,4099
  explicit MachineLoopInfo(107,4186
  LoopInfoBase<LoopInfoBase114,4416
  LoopInfoBase<MachineBasicBlock, MachineLoop>& getBase(114,4416
  using iterator 128,5224
  using iterator = LoopInfoBase<MachineBasicBlock, MachineLoop>::iterator;iterator128,5224
  inline iterator begin(129,5299
  inline iterator end(130,5354
  bool empty(131,5405
  inline MachineLoop *getLoopFor(getLoopFor135,5585
  inline unsigned getLoopDepth(145,5887
  inline bool isLoopHeader(150,6039
  void releaseMemory(158,6290
  inline MachineLoop *removeLoop(removeLoop164,6567
  inline void changeLoopFor(169,6807
  inline void changeTopLevelLoop(175,7002
  inline void addTopLevelLoop(180,7204
  void removeBlock(187,7466
template <> struct GraphTraits<GraphTraits193,7595
  using NodeRef 194,7648
  using ChildIteratorType 195,7687
  static NodeRef getEntryNode(197,7743
  static ChildIteratorType child_begin(198,7809
  static ChildIteratorType child_end(199,7882
template <> struct GraphTraits<GraphTraits202,7955
  using NodeRef 203,8002
  using ChildIteratorType 204,8035
  static NodeRef getEntryNode(206,8091
  static ChildIteratorType child_begin(207,8151
  static ChildIteratorType child_end(208,8224

/usr/include/llvm/CodeGen/MachineMemOperand.h,2524
#define LLVM_CODEGEN_MACHINEMEMOPERAND_H16,674
struct MachinePointerInfo 40,1441
  PointerUnion<const Value 42,1546
  PointerUnion<const Value *, const PseudoSourceValue *> V;42,1546
  int64_t Offset;45,1662
  uint8_t StackID;49,1708
  explicit MachinePointerInfo(51,1728
  explicit MachinePointerInfo(57,1953
  explicit MachinePointerInfo(63,2172
  explicit MachinePointerInfo(67,2348
  MachinePointerInfo getWithOffset(80,2772
  bool isDereferenceable(91,3226
class MachineMemOperand 128,4864
  enum Flags 131,4946
    MONone 133,4993
    MOLoad 135,5047
    MOStore 137,5108
    MOVolatile 139,5170
    MONonTemporal 141,5239
    MODereferenceable 143,5335
    MOInvariant 145,5436
    MOTargetFlag1 151,5753
    MOTargetFlag2 152,5782
    MOTargetFlag3 153,5811
    LLVM_MARK_AS_BITMASK_ENUM(155,5841
    LLVM_MARK_AS_BITMASK_ENUM(/* LargestFlag = */ MOTargetFlag3)155,5841
  struct MachineAtomicInfo 160,5973
    unsigned SSID 162,6062
    unsigned Ordering 165,6264
    unsigned FailureOrdering 168,6424
  MachinePointerInfo PtrInfo;171,6487
  LLT MemoryType;175,6665
  Flags FlagVals;177,6684
  Align BaseAlign;178,6702
  MachineAtomicInfo AtomicInfo;179,6721
  AAMDNodes AAInfo;180,6753
  const MDNode *Ranges;Ranges181,6773
  MachineMemOperand(189,7152
  MachineMemOperand(195,7559
  const MachinePointerInfo &getPointerInfo(getPointerInfo202,7965
  const Value *getValue(getValue211,8521
  const PseudoSourceValue *getPseudoValue(getPseudoValue215,8618
  const void *getOpaqueValue(getOpaqueValue219,8745
  Flags getFlags(222,8882
  void setFlags(225,8986
  int64_t getOffset(229,9179
  unsigned getAddrSpace(231,9235
  LLT getMemoryType(235,9436
  uint64_t getSize(238,9544
  uint64_t getSizeInBits(243,9711
  LLT getType(247,9828
  Align getAlign(253,9968
  AAMDNodes getAAInfo(260,10195
  const MDNode *getRanges(getRanges263,10298
  SyncScope::ID getSyncScopeID(266,10422
  AtomicOrdering getSuccessOrdering(273,10699
  AtomicOrdering getFailureOrdering(279,10921
  AtomicOrdering getMergedOrdering(286,11266
  bool isLoad(290,11396
  bool isStore(291,11448
  bool isVolatile(292,11502
  bool isNonTemporal(293,11562
  bool isDereferenceable(294,11628
  bool isInvariant(295,11702
  bool isAtomic(299,11884
  bool isUnordered(306,12167
  void setValue(320,12791
  void setValue(321,12850
  void setOffset(322,12921
  void setType(325,13027
  friend bool operator==(operator==336,13339
  friend bool operator!=(operator!=349,13901

/usr/include/llvm/CodeGen/MachineOperand.h,6287
#define LLVM_CODEGEN_MACHINEOPERAND_H14,562
class MachineOperand 48,1459
  enum MachineOperandType 50,1490
    MO_Register,51,1534
    MO_Immediate,52,1583
    MO_CImmediate,53,1632
    MO_FPImmediate,54,1688
    MO_MachineBasicBlock,55,1752
    MO_FrameIndex,56,1811
    MO_ConstantPoolIndex,57,1869
    MO_TargetIndex,58,1945
    MO_JumpTableIndex,59,2015
    MO_ExternalSymbol,60,2087
    MO_GlobalAddress,61,2149
    MO_BlockAddress,62,2206
    MO_RegisterMask,63,2262
    MO_RegisterLiveOut,64,2322
    MO_Metadata,65,2381
    MO_MCSymbol,66,2448
    MO_CFIIndex,67,2518
    MO_IntrinsicID,68,2573
    MO_Predicate,69,2626
    MO_ShuffleMask,70,2684
    MO_DbgInstrRef,71,2758
    MO_Last 72,2835
  unsigned OpKind 78,2969
  unsigned SubReg_TargetFlags 84,3181
  unsigned TiedTo 89,3415
  unsigned IsDef 94,3569
  unsigned IsImp 99,3725
  unsigned IsDeadOrKill 110,4292
  unsigned IsRenamable 113,4347
  unsigned IsUndef 132,5158
  unsigned IsInternalRead 143,5725
  unsigned IsEarlyClobber 148,5969
  unsigned IsDebug 152,6153
    unsigned RegNo;159,6399
    unsigned OffsetLo;160,6449
  } SmallContents;161,6522
  union ContentsUnion 168,6812
    ContentsUnion(169,6836
    MachineBasicBlock *MBB;MBB170,6859
    const ConstantFP *CFP;CFP171,6917
    const ConstantInt *CI;CI172,6969
    int64_t ImmVal;173,7038
    const uint32_t *RegMask;RegMask174,7088
    const MDNode *MD;MD175,7164
    MCSymbol *Sym;Sym176,7213
    unsigned CFIIndex;177,7262
    Intrinsic::ID IntrinsicID;178,7306
    unsigned Pred;179,7360
    ArrayRef<int> ShuffleMask;180,7409
      MachineOperand *Prev;Prev184,7565
      MachineOperand *Next;Next185,7633
    } Reg;186,7661
      unsigned InstrIdx;189,7709
      unsigned OpIdx;190,7734
    } InstrRef;191,7756
        int Index;197,7951
        const char *SymbolName;SymbolName198,8022
        const GlobalValue *GV;GV199,8082
        const BlockAddress *BA;BA200,8141
      } Val;201,8199
      int OffsetHi;203,8271
    } OffsetedInfo;204,8349
  } Contents;205,8369
  explicit MachineOperand(207,8384
  MachineOperandType getType(224,9202
  unsigned getTargetFlags(226,9279
  void setTargetFlags(229,9364
  void addTargetFlag(234,9569
  MachineInstr *getParent(getParent243,9854
  const MachineInstr *getParent(getParent244,9903
  void clearParent(254,10302
  bool isReg(329,14176
  bool isImm(331,14286
  bool isCImm(333,14398
  bool isFPImm(335,14515
  bool isMBB(337,14638
  bool isFI(339,14757
  bool isCPI(341,14876
  bool isTargetIndex(343,15005
  bool isJTI(345,15131
  bool isGlobal(347,15254
  bool isSymbol(349,15380
  bool isBlockAddress(351,15511
  bool isRegMask(353,15641
  bool isRegLiveOut(355,15772
  bool isMetadata(357,15900
  bool isMCSymbol(358,15960
  bool isDbgInstrRef(359,16020
  bool isCFIIndex(360,16086
  bool isIntrinsicID(361,16146
  bool isPredicate(362,16212
  bool isShuffleMask(363,16274
  Register getReg(369,16584
  unsigned getSubReg(374,16717
  bool isUse(379,16840
  bool isDef(384,16943
  bool isImplicit(389,17045
  bool isDead(394,17152
  bool isKill(399,17270
  bool isUndef(404,17389
  bool isInternalRead(440,19285
  bool isEarlyClobber(445,19405
  bool isTied(450,19525
  bool isDebug(455,19629
  bool readsReg(467,20173
  bool isValidExcessOperand(474,20470
  void setSubReg(490,20936
  void setIsUse(509,21773
  void setImplicit(514,21910
  void setIsKill(519,22025
  void setIsDead(525,22228
  void setIsUndef(530,22357
  void setIsInternalRead(537,22514
  void setIsEarlyClobber(542,22644
  void setIsDebug(547,22783
  int64_t getImm(556,23114
  const ConstantInt *getCImm(getCImm561,23230
  const ConstantFP *getFPImm(getFPImm566,23355
  MachineBasicBlock *getMBB(getMBB571,23482
  int getIndex(576,23606
  const GlobalValue *getGlobal(getGlobal582,23789
  const BlockAddress *getBlockAddress(getBlockAddress587,23935
  MCSymbol *getMCSymbol(getMCSymbol592,24094
  unsigned getInstrRefInstrIndex(597,24219
  unsigned getInstrRefOpIndex(602,24370
  unsigned getCFIIndex(607,24515
  Intrinsic::ID getIntrinsicID(612,24644
  unsigned getPredicate(617,24787
  ArrayRef<int> getShuffleMask(622,24914
  int64_t getOffset(629,25171
  const char *getSymbolName(getSymbolName637,25474
  static bool clobbersPhysReg(646,25870
  bool clobbersPhysReg(653,26187
  const uint32_t *getRegMask(getRegMask659,26387
  static unsigned getRegMaskSize(665,26581
  const uint32_t *getRegLiveOut(getRegLiveOut670,26735
  const MDNode *getMetadata(getMetadata675,26874
  void setImm(684,27206
  void setCImm(689,27328
  void setFPImm(694,27451
  void setOffset(699,27578
  void setIndex(707,27884
  void setMetadata(713,28067
  void setInstrRefInstrIndex(718,28193
  void setInstrRefOpIndex(722,28353
  void setMBB(727,28502
  void setRegMask(736,28920
  void setIntrinsicID(741,29067
  void setPredicate(746,29210
  static MachineOperand CreateImm(819,32680
  static MachineOperand CreateCImm(825,32822
  static MachineOperand CreateFPImm(831,32981
  static MachineOperand CreateReg(837,33144
  static MachineOperand CreateMBB(862,34205
  static MachineOperand CreateFI(869,34461
  static MachineOperand CreateCPI(874,34600
  static MachineOperand CreateTargetIndex(882,34886
  static MachineOperand CreateJTI(890,35186
  static MachineOperand CreateGA(896,35397
  static MachineOperand CreateES(904,35710
  static MachineOperand CreateBA(912,36037
  static MachineOperand CreateRegMask(932,36986
  static MachineOperand CreateRegLiveOut(938,37200
  static MachineOperand CreateMetadata(944,37429
  static MachineOperand CreateMCSymbol(950,37589
  static MachineOperand CreateDbgInstrRef(959,37866
  static MachineOperand CreateCFIIndex(966,38106
  static MachineOperand CreateIntrinsicID(972,38275
  static MachineOperand CreatePredicate(978,38446
  static MachineOperand CreateShuffleMask(984,38605
  bool isOnRegUseList(1013,39607
template <> struct DenseMapInfo<DenseMapInfo1019,39752
  static MachineOperand getEmptyKey(1020,39802
  static MachineOperand getTombstoneKey(1024,39957
  static unsigned getHashValue(1028,40120
  static bool isEqual(1031,40210
inline raw_ostream &operator<<(operator<<1041,40642

/usr/include/llvm/CodeGen/MachineOutliner.h,1587
#define LLVM_CODEGEN_MACHINEOUTLINER_H16,648
enum InstrType 33,1313
enum InstrType { Legal,33,1313
enum InstrType { Legal, LegalTerminator,33,1313
enum InstrType { Legal, LegalTerminator, Illegal,33,1313
enum InstrType { Legal, LegalTerminator, Illegal, Invisible 33,1313
struct Candidate 37,1476
  MachineBasicBlock::iterator FirstInst;46,1723
  MachineBasicBlock::iterator LastInst;49,1813
  LiveRegUnits FromEndOfBlockToStartOfSeq;63,2311
  LiveRegUnits InSeq;69,2537
  void initFromEndOfBlockToStartOfSeq(78,2813
  void initInSeq(95,3565
  unsigned getLength(120,4349
  unsigned getStartIdx(123,4443
  unsigned getEndIdx(126,4542
  void setCallInfo(130,4705
  unsigned getCallOverhead(136,4883
  MachineBasicBlock::iterator begin(138,4944
  MachineBasicBlock::iterator end(139,5004
  MachineInstr &front(front141,5073
  MachineInstr &back(back142,5120
  MachineFunction *getMF(getMF143,5165
  MachineBasicBlock *getMBB(getMBB144,5227
  bool isAvailableAcrossAndOutOfSeq(158,5554
  bool isAnyUnavailableAcrossOrOutOfSeq(167,5913
  bool isAvailableInsideSeq(184,6450
  Candidate(199,7002
  bool operator<(209,7525
struct OutlinedFunction 217,7721
  std::vector<Candidate> Candidates;220,7756
  MachineFunction *MF MF224,7916
  unsigned SequenceSize 228,8100
  unsigned FrameOverhead 231,8203
  unsigned FrameConstructionID 234,8310
  unsigned getOccurrenceCount(237,8415
  unsigned getOutliningCost(241,8563
  unsigned getNotOutlinedCost(249,8838
  unsigned getBenefit(255,9025
  unsigned getNumInstrs(263,9347
  OutlinedFunction(265,9418

/usr/include/llvm/CodeGen/MachinePassManager.h,1858
#define LLVM_CODEGEN_MACHINEPASSMANAGER_H24,1198
struct MachinePassInfoMixin 48,1843
  static MachinePassKey *ID(ID49,1906
class MachineFunctionAnalysisManager 57,2201
  using Base 59,2290
  MachineFunctionAnalysisManager(61,2340
  MachineFunctionAnalysisManager(62,2407
  template <typename PassT> typename PassT::Result &getResult(getResult72,2860
  typename PassT::Result *getCachedResult(getCachedResult82,3176
  template <typename PassT> typename PassT::Result &getResult(getResult89,3403
  template <typename PassT> typename PassT::Result *getCachedResult(getCachedResult98,3687
  using Base::getResult;105,3947
  using Base::getCachedResult;112,4148
  FunctionAnalysisManager *FAM;FAM115,4251
  ModuleAnalysisManager *MAM;MAM116,4283
class MachineFunctionPassManager148,5692
  using Base 150,5801
  MachineFunctionPassManager(153,5887
  template <typename PassT> void addPass(170,6737
  using has_init_t 182,7056
  addDoInitialization(188,7306
  std::enable_if_t<std::enable_if_t191,7380
  addDoInitialization(192,7438
  using has_fini_t 204,7878
  addDoFinalization(210,8126
  std::enable_if_t<std::enable_if_t213,8198
  addDoFinalization(214,8256
  using is_machine_module_pass_t 226,8690
  using is_machine_function_pass_t 231,8882
  addRunOnModule(237,9158
  std::enable_if_t<std::enable_if_t240,9227
  addRunOnModule(241,9299
  using FuncTy 257,9902
  SmallVector<SmallVector258,9970
  SmallVector<llvm::unique_function<FuncTy>, 4> InitializationFuncs;258,9970
  SmallVector<SmallVector259,10039
  SmallVector<llvm::unique_function<FuncTy>, 4> FinalizationFuncs;259,10039
  using PassIndex 261,10107
  std::map<std::map262,10156
  std::map<PassIndex, llvm::unique_function<FuncTy>> MachineModulePasses;262,10156
  bool RequireCodeGenSCCOrder;265,10266
  bool VerifyMachineFunction;267,10298

/usr/include/llvm/CodeGen/MachinePipeliner.h,5451
#define LLVM_CODEGEN_MACHINEPIPELINER_H41,1950
class MachinePipeliner 66,2643
  RegisterClassInfo RegClassInfo;74,2964
  static int NumTries;79,3078
  struct LoopInfo 83,3169
    SmallVector<SmallVector86,3265
    SmallVector<MachineOperand, 4> BrCond;86,3265
  LoopInfo LI;92,3493
  static char ID;94,3509
  MachinePipeliner(96,3528
class SwingSchedulerDAG 114,4151
  MachinePipeliner &Pass;Pass115,4204
  unsigned MII 117,4306
  unsigned MAX_II 119,4402
  bool Scheduled 121,4496
  MachineLoop &Loop;Loop122,4522
  LiveIntervals &LIS;LIS123,4543
  const RegisterClassInfo &RegClassInfo;RegClassInfo124,4565
  unsigned II_setByPragma 125,4606
  TargetInstrInfo::PipelinerLoopInfo *LoopPipelinerInfo LoopPipelinerInfo126,4637
  ScheduleDAGTopologicalSort Topo;130,4826
  struct NodeInfo 132,4862
  std::vector<NodeInfo> ScheduleInfo;141,5065
  enum OrderKind 143,5104
  enum OrderKind { BottomUp 143,5104
  enum OrderKind { BottomUp = 0, TopDown 143,5104
  SetVector<SUnit *> NodeOrder;145,5197
  using NodeSetType 147,5230
  using ValueMapTy 148,5277
  using MBBVectorTy 149,5328
  using InstrMapTy 150,5388
  DenseMap<DenseMap153,5515
  DenseMap<SUnit *, std::pair<unsigned, int64_t>> InstrChanges;153,5515
  DenseMap<DenseMap157,5694
  DenseMap<MachineInstr*, MachineInstr *> NewMIs;157,5694
  std::vector<std::unique_ptr<ScheduleDAGMutation>> Mutations;160,5793
  class Circuits 163,5926
    std::vector<SUnit> &SUnits;SUnits164,5945
    SetVector<SUnit *> Stack;165,5977
    BitVector Blocked;166,6007
    SmallVector<SmallVector167,6030
    SmallVector<SmallPtrSet<SUnit *, 4>, 10> B;167,6030
    SmallVector<SmallVector168,6078
    SmallVector<SmallVector<int, 4>, 16> AdjK;168,6078
    std::vector<int> *Node2Idx;Node2Idx170,6178
    static unsigned MaxPaths;172,6238
    Circuits(175,6279
    ~Circuits(184,6691
    void reset(187,6794
  struct CopyToPhiMutation 199,7113
  SwingSchedulerDAG(204,7234
  bool hasNewSchedule(219,7883
  int getASAP(222,7994
  int getALAP(225,8128
  int getMOV(229,8304
  unsigned getDepth(232,8427
  int getZeroLatencyDepth(236,8616
  unsigned getHeight(241,8774
  int getZeroLatencyHeight(245,8965
  bool isBackedge(252,9290
  unsigned getDistance(262,9693
  unsigned getInstrBaseReg(276,10208
  void addMutation(284,10442
  static bool classof(288,10561
class NodeSet 323,12125
  SetVector<SUnit *> Nodes;324,12141
  bool HasRecurrence 325,12169
  unsigned RecMII 326,12199
  int MaxMOV 327,12222
  unsigned MaxDepth 328,12240
  unsigned Colocate 329,12265
  SUnit *ExceedPressure ExceedPressure330,12290
  unsigned Latency 331,12325
  using iterator 334,12358
  NodeSet(337,12437
  bool insert(357,13137
  void insert(359,13192
  template <typename UnaryPredicate> bool remove_if(361,13255
  unsigned count(365,13363
  bool hasRecurrence(367,13426
  unsigned size(369,13477
  bool empty(371,13527
  SUnit *getNode(getNode373,13575
  void setRecMII(375,13633
  void setColocate(377,13684
  void setExceedPressure(379,13735
  bool isExceedSU(381,13797
  int compareRecMII(383,13860
  int getRecMII(385,13927
  void computeNodeSetInfo(388,14021
  unsigned getLatency(395,14220
  unsigned getMaxDepth(397,14265
  void clear(399,14312
  operator SetVector<SUnit operator SetVector<SUnit409,14478
  bool operator>(415,14787
  bool operator==(operator==426,15127
  bool operator!=(operator!=431,15274
  iterator begin(433,15348
  iterator end(434,15393
static const int DefaultProcResSize 444,15716
class ResourceManager 446,15759
  const MCSubtargetInfo *STI;STI448,15792
  const MCSchedModel &SM;SM449,15822
  const TargetSubtargetInfo *ST;ST450,15848
  const TargetInstrInfo *TII;TII451,15881
  SwingSchedulerDAG *DAG;DAG452,15911
  const bool UseDFA;453,15937
  llvm::SmallVector<std::unique_ptr<DFAPacketizer>> DFAResources;455,15992
  llvm::SmallVector<llvm::SmallVector458,16205
  llvm::SmallVector<llvm::SmallVector<uint64_t, DefaultProcResSize>> MRT;458,16205
  llvm::SmallVector<int> NumScheduledMops;462,16476
  llvm::SmallVector<llvm::SmallVector467,16800
  llvm::SmallVector<uint64_t, DefaultProcResSize> ProcResourceMasks;467,16800
  int InitiationInterval 468,16869
  int IssueWidth;470,16970
  int positiveModulo(483,17451
  ResourceManager(496,17725
class SMSchedule 534,19314
  DenseMap<DenseMap537,19390
  DenseMap<int, std::deque<SUnit *>> ScheduledInstrs;537,19390
  std::map<std::map540,19492
  std::map<SUnit *, int> InstrToCycle;540,19492
  int FirstCycle 544,19659
  int LastCycle 547,19740
  int InitiationInterval 550,19815
  const TargetSubtargetInfo &ST;ST553,19880
  MachineRegisterInfo &MRI;MRI556,19950
  ResourceManager ProcItinResources;558,19979
  SMSchedule(561,20025
  void reset(565,20178
  void setInitiationInterval(574,20375
  int getInitiationInterval(580,20536
  int getFirstCycle(584,20697
  int getFinalCycle(587,20804
  using sched_iterator 602,21419
  using sched_iterator = DenseMap<int, std::deque<SUnit *>>::iterator;iterator602,21419
  using const_sched_iterator 603,21490
      DenseMap<int, std::deque<SUnit *>>::const_iterator;const_iterator604,21521
  bool isScheduledAtStage(607,21654
  int stageScheduled(613,21879
  unsigned cycleScheduled(622,22213
  unsigned getMaxStageCount(629,22534
  std::deque<SUnit *> &getInstructions(getInstructions634,22702
  SmallSet<SmallSet638,22794

/usr/include/llvm/CodeGen/MachineRegisterInfo.h,12239
#define LLVM_CODEGEN_MACHINEREGISTERINFO_H14,552
class MachineRegisterInfo 51,1708
  class Delegate 53,1744
    virtual void anchor(54,1763
    virtual void MRI_NoteCloneVirtualRegister(60,1900
  MachineFunction *MF;MF67,2091
  SmallPtrSet<Delegate Delegate68,2114
  SmallPtrSet<Delegate *, 1> TheDelegates;68,2114
  const bool TracksSubRegLiveness;71,2205
  IndexedMap<std::pair<std::pair77,2441
      VRegInfo;79,2537
  IndexedMap<IndexedMap83,2650
  IndexedMap<std::string, VirtReg2IndexFunctor> VReg2Name;83,2650
  StringSet<> VRegNames;86,2761
  SmallVector<SmallVector95,3097
  SmallVector<MCPhysReg, 16> UpdatedCSRs;95,3097
  IndexedMap<IndexedMap104,3617
      RegAllocHints;106,3712
  std::unique_ptr<MachineOperand *[]> PhysRegUseDefLists;110,3840
  MachineOperand *&getRegUseDefListHead(getRegUseDefListHead114,4036
  MachineOperand *getRegUseDefListHead(getRegUseDefListHead120,4211
  static MachineOperand *getNextOperandForReg(getNextOperandForReg127,4440
  BitVector UsedPhysRegMask;134,4769
  BitVector ReservedRegs;140,5043
  VRegToTypeMap VRegToType;144,5194
  std::vector<std::vector150,5476
  std::vector<std::pair<MCRegister, Register>> LiveIns;150,5476
  const TargetRegisterInfo *getTargetRegisterInfo(getTargetRegisterInfo157,5728
  void resetDelegate(161,5842
  void addDelegate(169,6137
  void noteNewVirtualRegister(177,6380
  void noteCloneVirtualRegister(182,6526
  bool isSSA(198,7266
  void leaveSSA(204,7469
  bool tracksLiveness(210,7721
  void invalidateLiveness(220,8066
  bool shouldTrackSubRegLiveness(227,8300
  bool shouldTrackSubRegLiveness(230,8437
  bool subRegLivenessEnabled(235,8679
  bool isUpdatedCSRsInitialized(244,9018
  template<bool Uses,288,10841
  template<bool Uses, bool Defs,288,10841
  template<bool Uses, bool Defs, bool SkipDebug,288,10841
           bool ByOperand,289,10890
           bool ByOperand, bool ByInstr,289,10890
  template<bool Uses,291,10976
  template<bool Uses, bool Defs,291,10976
  template<bool Uses, bool Defs, bool SkipDebug,291,10976
           bool ByOperand,292,11025
           bool ByOperand, bool ByInstr,292,11025
  template<bool,bool296,11181
  template<bool, bool,296,11181
  template<bool, bool, bool,296,11181
  template<bool, bool, bool, bool,296,11181
  template<bool, bool, bool, bool, bool,296,11181
  template<bool,bool298,11267
  template<bool, bool,298,11267
  template<bool, bool, bool,298,11267
  template<bool, bool, bool, bool,298,11267
  template<bool, bool, bool, bool, bool,298,11267
      defusechain_iterator<true, true,304,11478
      defusechain_iterator<true, true, false,304,11478
      defusechain_iterator<true, true, false, true,304,11478
      defusechain_iterator<true, true, false, true, false,304,11478
  reg_iterator reg_begin(305,11545
  static reg_iterator reg_end(308,11652
  inline iterator_range<reg_iterator> reg_operands(310,11719
      defusechain_instr_iterator<true, true,317,12015
      defusechain_instr_iterator<true, true, false,317,12015
      defusechain_instr_iterator<true, true, false, false,317,12015
      defusechain_instr_iterator<true, true, false, false, true,317,12015
  reg_instr_iterator reg_instr_begin(318,12088
  static reg_instr_iterator reg_instr_end(321,12213
  reg_instructions(326,12348
      defusechain_instr_iterator<true, true,333,12622
      defusechain_instr_iterator<true, true, false,333,12622
      defusechain_instr_iterator<true, true, false, false,333,12622
      defusechain_instr_iterator<true, true, false, false, false,333,12622
  reg_bundle_iterator reg_bundle_begin(334,12695
  static reg_bundle_iterator reg_bundle_end(337,12823
  inline iterator_range<reg_bundle_iterator> reg_bundles(341,12917
  bool reg_empty(347,13192
      defusechain_iterator<true, true,352,13448
      defusechain_iterator<true, true, true,352,13448
      defusechain_iterator<true, true, true, true,352,13448
      defusechain_iterator<true, true, true, true, false,352,13448
  reg_nodbg_iterator reg_nodbg_begin(353,13514
  static reg_nodbg_iterator reg_nodbg_end(356,13639
  reg_nodbg_operands(361,13774
      defusechain_instr_iterator<true, true,369,14114
      defusechain_instr_iterator<true, true, true,369,14114
      defusechain_instr_iterator<true, true, true, false,369,14114
      defusechain_instr_iterator<true, true, true, false, true,369,14114
  reg_instr_nodbg_iterator reg_instr_nodbg_begin(370,14186
  static reg_instr_nodbg_iterator reg_instr_nodbg_end(373,14329
  reg_nodbg_instructions(378,14488
      defusechain_instr_iterator<true, true,386,14842
      defusechain_instr_iterator<true, true, true,386,14842
      defusechain_instr_iterator<true, true, true, false,386,14842
      defusechain_instr_iterator<true, true, true, false, false,386,14842
  reg_bundle_nodbg_iterator reg_bundle_nodbg_begin(387,14914
  static reg_bundle_nodbg_iterator reg_bundle_nodbg_end(390,15060
  reg_nodbg_bundles(395,15223
  bool reg_nodbg_empty(401,15459
      defusechain_iterator<false, true,407,15668
      defusechain_iterator<false, true, false,407,15668
      defusechain_iterator<false, true, false, true,407,15668
      defusechain_iterator<false, true, false, true, false,407,15668
  def_iterator def_begin(408,15736
  static def_iterator def_end(411,15843
  inline iterator_range<def_iterator> def_operands(413,15910
      defusechain_instr_iterator<false, true,420,16196
      defusechain_instr_iterator<false, true, false,420,16196
      defusechain_instr_iterator<false, true, false, false,420,16196
      defusechain_instr_iterator<false, true, false, false, true,420,16196
  def_instr_iterator def_instr_begin(421,16270
  static def_instr_iterator def_instr_end(424,16395
  def_instructions(429,16530
      defusechain_instr_iterator<false, true,436,16795
      defusechain_instr_iterator<false, true, false,436,16795
      defusechain_instr_iterator<false, true, false, false,436,16795
      defusechain_instr_iterator<false, true, false, false, false,436,16795
  def_bundle_iterator def_bundle_begin(437,16869
  static def_bundle_iterator def_bundle_end(440,16997
  inline iterator_range<def_bundle_iterator> def_bundles(444,17091
  bool def_empty(450,17357
  StringRef getVRegName(452,17439
  void insertVRegByName(456,17559
  bool hasOneDef(468,17933
  MachineOperand *getOneDef(getOneDef474,18154
      defusechain_iterator<true, false,487,18528
      defusechain_iterator<true, false, false,487,18528
      defusechain_iterator<true, false, false, true,487,18528
      defusechain_iterator<true, false, false, true, false,487,18528
  use_iterator use_begin(488,18596
  static use_iterator use_end(491,18703
  inline iterator_range<use_iterator> use_operands(493,18770
      defusechain_instr_iterator<true, false,500,19057
      defusechain_instr_iterator<true, false, false,500,19057
      defusechain_instr_iterator<true, false, false, false,500,19057
      defusechain_instr_iterator<true, false, false, false, true,500,19057
  use_instr_iterator use_instr_begin(501,19131
  static use_instr_iterator use_instr_end(504,19256
  use_instructions(509,19391
      defusechain_instr_iterator<true, false,516,19656
      defusechain_instr_iterator<true, false, false,516,19656
      defusechain_instr_iterator<true, false, false, false,516,19656
      defusechain_instr_iterator<true, false, false, false, false,516,19656
  use_bundle_iterator use_bundle_begin(517,19730
  static use_bundle_iterator use_bundle_end(520,19858
  inline iterator_range<use_bundle_iterator> use_bundles(524,19952
  bool use_empty(530,20195
  bool hasOneUse(534,20379
      defusechain_iterator<true, false,541,20640
      defusechain_iterator<true, false, true,541,20640
      defusechain_iterator<true, false, true, true,541,20640
      defusechain_iterator<true, false, true, true, false,541,20640
  use_nodbg_iterator use_nodbg_begin(542,20707
  static use_nodbg_iterator use_nodbg_end(545,20832
  use_nodbg_operands(550,20967
      defusechain_instr_iterator<true, false,558,21298
      defusechain_instr_iterator<true, false, true,558,21298
      defusechain_instr_iterator<true, false, true, false,558,21298
      defusechain_instr_iterator<true, false, true, false, true,558,21298
  use_instr_nodbg_iterator use_instr_nodbg_begin(559,21371
  static use_instr_nodbg_iterator use_instr_nodbg_end(562,21514
  use_nodbg_instructions(567,21673
      defusechain_instr_iterator<true, false,575,22018
      defusechain_instr_iterator<true, false, true,575,22018
      defusechain_instr_iterator<true, false, true, false,575,22018
      defusechain_instr_iterator<true, false, true, false, false,575,22018
  use_bundle_nodbg_iterator use_bundle_nodbg_begin(576,22091
  static use_bundle_nodbg_iterator use_bundle_nodbg_end(579,22237
  use_nodbg_bundles(584,22400
  bool use_nodbg_empty(590,22634
  const TargetRegisterClass *getRegClass(getRegClass663,25944
  const TargetRegisterClass *getRegClassOrNull(getRegClassOrNull680,26767
  const RegisterBank *getRegBankOrNull(getRegBankOrNull689,27231
  const RegClassOrRegBank &getRegClassOrRegBank(getRegClassOrRegBank697,27595
  void setRegClassOrRegBank(707,27963
  LLT getType(761,30885
  unsigned getNumVirtRegs(786,31927
  void setRegAllocationHint(794,32295
  void addRegAllocationHint(803,32634
  void setSimpleHint(810,32899
  void clearSimpleHint(814,33013
  std::pair<std::pair823,33378
  std::pair<unsigned, Register> getRegAllocationHint(823,33378
  Register getSimpleHint(832,33796
  const std::pair<std::pair840,34110
  getRegAllocationHints(841,34166
  void updateDbgUsersToReg(853,34644
  void addPhysRegsUsedFromRegMask(895,36676
  const BitVector &getUsedPhysRegsMask(getUsedPhysRegsMask899,36789
  void reserveReg(920,37863
  bool reservedRegsFrozen(931,38278
  bool canReserveReg(938,38516
  const BitVector &getReservedRegs(getReservedRegs945,38819
  bool isReserved(956,39245
  bool isAllocatable(974,40019
  void addLiveIn(985,40504
      std::vector<std::pair<MCRegister,Register>>::const_iterator;const_iterator992,40745
  livein_iterator livein_begin(993,40812
  livein_iterator livein_end(994,40879
  bool            livein_empty(995,40944
  ArrayRef<ArrayRef997,41012
  ArrayRef<std::pair<MCRegister, Register>> liveins(997,41012
  template <bool ReturnUses,1027,42342
  template <bool ReturnUses, bool ReturnDefs,1027,42342
  template <bool ReturnUses, bool ReturnDefs, bool SkipDebug,1027,42342
  template <bool ReturnUses, bool ReturnDefs, bool SkipDebug, bool ByOperand,1027,42342
            bool ByInstr,1028,42420
  class defusechain_iterator 1029,42461
    explicit defusechain_iterator(1042,42798
    void advance(1053,43154
    bool operator==(operator==1076,43809
    bool operator!=(operator!=1079,43899
    bool atEnd(1084,44075
    defusechain_iterator &operator++(operator++1087,44175
    defusechain_iterator operator++(1106,44765
    unsigned getOperandNo(1112,44996
    MachineOperand &operator*(operator*1118,45198
    MachineOperand *operator->(operator->1123,45319
  template <bool ReturnUses,1135,45847
  template <bool ReturnUses, bool ReturnDefs,1135,45847
  template <bool ReturnUses, bool ReturnDefs, bool SkipDebug,1135,45847
  template <bool ReturnUses, bool ReturnDefs, bool SkipDebug, bool ByOperand,1135,45847
            bool ByInstr,1136,45925
  class defusechain_instr_iterator 1137,45966
    explicit defusechain_instr_iterator(1150,46307
    void advance(1161,46669
    bool operator==(operator==1184,47330
    bool operator!=(operator!=1187,47426
    bool atEnd(1192,47608
    defusechain_instr_iterator &operator++(operator++1195,47708
    defusechain_instr_iterator operator++(1214,48304
    MachineInstr &operator*(operator*1219,48503
    MachineInstr *operator->(operator->1226,48719
class PSetIterator 1233,48958
  const int *PSet PSet1234,48979
  unsigned Weight 1235,49008
  PSetIterator(1240,49069
  bool isValid(1254,49563
  unsigned getWeight(1256,49604
  unsigned operator*(1258,49653
  void operator++(1260,49701
MachineRegisterInfo::getPressureSets(getPressureSets1269,49856

/usr/include/llvm/CodeGen/MachineSSAContext.h,367
#define LLVM_CODEGEN_MACHINESSACONTEXT_H16,613
inline unsigned pred_size(30,938
inline auto instrs(33,1023
template <> struct GenericSSATraits<GenericSSATraits35,1096
  using BlockT 36,1151
  using FunctionT 37,1187
  using InstructionT 38,1224
  using ValueRefT 39,1261
  using ConstValueRefT 40,1291
  using UseT 41,1326
using MachineSSAContext 44,1361

/usr/include/llvm/CodeGen/MachineScheduler.h,9423
#define LLVM_CODEGEN_MACHINESCHEDULER_H75,3104
struct MachineSchedContext 128,4577
  RegisterClassInfo *RegClassInfo;RegClassInfo136,4832
class MachineSchedRegistry146,5169
  using ScheduleDAGCtor 150,5301
  using FunctionPassCtor 153,5444
  static MachinePassRegistry<ScheduleDAGCtor> Registry;155,5489
  MachineSchedRegistry(157,5546
  ~MachineSchedRegistry(162,5690
  MachineSchedRegistry *getNext(getNext166,5765
  static MachineSchedRegistry *getList(getList170,5883
  static void setListener(174,5986
struct MachineSchedPolicy 184,6307
  bool ShouldTrackPressure 186,6399
  bool ShouldTrackLaneMasks 189,6584
  bool OnlyTopDown 193,6768
  bool OnlyBottomUp 194,6796
  bool DisableLatencyHeuristic 198,6915
  bool ComputeDFSResult 201,7013
class MachineSchedStrategy 211,7286
  virtual void initPolicy(218,7455
  virtual void dumpPolicy(222,7631
  virtual bool shouldTrackPressure(226,7799
  virtual bool shouldTrackLaneMasks(231,8079
  virtual bool doMBBSchedRegionsTopDown(236,8329
  virtual void enterMBB(242,8578
  virtual void leaveMBB(245,8681
  virtual void registerRoots(249,8831
  virtual void scheduleTree(257,9176
class ScheduleDAGMI 276,10009
  AAResults *AA;AA278,10069
  LiveIntervals *LIS;LIS279,10086
  std::unique_ptr<MachineSchedStrategy> SchedImpl;280,10108
  std::vector<std::unique_ptr<ScheduleDAGMutation>> Mutations;283,10208
  MachineBasicBlock::iterator CurrentTop;286,10311
  MachineBasicBlock::iterator CurrentBottom;289,10396
  const SUnit *NextClusterPred NextClusterPred292,10493
  const SUnit *NextClusterSucc NextClusterSucc293,10535
  unsigned NumInstrsScheduled 298,10744
  ScheduleDAGMI(302,10795
  bool doMBBSchedRegionsTopDown(313,11283
  LiveIntervals *getLIS(getLIS318,11459
  virtual bool hasVRegLiveness(321,11578
  void addMutation(328,11895
  MachineBasicBlock::iterator top(333,12034
  MachineBasicBlock::iterator bottom(334,12099
  const SUnit *getNextClusterPred(getNextClusterPred355,12982
  const SUnit *getNextClusterSucc(getNextClusterSucc357,13053
class ScheduleDAGMILive 398,14542
  RegisterClassInfo *RegClassInfo;RegClassInfo400,14602
  SchedDFSResult *DFSResult DFSResult404,14739
  BitVector ScheduledTrees;405,14778
  MachineBasicBlock::iterator LiveRegionEnd;407,14807
  VReg2SUnitMultiMap VRegUses;410,14932
  PressureDiffs SUPressureDiffs;415,15164
  bool ShouldTrackPressure 418,15266
  bool ShouldTrackLaneMasks 419,15302
  IntervalPressure RegPressure;420,15339
  RegPressureTracker RPTracker;421,15371
  std::vector<PressureChange> RegionCriticalPSets;426,15624
  IntervalPressure TopPressure;429,15715
  RegPressureTracker TopRPTracker;430,15747
  IntervalPressure BotPressure;433,15825
  RegPressureTracker BotRPTracker;434,15857
  ScheduleDAGMILive(437,15901
  bool hasVRegLiveness(446,16305
  bool isTrackingPressure(449,16423
  const IntervalPressure &getTopPressure(getTopPressure452,16562
  const RegPressureTracker &getTopRPTracker(getTopRPTracker453,16635
  const IntervalPressure &getBotPressure(getBotPressure456,16788
  const RegPressureTracker &getBotRPTracker(getBotRPTracker457,16861
  const IntervalPressure &getRegPressure(getRegPressure460,17019
  const std::vector<PressureChange> &getRegionCriticalPSets(getRegionCriticalPSets462,17093
  PressureDiff &getPressureDiff(getPressureDiff466,17200
  const PressureDiff &getPressureDiff(getPressureDiff469,17296
  const SchedDFSResult *getDFSResult(getDFSResult478,17609
  BitVector &getScheduledTrees(getScheduledTrees480,17677
class ReadyQueue 540,20061
  unsigned ID;541,20080
  std::string Name;542,20095
  std::vector<SUnit*> Queue;543,20115
  ReadyQueue(546,20153
  unsigned getID(548,20228
  StringRef getName(550,20269
  bool isInQueue(553,20386
  bool empty(555,20456
  void clear(557,20504
  unsigned size(559,20539
  using iterator 561,20589
  iterator begin(563,20640
  iterator end(565,20686
  ArrayRef<SUnit*> elements(567,20728
  iterator find(569,20777
  void push(571,20839
  iterator remove(576,20921
struct SchedRemainder 588,21166
  unsigned CriticalPath;590,21246
  unsigned CyclicCritPath;591,21271
  unsigned RemIssueCount;594,21348
  bool IsAcyclicLatencyLimited;596,21375
  SmallVector<SmallVector599,21435
  SmallVector<unsigned, 16> RemainingCounts;599,21435
  SchedRemainder(601,21481
  void reset(603,21514
class ResourceSegments 627,22214
  typedef std::pair<int64_t,int64_t631,22359
  typedef std::pair<int64_t, int64_t> IntervalTy;631,22359
  static IntervalTy getResourceIntervalBottom(717,25776
  static IntervalTy getResourceIntervalTop(722,26087
  unsigned getFirstAvailableAtFromBottom(784,28997
  unsigned getFirstAvailableAtFromTop(790,29335
  std::list<IntervalTy> _Intervals;798,29671
  explicit ResourceSegments(808,30015
  bool empty(809,30048
  explicit ResourceSegments(810,30100
  friend bool operator==(operator==815,30218
  friend llvm::raw_ostream &operator<<(operator<<819,30373
class SchedBoundary 832,30870
    TopQID 836,30972
    BotQID 837,30988
    LogMaxQID 838,31004
  ScheduleDAGMI *DAG DAG841,31028
  const TargetSchedModel *SchedModel SchedModel842,31060
  SchedRemainder *Rem Rem843,31108
  ReadyQueue Available;845,31142
  ReadyQueue Pending;846,31166
  ScheduleHazardRecognizer *HazardRec HazardRec848,31189
  bool CheckPending;853,31347
  unsigned CurrCycle;858,31542
  unsigned CurrMOps;861,31609
  unsigned MinReadyCycle;864,31697
  unsigned ExpectedLatency;867,31795
  unsigned DependentLatency;872,31994
  unsigned RetiredMOps;876,32170
  SmallVector<SmallVector883,32554
  SmallVector<unsigned, 16> ExecutedResCounts;883,32554
  unsigned MaxExecutedResCount;886,32651
  unsigned ZoneCritResIdx;889,32745
  bool IsResourceLimited;892,32840
  std::map<std::map898,32973
  std::map<unsigned, ResourceSegments> ReservedResourceSegments;898,32973
  std::vector<unsigned> ReservedCycles;899,33038
  SmallVector<SmallVector929,34224
  SmallVector<unsigned, 16> ReservedCyclesIndex;929,34224
  SmallVector<SmallVector932,34340
  SmallVector<APInt, 16> ResourceGroupSubUnitMasks;932,34340
  unsigned MaxObservedStall;937,34572
  SchedBoundary(943,34710
  bool isTop(956,35100
  unsigned getCurrCycle(961,35241
  unsigned getCurrMOps(964,35340
  unsigned getDependentLatency(967,35455
  unsigned getScheduledLatency(972,35733
  unsigned getUnscheduledLatency(976,35828
  unsigned getResourceCount(980,35940
  unsigned getCriticalCount(986,36137
  unsigned getExecutedCount(995,36477
  unsigned getZoneCritResIdx(1000,36626
  bool isResourceLimited(1003,36758
  std::pair<std::pair1013,37161
  bool isUnbufferedGroup(1018,37468
class GenericSchedulerBase 1067,39290
  enum CandReason 1071,39505
    NoCand,1072,39535
    NoCand, Only1,1072,39535
    NoCand, Only1, PhysReg,1072,39535
    NoCand, Only1, PhysReg, RegExcess,1072,39535
    NoCand, Only1, PhysReg, RegExcess, RegCritical,1072,39535
    NoCand, Only1, PhysReg, RegExcess, RegCritical, Stall,1072,39535
    NoCand, Only1, PhysReg, RegExcess, RegCritical, Stall, Cluster,1072,39535
    NoCand, Only1, PhysReg, RegExcess, RegCritical, Stall, Cluster, Weak,1072,39535
    RegMax,1073,39609
    RegMax, ResourceReduce,1073,39609
    RegMax, ResourceReduce, ResourceDemand,1073,39609
    RegMax, ResourceReduce, ResourceDemand, BotHeightReduce,1073,39609
    RegMax, ResourceReduce, ResourceDemand, BotHeightReduce, BotPathReduce,1073,39609
    TopDepthReduce,1074,39685
    TopDepthReduce, TopPathReduce,1074,39685
    TopDepthReduce, TopPathReduce, NextDefUse,1074,39685
    TopDepthReduce, TopPathReduce, NextDefUse, NodeOrder}NodeOrder1074,39685
  struct CandPolicy 1081,39918
    bool operator==(operator==1088,40064
    bool operator!=(operator!=1093,40268
  struct SchedResourceDelta 1099,40425
    bool operator==(operator==1108,40702
    bool operator!=(operator!=1112,40870
  struct SchedCandidate 1119,41096
    CandPolicy Policy;1120,41122
    SUnit *SU;SU1123,41179
    CandReason Reason;1126,41233
    bool AtTop;1129,41322
    RegPressureDelta RPDelta;1132,41395
    SchedResourceDelta ResDelta;1135,41486
    SchedCandidate(1137,41520
    SchedCandidate(1138,41566
    void reset(1140,41631
    bool isValid(1149,41849
    void setBest(1152,41959
  const MachineSchedContext *Context;Context1166,42349
  const TargetSchedModel *SchedModel SchedModel1167,42387
  const TargetRegisterInfo *TRI TRI1168,42435
  SchedRemainder Rem;1170,42479
  GenericSchedulerBase(1172,42502
class GenericScheduler 1210,44152
  GenericScheduler(1212,44215
  bool shouldTrackPressure(1222,44569
  bool shouldTrackLaneMasks(1226,44665
  void releaseTopNode(1236,44913
  void releaseBottomNode(1244,45079
  ScheduleDAGMILive *DAG DAG1255,45293
  MachineSchedPolicy RegionPolicy;1257,45330
  SchedBoundary Top;1260,45433
  SchedBoundary Bot;1261,45454
  SchedCandidate TopCand;1264,45523
  SchedCandidate BotCand;1266,45596
class PostGenericScheduler 1292,46485
  ScheduleDAGMI *DAG DAG1294,46555
  SchedBoundary Top;1295,46587
  SmallVector<SmallVector1296,46608
  SmallVector<SUnit*, 8> BotRoots;1296,46608
  PostGenericScheduler(1299,46652
  void initPolicy(1304,46821
  bool shouldTrackPressure(1311,47067
  void scheduleTree(1319,47259
  void releaseTopNode(1325,47447
  void releaseBottomNode(1332,47614

/usr/include/llvm/CodeGen/MachineStableHash.h,48
#define LLVM_CODEGEN_MACHINESTABLEHASH_H15,608

/usr/include/llvm/CodeGen/MachineTraceMetrics.h,2398
#define LLVM_CODEGEN_MACHINETRACEMETRICS_H47,2526
struct LiveRegUnit 74,3364
  unsigned RegUnit;75,3385
  unsigned getSparseSetIndex(80,3483
  LiveRegUnit(82,3541
enum class MachineTraceStrategy 86,3626
  TS_MinInstrCount,88,3733
  TS_Local,92,3967
  TS_NumStrategies93,3979
class MachineTraceMetrics 96,4002
  const MachineFunction *MF MF97,4059
  const TargetInstrInfo *TII TII98,4098
  const TargetRegisterInfo *TRI TRI99,4138
  const MachineRegisterInfo *MRI MRI100,4181
  const MachineLoopInfo *Loops Loops101,4225
  TargetSchedModel SchedModel;102,4267
  static char ID;110,4374
  struct FixedBlockInfo 121,4697
    bool hasResources(132,5081
    void invalidate(135,5183
  struct LiveInReg 150,5837
    Register Reg;152,5917
    unsigned Height;156,6074
    LiveInReg(158,6096
  struct TraceBlockInfo 164,6369
    unsigned Head;174,6770
    unsigned Tail;177,6866
    bool hasValidDepth(191,7334
    bool hasValidHeight(195,7501
    void invalidateDepth(198,7644
    void invalidateHeight(201,7800
    bool isUsefulDominator(209,8214
    unsigned CriticalPath;237,9579
    SmallVector<SmallVector243,9854
    SmallVector<LiveInReg, 4> LiveIns;243,9854
  struct InstrCycles 250,10028
    unsigned Depth;254,10248
    unsigned Height;258,10425
  class Trace 264,10655
    Ensemble &TE;TE265,10671
    TraceBlockInfo &TBI;TBI266,10689
    unsigned getBlockNum(268,10715
    explicit Trace(271,10795
    unsigned getInstrCount(276,10972
    unsigned getCriticalPath(302,12385
    InstrCycles getInstrCycles(307,12666
  class Ensemble 330,13722
    SmallVector<SmallVector333,13766
    SmallVector<TraceBlockInfo, 4> BlockInfo;333,13766
    DenseMap<DenseMap334,13812
    DenseMap<const MachineInstr*, InstrCycles> Cycles;334,13812
    SmallVector<SmallVector335,13867
    SmallVector<unsigned, 0> ProcResourceDepths;335,13867
    SmallVector<SmallVector336,13916
    SmallVector<unsigned, 0> ProcResourceHeights;336,13916
    MachineTraceMetrics &MTM;MTM348,14451
  SmallVector<SmallVector402,16699
  SmallVector<FixedBlockInfo, 4> BlockInfo;402,16699
  SmallVector<SmallVector409,17090
  SmallVector<unsigned, 0> ProcReleaseAtCycles;409,17090
      *Ensembles[Ensembles413,17182
  unsigned getCycles(417,17356
inline raw_ostream &operator<<(operator<<423,17500
inline raw_ostream &operator<<(operator<<429,17651

/usr/include/llvm/CodeGen/MachineValueType.h,3349
#define LLVM_CODEGEN_MACHINEVALUETYPE_H17,678
  class MVT 34,1146
    enum SimpleValueType 36,1170
      INVALID_SIMPLE_VALUE_TYPE 39,1329
#define GET_VT_ATTR(41,1367
#define GET_VT_RANGES42,1429
#undef GET_VT_ATTR44,1485
#undef GET_VT_RANGES45,1504
      VALUETYPE_SIZE 47,1526
      MAX_ALLOWED_VALUETYPE 52,1753
    static_assert(55,1796
    static_assert(56,1836
    constexpr MVT(61,1986
    void dump(71,2554
    bool isFloatingPoint(83,2894
    bool isInteger(93,3391
    bool isScalarInteger(103,3910
    bool isVector(109,4118
    bool isScalableVector(116,4370
    bool isScalableTargetExtVT(122,4621
    bool isScalableVT(127,4767
    bool isFixedLengthVector(131,4866
    bool is16BitVector(137,5095
    bool is32BitVector(142,5256
    bool is64BitVector(147,5417
    bool is128BitVector(152,5579
    bool is256BitVector(157,5743
    bool is512BitVector(162,5907
    bool is1024BitVector(167,6072
    bool is2048BitVector(172,6239
    bool isOverloaded(177,6415
#define GET_VT_ATTR(179,6473
#undef GET_VT_ATTR183,6685
    MVT changeVectorElementTypeToInteger(192,6924
    MVT changeVectorElementType(203,7466
    MVT changeTypeToInteger(213,7949
    MVT getHalfNumVectorElementsVT(221,8216
    MVT getDoubleNumVectorElementsVT(230,8601
    bool isPow2VectorType(237,8850
    MVT getPow2VectorType(244,9090
    MVT getScalarType(255,9517
    MVT getVectorElementType(259,9614
#define GET_VT_VECATTR(264,9742
#undef GET_VT_VECATTR268,9955
    unsigned getVectorMinNumElements(273,10072
#define GET_VT_VECATTR(278,10208
#undef GET_VT_VECATTR282,10422
    ElementCount getVectorElementCount(286,10459
    unsigned getVectorNumElements(290,10594
    TypeSize getSizeInBits(304,11188
#define GET_VT_ATTR(306,11273
#undef GET_VT_ATTR309,11460
    uint64_t getFixedSizeInBits(338,12449
    uint64_t getScalarSizeInBits(342,12544
    TypeSize getStoreSize(352,12937
    uint64_t getScalarStoreSize(359,13242
    TypeSize getStoreSizeInBits(369,13632
    bool isByteSized(375,13810
    bool knownBitsGT(378,13964
    bool knownBitsGE(384,14177
    bool knownBitsLT(389,14368
    bool knownBitsLE(395,14582
    bool bitsGT(400,14748
    bool bitsGE(407,14992
    bool bitsLT(414,15233
    bool bitsLE(421,15477
    static MVT getFloatingPointVT(427,15667
#define GET_VT_ATTR(428,15722
#undef GET_VT_ATTR432,15933
    static MVT getIntegerVT(437,16002
#define GET_VT_ATTR(438,16051
#undef GET_VT_ATTR442,16262
    static MVT getVectorVT(447,16358
#define GET_VT_VECATTR(448,16417
#undef GET_VT_VECATTR452,16628
    static MVT getScalableVectorVT(457,16727
#define GET_VT_VECATTR(458,16794
#undef GET_VT_VECATTR462,17005
    static MVT getVectorVT(467,17104
    static MVT getVectorVT(473,17305
    static auto all_valuetypes(487,17836
    static auto integer_valuetypes(492,18023
    static auto fp_valuetypes(498,18262
    static auto vector_valuetypes(503,18454
    static auto fixedlen_vector_valuetypes(509,18690
    static auto scalable_vector_valuetypes(515,18953
    static auto integer_fixedlen_vector_valuetypes(521,19216
    static auto fp_fixedlen_vector_valuetypes(527,19503
    static auto integer_scalable_vector_valuetypes(533,19775
    static auto fp_scalable_vector_valuetypes(539,20062
  inline raw_ostream &operator<<(operator<<547,20350

/usr/include/llvm/CodeGen/MacroFusion.h,42
#define LLVM_CODEGEN_MACROFUSION_H15,606

/usr/include/llvm/CodeGen/ModuloSchedule.h,3201
#define LLVM_CODEGEN_MODULOSCHEDULE_H61,2561
class ModuloSchedule 80,3062
  MachineLoop *Loop;Loop83,3144
  std::vector<MachineInstr *> ScheduledInstrs;88,3339
  DenseMap<DenseMap91,3425
  DenseMap<MachineInstr *, int> Cycle;91,3425
  DenseMap<DenseMap94,3503
  DenseMap<MachineInstr *, int> Stage;94,3503
  int NumStages;97,3605
  ModuloSchedule(107,4004
  MachineLoop *getLoop(getLoop120,4520
  int getNumStages(124,4675
  int getFirstCycle(128,4828
  int getFinalCycle(132,4996
  int getStage(135,5116
  int getCycle(141,5286
  void setStage(147,5453
  ArrayRef<MachineInstr *> getInstructions(153,5618
  void dump(155,5692
class ModuloScheduleExpander 161,5913
  using InstrChangesTy 163,5952
  using InstrChangesTy = DenseMap<MachineInstr *, std::pair<std::pair163,5952
  using ValueMapTy 166,6043
  using MBBVectorTy 167,6094
  using InstrMapTy 168,6154
  ModuloSchedule &Schedule;Schedule170,6218
  MachineFunction &MF;MF171,6246
  const TargetSubtargetInfo &ST;ST172,6269
  MachineRegisterInfo &MRI;MRI173,6302
  const TargetInstrInfo *TII TII174,6330
  LiveIntervals &LIS;LIS175,6370
  MachineBasicBlock *BB BB177,6393
  MachineBasicBlock *Preheader Preheader178,6428
  MachineBasicBlock *NewKernel NewKernel179,6470
  std::unique_ptr<TargetInstrInfo::PipelinerLoopInfo> LoopInfo;180,6512
  std::map<std::map186,6834
  std::map<unsigned, std::pair<unsigned, bool>> RegToStageDiff;186,6834
  InstrChangesTy InstrChanges;189,6962
  unsigned getStagesForReg(238,9867
  unsigned getStagesForPhi(252,10549
  ModuloScheduleExpander(265,11026
  MachineBasicBlock *getRewrittenKernel(getRewrittenKernel278,11543
class PeelingModuloScheduleExpander 283,11754
  PeelingModuloScheduleExpander(285,11800
  ModuloSchedule &Schedule;Schedule297,12269
  MachineFunction &MF;MF298,12297
  const TargetSubtargetInfo &ST;ST299,12320
  MachineRegisterInfo &MRI;MRI300,12353
  const TargetInstrInfo *TII TII301,12381
  LiveIntervals *LIS LIS302,12421
  MachineBasicBlock *BB BB305,12514
  MachineBasicBlock *Preheader Preheader307,12584
  SmallVector<SmallVector309,12662
  SmallVector<MachineBasicBlock *, 4> Prologs,309,12662
  SmallVector<MachineBasicBlock *, 4> Prologs, Epilogs;309,12662
  DenseMap<DenseMap311,12771
  DenseMap<MachineBasicBlock *, BitVector> LiveStages;311,12771
  DenseMap<DenseMap315,12997
  DenseMap<MachineBasicBlock *, BitVector> AvailableStages;315,12997
  DenseMap<DenseMap318,13160
  DenseMap<MachineInstr *, unsigned> PhiNodeLoopIteration;318,13160
  DenseMap<DenseMap322,13322
  DenseMap<MachineInstr *, MachineInstr *> CanonicalMIs;322,13322
  DenseMap<DenseMap323,13379
      BlockMIs;324,13454
  std::deque<MachineBasicBlock *> PeeledFront,327,13533
  std::deque<MachineBasicBlock *> PeeledFront, PeeledBack;327,13533
  SmallVector<SmallVector329,13659
  SmallVector<MachineInstr *, 4> IllegalPhisToDelete;329,13659
  unsigned getStage(361,15290
  std::unique_ptr<TargetInstrInfo::PipelinerLoopInfo> LoopInfo;370,15675
class ModuloScheduleTestAnnotater 379,16069
  MachineFunction &MF;MF380,16105
  ModuloSchedule &S;S381,16128
  ModuloScheduleTestAnnotater(384,16158

/usr/include/llvm/CodeGen/NonRelocatableStringpool.h,538
#define LLVM_CODEGEN_NONRELOCATABLESTRINGPOOL_H10,418
class NonRelocatableStringpool 23,804
  NonRelocatableStringpool(30,1079
  DwarfStringPoolEntryRef getEntry(38,1294
  uint64_t getStringOffset(42,1481
  StringRef internString(50,1842
  uint64_t getSize(52,1882
  MapTy Strings;59,2141
template <typename T,66,2314
template <typename T, typename S> class StrongType 66,2314
  explicit StrongType(69,2416
struct UniqueTag 75,2647
struct OffsetsTag 76,2668
using UniquingStringPool 77,2690
using OffsetsStringPool 78,2766

/usr/include/llvm/CodeGen/ParallelCG.h,41
#define LLVM_CODEGEN_PARALLELCG_H14,572

/usr/include/llvm/CodeGen/Passes.h,37
#define LLVM_CODEGEN_PASSES_H15,608

/usr/include/llvm/CodeGen/PseudoSourceValue.h,1106
#define LLVM_CODEGEN_PSEUDOSOURCEVALUE_H14,568
class PseudoSourceValue 31,1081
  enum PSVKind 33,1115
    Stack,34,1143
    GOT,35,1154
    JumpTable,36,1163
    ConstantPool,37,1178
    FixedStack,38,1196
    GlobalValueCallEntry,39,1212
    ExternalSymbolCallEntry,40,1238
    TargetCustom41,1267
  unsigned Kind;45,1299
  unsigned AddressSpace;46,1316
  unsigned kind(62,1854
  bool isStack(64,1896
  bool isGOT(65,1945
  bool isConstantPool(66,1990
  bool isJumpTable(67,2053
  unsigned getAddressSpace(69,2111
  unsigned getTargetCustom(71,2172
class FixedStackPseudoSourceValue 90,2886
  const int FI;91,2949
  explicit FixedStackPseudoSourceValue(94,2974
  static bool classof(97,3100
  int getFrameIndex(109,3432
class CallEntryPseudoSourceValue 112,3479
class GlobalValuePseudoSourceValue 123,3882
  const GlobalValue *GV;GV124,3955
  static bool classof(129,4070
  const GlobalValue *getValue(getValue133,4173
class ExternalSymbolPseudoSourceValue 137,4304
  const char *ES;ES138,4380
  static bool classof(143,4484
  const char *getSymbol(getSymbol147,4590

/usr/include/llvm/CodeGen/PseudoSourceValueManager.h,576
#define LLVM_CODEGEN_PSEUDOSOURCEVALUEMANAGER_H14,582
class PseudoSourceValueManager 27,858
  const TargetMachine &TM;TM28,891
  const PseudoSourceValue StackPSV,29,918
  const PseudoSourceValue StackPSV, GOTPSV,29,918
  const PseudoSourceValue StackPSV, GOTPSV, JumpTablePSV,29,918
  const PseudoSourceValue StackPSV, GOTPSV, JumpTablePSV, ConstantPoolPSV;29,918
  std::map<std::map30,993
  std::map<int, std::unique_ptr<FixedStackPseudoSourceValue>> FSValues;30,993
      ExternalCallEntries;32,1133
  ValueMap<ValueMap33,1160
      GlobalCallEntries;35,1256

/usr/include/llvm/CodeGen/RegisterBank.h,392
#define LLVM_CODEGEN_REGISTERBANK_H14,549
class RegisterBank 28,917
  unsigned ID;30,947
  unsigned NumRegClasses;31,962
  const char *Name;Name32,988
  const uint32_t *CoveredClasses;CoveredClasses33,1008
  friend RegisterBankInfo;36,1113
  constexpr RegisterBank(39,1149
  unsigned getID(45,1435
  const char *getName(getName49,1580
  bool verify(57,1869
  void dump(72,2440

/usr/include/llvm/CodeGen/RegisterBankInfo.h,2878
#define LLVM_CODEGEN_REGISTERBANKINFO_H15,623
class RegisterBankInfo 40,1257
  struct PartialMapping 49,1673
    unsigned StartIdx;53,1873
    unsigned Length;58,2065
    const RegisterBank *RegBank;RegBank61,2140
    constexpr PartialMapping(66,2271
    unsigned getHighBitIdx(72,2583
    void dump(75,2706
  struct ValueMapping 146,5368
    const PartialMapping *BreakDown;BreakDown148,5467
    unsigned NumBreakDowns;151,5565
    ValueMapping(155,5684
    constexpr ValueMapping(160,5884
    const PartialMapping *begin(begin165,6107
    const PartialMapping *end(end166,6169
    bool partsAllUniform(170,6336
    bool verify(180,6710
  class InstructionMapping 191,7060
    const ValueMapping &getOperandMapping(getOperandMapping206,7479
    InstructionMapping(218,7967
    unsigned getCost(229,8383
    unsigned getID(232,8450
    unsigned getNumOperands(235,8529
    const ValueMapping &getOperandMapping(getOperandMapping240,8743
    void setOperandsMapping(249,9088
    bool isValid(255,9303
    bool verify(265,9660
  class OperandsMapper 281,10209
    SmallVector<int,int285,10465
    SmallVector<int, 8> OpToNewVRegIdx;285,10465
    SmallVector<Register,Register288,10580
    SmallVector<Register, 8> NewVRegs;288,10580
    MachineRegisterInfo &MRI;MRI291,10695
    MachineInstr &MI;MI294,10762
    const InstructionMapping &InstrMapping;InstrMapping297,10825
    static const int DontKnowIdx;301,10983
    getVRegsMem(310,11297
    getNewVRegsEnd(316,11535
    const InstructionMapping &getInstrMapping(getInstrMapping333,12192
    MachineRegisterInfo &getMRI(getMRI336,12336
    void createVRegs(351,13029
    void setVRegs(363,13493
    getVRegs(378,14190
  mutable DenseMap<DenseMap407,15105
      MapOfValueMappings;408,15171
  mutable DenseMap<DenseMap412,15337
      MapOfOperandsMappings;413,15399
  mutable DenseMap<DenseMap417,15565
      MapOfInstructionMappings;418,15637
  mutable DenseMap<DenseMap422,15781
  mutable DenseMap<unsigned, const TargetRegisterClass *> PhysRegMinimalRCs;422,15781
  RegisterBankInfo(435,16428
  const RegisterBank &getRegBank(getRegBank440,16570
  getInstructionMapping(534,20607
  const InstructionMapping &getInvalidInstructionMapping(getInvalidInstructionMapping542,20984
  virtual void applyMappingImpl(576,22521
  const RegisterBank &getRegBank(getRegBank585,22815
  unsigned getMaximumSize(590,23012
  unsigned getNumRegBanks(603,23516
  virtual bool isDivergentRegBank(606,23640
  getRegBankFromRegClass(623,24326
  virtual unsigned copyCost(633,24777
  bool cannotCopy(643,25245
  getBreakDownCost(653,25746
  static const unsigned DefaultMappingID;672,26715
  static const unsigned InvalidMappingID;677,26917
  void applyMapping(735,29561
operator<<(765,30739
operator<<(772,30895
operator<<(778,31036
operator<<(785,31198

/usr/include/llvm/CodeGen/RegisterScavenging.h,574
#define LLVM_CODEGEN_REGISTERSCAVENGING_H18,762
class RegScavenger 34,1149
  MachineBasicBlock::iterator MBBI;39,1327
  struct ScavengedInfo 42,1429
    ScavengedInfo(43,1454
    int FrameIndex;46,1584
    Register Reg;50,1740
  SmallVector<SmallVector57,1935
  SmallVector<ScavengedInfo, 2> Scavenged;57,1935
  LiveRegUnits LiveUnits;59,1979
  void assignRegToScavengingIndex(70,2448
  void backward(96,3388
  void addScavengingFrameIndex(112,3931
  bool isScavengingFrameIndex(117,4084
  void getScavengingFrameIndices(126,4300
  bool isReserved(151,5447

/usr/include/llvm/CodeGen/RuntimeLibcalls.h,132
#define LLVM_CODEGEN_RUNTIMELIBCALLS_H15,653
  enum Libcall 30,1217
#define HANDLE_LIBCALL(31,1234
#undef HANDLE_LIBCALL33,1318

/usr/include/llvm/CodeGen/SafeStack.h,170
#define LLVM_CODEGEN_SAFESTACK_H10,403
class SafeStackPass 18,511
  const TargetMachine *TM;TM19,571
  explicit SafeStackPass(22,607
  PreservedAnalyses run(23,671

/usr/include/llvm/CodeGen/ScheduleDAG.h,5766
#define LLVM_CODEGEN_SCHEDULEDAG_H16,715
  class SDep 49,1547
    enum Kind 52,1638
      Data,53,1654
      Anti,54,1725
      Output,55,1787
      Order 56,1851
    enum OrderKind 68,2337
      Barrier,69,2358
      MayAliasMem,70,2414
      MustAliasMem,71,2491
      Artificial,72,2569
      Weak,73,2642
      Cluster 74,2692
    PointerIntPair<SUnit SUnit80,2900
    PointerIntPair<SUnit *, 2, Kind> Dep;80,2900
      unsigned Reg;87,3196
      unsigned OrdKind;90,3276
    } Contents;91,3318
    SDep(101,3740
    SDep(104,3830
    SDep(123,4309
    bool overlaps(129,4507
    unsigned getLatency(142,4970
    void setLatency(147,5073
    SUnit *getSUnit(getSUnit152,5191
    bool isNormalMemory(168,5694
    bool isBarrier(174,5951
    bool isNormalMemoryOrBarrier(179,6116
    bool isMustAlias(186,6410
    bool isWeak(194,6792
    bool isArtificial(200,7015
    bool isCluster(206,7254
    bool isAssignedRegDep(211,7433
    unsigned getReg(218,7733
    void setReg(228,8238
    void dump(238,8673
  class SUnit 242,8802
    enum : unsigned 244,8829
    enum : unsigned { BoundaryID 244,8829
    SmallVector<SDep,SDep256,9259
    SmallVector<SDep, 4> Preds;256,9259
    SmallVector<SDep,SDep257,9321
    SmallVector<SDep, 4> Succs;257,9321
    typedef SmallVectorImpl<SDep>::iterator pred_iterator;259,9382
    typedef SmallVectorImpl<SDep>::iterator succ_iterator;260,9441
    typedef SmallVectorImpl<SDep>::const_iterator const_pred_iterator;261,9500
    typedef SmallVectorImpl<SDep>::const_iterator const_succ_iterator;262,9571
    bool isVRegCycle 274,10348
    bool isCall 275,10423
    bool isCallOp 276,10487
    bool isTwoAddress 277,10559
    bool isCommutable 278,10633
    bool hasPhysRegUses 279,10706
    bool hasPhysRegDefs 280,10768
    bool hasPhysRegClobbers 281,10850
    bool isPending 282,10929
    bool isAvailable 283,10992
    bool isScheduled 284,11057
    bool isScheduleHigh 285,11122
    bool isScheduleLow 286,11203
    bool isCloned 287,11283
    bool isUnbuffered 288,11362
    bool hasReservedResource 289,11435
    bool isDepthCurrent 293,11597
    bool isHeightCurrent 294,11667
    SUnit(308,12295
    SUnit(319,12903
    SUnit(329,13466
    bool isBoundaryNode(344,14309
    void setNode(348,14491
    SDNode *getNode(getNode355,14729
    bool isInstr(362,14955
    void setInstr(366,15104
    MachineInstr *getInstr(getInstr373,15358
    bool addPredBarrier(384,15835
    unsigned getDepth(398,16425
    unsigned getHeight(406,16693
    bool isPred(431,17662
    bool isSucc(439,17876
    bool isTopReady(446,18037
    bool isBottomReady(449,18105
  class SchedulingPriorityQueue 496,19688
    bool HasReadyFilter;500,19777
    SchedulingPriorityQueue(503,19813
    bool hasReadyFilter(516,20209
    virtual bool tracksRegPressure(518,20269
    virtual bool isReady(520,20331
    void push_all(527,20514
    virtual void dump(536,20696
    virtual void scheduledNode(541,20919
    virtual void unscheduledNode(543,20963
    void setCurCycle(545,21009
    unsigned getCurCycle(549,21079
  class ScheduleDAG 554,21149
    const LLVMTargetMachine &TM;TM556,21181
    const TargetInstrInfo *TII;TII557,21243
    const TargetRegisterInfo *TRI;TRI558,21319
    MachineFunction &MF;MF559,21395
    MachineRegisterInfo &MRI;MRI560,21457
    std::vector<SUnit> SUnits;561,21528
    SUnit EntrySU;562,21595
    SUnit ExitSU;563,21675
    bool StressSched;568,21818
    const MCInstrDesc *getInstrDesc(getInstrDesc589,22616
    virtual void addCustomGraphFeatures(609,23436
  class SUnitIterator 625,23914
    SUnit *Node;Node626,23938
    unsigned Operand;627,23955
    SUnitIterator(629,23978
    bool operator==(operator==638,24258
    bool operator!=(operator!=641,24351
    pointer operator*(643,24429
    pointer operator->(646,24513
    SUnitIterator& operator++(648,24569
    SUnitIterator operator++(652,24677
    static SUnitIterator begin(656,24791
    static SUnitIterator end 657,24864
    unsigned getOperand(661,24972
    const SUnit *getNode(getNode662,25024
    bool isCtrlDep(665,25130
    bool isArtificialDep(668,25198
    const SDep &getSDep(getSDep671,25278
  template <> struct GraphTraits<GraphTraits676,25359
    typedef SUnit *NodeRef;NodeRef677,25402
    typedef SUnitIterator ChildIteratorType;678,25430
    static NodeRef getEntryNode(679,25475
    static ChildIteratorType child_begin(680,25531
    static ChildIteratorType child_end(683,25629
  template <> struct GraphTraits<GraphTraits688,25729
    typedef pointer_iterator<std::vector<SUnit>::iterator> nodes_iterator;689,25807
    static nodes_iterator nodes_begin(690,25882
    static nodes_iterator nodes_end(693,25992
  class ScheduleDAGTopologicalSort 702,26336
    std::vector<SUnit> &SUnits;SUnits704,26422
    SUnit *ExitSU;ExitSU705,26454
    SmallVector<SmallVector711,26613
    SmallVector<std::pair<SUnit *, SUnit *>, 16> Updates;711,26613
    std::vector<int> Index2Node;714,26723
    std::vector<int> Node2Index;716,26811
    BitVector Visited;718,26899
    void MarkDirty(776,29306
    typedef std::vector<int>::iterator iterator;778,29346
    typedef std::vector<int>::const_iterator const_iterator;779,29395
    iterator begin(780,29456
    const_iterator begin(781,29508
    iterator end(782,29572
    const_iterator end(783,29620
    typedef std::vector<int>::reverse_iterator reverse_iterator;785,29681
    typedef std::vector<int>::const_reverse_iterator const_reverse_iterator;786,29746
    reverse_iterator rbegin(787,29823
    const_reverse_iterator rbegin(788,29885
    reverse_iterator rend(789,29959
    const_reverse_iterator rend(790,30017

/usr/include/llvm/CodeGen/ScheduleDAGInstrs.h,1744
#define LLVM_CODEGEN_SCHEDULEDAGINSTRS_H15,623
  struct VReg2SUnit 53,1607
    unsigned VirtReg;54,1629
    LaneBitmask LaneMask;55,1651
    SUnit *SU;SU56,1677
    VReg2SUnit(58,1693
    unsigned getSparseSetIndex(61,1810
  struct VReg2SUnitOperIdx 67,1983
    unsigned OperandIndex;68,2032
    VReg2SUnitOperIdx(70,2060
  struct PhysRegSUOper 77,2340
    SUnit *SU;SU78,2365
    int OpIdx;79,2380
    unsigned RegUnit;80,2395
    PhysRegSUOper(82,2418
    unsigned getSparseSetIndex(85,2511
  struct UnderlyingObject 110,3615
    UnderlyingObject(111,3680
    ValueType getValue(114,3791
    bool mayAlias(115,3847
  class ScheduleDAGInstrs 121,4027
    const MachineFrameInfo &MFI;MFI124,4131
    TargetSchedModel SchedModel;127,4234
    bool RemoveKillFlags;131,4368
    MachineBasicBlock::iterator RegionBegin;150,5140
    MachineBasicBlock::iterator RegionEnd;153,5232
    DenseMap<DenseMap160,5511
    DenseMap<MachineInstr*, SUnit*> MISUnitMap;160,5511
    RegUnit2SUnitsMap Defs;169,5912
    RegUnit2SUnitsMap Uses;170,5940
    VReg2SUnitMultiMap CurrentVRegDefs;175,6153
    VReg2SUnitOperIdxMultiMap CurrentVRegUses;177,6274
    void addChainDependencies(212,7811
    UndefValue *UnknownValue;UnknownValue238,9071
    ScheduleDAGTopologicalSort Topo;243,9212
    DbgValueVector DbgValues;250,9522
    LivePhysRegs LiveRegs;254,9660
    const TargetSchedModel *getSchedModel(getSchedModel264,9977
    const MCSchedClassDesc *getSchedClass(getSchedClass267,10121
    bool IsReachable(274,10414
    MachineBasicBlock::iterator begin(279,10590
    MachineBasicBlock::iterator end(282,10737
    virtual bool doMBBSchedRegionsTopDown(293,11197
    virtual void finalizeSchedule(340,13441

/usr/include/llvm/CodeGen/SchedulerRegistry.h,338
#define LLVM_CODEGEN_SCHEDULERREGISTRY_H15,612
class RegisterScheduler31,1055
  static MachinePassRegistry<FunctionPassCtor> Registry;38,1390
  RegisterScheduler(40,1448
  ~RegisterScheduler(44,1589
  RegisterScheduler *getNext(getNext48,1657
  static RegisterScheduler *getList(getList52,1769
  static void setListener(56,1866

/usr/include/llvm/CodeGen/SelectOptimize.h,185
#define LLVM_CODEGEN_SELECTOPTIMIZE_H16,633
class SelectOptimizePass 24,746
  const TargetMachine *TM;TM25,816
  explicit SelectOptimizePass(28,852
  PreservedAnalyses run(29,919

/usr/include/llvm/CodeGen/SelectionDAG.h,10277
#define LLVM_CODEGEN_SELECTIONDAG_H15,600
class SDVTListNode 96,2765
  FoldingSetNodeIDRef FastID;104,3156
  const EVT *VTs;VTs105,3186
  unsigned int NumVTs;106,3204
  unsigned HashValue;109,3316
  SDVTListNode(112,3347
  SDVTList getSDVTList(117,3507
template<> struct FoldingSetTrait<FoldingSetTrait125,3707
  static void Profile(126,3796
  static bool Equals(130,3889
  static unsigned ComputeHash(137,4110
template <> struct ilist_alloc_traits<ilist_alloc_traits142,4223
  static void deleteNode(143,4271
class SDDbgInfo 159,5167
  BumpPtrAllocator Alloc;160,5185
  SmallVector<SmallVector161,5211
  SmallVector<SDDbgValue*, 32> DbgValues;161,5211
  SmallVector<SmallVector162,5253
  SmallVector<SDDbgValue*, 32> ByvalParmDbgValues;162,5253
  SmallVector<SmallVector163,5304
  SmallVector<SDDbgLabel*, 4> DbgLabels;163,5304
  using DbgValMapType 164,5345
  using DbgValMapType = DenseMap<const SDNode *, SmallVector<SmallVector164,5345
  DbgValMapType DbgValMap;165,5425
  void add(174,5626
  void clear(180,5820
  BumpPtrAllocator &getAlloc(getAlloc188,5962
  bool empty(190,6012
  ArrayRef<SDDbgValue*> getSDDbgValues(194,6121
  using DbgIterator 201,6318
  using DbgLabelIterator 202,6380
  DbgIterator DbgBegin(204,6448
  DbgIterator DbgEnd(205,6503
  DbgIterator ByvalParmDbgBegin(206,6556
  DbgIterator ByvalParmDbgEnd(207,6629
  DbgLabelIterator DbgLabelBegin(208,6700
  DbgLabelIterator DbgLabelEnd(209,6765
class SelectionDAG 225,7478
  const TargetMachine &TM;TM226,7499
  const SelectionDAGTargetInfo *TSI TSI227,7526
  const TargetLowering *TLI TLI228,7573
  const TargetLibraryInfo *LibInfo LibInfo229,7612
  const FunctionVarLocs *FnVarLocs FnVarLocs230,7658
  MachineFunction *MF;MF231,7704
  Pass *SDAGISelPass SDAGISelPass232,7727
  LLVMContext *Context;Context233,7759
  CodeGenOptLevel OptLevel;234,7783
  UniformityInfo *UA UA236,7812
  FunctionLoweringInfo * FLI 237,7844
  OptimizationRemarkEmitter *ORE;ORE241,7998
  ProfileSummaryInfo *PSI PSI243,8033
  BlockFrequencyInfo *BFI BFI244,8070
  FoldingSet<SDVTListNode> VTListMap;247,8146
  BumpPtrAllocator Allocator;250,8265
  SDNode EntryNode;253,8322
  SDValue Root;256,8377
  ilist<SDNode> AllNodes;259,8443
  using NodeAllocatorType 263,8563
  using NodeAllocatorType = RecyclingAllocator<BumpPtrAllocator, SDNode,263,8563
                                               sizeof(264,8636
  NodeAllocatorType NodeAllocator;268,8816
  FoldingSet<SDNode> CSEMap;272,8985
  BumpPtrAllocator OperandAllocator;275,9073
  ArrayRecycler<SDUse> OperandRecycler;276,9110
  SDDbgInfo *DbgInfo;DbgInfo279,9216
  using CallSiteInfo 281,9239
  using CallSiteInfoImpl 282,9293
  struct NodeExtraInfo 284,9356
    CallSiteInfo CSInfo;285,9381
  DenseMap<DenseMap291,9557
  DenseMap<const SDNode *, NodeExtraInfo> SDEI;291,9557
  uint16_t NextPersistentId 298,9906
  struct DAGUpdateListener 307,10298
    DAGUpdateListener *const Next;308,10327
    SelectionDAG &DAG;DAG309,10362
    explicit DAGUpdateListener(311,10386
    virtual ~DAGUpdateListener(316,10517
  struct DAGNodeDeletedListener 333,11029
    std::function<void(SDNode *, SDNode *)> Callback;334,11090
    DAGNodeDeletedListener(336,11145
    void NodeDeleted(340,11336
  struct DAGNodeInsertedListener 346,11454
    std::function<void(SDNode *)> Callback;347,11516
    DAGNodeInsertedListener(349,11561
    void NodeInserted(353,11744
  class FlagInserter 361,11970
    SelectionDAG &DAG;DAG362,11993
    SDNodeFlags Flags;363,12016
    FlagInserter *LastInserter;LastInserter364,12039
    FlagInserter(367,12082
    FlagInserter(372,12262
    ~FlagInserter(377,12467
    SDNodeFlags getFlags(379,12527
  bool NewNodesMustHaveLegalTypes 387,12883
  DAGUpdateListener *UpdateListeners UpdateListeners395,13168
  template <typename SDNodeT,403,13488
  SDNodeT *newSDNode(newSDNode404,13540
  template <typename SDNodeT,415,14003
  static uint16_t getSyntheticNodeSubclassData(416,14055
  static uint16_t getSyntheticNodeSubclassData(426,14515
  void removeOperands(435,14905
  static constexpr unsigned MaxRecursionDepth 448,15315
  void setFunctionLoweringInfo(461,15907
  MachineFunction &getMachineFunction(getMachineFunction469,16121
  const Pass *getPass(getPass470,16183
  const DataLayout &getDataLayout(getDataLayout472,16239
  const TargetMachine &getTarget(getTarget473,16313
  const TargetSubtargetInfo &getSubtarget(getSubtarget474,16369
  template <typename STC> const STC &getSubtarget(getSubtarget475,16450
  const TargetLowering &getTargetLoweringInfo(getTargetLoweringInfo478,16550
  const TargetLibraryInfo &getLibInfo(getLibInfo479,16621
  const SelectionDAGTargetInfo &getSelectionDAGInfo(getSelectionDAGInfo480,16688
  const UniformityInfo *getUniformityInfo(getUniformityInfo481,16765
  const FunctionVarLocs *getFunctionVarLocs(getFunctionVarLocs484,16945
  LLVMContext *getContext(getContext485,17019
  OptimizationRemarkEmitter &getORE(getORE486,17073
  ProfileSummaryInfo *getPSI(getPSI487,17134
  BlockFrequencyInfo *getBFI(getBFI488,17187
  FlagInserter *getFlagInserter(getFlagInserter490,17241
  void setFlagInserter(491,17296
  std::map<std::map509,18033
  std::map<const SDNode *, std::string> NodeGraphAttrs;509,18033
  using allnodes_const_iterator 529,18727
  allnodes_const_iterator allnodes_begin(531,18793
  allnodes_const_iterator allnodes_end(532,18871
  using allnodes_iterator 534,18946
  allnodes_iterator allnodes_begin(536,19000
  allnodes_iterator allnodes_end(537,19066
  ilist<SDNode>::size_type allnodes_size(539,19129
  iterator_range<allnodes_iterator> allnodes(543,19213
  iterator_range<allnodes_const_iterator> allnodes(546,19323
  const SDValue &getRoot(getRoot551,19493
  SDValue getEntryNode(554,19617
  const SDValue &setRoot(setRoot560,19770
  SDValue getAllOnesConstant(659,23959
  SDValue getTargetConstant(674,24714
  SDValue getTargetConstant(678,24891
  SDValue getTargetConstant(682,25072
  SDValue getTargetConstantFP(706,26222
  SDValue getTargetConstantFP(709,26340
  SDValue getTargetConstantFP(712,26466
  SDValue getTargetGlobalAddress(720,26806
  SDValue getTargetFrameIndex(725,27104
  SDValue getTargetJumpTable(730,27309
  SDValue getTargetConstantPool(737,27711
  SDValue getTargetConstantPool(745,28191
  SDValue getTargetBlockAddress(766,29354
  SDValue getCopyToReg(771,29566
  SDValue getCopyToReg(780,29999
  SDValue getCopyToReg(789,30425
  SDValue getCopyFromReg(797,30749
  SDValue getCopyFromReg(806,31194
  SDValue getBuildVector(826,32187
  SDValue getBuildVector(835,32639
  SDValue getSplatBuildVector(843,33046
  SDValue getSplatVector(860,33786
  SDValue getSplat(876,34543
  std::pair<std::pair902,35727
  static unsigned getOpcode_EXTEND(906,35894
  static unsigned getOpcode_EXTEND_VECTOR_INREG(922,36368
  SDValue getExtOrTrunc(952,37566
  SDValue getExtOrTrunc(968,38120
  SDValue getObjectPtrOffset(1045,42130
  SDValue getObjectPtrOffset(1051,42328
  SDValue getCALLSEQ_START(1062,42907
  SDValue getCALLSEQ_END(1074,43448
  SDValue getCALLSEQ_END(1086,43854
  SDValue getUNDEF(1097,44340
  SDValue getGLOBAL_OFFSET_TABLE(1109,44802
  SDValue getSetCC(1206,49879
  SDValue getSetCCVP(1223,50789
  SDValue getSelect(1235,51377
  SDValue getSelectCC(1245,51862
  inline SDValue getMemIntrinsicNode(1302,54672
  inline SDValue getLoad(1364,58134
  getStore(1390,59454
  getTruncStore(1406,60318
  getLoadVP(1427,61547
  inline SDValue getStridedLoadVP(1485,65472
  void RepositionNode(1839,84992
  static const fltSemantics &EVTToAPFloatSemantics(EVTToAPFloatSemantics1845,85248
  ArrayRef<SDDbgValue*> GetDbgValues(1866,86081
  bool hasDebugValues(1873,86290
  SDDbgInfo::DbgIterator DbgBegin(1875,86351
  SDDbgInfo::DbgIterator DbgEnd(1876,86425
  SDDbgInfo::DbgIterator ByvalParmDbgBegin(1878,86497
  SDDbgInfo::DbgIterator ByvalParmDbgEnd(1881,86595
  SDDbgInfo::DbgLabelIterator DbgLabelBegin(1885,86690
  SDDbgInfo::DbgLabelIterator DbgLabelEnd(1888,86785
  enum OverflowKind 1980,91131
    OFK_Never,1981,91153
    OFK_Sometime,1982,91168
    OFK_Always,1983,91186
  OverflowKind computeOverflowForAdd(1993,91589
  bool willNotOverflowAdd(2000,91911
  OverflowKind computeOverflowForSub(2011,92420
  bool willNotOverflowSub(2018,92737
  OverflowKind computeOverflowForMul(2029,93246
  bool willNotOverflowMul(2036,93563
  bool isGuaranteedNotToBePoison(2091,96741
  bool isGuaranteedNotToBePoison(2097,97052
  bool isKnownNeverSNaN(2148,99741
  std::pair<std::pair2229,103932
  std::pair<std::pair2245,104724
  std::pair<std::pair2250,105017
  std::pair<std::pair2255,105289
  std::pair<std::pair2260,105546
  std::pair<std::pair2264,105777
  std::pair<SDValue, SDValue> SplitVector(2264,105777
  std::pair<std::pair2271,106054
  std::pair<std::pair2275,106224
  std::pair<SDValue, SDValue> SplitVectorOperand(2275,106224
  inline bool isConstantValueOfAnyType(2302,107492
  void addCallSiteInfo(2308,107712
  CallSiteInfo getCallSiteInfo(2312,107912
  void addHeapAllocSite(2317,108126
  MDNode *getHeapAllocSite(getHeapAllocSite2321,108299
  void addPCSections(2326,108501
  MDNode *getPCSections(getPCSections2330,108665
  void addNoMergeSiteInfo(2335,108888
  bool getNoMergeSiteInfo(2340,109055
  DenormalMode getDenormalMode(2350,109416
  bool isSafeToSpeculativelyExecute(2363,109975
  bool isSafeToSpeculativelyExecuteNode(2381,110491
  std::vector<CondCodeSDNode*> CondCodeNodes;2422,112172
  std::vector<SDNode*> ValueTypeNodes;2424,112219
  std::map<std::map2425,112258
  std::map<EVT, SDNode*, EVT::compareRawBits> ExtendedValueTypeNodes;2425,112258
  StringMap<SDNode*> ExternalSymbols;2426,112328
  std::map<std::map2428,112367
  std::map<std::pair<std::string, unsigned>, SDNode *> TargetExternalSymbols;2428,112367
  DenseMap<DenseMap2429,112445
  DenseMap<MCSymbol *, SDNode *> MCSymbols;2429,112445
  FlagInserter *Inserter Inserter2431,112490
template <> struct GraphTraits<GraphTraits2434,112530
  using nodes_iterator 2435,112608
  static nodes_iterator nodes_begin(2437,112685
  static nodes_iterator nodes_end(2441,112793

/usr/include/llvm/CodeGen/SelectionDAGISel.h,8001
#define LLVM_CODEGEN_SELECTIONDAGISEL_H15,637
class SelectionDAGISel 41,1320
  TargetMachine &TM;TM43,1382
  const TargetLibraryInfo *LibInfo;LibInfo44,1403
  std::unique_ptr<FunctionLoweringInfo> FuncInfo;45,1439
  SwiftErrorValueTracking *SwiftError;SwiftError46,1489
  MachineFunction *MF;MF47,1528
  MachineRegisterInfo *RegInfo;RegInfo48,1551
  SelectionDAG *CurDAG;CurDAG49,1583
  std::unique_ptr<SelectionDAGBuilder> SDB;50,1607
  CodeGenOptLevel OptLevel;54,1744
  const TargetInstrInfo *TII;TII55,1772
  const TargetLowering *TLI;TLI56,1802
  bool FastISelFailed;57,1831
  SmallPtrSet<SmallPtrSet58,1854
  SmallPtrSet<const Instruction *, 4> ElidedArgCopyInstrs;58,1854
  std::unique_ptr<OptimizationRemarkEmitter> ORE;62,2022
  const TargetLowering *getTargetLowering(getTargetLowering75,2568
  virtual void emitFunctionEntryCode(81,2755
  virtual void PreprocessISelDAG(85,2913
  virtual void PostprocessISelDAG(89,3059
  SelectInlineAsmMemoryOperand(100,3547
  enum BuiltinOpcodes 124,4636
    OPC_Scope,125,4660
    OPC_RecordNode,126,4675
    OPC_RecordChild0,127,4695
    OPC_RecordChild1,128,4717
    OPC_RecordChild2,129,4739
    OPC_RecordChild3,130,4761
    OPC_RecordChild4,131,4783
    OPC_RecordChild5,132,4805
    OPC_RecordChild6,133,4827
    OPC_RecordChild7,134,4849
    OPC_RecordMemRef,135,4871
    OPC_CaptureGlueInput,136,4893
    OPC_MoveChild,137,4919
    OPC_MoveChild0,138,4938
    OPC_MoveChild1,139,4958
    OPC_MoveChild2,140,4978
    OPC_MoveChild3,141,4998
    OPC_MoveChild4,142,5018
    OPC_MoveChild5,143,5038
    OPC_MoveChild6,144,5058
    OPC_MoveChild7,145,5078
    OPC_MoveSibling,146,5098
    OPC_MoveSibling0,147,5119
    OPC_MoveSibling1,148,5141
    OPC_MoveSibling2,149,5163
    OPC_MoveSibling3,150,5185
    OPC_MoveSibling4,151,5207
    OPC_MoveSibling5,152,5229
    OPC_MoveSibling6,153,5251
    OPC_MoveSibling7,154,5273
    OPC_MoveParent,155,5295
    OPC_CheckSame,156,5315
    OPC_CheckChild0Same,157,5334
    OPC_CheckChild1Same,158,5359
    OPC_CheckChild2Same,159,5384
    OPC_CheckChild3Same,160,5409
    OPC_CheckPatternPredicate,161,5434
    OPC_CheckPatternPredicate0,162,5465
    OPC_CheckPatternPredicate1,163,5497
    OPC_CheckPatternPredicate2,164,5529
    OPC_CheckPatternPredicate3,165,5561
    OPC_CheckPatternPredicate4,166,5593
    OPC_CheckPatternPredicate5,167,5625
    OPC_CheckPatternPredicate6,168,5657
    OPC_CheckPatternPredicate7,169,5689
    OPC_CheckPatternPredicateTwoByte,170,5721
    OPC_CheckPredicate,171,5759
    OPC_CheckPredicate0,172,5783
    OPC_CheckPredicate1,173,5808
    OPC_CheckPredicate2,174,5833
    OPC_CheckPredicate3,175,5858
    OPC_CheckPredicate4,176,5883
    OPC_CheckPredicate5,177,5908
    OPC_CheckPredicate6,178,5933
    OPC_CheckPredicate7,179,5958
    OPC_CheckPredicateWithOperands,180,5983
    OPC_CheckOpcode,181,6019
    OPC_SwitchOpcode,182,6040
    OPC_CheckType,183,6062
    OPC_CheckTypeI32,185,6137
    OPC_CheckTypeI64,186,6159
    OPC_CheckTypeRes,187,6181
    OPC_SwitchType,188,6203
    OPC_CheckChild0Type,189,6223
    OPC_CheckChild1Type,190,6248
    OPC_CheckChild2Type,191,6273
    OPC_CheckChild3Type,192,6298
    OPC_CheckChild4Type,193,6323
    OPC_CheckChild5Type,194,6348
    OPC_CheckChild6Type,195,6373
    OPC_CheckChild7Type,196,6398
    OPC_CheckChild0TypeI32,198,6424
    OPC_CheckChild1TypeI32,199,6452
    OPC_CheckChild2TypeI32,200,6480
    OPC_CheckChild3TypeI32,201,6508
    OPC_CheckChild4TypeI32,202,6536
    OPC_CheckChild5TypeI32,203,6564
    OPC_CheckChild6TypeI32,204,6592
    OPC_CheckChild7TypeI32,205,6620
    OPC_CheckChild0TypeI64,207,6649
    OPC_CheckChild1TypeI64,208,6677
    OPC_CheckChild2TypeI64,209,6705
    OPC_CheckChild3TypeI64,210,6733
    OPC_CheckChild4TypeI64,211,6761
    OPC_CheckChild5TypeI64,212,6789
    OPC_CheckChild6TypeI64,213,6817
    OPC_CheckChild7TypeI64,214,6845
    OPC_CheckInteger,216,6874
    OPC_CheckChild0Integer,217,6896
    OPC_CheckChild1Integer,218,6924
    OPC_CheckChild2Integer,219,6952
    OPC_CheckChild3Integer,220,6980
    OPC_CheckChild4Integer,221,7008
    OPC_CheckCondCode,222,7036
    OPC_CheckChild2CondCode,223,7059
    OPC_CheckValueType,224,7088
    OPC_CheckComplexPat,225,7112
    OPC_CheckComplexPat0,226,7137
    OPC_CheckComplexPat1,227,7163
    OPC_CheckComplexPat2,228,7189
    OPC_CheckComplexPat3,229,7215
    OPC_CheckComplexPat4,230,7241
    OPC_CheckComplexPat5,231,7267
    OPC_CheckComplexPat6,232,7293
    OPC_CheckComplexPat7,233,7319
    OPC_CheckAndImm,234,7345
    OPC_CheckOrImm,235,7366
    OPC_CheckImmAllOnesV,236,7386
    OPC_CheckImmAllZerosV,237,7412
    OPC_CheckFoldableChainNode,238,7439
    OPC_EmitInteger,240,7472
    OPC_EmitInteger8,242,7557
    OPC_EmitInteger16,243,7579
    OPC_EmitInteger32,244,7602
    OPC_EmitInteger64,245,7625
    OPC_EmitStringInteger,246,7648
    OPC_EmitStringInteger32,248,7739
    OPC_EmitRegister,249,7768
    OPC_EmitRegisterI32,250,7790
    OPC_EmitRegisterI64,251,7815
    OPC_EmitRegister2,252,7840
    OPC_EmitConvertToTarget,253,7863
    OPC_EmitConvertToTarget0,254,7892
    OPC_EmitConvertToTarget1,255,7922
    OPC_EmitConvertToTarget2,256,7952
    OPC_EmitConvertToTarget3,257,7982
    OPC_EmitConvertToTarget4,258,8012
    OPC_EmitConvertToTarget5,259,8042
    OPC_EmitConvertToTarget6,260,8072
    OPC_EmitConvertToTarget7,261,8102
    OPC_EmitMergeInputChains,262,8132
    OPC_EmitMergeInputChains1_0,263,8162
    OPC_EmitMergeInputChains1_1,264,8195
    OPC_EmitMergeInputChains1_2,265,8228
    OPC_EmitCopyToReg,266,8261
    OPC_EmitCopyToReg0,267,8284
    OPC_EmitCopyToReg1,268,8308
    OPC_EmitCopyToReg2,269,8332
    OPC_EmitCopyToReg3,270,8356
    OPC_EmitCopyToReg4,271,8380
    OPC_EmitCopyToReg5,272,8404
    OPC_EmitCopyToReg6,273,8428
    OPC_EmitCopyToReg7,274,8452
    OPC_EmitCopyToRegTwoByte,275,8476
    OPC_EmitNodeXForm,276,8506
    OPC_EmitNode,277,8529
    OPC_EmitNode0,279,8621
    OPC_EmitNode1,280,8640
    OPC_EmitNode2,281,8659
    OPC_EmitNode0None,283,8744
    OPC_EmitNode1None,284,8767
    OPC_EmitNode2None,285,8790
    OPC_EmitNode0Chain,286,8813
    OPC_EmitNode1Chain,287,8837
    OPC_EmitNode2Chain,288,8861
    OPC_MorphNodeTo,289,8885
    OPC_MorphNodeTo0,291,8980
    OPC_MorphNodeTo1,292,9002
    OPC_MorphNodeTo2,293,9024
    OPC_MorphNodeTo0None,295,9112
    OPC_MorphNodeTo1None,296,9138
    OPC_MorphNodeTo2None,297,9164
    OPC_MorphNodeTo0Chain,298,9190
    OPC_MorphNodeTo1Chain,299,9217
    OPC_MorphNodeTo2Chain,300,9244
    OPC_MorphNodeTo0GlueInput,301,9271
    OPC_MorphNodeTo1GlueInput,302,9302
    OPC_MorphNodeTo2GlueInput,303,9333
    OPC_MorphNodeTo0GlueOutput,304,9364
    OPC_MorphNodeTo1GlueOutput,305,9396
    OPC_MorphNodeTo2GlueOutput,306,9428
    OPC_CompleteMatch,307,9460
    OPC_Coverage309,9542
    OPFL_None 313,9574
    OPFL_Chain 314,9655
    OPFL_GlueInput 315,9711
    OPFL_GlueOutput 316,9766
    OPFL_MemRefs 317,9822
    OPFL_Variadic0 318,9885
    OPFL_Variadic1 319,9960
    OPFL_Variadic2 320,10035
    OPFL_Variadic3 321,10110
    OPFL_Variadic4 322,10185
    OPFL_Variadic5 323,10260
    OPFL_Variadic6 324,10335
    OPFL_VariadicInfo 326,10411
  static inline int getNumFixedFromVariadicInfo(332,10626
  void ReplaceUses(344,10936
  void ReplaceUses(351,11165
  void ReplaceUses(359,11470
  void ReplaceNode(365,11660
  virtual StringRef getPatternForIndex(377,12122
  virtual StringRef getIncludePathForIndex(382,12343
  bool shouldOptForSize(386,12485
  virtual bool CheckPatternPredicate(402,13130
  virtual bool CheckNodePredicate(410,13537
  virtual bool CheckNodePredicateWithOperands(419,13970
  virtual bool CheckComplexPattern(425,14188
  virtual SDValue RunSDNodeXForm(431,14481
  virtual bool ComplexPatternFuncMutatesDAG(440,14810
  std::vector<unsigned> OpcodeOffset;509,17256

/usr/include/llvm/CodeGen/SelectionDAGNodes.h,25460
#define LLVM_CODEGEN_SELECTIONDAGNODES_H19,848
struct SDVTList 79,2490
  const EVT *VTs;VTs80,2508
  unsigned int NumVTs;81,2526
class SDValue 145,5175
  SDNode *Node Node148,5231
  unsigned ResNo 149,5302
  unsigned getResNo(156,5516
  SDNode *getNode(getNode159,5615
  void setNode(162,5680
  inline SDNode *operator->(operator->164,5721
  bool operator==(operator==166,5775
  bool operator!=(operator!=169,5870
  bool operator<(172,5945
  explicit operator bool(operator bool175,6054
  SDValue getValue(179,6122
  MVT getSimpleValueType(190,6451
  TypeSize getValueSizeInBits(199,6755
  uint64_t getScalarValueSizeInBits(203,6843
template<> struct DenseMapInfo<DenseMapInfo239,8361
  static inline SDValue getEmptyKey(240,8403
  static inline SDValue getTombstoneKey(246,8496
  static unsigned getHashValue(252,8593
  static bool isEqual(257,8780
template<> struct simplify_type<simplify_type264,8963
  using SimpleType 265,9006
  static SimpleType getSimplifiedValue(267,9038
template<> struct simplify_type<simplify_type271,9126
  using SimpleType 272,9175
  static SimpleType getSimplifiedValue(274,9217
class SDUse 284,9566
  SDValue Val;286,9614
  SDNode *User User288,9666
  SDUse **Prev Prev291,9783
  SDUse *Next Next292,9809
  operator const operator const300,10022
  const SDValue &get(get304,10171
  SDNode *getUser(getUser307,10271
  const SDNode *getUser(getUser308,10308
  SDUse *getNext(getNext311,10400
  SDNode *getNode(getNode314,10491
  unsigned getResNo(316,10592
  EVT getValueType(318,10700
  bool operator==(operator==321,10807
  bool operator!=(operator!=326,10925
  bool operator<(331,11042
  void setUser(341,11268
  void addToList(353,11760
  void removeFromList(360,11885
template<> struct simplify_type<simplify_type368,12090
  using SimpleType 369,12131
  static SimpleType getSimplifiedValue(371,12163
struct SDNodeFlags 379,12419
  bool NoUnsignedWrap 381,12449
  bool NoSignedWrap 382,12476
  bool Exact 383,12501
  bool Disjoint 384,12519
  bool NonNeg 385,12540
  bool NoNaNs 386,12559
  bool NoInfs 387,12578
  bool NoSignedZeros 388,12597
  bool AllowReciprocal 389,12623
  bool AllowContract 390,12651
  bool ApproximateFuncs 391,12677
  bool AllowReassociation 392,12706
  bool NoFPExcept 399,13071
  bool Unpredictable 401,13164
  SDNodeFlags(405,13259
  void copyFMF(413,13662
  void setNoUnsignedWrap(424,14060
  void setNoSignedWrap(425,14117
  void setExact(426,14170
  void setDisjoint(427,14209
  void setNonNeg(428,14254
  void setNoNaNs(429,14295
  void setNoInfs(430,14336
  void setNoSignedZeros(431,14377
  void setAllowReciprocal(432,14432
  void setAllowContract(433,14491
  void setApproximateFuncs(434,14546
  void setAllowReassociation(435,14607
  void setNoFPExcept(436,14672
  void setUnpredictable(437,14721
  bool hasNoUnsignedWrap(440,14817
  bool hasNoSignedWrap(441,14877
  bool hasExact(442,14933
  bool hasDisjoint(443,14975
  bool hasNonNeg(444,15023
  bool hasNoNaNs(445,15067
  bool hasNoInfs(446,15111
  bool hasNoSignedZeros(447,15155
  bool hasAllowReciprocal(448,15213
  bool hasAllowContract(449,15275
  bool hasApproximateFuncs(450,15333
  bool hasAllowReassociation(451,15397
  bool hasNoFPExcept(452,15465
  bool hasUnpredictable(453,15517
  void intersectWith(457,15702
class SDNode 477,16341
  int32_t NodeType;480,16461
  uint16_t PersistentId 487,16772
#define BEGIN_TWO_BYTE_PACK(497,17189
#define END_TWO_BYTE_PACK(498,17238
#define BEGIN_TWO_BYTE_PACK(500,17293
#define END_TWO_BYTE_PACK(501,17323
  class SDNodeBitfields 505,17381
    uint16_t HasDebugValue 511,17529
    uint16_t IsMemIntrinsic 512,17561
    uint16_t IsDivergent 513,17594
  enum { NumSDNodeBits 515,17629
  class ConstantSDNodeBitfields 517,17660
    uint16_t : NumSDNodeBits;520,17728
    uint16_t IsOpaque 522,17759
  class MemSDNodeBitfields 525,17792
    uint16_t : NumSDNodeBits;530,17918
    uint16_t IsVolatile 532,17949
    uint16_t IsNonTemporal 533,17978
    uint16_t IsDereferenceable 534,18010
    uint16_t IsInvariant 535,18046
  enum { NumMemSDNodeBits 537,18081
  class LSBaseSDNodeBitfields 539,18131
    uint16_t : NumMemSDNodeBits;546,18359
    uint16_t AddressingMode 555,18819
  enum { NumLSBaseSDNodeBits 557,18857
  class LoadSDNodeBitfields 559,18913
    uint16_t : NumLSBaseSDNodeBits;567,19147
    uint16_t ExtTy 569,19184
    uint16_t IsExpanding 570,19233
  class StoreSDNodeBitfields 573,19269
    uint16_t : NumLSBaseSDNodeBits;581,19510
    uint16_t IsTruncating 583,19547
    uint16_t IsCompressing 584,19578
    char RawSDNodeBits[RawSDNodeBits588,19626
    SDNodeBitfields SDNodeBits;589,19668
    ConstantSDNodeBitfields ConstantSDNodeBits;590,19700
    MemSDNodeBitfields MemSDNodeBits;591,19748
    LSBaseSDNodeBitfields LSBaseSDNodeBits;592,19786
    LoadSDNodeBitfields LoadSDNodeBits;593,19830
    StoreSDNodeBitfields StoreSDNodeBits;594,19870
#undef BEGIN_TWO_BYTE_PACK597,19937
#undef END_TWO_BYTE_PACK598,19964
  int NodeId 616,20821
  SDUse *OperandList OperandList619,20891
  const EVT *ValueList;ValueList623,21032
  SDUse *UseList UseList626,21093
  unsigned short NumOperands 629,21177
  unsigned short NumValues;630,21211
  unsigned IROrder;637,21518
  DebugLoc debugLoc;640,21570
  SDNodeFlags Flags;645,21691
  uint32_t CFIType 647,21713
  unsigned getOpcode(658,22105
  bool isTargetOpcode(662,22260
  bool isTargetStrictFPOpcode(669,22637
  bool isTargetMemoryOpcode(676,22902
  bool isUndef(681,23059
  bool isMemIntrinsic(688,23458
  bool isStrictFPOpcode(695,23693
#define DAG_INSTRUCTION(701,23852
  bool isVPOpcode(709,24093
  bool isMachineOpcode(713,24264
  unsigned getMachineOpcode(718,24476
  bool getHasDebugValue(723,24604
  void setHasDebugValue(724,24673
  bool isDivergent(726,24740
  bool use_empty(729,24856
  bool hasOneUse(732,24973
  size_t use_size(736,25147
  int getNodeId(739,25257
  void setNodeId(742,25327
  unsigned getIROrder(745,25402
  void setIROrder(748,25482
  const DebugLoc &getDebugLoc(getDebugLoc751,25577
  void setDebugLoc(755,25740
  class use_iterator 759,25899
    explicit use_iterator(764,25974
    bool operator==(operator==777,26379
    bool operator!=(operator!=778,26451
    bool atEnd(783,26603
    use_iterator &operator++(operator++786,26704
    use_iterator operator++(792,26869
    SDNode *operator*(operator*797,27041
    SDNode *operator->(operator->802,27164
    SDUse &getUse(getUse804,27220
    unsigned getOperandNo(807,27319
  use_iterator use_begin(814,27549
  static use_iterator use_end(818,27623
  inline iterator_range<use_iterator> uses(820,27690
  inline iterator_range<use_iterator> uses(823,27788
  bool isPredecessorOf(844,28634
  static bool hasPredecessorHelper(863,29620
  unsigned getNumOperands(922,32040
  static constexpr size_t getMaxNumOperands(925,32167
  const SDValue &getOperand(getOperand941,32795
  using op_iterator 946,32942
  op_iterator op_begin(948,32974
  op_iterator op_end(949,33029
  ArrayRef<SDUse> ops(950,33094
  struct value_op_iterator953,33234
    explicit value_op_iterator(958,33510
    const SDValue &operator*(operator*961,33598
  iterator_range<value_op_iterator> op_values(964,33662
  SDVTList getVTList(969,33828
  SDNode *getGluedNode(getGluedNode976,34039
  SDNode *getGluedUser(getGluedUser985,34371
  SDNodeFlags getFlags(992,34578
  void setFlags(993,34627
  void setCFIType(999,34873
  uint32_t getCFIType(1000,34926
  unsigned getNumValues(1003,35046
  EVT getValueType(1006,35146
  MVT getSimpleValueType(1012,35344
  TypeSize getValueSizeInBits(1021,35677
  using value_iterator 1025,35784
  value_iterator value_begin(1027,35823
  value_iterator value_end(1028,35882
  iterator_range<value_iterator> values(1029,35949
  void addUse(1092,38599
  static SDVTList getSDVTList(1095,38662
  SDNode(1104,38941
class SDLoc 1126,40017
  DebugLoc DL;1128,40040
  int IROrder 1129,40055
  SDLoc(1133,40104
  SDLoc(1134,40181
  SDLoc(1135,40230
  unsigned getIROrder(1141,40376
  const DebugLoc &getDebugLoc(getDebugLoc1142,40426
inline SDValue::SDValue(1147,40535
inline unsigned SDValue::getOpcode(getOpcode1157,40987
inline EVT SDValue::getValueType(getValueType1161,41063
inline unsigned SDValue::getNumOperands(getNumOperands1165,41145
inline const SDValue &SDValue::getOperand(getOperand1169,41231
inline uint64_t SDValue::getConstantOperandVal(getConstantOperandVal1173,41326
inline const APInt &SDValue::getConstantOperandAPInt(getConstantOperandAPInt1177,41437
inline bool SDValue::isTargetOpcode(isTargetOpcode1181,41556
inline bool SDValue::isTargetMemoryOpcode(isTargetMemoryOpcode1185,41638
inline bool SDValue::isMachineOpcode(isMachineOpcode1189,41732
inline unsigned SDValue::getMachineOpcode(getMachineOpcode1193,41816
inline bool SDValue::isUndef(isUndef1197,41906
inline bool SDValue::use_empty(use_empty1201,41974
inline bool SDValue::hasOneUse(hasOneUse1205,42059
inline const DebugLoc &SDValue::getDebugLoc(getDebugLoc1209,42145
inline void SDValue::dump(dump1213,42232
inline void SDValue::dump(dump1217,42294
inline void SDValue::dumpr(dumpr1221,42378
inline void SDValue::dumpr(dumpr1225,42442
inline void SDUse::set(set1231,42578
inline void SDUse::setInitial(setInitial1238,42715
inline void SDUse::setNode(setNode1243,42799
class HandleSDNode 1253,43176
  SDUse Op;1254,43213
  explicit HandleSDNode(1257,43234
  const SDValue &getValue(getValue1274,43860
class AddrSpaceCastSDNode 1277,43913
  unsigned SrcAddrSpace;1279,43966
  unsigned DestAddrSpace;1280,43991
  unsigned getSrcAddressSpace(1286,44149
  unsigned getDestAddressSpace(1287,44212
  static bool classof(1289,44278
class MemSDNode 1295,44437
  EVT MemoryVT;1298,44508
  MachineMemOperand *MMO;MMO1302,44572
  bool readMem(1308,44732
  bool writeMem(1309,44781
  Align getOriginalAlign(1312,44893
  Align getAlign(1313,44958
  unsigned getRawSubclassData(1321,45408
      char RawSDNodeBits[RawSDNodeBits1324,45479
      SDNodeBitfields SDNodeBits;1325,45523
  bool isVolatile(1334,45793
  bool isNonTemporal(1335,45856
  bool isDereferenceable(1336,45925
  bool isInvariant(1337,46002
  int64_t getSrcValueOffset(1340,46125
  AAMDNodes getAAInfo(1343,46249
  const MDNode *getRanges(getRanges1346,46366
  SyncScope::ID getSyncScopeID(1349,46500
  AtomicOrdering getSuccessOrdering(1354,46749
  AtomicOrdering getMergedOrdering(1361,47064
  bool isAtomic(1364,47220
  bool isUnordered(1369,47441
  bool isSimple(1372,47574
  EVT getMemoryVT(1375,47686
  MachineMemOperand *getMemOperand(getMemOperand1379,47836
  const MachinePointerInfo &getPointerInfo(getPointerInfo1381,47896
  unsigned getAddressSpace(1386,48046
  void refineAlignment(1394,48371
  const SDValue &getChain(getChain1398,48468
  const SDValue &getBasePtr(getBasePtr1400,48529
  static bool classof(1418,48956
class AtomicSDNode 1467,50423
  AtomicSDNode(1469,50471
  const SDValue &getBasePtr(getBasePtr1476,50800
  const SDValue &getVal(getVal1479,50919
  bool isCompareAndSwap(1485,51129
  AtomicOrdering getFailureOrdering(1493,51402
  static bool classof(1499,51595
class MemIntrinsicSDNode 1529,53166
  MemIntrinsicSDNode(1531,53220
  static bool classof(1538,53504
class ShuffleVectorSDNode 1555,54380
  const int *Mask;Mask1558,54559
  ShuffleVectorSDNode(1563,54620
  ArrayRef<int> getMask(1567,54785
  int getMaskElt(1572,54908
  bool isSplat(1577,55055
  int getSplatIndex(1579,55126
  static void commuteMask(1595,55705
  static bool classof(1608,56032
class ConstantSDNode 1613,56131
  const ConstantInt *Value;Value1616,56200
  ConstantSDNode(1618,56229
  const ConstantInt *getConstantIntValue(getConstantIntValue1626,56497
  const APInt &getAPIntValue(getAPIntValue1627,56564
  uint64_t getZExtValue(1628,56631
  int64_t getSExtValue(1629,56697
  uint64_t getLimitedValue(1630,56762
  MaybeAlign getMaybeAlignValue(1633,56866
  Align getAlignValue(1634,56946
  bool isOne(1636,57012
  bool isZero(1637,57060
  bool isAllOnes(1638,57110
  bool isMaxSignedValue(1639,57167
  bool isMinSignedValue(1640,57235
  bool isOpaque(1642,57304
  static bool classof(1644,57369
uint64_t SDNode::getConstantOperandVal(getConstantOperandVal1650,57514
uint64_t SDNode::getAsZExtVal(getAsZExtVal1654,57642
const APInt &SDNode::getConstantOperandAPInt(getConstantOperandAPInt1658,57738
const APInt &SDNode::getAsAPIntVal(getAsAPIntVal1662,57873
class ConstantFPSDNode 1666,57975
  const ConstantFP *Value;Value1669,58046
  ConstantFPSDNode(1671,58074
  const APFloat& getValueAPF(1677,58285
  const ConstantFP *getConstantFPValue(getConstantFPValue1678,58355
  bool isZero(1681,58482
  bool isNaN(1684,58574
  bool isInfinity(1687,58669
  bool isNegative(1690,58772
  bool isExactlyValue(1700,59298
  static bool classof(1707,59505
inline bool isIntOrFPConstant(1794,63337
class GlobalAddressSDNode 1798,63444
  const GlobalValue *TheGlobal;TheGlobal1801,63518
  int64_t Offset;1802,63550
  unsigned TargetFlags;1803,63568
  const GlobalValue *getGlobal(getGlobal1810,63774
  int64_t getOffset(1811,63835
  unsigned getTargetFlags(1812,63882
  static bool classof(1816,64038
class FrameIndexSDNode 1824,64307
  int FI;1827,64378
  FrameIndexSDNode(1829,64389
  int getIndex(1835,64561
  static bool classof(1837,64600
class LifetimeSDNode 1845,64904
  int64_t Size;1847,64972
  int64_t Offset;1848,64988
  LifetimeSDNode(1850,65035
  int64_t getFrameIndex(1854,65244
  bool hasOffset(1858,65345
  int64_t getOffset(1859,65394
  int64_t getSize(1863,65495
  static bool classof(1869,65634
class PseudoProbeSDNode 1879,66102
  uint64_t Guid;1881,66173
  uint64_t Index;1882,66190
  uint32_t Attributes;1883,66208
  PseudoProbeSDNode(1885,66232
  uint64_t getGuid(1891,66488
  uint64_t getIndex(1892,66532
  uint32_t getAttributes(1893,66578
  static bool classof(1896,66676
class JumpTableSDNode 1901,66773
  int JTI;1904,66843
  unsigned TargetFlags;1905,66854
  JumpTableSDNode(1907,66879
  int getIndex(1913,67081
  unsigned getTargetFlags(1914,67120
  static bool classof(1916,67179
class ConstantPoolSDNode 1922,67326
    const Constant *ConstVal;ConstVal1926,67409
    MachineConstantPoolValue *MachineCPVal;MachineCPVal1927,67439
  } Val;1928,67483
  int Offset;1929,67492
  Align Alignment;1930,67561
  unsigned TargetFlags;1931,67620
  ConstantPoolSDNode(1933,67645
  ConstantPoolSDNode(1942,68021
  bool isMachineConstantPoolEntry(1953,68469
  const Constant *getConstVal(getConstVal1957,68541
  MachineConstantPoolValue *getMachineCPVal(getMachineCPVal1962,68683
  int getOffset(1967,68842
  Align getAlign(1973,69057
  unsigned getTargetFlags(1974,69104
  static bool classof(1978,69189
class TargetIndexSDNode 1985,69392
  unsigned TargetFlags;1988,69464
  int Index;1989,69488
  int64_t Offset;1990,69501
  TargetIndexSDNode(1993,69528
  unsigned getTargetFlags(1997,69710
  int getIndex(1998,69768
  int64_t getOffset(1999,69809
  static bool classof(2001,69857
class BasicBlockSDNode 2006,69953
  MachineBasicBlock *MBB;MBB2009,70024
  explicit BasicBlockSDNode(2014,70242
  MachineBasicBlock *getBasicBlock(getBasicBlock2019,70388
  static bool classof(2021,70448
class BuildVectorSDNode 2027,70609
  std::optional<std::optional2145,76369
  static bool classof(2156,76959
class SrcValueSDNode 2165,77233
  const Value *V;V2168,77302
  explicit SrcValueSDNode(2171,77366
  const Value *getValue(getValue2176,77528
  static bool classof(2178,77575
class MDNodeSDNode 2183,77668
  const MDNode *MD;MD2186,77735
  explicit MDNodeSDNode(2188,77756
  const MDNode *getMD(getMD2193,77891
  static bool classof(2195,77937
class RegisterSDNode 2200,78035
  Register Reg;2203,78104
  RegisterSDNode(2205,78121
  Register getReg(2209,78242
  static bool classof(2211,78285
class RegisterMaskSDNode 2216,78378
  const uint32_t *RegMask;RegMask2220,78505
  RegisterMaskSDNode(2222,78533
  const uint32_t *getRegMask(getRegMask2227,78683
  static bool classof(2229,78741
class BlockAddressSDNode 2234,78838
  const BlockAddress *BA;BA2237,78911
  int64_t Offset;2238,78937
  unsigned TargetFlags;2239,78955
  BlockAddressSDNode(2241,78980
  const BlockAddress *getBlockAddress(getBlockAddress2247,79215
  int64_t getOffset(2248,79276
  unsigned getTargetFlags(2249,79323
  static bool classof(2251,79382
class LabelSDNode 2257,79535
  MCSymbol *Label;Label2260,79601
  LabelSDNode(2262,79621
  MCSymbol *getLabel(getLabel2268,79849
  static bool classof(2270,79897
class ExternalSymbolSDNode 2276,80044
  const char *Symbol;Symbol2279,80119
  unsigned TargetFlags;2280,80141
  ExternalSymbolSDNode(2282,80166
  const char *getSymbol(getSymbol2288,80414
  unsigned getTargetFlags(2289,80465
  static bool classof(2291,80524
class MCSymbolSDNode 2297,80681
  MCSymbol *Symbol;Symbol2300,80750
  MCSymbolSDNode(2302,80771
  MCSymbol *getMCSymbol(getMCSymbol2306,80904
  static bool classof(2308,80956
class CondCodeSDNode 2313,81049
  ISD::CondCode Condition;2316,81118
  explicit CondCodeSDNode(2318,81146
  ISD::CondCode get(2323,81295
  static bool classof(2325,81346
class VTSDNode 2332,81534
  EVT ValueType;2335,81597
  explicit VTSDNode(2337,81615
  EVT getVT(2342,81745
  static bool classof(2344,81788
class LSBaseSDNode 2350,81928
  LSBaseSDNode(2352,81976
  const SDValue &getOffset(getOffset2360,82315
  ISD::MemIndexedMode getAddressingMode(2366,82529
  bool isIndexed(2371,82722
  bool isUnindexed(2374,82862
  static bool classof(2376,82940
class LoadSDNode 2383,83125
  LoadSDNode(2386,83196
  ISD::LoadExtType getExtensionType(2398,83707
  const SDValue &getBasePtr(getBasePtr2402,83822
  const SDValue &getOffset(getOffset2403,83884
  static bool classof(2405,83946
class StoreSDNode 2411,84089
  StoreSDNode(2414,84161
  bool isTruncatingStore(2427,84801
  void setTruncatingStore(2428,84875
  const SDValue &getValue(getValue2432,84972
  const SDValue &getBasePtr(getBasePtr2433,85032
  const SDValue &getOffset(getOffset2434,85094
  static bool classof(2436,85156
class VPBaseLoadStoreSDNode 2443,85379
  VPBaseLoadStoreSDNode(2447,85466
  const SDValue &getOffset(getOffset2462,86227
  const SDValue &getBasePtr(getBasePtr2468,86457
  const SDValue &getMask(getMask2474,86688
  const SDValue &getVectorLength(getVectorLength2487,87035
  ISD::MemIndexedMode getAddressingMode(2503,87506
  bool isIndexed(2508,87699
  bool isUnindexed(2511,87839
  static bool classof(2513,87917
class VPLoadSDNode 2521,88228
  VPLoadSDNode(2525,88318
  ISD::LoadExtType getExtensionType(2533,88673
  const SDValue &getBasePtr(getBasePtr2537,88788
  const SDValue &getOffset(getOffset2538,88850
  const SDValue &getMask(getMask2539,88911
  const SDValue &getVectorLength(getVectorLength2540,88970
  static bool classof(2542,89038
  bool isExpandingLoad(2545,89126
class VPStridedLoadSDNode 2549,89274
  VPStridedLoadSDNode(2553,89371
  ISD::LoadExtType getExtensionType(2562,89798
  const SDValue &getBasePtr(getBasePtr2566,89913
  const SDValue &getOffset(getOffset2567,89975
  const SDValue &getStride(getStride2568,90036
  const SDValue &getMask(getMask2569,90097
  const SDValue &getVectorLength(getVectorLength2570,90156
  static bool classof(2572,90224
  bool isExpandingLoad(2575,90333
class VPStoreSDNode 2579,90459
  VPStoreSDNode(2583,90550
  bool isTruncatingStore(2594,91127
  bool isCompressingStore(2600,91462
  const SDValue &getValue(getValue2602,91539
  const SDValue &getBasePtr(getBasePtr2603,91599
  const SDValue &getOffset(getOffset2604,91661
  const SDValue &getMask(getMask2605,91722
  const SDValue &getVectorLength(getVectorLength2606,91781
  static bool classof(2608,91849
class VPStridedStoreSDNode 2614,92017
  VPStridedStoreSDNode(2618,92115
  bool isTruncatingStore(2630,92764
  bool isCompressingStore(2636,93099
  const SDValue &getValue(getValue2638,93176
  const SDValue &getBasePtr(getBasePtr2639,93236
  const SDValue &getOffset(getOffset2640,93298
  const SDValue &getStride(getStride2641,93359
  const SDValue &getMask(getMask2642,93420
  const SDValue &getVectorLength(getVectorLength2643,93479
  static bool classof(2645,93547
class MaskedLoadStoreSDNode 2651,93725
  MaskedLoadStoreSDNode(2655,93812
  const SDValue &getOffset(getOffset2667,94354
  const SDValue &getMask(getMask2670,94453
  ISD::MemIndexedMode getAddressingMode(2676,94666
  bool isIndexed(2681,94859
  bool isUnindexed(2684,94999
  static bool classof(2686,95077
class MaskedLoadSDNode 2693,95261
  MaskedLoadSDNode(2697,95355
  ISD::LoadExtType getExtensionType(2705,95720
  const SDValue &getBasePtr(getBasePtr2709,95835
  const SDValue &getOffset(getOffset2710,95897
  const SDValue &getMask(getMask2711,95958
  const SDValue &getPassThru(getPassThru2712,96017
  static bool classof(2714,96081
  bool isExpandingLoad(2718,96168
class MaskedStoreSDNode 2722,96293
  MaskedStoreSDNode(2726,96388
  bool isTruncatingStore(2737,96986
  bool isCompressingStore(2743,97321
  const SDValue &getValue(getValue2745,97398
  const SDValue &getBasePtr(getBasePtr2746,97458
  const SDValue &getOffset(getOffset2747,97520
  const SDValue &getMask(getMask2748,97581
  static bool classof(2750,97641
class VPGatherScatterSDNode 2758,97814
  VPGatherScatterSDNode(2762,97901
  ISD::MemIndexType getIndexType(2771,98345
  bool isIndexScaled(2774,98468
  bool isIndexSigned(2777,98558
  const SDValue &getBasePtr(getBasePtr2783,98852
  const SDValue &getIndex(getIndex2786,98958
  const SDValue &getScale(getScale2789,99062
  const SDValue &getMask(getMask2792,99166
  const SDValue &getVectorLength(getVectorLength2795,99269
  static bool classof(2799,99381
class VPGatherSDNode 2807,99581
  VPGatherSDNode(2811,99673
  static bool classof(2816,99940
class VPScatterSDNode 2823,100093
  VPScatterSDNode(2827,100186
  const SDValue &getValue(getValue2832,100456
  static bool classof(2834,100517
class MaskedGatherScatterSDNode 2842,100690
  MaskedGatherScatterSDNode(2846,100781
  ISD::MemIndexType getIndexType(2855,101237
  bool isIndexScaled(2858,101360
  bool isIndexSigned(2861,101450
  const SDValue &getBasePtr(getBasePtr2867,101750
  const SDValue &getIndex(getIndex2868,101812
  const SDValue &getMask(getMask2869,101874
  const SDValue &getScale(getScale2870,101936
  static bool classof(2872,101999
class MaskedGatherSDNode 2880,102193
  MaskedGatherSDNode(2884,102293
  const SDValue &getPassThru(getPassThru2892,102652
  ISD::LoadExtType getExtensionType(2894,102716
  static bool classof(2898,102818
class MaskedScatterSDNode 2905,102967
  MaskedScatterSDNode(2909,103068
  bool isTruncatingStore(2920,103653
  const SDValue &getValue(getValue2922,103728
  static bool classof(2924,103789
class FPStateAccessSDNode 2929,103882
  FPStateAccessSDNode(2933,103967
  static bool classof(2940,104296
class MachineSDNode 2953,104819
  MachineSDNode(2957,104896
  PointerUnion<PointerUnion2974,105884
  PointerUnion<MachineMemOperand *, MachineMemOperand **> MemRefs 2974,105884
  int NumMemRefs 2980,106249
  using mmo_iterator 2983,106280
  ArrayRef<MachineMemOperand *> memoperands(2985,106351
  mmo_iterator memoperands_begin(2995,106678
  mmo_iterator memoperands_end(2996,106753
  bool memoperands_empty(2997,106824
  void clearMemRefs(3000,106946
  static bool classof(3005,107018
class AssertAlignSDNode 3012,107208
  Align Alignment;3013,107250
  AssertAlignSDNode(3016,107278
  Align getAlign(3019,107430
  static bool classof(3021,107478
class SDNodeIterator 3026,107574
  const SDNode *Node;Node3027,107597
  unsigned Operand;3028,107619
  SDNodeIterator(3030,107640
  using iterator_category 3033,107722
  using value_type 3034,107777
  using difference_type 3035,107806
  using pointer 3036,107848
  using reference 3037,107880
  bool operator==(operator==3039,107915
  bool operator!=(operator!=3042,108003
  pointer operator*(3044,108080
  pointer operator->(3047,108162
  SDNodeIterator& operator++(3049,108216
  SDNodeIterator operator++(3053,108317
  size_t operator-(3056,108426
  static SDNodeIterator begin(3062,108613
  static SDNodeIterator end 3063,108693
  unsigned getOperand(3067,108798
  const SDNode *getNode(getNode3068,108848
template <> struct GraphTraits<GraphTraits3071,108901
  using NodeRef 3072,108943
  using ChildIteratorType 3073,108971
  static NodeRef getEntryNode(3075,109016
  static ChildIteratorType child_begin(3077,109072
  static ChildIteratorType child_end(3081,109166
using LargestSDNode 3090,109463
using MostAlignedSDNode 3096,109796
namespace ISD 3098,109844
  inline bool isNormalLoad(3101,109941
  inline bool isNON_EXTLoad(3108,110215
  inline bool isEXTLoad(3114,110423
  inline bool isSEXTLoad(3120,110624
  inline bool isZEXTLoad(3126,110827
  inline bool isUNINDEXEDLoad(3132,111037
  inline bool isNormalStore(3139,111279
  inline bool isUNINDEXEDStore(3146,111535
  inline bool matchUnaryPredicate(3160,112154
  matchUnaryFpPredicate(3168,112487
  inline bool isOverflowIntrOpRes(3185,113338

/usr/include/llvm/CodeGen/SelectionDAGTargetInfo.h,843
#define LLVM_CODEGEN_SELECTIONDAGTARGETINFO_H16,669
class SelectionDAGTargetInfo 31,1093
  virtual ~SelectionDAGTargetInfo(36,1324
  virtual SDValue EmitTargetCodeForMemcpy(51,2232
  virtual SDValue EmitTargetCodeForMemmove(67,3165
  virtual SDValue EmitTargetCodeForMemset(81,3924
  virtual std::pair<std::pair94,4656
  EmitTargetCodeForMemcmp(95,4694
  virtual std::pair<std::pair106,5278
  EmitTargetCodeForMemchr(107,5316
  virtual std::pair<std::pair119,5962
  EmitTargetCodeForStrcpy(120,6000
  virtual std::pair<std::pair131,6588
  EmitTargetCodeForStrcmp(132,6626
  virtual std::pair<std::pair139,6931
  EmitTargetCodeForStrlen(140,6969
  virtual std::pair<std::pair145,7178
  EmitTargetCodeForStrnlen(146,7216
  virtual SDValue EmitTargetCodeForSetTag(152,7473
  virtual bool disableGenericCombines(161,7913

/usr/include/llvm/CodeGen/ShadowStackGCLowering.h,123
#define LLVM_CODEGEN_SHADOWSTACKGCLOWERING_H10,415
class ShadowStackGCLoweringPass16,513
  PreservedAnalyses run(19,609

/usr/include/llvm/CodeGen/SjLjEHPrepare.h,182
#define LLVM_CODEGEN_SJLJEHPREPARE_H10,407
class SjLjEHPreparePass 18,519
  const TargetMachine *TM;TM19,587
  explicit SjLjEHPreparePass(22,623
  PreservedAnalyses run(23,689

/usr/include/llvm/CodeGen/SlotIndexes.h,2978
#define LLVM_CODEGEN_SLOTINDEXES_H19,875
  class IndexListEntry 45,1671
    MachineInstr *mi;mi46,1732
    unsigned index;47,1754
    IndexListEntry(50,1785
    MachineInstr* getInstr(52,1865
    void setInstr(53,1915
    unsigned getIndex(57,1981
    void setIndex(58,2029
  class SlotIndex 68,2279
    enum Slot 71,2330
      Slot_Block,75,2532
      Slot_EarlyClobber,81,2805
      Slot_Register,85,2953
      Slot_Dead,90,3157
      Slot_Count92,3175
    PointerIntPair<IndexListEntry*IndexListEntry95,3200
    PointerIntPair<IndexListEntry*, 2, unsigned> lie;95,3200
    IndexListEntry* listEntry(97,3255
    unsigned getIndex(102,3398
    Slot getSlot(107,3532
      InstrDist 115,3778
    SlotIndex(124,4058
    SlotIndex(127,4205
    bool isValid(133,4494
    explicit operator bool(138,4598
    void print(141,4707
    static bool isSameInstr(179,5993
    static bool isEarlierInstr(185,6243
    static bool isEarlierEqualInstr(191,6510
    int distance(196,6679
    int getApproxInstrDistance(206,7192
    bool isBlock(212,7413
    bool isEarlyClobber(215,7547
    bool isRegister(219,7774
    bool isDead(222,7905
    SlotIndex getBaseIndex(227,8152
    SlotIndex getBoundaryIndex(234,8440
    SlotIndex getRegSlot(240,8648
    SlotIndex getDeadSlot(245,8850
    SlotIndex getNextSlot(255,9345
    SlotIndex getNextIndex(265,9692
    SlotIndex getPrevSlot(275,10223
    SlotIndex getPrevIndex(285,10574
  class SlotIndexes 300,10942
    BumpPtrAllocator ileAllocator;303,11037
    IndexList indexList;306,11118
    Mi2IndexMap mi2iMap;311,11247
    SmallVector<SmallVector314,11334
    SmallVector<std::pair<SlotIndex, SlotIndex>, 8> MBBRanges;314,11334
    SmallVector<SmallVector318,11490
    SmallVector<IdxMBBPair, 8> idx2MBBMap;318,11490
    IndexListEntry* createEntry(320,11534
    static char ID;334,11948
    SlotIndex getZeroIndex(354,12525
    SlotIndex getLastIndex(360,12752
    bool hasIndex(366,12940
    SlotIndex getInstructionIndex(371,13094
    MachineInstr* getInstructionFromIndex(389,14063
    SlotIndex getNextNonNullIndex(395,14279
    SlotIndex getIndexBefore(408,14802
    SlotIndex getIndexAfter(425,15459
    const std::pair<std::pair440,16006
    getMBBRange(441,16050
    const std::pair<std::pair446,16187
    getMBBRange(447,16231
    SlotIndex getMBBStartIdx(452,16401
    SlotIndex getMBBStartIdx(457,16554
    SlotIndex getMBBEndIdx(462,16729
    SlotIndex getMBBEndIdx(467,16880
    MBBIndexIterator getMBBLowerBound(478,17386
    MBBIndexIterator getMBBLowerBound(484,17662
    MBBIndexIterator getMBBUpperBound(490,17884
    MBBIndexIterator MBBIndexBegin(497,18170
    MBBIndexIterator MBBIndexEnd(502,18313
    MachineBasicBlock* getMBBFromIndex(507,18458
    SlotIndex insertMachineInstrInMaps(523,19139
    SlotIndex replaceMachineInstrInMaps(580,21810
    void insertMBBInMaps(598,22652
  struct IntervalMapInfo<IntervalMapInfo633,24022

/usr/include/llvm/CodeGen/StackMaps.h,3140
#define LLVM_CODEGEN_STACKMAPS_H10,403
class StackMapOpers 35,928
  enum { IDPos,38,993
  enum { IDPos, NBytesPos 38,993
  const MachineInstr* MI;41,1032
  explicit StackMapOpers(44,1067
  uint64_t getID(47,1161
  uint32_t getNumPatchBytes(50,1305
  unsigned getVarIdx(56,1505
class PatchPointOpers 76,2119
  enum { IDPos,79,2186
  enum { IDPos, NBytesPos,79,2186
  enum { IDPos, NBytesPos, TargetPos,79,2186
  enum { IDPos, NBytesPos, TargetPos, NArgPos,79,2186
  enum { IDPos, NBytesPos, TargetPos, NArgPos, CCPos,79,2186
  enum { IDPos, NBytesPos, TargetPos, NArgPos, CCPos, MetaEnd 79,2186
  const MachineInstr *MI;MI82,2261
  bool HasDef;83,2287
  unsigned getMetaIdx(85,2303
  const MachineOperand &getMetaOper(getMetaOper90,2456
  bool isAnyReg(97,2624
  bool hasDef(98,2702
  uint64_t getID(101,2790
  uint32_t getNumPatchBytes(104,2933
  const MachineOperand &getCallTarget(getCallTarget109,3069
  CallingConv::ID getCallingConv(114,3194
  unsigned getArgIdx(118,3282
  uint32_t getNumCallArgs(121,3389
  unsigned getVarIdx(127,3597
  unsigned getStackMapStartIdx(133,3827
class StatepointOpers 158,4829
  enum { IDPos,166,5203
  enum { IDPos, NBytesPos,166,5203
  enum { IDPos, NBytesPos, NCallArgsPos,166,5203
  enum { IDPos, NBytesPos, NCallArgsPos, CallTargetPos,166,5203
  enum { IDPos, NBytesPos, NCallArgsPos, CallTargetPos, MetaEnd 166,5203
  enum { CCOffset 170,5401
  enum { CCOffset = 1, FlagsOffset 170,5401
  enum { CCOffset = 1, FlagsOffset = 3, NumDeoptOperandsOffset 170,5401
  explicit StatepointOpers(173,5480
  unsigned getIDPos(178,5621
  unsigned getNBytesPos(181,5722
  unsigned getNCallArgsPos(184,5834
  unsigned getVarIdx(188,6029
  unsigned getCCIdx(193,6192
  unsigned getFlagsIdx(196,6290
  unsigned getNumDeoptArgsIdx(199,6411
  uint64_t getID(204,6551
  uint32_t getNumPatchBytes(207,6707
  const MachineOperand &getCallTarget(getCallTarget212,6855
  CallingConv::ID getCallingConv(217,6997
  uint64_t getFlags(222,7128
  uint64_t getNumDeoptArgs(224,7208
  const MachineInstr *MI;MI255,8227
  unsigned NumDefs;256,8253
class StackMaps 259,8277
  struct Location 261,8303
    enum LocationType 262,8323
      Unprocessed,263,8358
      Register,264,8377
      Direct,265,8393
      Indirect,266,8407
      Constant,267,8423
      ConstantIndex268,8439
    Location(276,8599
  struct LiveOutReg 280,8744
    LiveOutReg(286,8870
  using OpType 293,9157
  void reset(301,9454
  using LocationVec 307,9541
  using LiveOutVec 308,9589
  using ConstantPool 309,9638
  struct FunctionInfo 311,9693
    explicit FunctionInfo(316,9806
  struct CallsiteInfo 319,9884
    LocationVec Locations;322,9971
    LiveOutVec LiveOuts;323,9998
    CallsiteInfo(326,10054
  using FnInfoMap 332,10305
  using CallsiteInfoList 333,10368
  CallsiteInfoList &getCSInfos(getCSInfos355,11173
  FnInfoMap &getFnInfos(getFnInfos358,11252
  static const char *WSMP;WSMP361,11308
  AsmPrinter &AP;AP363,11336
  CallsiteInfoList CSInfos;364,11354
  ConstantPool ConstPool;365,11382
  FnInfoMap FnInfos;366,11408
  void debug(414,13571

/usr/include/llvm/CodeGen/StackProtector.h,717
#define LLVM_CODEGEN_STACKPROTECTOR_H17,810
class SSPLayoutInfo 34,1177
  SSPLayoutMap Layout;47,1696
class SSPLayoutAnalysis 68,2254
  using SSPLayoutMap 70,2373
  static AnalysisKey Key;72,2426
  using Result 75,2461
class StackProtectorPass 85,2776
  const TargetMachine *TM;TM86,2846
  explicit StackProtectorPass(89,2882
class StackProtector 93,3021
  using SSPLayoutMap 96,3136
  const TargetMachine *TM TM98,3189
  Function *F F100,3227
  Module *M M101,3252
  std::optional<DomTreeUpdater> DTU;103,3276
  SSPLayoutInfo LayoutInfo;105,3314
  static char ID;108,3351
  bool shouldEmitSDCheck(115,3577
  void copyToMachineFrameInfo(121,3728
  static bool requiresStackProtector(127,3938

/usr/include/llvm/CodeGen/SwitchLoweringUtils.h,4056
#define LLVM_CODEGEN_SWITCHLOWERINGUTILS_H10,413
enum CaseClusterKind 31,875
  CC_Range,34,989
  CC_JumpTable,36,1060
  CC_BitTests38,1133
struct CaseCluster 42,1181
  CaseClusterKind Kind;43,1202
  const ConstantInt *Low,Low44,1226
  const ConstantInt *Low, *High;High44,1226
    MachineBasicBlock *MBB;MBB46,1269
    unsigned JTCasesIndex;47,1297
    unsigned BTCasesIndex;48,1324
  BranchProbability Prob;50,1356
  static CaseCluster range(52,1383
  static CaseCluster jumpTable(63,1669
  static CaseCluster bitTests(74,1984
using CaseClusterVector 86,2299
using CaseClusterIt 87,2351
struct CaseBits 92,2499
  uint64_t Mask 93,2517
  MachineBasicBlock *BB BB94,2538
  unsigned Bits 95,2573
  BranchProbability ExtraProb;96,2594
  CaseBits(99,2650
using CaseBitsVector 104,2812
struct CaseBlock 109,3039
  struct PredInfoPair 111,3088
    CmpInst::Predicate Pred;112,3112
    bool NoCmp;114,3190
    ISD::CondCode CC;120,3406
    struct PredInfoPair PredInfo;121,3428
  const Value *CmpLHS,CmpLHS127,3640
  const Value *CmpLHS, *CmpMHS,CmpMHS127,3640
  const Value *CmpLHS, *CmpMHS, *CmpRHS;CmpRHS127,3640
  MachineBasicBlock *TrueBB,TrueBB130,3738
  MachineBasicBlock *TrueBB, *FalseBB;FalseBB130,3738
  MachineBasicBlock *ThisBB;ThisBB133,3849
  SDLoc DL;137,3963
  DebugLoc DbgLoc;138,3975
  BranchProbability TrueProb,141,4016
  BranchProbability TrueProb, FalseProb;141,4016
  CaseBlock(144,4093
  CaseBlock(154,4660
      : PredInfo({pred, nocmp}), CmpLHS(160,5051
      : PredInfo({pred, nocmp}), CmpLHS(cmplhs), CmpMHS(160,5051
        CmpRHS(161,5119
        CmpRHS(cmprhs), TrueBB(161,5119
        CmpRHS(cmprhs), TrueBB(truebb), FalseBB(161,5119
        CmpRHS(cmprhs), TrueBB(truebb), FalseBB(falsebb), ThisBB(161,5119
        DbgLoc(162,5189
        DbgLoc(dl), TrueProb(162,5189
        DbgLoc(dl), TrueProb(trueprob), FalseProb(162,5189
struct JumpTable 165,5257
  unsigned Reg;168,5366
  unsigned JTI;170,5444
  MachineBasicBlock *MBB;MBB172,5525
  MachineBasicBlock *Default;Default175,5683
  std::optional<SDLoc> SL;178,5792
  JumpTable(180,5840
struct JumpTableHeader 184,6014
  APInt First;185,6039
  APInt Last;186,6054
  const Value *SValue;SValue187,6068
  MachineBasicBlock *HeaderBB;HeaderBB188,6091
  bool Emitted;189,6122
  bool FallthroughUnreachable 190,6138
  JumpTableHeader(192,6178
using JumpTableBlock 197,6386
struct BitTestCase 199,6449
  uint64_t Mask;200,6470
  MachineBasicBlock *ThisBB;ThisBB201,6487
  MachineBasicBlock *TargetBB;TargetBB202,6516
  BranchProbability ExtraProb;203,6547
  BitTestCase(205,6579
using BitTestInfo 210,6753
struct BitTestBlock 212,6803
  APInt First;213,6825
  APInt Range;214,6840
  const Value *SValue;SValue215,6855
  unsigned Reg;216,6878
  MVT RegVT;217,6894
  bool Emitted;218,6907
  bool ContiguousRange;219,6923
  MachineBasicBlock *Parent;Parent220,6947
  MachineBasicBlock *Default;Default221,6976
  BitTestInfo Cases;222,7006
  BranchProbability Prob;223,7027
  BranchProbability DefaultProb;224,7053
  bool FallthroughUnreachable 225,7086
  BitTestBlock(227,7126
struct SwitchWorkListItem 243,7874
  MachineBasicBlock *MBB MBB244,7902
  CaseClusterIt FirstCluster;245,7938
  CaseClusterIt LastCluster;246,7968
  const ConstantInt *GE GE247,7997
  const ConstantInt *LT LT248,8032
  BranchProbability DefaultProb;249,8067
using SwitchWorkList 251,8103
class SwitchLowering 253,8163
  SwitchLowering(255,8194
  void init(257,8268
  std::vector<CaseBlock> SwitchCases;266,8520
  std::vector<JumpTableBlock> JTCases;270,8662
  std::vector<BitTestBlock> BitTestCases;274,8808
  struct SplitWorkItemInfo 301,10100
    CaseClusterIt LastLeft;302,10129
    CaseClusterIt FirstRight;303,10157
    BranchProbability LeftProb;304,10187
    BranchProbability RightProb;305,10219
  const TargetLowering *TLI TLI315,10634
  const TargetMachine *TM TM316,10673
  const DataLayout *DL DL317,10710
  FunctionLoweringInfo &FuncInfo;FuncInfo318,10744

/usr/include/llvm/CodeGen/TargetFrameLowering.h,2897
#define LLVM_CODEGEN_TARGETFRAMELOWERING_H14,576
enum Value 28,885
  Default 29,898
  SGPRSpill 30,913
  ScalableVector 31,930
  WasmLocal 32,952
  NoAlloc 33,969
class TargetFrameLowering 44,1376
  enum StackDirection 46,1412
    StackGrowsUp,47,1436
    StackGrowsDown 48,1512
  struct SpillSlot 52,1665
    unsigned Reg;53,1686
    int Offset;54,1704
  struct DwarfFrameBase 57,1781
    enum FrameBaseKind 60,1948
    enum FrameBaseKind { Register,60,1948
    enum FrameBaseKind { Register, CFA,60,1948
    enum FrameBaseKind { Register, CFA, WasmFrameBase 60,1948
    enum FrameBaseKind { Register, CFA, WasmFrameBase } Kind;60,1948
    struct WasmFrameBase 61,2010
      unsigned Kind;62,2037
      unsigned Index;63,2096
      unsigned Reg;67,2181
      int Offset;69,2240
      struct WasmFrameBase WasmLoc;70,2258
    } Location;71,2294
  StackDirection StackDir;75,2325
  Align StackAlignment;76,2352
  Align TransientStackAlignment;77,2376
  int LocalAreaOffset;78,2409
  bool StackRealignable;79,2432
  TargetFrameLowering(81,2465
  StackDirection getStackGrowthDirection(93,2960
  unsigned getStackAlignment(99,3259
  Align getStackAlign(104,3559
  virtual uint64_t getStackThreshold(108,3679
  int alignSPAdjust(113,3846
  Align getTransientStackAlign(126,4212
  bool isStackRealignable(130,4377
  virtual bool isStackIdSafeForLocalArea(136,4578
  int getOffsetOfLocalArea(143,4807
  virtual bool assignCalleeSavedSpillSlots(159,5615
  assignCalleeSavedSpillSlots(168,6053
  getCalleeSavedSpillSlots(184,6804
  virtual bool targetHandlesStackFrameRounding(192,7065
  virtual bool enableShrinkWrapping(197,7217
  virtual bool enableStackSlotScavenging(204,7481
  virtual void emitZeroCallUsedRegs(220,8153
  emitCalleeSavedFrameMovesFullCFA(226,8415
  virtual void resetCFIToInitialState(235,8805
  virtual void inlineStackProbe(238,8952
  virtual bool stackProbeFunctionModifiesSP(242,9158
  virtual void adjustForSegmentedStacks(246,9377
  virtual void adjustForHiPEPrologue(251,9660
  virtual bool spillCalleeSavedRegisters(258,10061
  restoreCalleeSavedRegisters(272,10793
  virtual bool keepFramePointer(281,11193
  virtual bool hasReservedCallFrame(295,11939
  virtual bool canSimplifyCallFramePseudos(306,12530
  getFrameIndexReferencePreferSP(328,13760
  virtual StackOffset getNonLocalFrameIndexReference(338,14286
  virtual void processFunctionBeforeFrameFinalized(369,15957
  processFunctionBeforeFrameIndicesReplaced(377,16331
  virtual unsigned getWinEHParentFrameOffset(380,16478
  eliminateCallFramePseudoInstr(391,17125
  orderFrameObjects(406,17816
  virtual bool canUseAsPrologue(418,18361
  virtual bool canUseAsEpilogue(430,18893
  virtual TargetStackID::Value getStackIDForScalableVectors(435,19060
  virtual bool isSupportedStackID(439,19170
  virtual bool isProfitableForNoCSROpt(454,19663

/usr/include/llvm/CodeGen/TargetInstrInfo.h,9394
#define LLVM_CODEGEN_TARGETINSTRINFO_H14,577
struct DestSourcePair 71,2077
  const MachineOperand *Destination;Destination72,2101
  const MachineOperand *Source;Source73,2138
  DestSourcePair(75,2171
struct RegImmPair 80,2347
  Register Reg;81,2367
  int64_t Imm;82,2383
  RegImmPair(84,2399
struct ExtAddrMode 91,2721
  enum class Formula 92,2742
    Basic 93,2765
    SExtScaledReg 94,2834
    ZExtScaledReg 95,2909
  Register BaseReg;98,2990
  Register ScaledReg;99,3010
  int64_t Scale 100,3032
  int64_t Displacement 101,3053
  Formula Form 102,3081
class TargetInstrInfo 110,3305
  TargetInstrInfo(112,3358
  static bool isGenericOpcode(121,3828
  static bool isGenericAtomicRMWOpcode(125,3927
  bool isTriviallyReMaterializable(142,4796
  virtual bool isIgnorableUse(151,5200
  virtual bool isSafeToSink(155,5287
  unsigned getCallFrameSetupOpcode(208,8155
  unsigned getCallFrameDestroyOpcode(209,8231
  bool isFrameInstr(212,8378
  bool isFrameSetup(218,8620
  int64_t getFrameSize(230,9299
  int64_t getFrameTotalSize(239,9678
  unsigned getCatchReturnOpcode(248,9955
  unsigned getReturnOpcode(249,10022
  virtual bool isCoalescableExtInstr(262,10821
  virtual unsigned isLoadFromStackSlot(272,11354
  virtual unsigned isLoadFromStackSlot(281,11745
  virtual unsigned isLoadFromStackSlotPostFE(290,12136
  virtual unsigned isStoreToStackSlot(310,13166
  virtual unsigned isStoreToStackSlot(319,13553
  virtual unsigned isStoreToStackSlotPostFE(328,13941
  virtual bool isStackSlotCopy(346,14797
  bool isUnspillableTerminator(370,15935
  virtual unsigned getInstSizeInBytes(376,16196
  virtual bool isAsCheapAsAMove(384,16495
  virtual bool shouldSink(393,16878
  virtual bool shouldHoist(401,17277
  virtual MachineInstr *convertToThreeAddress(convertToThreeAddress438,19191
  static const unsigned CommuteAnyOperandIndex 448,19673
  virtual bool hasCommutePreference(495,22190
  struct RegSubRegPair 501,22416
    Register Reg;502,22441
    unsigned SubReg;503,22459
    RegSubRegPair(505,22481
    bool operator==(operator==508,22586
    bool operator!=(operator!=511,22693
  struct RegSubRegPairAndIdx 519,22969
    unsigned SubIdx;520,23016
    RegSubRegPairAndIdx(522,23038
  virtual bool isBranchOffsetInRange(599,26644
  virtual MachineBasicBlock *getBranchDestBlock(getBranchDestBlock605,26884
  virtual void insertIndirectBranch(613,27304
  virtual bool analyzeBranch(648,29279
  struct MachineBranchPredicate 661,29809
    enum ComparePredicate 662,29843
      PRED_EQ,663,29871
      PRED_NE,664,29922
      PRED_INVALID 665,29977
  virtual bool analyzeBranchPredicate(690,30874
  virtual unsigned removeBranch(701,31403
  virtual unsigned insertBranch(719,32382
  unsigned insertUnconditionalBranch(727,32785
  class PipelinerLoopInfo 738,33391
    virtual bool shouldUseSchedule(749,33974
  analyzeLoopForPipelining(786,35657
  virtual bool analyzeLoop(793,35961
  virtual unsigned reduceLoopCount(802,36402
  virtual bool isLegalToSplitMBBAt(819,37374
  virtual bool isProfitableToIfCvt(829,37865
  virtual bool isProfitableToIfCvt(841,38489
  virtual bool isProfitableToDupForIfCvt(855,39225
  virtual unsigned extraSizeToPredicateInstructions(863,39562
  virtual unsigned predictBranchSizeForIfCvt(870,39893
  virtual bool isProfitableToUnpredicate(885,40372
  virtual bool canInsertSelect(908,41560
  virtual void insertSelect(931,42768
  virtual bool analyzeSelect(956,44004
  virtual MachineInstr *optimizeSelect(optimizeSelect979,45084
  virtual void copyPhysReg(994,45883
  virtual bool isPCRelRegisterOperandLegal(1010,46724
  virtual int getJumpTableIndex(1016,46942
  isCopyInstrImpl(1024,47320
  isCopyLikeInstrImpl(1029,47440
  virtual bool isUnspillableTerminatorImpl(1040,48010
  std::optional<DestSourcePair> isCopyInstr(1051,48509
  std::optional<DestSourcePair> isCopyLikeInstr(1060,48833
  bool isFullCopyInstr(1066,49024
  virtual std::optional<RegImmPair> isAddImmediate(1080,49584
  virtual bool getConstValDefinedInReg(1088,49969
  virtual void storeRegToStackSlot(1103,50836
  virtual void loadRegFromStackSlot(1121,51921
  virtual bool expandPostRAPseudo(1137,52818
  virtual bool isSubregFoldable(1151,53471
  virtual std::pair<std::pair1160,54018
  shouldReduceRegisterPressure(1201,56275
  finalizeInsInstrs(1208,56525
  virtual bool isAssociativeAndCommutative(1225,57455
  virtual std::optional<unsigned> getInverseOpcode(1232,57729
  virtual bool accumulateInstrSeqToRootLatency(1266,59497
  std::pair<std::pair1282,60309
  virtual int getExtendResourceLenLimit(1288,60591
  virtual void setSpecialOperandAttr(1292,60807
  virtual bool useMachineCombiner(1297,61074
  virtual bool canCopyGluedNodeDuringSchedule(1304,61381
  foldMemoryOperandImpl(1313,61795
  virtual MachineInstr *foldMemoryOperandImpl(foldMemoryOperandImpl1326,62418
  virtual bool getRegSequenceLikeInputs(1341,62972
  virtual bool getExtractSubregLikeInputs(1355,63457
  getInsertSubregLikeInputs(1370,64008
  unfoldMemoryOperand(1381,64478
  virtual bool unfoldMemoryOperand(1387,64704
  getOpcodeAfterMemoryUnfold(1399,65253
  virtual bool areLoadsFromSameBasePtr(1408,65724
  virtual bool shouldScheduleLoadsNear(1422,66513
  virtual bool getMemOperandsWithOffsetWidth(1447,67876
  virtual bool getBaseAndOffsetPosition(1457,68326
  getAddrModeFromMemoryOp(1468,68830
  virtual bool canFoldIntoAddrMode(1479,69385
  virtual MachineInstr *emitLdStWithAddr(emitLdStWithAddr1488,69826
  virtual bool preservesZeroValueInReg(1498,70369
  virtual bool getIncrementValue(1505,70682
  virtual bool shouldClusterMemOps(1525,71659
  reverseBranchCondition(1537,72315
  virtual bool isPostIncrement(1554,72972
  virtual bool isPredicated(1557,73113
  virtual bool canPredicatePredicatedInstr(1561,73309
  virtual bool isUnconditionalTailCall(1576,73933
  virtual bool canMakeTailCallConditional(1581,74102
  virtual void replaceBranchWithTailCall(1587,74360
  virtual bool SubsumesPredicate(1600,75010
  virtual bool ClobbersPredicate(1612,75606
  virtual bool isPredicable(1621,75959
  virtual bool isSafeToMoveRegClassDefs(1627,76174
  CreateTargetPostRAHazardRecognizer(1664,77888
  virtual bool analyzeCompare(1676,78380
  virtual bool optimizeCompareInstr(1685,78791
  virtual bool optimizeCondBranch(1691,79085
  virtual MachineInstr *optimizeLoadInstr(optimizeLoadInstr1700,79651
  virtual bool FoldImmediate(1713,80326
  bool isZeroCost(1729,81174
  virtual bool isHighLatencyDef(1767,82938
  virtual bool hasHighOperandLatency(1774,83325
  virtual bool verifyInstruction(1789,84039
  virtual std::pair<std::pair1813,85175
  getExecutionDomain(1814,85215
  virtual void setExecutionDomain(1822,85460
  getPartialRegUpdateClearance(1864,87362
  virtual unsigned getUndefRegClearance(1884,88214
  virtual void breakPartialRegDependency(1907,89131
  CreateTargetScheduleState(1912,89366
  areMemAccessesTriviallyDisjoint(1928,90003
  virtual unsigned getMachineCSELookAheadLimit(1939,90472
  virtual unsigned getMemOperandAACheckLimit(1958,91579
  virtual ArrayRef<ArrayRef1965,91894
  getSerializableTargetIndices(1966,91943
  virtual std::pair<std::pair1972,92157
  decomposeMachineOperandsTargetFlags(1973,92197
  virtual ArrayRef<ArrayRef1982,92501
  getSerializableDirectMachineOperandTargetFlags(1983,92555
  virtual ArrayRef<ArrayRef1992,92846
  getSerializableBitmaskMachineOperandTargetFlags(1993,92900
  virtual ArrayRef<ArrayRef2002,93192
  getSerializableMachineMemOperandTargetFlags(2003,93262
  virtual bool isTailCall(2010,93534
  virtual bool isBasicBlockPrologue(2018,93894
  virtual unsigned getLiveRangeSplitOpcode(2025,94177
  virtual MachineInstr *createPHIDestinationCopy(createPHIDestinationCopy2033,94508
  virtual MachineInstr *createPHISourceCopy(createPHISourceCopy2043,94937
  virtual std::optional<outliner::OutlinedFunction> getOutliningCandidateInfo(2055,95608
  getOutliningTypeImpl(2070,96268
  virtual SmallVector<SmallVector2099,97520
  getOutlinableRanges(2101,97618
  virtual void buildOutlinedFrame(2106,97799
  insertOutlinedCall(2116,98270
  virtual void buildClearRegister(2126,98751
  virtual bool isFunctionSafeToOutlineFrom(2142,99493
  virtual bool shouldOutlineFromFunctionByDefault(2149,99832
  virtual bool isMBBSafeToSplitToCold(2160,100354
  virtual bool isExtendLikelyToBeFolded(2173,100918
  virtual const MIRFormatter *getMIRFormatter(getMIRFormatter2180,101224
  virtual unsigned getTailDuplicateSize(2189,101559
  virtual const MachineOperand &getCalleeOperand(getCalleeOperand2194,101753
  getInstructionUniformity(2200,101963
  virtual bool isExplicitTargetIndexDef(2208,102318
  virtual void getFrameIndexOperands(2221,102911
  mutable std::unique_ptr<MIRFormatter> Formatter;2227,103115
  unsigned CallFrameSetupOpcode,2228,103166
  unsigned CallFrameSetupOpcode, CallFrameDestroyOpcode;2228,103166
  unsigned CatchRetOpcode;2229,103223
  unsigned ReturnOpcode;2230,103250
template <> struct DenseMapInfo<DenseMapInfo2234,103340
  using RegInfo 2235,103406
  static inline TargetInstrInfo::RegSubRegPair getEmptyKey(2237,103449
  static inline TargetInstrInfo::RegSubRegPair getTombstoneKey(2242,103650
  static unsigned getHashValue(2249,103945
  static bool isEqual(2254,104186

/usr/include/llvm/CodeGen/TargetLowering.h,29311
#define LLVM_CODEGEN_TARGETLOWERING_H23,910
enum Preference 99,2847
  None,100,2865
  Source,101,2897
  RegPressure,102,2936
  Hybrid,103,2995
  ILP,104,3064
  VLIW,105,3132
  Fast,106,3179
  Linearize 107,3229
struct MemOp 113,3375
  uint64_t Size;116,3411
  bool DstAlignCanChange;117,3428
  Align DstAlign;119,3544
  bool AllowOverlap;121,3619
  bool IsMemset;123,3657
  bool ZeroMemset;124,3720
  bool MemcpyStrSrc;126,3796
  Align SrcAlign;128,3941
  static MemOp Copy(131,4104
  static MemOp Set(146,4560
  uint64_t size(159,4941
  Align getDstAlign(160,4982
  bool isFixedDstAlign(164,5069
  bool allowOverlap(165,5131
  bool isMemset(166,5184
  bool isMemcpy(167,5229
  bool isMemcpyWithFixedDstAlign(168,5275
  bool isZeroMemset(171,5367
  bool isMemcpyStrSrc(172,5432
  Align getSrcAlign(176,5539
  bool isSrcAligned(180,5640
  bool isDstAligned(183,5762
  bool isAligned(186,5891
class TargetLoweringBase 193,6137
  enum LegalizeAction 197,6306
    Legal,198,6340
    Promote,199,6404
    Expand,200,6475
    LibCall,201,6552
    Custom 202,6632
  enum LegalizeTypeAction 207,6846
    TypeLegal,208,6884
    TypePromoteInteger,209,6952
    TypeExpandInteger,210,7020
    TypeSoftenFloat,211,7094
    TypeExpandFloat,212,7170
    TypeScalarizeVector,213,7242
    TypeSplitVector,214,7320
    TypeWidenVector,215,7393
    TypePromoteFloat,216,7473
    TypeSoftPromoteHalf,217,7539
    TypeScalarizeScalableVector,218,7618
  using LegalizeKind 229,8265
  enum BooleanContent 232,8396
    UndefinedBooleanContent,233,8420
    ZeroOrOneBooleanContent,234,8501
    ZeroOrNegativeOneBooleanContent 235,8572
  enum SelectSupportKind 239,8717
    ScalarValSelect,240,8744
    ScalarCondVectorVal,241,8820
    VectorMaskSelect 243,8960
  enum class AtomicExpansionKind 251,9365
    None,252,9400
    CastToInteger,253,9446
    LLSC,255,9583
    LLOnly,257,9693
    CmpXChg,259,9836
    MaskedIntrinsic,260,9911
    BitTestIntrinsic,261,9988
    CmpArithIntrinsic,263,10111
    Expand,265,10238
    NotAtomic269,10410
  enum class MulExpansionKind 273,10498
    Always,274,10530
    OnlyLegalOrCustom,275,10587
  enum class NegatibleCost 280,10773
    Cheaper 281,10802
    Neutral 282,10856
    Expensive 283,10917
  enum AndOrSETCCFoldKind 288,11084
    None 289,11122
    AddAnd 290,11164
    NotAnd 291,11230
    ABS 292,11296
  class ArgListEntry 295,11360
    bool IsSExt 300,11473
    bool IsZExt 301,11494
    bool IsInReg 302,11515
    bool IsSRet 303,11537
    bool IsNest 304,11558
    bool IsByVal 305,11579
    bool IsByRef 306,11601
    bool IsInAlloca 307,11623
    bool IsPreallocated 308,11648
    bool IsReturned 309,11677
    bool IsSwiftSelf 310,11702
    bool IsSwiftAsync 311,11728
    bool IsSwiftError 312,11755
    bool IsCFGuardTarget 313,11782
    ArgListEntry(317,11888
  using ArgListTy 325,12273
  virtual void markLibCallAttributes(327,12321
  static ISD::NodeType getExtendForContent(330,12457
  bool isStrictFPEnabled(351,13218
  const TargetMachine &getTargetMachine(getTargetMachine360,13385
  virtual bool useSoftFloat(362,13449
  virtual MVT getPointerTy(367,13695
  virtual MVT getPointerMemTy(374,14034
  MVT getFrameIndexTy(380,14303
  MVT getProgramPointerTy(386,14545
  virtual MVT getFenceOperandTy(392,14772
  virtual LLT getPreferredShiftAmountTy(414,15921
  virtual MVT getVectorIdxTy(421,16188
  virtual MVT getVPExplicitVectorLengthTy(429,16535
  virtual MachineMemOperand::Flags getTargetMMOFlags(434,16781
  getTargetMMOFlags(441,17047
  virtual bool isSelectSupported(454,17676
  virtual bool shouldExpandGetActiveLaneMask(460,17897
  virtual bool shouldExpandGetVectorLength(464,17990
  virtual bool shouldExpandCttzElements(471,18281
  virtual bool shouldReassociateReduction(475,18488
  virtual bool reduceSelectOfFPConstantLoads(483,18840
  bool hasMultipleConditionRegisters(488,18993
  bool hasExtractBitsInsn(493,19148
  getPreferredVectorAction(497,19323
  virtual bool softPromoteHalfType(512,19984
  shouldExpandBuildVectorWithShuffles(524,20613
  virtual bool isIntDivCheap(533,21006
  virtual bool hasStandaloneRem(536,21165
  virtual bool isFsqrtCheap(541,21303
  enum ReciprocalEstimate 547,21524
    Unspecified 548,21558
    Disabled 549,21580
    Enabled 550,21598
  bool isSlowDivBypassed(578,23143
  const DenseMap<DenseMap582,23312
  const DenseMap<unsigned int, unsigned int> &getBypassSlowDivWidths(getBypassSlowDivWidths582,23312
  virtual bool isVScaleKnownToBeAPowerOfTwo(587,23485
  bool isJumpExpensive(591,23646
  bool isPredictableSelectExpensive(595,23821
  virtual bool fallBackToDAGISel(599,23913
  virtual bool isStoreBitCastBeneficial(615,24672
  virtual bool storeOfVectorConstantIsCheap(625,25198
  virtual bool mergeStoresAfterLegalization(634,25639
  virtual bool canMergeStoresTo(639,25788
  virtual bool isCheapToSpeculateCttz(645,26005
  virtual bool isCheapToSpeculateCtlz(650,26156
  virtual bool isCtlzFast(655,26282
  virtual bool isCtpopFast(660,26389
  virtual unsigned getCustomCtpopCost(666,26605
  virtual bool isEqualityCmpFoldedWithSignedCmp(672,26831
  virtual bool preferZeroCompareBranch(676,27005
  virtual bool isMultiStoresCheaperThanBitsMerge(680,27203
  virtual bool isMaskAndCmp0FoldingBeneficial(694,27591
  areTwoSDNodeTargetMMOFlagsMergeable(700,27785
  virtual bool convertSetCCLogicToBitwiseLogic(710,28329
  virtual MVT hasFastEqualityCompare(718,28732
  virtual bool hasAndNotCompare(735,29478
  virtual bool hasAndNot(742,29699
  virtual bool hasBitTest(752,30100
  virtual bool shouldFoldMaskToVariableShiftPair(759,30449
  virtual bool shouldFoldConstantShiftPairToMask(768,30868
  virtual bool shouldTransformSignedTruncationCheck(780,31387
  virtual bool shouldProduceAndByConstByHoistingConstFromShiftsLHSOfAnd(793,31956
  virtual bool optimizeFMulOrFDivAsShiftAddBitcast(830,33519
  virtual unsigned preferedOpcodeForCmpEqPiecesOfOperand(847,34310
  virtual bool preferIncOfAddToSubOfNot(859,34733
  virtual bool preferABDSToABSWithNSW(866,35034
  virtual bool preferScalarizeSplat(871,35189
  virtual bool preferSextInRegOfTruncate(877,35493
  bool enableExtLdPromotion(884,35781
  virtual bool canCombineStoreAndExtract(889,36014
  virtual bool shallExtractConstSplatVectorElementToStore(898,36411
  virtual bool shouldSplatInsEltVarIndex(905,36715
  virtual bool enableAggressiveFMAFusion(912,36990
  virtual bool enableAggressiveFMAFusion(917,37262
  BooleanContent getBooleanContents(942,38549
  BooleanContent getBooleanContents(948,38736
  SDValue promoteTargetBoolean(957,39139
  Sched::Preference getSchedulingPreference(967,39546
  virtual Sched::Preference getSchedulingPreference(974,39818
  virtual const TargetRegisterClass *getRegClassFor(getRegClassFor980,40005
  virtual bool requiresUniformRegister(990,40456
  virtual const TargetRegisterClass *getRepRegClassFor(getRepRegClassFor1002,40964
  virtual uint8_t getRepRegClassCostFor(1009,41219
  enum class ShiftLegalizationStrategy 1015,41483
    ExpandToParts,1016,41524
    ExpandThroughStack,1017,41543
    LowerToLibcall1018,41567
  preferredShiftLegalizationStrategy(1021,41627
  bool isTypeLegal(1031,42097
  class ValueTypeActionImpl 1037,42323
    LegalizeTypeAction ValueTypeActions[ValueTypeActions1040,42508
    ValueTypeActionImpl(1043,42581
    LegalizeTypeAction getTypeAction(1048,42718
    void setTypeAction(1052,42822
  const ValueTypeActionImpl &getValueTypeActions(getValueTypeActions1057,42940
  LegalizeTypeAction getTypeAction(1081,44278
  LegalizeTypeAction getTypeAction(1084,44404
  virtual EVT getTypeToTransformTo(1094,44925
  EVT getTypeToExpandTo(1102,45339
  virtual unsigned getVectorTypeBreakdownForCallingConv(1133,46658
  struct IntrinsicInfo 1140,46984
    EVT          memVT;1142,47061
    PointerUnion<PointerUnion1145,47152
    PointerUnion<const Value *, const PseudoSourceValue *> ptrVal;1145,47152
    std::optional<unsigned> fallbackAddressSpace;1149,47329
  virtual bool getTgtMemIntrinsic(1164,47992
  virtual bool isFPImmLegal(1173,48398
  virtual bool isShuffleMaskLegal(1182,48789
  virtual bool isVectorClearMaskLegal(1195,49339
  virtual LegalizeAction getCustomOperationAction(1201,49527
  LegalizeAction getOperationAction(1208,49836
  virtual bool isSupportedFixedPointOperation(1220,50372
  LegalizeAction getFixedPointOperationAction(1229,50774
  LegalizeAction getStrictFPOperationAction(1258,51670
#define DAG_INSTRUCTION(1262,51845
#define CMP_INSTRUCTION(1264,51983
  bool isOperationLegalOrCustom(1276,52491
  bool isOperationLegalOrPromote(1290,53088
  bool isOperationLegalOrCustomOrPromote(1304,53712
  bool isOperationCustom(1317,54214
  virtual bool areJTsAllowed(1322,54380
  bool rangeFitsInWord(1331,54715
  bool isSuitableForBitTests(1354,55947
  bool isOperationExpand(1379,57216
  bool isOperationLegal(1384,57416
  LegalizeAction getLoadExtAction(1392,57800
  bool isLoadExtLegal(1404,58442
  bool isLoadExtLegalOrCustom(1410,58674
  LegalizeAction getTruncStoreAction(1418,59110
  bool isTruncStoreLegal(1429,59609
  bool isTruncStoreLegalOrCustom(1435,59838
  virtual bool canCombineTruncStore(1441,60045
  LegalizeAction getIndexedLoadAction(1452,60504
  bool isIndexedLoadLegal(1457,60711
  LegalizeAction getIndexedStoreAction(1466,61157
  bool isIndexedStoreLegal(1471,61366
  LegalizeAction getIndexedMaskedLoadAction(1480,61814
  bool isIndexedMaskedLoadLegal(1485,62033
  LegalizeAction getIndexedMaskedStoreAction(1494,62507
  bool isIndexedMaskedStoreLegal(1499,62728
  virtual bool shouldExtendGSIndex(1507,63076
  virtual bool shouldRemoveExtendFromGSIndex(1511,63263
  virtual bool isLegalScaleForGatherScatter(1518,63563
  getCondCodeAction(1531,64074
  bool isCondCodeLegal(1544,64694
  bool isCondCodeLegalOrCustom(1550,64894
  MVT getTypeToPromoteTo(1557,65170
  virtual EVT getAsmOperandValueType(1580,66048
  EVT getValueType(1589,66510
  EVT getMemValueType(1609,67293
  MVT getSimpleValueType(1630,68106
  MVT getRegisterType(1641,68628
  MVT getRegisterType(1647,68860
  getNumRegisters(1676,70025
  virtual MVT getRegisterTypeForCallingConv(1700,70983
  virtual unsigned getNumRegistersForCallingConv(1708,71359
  virtual Align getABIAlignmentForCallingConv(1716,71747
  virtual bool ShouldShrinkFPConstant(1724,72105
  virtual bool shouldReduceLoadWidth(1728,72303
  virtual bool shouldRemoveRedundantExtend(1740,72808
  bool hasBigEndianPartOrdering(1745,73093
  bool hasTargetDAGCombine(1751,73334
  unsigned getGatherAllAliasesMaxDepth(1756,73517
  virtual unsigned getVaListSizeInBits(1761,73665
  unsigned getMaxStoresPerMemset(1771,74149
  unsigned getMaxStoresPerMemcpy(1781,74643
  virtual unsigned getMaxGluedStoresPerMemcpy(1790,75068
  unsigned getMaxExpandSizeMemcmp(1800,75518
  unsigned getMaxStoresPerMemmove(1810,76013
  virtual bool allowsMisalignedMemoryAccesses(1824,76849
  virtual bool allowsMisalignedMemoryAccesses(1832,77121
  getOptimalMemOpType(1886,79916
  getOptimalMemOpLLT(1893,80098
  virtual bool isSafeMemOpType(1905,80652
  Register getStackPointerRegisterToSaveRestore(1921,81263
  getExceptionPointerRegister(1928,81512
  getExceptionSelectorRegister(1935,81752
  virtual bool needsFixedCatchObjects(1939,81850
  Align getMinStackArgumentAlignment(1944,82033
  Align getMinFunctionAlignment(1949,82168
  Align getPrefFunctionAlignment(1952,82289
  virtual bool alignLoopsWithOptSize(1964,82758
  virtual bool useStackGuardXorFP(1985,83868
  virtual bool hasStackProbeSymbol(2003,84688
  virtual bool hasInlineStackProbe(2005,84775
  virtual StringRef getStackProbeSymbolName(2007,84862
  virtual bool shouldAlignPointerArgs(2020,85539
  unsigned getMaxAtomicSizeInBitsSupported(2042,86396
  unsigned getMaxDivRemBitWidthSupported(2048,86634
  unsigned getMaxLargeFPConvertBitWidthSupported(2054,86881
  unsigned getMinCmpXchgSizeInBits(2065,87332
  bool supportsUnalignedAtomics(2068,87472
  virtual bool shouldInsertFencesForAtomic(2073,87754
  shouldInsertTrailingFenceForAtomicStore(2080,88013
  virtual Value *emitLoadLinked(emitLoadLinked2088,88397
  virtual Value *emitStoreConditional(emitStoreConditional2095,88764
  virtual Value *emitMaskedAtomicRMWIntrinsic(emitMaskedAtomicRMWIntrinsic2104,89285
  virtual void emitExpandAtomicRMW(2115,89955
  virtual void emitBitTestAtomicRMWIntrinsic(2123,90297
  virtual void emitCmpArithAtomicRMWIntrinsic(2131,90696
  virtual Value *emitMaskedAtomicCmpXchgIntrinsic(emitMaskedAtomicCmpXchgIntrinsic2140,91160
  virtual MachineInstr *EmitKCFICheck(EmitKCFICheck2150,91569
  virtual void emitAtomicCmpXchgNoStoreLLBalance(2192,93685
  virtual bool shouldSignExtendTypeInLibCall(2195,93838
  virtual bool shouldExtendTypeInLibCall(2200,94007
  virtual AtomicExpansionKind shouldExpandAtomicLoadInIR(2206,94190
  virtual AtomicExpansionKind shouldCastAtomicLoadInIR(2212,94410
  virtual AtomicExpansionKind shouldExpandAtomicStoreInIR(2221,94813
  virtual AtomicExpansionKind shouldCastAtomicStoreInIR(2228,95144
  shouldExpandAtomicCmpXchgInIR(2237,95511
  virtual AtomicExpansionKind shouldExpandAtomicRMWInIR(2243,95746
  shouldCastAtomicRMWIInIR(2251,96075
  lowerIdempotentRMWIntoFencedLoad(2272,97161
  virtual ISD::NodeType getExtendForAtomicOps(2278,97363
  virtual ISD::NodeType getExtendForAtomicCmpSwapArg(2290,98011
  virtual bool shouldNormalizeToSelectSequence(2301,98458
  virtual bool isProfitableToCombineMinNumMaxNum(2314,99027
  virtual bool convertSelectOfConstantsToMath(2319,99315
  virtual bool decomposeMulByConstant(2328,99728
  virtual bool isMulAddWithConstProfitable(2342,100392
  virtual bool shouldUseStrictFP_TO_INT(2352,100869
  bool isBeneficialToExpandPowI(2362,101340
  void setBooleanContents(2376,101985
  void setBooleanContents(2383,102243
  void setBooleanVectorContents(2390,102529
  void setSchedulingPreference(2395,102667
  void setStackPointerRegisterToSaveRestore(2408,103171
  void setHasMultipleConditionRegisters(2417,103618
  void setHasExtractBitsInsn(2425,104024
  void addBypassSlowDiv(2435,104405
  void addRegisterClass(2442,104720
  virtual std::pair<std::pair2449,105023
  void setOperationAction(2459,105543
  void setOperationAction(2463,105741
  void setOperationAction(2468,105920
  void setLoadExtAction(2476,106244
  void setLoadExtAction(2485,106756
  void setLoadExtAction(2490,106973
  void setTruncStoreAction(2498,107328
  void setIndexedLoadAction(2508,107786
  void setIndexedLoadAction(2514,108003
  void setIndexedStoreAction(2525,108441
  void setIndexedStoreAction(2531,108661
  void setIndexedMaskedLoadAction(2542,109114
  void setIndexedMaskedStoreAction(2552,109546
  void setCondCodeAction(2559,109862
  void setCondCodeAction(2573,110610
  void AddPromotedToType(2583,111062
  void setOperationPromotedToType(2589,111308
  void setOperationPromotedToType(2593,111476
  void setTargetDAGCombine(2604,111914
  void setMinFunctionAlignment(2612,112183
  void setPrefFunctionAlignment(2618,112422
  void setPrefLoopAlignment(2625,112738
  void setMaxBytesForAlignment(2626,112818
  void setMinStackArgumentAlignment(2631,112966
  void setMaxAtomicSizeInBitsSupported(2639,113318
  void setMaxDivRemBitWidthSupported(2645,113567
  void setMaxLargeFPConvertBitWidthSupported(2651,113818
  void setMinCmpXchgSizeInBits(2656,114015
  void setSupportsUnalignedAtomics(2661,114175
  virtual bool getAddrModeArguments(2675,114771
  struct AddrMode 2688,115337
  virtual int64_t getPreferredLargeGEPBaseOffset(2711,116208
  virtual bool isLegalICmpImmediate(2719,116606
  virtual bool isLegalAddImmediate(2726,116907
  virtual bool isLegalStoreImmediate(2732,117085
  virtual bool isVectorShiftByScalarCheap(2743,117707
  virtual Type* shouldConvertSplatType(2752,118114
  virtual bool shouldConvertPhiType(2759,118378
  virtual bool isCommutativeBinOp(2765,118641
  virtual bool isBinOp(2807,119621
  virtual bool isTruncateFree(2838,120446
  virtual bool allowTruncateForTailCall(2847,120918
  virtual bool isTruncateFree(2851,121015
  virtual bool isTruncateFree(2852,121091
  virtual bool isTruncateFree(2859,121436
  virtual bool isProfitableToHoist(2864,121587
  bool isExtFree(2875,122219
  bool isExtLoad(2900,122975
  virtual bool isZExtFree(2933,124354
  virtual bool isZExtFree(2937,124437
  virtual bool isZExtFree(2938,124509
  virtual bool isZExtFree(2947,124981
  virtual bool isSExtCheaperThanZExt(2953,125184
  virtual bool signExtendConstant(2959,125372
  virtual bool shouldSinkOperands(2966,125771
  optimizeExtendOrTruncateConversion(2974,126057
  virtual bool hasPairedLoad(3000,127116
  virtual bool hasVectorBlend(3006,127320
  virtual unsigned getMaxSupportedInterleaveFactor(3010,127503
  virtual bool lowerInterleavedLoad(3019,127912
  virtual bool lowerInterleavedStore(3032,128443
  virtual bool lowerDeinterleaveIntrinsicToLoad(3043,128875
  virtual bool lowerInterleaveIntrinsicToStore(3054,129303
  virtual bool isFPExtFree(3062,129631
  virtual bool isFPExtFoldable(3071,130034
  virtual bool isFPExtFoldable(3079,130412
  virtual bool isVectorLoadExtDesirable(3088,130803
  virtual bool isFNegFree(3092,131019
  virtual bool isFAbsFree(3099,131253
  virtual bool isFMAFasterThanFMulAndFAdd(3112,131881
  virtual bool isFMAFasterThanFMulAndFAdd(3125,132557
  virtual bool isFMAFasterThanFMulAndFAdd(3131,132721
  virtual bool isFMADLegal(3139,133069
  virtual bool isFMADLegal(3161,133849
  virtual bool generateFMAsInMachineCombiner(3170,134304
  virtual bool isNarrowingProfitable(3178,134633
  virtual bool shouldFoldSelectWithIdentityConstant(3185,134930
  virtual bool shouldConvertConstantLoadToIntImm(3195,135379
  virtual bool isExtractSubvectorCheap(3204,135841
  virtual bool shouldScalarizeBinop(3211,136119
  virtual bool isExtractVecEltCheap(3219,136503
  virtual bool shouldFormOverflowOp(3227,136868
  virtual bool aggressivelyPreferBuildVectorSources(3246,137731
  virtual bool shouldConsiderGEPOffsetSplit(3253,138014
  virtual bool shouldAvoidTransformToShift(3257,138180
  virtual bool shouldFoldSelectWithSingleBitTest(3263,138397
  virtual bool shouldKeepZExtForFP16Conv(3271,138773
  virtual bool shouldConvertFpToSat(3275,138970
  virtual bool isComplexDeinterleavingSupported(3280,139149
  virtual bool isComplexDeinterleavingOperationSupported(3284,139318
  virtual Value *createComplexDeinterleavingIR(createComplexDeinterleavingIR3292,139631
  void setLibcallName(3304,140081
  void setLibcallName(3307,140186
  const char *getLibcallName(getLibcallName3313,140389
  void setCmpLibcallCC(3319,140602
  ISD::CondCode getCmpLibcallCC(3325,140807
  void setLibcallCallingConv(3330,140978
  CallingConv::ID getLibcallCallingConv(3335,141164
  const TargetMachine &TM;TM3353,141959
  bool HasMultipleConditionRegisters;3360,142328
  bool HasExtractBitsInsn;3366,142652
  DenseMap 3372,142964
  DenseMap <unsigned int, unsigned int> BypassSlowDivWidths;3372,142964
  bool JumpIsExpensive;3377,143201
  BooleanContent BooleanContents;3381,143358
  BooleanContent BooleanFloatContents;3385,143525
  BooleanContent BooleanVectorContents;3389,143714
  Sched::Preference SchedPreferenceInfo;3393,143858
  Align MinStackArgumentAlignment;3396,143974
  Align MinFunctionAlignment;3400,144163
  Align PrefFunctionAlignment;3404,144299
  Align PrefLoopAlignment;3407,144390
  unsigned MaxBytesForAlignment;3409,144490
  unsigned MaxAtomicSizeInBitsSupported;3413,144663
  unsigned MaxDivRemBitWidthSupported;3417,144837
  unsigned MaxLargeFPConvertBitWidthSupported;3421,145022
  unsigned MinCmpXchgSizeInBits;3425,145159
  bool SupportsUnalignedAtomics;3428,145266
  Register StackPointerRegisterToSaveRestore;3432,145434
  const TargetRegisterClass *RegClassForVT[RegClassForVT3436,145591
  uint16_t NumRegistersForVT[NumRegistersForVT3437,145656
  MVT RegisterTypeForVT[RegisterTypeForVT3438,145707
  const TargetRegisterClass *RepRegClassForVT[RepRegClassForVT3446,146172
  uint8_t RepRegClassCostForVT[RepRegClassCostForVT3451,146418
  MVT TransformToType[TransformToType3458,146834
  LegalizeAction OpActions[OpActions3465,147232
  uint16_t LoadExtActions[LoadExtActions3471,147575
  LegalizeAction TruncStoreActions[TruncStoreActions3475,147801
  uint16_t IndexedModeActions[IndexedModeActions3483,148215
  ValueTypeActionImpl ValueTypeActions;3493,148755
  std::map<std::map3508,149350
    PromoteToType;3509,149426
  const char *LibcallRoutineNames[LibcallRoutineNames3512,149482
  ISD::CondCode CmpLibcallCCs[CmpLibcallCCs3516,149663
  CallingConv::ID LibcallCallingConvs[LibcallCallingConvs3519,149786
  enum IndexedModeActionsBits 3526,150094
    IMAB_Store 3527,150126
    IMAB_Load 3528,150146
    IMAB_MaskedStore 3529,150165
    IMAB_MaskedLoad 3530,150191
  void setIndexedModeAction(3533,150222
  LegalizeAction getIndexedModeAction(3542,150643
  virtual bool isExtFreeImpl(3554,151185
  unsigned GatherAllAliasesMaxDepth;3560,151507
  unsigned MaxStoresPerMemset;3572,152250
  unsigned MaxStoresPerMemsetOptSize;3574,152338
  unsigned MaxStoresPerMemcpy;3587,153101
  unsigned MaxStoresPerMemcpyOptSize;3589,153189
  unsigned MaxGluedStoresPerMemcpy 3595,153497
  unsigned MaxLoadsPerMemcmp;3608,154265
  unsigned MaxLoadsPerMemcmpOptSize;3610,154352
  unsigned MaxStoresPerMemmove;3622,155074
  unsigned MaxStoresPerMemmoveOptSize;3624,155163
  bool PredictableSelectIsExpensive;3628,155326
  bool EnableExtLdPromotion;3631,155397
  bool IsStrictFPEnabled;3643,155920
class TargetLowering 3651,156240
  virtual bool isSDNodeSourceOfDivergence(3663,156561
  virtual bool isReassocProfitable(3675,157194
  virtual bool isReassocProfitable(3686,157756
  virtual bool isSDNodeAlwaysUniform(3691,157927
  virtual bool getPreIndexedAddressParts(3698,158205
  virtual bool getPostIndexedAddressParts(3708,158700
  virtual bool isIndexingLegal(3719,159262
  LowerCustomJumpTableEntry(3729,159677
  isInlineAsmTargetBranch(3757,161055
  std::pair<std::pair3778,162009
  struct TargetLoweringOpt 3799,163067
    SelectionDAG &DAG;DAG3800,163096
    bool LegalTys;3801,163119
    bool LegalOps;3802,163138
    SDValue Old;3803,163157
    SDValue New;3804,163174
    explicit TargetLoweringOpt(3806,163192
    bool LegalTypes(3810,163344
    bool LegalOperations(3811,163393
    bool CombineTo(3813,163448
  virtual bool targetShrinkDemandedConstant(3845,164975
  shouldSimplifyDemandedVectorElts(3944,170512
  virtual bool isTargetCanonicalConstantNode(4076,178336
  struct DAGCombinerInfo 4081,178510
    void *DC;DC4082,178537
    CombineLevel Level;4083,178580
    bool CalledByLegalizer;4084,178604
    SelectionDAG &DAG;DAG4087,178643
    DAGCombinerInfo(4089,178667
    bool isBeforeLegalize(4092,178812
    bool isBeforeLegalizeOps(4093,178887
    bool isAfterLegalizeDAG(4094,178967
    CombineLevel getDAGCombineLevel(4095,179041
    bool isCalledByLegalizer(4096,179097
  virtual SDValue unwrapAddress(4126,180371
  virtual bool isDesirableToCommuteWithShift(4156,181712
  virtual bool isDesirableToCommuteWithShift(4169,182351
  virtual bool isDesirableToPullExtFromShl(4176,182633
  virtual AndOrSETCCFoldKind isDesirableToCombineLogicOpOfSETCC(4198,183490
  virtual bool isDesirableToCommuteXorWithShift(4207,183964
  virtual bool isTypeDesirableForOp(4215,184341
  virtual bool isDesirableToTransformToIntegerOp(4223,184712
  virtual bool IsDesirableToPromoteOp(4231,185058
  virtual bool supportSwiftError(4237,185300
  virtual bool supportSplitCSR(4243,185500
  virtual bool supportKCFIBundles(4248,185646
  virtual void initializeSplitCSR(4253,185875
  virtual void insertCopiesSplitCSR(4261,186250
  SDValue getCheaperOrNeutralNegatedExpression(4275,186874
  SDValue getCheaperNegatedExpression(4296,187599
  SDValue getNegatedExpression(4305,188077
  virtual bool splitValueIntoRegisterParts(4318,188687
  virtual bool checkForPhysRegDependency(4334,189483
  joinRegisterPartsIntoValue(4343,189899
  virtual SDValue LowerFormalArguments(4354,190463
  struct CallLoweringInfo 4365,191032
    SDValue Chain;4366,191060
    bool RetSExt 4368,191106
    bool RetZExt 4369,191138
    bool IsVarArg 4370,191170
    bool IsInReg 4371,191202
    bool DoesNotReturn 4372,191234
    bool IsReturnValueUsed 4373,191266
    bool IsConvergent 4374,191298
    bool IsPatchPoint 4375,191330
    bool IsPreallocated 4376,191362
    bool NoMerge 4377,191391
    SDValue Callee;4388,191769
    ArgListTy Args;4389,191789
    SelectionDAG &DAG;DAG4390,191809
    SDLoc DL;4391,191832
    SmallVector<SmallVector4393,191880
    SmallVector<ISD::OutputArg, 32> Outs;4393,191880
    SmallVector<SmallVector4394,191922
    SmallVector<SDValue, 32> OutVals;4394,191922
    SmallVector<SmallVector4395,191960
    SmallVector<ISD::InputArg, 32> Ins;4395,191960
    SmallVector<SmallVector4396,192000
    SmallVector<SDValue, 4> InVals;4396,192000
    CallLoweringInfo(4399,192079
    CallLoweringInfo &setDebugLoc(setDebugLoc4405,192365
    CallLoweringInfo &setChain(setChain4410,192460
    CallLoweringInfo &setLibCallee(setLibCallee4416,192616
    CallLoweringInfo &setCallee(setCallee4429,193041
    CallLoweringInfo &setCallee(setCallee4445,193656
    CallLoweringInfo &setInRegister(setInRegister4471,194484
    CallLoweringInfo &setNoReturn(setNoReturn4476,194591
    CallLoweringInfo &setVarArg(setVarArg4481,194702
    CallLoweringInfo &setTailCall(setTailCall4486,194806
    CallLoweringInfo &setDiscardResult(setDiscardResult4491,194914
    CallLoweringInfo &setConvergent(setConvergent4496,195035
    CallLoweringInfo &setSExtResult(setSExtResult4501,195147
    CallLoweringInfo &setZExtResult(setZExtResult4506,195254
    CallLoweringInfo &setIsPatchPoint(setIsPatchPoint4511,195361
    CallLoweringInfo &setIsPreallocated(setIsPreallocated4516,195475
    CallLoweringInfo &setIsPostTypeLegalization(setIsPostTypeLegalization4521,195593
    CallLoweringInfo &setCFIType(setCFIType4526,195725
    ArgListTy &getArgs(getArgs4531,195834
  struct MakeLibCallOptions 4537,195964
    ArrayRef<EVT> OpsVTBeforeSoften;4540,196142
    EVT RetVTBeforeSoften;4541,196179
    bool IsSExt 4542,196206
    bool DoesNotReturn 4543,196227
    bool IsReturnValueUsed 4544,196255
    bool IsPostTypeLegalization 4545,196287
    bool IsSoften 4546,196324
    MakeLibCallOptions(4548,196348
    MakeLibCallOptions &setSExt(setSExt4552,196506
    MakeLibCallOptions &setNoReturn(setNoReturn4557,196608
    MakeLibCallOptions &setDiscardResult(setDiscardResult4562,196721
    MakeLibCallOptions &setIsPostTypeLegalization(setIsPostTypeLegalization4567,196844
    MakeLibCallOptions &setTypeListBeforeSoften(setTypeListBeforeSoften4572,196980
  std::pair<std::pair4585,197558
    LowerCall(4593,198030
  virtual void HandleByVal(4599,198236
  virtual bool CanLowerReturn(4604,198505
  virtual SDValue LowerReturn(4616,199035
  virtual bool isUsedByReturnOnly(4630,199751
  virtual bool mayBeEmittedAsTailCall(4637,200078
  virtual const char * getClearCacheBuiltinName(4643,200293
  virtual Register getRegisterByName(4650,200574
  virtual EVT getTypeForExtReturn(4661,201201
  functionArgumentNeedsConsecutiveRegisters(4671,201663
  shouldSplitFunctionArgumentsAsLittleEndian(4682,202195
  virtual const MCPhysReg *getScratchRegisters(getScratchRegisters4688,202407
  virtual ArrayRef<MCPhysReg> getRoundingControlRegisters(4694,202620
  virtual SDValue prepareVolatileOrAtomicLoad(4705,203148
  virtual void ReplaceNodeResults(4743,205212
  virtual FastISel *createFastISel(createFastISel4754,205732
  virtual bool ExpandInlineAsm(4770,206397
  enum ConstraintType 4774,206471
    C_Register,4775,206495
    C_RegisterClass,4776,206569
    C_Memory,4777,206650
    C_Address,4778,206699
    C_Immediate,4779,206749
    C_Other,4780,206802
    C_Unknown 4781,206848
  enum ConstraintWeight 4784,206908
    CW_Invalid 4786,206958
    CW_Okay 4787,206997
    CW_Good 4788,207038
    CW_Better 4789,207080
    CW_Best 4790,207124
    CW_SpecificReg 4793,207194
    CW_Register 4794,207259
    CW_Memory 4795,207315
    CW_Constant 4796,207369
    CW_Default 4797,207424
  struct AsmOperandInfo 4801,207569
    std::string ConstraintCode;4805,207814
    AsmOperandInfo(4820,208403
  using AsmOperandInfoVector 4832,208806
  using ConstraintPair 4863,210561
  using ConstraintGroup 4864,210640
  virtual std::pair<std::pair4881,211557
  getInlineAsmMemConstraint(4886,211783
  virtual unsigned combineRepeatedFPDivisors(4954,215306
  virtual SDValue getSqrtEstimate(4976,216518
  virtual SDValue getRecipEstimate(4999,217957
  virtual SDValue getSqrtResultForDenormInput(5013,218714
  std::pair<std::pair5208,228368
  std::pair<std::pair5218,228873
  virtual bool useLoadStackGuardNode(5356,236358
  virtual SDValue emitStackGuardXorFP(5360,236428
  virtual bool isXAndYEqZeroPreferableToXAndYEqY(5382,237537

/usr/include/llvm/CodeGen/TargetLoweringObjectFileImpl.h,549
#define LLVM_CODEGEN_TARGETLOWERINGOBJECTFILEIMPL_H15,609
class TargetLoweringObjectFileELF 34,997
  SmallPtrSet<GlobalObject GlobalObject37,1180
  SmallPtrSet<GlobalObject *, 2> Used;37,1180
class TargetLoweringObjectFileMachO 115,4612
class TargetLoweringObjectFileCOFF 163,6919
  mutable unsigned NextUniqueID 164,6990
  const TargetMachine *TM TM165,7027
class TargetLoweringObjectFileWasm 208,8952
  mutable unsigned NextUniqueID 209,9023
class TargetLoweringObjectFileXCOFF 235,10122
class TargetLoweringObjectFileGOFF 303,13241

/usr/include/llvm/CodeGen/TargetPassConfig.h,2861
#define LLVM_CODEGEN_TARGETPASSCONFIG_H14,576
using legacy::PassManagerBase;38,1067
class IdentifyingPassPtr 54,1837
    AnalysisID ID;56,1874
    Pass *P;P57,1893
  bool IsInstance 59,1911
  IdentifyingPassPtr(62,1947
  IdentifyingPassPtr(63,1986
  IdentifyingPassPtr(64,2040
  bool isValid(66,2119
  bool isInstance(67,2156
  AnalysisID getID(69,2206
  Pass *getInstance(getInstance74,2299
class TargetPassConfig 85,2597
  PassManagerBase *PM PM87,2654
  AnalysisID StartBefore 88,2687
  AnalysisID StartAfter 89,2723
  AnalysisID StopBefore 90,2758
  AnalysisID StopAfter 91,2793
  unsigned StartBeforeInstanceNum 93,2828
  unsigned StartBeforeCount 94,2867
  unsigned StartAfterInstanceNum 96,2901
  unsigned StartAfterCount 97,2939
  unsigned StopBeforeInstanceNum 99,2972
  unsigned StopBeforeCount 100,3010
  unsigned StopAfterInstanceNum 102,3043
  unsigned StopAfterCount 103,3080
  bool Started 105,3112
  bool Stopped 106,3135
  bool AddingMachinePasses 107,3159
  bool DebugifyIsSafe 108,3195
  LLVMTargetMachine *TM;TM123,3829
  PassConfigImpl *Impl Impl124,3854
  bool Initialized 125,3916
  bool DisableVerify 129,4075
  bool EnableTailMerge 132,4167
  bool EnableSinkAndFold 137,4376
  bool RequireCodeGenSCCOrder 141,4503
  static char ID;154,4829
  template<typename TMC> TMC &getTM(getTM157,4907
  void setInitialized(162,4998
  struct StartStopInfo 179,5598
    bool StartAfter;180,5623
    bool StopAfter;181,5644
    unsigned StartInstanceNum;182,5664
    unsigned StopInstanceNum;183,5695
    StringRef StartPass;184,5725
    StringRef StopPass;185,5750
  void setDisableVerify(193,5972
  bool getEnableTailMerge(195,6047
  void setEnableTailMerge(196,6109
  bool getEnableSinkAndFold(198,6186
  void setEnableSinkAndFold(199,6252
  bool requiresCodeGenSCCOrder(201,6333
  void setRequiresCodeGenSCCOrder(202,6407
  void enablePass(215,7014
  void disablePass(218,7159
  virtual bool addInstSelector(261,8947
  virtual bool addIRTranslator(267,9151
  virtual void addPreLegalizeMachineIR(271,9313
  virtual bool addLegalizeMachineIR(275,9499
  virtual void addPreRegBankSelect(279,9681
  virtual bool addRegBankSelect(284,9892
  virtual void addPreGlobalInstructionSelect(288,10077
  virtual bool addGlobalInstructionSelect(294,10373
  createMachineScheduler(310,11094
  createPostMachineScheduler(317,11304
  virtual bool addPreISel(382,13974
  virtual bool addILPOpts(396,14542
  virtual void addPreRegAlloc(402,14713
  virtual bool addPreRewrite(428,15992
  virtual bool addPostFastRegAllocRewrite(434,16190
  virtual void addPostRewrite(438,16359
  virtual void addPostRegAlloc(442,16550
  virtual void addPreSched2(449,16872
  virtual void addPreEmitPass(461,17315
  virtual void addPostBBSections(465,17481
  virtual void addPreEmitPass2(472,17871

/usr/include/llvm/CodeGen/TargetRegisterInfo.h,7019
#define LLVM_CODEGEN_TARGETREGISTERINFO_H16,698
class TargetRegisterClass 45,1411
  const MCRegisterClass *MC;MC52,1644
  const uint32_t *SubClassMask;SubClassMask53,1673
  const uint16_t *SuperRegIndices;SuperRegIndices54,1705
  const LaneBitmask LaneMask;55,1740
  const uint8_t AllocationPriority;58,1921
  const bool GlobalPriority;61,2016
  const uint8_t TSFlags;64,2088
  const bool HasDisjunctSubRegs;66,2190
  const bool CoveredBySubRegs;69,2368
  const sc_iterator SuperClasses;70,2399
  ArrayRef<MCPhysReg> (*OrderFunc)OrderFunc71,2433
  unsigned getID(74,2537
  iterator       begin(78,2654
  iterator         end(79,2709
  unsigned getNumRegs(82,2815
  getRegisters(85,2936
  MCRegister getRegister(90,3063
  bool contains(96,3271
  bool contains(105,3604
  int getCopyCost(116,4134
  bool isAllocatable(120,4279
  bool hasSubClass(124,4453
  bool hasSubClassEq(129,4627
  bool hasSuperClass(136,4890
  bool hasSuperClassEq(141,5058
  const uint32_t *getSubClassMask(getSubClassMask161,5889
  const uint16_t *getSuperRegIndices(getSuperRegIndices172,6256
  sc_iterator getSuperClasses(179,6546
  bool isASubClass(185,6729
  ArrayRef<MCPhysReg> getRawAllocationOrder(202,7510
  LaneBitmask getLaneMask(209,7886
struct TargetRegisterInfoDesc 216,8056
  const uint8_t *CostPerUse;CostPerUse217,8088
  unsigned NumCosts;218,8163
      *InAllocatableClass;InAllocatableClass220,8253
struct RegClassWeight 225,8466
  unsigned RegWeight;226,8490
  unsigned WeightLimit;227,8512
class TargetRegisterInfo 236,8862
  using regclass_iterator 238,8921
  using vt_iterator 239,8986
  struct RegClassInfo 240,9038
    unsigned RegSize,241,9062
    unsigned RegSize, SpillSize,241,9062
    unsigned RegSize, SpillSize, SpillAlignment;241,9062
    unsigned VTListOffset;242,9111
  const TargetRegisterInfoDesc *InfoDesc;InfoDesc245,9152
  const char *const *SubRegIndexNames;SubRegIndexNames246,9230
  const LaneBitmask *SubRegIndexLaneMasks;SubRegIndexLaneMasks248,9364
  regclass_iterator RegClassBegin,250,9408
  regclass_iterator RegClassBegin, RegClassEnd;250,9408
  LaneBitmask CoveringLanes;251,9480
  const RegClassInfo *const RCInfos;252,9509
  const MVT::SimpleValueType *const RCVTLists;253,9546
  unsigned HwMode;254,9593
  virtual unsigned getNumSupportedRegs(270,10195
  TypeSize getRegSizeInBits(286,10884
  unsigned getSpillSize(292,11133
  Align getSpillAlign(298,11353
  bool isTypeLegalForClass(303,11549
  bool isTypeLegalForClass(311,11835
  vt_iterator legalclasstypes_begin(325,12230
  vt_iterator legalclasstypes_end(329,12367
  ArrayRef<uint8_t> getRegisterCosts(362,13893
  bool isInAllocatableClass(371,14278
  const char *getSubRegIndexName(getSubRegIndexName377,14484
  LaneBitmask getSubRegIndexLaneMask(387,14861
  LaneBitmask getCoveringLanes(424,16640
  bool regsOverlap(428,16823
  bool hasRegUnit(437,17110
  virtual const uint32_t *getCallPreservedMask(getCallPreservedMask489,19677
  getCustomEHPadPreservedMask(498,20070
  virtual const uint32_t *getNoPreservedMask(getNoPreservedMask503,20215
  getIntraCallClobberedRegs(511,20564
  explainReservedReg(541,22045
  virtual bool isAsmClobberable(547,22286
  virtual bool isInlineAsmReadOnlyReg(553,22504
  virtual bool isConstantPhysReg(560,22798
  virtual bool isDivergentRegClass(563,22942
  virtual bool isUniformReg(568,23097
  virtual bool isCallerPreservedPhysReg(578,23586
  virtual bool isArgumentRegister(589,24061
  virtual bool isFixedRegister(595,24258
  virtual bool isGeneralPurposeRegister(601,24459
  virtual void adjustStackMapLiveOutMask(609,24818
  MCRegister getMatchingSuperReg(613,24995
  getSubClassWithSubReg(649,26856
  getSubRegisterClass(657,27160
  unsigned composeSubRegIndices(675,27938
  LaneBitmask composeSubRegIndexLaneMask(684,28288
  LaneBitmask reverseComposeSubRegIndexLaneMask(698,28908
  virtual const TargetRegisterClass *getPhysRegBaseClass(getPhysRegBaseClass713,29605
  virtual unsigned composeSubRegIndicesImpl(719,29787
  composeSubRegIndexLaneMaskImpl(725,30004
  virtual LaneBitmask reverseComposeSubRegIndexLaneMaskImpl(729,30126
  virtual unsigned getRegisterCostTableIndex(737,30550
  const RegClassInfo &getRegClassInfo(getRegClassInfo773,31981
  regclass_iterator regclass_begin(779,32164
  regclass_iterator regclass_end(780,32233
  iterator_range<regclass_iterator> regclasses(781,32298
  unsigned getNumRegClasses(785,32417
  const TargetRegisterClass *getRegClass(getRegClass791,32619
  const char *getRegClassName(getRegClassName797,32832
  getPointerRegClass(811,33419
  getCrossCopyRegClass(820,33918
  getLargestLegalSuperClass(829,34306
  virtual unsigned getRegPressureLimit(842,34933
  virtual unsigned getRegPressureSetScore(851,35366
  virtual void updateRegAllocHint(912,38473
  virtual bool reverseLocalAssignment(926,39252
  virtual unsigned getCSRFirstUseCost(931,39507
  virtual bool requiresRegisterScavenging(935,39662
  virtual bool useFPForScavengingIndex(941,39891
  virtual bool requiresFrameIndexScavenging(947,40109
  virtual bool requiresFrameIndexReplacementScavenging(953,40357
  virtual bool requiresVirtualBaseRegisters(960,40627
  virtual bool hasReservedSpillSlot(970,41123
  virtual bool trackLivenessAfterRegAlloc(976,41362
  bool hasStackRealignment(988,41857
  virtual int64_t getFrameIndexInstrOffset(994,42078
  virtual bool needsFrameBaseReg(1003,42484
  virtual Register materializeFrameBaseRegister(1009,42712
  virtual void resolveFrameIndex(1018,43153
  virtual bool isFrameOffsetLegal(1025,43470
  virtual bool saveScavengerRegister(1043,44352
  virtual bool eliminateFrameIndicesBackwards(1056,45041
  virtual StringRef getRegAsmName(1072,45963
  virtual bool shouldCoalesce(1086,46547
  shouldUseLastChanceRecoloringForVirtReg(1111,47830
  shouldUseDeferredSpillingForVirtReg(1126,48594
  regClassPriorityTrumpsGlobalness(1135,49014
  getConstrainedRegClassForOperand(1155,49848
  inline MCRegister getSubReg(1163,50165
  virtual bool isNonallocatableRegisterCalleeSave(1170,50496
class SuperRegClassIterator 1191,51317
  const unsigned RCMaskWords;1192,51347
  unsigned SubReg 1193,51377
  const uint16_t *Idx;Idx1194,51400
  const uint32_t *Mask;Mask1195,51423
  SuperRegClassIterator(1200,51615
  bool isValid(1210,52012
  unsigned getSubReg(1213,52098
  const uint32_t *getMask(getMask1218,52303
  void operator++(1221,52397
class BitMaskClassIterator 1237,53047
  const unsigned NumRegClasses;1239,53116
  unsigned Base 1243,53276
  unsigned Idx 1246,53399
  unsigned ID 1248,53452
  const uint32_t *Mask;Mask1250,53505
  uint32_t CurrentChunk;1252,53580
  void moveToNextID(1255,53641
  void moveNBits(1288,54849
  BitMaskClassIterator(1301,55235
  bool isValid(1308,55518
  unsigned getID(1311,55624
  void operator++(1314,55707
struct VirtReg2IndexFunctor 1321,55887
  using argument_type 1322,55917
  unsigned operator()(operator()1323,55951

/usr/include/llvm/CodeGen/TargetSchedule.h,1130
#define LLVM_CODEGEN_TARGETSCHEDULE_H16,725
class TargetSchedModel 30,1087
  MCSchedModel SchedModel;33,1209
  InstrItineraryData InstrItins;34,1236
  SmallVector<unsigned,unsigned38,1354
  SmallVector<unsigned, 16> ResourceFactors;38,1354
  unsigned computeInstrLatency(46,1576
  const TargetSubtargetInfo *getSubtargetInfo(getSubtargetInfo62,2182
  const TargetInstrInfo *getInstrInfo(getInstrInfo65,2283
  const MCSchedModel *getMCSchedModel(getMCSchedModel74,2629
  const InstrItineraryData *getInstrItineraries(getInstrItineraries82,2899
  bool hasInstrSchedModelOrItineraries(90,3166
  unsigned getProcessorID(95,3378
  unsigned getIssueWidth(98,3520
  unsigned getNumProcResourceKinds(112,4152
  const MCProcResourceDesc *getProcResource(getProcResource117,4305
  const char *getResourceName(getResourceName122,4472
  ProcResIter getWriteProcResBegin(133,4766
  ProcResIter getWriteProcResEnd(137,4954
  unsigned getResourceFactor(143,5193
  unsigned getMicroOpFactor(149,5389
  unsigned getLatencyFactor(155,5599
  unsigned getMicroOpBufferSize(160,5732
  int getResourceBufferSize(164,5954

/usr/include/llvm/CodeGen/TargetSubtargetInfo.h,2176
#define LLVM_CODEGEN_TARGETSUBTARGETINFO_H14,566
class TargetSubtargetInfo 63,1887
  TargetSubtargetInfo(65,1984
  ~TargetSubtargetInfo(82,2869
  virtual const TargetInstrInfo *getInstrInfo(getInstrInfo96,3353
  virtual const TargetFrameLowering *getFrameLowering(getFrameLowering97,3427
  virtual const TargetLowering *getTargetLowering(getTargetLowering100,3515
  virtual const SelectionDAGTargetInfo *getSelectionDAGInfo(getSelectionDAGInfo101,3593
  virtual const CallLowering *getCallLowering(getCallLowering104,3687
  virtual const InlineAsmLowering *getInlineAsmLowering(getInlineAsmLowering106,3762
  virtual InstructionSelector *getInstructionSelector(getInstructionSelector114,4125
  getDAGScheduler(120,4333
  virtual const LegalizerInfo *getLegalizerInfo(getLegalizerInfo124,4401
  virtual const TargetRegisterInfo *getRegisterInfo(getRegisterInfo128,4579
  virtual const RegisterBankInfo *getRegBankInfo(getRegBankInfo132,4765
  virtual const InstrItineraryData *getInstrItineraryData(getInstrItineraryData136,4952
  virtual unsigned resolveSchedClass(144,5308
  virtual bool isZeroIdiom(159,6041
  virtual bool isDependencyBreaking(170,6530
  virtual bool isOptimizableRegisterMove(183,7147
  virtual bool enableMachineSchedDefaultSched(197,7756
  virtual bool enableMachinePipeliner(200,7884
  virtual void overrideSchedPolicy(229,9057
  virtual void adjustSchedDependency(237,9472
  virtual AntiDepBreakMode getAntiDepBreakMode(242,9745
  virtual void getCriticalPathRCs(247,10014
  virtual void getPostRAMutations(253,10217
  virtual void getSMSMutations(259,10420
  virtual bool useDFAforSMS(265,10660
  virtual CodeGenOptLevel getOptLevelToEnablePostRAScheduler(269,10827
  virtual bool addrSinkUsingGEPs(285,11493
  virtual bool enableEarlyIfConversion(290,11615
  virtual std::unique_ptr<PBQPRAConstraint> getCustomPBQPConstraints(295,11785
  virtual bool enableSubRegLiveness(302,12050
  virtual bool ignoreCSRForAllocationOrder(310,12442
  classifyGlobalFunctionReference(319,12837
  virtual bool enableSpillageCopyElimination(326,13112
  virtual std::vector<MacroFusionPredTy> getMacroFusions(329,13230

/usr/include/llvm/CodeGen/TileShapeInfo.h,362
#define LLVM_CODEGEN_TILESHAPEINFO_H20,955
class ShapeT 29,1173
  ShapeT(31,1196
  ShapeT(37,1366
  MachineOperand *getRow(getRow56,1999
  MachineOperand *getCol(getCol58,2049
  int64_t getRowImm(60,2099
  int64_t getColImm(62,2147
  bool isValid(64,2195
  void deduceImm(66,2262
  MachineOperand *Row;Row87,2900
  MachineOperand *Col;Col88,2923

/usr/include/llvm/CodeGen/VLIWMachineScheduler.h,1974
#define LLVM_CODEGEN_VLIWMACHINESCHEDULER_H12,576
class VLIWResourceModel 31,983
  const TargetInstrInfo *TII;TII33,1020
  DFAPacketizer *ResourcesModel;ResourcesModel38,1199
  const TargetSchedModel *SchedModel;SchedModel40,1233
  SmallVector<SUnit *> Packet;44,1360
  VLIWResourceModel(50,1459
  virtual ~VLIWResourceModel(53,1675
  virtual void reset(55,1708
  virtual bool hasDependence(57,1733
  virtual bool isResourceAvailable(58,1799
  virtual bool reserveResources(59,1858
  unsigned getTotalPackets(60,1914
  size_t getPacketInstCount(61,1974
  bool isInPacket(62,2036
  virtual DFAPacketizer *createPacketizer(createPacketizer65,2120
class VLIWMachineScheduler 70,2321
  VLIWMachineScheduler(72,2385
  RegisterClassInfo *getRegClassInfo(getRegClassInfo80,2677
  int getBBSize(81,2741
class ConvergingVLIWScheduler 89,3034
  struct SchedCandidate 93,3239
    RegPressureDelta RPDelta;98,3380
  enum CandResult 106,3569
    NoCand,107,3589
    NodeOrder,108,3601
    SingleExcess,109,3616
    SingleCritical,110,3634
    SingleMax,111,3654
    MultiPressure,112,3669
    BestCost,113,3688
    Weak114,3702
  static constexpr unsigned PriorityOne 119,3818
  static constexpr unsigned PriorityTwo 120,3865
  static constexpr unsigned PriorityThree 121,3911
  static constexpr unsigned ScaleTwo 122,3959
  struct VLIWSchedBoundary 127,4224
    ReadyQueue Available;131,4345
    ReadyQueue Pending;132,4371
    VLIWSchedBoundary(150,4938
    void init(158,5273
    bool isTop(185,6610
    bool isLatencyBound(203,6944
  VLIWMachineScheduler *DAG DAG211,7188
  const TargetSchedModel *SchedModel SchedModel212,7227
  VLIWSchedBoundary Top;215,7343
  VLIWSchedBoundary Bot;216,7368
  SmallVector<bool> HighPressureSets;219,7469
  enum { TopQID 223,7579
  enum { TopQID = 1, BotQID 223,7579
  enum { TopQID = 1, BotQID = 2, LogMaxQID 223,7579
  ConvergingVLIWScheduler(225,7630
  unsigned reportPackets(238,7994

/usr/include/llvm/CodeGen/WasmEHPrepare.h,108
#define LLVM_CODEGEN_WASMEHPREPARE_H10,407
class WasmEHPreparePass 16,497
  PreservedAnalyses run(18,573

/usr/include/llvm/CodeGen/WinEHPrepare.h,173
#define LLVM_CODEGEN_WINEHPREPARE_H10,406
class WinEHPreparePass 16,495
  bool DemoteCatchSwitchPHIOnly;17,561
  WinEHPreparePass(20,603
  PreservedAnalyses run(22,725

/usr/include/llvm/Config/abi-breaking.h,355
#define LLVM_ABI_BREAKING_CHECKS_H13,763
#define LLVM_ENABLE_ABI_BREAKING_CHECKS 16,857
#define LLVM_ENABLE_REVERSE_ITERATION 19,970
#define LLVM_XSTR(29,1412
#define LLVM_STR(30,1445
#undef LLVM_XSTR32,1571
#undef LLVM_STR33,1588
#define LLVM_HIDDEN_VISIBILITY 38,1819
#define LLVM_HIDDEN_VISIBILITY42,1996
#undef LLVM_HIDDEN_VISIBILITY57,2401

/usr/include/llvm/Config/llvm-config.h,2035
#define LLVM_CONFIG_H15,894
#define LLVM_DEFAULT_TARGET_TRIPLE 22,1118
#define LLVM_ENABLE_THREADS 25,1206
#define LLVM_HAS_ATOMICS 28,1274
#define LLVM_HOST_TRIPLE 31,1345
#define LLVM_NATIVE_ARCH 34,1462
#define LLVM_NATIVE_ASMPARSER 37,1561
#define LLVM_NATIVE_ASMPRINTER 40,1689
#define LLVM_NATIVE_DISASSEMBLER 43,1821
#define LLVM_NATIVE_TARGET 46,1951
#define LLVM_NATIVE_TARGETINFO 49,2073
#define LLVM_NATIVE_TARGETMC 52,2202
#define LLVM_HAS_AARCH64_TARGET 58,2411
#define LLVM_HAS_AMDGPU_TARGET 61,2492
#define LLVM_HAS_ARC_TARGET 64,2569
#define LLVM_HAS_ARM_TARGET 67,2643
#define LLVM_HAS_AVR_TARGET 70,2717
#define LLVM_HAS_BPF_TARGET 73,2791
#define LLVM_HAS_CSKY_TARGET 76,2866
#define LLVM_HAS_DIRECTX_TARGET 79,2945
#define LLVM_HAS_HEXAGON_TARGET 82,3027
#define LLVM_HAS_LANAI_TARGET 85,3107
#define LLVM_HAS_LOONGARCH_TARGET 88,3189
#define LLVM_HAS_M68K_TARGET 91,3270
#define LLVM_HAS_MIPS_TARGET 94,3346
#define LLVM_HAS_MSP430_TARGET 97,3424
#define LLVM_HAS_NVPTX_TARGET 100,3503
#define LLVM_HAS_POWERPC_TARGET 103,3583
#define LLVM_HAS_RISCV_TARGET 106,3663
#define LLVM_HAS_SPARC_TARGET 109,3741
#define LLVM_HAS_SPIRV_TARGET 112,3819
#define LLVM_HAS_SYSTEMZ_TARGET 115,3899
#define LLVM_HAS_VE_TARGET 118,3976
#define LLVM_HAS_WEBASSEMBLY_TARGET 121,4057
#define LLVM_HAS_X86_TARGET 124,4139
#define LLVM_HAS_XCORE_TARGET 127,4215
#define LLVM_HAS_XTENSA_TARGET 130,4294
#define LLVM_ON_UNIX 133,4369
#define LLVM_USE_INTEL_JITEVENTS 136,4459
#define LLVM_USE_OPROFILE 139,4552
#define LLVM_USE_PERF 142,4634
#define LLVM_VERSION_MAJOR 145,4695
#define LLVM_VERSION_MINOR 148,4762
#define LLVM_VERSION_PATCH 151,4828
#define LLVM_VERSION_STRING 154,4884
#define LLVM_FORCE_ENABLE_STATS 159,5037
#define LLVM_ENABLE_ZLIB 171,5361
#define LLVM_ENABLE_ZSTD 174,5435
#define HAVE_SYSEXITS_H 180,5591
#define LLVM_BUILD_LLVM_DYLIB183,5666
#define LLVM_UNREACHABLE_OPTIMIZE 193,6000
#define LLVM_ENABLE_DIA_SDK 196,6113
#define LLVM_ENABLE_PLUGINS199,6176

/usr/include/llvm/DWARFLinker/Classic/DWARFLinker.h,4257
#define LLVM_DWARFLINKER_CLASSIC_DWARFLINKER_H10,417
class DwarfEmitter 40,1410
  virtual uint64_t getLineSectionSize(164,6698
class DWARFLinker 211,8562
  DWARFLinker(213,8615
  static std::unique_ptr<DWARFLinker> createLinker(218,8879
  void setOutputDWARFEmitter(226,9243
  void setVerbosity(246,10066
  void setStatistics(249,10184
  void setVerifyInputDWARF(254,10305
  void setNoODR(259,10444
  void setUpdateIndexTablesOnly(262,10570
  void setAllowNonDeterministicOutput(267,10720
  void setKeepFunctionForStatic(271,10873
  void setNumThreads(276,11074
  void addAccelTableKind(281,11220
  void setPrependPath(287,11428
  void setEstimatedObjfilesAmount(290,11585
  setInputVerificationHandler(297,11793
  void setSwiftInterfacesMap(302,11959
  void setObjectPrefixMap(307,12109
  Error setTargetDWARFVersion(312,12242
  enum TraversalFlags 324,12700
    TF_Keep 325,12724
    TF_InFunctionScope 326,12795
    TF_DependencyWalk 327,12868
    TF_ParentWalk 328,12946
    TF_ODR 329,13022
    TF_SkipPC 330,13098
  enum class WorklistItemType 334,13234
    LookForDIEsToKeep,336,13313
    LookForChildDIEsToKeep,338,13399
    LookForRefDIEsToKeep,340,13495
    LookForParentDIEsToKeep,342,13575
    UpdateChildIncompleteness,345,13705
    UpdateRefIncompleteness,348,13847
    MarkODRCanonicalDie,350,13937
  struct WorklistItem 356,14183
    DWARFDie Die;357,14207
    WorklistItemType Type;358,14225
    CompileUnit &CU;CU359,14252
    unsigned Flags;360,14273
      const unsigned AncestorIdx;362,14305
      CompileUnit::DIEInfo *OtherInfo;OtherInfo363,14339
    WorklistItem(366,14386
    WorklistItem(370,14595
    WorklistItem(374,14795
  bool needToTranslateStrings(383,15123
  void reportWarning(385,15197
  void reportError(391,15414
  struct RefModuleUnit 401,15816
    RefModuleUnit(402,15841
    RefModuleUnit(404,15958
    DWARFFile &File;File408,16110
    std::unique_ptr<CompileUnit> Unit;409,16131
  using ModuleUnitListTy 411,16175
  struct LinkContext 414,16300
    DWARFFile &File;File415,16323
    UnitListTy CompileUnits;416,16344
    ModuleUnitListTy ModuleUnits;417,16373
    LinkContext(420,16431
    void clear(424,16586
  std::pair<std::pair472,18645
  std::pair<std::pair514,20812
  class DIECloner 543,22029
    DWARFLinker &Linker;Linker544,22049
    DwarfEmitter *Emitter;Emitter545,22074
    DWARFFile &ObjFile;ObjFile546,22101
    OffsetsStringPool &DebugStrPool;DebugStrPool547,22125
    OffsetsStringPool &DebugLineStrPool;DebugLineStrPool548,22162
    DebugDieValuePool &StringOffsetPool;StringOffsetPool549,22203
    DebugDieValuePool AddrPool;550,22244
    BumpPtrAllocator &DIEAlloc;DIEAlloc553,22330
    std::vector<std::unique_ptr<CompileUnit>> &CompileUnits;CompileUnits555,22363
    Offset2UnitMap UnitMacroMap;559,22517
    bool Update;561,22551
    DIECloner(564,22579
    struct AttributesInfo 614,25153
      DwarfStringPoolEntryRef Name,616,25198
      DwarfStringPoolEntryRef Name, MangledName,616,25198
      DwarfStringPoolEntryRef Name, MangledName, NameWithoutTemplate;616,25198
  FoldingSet<DIEAbbrev> AbbreviationsSet;738,30519
  std::vector<std::unique_ptr<DIEAbbrev>> Abbreviations;743,30722
  std::vector<DIELoc *> DIELocs;746,30846
  std::vector<DIEBlock *> DIEBlocks;749,30948
  BumpPtrAllocator DIEAlloc;752,31037
  DwarfEmitter *TheDwarfEmitter TheDwarfEmitter755,31076
  std::vector<LinkContext> ObjectContexts;756,31119
  StringMap<uint32_t> EmittedCIEs;761,31378
  uint32_t LastCIEOffset 765,31507
  DWARF5AccelTable DebugNames;768,31570
  AccelTable<AppleAccelTableStaticOffsetData> AppleNames;769,31601
  AccelTable<AppleAccelTableStaticOffsetData> AppleNamespaces;770,31659
  AccelTable<AppleAccelTableStaticOffsetData> AppleObjc;771,31722
  AccelTable<AppleAccelTableStaticTypeData> AppleTypes;772,31779
  StringMap<uint64_t> ClangModules;775,31881
  unsigned UniqueUnitID 780,32039
  MessageHandlerTy ErrorHandler 783,32088
  MessageHandlerTy WarningHandler 786,32153
  struct DWARFLinkerOptions 789,32221
    SmallVector<SmallVector816,32870
    SmallVector<AccelTableKind, 1> AccelTables;816,32870
    std::string PrependPath;819,32963
  } Options;833,33568

/usr/include/llvm/DWARFLinker/Classic/DWARFLinkerCompileUnit.h,3274
#define LLVM_DWARFLINKER_CLASSIC_DWARFLINKERCOMPILEUNIT_H10,428
struct PatchLocation 36,1355
  DIE::value_iterator I;37,1378
  PatchLocation(41,1464
  PatchLocation(42,1513
  void set(45,1608
  uint64_t get(52,1808
using RngListAttributesTy 58,1898
using LocListAttributesTy 59,1954
class CompileUnit 63,2168
  struct DIEInfo 66,2255
    int64_t AddrAdjust;68,2331
    DeclContext *Ctxt;Ctxt71,2389
    DIE *Clone;Clone74,2449
    uint32_t ParentIdx;77,2506
    bool Keep 80,2577
    bool InDebugMap 83,2645
    bool Prune 86,2728
    bool Incomplete 89,2805
    bool InModuleScope 92,2873
    bool ODRMarkingDone 95,2931
    bool UnclonedReference 98,3027
    bool HasLocationExpressionAddr 101,3134
  CompileUnit(108,3324
  DWARFUnit &getOrigUnit(getOrigUnit128,4107
  unsigned getUniqueID(130,4162
  void createOutputDIE(132,4209
  DIE *getOutputUnitDIE(getOutputUnitDIE134,4288
  bool hasODR(140,4429
  bool isClangModule(141,4470
  const std::string &getClangModuleName(getClangModuleName146,4668
  DIEInfo &getInfo(getInfo148,4745
  const DIEInfo &getInfo(getInfo149,4800
  DIEInfo &getInfo(getInfo151,4868
  uint64_t getStartOffset(156,4988
  uint64_t getNextUnitOffset(157,5046
  void setStartOffset(158,5110
  std::optional<uint64_t> getLowPc(160,5190
  uint64_t getHighPc(161,5251
  bool hasLabelAt(162,5299
  const RangesTy &getFunctionRanges(getFunctionRanges164,5370
  const RngListAttributesTy &getRangesAttributes(getRangesAttributes166,5434
  std::optional<PatchLocation> getUnitRangesAttribute(168,5514
  const LocListAttributesTy &getLocationAttributes(getLocationAttributes172,5614
  struct AccelInfo 230,8209
    DwarfStringPoolEntryRef Name;232,8257
    const DIE *Die;Die235,8326
    uint32_t QualifiedNameHash;238,8389
    bool SkipPubSection;241,8476
    bool ObjcClassImplementation;244,8548
    AccelInfo(246,8583
    AccelInfo(250,8753
  const std::vector<AccelInfo> &getPubnames(getPubnames257,9060
  const std::vector<AccelInfo> &getPubtypes(getPubtypes258,9133
  const std::vector<AccelInfo> &getNamespaces(getNamespaces259,9206
  const std::vector<AccelInfo> &getObjC(getObjC260,9283
  MCSymbol *getLabelBegin(getLabelBegin262,9349
  void setLabelBegin(263,9400
  DWARFUnit &OrigUnit;OrigUnit266,9464
  unsigned ID;267,9487
  std::vector<DIEInfo> Info;268,9502
  std::optional<BasicDIEUnit> NewUnit;269,9567
  MCSymbol *LabelBegin LabelBegin270,9606
  uint64_t StartOffset;272,9641
  uint64_t NextUnitOffset;273,9665
  std::optional<uint64_t> LowPc;275,9693
  uint64_t HighPc 276,9726
  std::vector<std::vector284,10062
      ForwardDIEReferences;286,10153
  RangesTy Ranges;291,10352
  SmallDenseMap<SmallDenseMap294,10417
  SmallDenseMap<uint64_t, uint64_t, 1> Labels;294,10417
  RngListAttributesTy RangeAttributes;299,10607
  std::optional<PatchLocation> UnitRangeAttribute;300,10646
  LocListAttributesTy LocationAttributes;308,10992
  std::vector<AccelInfo> Pubnames;313,11138
  std::vector<AccelInfo> Pubtypes;314,11173
  std::vector<AccelInfo> Namespaces;315,11208
  std::vector<AccelInfo> ObjC;316,11245
  bool HasODR;320,11330
  uint16_t Language 323,11385
  std::string SysRoot;326,11454
  std::string ClangModuleName;329,11541

/usr/include/llvm/DWARFLinker/Classic/DWARFLinkerDeclContext.h,1635
#define LLVM_DWARFLINKER_CLASSIC_DWARFLINKERDECLCONTEXT_H10,428
class CachedPathResolver 34,1225
  StringRef resolve(38,1392
  StringMap<std::string> ResolvedPaths;59,2170
class DeclContext 80,3223
  using Map 82,3251
  DeclContext(84,3304
  DeclContext(86,3365
  uint32_t getQualifiedNameHash(93,3797
  void setHasCanonicalDIE(97,3929
  bool hasCanonicalDIE(99,3986
  uint32_t getCanonicalDIEOffset(101,4046
  void setCanonicalDIEOffset(102,4118
  bool isDefinedInClangModule(104,4198
  void setDefinedInClangModule(105,4269
  uint16_t getTag(107,4343
  unsigned QualifiedNameHash 112,4418
  uint32_t Line 113,4452
  uint32_t ByteSize 114,4473
  uint16_t Tag 115,4498
  unsigned DefinedInClangModule 116,4543
  StringRef Name;117,4580
  StringRef File;118,4598
  const DeclContext &Parent;Parent119,4616
  DWARFDie LastSeenDIE;120,4645
  uint32_t LastSeenCompileUnitID 121,4669
  std::atomic<uint32_t> CanonicalDIEOffset 122,4707
  bool HasCanonicalDIE 123,4757
class DeclContextTree 129,4960
  PointerIntPair<PointerIntPair142,5523
  DeclContext &getRoot(getRoot147,5827
  BumpPtrAllocator Allocator;150,5879
  DeclContext Root;151,5909
  DeclContext::Map Contexts;152,5929
  using ResolvedPathsMap 156,6050
  ResolvedPathsMap ResolvedPaths;157,6129
  CachedPathResolver PathResolver;160,6227
  NonRelocatableStringpool StringPool;163,6307
struct DeclMapInfo 170,6552
  using DenseMapInfo<DeclContext *>::getEmptyKey;getEmptyKey171,6611
  using DenseMapInfo<DeclContext *>::getTombstoneKey;getTombstoneKey172,6661
  static unsigned getHashValue(174,6716
  static bool isEqual(178,6815

/usr/include/llvm/DWARFLinker/Classic/DWARFStreamer.h,1305
#define LLVM_DWARFLINKER_CLASSIC_DWARFSTREAMER_H10,419
class DwarfStreamer 44,1355
  DwarfStreamer(46,1407
  AsmPrinter &getAsmPrinter(getAsmPrinter64,2185
  uint64_t getRangesSectionSize(148,5914
  uint64_t getRngListsSectionSize(150,5994
  uint64_t getLineSectionSize(160,6408
  uint64_t getFrameSectionSize(194,7563
  uint64_t getDebugInfoSectionSize(196,7641
  uint64_t getDebugMacInfoSectionSize(200,7733
  uint64_t getDebugMacroSectionSize(204,7826
  uint64_t getLocListsSectionSize(208,7915
  uint64_t getDebugAddrSectionSize(212,8005
  inline void warn(219,8265
  std::unique_ptr<MCRegisterInfo> MRI;281,11272
  std::unique_ptr<MCAsmInfo> MAI;282,11311
  std::unique_ptr<MCObjectFileInfo> MOFI;283,11345
  std::unique_ptr<MCContext> MC;284,11387
  MCAsmBackend *MAB;MAB285,11420
  std::unique_ptr<MCInstrInfo> MII;286,11464
  std::unique_ptr<MCSubtargetInfo> MSTI;287,11500
  MCInstPrinter *MIP;MIP288,11541
  MCCodeEmitter *MCE;MCE289,11586
  MCStreamer *MS;MS290,11631
  std::unique_ptr<TargetMachine> TM;291,11676
  std::unique_ptr<AsmPrinter> Asm;292,11713
  raw_pwrite_stream &OutFile;OutFile296,11811
  struct EmittedUnit 313,12409
    unsigned ID;314,12432
    MCSymbol *LabelBegin;LabelBegin315,12449
  std::vector<EmittedUnit> EmittedUnits;317,12480

/usr/include/llvm/DWARFLinker/Parallel/DWARFLinker.h,359
#define LLVM_DWARFLINKER_PARALLEL_DWARFLINKER_H10,418
struct SectionDescriptorBase 93,3962
  SectionDescriptorBase(94,3993
  DebugSectionKind getKind(101,4343
  const StringLiteral &getName(getName103,4424
  llvm::endianness getEndianess(105,4544
  dwarf::FormParams getFormParams(107,4648
using SectionHandlerTy 117,4952
class DWARFLinker 120,5051

/usr/include/llvm/DWARFLinker/AddressesMap.h,185
#define LLVM_DWARFLINKER_ADDRESSESMAP_H10,410
class AddressesMap 30,1125
  std::pair<std::pair92,4129
  getVariableRelocAdjustment(93,4171
  inline bool isTlsAddressCode(183,7627

/usr/include/llvm/DWARFLinker/DWARFFile.h,278
#define LLVM_DWARFLINKER_DWARFFILE_H10,407
class DWARFFile 25,769
  DWARFFile(29,864
  StringRef FileName;36,1174
  std::unique_ptr<DWARFContext> Dwarf;39,1229
  std::unique_ptr<AddressesMap> Addresses;42,1347
  UnloadCallbackTy UnloadFunc;45,1451
  void unload(48,1559

/usr/include/llvm/DWARFLinker/DWARFLinkerBase.h,1221
#define LLVM_DWARFLINKER_DWARFLINKERBASE_H10,413
enum class DebugSectionKind 27,925
  DebugInfo 28,965
  DebugLine,29,982
  DebugFrame,30,995
  DebugRange,31,1009
  DebugRngLists,32,1023
  DebugLoc,33,1040
  DebugLocLists,34,1052
  DebugARanges,35,1069
  DebugAbbrev,36,1085
  DebugMacinfo,37,1100
  DebugMacro,38,1116
  DebugAddr,39,1130
  DebugStr,40,1143
  DebugLineStr,41,1155
  DebugStrOffsets,42,1171
  DebugPubNames,43,1190
  DebugPubTypes,44,1207
  DebugNames,45,1224
  AppleNames,46,1238
  AppleNamespaces,47,1252
  AppleObjC,48,1271
  AppleTypes,49,1284
  NumberOfEnumEntries 50,1298
static constexpr size_t SectionKindsNum 53,1340
static constexpr StringLiteral SectionNames[SectionNames56,1447
getSectionName(66,2014
class DWARFLinkerBase 74,2317
  using MessageHandlerTy 77,2389
  using ObjFileLoaderTy 79,2506
  using InputVerificationHandlerTy 81,2617
  using ObjectPrefixMapTy 83,2728
  using CompileUnitHandlerTy 84,2792
  using TranslatorFuncTy 85,2866
  using SwiftInterfacesMapTy 86,2930
  enum class OutputFileType 88,3024
    Object,89,3064
    Assembly,90,3076
  enum class AccelTableKind 93,3147
    Apple,94,3187
    Pub,95,3267
    DebugNames 96,3320

/usr/include/llvm/DWARFLinker/IndexedValuesMap.h,312
#define LLVM_DWARFLINKER_INDEXEDVALUESMAP_H10,414
template <typename T> class IndexedValuesMap 21,685
  uint64_t getValueIndex(23,740
  const SmallVector<T> &getValues(getValues32,1034
  void clear(34,1096
  bool empty(39,1167
  ValueToIndexMapTy ValueToIndexMap;43,1272
  SmallVector<T> Values;44,1309

/usr/include/llvm/DWARFLinker/StringPool.h,463
#define LLVM_DWARFLINKER_STRINGPOOL_H10,408
class StringPoolEntryInfo 25,877
  static inline uint64_t getHashValue(28,965
  static inline bool isEqual(33,1118
  static inline StringRef getKey(38,1270
  create(44,1452
class StringPool50,1604
  StringPool(55,1833
  StringPool(60,2050
  llvm::parallel::PerThreadBumpPtrAllocator &getAllocatorRef(getAllocatorRef65,2298
  void clear(69,2390
  llvm::parallel::PerThreadBumpPtrAllocator Allocator;72,2438

/usr/include/llvm/DWARFLinker/Utils.h,170
#define LLVM_DWARFLINKER_UTILS_H10,403
namespace llvm 18,600
inline SmallString<128> guessToolchainBaseDir(41,1556
inline bool isPathAbsoluteOnWindowsOrPosix(53,1943

/usr/include/llvm/DWP/DWPError.h,190
#define LLVM_DWP_DWPERROR_H2,28
class DWPError 9,165
  DWPError(11,219
  void log(12,275
  std::error_code convertToErrorCode(13,334
  static char ID;16,435
  std::string Info;19,463

/usr/include/llvm/DWP/DWPStringPool.h,562
#define LLVM_DWP_DWPSTRINGPOOL_H2,33
class DWPStringPool 10,198
  struct CStrDenseMapInfo 12,221
    static inline const char *getEmptyKey(getEmptyKey13,249
    static inline const char *getTombstoneKey(getTombstoneKey16,374
    static unsigned getHashValue(19,503
    static bool isEqual(24,756
  MCStreamer &Out;Out33,1010
  MCSection *Sec;Sec34,1029
  DenseMap<const char 35,1047
  DenseMap<const char *, uint32_t,35,1047
  DenseMap<const char *, uint32_t, CStrDenseMapInfo> Pool;35,1047
  DWPStringPool(39,1138
  uint32_t getOffset(41,1212

/usr/include/llvm/DWP/DWP.h,749
#define LLVM_DWP_DWP_H2,23
enum OnCuIndexOverflow 18,449
  HardStop,19,474
  SoftStop,20,486
  Continue,21,498
struct UnitIndexEntry 24,514
  DWARFUnitIndex::Entry::SectionContribution Contributions[Contributions25,538
  std::string Name;26,601
  std::string DWOName;27,621
  StringRef DWPName;28,644
struct InfoSectionUnitHeader 34,846
  uint64_t Length 36,954
  uint16_t Version 39,998
  uint8_t UnitType 42,1079
  uint8_t AddrSize 45,1129
  uint64_t DebugAbbrevOffset 49,1267
  std::optional<uint64_t> Signature;53,1430
  dwarf::DwarfFormat Format 56,1514
  uint8_t HeaderSize 60,1691
struct CompileUnitIdentifiers 63,1721
  uint64_t Signature 64,1753
  const char *Name Name65,1779
  const char *DWOName DWOName66,1804

/usr/include/llvm/DebugInfo/BTF/BTFContext.h,47
#define LLVM_DEBUGINFO_BTF_BTFCONTEXT_H15,597

/usr/include/llvm/DebugInfo/BTF/BTF.h,4522
#define LLVM_LIB_TARGET_BPF_BTF_H49,1923
enum : uint32_t 57,2066
enum : uint32_t { MAGIC 57,2066
enum : uint32_t { MAGIC = 0xeB9F, VERSION 57,2066
  HeaderSize 61,2179
  ExtHeaderSize 62,2198
  CommonTypeSize 63,2220
  BTFArraySize 64,2243
  BTFEnumSize 65,2264
  BTFEnum64Size 66,2283
  BTFMemberSize 67,2305
  BTFParamSize 68,2327
  BTFDataSecVarSize 69,2347
  SecFuncInfoSize 70,2373
  SecLineInfoSize 71,2396
  SecFieldRelocSize 72,2419
  BPFFuncInfoSize 73,2444
  BPFLineInfoSize 74,2467
  BPFFieldRelocSize 75,2491
struct Header 79,2561
  uint16_t Magic;80,2577
  uint8_t Version;81,2613
  uint8_t Flags;82,2652
  uint32_t HdrLen;83,2688
  uint32_t TypeOff;86,2802
  uint32_t TypeLen;87,2850
  uint32_t StrOff;88,2898
  uint32_t StrLen;89,2948
enum : uint32_t 92,3002
  MAX_VLEN 93,3020
enum TypeKinds 96,3097
#define HANDLE_BTF_KIND(97,3124
constexpr uint32_t FWD_UNION_FLAG 102,3244
constexpr uint32_t ENUM_SIGNED_FLAG 103,3290
struct CommonType 107,3454
  uint32_t NameOff;109,3518
  uint32_t Info;118,3811
    uint32_t Size;127,4126
    uint32_t Type;128,4145
  uint32_t getKind(131,4170
  uint32_t getVlen(132,4227
enum : uint8_t 145,4662
  INT_SIGNED 146,4679
  INT_CHAR 147,4704
  INT_BOOL 148,4727
struct BTFEnum 154,4910
  uint32_t NameOff;155,4927
  int32_t Val;156,4989
struct BTFEnum64 162,5198
  uint32_t NameOff;163,5217
  uint32_t Val_Lo32;164,5280
  uint32_t Val_Hi32;165,5329
struct BTFArray 169,5439
  uint32_t ElemType;170,5457
  uint32_t IndexType;171,5497
  uint32_t Nelems;172,5535
struct BTFMember 185,6040
  uint32_t NameOff;186,6059
  uint32_t Type;187,6123
  uint32_t Offset;188,6160
struct BTFParam 194,6390
  uint32_t NameOff;195,6408
  uint32_t Type;196,6428
enum : uint8_t 200,6500
  FUNC_STATIC 201,6517
  FUNC_GLOBAL 202,6536
  FUNC_EXTERN 203,6555
enum : uint8_t 207,6612
  VAR_STATIC 208,6629
  VAR_GLOBAL_ALLOCATED 209,6687
  VAR_GLOBAL_EXTERNAL 210,6745
struct BTFDataSec 216,6976
  uint32_t Type;217,6996
  uint32_t Offset;218,7040
  uint32_t Size;219,7082
struct ExtHeader 223,7175
  uint16_t Magic;224,7194
  uint8_t Version;225,7212
  uint8_t Flags;226,7231
  uint32_t HdrLen;227,7248
  uint32_t FuncInfoOff;229,7268
  uint32_t FuncInfoLen;230,7327
  uint32_t LineInfoOff;231,7386
  uint32_t LineInfoLen;232,7445
  uint32_t FieldRelocOff;233,7504
  uint32_t FieldRelocLen;234,7566
struct BPFFuncInfo 238,7666
  uint32_t InsnOffset;239,7687
  uint32_t TypeId;240,7742
struct SecFuncInfo 244,7860
  uint32_t SecNameOff;245,7881
  uint32_t NumFuncInfo;246,7954
struct BPFLineInfo 250,8055
  uint32_t InsnOffset;251,8076
  uint32_t FileNameOff;252,8133
  uint32_t LineOff;253,8203
  uint32_t LineCol;254,8268
  uint32_t getLine(256,8378
  uint32_t getCol(257,8431
struct SecLineInfo 261,8532
  uint32_t SecNameOff;262,8553
  uint32_t NumLineInfo;263,8626
struct BPFFieldReloc 267,8735
  uint32_t InsnOffset;268,8758
  uint32_t TypeID;269,8817
  uint32_t OffsetNameOff;270,8874
  uint32_t RelocKind;271,8934
struct SecFieldReloc 275,9050
  uint32_t SecNameOff;276,9073
  uint32_t NumFieldReloc;277,9148
enum PatchableRelocKind 281,9282
  FIELD_BYTE_OFFSET 282,9319
  FIELD_BYTE_SIZE,283,9344
  FIELD_EXISTENCE,284,9363
  FIELD_SIGNEDNESS,285,9382
  FIELD_LSHIFT_U64,286,9402
  FIELD_RSHIFT_U64,287,9422
  BTF_TYPE_ID_LOCAL,288,9442
  BTF_TYPE_ID_REMOTE,289,9463
  TYPE_EXISTENCE,290,9485
  TYPE_SIZE,291,9503
  ENUM_VALUE_EXISTENCE,292,9516
  ENUM_VALUE,293,9540
  TYPE_MATCH,294,9554
  MAX_FIELD_RELOC_KIND,295,9568
#define BTF_DEFINE_TAIL(306,9991
#define BTF_DEFINE_TAIL_ARR(311,10271
struct ArrayType final : CommonType,316,10519
                         private TrailingObjects<ArrayType,ArrayType317,10556
  friend TrailingObjects;318,10628
  BTF_DEFINE_TAIL(319,10654
struct StructType final : CommonType,326,10789
                          private TrailingObjects<StructType,StructType327,10827
  friend TrailingObjects;328,10902
  BTF_DEFINE_TAIL_ARR(329,10928
struct EnumType final : CommonType,336,11102
struct EnumType final : CommonType, private TrailingObjects<EnumType,EnumType336,11102
  friend TrailingObjects;337,11183
  BTF_DEFINE_TAIL_ARR(338,11209
struct Enum64Type final : CommonType,345,11344
                          private TrailingObjects<Enum64Type,Enum64Type346,11382
  friend TrailingObjects;347,11457
  BTF_DEFINE_TAIL_ARR(348,11483
#undef BTF_DEFINE_TAIL355,11622
#undef BTF_DEFINE_TAIL_ARR356,11645

/usr/include/llvm/DebugInfo/BTF/BTFParser.h,469
#define LLVM_DEBUGINFO_BTF_BTFPARSER_H23,924
class BTFParser 35,1210
  StringRef StringsTable;43,1590
  OwningArrayRef<uint8_t> TypesBuffer;48,1783
  DenseMap<DenseMap52,1966
  DenseMap<uint64_t, BTFLinesVector> SectionLines;52,1966
  DenseMap<DenseMap56,2154
  DenseMap<uint64_t, BTFRelocVector> SectionRelocs;56,2154
  std::vector<const BTF::CommonType *> Types;62,2426
  size_t typesCount(105,4292
  struct ParseOptions 108,4394
  Error parse(124,5003

/usr/include/llvm/DebugInfo/CodeView/AppendingTypeTableBuilder.h,464
#define LLVM_DEBUGINFO_CODEVIEW_APPENDINGTYPETABLEBUILDER_H10,430
class AppendingTypeTableBuilder 26,888
  BumpPtrAllocator &RecordStorage;RecordStorage28,947
  SimpleTypeSerializer SimpleSerializer;29,982
  SmallVector<ArrayRef<uint8_t>, 2> SeenRecords;32,1098
  explicit AppendingTypeTableBuilder(35,1156
  ~AppendingTypeTableBuilder(36,1221
  BumpPtrAllocator &getAllocator(getAllocator52,1742
  template <typename T> TypeIndex writeLeafType(58,1972

/usr/include/llvm/DebugInfo/CodeView/CVRecord.h,752
#define LLVM_DEBUGINFO_CODEVIEW_CVRECORD_H10,413
template <typename Kind> class CVRecord 29,1069
  CVRecord(33,1144
  CVRecord(35,1202
  bool valid(38,1316
  uint32_t length(40,1368
  Kind kind(42,1425
  ArrayRef<uint8_t> data(49,1657
  StringRef str_data(51,1714
  ArrayRef<uint8_t> content(56,1863
  ArrayRef<uint8_t> RecordData;60,1962
using CVType 64,2067
using CVSymbol 65,2106
template <typename Record,67,2146
Error forEachCodeViewRecord(68,2188
inline Expected<CVRecord<Kind>> readCVRecordFromStream(92,2972
struct VarStreamArrayExtractor<VarStreamArrayExtractor113,3664
  Error operator()(operator()114,3723
namespace codeview 125,4063
using CVSymbolArray 126,4084
using CVTypeArray 127,4132
using CVTypeRange 128,4176

/usr/include/llvm/DebugInfo/CodeView/CVSymbolVisitor.h,335
#define LLVM_DEBUGINFO_CODEVIEW_CVSYMBOLVISITOR_H10,420
class CVSymbolVisitor 19,619
  struct FilterOptions 21,651
    std::optional<uint32_t> SymbolOffset;22,676
    std::optional<uint32_t> ParentRecursiveDepth;23,718
    std::optional<uint32_t> ChildRecursiveDepth;24,768
  SymbolVisitorCallbacks &Callbacks;Callbacks37,1261

/usr/include/llvm/DebugInfo/CodeView/CVTypeVisitor.h,141
#define LLVM_DEBUGINFO_CODEVIEW_CVTYPEVISITOR_H10,418
enum VisitorDataSource 24,752
  VDS_BytesPresent,25,777
  VDS_BytesExternal 28,994

/usr/include/llvm/DebugInfo/CodeView/CodeViewError.h,525
#define LLVM_DEBUGINFO_CODEVIEW_CODEVIEWERROR_H10,418
enum class cv_error_code 16,538
  unspecified 17,565
  insufficient_buffer,18,584
  operation_unsupported,19,607
  corrupt_record,20,632
  no_records,21,650
  unknown_member_record,22,664
namespace llvm 32,863
namespace codeview 33,880
inline std::error_code make_error_code(36,948
class CodeViewError 41,1140
  using ErrorInfo<ErrorInfo43,1217
                  StringError>::ErrorInfo;ErrorInfo44,1250
  CodeViewError(45,1317
  static char ID;46,1395

/usr/include/llvm/DebugInfo/CodeView/CodeViewRecordIO.h,1282
#define LLVM_DEBUGINFO_CODEVIEW_CODEVIEWRECORDIO_H10,421
class CodeViewRecordStreamer 31,897
class CodeViewRecordIO 43,1333
  uint32_t getCurrentOffset(44,1358
  explicit CodeViewRecordIO(55,1589
  explicit CodeViewRecordIO(58,1701
  explicit CodeViewRecordIO(61,1843
  bool isStreaming(69,2083
  bool isReading(72,2196
  bool isWriting(75,2307
  template <typename T> Error mapObject(81,2455
  template <typename T> Error mapInteger(100,2952
  template <typename T> Error mapEnum(114,3318
  template <typename SizeType,142,4248
  template <typename SizeType, typename T,142,4248
  Error mapVectorN(143,4315
  template <typename T,179,5308
  Error mapVectorTail(180,5356
  uint64_t getStreamedLen(207,6230
  void emitRawComment(213,6328
  void incrStreamedLen(226,6818
  void resetStreamedLen(231,6918
  void emitComment(236,7034
  struct RecordLimit 244,7252
    uint32_t BeginOffset;245,7275
    std::optional<uint32_t> MaxLength;246,7301
    std::optional<uint32_t> bytesRemaining(248,7341
  SmallVector<SmallVector260,7670
  SmallVector<RecordLimit, 2> Limits;260,7670
  BinaryStreamReader *Reader Reader262,7709
  BinaryStreamWriter *Writer Writer263,7749
  CodeViewRecordStreamer *Streamer Streamer264,7789
  uint64_t StreamedLen 265,7835

/usr/include/llvm/DebugInfo/CodeView/ContinuationRecordBuilder.h,595
#define LLVM_DEBUGINFO_CODEVIEW_CONTINUATIONRECORDBUILDER_H10,430
enum class ContinuationRecordKind 24,838
enum class ContinuationRecordKind { FieldList,24,838
enum class ContinuationRecordKind { FieldList, MethodOverloadList 24,838
class ContinuationRecordBuilder 26,908
  SmallVector<uint32_t,uint32_t27,942
  SmallVector<uint32_t, 4> SegmentOffsets;27,942
  std::optional<ContinuationRecordKind> Kind;28,985
  AppendingBinaryByteStream Buffer;29,1031
  BinaryStreamWriter SegmentWriter;30,1067
  TypeRecordMapping Mapping;31,1103
  ArrayRef<uint8_t> InjectedSegmentBytes;32,1132

/usr/include/llvm/DebugInfo/CodeView/DebugChecksumsSubsection.h,339
#define LLVM_DEBUGINFO_CODEVIEW_DEBUGCHECKSUMSSUBSECTION_H10,429
struct FileChecksumEntry 33,1002
  uint32_t FileNameOffset;34,1029
  FileChecksumKind Kind;35,1109
  ArrayRef<uint8_t> Checksum;36,1164
template <> struct VarStreamArrayExtractor<VarStreamArrayExtractor41,1257
  using ContextType 43,1339
namespace codeview 49,1485

/usr/include/llvm/DebugInfo/CodeView/DebugCrossExSubsection.h,144
#define LLVM_DEBUGINFO_CODEVIEW_DEBUGCROSSEXSUBSECTION_H10,427
class DebugCrossModuleExportsSubsection final : public DebugSubsection 47,1521

/usr/include/llvm/DebugInfo/CodeView/DebugCrossImpSubsection.h,373
#define LLVM_DEBUGINFO_CODEVIEW_DEBUGCROSSIMPSUBSECTION_H10,428
struct CrossModuleImportItem 29,931
  FixedStreamArray<support::ulittle32_t> Imports;31,1007
template <> struct VarStreamArrayExtractor<VarStreamArrayExtractor36,1090
  using ContextType 38,1176
namespace codeview 44,1326
class DebugCrossModuleImportsSubsection final : public DebugSubsection 70,2057

/usr/include/llvm/DebugInfo/CodeView/DebugFrameDataSubsection.h,137
#define LLVM_DEBUGINFO_CODEVIEW_DEBUGFRAMEDATASUBSECTION_H10,428
class DebugFrameDataSubsection final : public DebugSubsection 45,1537

/usr/include/llvm/DebugInfo/CodeView/DebugInlineeLinesSubsection.h,715
#define LLVM_DEBUGINFO_CODEVIEW_DEBUGINLINEELINESSUBSECTION_H10,432
enum class InlineeLinesSignature 30,980
  Normal,31,1026
  ExtraFiles 32,1075
struct InlineeSourceLineHeader 35,1131
  TypeIndex Inlinee;36,1164
  support::ulittle32_t FileID;37,1242
  support::ulittle32_t SourceLineNum;38,1321
struct InlineeSourceLine 44,1594
  const InlineeSourceLineHeader *Header;Header45,1621
  FixedStreamArray<support::ulittle32_t> ExtraFiles;46,1662
template <> struct VarStreamArrayExtractor<VarStreamArrayExtractor51,1748
  bool HasExtraFiles 55,1936
namespace codeview 58,1970
  struct Entry 89,2795
    std::vector<support::ulittle32_t> ExtraFiles;90,2812
    InlineeSourceLineHeader Header;91,2862

/usr/include/llvm/DebugInfo/CodeView/DebugLinesSubsection.h,1122
#define LLVM_DEBUGINFO_CODEVIEW_DEBUGLINESSUBSECTION_H10,425
struct LineFragmentHeader 32,1059
  support::ulittle32_t RelocOffset;33,1087
  support::ulittle16_t RelocSegment;34,1161
  support::ulittle16_t Flags;35,1236
  support::ulittle32_t CodeSize;36,1303
struct LineBlockFragmentHeader 40,1451
  support::ulittle32_t NameIndex;41,1484
  support::ulittle32_t NumLines;45,1778
  support::ulittle32_t BlockSize;46,1831
struct LineNumberEntry 54,2147
  support::ulittle32_t Offset;55,2172
  support::ulittle32_t Flags;56,2252
struct ColumnNumberEntry 60,2363
  support::ulittle16_t StartColumn;61,2390
  support::ulittle16_t EndColumn;62,2426
struct LineColumnEntry 65,2464
  support::ulittle32_t NameIndex;66,2489
  FixedStreamArray<LineNumberEntry> LineNumbers;67,2523
  FixedStreamArray<ColumnNumberEntry> Columns;68,2572
class LineColumnExtractor 71,2623
  const LineFragmentHeader *Header Header76,2761
  struct Block 107,3598
    Block(108,3615
    uint32_t ChecksumBufferOffset;111,3713
    std::vector<LineNumberEntry> Lines;112,3748
    std::vector<ColumnNumberEntry> Columns;113,3788

/usr/include/llvm/DebugInfo/CodeView/DebugStringTableSubsection.h,609
#define LLVM_DEBUGINFO_CODEVIEW_DEBUGSTRINGTABLESUBSECTION_H10,431
class DebugStringTableSubsectionRef 31,1136
  DebugStringTableSubsectionRef(33,1210
  static bool classof(35,1246
  bool valid(44,1514
  BinaryStreamRef getBuffer(46,1563
  BinaryStreamRef Stream;49,1628
class DebugStringTableSubsection 56,1907
  static bool classof(60,2008
  StringMap<uint32_t>::const_iterator begin(78,2544
  StringMap<uint32_t>::const_iterator end(82,2634
  DenseMap<DenseMap87,2767
  DenseMap<uint32_t, StringRef> IdToString;87,2767
  StringMap<uint32_t> StringToId;88,2811
  uint32_t StringSize 89,2845

/usr/include/llvm/DebugInfo/CodeView/DebugSubsection.h,434
#define LLVM_DEBUGINFO_CODEVIEW_DEBUGSUBSECTION_H10,416
class DebugSubsectionRef 21,631
  explicit DebugSubsectionRef(23,666
  virtual ~DebugSubsectionRef(24,738
  static bool classof(26,772
  DebugSubsectionKind kind(28,841
  DebugSubsectionKind Kind;31,905
class DebugSubsection 34,937
  explicit DebugSubsection(36,969
  static bool classof(39,1069
  DebugSubsectionKind kind(41,1135
  DebugSubsectionKind Kind;47,1318

/usr/include/llvm/DebugInfo/CodeView/DebugSubsectionRecord.h,600
#define LLVM_DEBUGINFO_CODEVIEW_DEBUGSUBSECTIONRECORD_H10,426
struct DebugSubsectionHeader 30,909
  support::ulittle32_t Kind;31,940
  support::ulittle32_t Length;32,1009
class DebugSubsectionRecord 35,1088
  DebugSubsectionKind Kind 47,1431
  BinaryStreamRef Data;48,1487
class DebugSubsectionRecordBuilder 51,1515
  std::shared_ptr<DebugSubsection> Subsection;65,2122
  DebugSubsectionRecord Contents;69,2281
template <> struct VarStreamArrayExtractor<VarStreamArrayExtractor74,2348
  Error operator()(operator()75,2426
namespace codeview 87,2965
using DebugSubsectionArray 89,2987

/usr/include/llvm/DebugInfo/CodeView/DebugSubsectionVisitor.h,314
#define LLVM_DEBUGINFO_CODEVIEW_DEBUGSUBSECTIONVISITOR_H10,423
class DebugSubsectionVisitor 31,1006
  virtual Error visitUnknown(35,1093
namespace detail 67,2678
Error visitDebugSubsections(69,2719
Error visitDebugSubsections(82,3112
Error visitDebugSubsections(89,3366
Error visitDebugSubsections(97,3703

/usr/include/llvm/DebugInfo/CodeView/DebugSymbolRVASubsection.h,66
#define LLVM_DEBUGINFO_CODEVIEW_DEBUGSYMBOLRVASUBSECTION_H10,429

/usr/include/llvm/DebugInfo/CodeView/DebugSymbolsSubsection.h,133
#define LLVM_DEBUGINFO_CODEVIEW_DEBUGSYMBOLSSUBSECTION_H10,426
class DebugSymbolsSubsection final : public DebugSubsection 36,1152

/usr/include/llvm/DebugInfo/CodeView/DebugUnknownSubsection.h,64
#define LLVM_DEBUGINFO_CODEVIEW_DEBUGUNKNOWNSUBSECTION_H10,423

/usr/include/llvm/DebugInfo/CodeView/Formatters.h,322
#define LLVM_DEBUGINFO_CODEVIEW_FORMATTERS_H10,415
inline detail::GuidAdapter fmt_guid(41,1112
inline detail::GuidAdapter fmt_guid(45,1205
template <> struct format_provider<format_provider51,1335
  static void format(53,1401
template <> struct format_provider<format_provider65,1738
  static void format(66,1791

/usr/include/llvm/DebugInfo/CodeView/FunctionId.h,210
#define LLVM_DEBUGINFO_CODEVIEW_FUNCTIONID_H10,415
class FunctionId 17,522
  FunctionId(19,549
  explicit FunctionId(21,579
  uint32_t getIndex(23,636
  uint32_t Index;26,692
inline bool operator=29,714

/usr/include/llvm/DebugInfo/CodeView/GUID.h,195
#define LLVM_DEBUGINFO_CODEVIEW_GUID_H10,409
struct GUID 21,599
  uint8_t Guid[Guid22,613
inline bool operator=25,637
raw_ostream &operator<<(raw_ostream &OS, const GUID &Guid)Guid49,1263

/usr/include/llvm/DebugInfo/CodeView/GlobalTypeTableBuilder.h,732
#define LLVM_DEBUGINFO_CODEVIEW_GLOBALTYPETABLEBUILDER_H10,427
class GlobalTypeTableBuilder 29,981
  BumpPtrAllocator &RecordStorage;RecordStorage31,1108
  SimpleTypeSerializer SimpleSerializer;36,1332
  DenseMap<GloballyHashedType,GloballyHashedType39,1392
  DenseMap<GloballyHashedType, TypeIndex> HashedRecords;39,1392
  SmallVector<ArrayRef<uint8_t>, 2> SeenRecords;42,1524
  SmallVector<GloballyHashedType,GloballyHashedType45,1652
  SmallVector<GloballyHashedType, 2> SeenHashes;45,1652
  explicit GlobalTypeTableBuilder(48,1710
  ~GlobalTypeTableBuilder(49,1772
  BumpPtrAllocator &getAllocator(getAllocator65,2290
  TypeIndex insertRecordAs(71,2480
  template <typename T> TypeIndex writeLeafType(110,4187

/usr/include/llvm/DebugInfo/CodeView/LazyRandomTypeCollection.h,701
#define LLVM_DEBUGINFO_CODEVIEW_LAZYRANDOMTYPECOLLECTION_H10,429
class LazyRandomTypeCollection 48,2385
  struct CacheEntry 51,2507
    CVType Type;52,2529
    uint32_t Offset;53,2546
    StringRef Name;54,2567
  explicit LazyRandomTypeCollection(58,2601
  LazyRandomTypeCollection(59,2664
  LazyRandomTypeCollection(60,2734
  LazyRandomTypeCollection(61,2812
  LazyRandomTypeCollection(63,2954
  void reset(65,3035
  void reset(66,3099
  void reset(67,3155
  uint32_t getOffsetOfType(69,3224
  BumpPtrAllocator Allocator;96,4114
  StringSaver NameStorage;97,4144
  CVTypeArray Types;100,4231
  std::vector<CacheEntry> Records;102,4253
  PartialOffsetArray PartialOffsets;108,4537

/usr/include/llvm/DebugInfo/CodeView/Line.h,1435
#define LLVM_DEBUGINFO_CODEVIEW_LINE_H10,409
class LineInfo 20,578
  enum : uint32_t 22,603
    AlwaysStepIntoLineNumber 23,623
    NeverStepIntoLineNumber 24,664
  enum : int 27,709
  enum : int { EndLineDeltaShift 27,709
  enum : uint32_t 29,751
    StartLineMask 30,771
    EndLineDeltaMask 31,803
    StatementFlag 32,838
  LineInfo(36,944
  uint32_t getStartLine(38,999
  uint32_t getLineDelta(40,1069
  uint32_t getEndLine(44,1171
  bool isStatement(46,1246
  uint32_t getRawData(48,1318
  bool isAlwaysStepInto(50,1370
  bool isNeverStepInto(54,1464
  uint32_t LineData;59,1565
class ColumnInfo 62,1590
  static const uint32_t StartColumnMask 64,1618
  static const uint32_t EndColumnMask 65,1673
  static const int EndColumnShift 66,1726
  ColumnInfo(69,1775
  uint16_t getStartColumn(75,1999
  uint16_t getEndColumn(79,2104
  uint32_t getRawData(84,2258
  uint32_t ColumnData;87,2321
class Line 90,2348
  int32_t CodeOffset;92,2370
  LineInfo LineInf;93,2392
  ColumnInfo ColumnInf;94,2412
  Line(97,2445
  Line(102,2697
  LineInfo getLineInfo(105,2839
  ColumnInfo getColumnInfo(107,2891
  int32_t getCodeOffset(109,2949
  uint32_t getStartLine(111,3005
  uint32_t getLineDelta(113,3073
  uint32_t getEndLine(115,3141
  uint16_t getStartColumn(117,3205
  uint16_t getEndColumn(119,3279
  bool isStatement(121,3349
  bool isAlwaysStepInto(123,3411
  bool isNeverStepInto(125,3483

/usr/include/llvm/DebugInfo/CodeView/MergingTypeTableBuilder.h,578
#define LLVM_DEBUGINFO_CODEVIEW_MERGINGTYPETABLEBUILDER_H10,428
class MergingTypeTableBuilder 28,941
  BumpPtrAllocator &RecordStorage;RecordStorage30,1069
  SimpleTypeSerializer SimpleSerializer;35,1293
  DenseMap<LocallyHashedType,LocallyHashedType38,1353
  DenseMap<LocallyHashedType, TypeIndex> HashedRecords;38,1353
  SmallVector<ArrayRef<uint8_t>, 2> SeenRecords;41,1484
  explicit MergingTypeTableBuilder(44,1542
  ~MergingTypeTableBuilder(45,1605
  BumpPtrAllocator &getAllocator(getAllocator61,2124
  template <typename T> TypeIndex writeLeafType(69,2426

/usr/include/llvm/DebugInfo/CodeView/RecordName.h,52
#define LLVM_DEBUGINFO_CODEVIEW_RECORDNAME_H10,415

/usr/include/llvm/DebugInfo/CodeView/RecordSerialization.h,2175
#define LLVM_DEBUGINFO_CODEVIEW_RECORDSERIALIZATION_H10,424
enum : unsigned 30,1069
enum : unsigned { MaxRecordLength 30,1069
struct RecordPrefix 32,1116
  explicit RecordPrefix(34,1166
  ulittle16_t RecordLen;36,1242
  ulittle16_t RecordKind;37,1313
inline Error consume(45,1671
template <typename T> Error consume(68,2741
template <typename T,72,2854
template <typename T, typename U> struct serialize_conditional_impl 72,2854
  serialize_conditional_impl(73,2924
  Error deserialize(75,2999
  T &Item;Item81,3142
  U Func;82,3153
template <typename T,85,3167
serialize_conditional_impl<T, U> serialize_conditional(86,3201
template <typename T,90,3333
template <typename T, typename U> struct serialize_array_impl 90,3333
  serialize_array_impl(91,3397
  Error deserialize(93,3476
  ArrayRef<T> &Item;Item97,3580
  U Func;98,3601
template <typename T> struct serialize_vector_tail_impl 101,3615
  serialize_vector_tail_impl(102,3673
  Error deserialize(104,3741
  std::vector<T> &Item;Item115,4068
struct serialize_null_term_string_array_impl 118,4096
  serialize_null_term_string_array_impl(119,4143
  Error deserialize(122,4236
  std::vector<StringRef> &Item;Item136,4657
template <typename T> struct serialize_arrayref_tail_impl 139,4693
  serialize_arrayref_tail_impl(140,4753
  Error deserialize(142,4820
  ArrayRef<T> &Item;Item147,4981
template <typename T> struct serialize_numeric_impl 150,5006
  serialize_numeric_impl(151,5060
  Error deserialize(153,5111
  T &Item;Item157,5214
template <typename T,160,5229
serialize_array_impl<T, U> serialize_array(161,5263
serialize_null_term_string_array(166,5432
serialize_vector_tail_impl<T> serialize_array_tail(171,5576
serialize_arrayref_tail_impl<T> serialize_array_tail(176,5722
template <typename T> serialize_numeric_impl<T> serialize_numeric(180,5847
template <typename T,184,5969
Error consume(185,6003
template <typename T,190,6145
Error consume(191,6179
inline Error consume(196,6315
Error consume(202,6498
Error consume(208,6659
Error consume(214,6822
template <typename T,219,6957
template <typename T, typename U,219,6957
Error consume(220,7009

/usr/include/llvm/DebugInfo/CodeView/SimpleTypeSerializer.h,142
#define LLVM_DEBUGINFO_CODEVIEW_SIMPLETYPESERIALIZER_H10,425
class SimpleTypeSerializer 19,593
  std::vector<uint8_t> ScratchBuffer;20,622

/usr/include/llvm/DebugInfo/CodeView/StringsAndChecksums.h,1090
#define LLVM_DEBUGINFO_CODEVIEW_STRINGSANDCHECKSUMS_H10,424
class StringsAndChecksumsRef 23,780
  StringsAndChecksumsRef(26,896
  explicit StringsAndChecksumsRef(29,1006
  StringsAndChecksumsRef(32,1156
  void setStrings(35,1300
  void setChecksums(36,1365
  void reset(38,1426
  void resetStrings(39,1442
  void resetChecksums(40,1465
  template <typename T> void initialize(42,1491
  const DebugStringTableSubsectionRef &strings(strings66,2557
  const DebugChecksumsSubsectionRef &checksums(checksums67,2633
  bool hasStrings(69,2712
  bool hasChecksums(70,2769
  std::shared_ptr<DebugStringTableSubsectionRef> OwnedStrings;76,2962
  std::shared_ptr<DebugChecksumsSubsectionRef> OwnedChecksums;77,3025
class StringsAndChecksums 83,3209
  using StringsPtr 85,3245
  using ChecksumsPtr 86,3311
  void setStrings(91,3491
  void setChecksums(92,3549
  const StringsPtr &strings(strings94,3614
  const ChecksumsPtr &checksums(checksums95,3670
  bool hasStrings(97,3733
  bool hasChecksums(98,3790
  StringsPtr Strings;101,3861
  ChecksumsPtr Checksums;102,3883

/usr/include/llvm/DebugInfo/CodeView/SymbolDumpDelegate.h,123
#define LLVM_DEBUGINFO_CODEVIEW_SYMBOLDUMPDELEGATE_H10,423
class SymbolDumpDelegate 20,658
  ~SymbolDumpDelegate(22,724

/usr/include/llvm/DebugInfo/CodeView/SymbolDumper.h,387
#define LLVM_DEBUGINFO_CODEVIEW_SYMBOLDUMPER_H10,417
class CVSymbolDumper 27,848
  CVSymbolDumper(29,879
  CPUType getCompilationCPUType(47,1730
  ScopedPrinter &W;W50,1811
  TypeCollection &Types;Types51,1831
  CodeViewContainer Container;52,1856
  std::unique_ptr<SymbolDumpDelegate> ObjDelegate;53,1887
  CPUType CompilationCPUType;54,1938
  bool PrintRecordBytes;55,1968

/usr/include/llvm/DebugInfo/CodeView/SymbolRecordHelpers.h,121
#define LLVM_DEBUGINFO_CODEVIEW_SYMBOLRECORDHELPERS_H10,424
namespace llvm 15,572
inline bool symbolEndsScope(39,1247

/usr/include/llvm/DebugInfo/CodeView/SymbolRecordMapping.h,345
#define LLVM_DEBUGINFO_CODEVIEW_SYMBOLRECORDMAPPING_H10,424
class SymbolRecordMapping 20,685
  explicit SymbolRecordMapping(22,753
  explicit SymbolRecordMapping(25,916
  Error visitSymbolBegin(29,1080
#define SYMBOL_RECORD(32,1185
#define SYMBOL_RECORD_ALIAS(34,1330
  CodeViewRecordIO IO;40,1494
  CodeViewContainer Container;41,1517

/usr/include/llvm/DebugInfo/CodeView/SymbolSerializer.h,581
#define LLVM_DEBUGINFO_CODEVIEW_SYMBOLSERIALIZER_H10,421
class SymbolSerializer 28,1004
  BumpPtrAllocator &Storage;Storage29,1061
  std::array<std::array33,1312
  std::array<uint8_t, MaxRecordLength> RecordBuffer;33,1312
  MutableBinaryByteStream Stream;34,1365
  BinaryStreamWriter Writer;35,1399
  SymbolRecordMapping Mapping;36,1428
  std::optional<SymbolKind> CurrentSymbol;37,1459
  Error writeRecordPrefix(39,1503
  static CVSymbol writeOneSymbol(52,1841
#define SYMBOL_RECORD(66,2420
#define SYMBOL_RECORD_ALIAS(70,2667
  Error visitKnownRecordImpl(75,2829

/usr/include/llvm/DebugInfo/CodeView/SymbolVisitorCallbackPipeline.h,414
#define LLVM_DEBUGINFO_CODEVIEW_SYMBOLVISITORCALLBACKPIPELINE_H10,434
class SymbolVisitorCallbackPipeline 20,699
  Error visitUnknownSymbol(24,823
  Error visitSymbolBegin(32,1032
  Error visitSymbolBegin(40,1262
  Error visitSymbolEnd(48,1467
  void addCallbackToPipeline(56,1668
#define SYMBOL_RECORD(60,1775
#define SYMBOL_RECORD_ALIAS(68,2346
  std::vector<SymbolVisitorCallbacks *> Pipeline;72,2475

/usr/include/llvm/DebugInfo/CodeView/SymbolVisitorCallbacks.h,336
#define LLVM_DEBUGINFO_CODEVIEW_SYMBOLVISITORCALLBACKS_H10,427
class SymbolVisitorCallbacks 18,607
  virtual Error visitUnknownSymbol(25,798
  virtual Error visitSymbolBegin(32,1113
  virtual Error visitSymbolBegin(35,1216
  virtual Error visitSymbolEnd(36,1296
#define SYMBOL_RECORD(38,1375
#define SYMBOL_RECORD_ALIAS(42,1622

/usr/include/llvm/DebugInfo/CodeView/SymbolVisitorDelegate.h,99
#define LLVM_DEBUGINFO_CODEVIEW_SYMBOLVISITORDELEGATE_H10,426
class SymbolVisitorDelegate 23,640

/usr/include/llvm/DebugInfo/CodeView/TypeCollection.h,162
#define LLVM_DEBUGINFO_CODEVIEW_TYPECOLLECTION_H10,419
class TypeCollection 18,633
  bool empty(22,704
  template <typename TFunc> void ForEachRecord(34,1153

/usr/include/llvm/DebugInfo/CodeView/TypeDumpVisitor.h,379
#define LLVM_DEBUGINFO_CODEVIEW_TYPEDUMPVISITOR_H10,420
class TypeDumpVisitor 28,882
  TypeDumpVisitor(30,944
  void setIpiTypes(38,1426
  void printTypeIndex(40,1492
#define TYPE_RECORD(56,2203
#define MEMBER_RECORD(58,2354
#define TYPE_RECORD_ALIAS(60,2513
#define MEMBER_RECORD_ALIAS(61,2575
  ScopedPrinter *W;W76,3185
  TypeCollection &TpiTypes;TpiTypes80,3240

/usr/include/llvm/DebugInfo/CodeView/TypeIndex.h,3977
#define LLVM_DEBUGINFO_CODEVIEW_TYPEINDEX_H10,414
enum class SimpleTypeKind 26,670
  None 27,709
  Void 28,769
  NotTranslated 29,803
  HResult 30,862
  SignedCharacter 32,908
  UnsignedCharacter 33,954
  NarrowCharacter 34,1002
  WideCharacter 35,1049
  Character16 36,1092
  Character32 37,1134
  Character8 38,1176
  SByte 40,1218
  Byte 41,1262
  Int16Short 42,1308
  UInt16Short 43,1349
  Int16 44,1392
  UInt16 45,1437
  Int32Long 46,1484
  UInt32Long 47,1525
  Int32 48,1568
  UInt32 49,1613
  Int64Quad 50,1660
  UInt64Quad 51,1701
  Int64 52,1744
  UInt64 53,1789
  Int128Oct 54,1836
  UInt128Oct 55,1882
  Int128 56,1930
  UInt128 57,1976
  Float16 59,2025
  Float32 60,2076
  Float32PartialPrecision 61,2127
  Float48 62,2181
  Float64 63,2232
  Float80 64,2283
  Float128 65,2334
  Complex16 67,2387
  Complex32 68,2443
  Complex32PartialPrecision 69,2499
  Complex48 70,2558
  Complex64 71,2614
  Complex80 72,2670
  Complex128 73,2726
  Boolean8 75,2784
  Boolean16 76,2824
  Boolean32 77,2865
  Boolean64 78,2906
  Boolean128 79,2947
enum class SimpleTypeMode 82,2993
  Direct 83,3032
  NearPointer 84,3079
  FarPointer 85,3125
  HugePointer 86,3170
  NearPointer32 87,3216
  FarPointer32 88,3269
  NearPointer64 89,3321
  NearPointer128 90,3374
class TypeIndex 96,3660
  static const uint32_t FirstNonSimpleIndex 98,3686
  static const uint32_t SimpleKindMask 99,3740
  static const uint32_t SimpleModeMask 100,3793
  static const uint32_t DecoratedItemIdMask 101,3846
  TypeIndex(104,3913
  explicit TypeIndex(105,3983
  explicit TypeIndex(106,4038
  TypeIndex(108,4126
  uint32_t getIndex(111,4257
  void setIndex(112,4303
  bool isSimple(113,4346
  bool isDecoratedItemId(114,4410
  bool isNoneType(116,4488
  uint32_t toArrayIndex(118,4543
  static TypeIndex fromArrayIndex(123,4677
  static TypeIndex fromDecoratedArrayIndex(127,4785
  TypeIndex removeDecoration(132,4975
  SimpleTypeKind getSimpleKind(136,5065
  SimpleTypeMode getSimpleMode(141,5199
  TypeIndex makeDirect(146,5333
  static TypeIndex None(148,5404
  static TypeIndex Void(149,5474
  static TypeIndex VoidPointer32(150,5544
  static TypeIndex VoidPointer64(153,5660
  static TypeIndex NullptrT(157,5777
  static TypeIndex SignedCharacter(164,6064
  static TypeIndex UnsignedCharacter(167,6162
  static TypeIndex NarrowCharacter(170,6264
  static TypeIndex WideCharacter(173,6362
  static TypeIndex Int16Short(176,6456
  static TypeIndex UInt16Short(179,6544
  static TypeIndex Int32(182,6634
  static TypeIndex UInt32(183,6706
  static TypeIndex Int32Long(184,6780
  static TypeIndex UInt32Long(185,6860
  static TypeIndex Int64(188,6948
  static TypeIndex UInt64(189,7020
  static TypeIndex Int64Quad(190,7094
  static TypeIndex UInt64Quad(191,7174
  static TypeIndex Float32(195,7263
  static TypeIndex Float64(196,7339
  TypeIndex &operator+=(operator+=198,7416
  TypeIndex &operator++(operator++203,7493
  TypeIndex operator++(208,7560
  TypeIndex &operator-=(operator-=214,7658
  TypeIndex &operator--(operator--220,7759
  TypeIndex operator--(225,7826
  friend inline bool operator==(operator==231,7924
  friend inline bool operator!=(operator!=235,8044
  friend inline bool operator<(239,8164
  friend inline bool operator<=(operator<=243,8282
  friend inline bool operator>(247,8402
  friend inline bool operator>=(operator>=251,8520
  friend inline TypeIndex operator+(255,8640
  friend inline TypeIndex operator-(261,8776
  friend inline uint32_t operator-(268,8943
  support::ulittle32_t Index;276,9152
struct TypeIndexOffset 282,9387
  TypeIndex Type;283,9412
  support::ulittle32_t Offset;284,9430
template <> struct DenseMapInfo<DenseMapInfo291,9591
  static inline codeview::TypeIndex getEmptyKey(292,9646
  static inline codeview::TypeIndex getTombstoneKey(295,9773
  static unsigned getHashValue(298,9908
  static bool isEqual(301,10040

/usr/include/llvm/DebugInfo/CodeView/TypeIndexDiscovery.h,280
#define LLVM_DEBUGINFO_CODEVIEW_TYPEINDEXDISCOVERY_H10,423
enum class TiRefKind 19,655
enum class TiRefKind { TypeRef,19,655
enum class TiRefKind { TypeRef, IndexRef 19,655
struct TiReference 20,699
  TiRefKind Kind;21,720
  uint32_t Offset;22,738
  uint32_t Count;23,757

/usr/include/llvm/DebugInfo/CodeView/TypeRecord.h,13221
#define LLVM_DEBUGINFO_CODEVIEW_TYPERECORD_H10,415
struct CVMemberRecord 34,1047
  TypeLeafKind Kind;35,1071
  ArrayRef<uint8_t> Data;36,1092
struct MemberAttributes 40,1165
  uint16_t Attrs 41,1191
    MethodKindShift 44,1223
  explicit MemberAttributes(49,1287
  MemberAttributes(52,1385
  MemberAccess getAccess(59,1681
  MethodKind getMethodKind(64,1875
  MethodOptions getFlags(72,2125
  bool isVirtual(79,2326
  bool isIntroducedVirtual(86,2549
  bool isStatic(93,2755
class MemberPointerInfo 100,2953
  MemberPointerInfo(104,3021
  TypeIndex getContainingType(108,3208
  PointerToMemberRepresentation getRepresentation(109,3273
  TypeIndex ContainingType;113,3365
  PointerToMemberRepresentation Representation 114,3393
class TypeRecord 118,3492
  explicit TypeRecord(121,3548
  TypeRecordKind getKind(124,3616
  TypeRecordKind Kind;126,3667
class ModifierRecord 130,3709
  explicit ModifierRecord(133,3790
  ModifierRecord(134,3859
  TypeIndex getModifiedType(138,4034
  ModifierOptions getModifiers(139,4095
  TypeIndex ModifiedType;141,4157
  ModifierOptions Modifiers 142,4183
class ProcedureRecord 146,4256
  explicit ProcedureRecord(149,4339
  ProcedureRecord(150,4409
  TypeIndex getReturnType(157,4775
  CallingConvention getCallConv(158,4832
  FunctionOptions getOptions(159,4893
  uint16_t getParameterCount(160,4950
  TypeIndex getArgumentList(161,5014
  TypeIndex ReturnType;163,5076
  CallingConvention CallConv 164,5100
  FunctionOptions Options 165,5157
  uint16_t ParameterCount 166,5208
  TypeIndex ArgumentList;167,5239
class MemberFunctionRecord 171,5285
  explicit MemberFunctionRecord(174,5378
  MemberFunctionRecord(176,5454
  TypeIndex getReturnType(186,6039
  TypeIndex getClassType(187,6096
  TypeIndex getThisType(188,6151
  CallingConvention getCallConv(189,6204
  FunctionOptions getOptions(190,6265
  uint16_t getParameterCount(191,6322
  TypeIndex getArgumentList(192,6386
  int32_t getThisPointerAdjustment(193,6447
  TypeIndex ReturnType;195,6525
  TypeIndex ClassType;196,6549
  TypeIndex ThisType;197,6572
  CallingConvention CallConv 198,6594
  FunctionOptions Options 199,6651
  uint16_t ParameterCount 200,6702
  TypeIndex ArgumentList;201,6733
  int32_t ThisPointerAdjustment 202,6759
class LabelRecord 206,6812
  explicit LabelRecord(209,6887
  LabelRecord(211,6954
  LabelType Mode 213,7036
class MemberFuncIdRecord 217,7091
  explicit MemberFuncIdRecord(220,7180
  MemberFuncIdRecord(221,7253
  TypeIndex getClassType(226,7483
  TypeIndex getFunctionType(227,7538
  StringRef getName(228,7599
  TypeIndex ClassType;230,7645
  TypeIndex FunctionType;231,7668
  StringRef Name;232,7694
class ArgListRecord 236,7730
  explicit ArgListRecord(239,7809
  ArgListRecord(241,7878
  ArrayRef<TypeIndex> getIndices(244,7994
  std::vector<TypeIndex> ArgIndices;246,8059
class StringListRecord 250,8118
  explicit StringListRecord(253,8203
  StringListRecord(255,8275
  ArrayRef<TypeIndex> getIndices(258,8397
  std::vector<TypeIndex> StringIndices;260,8465
class PointerRecord 264,8523
  static const uint32_t PointerKindShift 267,8611
  static const uint32_t PointerKindMask 268,8657
  static const uint32_t PointerModeShift 271,8744
  static const uint32_t PointerModeMask 272,8790
  static const uint32_t PointerOptionMask 275,8877
  static const uint32_t PointerSizeShift 278,8969
  static const uint32_t PointerSizeMask 279,9016
  explicit PointerRecord(282,9094
  PointerRecord(284,9163
  PointerRecord(288,9317
  PointerRecord(293,9558
  TypeIndex getReferentType(298,9846
  PointerKind getPointerKind(300,9908
  PointerMode getMode(305,10072
  PointerOptions getOptions(310,10229
  uint8_t getSize(314,10339
  MemberPointerInfo getMemberInfo(318,10430
  bool isPointerToMember(320,10497
  bool isFlat(325,10659
  bool isConst(326,10738
  bool isVolatile(328,10818
  bool isUnaligned(332,10910
  bool isRestrict(336,11004
  bool isLValueReferenceThisPtr(340,11096
  bool isRValueReferenceThisPtr(344,11214
  TypeIndex ReferentType;348,11332
  uint32_t Attrs 349,11358
  std::optional<MemberPointerInfo> MemberInfo;350,11380
  void setAttrs(352,11428
  static uint32_t calcAttrs(358,11582
class NestedTypeRecord 370,11952
  explicit NestedTypeRecord(373,12037
  NestedTypeRecord(374,12108
  TypeIndex getNestedType(377,12234
  StringRef getName(378,12285
  TypeIndex Type;380,12331
  StringRef Name;381,12349
class FieldListRecord 385,12387
  explicit FieldListRecord(388,12470
  explicit FieldListRecord(389,12540
  ArrayRef<uint8_t> Data;392,12653
class ArrayRecord 396,12695
  explicit ArrayRecord(399,12770
  ArrayRecord(400,12836
  TypeIndex getElementType(405,13065
  TypeIndex getIndexType(406,13124
  uint64_t getSize(407,13179
  StringRef getName(408,13223
  TypeIndex ElementType;410,13269
  TypeIndex IndexType;411,13294
  uint64_t Size 412,13317
  StringRef Name;413,13338
class TagRecord 416,13360
  explicit TagRecord(419,13434
  TagRecord(420,13498
  static const int HfaKindShift 426,13793
  static const int HfaKindMask 427,13831
  static const int WinRTKindShift 428,13872
  static const int WinRTKindMask 429,13912
  bool hasUniqueName(431,13956
  bool isNested(435,14066
  bool isForwardRef(439,14164
  bool containsNestedClass(443,14276
  bool isScoped(447,14398
  uint16_t getMemberCount(451,14496
  ClassOptions getOptions(452,14554
  TypeIndex getFieldList(453,14608
  StringRef getName(454,14663
  StringRef getUniqueName(455,14708
  uint16_t MemberCount 457,14766
  ClassOptions Options 458,14794
  TypeIndex FieldList;459,14839
  StringRef Name;460,14862
  StringRef UniqueName;461,14880
class ClassRecord 465,14948
  explicit ClassRecord(468,15022
  ClassRecord(469,15087
  HfaKind getHfa(476,15488
  WindowsRTClassKind getWinRTKind(482,15664
  TypeIndex getDerivationList(488,15872
  TypeIndex getVTableShape(489,15937
  uint64_t getSize(490,15996
  TypeIndex DerivationList;492,16041
  TypeIndex VTableShape;493,16069
  uint64_t Size 494,16094
struct UnionRecord 498,16131
  explicit UnionRecord(500,16198
  UnionRecord(501,16263
  HfaKind getHfa(507,16543
  uint64_t getSize(513,16719
  uint64_t Size 515,16764
class EnumRecord 519,16800
  explicit EnumRecord(522,16872
  EnumRecord(523,16936
  TypeIndex getUnderlyingType(529,17244
  TypeIndex UnderlyingType;531,17310
class BitFieldRecord 535,17357
  explicit BitFieldRecord(538,17438
  BitFieldRecord(539,17507
  TypeIndex getType(543,17685
  uint8_t getBitOffset(544,17730
  uint8_t getBitSize(545,17783
  TypeIndex Type;547,17833
  uint8_t BitSize 548,17851
  uint8_t BitOffset 549,17874
class VFTableShapeRecord 553,17917
  explicit VFTableShapeRecord(556,18006
  explicit VFTableShapeRecord(557,18079
  explicit VFTableShapeRecord(559,18211
  ArrayRef<VFTableSlotKind> getSlots(562,18355
  uint32_t getEntryCount(568,18475
  ArrayRef<VFTableSlotKind> SlotsRef;570,18539
  std::vector<VFTableSlotKind> Slots;571,18577
class TypeServer2Record 575,18637
  explicit TypeServer2Record(578,18724
  TypeServer2Record(579,18796
  const GUID &getGuid(getGuid585,19046
  uint32_t getAge(586,19093
  StringRef getName(587,19135
  GUID Guid 589,19181
  uint32_t Age 590,19199
  StringRef Name;591,19219
class StringIdRecord 595,19257
  explicit StringIdRecord(598,19338
  StringIdRecord(599,19407
  TypeIndex getId(602,19529
  StringRef getString(603,19570
  TypeIndex Id;605,19620
  StringRef String;606,19636
class FuncIdRecord 610,19674
  explicit FuncIdRecord(613,19751
  FuncIdRecord(614,19818
  TypeIndex getParentScope(618,20017
  TypeIndex getFunctionType(619,20076
  StringRef getName(620,20137
  TypeIndex ParentScope;622,20183
  TypeIndex FunctionType;623,20208
  StringRef Name;624,20234
class UdtSourceLineRecord 628,20275
  explicit UdtSourceLineRecord(631,20366
  UdtSourceLineRecord(632,20440
  TypeIndex getUDT(636,20640
  TypeIndex getSourceFile(637,20683
  uint32_t getLineNumber(638,20740
  TypeIndex UDT;640,20797
  TypeIndex SourceFile;641,20814
  uint32_t LineNumber 642,20838
class UdtModSourceLineRecord 646,20892
  explicit UdtModSourceLineRecord(649,20989
  UdtModSourceLineRecord(650,21066
  TypeIndex getUDT(655,21327
  TypeIndex getSourceFile(656,21370
  uint32_t getLineNumber(657,21427
  uint16_t getModule(658,21483
  TypeIndex UDT;660,21532
  TypeIndex SourceFile;661,21549
  uint32_t LineNumber 662,21573
  uint16_t Module 663,21600
class BuildInfoRecord 667,21643
  explicit BuildInfoRecord(670,21726
  BuildInfoRecord(671,21796
  ArrayRef<TypeIndex> getArgs(675,21954
  enum BuildInfoArg 678,22061
    CurrentDirectory,679,22083
    BuildTool,680,22128
    SourceFile,681,22178
    TypeServerPDB,682,22252
    CommandLine,683,22318
    MaxArgs684,22386
  SmallVector<SmallVector687,22404
  SmallVector<TypeIndex, MaxArgs> ArgIndices;687,22404
class VFTableRecord 691,22468
  explicit VFTableRecord(694,22547
  VFTableRecord(695,22615
  TypeIndex getCompleteClass(704,23016
  TypeIndex getOverriddenVTable(705,23079
  uint32_t getVFPtrOffset(706,23149
  StringRef getName(707,23207
  ArrayRef<StringRef> getMethodNames(709,23278
  TypeIndex CompleteClass;713,23377
  TypeIndex OverriddenVFTable;714,23404
  uint32_t VFPtrOffset 715,23435
  std::vector<StringRef> MethodNames;716,23463
class OneMethodRecord 720,23521
  explicit OneMethodRecord(723,23604
  OneMethodRecord(724,23674
  OneMethodRecord(728,23914
  TypeIndex getType(733,24204
  MethodKind getMethodKind(734,24249
  MethodOptions getOptions(735,24318
  MemberAccess getAccess(736,24382
  int32_t getVFTableOffset(737,24445
  StringRef getName(738,24506
  bool isIntroducingVirtual(740,24552
  TypeIndex Type;745,24725
  MemberAttributes Attrs;746,24743
  int32_t VFTableOffset 747,24769
  StringRef Name;748,24798
class MethodOverloadListRecord 752,24837
  explicit MethodOverloadListRecord(755,24938
  MethodOverloadListRecord(756,25017
  ArrayRef<OneMethodRecord> getMethods(759,25156
  std::vector<OneMethodRecord> Methods;761,25224
class OverloadedMethodRecord 765,25309
  explicit OverloadedMethodRecord(768,25406
  OverloadedMethodRecord(769,25483
  uint16_t getNumOverloads(774,25723
  TypeIndex getMethodList(775,25783
  StringRef getName(776,25840
  uint16_t NumOverloads 778,25886
  TypeIndex MethodList;779,25915
  StringRef Name;780,25939
class DataMemberRecord 784,25974
  explicit DataMemberRecord(787,26059
  DataMemberRecord(788,26130
  DataMemberRecord(792,26358
  MemberAccess getAccess(797,26585
  TypeIndex getType(798,26648
  uint64_t getFieldOffset(799,26693
  StringRef getName(800,26751
  MemberAttributes Attrs;802,26797
  TypeIndex Type;803,26823
  uint64_t FieldOffset 804,26841
  StringRef Name;805,26869
class StaticDataMemberRecord 809,26906
  explicit StaticDataMemberRecord(812,27003
  StaticDataMemberRecord(813,27080
  StaticDataMemberRecord(816,27263
  MemberAccess getAccess(820,27445
  TypeIndex getType(821,27508
  StringRef getName(822,27553
  MemberAttributes Attrs;824,27599
  TypeIndex Type;825,27625
  StringRef Name;826,27643
class EnumeratorRecord 830,27681
  explicit EnumeratorRecord(833,27766
  EnumeratorRecord(834,27837
  EnumeratorRecord(837,28019
  MemberAccess getAccess(841,28200
  APSInt getValue(842,28263
  StringRef getName(843,28307
  MemberAttributes Attrs;845,28353
  APSInt Value;846,28379
  StringRef Name;847,28395
class VFPtrRecord 851,28432
  explicit VFPtrRecord(854,28507
  VFPtrRecord(855,28573
  TypeIndex getType(858,28661
  TypeIndex Type;860,28707
class BaseClassRecord 864,28757
  explicit BaseClassRecord(867,28840
  BaseClassRecord(868,28910
  BaseClassRecord(871,29084
  MemberAccess getAccess(875,29257
  TypeIndex getBaseType(876,29320
  uint64_t getBaseOffset(877,29369
  MemberAttributes Attrs;879,29422
  TypeIndex Type;880,29448
  uint64_t Offset 881,29466
class VirtualBaseClassRecord 885,29520
  explicit VirtualBaseClassRecord(888,29617
  VirtualBaseClassRecord(889,29694
  VirtualBaseClassRecord(894,30021
  MemberAccess getAccess(900,30347
  TypeIndex getBaseType(901,30410
  TypeIndex getVBPtrType(902,30463
  uint64_t getVBPtrOffset(903,30518
  uint64_t getVTableIndex(904,30576
  MemberAttributes Attrs;906,30635
  TypeIndex BaseType;907,30661
  TypeIndex VBPtrType;908,30683
  uint64_t VBPtrOffset 909,30706
  uint64_t VTableIndex 910,30734
class ListContinuationRecord 915,30923
  explicit ListContinuationRecord(918,31020
  ListContinuationRecord(919,31097
  TypeIndex getContinuationIndex(923,31254
  TypeIndex ContinuationIndex;925,31326
class PrecompRecord 929,31375
  explicit PrecompRecord(932,31454
  uint32_t getStartTypeIndex(934,31523
  uint32_t getTypesCount(935,31587
  uint32_t getSignature(936,31643
  StringRef getPrecompFilePath(937,31697
  uint32_t StartTypeIndex 939,31765
  uint32_t TypesCount 940,31796
  uint32_t Signature 941,31823
  StringRef PrecompFilePath;942,31849
class EndPrecompRecord 946,31899
  explicit EndPrecompRecord(949,31984
  uint32_t getSignature(951,32056
  uint32_t Signature 953,32111

/usr/include/llvm/DebugInfo/CodeView/TypeRecordHelpers.h,92
#define LLVM_DEBUGINFO_CODEVIEW_TYPERECORDHELPERS_H10,422
inline bool isAggregate(46,1609

/usr/include/llvm/DebugInfo/CodeView/TypeRecordMapping.h,519
#define LLVM_DEBUGINFO_CODEVIEW_TYPERECORDMAPPING_H10,422
class TypeRecordMapping 26,863
  explicit TypeRecordMapping(28,927
  explicit TypeRecordMapping(29,1000
  explicit TypeRecordMapping(30,1073
  using TypeVisitorCallbacks::visitTypeBegin;32,1155
#define TYPE_RECORD(40,1481
#define MEMBER_RECORD(42,1632
#define TYPE_RECORD_ALIAS(44,1791
#define MEMBER_RECORD_ALIAS(45,1853
  std::optional<TypeLeafKind> TypeKind;49,1980
  std::optional<TypeLeafKind> MemberKind;50,2020
  CodeViewRecordIO IO;52,2063

/usr/include/llvm/DebugInfo/CodeView/TypeStreamMerger.h,132
#define LLVM_DEBUGINFO_CODEVIEW_TYPESTREAMMERGER_H10,421
struct PCHMergerInfo 27,861
  uint32_t PCHSignature{PCHSignature28,884

/usr/include/llvm/DebugInfo/CodeView/TypeSymbolEmitter.h,156
#define LLVM_DEBUGINFO_CODEVIEW_TYPESYMBOLEMITTER_H10,422
class TypeSymbolEmitter 18,549
  TypeSymbolEmitter(24,721
  virtual ~TypeSymbolEmitter(27,755

/usr/include/llvm/DebugInfo/CodeView/TypeTableCollection.h,294
#define LLVM_DEBUGINFO_CODEVIEW_TYPETABLECOLLECTION_H10,424
class TypeTableCollection 20,628
  explicit TypeTableCollection(22,688
  BumpPtrAllocator Allocator;35,1152
  StringSaver NameStorage;36,1182
  std::vector<StringRef> Names;37,1209
  ArrayRef<ArrayRef<uint8_t>> Records;38,1241

/usr/include/llvm/DebugInfo/CodeView/TypeVisitorCallbackPipeline.h,666
#define LLVM_DEBUGINFO_CODEVIEW_TYPEVISITORCALLBACKPIPELINE_H10,432
class TypeVisitorCallbackPipeline 21,737
  Error visitUnknownType(25,855
  Error visitUnknownMember(33,1074
  Error visitTypeBegin(41,1289
  Error visitTypeBegin(49,1488
  Error visitTypeEnd(57,1711
  Error visitMemberBegin(65,1906
  Error visitMemberEnd(73,2117
  void addCallbackToPipeline(81,2324
#define TYPE_RECORD(85,2429
#define MEMBER_RECORD(89,2676
#define TYPE_RECORD_ALIAS(94,3004
#define MEMBER_RECORD_ALIAS(95,3066
  template <typename T> Error visitKnownRecordImpl(99,3193
  Error visitKnownMemberImpl(108,3450
  std::vector<TypeVisitorCallbacks *> Pipeline;115,3670

/usr/include/llvm/DebugInfo/CodeView/TypeVisitorCallbacks.h,638
#define LLVM_DEBUGINFO_CODEVIEW_TYPEVISITORCALLBACKS_H10,425
class TypeVisitorCallbacks 18,601
  virtual Error visitUnknownType(23,753
  virtual Error visitTypeBegin(31,1323
  virtual Error visitTypeBegin(32,1399
  virtual Error visitTypeEnd(35,1498
  virtual Error visitUnknownMember(37,1573
  virtual Error visitMemberBegin(41,1668
  virtual Error visitMemberEnd(45,1761
#define TYPE_RECORD(49,1852
#define MEMBER_RECORD(53,2099
#define TYPE_RECORD_ALIAS(58,2347
#define MEMBER_RECORD_ALIAS(59,2409
#undef TYPE_RECORD61,2526
#undef TYPE_RECORD_ALIAS62,2545
#undef MEMBER_RECORD63,2570
#undef MEMBER_RECORD_ALIAS64,2591

/usr/include/llvm/DebugInfo/CodeView/CodeView.h,11669
#define LLVM_DEBUGINFO_CODEVIEW_CODEVIEW_H14,576
enum class TypeRecordKind 27,936
#define TYPE_RECORD(28,975
enum TypeLeafKind 34,1214
#define CV_TYPE(35,1245
enum class SymbolRecordKind 41,1445
#define SYMBOL_RECORD(42,1486
enum SymbolKind 48,1729
#define CV_SYMBOL(49,1758
#define CV_DEFINE_ENUM_CLASS_FLAGS_OPERATORS(53,1834
enum class CPUType 76,3524
  Intel8080 77,3556
  Intel8086 78,3575
  Intel80286 79,3594
  Intel80386 80,3614
  Intel80486 81,3634
  Pentium 82,3654
  PentiumPro 83,3671
  Pentium3 84,3691
  MIPS 85,3709
  MIPS16 86,3724
  MIPS32 87,3741
  MIPS64 88,3758
  MIPSI 89,3775
  MIPSII 90,3791
  MIPSIII 91,3808
  MIPSIV 92,3826
  MIPSV 93,3843
  M68000 94,3859
  M68010 95,3876
  M68020 96,3893
  M68030 97,3910
  M68040 98,3927
  Alpha 99,3944
  Alpha21164 100,3960
  Alpha21164A 101,3981
  Alpha21264 102,4003
  Alpha21364 103,4024
  PPC601 104,4045
  PPC603 105,4062
  PPC604 106,4079
  PPC620 107,4096
  PPCFP 108,4113
  PPCBE 109,4129
  SH3 110,4145
  SH3E 111,4159
  SH3DSP 112,4174
  SH4 113,4191
  SHMedia 114,4205
  ARM3 115,4223
  ARM4 116,4238
  ARM4T 117,4253
  ARM5 118,4269
  ARM5T 119,4284
  ARM6 120,4300
  ARM_XMAC 121,4315
  ARM_WMMX 122,4334
  ARM7 123,4353
  Omni 124,4368
  Ia64 125,4383
  Ia64_2 126,4398
  CEE 127,4415
  AM33 128,4429
  M32R 129,4444
  TriCore 130,4459
  X64 131,4477
  EBC 132,4491
  Thumb 133,4505
  ARMNT 134,4521
  ARM64 135,4537
  HybridX86ARM64 136,4553
  ARM64EC 137,4578
  ARM64X 138,4596
  D3D11_Shader 139,4613
enum SourceLanguage 144,4748
  C 145,4780
  Cpp 146,4792
  Fortran 147,4806
  Masm 148,4824
  Pascal 149,4839
  Basic 150,4856
  Cobol 151,4872
  Link 152,4888
  Cvtres 153,4903
  Cvtpgd 154,4920
  CSharp 155,4937
  VB 156,4954
  ILAsm 157,4967
  Java 158,4983
  JScript 159,4998
  MSIL 160,5016
  HLSL 161,5031
  ObjC 162,5046
  ObjCpp 163,5061
  Rust 165,5079
  D 169,5243
  Swift 170,5254
enum class CallingConvention 178,5533
  NearC 179,5574
  FarC 180,5642
  NearPascal 181,5709
  FarPascal 182,5777
  NearFast 183,5844
  FarFast 184,5922
  NearStdCall 185,5999
  FarStdCall 186,6043
  NearSysCall 187,6086
  FarSysCall 188,6125
  ThisCall 189,6163
  MipsCall 190,6224
  Generic 191,6259
  AlphaCall 192,6306
  PpcCall 193,6342
  SHCall 194,6376
  ArmCall 195,6421
  AM33Call 196,6455
  TriCall 197,6490
  SH5Call 198,6528
  M32RCall 199,6575
  ClrCall 200,6610
  Inline 201,6644
  NearVector 203,6735
enum class ClassOptions 206,6815
  None 207,6852
  Packed 208,6869
  HasConstructorOrDestructor 209,6888
  HasOverloadedOperator 210,6927
  Nested 211,6961
  ContainsNestedClass 212,6980
  HasOverloadedAssignmentOperator 213,7012
  HasConversionOperator 214,7056
  ForwardReference 215,7090
  Scoped 216,7119
  HasUniqueName 217,7138
  Sealed 218,7164
  Intrinsic 219,7183
CV_DEFINE_ENUM_CLASS_FLAGS_OPERATORS(221,7207
enum class FrameProcedureOptions 223,7259
  None 224,7305
  HasAlloca 225,7326
  HasSetJmp 226,7352
  HasLongJmp 227,7378
  HasInlineAssembly 228,7405
  HasExceptionHandling 229,7439
  MarkedInline 230,7476
  HasStructuredExceptionHandling 231,7505
  Naked 232,7552
  SecurityChecks 233,7574
  AsynchronousExceptionHandling 234,7605
  NoStackOrderingForSecurityChecks 235,7651
  Inlined 236,7700
  StrictSecurityChecks 237,7724
  SafeBuffers 238,7761
  EncodedLocalBasePointerMask 239,7789
  EncodedParamBasePointerMask 240,7833
  ProfileGuidedOptimization 241,7877
  ValidProfileCounts 242,7919
  OptimizedForSpeed 243,7954
  GuardCfg 244,7988
  GuardCfw 245,8013
CV_DEFINE_ENUM_CLASS_FLAGS_OPERATORS(247,8040
enum class FunctionOptions 249,8101
  None 250,8140
  CxxReturnUdt 251,8155
  Constructor 252,8178
  ConstructorWithVirtualBases 253,8200
CV_DEFINE_ENUM_CLASS_FLAGS_OPERATORS(255,8240
enum class HfaKind 257,8295
  None 258,8326
  Float 259,8341
  Double 260,8357
  Other 261,8374
enum class MemberAccess 265,8442
  None 266,8478
  Private 267,8490
  Protected 268,8505
  Public 269,8522
enum class MethodKind 273,8593
  Vanilla 274,8627
  Virtual 275,8645
  Static 276,8663
  Friend 277,8680
  IntroducingVirtual 278,8697
  PureVirtual 279,8726
  PureIntroducingVirtual 280,8748
enum class MethodOptions 284,8825
  None 285,8863
  AccessMask 286,8880
  MethodKindMask 287,8903
  Pseudo 288,8930
  NoInherit 289,8949
  NoConstruct 290,8971
  CompilerGenerated 291,8995
  Sealed 292,9025
CV_DEFINE_ENUM_CLASS_FLAGS_OPERATORS(294,9046
enum class LabelType 297,9134
  Near 298,9168
  Far 299,9182
enum class ModifierOptions 304,9272
  None 305,9312
  Const 306,9329
  Volatile 307,9347
  Unaligned 308,9368
CV_DEFINE_ENUM_CLASS_FLAGS_OPERATORS(310,9392
enum : uint32_t 313,9525
enum : uint32_t { SubsectionIgnoreFlag 313,9525
enum class DebugSubsectionKind 315,9581
  None 316,9625
  Symbols 317,9637
  Lines 318,9655
  StringTable 319,9671
  FileChecksums 320,9693
  FrameData 321,9717
  InlineeLines 322,9737
  CrossScopeImports 323,9760
  CrossScopeExports 324,9788
  ILLines 327,9868
  FuncMDTokenMap 328,9886
  TypeMDTokenMap 329,9911
  MergedAssemblyInput 330,9936
  CoffSymbolRVA 332,9967
  XfgHashType 334,9992
  XfgHashVirtual 335,10014
enum class PointerKind 339,10076
  Near16 340,10111
  Far16 341,10161
  Huge16 342,10214
  BasedOnSegment 343,10268
  BasedOnValue 344,10320
  BasedOnSegmentValue 345,10378
  BasedOnAddress 346,10444
  BasedOnSegmentAddress 347,10504
  BasedOnType 348,10572
  BasedOnSelf 349,10621
  Near32 350,10670
  Far32 351,10720
  Near64 352,10769
enum class PointerMode 356,10855
  Pointer 357,10890
  LValueReference 358,10944
  PointerToDataMember 359,10997
  PointerToMemberFunction 360,11057
  RValueReference 361,11121
enum class PointerOptions 365,11228
  None 366,11267
  Flat32 367,11288
  Volatile 368,11311
  Const 369,11336
  Unaligned 370,11358
  Restrict 371,11384
  WinRTSmartPointer 372,11409
  LValueRefThisPointer 373,11443
  RValueRefThisPointer 374,11480
CV_DEFINE_ENUM_CLASS_FLAGS_OPERATORS(376,11519
enum class PointerToMemberRepresentation 379,11604
  Unknown 380,11658
  SingleInheritanceData 381,11723
  MultipleInheritanceData 382,11796
  VirtualInheritanceData 383,11871
  GeneralData 384,11945
  SingleInheritanceFunction 385,12012
  MultipleInheritanceFunction 386,12089
  VirtualInheritanceFunction 387,12168
  GeneralFunction 388,12246
enum class VFTableSlotKind 391,12321
  Near16 392,12360
  Far16 393,12377
  This 394,12393
  Outer 395,12408
  Meta 396,12424
  Near 397,12439
  Far 398,12454
enum class WindowsRTClassKind 401,12471
  None 402,12513
  RefClass 403,12528
  ValueClass 404,12547
  Interface 405,12568
enum class LocalSymFlags 409,12633
  None 410,12671
  IsParameter 411,12683
  IsAddressTaken 412,12707
  IsCompilerGenerated 413,12734
  IsAggregate 414,12766
  IsAggregated 415,12790
  IsAliased 416,12815
  IsAlias 417,12837
  IsReturnValue 418,12857
  IsOptimizedOut 419,12883
  IsEnregisteredGlobal 420,12910
  IsEnregisteredStatic 421,12943
CV_DEFINE_ENUM_CLASS_FLAGS_OPERATORS(423,12980
enum class PublicSymFlags 426,13081
  None 427,13120
  Code 428,13132
  Function 429,13149
  Managed 430,13170
  MSIL 431,13190
CV_DEFINE_ENUM_CLASS_FLAGS_OPERATORS(433,13210
enum class ProcSymFlags 436,13310
  None 437,13346
  HasFP 438,13358
  HasIRET 439,13376
  HasFRET 440,13396
  IsNoReturn 441,13416
  IsUnreachable 442,13439
  HasCustomCallingConv 443,13465
  IsNoInline 444,13498
  HasOptimizedDebugInfo 445,13521
CV_DEFINE_ENUM_CLASS_FLAGS_OPERATORS(447,13558
enum class CompileSym2Flags 450,13658
  None 451,13699
  SourceLanguageMask 452,13711
  EC 453,13740
  NoDbgInfo 454,13755
  LTCG 455,13777
  NoDataAlign 456,13795
  ManagedPresent 457,13820
  SecurityChecks 458,13848
  HotPatch 459,13876
  CVTCIL 460,13898
  MSILModule 461,13918
CV_DEFINE_ENUM_CLASS_FLAGS_OPERATORS(463,13945
enum class CompileSym3Flags 466,14049
  None 467,14090
  SourceLanguageMask 468,14102
  EC 469,14131
  NoDbgInfo 470,14146
  LTCG 471,14168
  NoDataAlign 472,14186
  ManagedPresent 473,14211
  SecurityChecks 474,14239
  HotPatch 475,14267
  CVTCIL 476,14289
  MSILModule 477,14309
  Sdl 478,14333
  PGO 479,14350
  Exp 480,14367
CV_DEFINE_ENUM_CLASS_FLAGS_OPERATORS(482,14387
enum class ExportFlags 484,14443
  None 485,14479
  IsConstant 486,14491
  IsData 487,14514
  IsPrivate 488,14533
  HasNoName 489,14555
  HasExplicitOrdinal 490,14577
  IsForwarder 491,14608
CV_DEFINE_ENUM_CLASS_FLAGS_OPERATORS(493,14634
enum class BinaryAnnotationsOpCode 496,14732
  Invalid,497,14780
  CodeOffset,498,14791
  ChangeCodeOffsetBase,499,14805
  ChangeCodeOffset,500,14829
  ChangeCodeLength,501,14849
  ChangeFile,502,14869
  ChangeLineOffset,503,14883
  ChangeLineEndDelta,504,14903
  ChangeRangeKind,505,14925
  ChangeColumnStart,506,14944
  ChangeColumnEndDelta,507,14965
  ChangeCodeOffsetAndLineOffset,508,14989
  ChangeCodeLengthAndCodeOffset,509,15022
  ChangeColumnEnd,510,15055
enum class FrameCookieKind 514,15118
  Copy,515,15157
  XorStackPointer,516,15165
  XorFramePointer,517,15184
  XorR13,518,15203
enum class RegisterId 522,15251
#define CV_REGISTERS_ALL523,15286
#define CV_REGISTER(524,15311
#undef CV_REGISTER526,15391
#undef CV_REGISTERS_ALL527,15410
struct CPURegister 532,15549
  CPURegister(534,15596
  CPUType Cpu;538,15697
  RegisterId Reg;539,15712
enum class EncodedFramePtrReg 544,15865
  None 545,15907
  StackPtr 546,15919
  FramePtr 547,15935
  BasePtr 548,15951
enum class ThunkOrdinal 556,16175
  Standard,557,16211
  ThisAdjustor,558,16223
  Vcall,559,16239
  Pcode,560,16248
  UnknownLoad,561,16257
  TrampIncremental,562,16272
  BranchIsland563,16292
enum class TrampolineType 566,16311
enum class TrampolineType : uint16_t { TrampIncremental,566,16311
enum class TrampolineType : uint16_t { TrampIncremental, BranchIsland 566,16311
enum class FileChecksumKind 569,16450
enum class FileChecksumKind : uint8_t { None,569,16450
enum class FileChecksumKind : uint8_t { None, MD5,569,16450
enum class FileChecksumKind : uint8_t { None, MD5, SHA1,569,16450
enum class FileChecksumKind : uint8_t { None, MD5, SHA1, SHA256 569,16450
enum LineFlags 571,16518
  LF_None 572,16546
  LF_HaveColumns 573,16561
struct FrameData 577,16656
  support::ulittle32_t RvaStart;578,16675
  support::ulittle32_t CodeSize;579,16708
  support::ulittle32_t LocalSize;580,16741
  support::ulittle32_t ParamsSize;581,16775
  support::ulittle32_t MaxStackSize;582,16810
  support::ulittle32_t FrameFunc;583,16847
  support::ulittle16_t PrologSize;584,16881
  support::ulittle16_t SavedRegsSize;585,16916
  support::ulittle32_t Flags;586,16954
  enum : uint32_t 587,16984
    HasSEH 588,17004
    HasEH 589,17025
    IsFunctionStart 590,17045
struct CrossModuleExport 601,17590
  support::ulittle32_t Local;602,17617
  support::ulittle32_t Global;603,17647
struct CrossModuleImport 606,17682
  support::ulittle32_t ModuleNameOffset;607,17709
  support::ulittle32_t Count;608,17750
enum class CodeViewContainer 612,17873
enum class CodeViewContainer { ObjectFile,612,17873
enum class CodeViewContainer { ObjectFile, Pdb 612,17873
inline uint32_t alignOf(614,17924
enum class JumpTableEntrySize 629,18553
  Int8 630,18596
  UInt8 631,18608
  Int16 632,18621
  UInt16 633,18634
  Int32 634,18648
  UInt32 635,18661
  Pointer 636,18675
  UInt8ShiftLeft 637,18690
  UInt16ShiftLeft 638,18712
  Int8ShiftLeft 639,18735
  Int16ShiftLeft 640,18756

/usr/include/llvm/DebugInfo/CodeView/EnumTables.h,52
#define LLVM_DEBUGINFO_CODEVIEW_ENUMTABLES_H10,415

/usr/include/llvm/DebugInfo/CodeView/SymbolDeserializer.h,796
#define LLVM_DEBUGINFO_CODEVIEW_SYMBOLDESERIALIZER_H10,423
class SymbolDeserializer 24,922
  struct MappingInfo 25,981
    MappingInfo(26,1004
    BinaryByteStream Stream;30,1192
    BinaryStreamReader Reader;31,1221
    SymbolRecordMapping Mapping;32,1252
  template <typename T> static Error deserializeAs(36,1299
  template <typename T> static Expected<T> deserializeAs(48,1798
  explicit SymbolDeserializer(55,2038
  Error visitSymbolBegin(59,2213
  Error visitSymbolBegin(63,2326
  Error visitSymbolEnd(68,2568
#define SYMBOL_RECORD(75,2767
#define SYMBOL_RECORD_ALIAS(79,3014
  template <typename T> Error visitKnownRecordImpl(83,3143
  SymbolVisitorDelegate *Delegate;Delegate92,3433
  CodeViewContainer Container;93,3468
  std::unique_ptr<MappingInfo> Mapping;94,3499

/usr/include/llvm/DebugInfo/CodeView/SymbolRecord.h,15134
#define LLVM_DEBUGINFO_CODEVIEW_SYMBOLRECORD_H10,417
class SymbolRecord 29,975
  explicit SymbolRecord(31,1007
  SymbolRecordKind getKind(34,1079
  SymbolRecordKind Kind;36,1132
class ProcSym 41,1251
  static constexpr uint32_t RelocationOffset 42,1289
  explicit ProcSym(45,1349
  ProcSym(46,1415
  uint32_t getRelocationOffset(49,1530
  uint32_t Parent 53,1620
  uint32_t End 54,1643
  uint32_t Next 55,1663
  uint32_t CodeSize 56,1684
  uint32_t DbgStart 57,1709
  uint32_t DbgEnd 58,1734
  TypeIndex FunctionType;59,1757
  uint32_t CodeOffset 60,1783
  uint16_t Segment 61,1810
  ProcSymFlags Flags 62,1834
  StringRef Name;63,1877
  uint32_t RecordOffset 65,1896
class Thunk32Sym 69,1942
  explicit Thunk32Sym(71,1991
  Thunk32Sym(72,2060
  uint32_t Parent 75,2178
  uint32_t End 76,2201
  uint32_t Next 77,2221
  uint32_t Offset 78,2242
  uint16_t Segment 79,2265
  uint16_t Length 80,2289
  ThunkOrdinal Thunk 81,2312
  StringRef Name;82,2359
  ArrayRef<uint8_t> VariantData;83,2377
  uint32_t RecordOffset 85,2411
class TrampolineSym 89,2460
  explicit TrampolineSym(91,2512
  TrampolineSym(92,2584
  TrampolineType Type;95,2705
  uint16_t Size 96,2728
  uint32_t ThunkOffset 97,2749
  uint32_t TargetOffset 98,2777
  uint16_t ThunkSection 99,2806
  uint16_t TargetSection 100,2835
  uint32_t RecordOffset 102,2866
class SectionSym 106,2912
  explicit SectionSym(108,2961
  SectionSym(109,3030
  uint16_t SectionNumber 112,3148
  uint8_t Alignment 113,3178
  uint32_t Rva 114,3203
  uint32_t Length 115,3223
  uint32_t Characteristics 116,3246
  StringRef Name;117,3278
  uint32_t RecordOffset 119,3297
class CoffGroupSym 123,3345
  explicit CoffGroupSym(125,3396
  CoffGroupSym(126,3467
  uint32_t Size 129,3587
  uint32_t Characteristics 130,3608
  uint32_t Offset 131,3640
  uint16_t Segment 132,3663
  StringRef Name;133,3687
  uint32_t RecordOffset 135,3706
class ScopeEndSym 138,3739
  explicit ScopeEndSym(140,3789
  ScopeEndSym(141,3859
  uint32_t RecordOffset 144,3978
class JumpTableSym 147,4011
  explicit JumpTableSym(149,4062
  JumpTableSym(150,4133
  uint32_t BaseOffset 154,4264
  uint16_t BaseSegment 155,4291
  JumpTableEntrySize SwitchType;157,4320
  uint32_t BranchOffset 158,4353
  uint32_t TableOffset 159,4382
  uint16_t BranchSegment 160,4410
  uint16_t TableSegment 161,4440
  uint32_t EntriesCount 163,4470
  uint32_t RecordOffset 165,4500
class CallerSym 168,4533
  explicit CallerSym(170,4581
  CallerSym(171,4649
  std::vector<TypeIndex> Indices;174,4766
  uint32_t RecordOffset 176,4801
struct DecodedAnnotation 179,4834
  StringRef Name;180,4861
  ArrayRef<uint8_t> Bytes;181,4879
  BinaryAnnotationsOpCode OpCode 182,4906
  uint32_t U1 183,4975
  uint32_t U2 184,4994
  int32_t S1 185,5013
struct BinaryAnnotationIterator188,5035
  BinaryAnnotationIterator(193,5283
  BinaryAnnotationIterator(194,5364
  bool operator==(operator==197,5459
  BinaryAnnotationIterator &operator=(operator=201,5553
  BinaryAnnotationIterator &operator++(operator++206,5677
  const DecodedAnnotation &operator*(operator*217,5918
  static uint32_t GetCompressedAnnotation(223,6024
  static int32_t DecodeSignedOperand(261,6965
  static int32_t DecodeSignedOperand(267,7103
  bool ParseCurrentAnnotation(271,7249
  std::optional<DecodedAnnotation> Current;347,9948
  ArrayRef<uint8_t> Data;348,9992
  ArrayRef<uint8_t> Next;349,10018
class InlineSiteSym 353,10064
  explicit InlineSiteSym(355,10116
  explicit InlineSiteSym(356,10188
  iterator_range<BinaryAnnotationIterator> annotations(360,10330
  uint32_t Parent 365,10515
  uint32_t End 366,10538
  TypeIndex Inlinee;367,10558
  std::vector<uint8_t> AnnotationData;368,10579
  uint32_t RecordOffset 370,10619
struct PublicSym32Header 373,10652
  ulittle32_t Flags;374,10679
  ulittle32_t Offset;375,10700
  ulittle16_t Segment;376,10722
class PublicSym32 381,10778
  PublicSym32(383,10828
  explicit PublicSym32(384,10893
  explicit PublicSym32(385,10963
  PublicSymFlags Flags 389,11101
  uint32_t Offset 390,11148
  uint16_t Segment 391,11171
  StringRef Name;392,11195
  uint32_t RecordOffset 394,11214
class RegisterSym 398,11261
  explicit RegisterSym(400,11311
  explicit RegisterSym(401,11381
  TypeIndex Index;405,11519
  RegisterId Register;406,11538
  StringRef Name;407,11561
  uint32_t RecordOffset 409,11580
class ProcRefSym 413,11638
  explicit ProcRefSym(415,11687
  explicit ProcRefSym(416,11756
  uint32_t SumName 420,11887
  uint32_t SymOffset 421,11911
  uint16_t Module 422,11937
  StringRef Name;423,11960
  uint16_t modi(425,11979
  uint32_t RecordOffset 426,12026
class LocalSym 430,12070
  explicit LocalSym(432,12117
  explicit LocalSym(433,12184
  TypeIndex Type;436,12308
  LocalSymFlags Flags 437,12326
  StringRef Name;438,12371
  uint32_t RecordOffset 440,12390
struct LocalVariableAddrRange 443,12423
  uint32_t OffsetStart 444,12455
  uint16_t ISectStart 445,12483
  uint16_t Range 446,12510
struct LocalVariableAddrGap 449,12536
  uint16_t GapStartOffset 450,12566
  uint16_t Range 451,12597
enum : uint16_t 454,12623
enum : uint16_t { MaxDefRange 454,12623
class DefRangeSym 457,12680
  static constexpr uint32_t RelocationOffset 458,12722
  explicit DefRangeSym(461,12781
  explicit DefRangeSym(462,12851
  uint32_t getRelocationOffset(466,12989
  uint32_t Program 470,13079
  LocalVariableAddrRange Range;471,13103
  std::vector<LocalVariableAddrGap> Gaps;472,13135
  uint32_t RecordOffset 474,13178
class DefRangeSubfieldSym 478,13234
  static constexpr uint32_t RelocationOffset 479,13284
  explicit DefRangeSubfieldSym(482,13344
  explicit DefRangeSubfieldSym(483,13422
  uint32_t getRelocationOffset(487,13576
  uint32_t Program 491,13666
  uint16_t OffsetInParent 492,13690
  LocalVariableAddrRange Range;493,13721
  std::vector<LocalVariableAddrGap> Gaps;494,13753
  uint32_t RecordOffset 496,13796
struct DefRangeRegisterHeader 499,13829
  ulittle16_t Register;500,13861
  ulittle16_t MayHaveNoName;501,13885
class DefRangeRegisterSym 505,13941
  explicit DefRangeRegisterSym(507,13999
  explicit DefRangeRegisterSym(508,14077
  uint32_t getRelocationOffset(512,14231
  DefRangeRegisterHeader Hdr;514,14329
  LocalVariableAddrRange Range;515,14359
  std::vector<LocalVariableAddrGap> Gaps;516,14391
  uint32_t RecordOffset 518,14434
struct DefRangeSubfieldRegisterHeader 521,14467
  ulittle16_t Register;522,14507
  ulittle16_t MayHaveNoName;523,14531
  ulittle32_t OffsetInParent;524,14560
class DefRangeSubfieldRegisterSym 528,14626
  explicit DefRangeSubfieldRegisterSym(530,14692
  explicit DefRangeSubfieldRegisterSym(532,14784
  uint32_t getRelocationOffset(536,14954
  DefRangeSubfieldRegisterHeader Hdr;538,15060
  LocalVariableAddrRange Range;539,15098
  std::vector<LocalVariableAddrGap> Gaps;540,15130
  uint32_t RecordOffset 542,15173
struct DefRangeFramePointerRelHeader 545,15206
  little32_t Offset;546,15245
class DefRangeFramePointerRelSym 550,15301
  static constexpr uint32_t RelocationOffset 551,15358
  explicit DefRangeFramePointerRelSym(554,15417
  explicit DefRangeFramePointerRelSym(556,15508
  uint32_t getRelocationOffset(560,15676
  DefRangeFramePointerRelHeader Hdr;564,15766
  LocalVariableAddrRange Range;565,15803
  std::vector<LocalVariableAddrGap> Gaps;566,15835
  uint32_t RecordOffset 568,15878
struct DefRangeRegisterRelHeader 571,15911
  ulittle16_t Register;572,15946
  ulittle16_t Flags;573,15970
  little32_t BasePointerOffset;574,15991
class DefRangeRegisterRelSym 578,16054
  explicit DefRangeRegisterRelSym(580,16115
  explicit DefRangeRegisterRelSym(581,16196
  enum : uint16_t 589,16503
    IsSubfieldFlag 590,16523
    OffsetInParentShift 591,16547
  bool hasSpilledUDTMember(594,16582
  uint16_t offsetInParent(595,16656
  uint32_t getRelocationOffset(597,16736
  DefRangeRegisterRelHeader Hdr;599,16837
  LocalVariableAddrRange Range;600,16870
  std::vector<LocalVariableAddrGap> Gaps;601,16902
  uint32_t RecordOffset 603,16945
class DefRangeFramePointerRelFullScopeSym 607,17020
  explicit DefRangeFramePointerRelFullScopeSym(609,17094
  explicit DefRangeFramePointerRelFullScopeSym(611,17194
  int32_t Offset 615,17380
  uint32_t RecordOffset 617,17403
class BlockSym 621,17449
  static constexpr uint32_t RelocationOffset 622,17488
  explicit BlockSym(625,17548
  explicit BlockSym(626,17615
  uint32_t getRelocationOffset(629,17739
  uint32_t Parent 633,17829
  uint32_t End 634,17852
  uint32_t CodeSize 635,17872
  uint32_t CodeOffset 636,17897
  uint16_t Segment 637,17924
  StringRef Name;638,17948
  uint32_t RecordOffset 640,17967
class LabelSym 644,18013
  static constexpr uint32_t RelocationOffset 645,18052
  explicit LabelSym(648,18111
  explicit LabelSym(649,18178
  uint32_t getRelocationOffset(652,18302
  uint32_t CodeOffset 656,18392
  uint16_t Segment 657,18419
  ProcSymFlags Flags 658,18443
  StringRef Name;659,18486
  uint32_t RecordOffset 661,18505
class ObjNameSym 665,18551
  explicit ObjNameSym(667,18600
  explicit ObjNameSym(668,18672
  explicit ObjNameSym(669,18741
  uint32_t Signature 673,18872
  StringRef Name;674,18898
  uint32_t RecordOffset 676,18917
class EnvBlockSym 680,18964
  explicit EnvBlockSym(682,19014
  explicit EnvBlockSym(683,19084
  std::vector<StringRef> Fields;687,19222
  uint32_t RecordOffset 689,19256
class ExportSym 693,19301
  explicit ExportSym(695,19349
  explicit ExportSym(696,19417
  uint16_t Ordinal 699,19543
  ExportFlags Flags 700,19567
  StringRef Name;701,19608
  uint32_t RecordOffset 703,19627
class FileStaticSym 707,19676
  explicit FileStaticSym(709,19728
  explicit FileStaticSym(710,19800
  TypeIndex Index;714,19942
  uint32_t ModFilenameOffset 715,19961
  LocalSymFlags Flags 716,19995
  StringRef Name;717,20040
  uint32_t RecordOffset 719,20059
class Compile2Sym 723,20106
  explicit Compile2Sym(725,20156
  explicit Compile2Sym(726,20226
  CompileSym2Flags Flags 730,20364
  CPUType Machine;731,20415
  uint16_t VersionFrontendMajor 732,20434
  uint16_t VersionFrontendMinor 733,20471
  uint16_t VersionFrontendBuild 734,20508
  uint16_t VersionBackendMajor 735,20545
  uint16_t VersionBackendMinor 736,20581
  uint16_t VersionBackendBuild 737,20617
  StringRef Version;738,20653
  std::vector<StringRef> ExtraStrings;739,20674
  uint8_t getLanguage(741,20714
  uint32_t getFlags(742,20792
  uint32_t RecordOffset 744,20870
class Compile3Sym 748,20917
  Compile3Sym(750,20967
  explicit Compile3Sym(751,21032
  explicit Compile3Sym(752,21102
  CompileSym3Flags Flags 756,21240
  CPUType Machine;757,21291
  uint16_t VersionFrontendMajor 758,21310
  uint16_t VersionFrontendMinor 759,21347
  uint16_t VersionFrontendBuild 760,21384
  uint16_t VersionFrontendQFE 761,21421
  uint16_t VersionBackendMajor 762,21456
  uint16_t VersionBackendMinor 763,21492
  uint16_t VersionBackendBuild 764,21528
  uint16_t VersionBackendQFE 765,21564
  StringRef Version;766,21598
  void setLanguage(768,21620
  SourceLanguage getLanguage(772,21746
  CompileSym3Flags getFlags(775,21866
  bool hasOptimizations(779,21989
  uint32_t RecordOffset 784,22141
class FrameProcSym 788,22189
  explicit FrameProcSym(790,22240
  explicit FrameProcSym(791,22311
  uint32_t TotalFrameBytes 795,22451
  uint32_t PaddingFrameBytes 796,22483
  uint32_t OffsetToPadding 797,22517
  uint32_t BytesOfCalleeSavedRegisters 798,22549
  uint32_t OffsetOfExceptionHandler 799,22593
  uint16_t SectionIdOfExceptionHandler 800,22634
  FrameProcedureOptions Flags 801,22678
  RegisterId getLocalFramePtrReg(804,22812
  RegisterId getParamFramePtrReg(810,23035
  uint32_t RecordOffset 815,23191
private:private817,23221
class CallSiteInfoSym 821,23252
  static constexpr uint32_t RelocationOffset 822,23298
  explicit CallSiteInfoSym(825,23357
  explicit CallSiteInfoSym(826,23431
  uint32_t getRelocationOffset(829,23541
  uint32_t CodeOffset 833,23631
  uint16_t Segment 834,23658
  TypeIndex Type;835,23682
  uint32_t RecordOffset 837,23701
class HeapAllocationSiteSym 841,23753
  static constexpr uint32_t RelocationOffset 842,23805
  explicit HeapAllocationSiteSym(845,23864
  explicit HeapAllocationSiteSym(846,23944
  uint32_t getRelocationOffset(850,24102
  uint32_t CodeOffset 854,24192
  uint16_t Segment 855,24219
  uint16_t CallInstructionSize 856,24243
  TypeIndex Type;857,24279
  uint32_t RecordOffset 859,24298
class FrameCookieSym 863,24348
  static constexpr uint32_t RelocationOffset 864,24393
  explicit FrameCookieSym(867,24452
  explicit FrameCookieSym(868,24525
  uint32_t getRelocationOffset(871,24633
  uint32_t CodeOffset 875,24723
  uint16_t Register 876,24750
  FrameCookieKind CookieKind;877,24775
  uint8_t Flags 878,24805
  uint32_t RecordOffset 880,24827
class UDTSym 884,24881
  explicit UDTSym(886,24926
  explicit UDTSym(887,24991
  TypeIndex Type;890,25083
  StringRef Name;891,25101
  uint32_t RecordOffset 893,25120
class BuildInfoSym 897,25168
  explicit BuildInfoSym(899,25219
  explicit BuildInfoSym(900,25290
  TypeIndex BuildId;904,25430
  uint32_t RecordOffset 906,25452
class BPRelativeSym 910,25498
  explicit BPRelativeSym(912,25550
  explicit BPRelativeSym(913,25622
  int32_t Offset 917,25764
  TypeIndex Type;918,25786
  StringRef Name;919,25804
  uint32_t RecordOffset 921,25823
class RegRelativeSym 925,25870
  explicit RegRelativeSym(927,25923
  explicit RegRelativeSym(928,25996
  uint32_t Offset 932,26140
  TypeIndex Type;933,26163
  RegisterId Register;934,26181
  StringRef Name;935,26204
  uint32_t RecordOffset 937,26223
class ConstantSym 941,26285
  explicit ConstantSym(943,26335
  explicit ConstantSym(944,26405
  TypeIndex Type;948,26543
  APSInt Value;949,26561
  StringRef Name;950,26577
  uint32_t RecordOffset 952,26596
class DataSym 956,26677
  static constexpr uint32_t RelocationOffset 957,26715
  explicit DataSym(960,26774
  explicit DataSym(961,26840
  uint32_t getRelocationOffset(964,26962
  TypeIndex Type;968,27052
  uint32_t DataOffset 969,27070
  uint16_t Segment 970,27097
  StringRef Name;971,27121
  uint32_t RecordOffset 973,27140
class ThreadLocalDataSym 977,27201
  static constexpr uint32_t RelocationOffset 978,27250
  explicit ThreadLocalDataSym(981,27309
  explicit ThreadLocalDataSym(982,27386
  uint32_t getRelocationOffset(986,27538
  TypeIndex Type;990,27628
  uint32_t DataOffset 991,27646
  uint16_t Segment 992,27673
  StringRef Name;993,27697
  uint32_t RecordOffset 995,27716
class UsingNamespaceSym 999,27765
  explicit UsingNamespaceSym(1001,27821
  explicit UsingNamespaceSym(1002,27897
  StringRef Name;1006,28047
  uint32_t RecordOffset 1008,28066
class AnnotationSym 1012,28115
  explicit AnnotationSym(1014,28167
  explicit AnnotationSym(1015,28239
  uint32_t CodeOffset 1019,28381
  uint16_t Segment 1020,28408
  std::vector<StringRef> Strings;1021,28432
  uint32_t RecordOffset 1023,28467

/usr/include/llvm/DebugInfo/CodeView/TypeDeserializer.h,1264
#define LLVM_DEBUGINFO_CODEVIEW_TYPEDESERIALIZER_H10,421
class TypeDeserializer 28,959
  struct MappingInfo 29,1014
    explicit MappingInfo(30,1037
    BinaryByteStream Stream;34,1194
    BinaryStreamReader Reader;35,1223
    TypeRecordMapping Mapping;36,1254
  template <typename T> static Error deserializeAs(42,1332
  static Expected<T> deserializeAs(55,1766
  Error visitTypeBegin(67,2151
  Error visitTypeBegin(73,2375
  Error visitTypeEnd(77,2482
#define TYPE_RECORD(84,2673
#define MEMBER_RECORD(88,2920
#define TYPE_RECORD_ALIAS(89,2967
#define MEMBER_RECORD_ALIAS(90,3029
  Error visitKnownRecordImpl(95,3189
  std::unique_ptr<MappingInfo> Mapping;99,3317
class FieldListDeserializer 102,3361
  struct MappingInfo 103,3421
    explicit MappingInfo(104,3444
    BinaryStreamReader &Reader;Reader107,3549
    TypeRecordMapping Mapping;108,3581
    uint32_t StartOffset;109,3612
  explicit FieldListDeserializer(113,3652
  ~FieldListDeserializer(119,3913
  Error visitMemberBegin(125,4129
  Error visitMemberEnd(130,4301
#define TYPE_RECORD(136,4468
#define MEMBER_RECORD(137,4513
#define TYPE_RECORD_ALIAS(141,4760
#define MEMBER_RECORD_ALIAS(142,4822
  Error visitKnownMemberImpl(147,4982
  MappingInfo Mapping;159,5473

/usr/include/llvm/DebugInfo/CodeView/TypeHashing.h,1737
#define LLVM_DEBUGINFO_CODEVIEW_TYPEHASHING_H10,416
struct LocallyHashedType 34,1291
  hash_code Hash;35,1318
  ArrayRef<uint8_t> RecordData;36,1336
  static LocallyHashedType hashType(39,1413
  static std::vector<LocallyHashedType> hashTypes(43,1575
  hashTypeCollection(53,1898
enum class GlobalTypeHashAlg 62,2143
  SHA1 63,2185
  SHA1_8,64,2227
  BLAKE3,65,2277
struct GloballyHashedType 80,3214
  GloballyHashedType(82,3276
  GloballyHashedType(84,3391
  std::array<std::array88,3506
  std::array<uint8_t, 8> Hash;88,3506
  bool empty(90,3538
  friend inline bool operator==(operator==92,3607
  friend inline bool operator!=(operator!=97,3765
  static GloballyHashedType hashType(114,4755
  static std::vector<GloballyHashedType> hashTypes(123,5219
  hashIds(160,6538
  hashTypeCollection(169,6817
template <> struct DenseMapInfo<DenseMapInfo183,7354
  static codeview::LocallyHashedType Empty;184,7417
  static codeview::LocallyHashedType Tombstone;185,7461
  static codeview::LocallyHashedType getEmptyKey(187,7510
  static codeview::LocallyHashedType getTombstoneKey(189,7580
  static unsigned getHashValue(191,7658
  static bool isEqual(195,7750
template <> struct DenseMapInfo<DenseMapInfo203,7965
  static codeview::GloballyHashedType Empty;204,8029
  static codeview::GloballyHashedType Tombstone;205,8074
  static codeview::GloballyHashedType getEmptyKey(207,8124
  static codeview::GloballyHashedType getTombstoneKey(209,8195
  static unsigned getHashValue(211,8274
  static bool isEqual(215,8411
template <> struct format_provider<format_provider221,8556
  static void format(223,8630
template <> struct format_provider<format_provider229,8820
  static void format(231,8895

/usr/include/llvm/DebugInfo/DWARF/DWARFAbbreviationDeclaration.h,1318
#define LLVM_DEBUGINFO_DWARF_DWARFABBREVIATIONDECLARATION_H10,430
class DWARFAbbreviationDeclaration 26,782
  enum class ExtractState 28,827
  enum class ExtractState { Complete,28,827
  enum class ExtractState { Complete, MoreItems 28,827
  struct AttributeSpec 29,878
    AttributeSpec(30,903
    AttributeSpec(34,1053
    DWARFFormValue getFormValue(43,1367
    dwarf::Attribute Attr;50,1581
    dwarf::Form Form;51,1608
    struct ByteSizeStorage 67,2431
      bool HasByteSize;68,2460
      uint8_t ByteSize;69,2484
      ByteSizeStorage ByteSize;72,2527
      int64_t Value;73,2559
    bool isImplicitConst(77,2598
    int64_t getImplicitConstValue(81,2692
  uint32_t getCode(96,3218
  uint8_t getCodeByteSize(97,3262
  dwarf::Tag getTag(98,3321
  bool hasChildren(99,3365
  attr_iterator_range attributes(104,3507
  dwarf::Form getFormByIndex(108,3633
  size_t getNumAttributes(113,3767
  dwarf::Attribute getAttrByIndex(117,3842
  bool getAttrIsImplicitConstByIndex(122,3981
  int64_t getAttrImplicitConstValueByIndex(127,4136
  struct FixedSizeInfo 189,6895
  uint32_t Code;210,7695
  dwarf::Tag Tag;211,7712
  uint8_t CodeByteSize;212,7730
  bool HasChildren;213,7754
  AttributeSpecVector AttributeSpecs;214,7774
  std::optional<FixedSizeInfo> FixedAttributeSize;217,7932

/usr/include/llvm/DebugInfo/DWARF/DWARFAddressRange.h,385
#define LLVM_DEBUGINFO_DWARF_DWARFADDRESSRANGE_H10,419
struct DWARFAddressRange 25,695
  uint64_t LowPC;26,722
  uint64_t HighPC;27,740
  uint64_t SectionIndex;28,759
  DWARFAddressRange(33,848
  bool valid(40,1152
  bool intersects(43,1281
  bool merge(63,2031
inline bool operator<(75,2384
inline bool operator==(operator==80,2605
using DWARFAddressRangesVector 88,2976

/usr/include/llvm/DebugInfo/DWARF/DWARFAttribute.h,187
#define LLVM_DEBUGINFO_DWARF_DWARFATTRIBUTE_H10,416
struct DWARFAttribute 24,890
  DWARFFormValue Value;32,1236
  bool isValid(34,1261
  explicit operator bool(operator bool38,1346

/usr/include/llvm/DebugInfo/DWARF/DWARFCompileUnit.h,142
#define LLVM_DEBUGINFO_DWARF_DWARFCOMPILEUNIT_H10,418
class DWARFCompileUnit 22,637
  DWARFCompileUnit(24,689
  ~DWARFCompileUnit(34,1262

/usr/include/llvm/DebugInfo/DWARF/DWARFDataExtractor.h,458
#define LLVM_DEBUGINFO_DWARF_DWARFDATAEXTRACTOR_H10,420
class DWARFDataExtractor 21,774
  DWARFDataExtractor(28,1068
  DWARFDataExtractor(34,1371
  DWARFDataExtractor(36,1508
  DWARFDataExtractor(43,1794
  std::pair<std::pair53,2383
  std::pair<std::pair56,2489
  std::pair<uint64_t, dwarf::DwarfFormat> getInitialLength(56,2489
  uint64_t getRelocatedValue(65,2914
  uint64_t getRelocatedAddress(72,3243
  uint64_t getRelocatedAddress(75,3388

/usr/include/llvm/DebugInfo/DWARF/DWARFDebugAddr.h,529
#define LLVM_DEBUGINFO_DWARF_DWARFDEBUGADDR_H10,408
class DWARFDebugAddrTable 26,836
  dwarf::DwarfFormat Format;27,864
  uint64_t Offset;28,893
  uint16_t Version;33,1066
  uint8_t AddrSize;37,1245
  uint8_t SegSize;40,1410
  std::vector<uint64_t> Addrs;41,1429
  void invalidateLength(44,1519
  dwarf::DwarfFormat getFormat(76,2874
  uint64_t getLength(79,2972
  uint16_t getVersion(82,3061
  uint8_t getAddressSize(85,3157
  uint8_t getSegmentSelectorSize(88,3266
  ArrayRef<uint64_t> getAddressEntries(91,3377

/usr/include/llvm/DebugInfo/DWARF/DWARFDebugArangeSet.h,689
#define LLVM_DEBUGINFO_DWARF_DWARFDEBUGARANGESET_H10,421
class DWARFDebugArangeSet 23,681
  struct Header 25,717
    uint64_t Length;28,836
    dwarf::DwarfFormat Format;30,894
    uint64_t CuOffset;33,1053
    uint16_t Version;35,1110
    uint8_t AddrSize;38,1289
    uint8_t SegSize;41,1462
  struct Descriptor 44,1489
    uint64_t Address;45,1511
    uint64_t Length;46,1533
    uint64_t getEndAddress(48,1555
  uint64_t Offset;56,1823
  Header HeaderData;57,1842
  DescriptorColl ArangeDescriptors;58,1863
  DWARFDebugArangeSet(61,1908
  uint64_t getCompileUnitDIEOffset(68,2121
  const Header &getHeader(getHeader70,2197
  desc_iterator_range descriptors(72,2255

/usr/include/llvm/DebugInfo/DWARF/DWARFDebugAranges.h,614
#define LLVM_DEBUGINFO_DWARF_DWARFDEBUGARANGES_H10,419
class DWARFDebugAranges 23,658
  void generate(25,692
  uint64_t findAddress(26,728
  struct Range 38,1135
    explicit Range(39,1152
    void setHighPC(42,1292
    uint64_t HighPC(49,1447
    uint64_t LowPC;59,1641
    uint64_t Length;60,1689
    uint64_t CUOffset;61,1765
  struct RangeEndpoint 64,1833
    uint64_t Address;65,1858
    uint64_t CUOffset;66,1880
    bool IsRangeStart;67,1903
    RangeEndpoint(69,1927
  std::vector<RangeEndpoint> Endpoints;80,2281
  RangeColl Aranges;81,2321
  DenseSet<uint64_t> ParsedCUOffsets;82,2342

/usr/include/llvm/DebugInfo/DWARF/DWARFDebugFrame.h,6083
#define LLVM_DEBUGINFO_DWARF_DWARFDEBUGFRAME_H10,417
class UnwindLocation 36,1105
  enum Location 38,1136
    Unspecified,40,1177
    Undefined,42,1252
    Same,46,1377
    CFAPlusOffset,50,1505
    RegPlusOffset,55,1719
    DWARFExpr,60,1909
    Constant,63,2004
  Location Kind;67,2033
  uint32_t RegNum;68,2114
  int32_t Offset;69,2184
  std::optional<uint32_t> AddrSpace;70,2262
  std::optional<DWARFExpression> Expr;72,2401
  bool Dereference;74,2537
  UnwindLocation(79,2764
  UnwindLocation(83,2908
  UnwindLocation(87,3102
  Location getLocation(131,5549
  uint32_t getRegister(132,5597
  int32_t getOffset(133,5647
  uint32_t getAddressSpace(134,5694
  int32_t getConstant(138,5806
  void setRegister(142,6035
  void setOffset(146,6274
  void setConstant(150,6520
  std::optional<DWARFExpression> getDWARFExpressionBytes(152,6575
class RegisterLocations 182,7767
  std::map<std::map183,7793
  std::map<uint32_t, UnwindLocation> Locations;183,7793
  std::optional<UnwindLocation> getRegisterLocation(192,8100
  void setRegisterLocation(204,8531
  void removeRegisterLocation(212,8827
  bool hasLocations(228,9556
  size_t size(230,9616
  bool operator==(operator==232,9668
class UnwindRow 255,10814
  std::optional<uint64_t> Address;258,10980
  UnwindLocation CFAValue;259,11061
  RegisterLocations RegLocs;260,11140
  UnwindRow(263,11226
  bool hasAddress(266,11351
  uint64_t getAddress(272,11576
  void setAddress(278,11793
  void slideAddress(286,12139
  UnwindLocation &getCFAValue(getCFAValue287,12200
  const UnwindLocation &getCFAValue(getCFAValue288,12253
  RegisterLocations &getRegisterLocations(getRegisterLocations289,12318
  const RegisterLocations &getRegisterLocations(getRegisterLocations290,12382
class UnwindTable 321,13631
  using RowContainer 323,13659
  using iterator 324,13706
  using const_iterator 325,13749
  size_t size(327,13805
  iterator begin(328,13851
  const_iterator begin(329,13895
  iterator end(330,13951
  const_iterator end(331,13991
  RowContainer Rows;375,15790
  std::optional<uint64_t> EndAddress;378,15945
class CFIProgram 407,17402
  static constexpr size_t MaxOperands 409,17429
  typedef SmallVector<uint64_t,uint64_t410,17472
  typedef SmallVector<uint64_t, MaxOperands> Operands;410,17472
  struct Instruction 415,17769
    Instruction(416,17792
    uint8_t Opcode;418,17845
    Operands Ops;419,17865
    std::optional<DWARFExpression> Expression;421,17957
  using InstrList 430,18286
  using iterator 431,18332
  using const_iterator 432,18372
  iterator begin(434,18425
  const_iterator begin(435,18477
  iterator end(436,18541
  const_iterator end(437,18589
  unsigned size(439,18650
  bool empty(440,18716
  uint64_t codeAlign(441,18770
  int64_t dataAlign(442,18831
  Triple::ArchType triple(443,18891
  CFIProgram(445,18943
  void addInstruction(460,19615
  std::vector<Instruction> Instructions;466,19822
  const uint64_t CodeAlignmentFactor;467,19863
  const int64_t DataAlignmentFactor;468,19901
  Triple::ArchType Arch;469,19938
  void addInstruction(472,20037
  void addInstruction(477,20175
  void addInstruction(483,20388
  void addInstruction(490,20671
  enum OperandType 504,21366
    OT_Unset,505,21387
    OT_None,506,21401
    OT_Address,507,21414
    OT_Offset,508,21430
    OT_FactoredCodeOffset,509,21445
    OT_SignedFactDataOffset,510,21472
    OT_UnsignedFactDataOffset,511,21501
    OT_Register,512,21532
    OT_AddressSpace,513,21549
    OT_Expression514,21570
class FrameEntry 532,22227
  enum FrameKind 534,22254
  enum FrameKind { FK_CIE,534,22254
  enum FrameKind { FK_CIE, FK_FDE 534,22254
  FrameEntry(536,22292
  FrameKind getKind(543,22595
  uint64_t getOffset(544,22640
  uint64_t getLength(545,22688
  const CFIProgram &cfis(cfis546,22736
  CFIProgram &cfis(cfis547,22786
  const FrameKind Kind;553,22958
  const bool IsDWARF64;555,22983
  const uint64_t Offset;558,23051
  const uint64_t Length;561,23119
  CFIProgram CFIs;563,23145
class CIE 567,23209
  CIE(571,23406
  static bool classof(590,24522
  StringRef getAugmentationString(592,24603
  uint64_t getCodeAlignmentFactor(593,24670
  int64_t getDataAlignmentFactor(594,24744
  uint8_t getVersion(595,24817
  uint64_t getReturnAddressRegister(596,24866
  std::optional<uint64_t> getPersonalityAddress(597,24944
  std::optional<uint32_t> getPersonalityEncoding(598,25024
  StringRef getAugmentationData(602,25115
  uint32_t getFDEPointerEncoding(604,25185
  uint32_t getLSDAPointerEncoding(606,25258
  const uint8_t Version;612,25493
  const SmallString<8> Augmentation;613,25518
  const uint8_t AddressSize;614,25555
  const uint8_t SegmentDescriptorSize;615,25584
  const uint64_t CodeAlignmentFactor;616,25623
  const int64_t DataAlignmentFactor;617,25661
  const uint64_t ReturnAddressRegister;618,25698
  const SmallString<8> AugmentationData;621,25810
  const uint32_t FDEPointerEncoding;622,25851
  const uint32_t LSDAPointerEncoding;623,25888
  const std::optional<uint64_t> Personality;624,25926
  const std::optional<uint32_t> PersonalityEnc;625,25971
class FDE 629,26063
  FDE(631,26103
  const CIE *getLinkedCIE(getLinkedCIE642,26669
  uint64_t getCIEPointer(643,26725
  uint64_t getInitialLocation(644,26781
  uint64_t getAddressRange(645,26847
  std::optional<uint64_t> getLSDAAddress(646,26907
  static bool classof(650,27051
  const uint64_t CIEPointer;657,27475
  const uint64_t InitialLocation;658,27504
  const uint64_t AddressRange;659,27538
  const CIE *LinkedCIE;LinkedCIE660,27569
  const std::optional<uint64_t> LSDAAddress;661,27593
class DWARFDebugFrame 667,27715
  const Triple::ArchType Arch;668,27739
  const bool IsEH;670,27820
  const uint64_t EHFrameAddress;672,27900
  std::vector<std::unique_ptr<dwarf::FrameEntry>> Entries;674,27934
  using iterator 675,27993
  bool empty(698,28930
  iterator begin(701,29016
  iterator end(702,29069
  iterator_range<iterator> entries(703,29118
  uint64_t getEHFrameAddress(707,29237

/usr/include/llvm/DebugInfo/DWARF/DWARFDebugInfoEntry.h,441
#define LLVM_DEBUGINFO_DWARF_DWARFDEBUGINFOENTRY_H10,421
class DWARFDebugInfoEntry 22,724
  bool extractFast(41,1371
  uint64_t getOffset(45,1553
  std::optional<uint32_t> getParentIdx(48,1641
  std::optional<uint32_t> getSiblingIdx(56,1818
  void setSiblingIdx(64,1977
  dwarf::Tag getTag(66,2035
  bool hasChildren(70,2137
  const DWARFAbbreviationDeclaration *getAbbreviationDeclarationPtr(getAbbreviationDeclarationPtr72,2217

/usr/include/llvm/DebugInfo/DWARF/DWARFDebugLine.h,3057
#define LLVM_DEBUGINFO_DWARF_DWARFDEBUGLINE_H10,416
class DWARFDebugLine 28,833
  struct FileNameEntry 30,864
    DWARFFormValue Name;33,921
    MD5::MD5Result Checksum;37,1022
    DWARFFormValue Source;38,1051
  struct ContentTypeTracker 43,1179
  struct Prologue 59,1739
    uint64_t TotalLength;64,1912
    dwarf::FormParams FormParams;68,2131
    uint64_t PrologueLength;71,2305
    uint8_t SegSelectorSize;73,2386
    uint8_t MinInstLength;77,2604
    uint8_t MaxOpsPerInst;80,2730
    uint8_t DefaultIsStmt;82,2806
    int8_t LineBase;84,2911
    uint8_t LineRange;86,3010
    uint8_t OpcodeBase;88,3090
    ContentTypeTracker ContentTypes;90,3188
    std::vector<uint8_t> StandardOpcodeLengths;91,3225
    std::vector<DWARFFormValue> IncludeDirectories;92,3273
    std::vector<FileNameEntry> FileNames;93,3325
    const dwarf::FormParams getFormParams(95,3368
    uint16_t getVersion(96,3441
    uint8_t getAddressSize(97,3504
    bool isDWARF64(98,3571
    uint32_t sizeofTotalLength(100,3647
    uint32_t sizeofPrologueLength(102,3720
  struct Row 132,4811
    static bool orderByAddress(142,5093
    object::SectionedAddress Address;152,5668
    uint32_t Line;156,5923
    uint16_t Column;160,6164
    uint16_t File;163,6304
    uint32_t Discriminator;166,6426
    uint8_t Isa;169,6583
    uint8_t OpIndex;173,6809
    uint8_t IsStmt 176,6929
        BasicBlock 179,7062
        EndSequence 183,7254
        PrologueEnd 187,7462
        EpilogueBegin 191,7669
  struct Sequence 197,7926
    uint64_t LowPC;202,8111
    uint64_t HighPC;203,8131
    uint64_t SectionIndex;207,8340
    unsigned FirstRowIndex;208,8367
    unsigned LastRowIndex;209,8395
    bool Empty;210,8422
    static bool orderByHighPC(214,8458
    bool isValid(219,8646
    bool containsPC(223,8755
  struct LineTable 229,8931
    void appendRow(235,9054
    void appendSequence(237,9127
    bool hasFileAtIndex(248,9568
    std::optional<uint64_t> getLastValidFileIndex(252,9676
    bool getFileNameByIndex(261,10105
    struct Prologue Prologue;293,11602
    RowVector Rows;294,11632
    SequenceVector Sequences;295,11652
  class SectionParser 318,12619
    bool done(354,14371
    uint64_t getOffset(357,14458
    LineToUnitMap LineToUnit;364,14677
    DWARFDataExtractor &DebugLineData;DebugLineData366,14708
    const DWARFContext &Context;Context367,14747
  struct ParsingState 373,14843
    struct AddrOpIndexDelta 380,15050
      uint64_t AddrOffset;381,15080
      int16_t OpIndexDelta;382,15107
    struct OpcodeAdvanceResults 390,15407
      uint64_t AddrDelta;391,15441
      int16_t OpIndexDelta;392,15467
      uint8_t AdjustedOpcode;393,15495
    struct SpecialOpcodeDelta 401,15815
      uint64_t Address;402,15847
      int32_t Line;403,15871
      int16_t OpIndex;404,15891
    struct LineTable *LineTable;LineTable413,16243
    struct Row Row;414,16276
    struct Sequence Sequence;415,16296
    uint64_t LineTableOffset;418,16338
  LineTableMapTy LineTableMap;429,16665

/usr/include/llvm/DebugInfo/DWARF/DWARFDebugLoc.h,845
#define LLVM_DEBUGINFO_DWARF_DWARFDEBUGLOC_H10,415
struct DWARFLocationEntry 30,942
  uint8_t Kind;32,1005
  uint64_t Value0;35,1083
  uint64_t Value1;38,1165
  uint64_t SectionIndex;41,1259
  SmallVector<uint8_t,uint8_t44,1339
  SmallVector<uint8_t, 4> Loc;44,1339
class DWARFLocationTable 49,1497
  DWARFLocationTable(51,1532
  const DWARFDataExtractor &getData(getData78,3010
  DWARFDataExtractor Data;81,3077
  struct LocationList 91,3436
    uint64_t Offset;94,3558
    SmallVector<SmallVector96,3638
    SmallVector<DWARFLocationEntry, 2> Entries;96,3638
class DWARFDebugLoclists final : public DWARFLocationTable 124,4547
class ResolverError 146,5305
  static char ID;148,5369
  ResolverError(150,5388
  std::error_code convertToErrorCode(153,5523
  uint32_t Index;158,5634
  dwarf::LoclistEntries Kind;159,5652

/usr/include/llvm/DebugInfo/DWARF/DWARFDebugPubTable.h,508
#define LLVM_DEBUGINFO_DWARF_DWARFDEBUGPUBTABLE_H10,420
class DWARFDebugPubTable 26,797
  struct Entry 28,832
    uint64_t SecOffset;30,916
    dwarf::PubIndexEntryDescriptor Descriptor;33,998
    StringRef Name;37,1145
  struct Set 44,1447
    uint64_t Length;47,1563
    dwarf::DwarfFormat Format;50,1622
    uint16_t Version;54,1767
    uint64_t Offset;58,1917
    uint64_t Size;62,2062
    std::vector<Entry> Entries;64,2082
  std::vector<Set> Sets;68,2129
  ArrayRef<Set> getData(82,2521

/usr/include/llvm/DebugInfo/DWARF/DWARFDebugRangeList.h,465
#define LLVM_DEBUGINFO_DWARF_DWARFDEBUGRANGELIST_H10,421
class DWARFDebugRangeList 24,673
  struct RangeListEntry 26,709
    uint64_t StartAddress;31,986
    uint64_t EndAddress;37,1369
    uint64_t SectionIndex;39,1441
    bool isEndOfListEntry(44,1654
  uint64_t Offset;59,2253
  uint8_t AddressSize;60,2272
  std::vector<RangeListEntry> Entries;61,2295
  DWARFDebugRangeList(64,2343
  const std::vector<RangeListEntry> &getEntries(getEntries69,2504

/usr/include/llvm/DebugInfo/DWARF/DWARFDebugRnglists.h,287
#define LLVM_DEBUGINFO_DWARF_DWARFDEBUGRNGLISTS_H10,420
struct RangeListEntry 30,885
  uint64_t Value0;35,1229
  uint64_t Value1;36,1248
  Error extract(38,1268
  dump(40,1338
class DWARFDebugRnglist 48,1709
class DWARFDebugRnglistTable 62,2274
  DWARFDebugRnglistTable(64,2360

/usr/include/llvm/DebugInfo/DWARF/DWARFDie.h,2137
#define LLVM_DEBUGINFO_DWARF_DWARFDIE_H10,410
class DWARFDie 42,1716
  DWARFDie(48,1836
  bool isValid(50,1916
  explicit operator bool(51,1960
  const DWARFDebugInfoEntry *getDebugInfoEntry(getDebugInfoEntry52,2015
  DWARFUnit *getDwarfUnit(getDwarfUnit53,2086
  const DWARFAbbreviationDeclaration *getAbbreviationDeclarationPtr(getAbbreviationDeclarationPtr58,2261
  uint64_t getOffset(66,2581
  dwarf::Tag getTag(71,2711
  bool hasChildren(78,2887
  bool isNULL(84,3085
class DWARFDie::attribute_iterator300,12574
  DWARFDie Die;304,12803
  DWARFAttribute AttrValue;306,12890
  uint32_t Index;308,12988
  explicit operator bool(operator bool326,13738
  const DWARFAttribute &operator*(operator*327,13803
inline bool operator==(operator==330,13871
inline bool operator!=(operator!=335,14037
inline bool operator==(operator==340,14194
inline bool operator!=(operator!=345,14378
inline bool operator<(349,14472
class DWARFDie::iterator353,14585
  DWARFDie Die;356,14739
  explicit iterator(365,14961
  iterator &operator++(operator++367,15006
  iterator &operator--(operator--372,15084
  const DWARFDie &operator*(operator*377,15170
inline bool operator==(operator==380,15226
inline DWARFDie::iterator DWARFDie::begin(begin387,15488
inline DWARFDie::iterator DWARFDie::end(end391,15579
inline iterator_range<DWARFDie::iterator> DWARFDie::children(children395,15667
namespace std 401,15803
class reverse_iterator<reverse_iterator404,15832
  llvm::DWARFDie Die;410,16048
  bool AtEnd;411,16070
  reverse_iterator(414,16093
  llvm::DWARFDie::iterator base(420,16259
  reverse_iterator<llvm::DWARFDie::iterator> &operator++(operator++424,16375
  reverse_iterator<llvm::DWARFDie::iterator> &operator--(operator--434,16606
  const llvm::DWARFDie &operator*(operator*444,16834
  bool equals(452,17166
namespace llvm 459,17320
inline bool operator==(operator==461,17338
inline bool operator!=(operator!=466,17523
inline std::reverse_iterator<DWARFDie::iterator> DWARFDie::rbegin(rbegin471,17706
inline std::reverse_iterator<DWARFDie::iterator> DWARFDie::rend(rend475,17829

/usr/include/llvm/DebugInfo/DWARF/DWARFExpression.h,1978
#define LLVM_DEBUGINFO_DWARF_DWARFEXPRESSION_H10,417
class DWARFExpression 23,704
  class Operation 32,1017
    enum Encoding 35,1111
      Size1 36,1141
      Size2 37,1158
      Size4 38,1175
      Size8 39,1192
      SizeLEB 40,1209
      SizeAddr 41,1228
      SizeRefAddr 42,1248
      SizeBlock 43,1271
      BaseTypeRef 44,1335
      SizeSubOpLEB 47,1480
      WasmLocationArg 48,1504
      SignBit 49,1532
      SignedSize1 50,1554
      SignedSize2 51,1591
      SignedSize4 52,1628
      SignedSize8 53,1665
      SignedSizeLEB 54,1702
    enum DwarfVersion 57,1751
      DwarfNA,58,1785
      Dwarf2 59,1843
      Dwarf3,60,1861
      Dwarf4,61,1875
      Dwarf562,1889
    struct Description 66,1968
      DwarfVersion Version;67,1993
      SmallVector<Encoding> Op;68,2069
      Description(71,2165
      Description(73,2258
    uint8_t Opcode;79,2399
    Description Desc;80,2458
    uint64_t EndOffset;82,2504
    SmallVector<uint64_t> Operands;83,2528
    SmallVector<uint64_t> OperandEndOffsets;84,2564
    const Description &getDescription(getDescription87,2620
    uint8_t getCode(88,2683
    uint64_t getNumOperands(90,2778
    ArrayRef<uint64_t> getRawOperands(91,2842
    uint64_t getRawOperand(92,2910
    ArrayRef<uint64_t> getOperandEndOffsets(93,2983
    uint64_t getOperandEndOffset(96,3075
    uint64_t getEndOffset(99,3173
    bool isError(100,3229
  class iterator113,3731
    const DWARFExpression *Expr;Expr117,3910
    uint64_t Offset;118,3943
    Operation Op;119,3964
    iterator(120,3982
    iterator &operator++(operator++128,4241
    const Operation &operator*(operator*136,4515
    iterator skipBytes(138,4570
  DWARFExpression(146,4795
  iterator begin(152,5067
  iterator end(153,5122
  StringRef getData(170,5800
  DataExtractor Data;177,6081
  uint8_t AddressSize;178,6103
  std::optional<dwarf::DwarfFormat> Format;179,6126
inline bool operator==(operator==182,6174

/usr/include/llvm/DebugInfo/DWARF/DWARFFormValue.h,1466
#define LLVM_DEBUGINFO_DWARF_DWARFFORMVALUE_H10,416
class DWARFFormValue 26,749
  enum FormClass 28,780
    FC_Unknown,29,799
    FC_Address,30,815
    FC_Block,31,831
    FC_Constant,32,845
    FC_String,33,862
    FC_Flag,34,877
    FC_Reference,35,890
    FC_Indirect,36,908
    FC_SectionOffset,37,925
    FC_Exprloc38,947
  struct ValueType 41,968
    ValueType(42,989
    ValueType(43,1019
    ValueType(44,1057
    ValueType(45,1096
      uint64_t uval;48,1151
      int64_t sval;49,1172
      const char *cstr;cstr50,1192
    uint64_t SectionIndex;53,1258
  dwarf::Form Form;57,1339
  ValueType Value;60,1493
  DWARFFormValue(64,1703
  DWARFFormValue(67,1780
  dwarf::Form getForm(80,2482
  uint64_t getRawUValue(81,2529
  const DWARFUnit *getUnit(getUnit84,2625
  bool extractValue(103,3716
  struct UnitOffset 111,4125
    DWARFUnit *Unit;Unit112,4147
    uint64_t Offset;113,4168
  bool skipValue(148,5812
namespace dwarf 171,6774
toString(179,7093
inline StringRef toStringRef(195,7581
inline const char *toString(toString215,8224
toUnsigned(228,8717
inline uint64_t toUnsigned(240,9213
toReference(251,9666
inline uint64_t toReference(263,10140
inline std::optional<int64_t> toSigned(273,10577
inline int64_t toSigned(285,11098
toAddress(296,11538
toSectionedAddress(303,11702
inline uint64_t toAddress(315,12185
toSectionOffset(326,12645
inline uint64_t toSectionOffset(338,13142
toBlock(349,13613

/usr/include/llvm/DebugInfo/DWARF/DWARFGdbIndex.h,1281
#define LLVM_DEBUGINFO_DWARF_DWARFGDBINDEX_H10,415
class DWARFGdbIndex 22,625
  uint32_t Version;23,647
  uint32_t CuListOffset;25,668
  uint32_t TuListOffset;26,693
  uint32_t AddressAreaOffset;27,718
  uint32_t SymbolTableOffset;28,748
  uint32_t ConstantPoolOffset;29,778
  struct CompUnitEntry 31,810
    uint64_t Offset;32,835
    uint64_t Length;33,903
  SmallVector<CompUnitEntry,CompUnitEntry35,952
  SmallVector<CompUnitEntry, 0> CuList;35,952
  struct TypeUnitEntry 37,993
    uint64_t Offset;38,1018
    uint64_t TypeOffset;39,1039
    uint64_t TypeSignature;40,1064
  SmallVector<TypeUnitEntry,TypeUnitEntry42,1097
  SmallVector<TypeUnitEntry, 0> TuList;42,1097
  struct AddressEntry 44,1138
    uint64_t LowAddress;45,1162
    uint64_t HighAddress;46,1209
    uint32_t CuIndex;47,1257
  SmallVector<AddressEntry,AddressEntry49,1306
  SmallVector<AddressEntry, 0> AddressArea;49,1306
  struct SymTableEntry 51,1351
    uint32_t NameOffset;52,1376
    uint32_t VecOffset;53,1455
  SmallVector<SymTableEntry,SymTableEntry55,1535
  SmallVector<SymTableEntry, 0> SymbolTable;55,1535
  SmallVector<std::pair<std::pair58,1624
      ConstantPoolVectors;59,1688
  StringRef ConstantPoolStrings;61,1716
  uint32_t StringPoolOffset;62,1749

/usr/include/llvm/DebugInfo/DWARF/DWARFListTable.h,2106
#define LLVM_DEBUGINFO_DWARF_DWARFLISTTABLE_H10,416
struct DWARFListEntryBase 26,848
  uint64_t Offset;28,939
  uint8_t EntryKind;30,1007
  uint64_t SectionIndex;32,1082
template <typename ListEntryType> class DWARFListType 37,1238
  using EntryType 38,1294
  using ListEntries 39,1329
  ListEntries Entries;42,1387
  const ListEntries &getEntries(getEntries45,1419
  bool empty(46,1479
  void clear(47,1528
class DWARFListTableHeader 55,1852
  struct Header 56,1881
    uint16_t Version;61,2061
    uint8_t AddrSize;65,2248
    uint8_t SegSize;68,2419
    uint32_t OffsetEntryCount;70,2517
  Header HeaderData;73,2554
  dwarf::DwarfFormat Format;75,2628
  uint64_t HeaderOffset;78,2753
  StringRef SectionName;80,2832
  StringRef ListTypeString;83,2950
  DWARFListTableHeader(86,2987
  void clear(89,3128
  uint64_t getHeaderOffset(92,3170
  uint8_t getAddrSize(93,3230
  uint64_t getLength(94,3292
  uint16_t getVersion(95,3351
  uint32_t getOffsetEntryCount(96,3412
  StringRef getSectionName(97,3491
  StringRef getListTypeString(98,3550
  dwarf::DwarfFormat getFormat(99,3615
  static uint8_t getHeaderSize(103,3774
  std::optional<uint64_t> getOffsetEntry(115,4149
  static std::optional<uint64_t> getOffsetEntry(123,4445
template <typename DWARFListType> class DWARFListTableBase 147,5631
  DWARFListTableHeader Header;148,5692
  std::map<std::map151,5876
  std::map<uint64_t, DWARFListType> ListMap;151,5876
  StringRef HeaderString;154,6015
  DWARFListTableBase(157,6053
  void clear(162,6252
  Error extractHeaderAndOffsets(167,6371
  uint64_t getHeaderOffset(177,6849
  uint8_t getAddrSize(178,6921
  uint32_t getOffsetEntryCount(179,6984
  dwarf::DwarfFormat getFormat(180,7064
  std::optional<uint64_t> getOffsetEntry(189,7419
  uint8_t getHeaderSize(196,7796
  uint64_t length(200,7896
Error DWARFListTableBase<DWARFListType>::extract(extract204,7982
Error DWARFListType<ListEntryType>::extract(extract229,8889
void DWARFListTableBase<DWARFListType>::dump(dump254,9986
DWARFListTableBase<DWARFListType>::findList(findList282,11062

/usr/include/llvm/DebugInfo/DWARF/DWARFLocationExpression.h,357
#define LLVM_DEBUGINFO_DWARF_DWARFLOCATIONEXPRESSION_H10,425
struct DWARFLocationExpression 21,738
  std::optional<DWARFAddressRange> Range;25,999
  SmallVector<SmallVector28,1071
  SmallVector<uint8_t, 4> Expr;28,1071
inline bool operator==(operator==31,1107
inline bool operator!=(operator!=36,1275
using DWARFLocationExpressionsVector 44,1548

/usr/include/llvm/DebugInfo/DWARF/DWARFObject.h,2938
#define LLVM_DEBUGINFO_DWARF_DWARFOBJECT_H10,413
class DWARFObject 26,1107
  DWARFSection Dummy;27,1127
  virtual StringRef getFileName(31,1194
  virtual const object::ObjectFile *getFile(getFile32,1273
  virtual ArrayRef<SectionName> getSectionNames(33,1345
  virtual uint8_t getAddressSize(35,1459
  forEachInfoSections(37,1554
  forEachTypesSections(39,1644
  virtual StringRef getAbbrevSection(40,1720
  virtual const DWARFSection &getLocSection(getLocSection41,1780
  virtual const DWARFSection &getLoclistsSection(getLoclistsSection42,1850
  virtual StringRef getArangesSection(43,1925
  virtual const DWARFSection &getFrameSection(getFrameSection44,1986
  virtual const DWARFSection &getEHFrameSection(getEHFrameSection45,2058
  virtual const DWARFSection &getLineSection(getLineSection46,2132
  virtual StringRef getLineStrSection(47,2203
  virtual StringRef getStrSection(48,2264
  virtual const DWARFSection &getRangesSection(getRangesSection49,2321
  virtual const DWARFSection &getRnglistsSection(getRnglistsSection50,2394
  virtual const DWARFSection &getMacroSection(getMacroSection51,2469
  virtual StringRef getMacroDWOSection(52,2541
  virtual StringRef getMacinfoSection(53,2603
  virtual StringRef getMacinfoDWOSection(54,2664
  virtual const DWARFSection &getPubnamesSection(getPubnamesSection55,2728
  virtual const DWARFSection &getPubtypesSection(getPubtypesSection56,2803
  virtual const DWARFSection &getGnuPubnamesSection(getGnuPubnamesSection57,2878
  virtual const DWARFSection &getGnuPubtypesSection(getGnuPubtypesSection58,2956
  virtual const DWARFSection &getStrOffsetsSection(getStrOffsetsSection59,3034
  forEachInfoDWOSections(61,3126
  forEachTypesDWOSections(63,3219
  virtual StringRef getAbbrevDWOSection(64,3298
  virtual const DWARFSection &getLineDWOSection(getLineDWOSection65,3361
  virtual const DWARFSection &getLocDWOSection(getLocDWOSection66,3435
  virtual const DWARFSection &getLoclistsDWOSection(getLoclistsDWOSection67,3508
  virtual StringRef getStrDWOSection(68,3586
  virtual const DWARFSection &getStrOffsetsDWOSection(getStrOffsetsDWOSection69,3646
  virtual const DWARFSection &getRangesDWOSection(getRangesDWOSection72,3732
  virtual const DWARFSection &getRnglistsDWOSection(getRnglistsDWOSection73,3808
  virtual const DWARFSection &getAddrSection(getAddrSection74,3886
  virtual const DWARFSection &getAppleNamesSection(getAppleNamesSection75,3957
  virtual const DWARFSection &getAppleTypesSection(getAppleTypesSection76,4034
  virtual const DWARFSection &getAppleNamespacesSection(getAppleNamespacesSection77,4111
  virtual const DWARFSection &getNamesSection(getNamesSection80,4199
  virtual const DWARFSection &getAppleObjCSection(getAppleObjCSection81,4271
  virtual StringRef getCUIndexSection(82,4347
  virtual StringRef getGdbIndexSection(83,4408
  virtual StringRef getTUIndexSection(84,4470

/usr/include/llvm/DebugInfo/DWARF/DWARFRelocMap.h,343
#define LLVM_DEBUGINFO_DWARF_DWARFRELOCMAP_H10,415
struct RelocAddrEntry 21,740
  uint64_t SectionIndex;22,764
  object::RelocationRef Reloc;23,789
  uint64_t SymbolValue;24,820
  std::optional<object::RelocationRef> Reloc2;25,844
  uint64_t SymbolValue2;26,891
  object::RelocationResolver Resolver;27,916
using RelocAddrMap 35,1321

/usr/include/llvm/DebugInfo/DWARF/DWARFSection.h,184
#define LLVM_DEBUGINFO_DWARF_DWARFSECTION_H10,414
struct DWARFSection 16,510
  StringRef Data;17,532
struct SectionName 21,578
  StringRef Name;22,599
  bool IsNameUnique;23,617

/usr/include/llvm/DebugInfo/DWARF/DWARFTypePrinter.h,778
#define LLVM_DEBUGINFO_DWARF_DWARFTYPEPRINTER_H10,418
struct DWARFTypePrinter 24,778
  raw_ostream &OS;OS25,804
  DWARFTypePrinter(29,878
  void appendTypeTagName(32,972
  void appendArrayType(34,1013
  DWARFDie skipQualifiers(36,1057
  bool needsParens(38,1097
  void appendPointerLikeTypeBefore(40,1130
  DWARFDie appendUnqualifiedNameBefore(42,1210
  void appendUnqualifiedNameAfter(45,1343
  void appendQualifiedName(47,1481
  DWARFDie appendQualifiedNameBefore(48,1521
  bool appendTemplateParameters(49,1571
  void decomposeConstVolatile(50,1648
  void appendConstVolatileQualifierAfter(52,1761
  void appendConstVolatileQualifierBefore(53,1815
  void appendUnqualifiedName(56,1931
  void appendSubroutineNameAfter(59,2044
  void appendScopes(62,2232

/usr/include/llvm/DebugInfo/DWARF/DWARFTypeUnit.h,191
#define LLVM_DEBUGINFO_DWARF_DWARFTYPEUNIT_H10,415
class DWARFTypeUnit 24,682
  DWARFTypeUnit(26,731
  uint64_t getTypeHash(35,1265
  uint64_t getTypeOffset(36,1334
  void dump(38,1408

/usr/include/llvm/DebugInfo/DWARF/DWARFUnitIndex.h,1746
#define LLVM_DEBUGINFO_DWARF_DWARFUNITINDEX_H10,416
enum DWARFSectionKind 56,2324
  DW_SECT_EXT_unknown 59,2463
#define HANDLE_DW_SECT(60,2490
  DW_SECT_EXT_TYPES 62,2583
  DW_SECT_EXT_LOC 63,2608
  DW_SECT_EXT_MACINFO 64,2631
inline const char *toString(toString67,2663
#define STRINGIZE(71,2800
#define HANDLE_DW_SECT(72,2824
class DWARFUnitIndex 99,3926
  struct Header 100,3949
    uint32_t Version;101,3967
    uint32_t NumColumns;102,3989
    uint32_t NumUnits;103,4014
  class Entry 111,4181
    class SectionContribution 113,4207
      uint64_t Offset;115,4252
      uint64_t Length;116,4275
      SectionContribution(119,4311
      SectionContribution(120,4365
      void setOffset(123,4472
      void setLength(124,4529
      uint64_t getOffset(125,4586
      uint64_t getLength(126,4638
      uint32_t getOffset32(127,4690
      uint32_t getLength32(128,4754
    const DWARFUnitIndex *Index;Index132,4837
    uint64_t Signature;133,4870
    std::unique_ptr<SectionContribution[]> Contributions;134,4894
    const SectionContribution *getContributions(getContributions142,5173
    uint64_t getSignature(146,5272
    bool isValid(147,5328
  struct Header Header;151,5380
  DWARFSectionKind InfoColumnKind;153,5405
  int InfoColumn 154,5440
  std::unique_ptr<DWARFSectionKind[]> ColumnKinds;155,5463
  std::unique_ptr<uint32_t[]> RawSectionIds;159,5731
  std::unique_ptr<Entry[]> Rows;160,5776
  mutable std::vector<Entry *> OffsetLookup;161,5809
  DWARFUnitIndex(168,5965
  explicit operator bool(operator bool171,6058
  uint32_t getVersion(176,6198
  ArrayRef<DWARFSectionKind> getColumnKinds(181,6361
  ArrayRef<Entry> getRows(185,6479
  MutableArrayRef<Entry> getMutableRows(189,6572

/usr/include/llvm/DebugInfo/DWARF/DWARFAcceleratorTable.h,6396
#define LLVM_DEBUGINFO_DWARF_DWARFACCELERATORTABLE_H10,423
class DWARFAcceleratorTable 32,1179
  DWARFDataExtractor AccelSection;34,1220
  DataExtractor StringSection;35,1255
  class Entry 39,1374
    SmallVector<DWARFFormValue,DWARFFormValue41,1403
    SmallVector<DWARFFormValue, 3> Values;41,1403
    virtual std::optional<uint64_t> getLocalTUOffset(62,2180
    ArrayRef<DWARFFormValue> getValues(75,2775
  DWARFAcceleratorTable(78,2847
class AppleAcceleratorTable 92,3389
  struct Header 93,3450
    uint32_t Magic;94,3468
    uint16_t Version;95,3488
    uint16_t HashFunction;96,3510
    uint32_t BucketCount;97,3537
    uint32_t HashCount;98,3563
    uint32_t HeaderDataLength;99,3587
  struct HeaderData 104,3664
    uint64_t DIEOffsetBase;108,3748
    SmallVector<SmallVector109,3776
    SmallVector<std::pair<AtomType, Form>, 3> Atoms;109,3776
  Header Hdr;115,3926
  HeaderData HdrData;116,3940
  dwarf::FormParams FormParams;117,3962
  uint32_t HashDataEntryLength;118,3994
  bool IsValid 119,4026
  uint64_t getBucketBase(136,4800
  uint64_t getIthBucketBase(139,4948
  uint64_t getHashBase(144,5106
  uint64_t getIthHashBase(147,5253
  uint64_t getOffsetBase(150,5403
  uint64_t getEntriesBase(153,5556
  uint64_t getIthOffsetBase(158,5713
  uint32_t hashToBucketIdx(163,5876
  bool wouldHashBeInBucket(169,6061
  std::optional<uint32_t> readIthBucket(175,6323
  std::optional<uint32_t> readIthHash(181,6512
  std::optional<uint32_t> readIthOffset(187,6701
  std::optional<uint32_t> readStringOffsetAt(194,6968
  class SameNameIterator231,8440
    Entry Current;234,8591
    const Entry &operator*(operator*242,8819
    SameNameIterator &operator++(operator++247,8950
    friend bool operator==(operator==251,9069
  struct EntryWithName 257,9226
    EntryWithName(258,9251
    std::optional<StringRef> readName(261,9350
    Entry BaseEntry;265,9471
    uint32_t StrOffset;266,9492
  class Iterator270,9570
    EntryWithName Current;275,9790
    void setToEnd(279,9886
    bool isEnd(280,9930
    const AppleAcceleratorTable &getTable(getTable281,9985
    Iterator &operator++(operator++298,10623
    bool operator==(operator==302,10709
    const EntryWithName &operator*(operator*303,10787
  AppleAcceleratorTable(309,10922
  uint32_t getHashDataEntryLength(320,11315
  ArrayRef<ArrayRef324,11519
  bool containsAtomType(328,11692
  std::pair<std::pair342,12212
  auto entries(349,12518
class DWARFDebugNames 375,13758
  struct Header 382,13920
    uint64_t UnitLength;383,13938
    dwarf::DwarfFormat Format;384,13963
    uint16_t Version;385,13994
    uint32_t CompUnitCount;386,14016
    uint32_t LocalTypeUnitCount;387,14044
    uint32_t ForeignTypeUnitCount;388,14077
    uint32_t BucketCount;389,14112
    uint32_t NameCount;390,14138
    uint32_t AbbrevTableSize;391,14162
    uint32_t AugmentationStringSize;392,14192
    SmallString<8> AugmentationString;393,14229
  struct AttributeEncoding 400,14421
    dwarf::Index Index;401,14450
    dwarf::Form Form;402,14474
    constexpr AttributeEncoding(404,14497
    friend bool operator==(operator==407,14606
  struct Abbrev 414,14861
    uint32_t Code;415,14879
    dwarf::Tag Tag;416,14922
    std::vector<AttributeEncoding> Attributes;417,14982
    Abbrev(419,15061
  class SentinelError 479,17651
    static char ID;481,17719
    void log(483,17740
  struct AbbrevMapInfo 489,17917
    static unsigned getHashValue(492,18012
    static unsigned getHashValue(495,18125
    static bool isEqual(498,18224
    static bool isEqual(501,18319
  class NameTableEntry 509,18529
    DataExtractor StrData;510,18554
    uint32_t Index;512,18582
    uint64_t StringOffset;513,18602
    uint64_t EntryOffset;514,18629
    NameTableEntry(517,18666
    uint32_t getIndex(523,18968
    uint64_t getStringOffset(526,19083
    const char *getString(getString530,19262
    uint64_t getEntryOffset(536,19435
  class NameIndex 541,19593
    DenseSet<DenseSet542,19613
    DenseSet<Abbrev, AbbrevMapInfo> Abbrevs;542,19613
    struct Header Hdr;543,19658
    const DWARFDebugNames &Section;Section544,19681
    uint64_t Base;548,19830
    uint64_t CUsBase;549,19849
    uint64_t BucketsBase;550,19871
    uint64_t HashesBase;551,19897
    uint64_t StringOffsetsBase;552,19922
    uint64_t EntryOffsetsBase;553,19954
    uint64_t EntriesBase;554,19985
    NameIndex(573,20682
    uint32_t getCUCount(578,20891
    uint32_t getLocalTUCount(582,21063
    uint32_t getForeignTUCount(586,21255
    uint32_t getBucketCount(592,21600
    uint32_t getNameCount(604,22136
    const DenseSet<DenseSet606,22197
    const DenseSet<Abbrev, AbbrevMapInfo> &getAbbrevs(getAbbrevs606,22197
    NameIterator begin(615,22478
    NameIterator end(616,22543
    uint64_t getUnitOffset(619,22645
    uint64_t getNextUnitOffset(620,22697
  class ValueIterator 629,22921
    bool IsLocal;645,23542
    std::optional<Entry> CurrentEntry;647,23561
    std::string Key;649,23659
    std::optional<uint32_t> Hash;650,23723
    void setEnd(659,24034
    const Entry &operator*(operator*674,24610
    ValueIterator &operator++(operator++675,24671
    ValueIterator operator++(679,24745
    friend bool operator==(operator==685,24849
    friend bool operator!=(operator!=688,25011
  class NameIterator 693,25124
    const NameIndex *CurrentIndex;CurrentIndex696,25197
    uint32_t CurrentName;699,25277
    void next(701,25304
    NameIterator(715,25755
    NameTableEntry operator*(718,25892
    NameIterator &operator++(operator++721,25996
    NameIterator operator++(725,26069
    friend bool operator==(operator==731,26171
    friend bool operator!=(operator!=734,26333
  SmallVector<SmallVector740,26453
  SmallVector<NameIndex, 0> NameIndices;740,26453
  DenseMap<DenseMap741,26494
  DenseMap<uint64_t, const NameIndex *> CUToNameIndex;741,26494
  DWARFDebugNames(744,26558
  using const_iterator 754,26935
  using const_iterator = SmallVector<NameIndex, 0>::const_iterator;const_iterator754,26935
  const_iterator begin(755,27003
  const_iterator end(756,27066
struct ObjCSelectorNames 769,27594
  StringRef Selector;771,27681
  StringRef ClassName;773,27767
  std::optional<StringRef> ClassNameNoCategory;775,27844
  std::optional<std::string> MethodNameNoCategory;777,27954

/usr/include/llvm/DebugInfo/DWARF/DWARFContext.h,2616
#define LLVM_DEBUGINFO_DWARF_DWARFCONTEXT_H10,413
class DWARFContext 48,1501
  class DWARFContextState 57,1987
    enum MacroSecType 61,2118
      MacinfoSection,62,2142
      MacinfoDwoSection,63,2164
      MacroSection,64,2189
      MacroDwoSection65,2209
    DWARFContext &D;D68,2239
    DWARFContextState(70,2270
    virtual const DenseMap<DenseMap98,3866
  std::unique_ptr<DWARFContextState> State;112,4309
  enum { EagerParse 125,4850
  enum { EagerParse = false, LazyParse 125,4850
  std::unique_ptr<const DWARFObject> DObj;128,4951
  const DWARFObject &getDWARFObj(getDWARFObj147,5651
  static bool classof(149,5711
  void dump(158,6069
  unit_iterator_range info_section_units(169,6494
  const DWARFUnitVector &getNormalUnitsVector(getNormalUnitsVector176,6776
  unit_iterator_range types_section_units(181,6918
  compile_unit_range compile_units(188,7183
  unit_iterator_range normal_units(196,7502
  unit_iterator_range dwo_info_section_units(202,7736
  const DWARFUnitVector &getDWOUnitsVector(getDWOUnitsVector208,7972
  unit_iterator_range dwo_types_section_units(213,8115
  compile_unit_range dwo_compile_units(220,8394
  unit_iterator_range dwo_units(229,8722
  unsigned getNumCompileUnits(235,8938
  unsigned getNumTypeUnits(240,9083
  unsigned getNumDWOCompileUnits(245,9232
  unsigned getNumDWOTypeUnits(250,9380
  DWARFUnit *getUnitAtIndex(getUnitAtIndex255,9514
  DWARFUnit *getDWOUnitAtIndex(getDWOUnitAtIndex260,9675
  unsigned getMaxVersion(273,10148
  unsigned getMaxDWOVersion(279,10296
  void setMaxVersionIfGreater(285,10455
  DataExtractor getStringExtractor(353,13007
  DataExtractor getStringDWOExtractor(356,13115
  DataExtractor getLineStringExtractor(359,13229
  struct DIEsForAddress 364,13397
    DWARFDie FunctionDIE;366,13468
    DWARFDie BlockDIE;367,13494
    explicit operator bool(operator bool368,13517
  bool isLittleEndian(398,14973
  static unsigned getMaxSupportedVersion(399,15038
  static bool isSupportedVersion(400,15095
  static SmallVector<SmallVector404,15217
  static SmallVector<uint8_t, 3> getSupportedAddressSizes(404,15217
  static bool isAddressSizeSupported(407,15305
  static Error checkAddressSizeSupported(411,15470
  function_ref<function_ref430,16211
  function_ref<function_ref434,16311
  enum class ProcessDebugRelocations 436,16387
  enum class ProcessDebugRelocations { Process,436,16387
  enum class ProcessDebugRelocations { Process, Ignore 436,16387
  Triple::ArchType getArch(461,17462
  bool getParseCUTUIndexManually(482,18414
  void setParseCUTUIndexManually(486,18597

/usr/include/llvm/DebugInfo/DWARF/DWARFDebugAbbrev.h,773
#define LLVM_DEBUGINFO_DWARF_DWARFDEBUGABBREV_H10,418
class DWARFAbbreviationDeclarationSet 22,661
  uint64_t Offset;23,701
  uint32_t FirstAbbrCode;26,842
  std::vector<DWARFAbbreviationDeclaration> Decls;27,868
  uint64_t getOffset(35,1057
  const_iterator begin(42,1295
  const_iterator end(46,1359
  uint32_t getFirstAbbrCode(52,1456
class DWARFDebugAbbrev 58,1548
  using DWARFAbbreviationDeclarationSetMap 59,1573
  mutable DWARFAbbreviationDeclarationSetMap AbbrDeclSets;62,1678
  mutable DWARFAbbreviationDeclarationSetMap::const_iterator PrevAbbrOffsetPos;63,1737
  mutable std::optional<DataExtractor> Data;64,1817
  DWARFAbbreviationDeclarationSetMap::const_iterator begin(75,2087
  DWARFAbbreviationDeclarationSetMap::const_iterator end(80,2273

/usr/include/llvm/DebugInfo/DWARF/DWARFDebugMacro.h,853
#define LLVM_DEBUGINFO_DWARF_DWARFDEBUGMACRO_H10,417
class DWARFDebugMacro 28,783
  enum HeaderFlagMask 33,955
#define HANDLE_MACRO_FLAG(34,979
  struct MacroHeader 37,1078
    uint64_t DebugLineOffset;62,2380
  struct Entry 78,2893
    uint32_t Type;80,2947
      uint64_t Line;83,3032
      uint64_t ExtConstant;85,3096
      uint64_t ImportOffset;87,3160
      const char *MacroStr;MacroStr92,3264
      uint64_t File;94,3365
      const char *ExtStr;ExtStr96,3421
  struct MacroList 100,3460
    MacroHeader Header;104,3697
    SmallVector<SmallVector105,3721
    SmallVector<Entry, 4> Macros;105,3721
    uint64_t Offset;106,3755
    bool IsDebugMacro;109,3832
  std::vector<MacroList> MacroLists;113,3929
  Error parseMacro(121,4123
  Error parseMacinfo(127,4366
  bool empty(132,4554
  bool hasEntryForOffset(134,4607

/usr/include/llvm/DebugInfo/DWARF/DWARFUnit.h,5123
#define LLVM_DEBUGINFO_DWARF_DWARFUNIT_H10,411
class DWARFUnitHeader 55,1729
  uint64_t Offset 57,1781
  dwarf::FormParams FormParams;59,1850
  uint64_t Length 60,1882
  uint64_t AbbrOffset 61,1905
  const DWARFUnitIndex::Entry *IndexEntry IndexEntry64,1958
  uint64_t TypeHash 67,2038
  uint64_t TypeOffset 68,2063
  std::optional<uint64_t> DWOId;71,2141
  uint8_t UnitType 74,2235
  uint8_t Size 77,2306
  uint64_t getOffset(89,2941
  const dwarf::FormParams &getFormParams(getFormParams90,2989
  uint16_t getVersion(91,3061
  dwarf::DwarfFormat getFormat(92,3122
  uint8_t getAddressByteSize(93,3191
  uint8_t getRefAddrByteSize(94,3260
  uint8_t getDwarfOffsetByteSize(95,3341
  uint64_t getLength(98,3436
  uint64_t getAbbrOffset(99,3484
  std::optional<uint64_t> getDWOId(100,3540
  void setDWOId(101,3601
  const DWARFUnitIndex::Entry *getIndexEntry(getIndexEntry105,3730
  uint64_t getTypeHash(106,3806
  uint64_t getTypeOffset(107,3858
  uint8_t getUnitType(108,3914
  bool isTypeUnit(109,3965
  uint8_t getSize(112,4078
  uint8_t getUnitLengthFieldByteSize(113,4121
  uint64_t getNextUnitOffset(116,4237
struct StrOffsetsContributionDescriptor 187,7668
  uint64_t Base 188,7710
  uint64_t Size 190,7785
  dwarf::FormParams FormParams 192,7832
  StrOffsetsContributionDescriptor(194,7903
  uint8_t getVersion(199,8164
  dwarf::DwarfFormat getFormat(200,8224
  uint8_t getDwarfOffsetByteSize(201,8293
class DWARFUnit 211,8682
  DWARFContext &Context;Context212,8700
  const DWARFSection &InfoSection;InfoSection214,8766
  DWARFUnitHeader Header;216,8802
  const DWARFDebugAbbrev *Abbrev;Abbrev217,8828
  const DWARFSection *RangeSection;RangeSection218,8862
  uint64_t RangeSectionBase;219,8898
  uint64_t LocSectionBase;220,8927
  std::unique_ptr<DWARFLocationTable> LocTable;223,8990
  const DWARFSection &LineSection;LineSection225,9039
  StringRef StringSection;226,9074
  const DWARFSection &StringOffsetSection;StringOffsetSection227,9101
  const DWARFSection *AddrOffsetSection;AddrOffsetSection228,9144
  DWARFUnit *SU;SU229,9185
  std::optional<uint64_t> AddrOffsetSectionBase;230,9202
  bool IsLittleEndian;231,9251
  bool IsDWO;232,9274
  const DWARFUnitVector &UnitVector;UnitVector233,9288
      StringOffsetsTableContribution;238,9487
  mutable const DWARFAbbreviationDeclarationSet *Abbrevs;Abbrevs240,9526
  std::optional<object::SectionedAddress> BaseAddr;241,9584
  std::vector<DWARFDebugInfoEntry> DieArray;243,9690
  std::map<std::map248,9939
  std::map<uint64_t, std::pair<uint64_t, DWARFDie>> AddrDieMap;248,9939
  std::map<std::map252,10135
  std::map<uint64_t, std::pair<uint64_t, DWARFDie>> VariableDieMap;252,10135
  DenseSet<uint64_t> RootsParsedForVariables;253,10203
  using die_iterator_range 255,10250
  std::shared_ptr<DWARFUnit> DWO;258,10346
  uint32_t getDIEIndex(269,10777
  const DWARFDebugInfoEntry *getDebugInfoEntry(getDebugInfoEntry276,11029
  const DWARFUnitHeader &getHeader(getHeader292,11619
  bool isLittleEndian(317,12861
  bool isDWOUnit(318,12918
  DWARFContext& getContext(319,12961
  const DWARFSection &getInfoSection(getInfoSection320,13016
  uint64_t getOffset(321,13085
  const dwarf::FormParams &getFormParams(getFormParams322,13145
  uint16_t getVersion(325,13235
  uint8_t getAddressByteSize(326,13297
  uint8_t getRefAddrByteSize(327,13374
  uint8_t getDwarfOffsetByteSize(328,13451
  uint32_t getHeaderSize(332,13589
  uint64_t getLength(333,13651
  dwarf::DwarfFormat getFormat(334,13711
  uint8_t getUnitType(335,13781
  bool isTypeUnit(336,13844
  uint64_t getAbbrOffset(337,13902
  uint64_t getNextUnitOffset(338,13970
  const DWARFSection &getLineSection(getLineSection339,14046
  StringRef getStringSection(340,14115
  const DWARFSection &getStringOffsetSection(getStringOffsetSection341,14178
  void setSkeletonUnit(345,14270
  DWARFUnit *getLinkedUnit(getLinkedUnit349,14497
  void setAddrOffsetSection(351,14557
  std::optional<uint64_t> getAddrOffsetSectionBase(356,14695
  std::optional<uint64_t> getIndexedAddressOffset(361,14873
  void setRangesSection(375,15322
  uint64_t getLocSectionBase(380,15444
  DataExtractor getStringExtractor(390,15732
  const DWARFLocationTable &getLocationTable(getLocationTable394,15833
  getStringOffsetsTableContribution(405,16342
  uint8_t getDwarfStringOffsetsByteSize(410,16475
  uint64_t getStringOffsetsBase(415,16643
  uint64_t getAbbreviationsOffset(420,16783
  static bool isMatchingUnitTypeAndTag(424,16929
  DWARFDie getUnitDIE(443,17538
  DWARFDie getNonSkeletonUnitDIE(450,17736
  std::optional<uint64_t> getDWOId(458,18055
  void setDWOId(462,18178
  const DWARFUnitVector &getUnitVector(getUnitVector501,19974
  unsigned getNumDIEs(505,20127
  uint32_t getDIEIndex(516,20547
  DWARFDie getDIEAtIndex(521,20706
  DWARFDie getDIEForOffset(533,21188
  std::optional<uint32_t> getDIEIndexForOffset(542,21475
  uint32_t getLineTableOffset(553,21845
  die_iterator_range dies(560,22068
  size_t getDebugInfoSize(571,22404
inline bool isCompileUnit(595,23360

/usr/include/llvm/DebugInfo/DWARF/DWARFVerifier.h,568
#define LLVM_DEBUGINFO_DWARF_DWARFVERIFIER_H10,415
class DWARFVerifier 34,1060
  struct DieRangeInfo 37,1163
    DWARFDie Die;38,1187
    std::vector<DWARFAddressRange> Ranges;41,1241
    std::set<DieRangeInfo> Children;44,1323
    DieRangeInfo(47,1391
    DieRangeInfo(50,1468
    typedef std::set<DieRangeInfo>::const_iterator die_range_info_iterator;53,1564
  raw_ostream &OS;OS80,2768
  DWARFContext &DCtx;DCtx81,2787
  DIDumpOptions DumpOpts;82,2809
  bool IsObjectFile;85,2937
  bool IsMachOObject;86,2958
static inline bool operator<(353,14188

/usr/include/llvm/DebugInfo/GSYM/FileEntry.h,327
#define LLVM_DEBUGINFO_GSYM_FILEENTRY_H10,410
struct FileEntry 24,833
  FileEntry(33,973
template <> struct DenseMapInfo<DenseMapInfo47,1349
  static inline gsym::FileEntry getEmptyKey(48,1400
  static inline gsym::FileEntry getTombstoneKey(52,1548
  static unsigned getHashValue(56,1704
  static bool isEqual(60,1925

/usr/include/llvm/DebugInfo/GSYM/Header.h,338
#define LLVM_DEBUGINFO_GSYM_HEADER_H10,407
struct Header 45,1626
  uint32_t Magic;49,1837
  uint16_t Version;54,2170
  uint8_t AddrOffSize;56,2267
  uint8_t UUIDSize;58,2356
  uint64_t BaseAddress;62,2575
  uint32_t NumAddresses;64,2666
  uint32_t StrtabOffset;72,3204
  uint32_t StrtabSize;80,3751
  uint8_t UUID[UUID86,4094

/usr/include/llvm/DebugInfo/GSYM/LineEntry.h,220
#define LLVM_DEBUGINFO_GSYM_LINEENTRY_H10,410
struct LineEntry 22,874
  uint64_t Addr;23,893
  uint32_t File;24,949
  uint32_t Line;25,1006
  LineEntry(26,1048
  bool isValid(28,1145
inline bool operator=36,1388

/usr/include/llvm/DebugInfo/GSYM/LineTable.h,627
#define LLVM_DEBUGINFO_GSYM_LINETABLE_H10,410
class LineTable 118,4919
  typedef std::vector<gsym::LineEntry> Collection;119,4937
  Collection Lines;120,4988
  bool empty(167,7300
  void clear(168,7347
  std::optional<LineEntry> first(173,7597
  std::optional<LineEntry> last(182,7934
  void push(187,8055
  size_t isValid(190,8119
  size_t size(193,8177
  LineEntry &get(get196,8230
  const LineEntry &get(get200,8314
  bool operator==(operator==210,8540
  bool operator!=(operator!=213,8623
  bool operator<(216,8706
  Collection::const_iterator begin(223,8929
  Collection::const_iterator end(224,8998

/usr/include/llvm/DebugInfo/GSYM/LookupResult.h,494
#define LLVM_DEBUGINFO_GSYM_LOOKUPRESULT_H10,413
struct SourceLocation 21,620
  StringRef Name;22,644
  StringRef Dir;23,697
  StringRef Base;24,764
inline bool operator=29,954
raw_ostream &operator<<(raw_ostream &OS, const SourceLocation &R)R34,1174
using SourceLocations 36,1242
struct LookupResult 38,1296
  uint64_t LookupAddr 39,1318
  AddressRange FuncRange;40,1392
  StringRef FuncName;41,1461
  SourceLocations Locations;51,2236
inline bool operator==(operator==55,2320

/usr/include/llvm/DebugInfo/GSYM/StringTable.h,213
#define LLVM_DEBUGINFO_GSYM_STRINGTABLE_H10,412
struct StringTable 21,731
  StringRef Data;22,752
  StringTable(24,797
  StringRef operator[operator25,837
  StringRef getString(26,911
  void clear(33,1114

/usr/include/llvm/DebugInfo/GSYM/DwarfTransformer.h,185
#define LLVM_DEBUGINFO_GSYM_DWARFTRANSFORMER_H10,417
class DwarfTransformer 32,1099
  DwarfTransformer(41,1337
  DWARFContext &DICtx;DICtx84,3168
  GsymCreator &Gsym;Gsym85,3191

/usr/include/llvm/DebugInfo/GSYM/ExtractRanges.h,289
#define LLVM_DEBUGINFO_GSYM_EXTRACTRANGES_H10,414
#define HEX8(17,587
#define HEX16(18,626
#define HEX32(19,666
#define HEX64(20,707
raw_ostream &operator<<(raw_ostream &OS, const AddressRange &R)R74,2585
raw_ostream &operator<<(raw_ostream &OS, const AddressRanges &AR)AR76,2651

/usr/include/llvm/DebugInfo/GSYM/FileWriter.h,275
#define LLVM_DEBUGINFO_GSYM_FILEWRITER_H10,411
class FileWriter 29,978
  llvm::raw_pwrite_stream &OS;OS30,997
  llvm::endianness ByteOrder;31,1028
  FileWriter(34,1067
  llvm::raw_pwrite_stream &get_stream(get_stream113,4236
  llvm::endianness getByteOrder(117,4298

/usr/include/llvm/DebugInfo/GSYM/FunctionInfo.h,581
#define LLVM_DEBUGINFO_GSYM_FUNCTIONINFO_H10,413
struct FunctionInfo 88,3382
  AddressRange Range;89,3404
  uint32_t Name;90,3426
  std::optional<LineTable> OptLineTable;91,3489
  std::optional<InlineInfo> Inline;92,3530
  SmallString<32> EncodingCache;96,3743
  FunctionInfo(98,3777
  bool hasRichInfo(108,4274
  bool isValid(119,4793
  uint64_t startAddress(185,7709
  uint64_t endAddress(186,7767
  uint64_t size(187,7821
  void clear(189,7871
inline bool operator==(operator==197,7990
inline bool operator!=(operator!=201,8201
inline bool operator<(218,9323

/usr/include/llvm/DebugInfo/GSYM/GsymCreator.h,872
#define LLVM_DEBUGINFO_GSYM_GSYMCREATOR_H10,412
class GsymCreator 133,5615
  mutable std::mutex Mutex;135,5691
  std::vector<FunctionInfo> Funcs;136,5719
  StringTableBuilder StrTab;137,5754
  StringSet<> StringStorage;138,5783
  DenseMap<DenseMap139,5812
  DenseMap<llvm::gsym::FileEntry, uint32_t> FileEntryToIndex;139,5812
  DenseMap<DenseMap141,5953
  DenseMap<uint64_t, CachedHashStringRef> StringOffsetMap;141,5953
  std::vector<llvm::gsym::FileEntry> Files;142,6012
  std::vector<uint8_t> UUID;143,6056
  std::optional<AddressRanges> ValidTextRanges;144,6085
  std::optional<uint64_t> BaseAddress;145,6133
  bool Quiet;148,6224
  void setIsSegment(289,12801
  void setUUID(368,16473
  void SetValidTextRanges(391,17397
  const std::optional<AddressRanges> GetValidTextRanges(396,17524
  void setBaseAddress(432,19406
  bool isQuiet(437,19550

/usr/include/llvm/DebugInfo/GSYM/GsymReader.h,833
#define LLVM_DEBUGINFO_GSYM_GSYMREADER_H10,411
class GsymReader 44,1615
  GsymReader(45,1634
  std::unique_ptr<MemoryBuffer> MemBuffer;48,1710
  StringRef GsymBytes;49,1753
  llvm::endianness Endian;50,1776
  ArrayRef<uint8_t> AddrOffsets;52,1834
  ArrayRef<uint32_t> AddrInfoOffsets;53,1867
  ArrayRef<FileEntry> Files;54,1905
  StringTable StrTab;55,1934
  struct SwappedData 60,2191
    Header Hdr;61,2214
    std::vector<uint8_t> AddrOffsets;62,2230
    std::vector<uint32_t> AddrInfoOffsets;63,2268
    std::vector<FileEntry> Files;64,2311
  std::unique_ptr<SwappedData> Swap;66,2350
  StringRef getString(139,5576
  std::optional<FileEntry> getFile(150,6106
  uint32_t getNumAddresses(206,7741
  getAddrOffsets(232,8784
  std::optional<uint64_t> addressForIndex(250,9664
  getAddressOffsetIndex(267,10364

/usr/include/llvm/DebugInfo/GSYM/InlineInfo.h,346
#define LLVM_DEBUGINFO_GSYM_INLINEINFO_H10,411
struct InlineInfo 59,2716
  uint32_t Name;61,2737
  uint32_t CallFile;62,2800
  uint32_t CallLine;63,2864
  AddressRanges Ranges;64,2910
  std::vector<InlineInfo> Children;65,2934
  InlineInfo(66,2970
  void clear(67,3024
  bool isValid(74,3137
inline bool operator==(operator==180,8457

/usr/include/llvm/DebugInfo/GSYM/ObjectFileTransformer.h,95
#define LLVM_DEBUGINFO_GSYM_OBJECTFILETRANSFORMER_H10,422
class ObjectFileTransformer 26,624

/usr/include/llvm/DebugInfo/LogicalView/Core/LVCompare.h,114
#define LLVM_DEBUGINFO_LOGICALVIEW_CORE_LVCOMPARE_H15,607
inline LVCompare &getComparator(getComparator84,2725

/usr/include/llvm/DebugInfo/LogicalView/Core/LVElement.h,5103
#define LLVM_DEBUGINFO_LOGICALVIEW_CORE_LVELEMENT_H15,609
enum class LVSubclassID 27,864
  LV_ELEMENT,28,906
  LV_LINE_FIRST,29,920
  LV_LINE,30,937
  LV_LINE_DEBUG,31,948
  LV_LINE_ASSEMBLER,32,965
  LV_LINE_LAST,33,986
  lV_SCOPE_FIRST,34,1002
  LV_SCOPE,35,1020
  LV_SCOPE_AGGREGATE,36,1032
  LV_SCOPE_ALIAS,37,1054
  LV_SCOPE_ARRAY,38,1072
  LV_SCOPE_COMPILE_UNIT,39,1090
  LV_SCOPE_ENUMERATION,40,1115
  LV_SCOPE_FORMAL_PACK,41,1139
  LV_SCOPE_FUNCTION,42,1163
  LV_SCOPE_FUNCTION_INLINED,43,1184
  LV_SCOPE_FUNCTION_TYPE,44,1213
  LV_SCOPE_NAMESPACE,45,1239
  LV_SCOPE_ROOT,46,1261
  LV_SCOPE_TEMPLATE_PACK,47,1278
  LV_SCOPE_LAST,48,1304
  LV_SYMBOL_FIRST,49,1321
  LV_SYMBOL,50,1340
  LV_SYMBOL_LAST,51,1353
  LV_TYPE_FIRST,52,1371
  LV_TYPE,53,1388
  LV_TYPE_DEFINITION,54,1399
  LV_TYPE_ENUMERATOR,55,1421
  LV_TYPE_IMPORT,56,1443
  LV_TYPE_PARAM,57,1461
  LV_TYPE_SUBRANGE,58,1478
  LV_TYPE_LAST59,1498
enum class LVElementKind 62,1517
enum class LVElementKind { Discarded,62,1517
enum class LVElementKind { Discarded, Global,62,1517
enum class LVElementKind { Discarded, Global, Optimized,62,1517
enum class LVElementKind { Discarded, Global, Optimized, LastEntry 62,1517
using LVElementKindSet 63,1587
using LVElementDispatch 64,1637
using LVElementRequest 65,1710
class LVElement 67,1771
  enum class Property 68,1807
    IsLine,69,1831
    IsScope,70,1864
    IsSymbol,71,1898
    IsType,72,1933
    IsEnumClass,73,1966
    IsExternal,74,1983
    HasType,75,1999
    HasAugmentedName,76,2012
    IsTypedefReduced,77,2034
    IsArrayResolved,78,2056
    IsMemberPointerResolved,79,2077
    IsTemplateResolved,80,2106
    IsInlined,81,2130
    IsInlinedAbstract,82,2145
    InvalidFilename,83,2168
    HasReference,84,2189
    HasReferenceAbstract,85,2207
    HasReferenceExtension,86,2233
    HasReferenceSpecification,87,2260
    QualifiedResolved,88,2291
    IncludeInPrint,89,2314
    IsStatic,90,2334
    TransformName,91,2348
    IsScoped,92,2367
    IsNested,93,2412
    IsScopedAlready,94,2458
    IsArtificial,95,2530
    IsReferencedType,96,2548
    IsSystem,97,2570
    OffsetFromTypeIndex,98,2584
    IsAnonymous,99,2609
    LastEntry100,2626
  LVProperties<Property> Properties;103,2700
  static LVElementDispatch Dispatch;104,2737
  const LVSubclassID SubclassID;107,2787
  size_t NameIndex 110,2854
  size_t QualifiedNameIndex 111,2878
  size_t FilenameIndex 112,2911
  uint16_t AccessibilityCode 114,2940
  uint16_t InlineCode 115,2998
  uint16_t VirtualityCode 116,3049
  LVElement *ElementType ElementType127,3435
  LVElement(133,3585
  LVSubclassID getSubclassID(140,3844
  bool isNamed(174,5061
  bool isTyped(175,5120
  bool isFiled(176,5187
  bool getIsKindType(179,5309
  bool getIsKindScope(180,5390
  StringRef getName(184,5480
  StringRef getPathname(190,5668
  void setQualifiedName(198,5890
  StringRef getQualifiedName(201,5993
  size_t getNameIndex(205,6095
  size_t getQualifiedNameIndex(206,6147
  void setInnerComponent(208,6218
  virtual StringRef getProducer(214,6380
  virtual void setProducer(215,6444
  virtual bool isCompileUnit(217,6499
  virtual bool isRoot(218,6554
  virtual void setReference(220,6603
  virtual void setReference(221,6654
  virtual void setReference(222,6701
  virtual void setReference(223,6750
  virtual void setLinkageName(225,6796
  virtual StringRef getLinkageName(226,6852
  virtual size_t getLinkageNameIndex(227,6919
  virtual uint32_t getCallLineNumber(229,6979
  virtual void setCallLineNumber(230,7038
  virtual size_t getCallFilenameIndex(231,7091
  virtual void setCallFilenameIndex(232,7151
  size_t getFilenameIndex(233,7204
  void setFilenameIndex(234,7264
  virtual bool isBase(239,7423
  virtual bool isTemplateParam(240,7471
  virtual uint32_t getBitSize(242,7529
  virtual void setBitSize(243,7581
  virtual int64_t getCount(245,7626
  virtual void setCount(246,7675
  virtual int64_t getLowerBound(247,7717
  virtual void setLowerBound(248,7771
  virtual int64_t getUpperBound(249,7818
  virtual void setUpperBound(250,7872
  virtual std::pair<std::pair251,7919
  virtual std::pair<unsigned, unsigned> getBounds(251,7919
  virtual void setBounds(252,7992
  virtual uint32_t getDiscriminator(255,8100
  virtual void setDiscriminator(256,8158
  virtual StringRef getValue(259,8259
  virtual void setValue(260,8311
  virtual size_t getValueIndex(261,8355
  uint32_t getAccessibilityCode(264,8441
  void setAccessibilityCode(265,8511
  void setAccessibilityCode(271,8788
  uint32_t getInlineCode(277,8988
  void setInlineCode(278,9044
  uint32_t getVirtualityCode(282,9184
  void setVirtualityCode(283,9248
  void setVirtualityCode(289,9525
  LVElement *getType(getType297,9759
  void setType(301,9881
  StringRef getTypeQualifiedName(312,10152
  virtual bool removeElement(340,11140
  virtual void resolveExtra(350,11742
  virtual void resolveReferences(352,11805
  virtual void report(361,12124
  static LVElementDispatch &getDispatch(getDispatch363,12170

/usr/include/llvm/DebugInfo/LogicalView/Core/LVLine.h,910
#define LLVM_DEBUGINFO_LOGICALVIEW_CORE_LVLINE_H15,600
enum class LVLineKind 22,748
  IsBasicBlock,23,772
  IsDiscriminator,24,788
  IsEndSequence,25,807
  IsEpilogueBegin,26,824
  IsLineDebug,27,843
  IsLineAssembler,28,858
  IsNewStatement,29,877
  IsPrologueEnd,30,939
  IsAlwaysStepInto,31,956
  IsNeverStepInto,32,988
  LastEntry33,1020
using LVLineKindSet 35,1035
using LVLineDispatch 36,1079
using LVLineRequest 37,1143
class LVLine 40,1236
  LVProperties<LVLineKind> Kinds;42,1317
  static LVLineDispatch Dispatch;43,1351
  LVLine(49,1494
  static bool classof(57,1701
  uint64_t getAddress(75,2263
  void setAddress(76,2317
  std::string lineNumberAsString(83,2654
  static LVLineDispatch &getDispatch(getDispatch87,2804
  void printExtra(106,3622
  void dump(109,3744
class LVLineDebug final : public LVLine 114,3853
class LVLineAssembler final : public LVLine 143,4941

/usr/include/llvm/DebugInfo/LogicalView/Core/LVLocation.h,1287
#define LLVM_DEBUGINFO_LOGICALVIEW_CORE_LVLOCATION_H15,621
class LVLocation 57,1872
  enum class Property 58,1909
    IsAddressRange,59,1933
    IsBaseClassOffset,60,1953
    IsBaseClassStep,61,1976
    IsClassOffset,62,1997
    IsFixedAddress,63,2016
    IsLocationSimple,64,2036
    IsGapEntry,65,2058
    IsOperation,66,2074
    IsOperationList,67,2091
    IsRegister,68,2112
    IsStackOffset,69,2128
    IsDiscardedRange,70,2147
    IsInvalidRange,71,2169
    IsInvalidLower,72,2189
    IsInvalidUpper,73,2209
    IsCallSite,74,2229
    LastEntry75,2245
  LVProperties<Property> Properties;78,2320
  bool hasAssociatedRange(81,2421
  LVLine *LowerLine LowerLine87,2583
  LVLine *UpperLine UpperLine88,2614
  LVAddress LowPC 93,2805
  LVAddress HighPC 94,2828
  LVLocation(99,2880
  virtual void updateKind(123,3834
  const LVLine *getLowerLine(getLowerLine126,3899
  void setLowerLine(127,3958
  const LVLine *getUpperLine(getUpperLine128,4014
  void setUpperLine(129,4073
  LVAddress getLowerAddress(132,4160
  void setLowerAddress(133,4223
  LVAddress getUpperAddress(134,4295
  void setUpperAddress(135,4359
  virtual void addObject(150,4941
  virtual void addObject(152,5079
  virtual void printRawExtra(157,5356
  void dump(163,5614

/usr/include/llvm/DebugInfo/LogicalView/Core/LVOptions.h,4017
#define LLVM_DEBUGINFO_LOGICALVIEW_CORE_LVOPTIONS_H15,604
#define BOOL_FUNCTION(30,1050
#define UNSIGNED_FUNCTION(36,1396
#define STD_STRING_FUNCTION(42,1743
#define STDSET_FUNCTION_4(48,2086
#define STDSET_FUNCTION_5(59,2820
#define ATTRIBUTE_OPTION(66,3268
#define OUTPUT_OPTION(70,3461
#define PRINT_OPTION(74,3647
#define WARNING_OPTION(77,3778
#define COMPARE_OPTION(81,3968
#define REPORT_OPTION(85,4160
#define INTERNAL_OPTION(89,4349
enum class LVAttributeKind 94,4532
  All,95,4561
  Argument,96,4597
  Base,97,4638
  Coverage,98,4675
  Directories,99,4716
  Discarded,100,4760
  Discriminator,101,4802
  Encoded,102,4848
  Extended,103,4888
  Filename,104,4929
  Files,105,4970
  Format,106,5008
  Gaps,107,5047
  Generated,108,5084
  Global,109,5126
  Inserted,110,5165
  Level,111,5206
  Linkage,112,5244
  Local,113,5284
  Location,114,5322
  Offset,115,5363
  Pathname,116,5402
  Producer,117,5443
  Publics,118,5484
  Qualified,119,5524
  Qualifier,120,5566
  Range,121,5608
  Reference,122,5646
  Register,123,5688
  Standard,124,5729
  Subrange,125,5770
  System,126,5811
  Typename,127,5850
  Underlying,128,5891
  Zero 129,5934
using LVAttributeKindSet 131,5974
enum class LVCompareKind 133,6029
  All,134,6056
  Lines,135,6084
  Scopes,136,6114
  Symbols,137,6145
  Types 138,6177
using LVCompareKindSet 140,6210
enum class LVOutputKind 142,6261
  All,143,6287
  Split,144,6312
  Json,145,6339
  Text 146,6365
using LVOutputKindSet 148,6394
enum class LVPrintKind 150,6443
  All,151,6468
  Elements,152,6499
  Instructions,153,6535
  Lines,154,6575
  Scopes,155,6608
  Sizes,156,6642
  Symbols,157,6675
  Summary,158,6710
  Types,159,6745
  Warnings 160,6778
using LVPrintKindSet 162,6817
enum class LVReportKind 164,6864
  All,165,6890
  Children,166,6918
  List,167,6951
  Parents,168,6980
  View 169,7012
using LVReportKindSet 171,7044
enum class LVWarningKind 173,7093
  All,174,7120
  Coverages,175,7150
  Lines,176,7186
  Locations,177,7218
  Ranges 178,7254
using LVWarningKindSet 180,7290
enum class LVInternalKind 182,7341
  All,183,7369
  Cmdline,184,7400
  ID,185,7435
  Integrity,186,7465
  None,187,7502
  Tag 188,7534
using LVInternalKindSet 190,7568
class LVOptions 197,7944
  class LVAttribute 198,7962
    LVAttributeKindSet Kinds;200,7994
  class LVCompare 207,8332
    LVCompareKindSet Elements;209,8362
  class LVPrint 215,8579
    LVPrintKindSet Kinds;217,8607
  class LVReport 226,9054
    LVReportKindSet Kinds;228,9083
  class LVSelect 233,9240
    StringSet<> Generic;241,9647
    LVOffsetSet Offsets;242,9702
    LVElementKindSet Elements;243,9763
    LVLineKindSet Lines;244,9824
    LVScopeKindSet Scopes;245,9882
    LVSymbolKindSet Symbols;246,9941
    LVTypeKindSelection Types;247,10001
  class LVOutput 250,10065
    LVOutputKindSet Kinds;252,10094
    std::string Folder;254,10229
  class LVWarning 258,10377
    LVWarningKindSet Kinds;260,10407
  class LVInternal 263,10461
    LVInternalKindSet Kinds;265,10492
  class LVGeneral 268,10548
  size_t LastFilenameIndex 277,10909
  size_t IndentationSize 281,11082
  void resetFilenameIndex(288,11290
  bool changeFilenameIndex(289,11345
  size_t indentationSize(312,12233
  LVAttribute Attribute;314,12295
  LVCompare Compare;315,12320
  LVOutput Output;316,12341
  LVPrint Print;317,12360
  LVReport Report;318,12377
  LVSelect Select;319,12396
  LVWarning Warning;320,12415
  LVInternal Internal;321,12436
  LVGeneral General;322,12459
  LVSortMode getSortMode(382,14105
  void setSortMode(383,14166
  void dump(441,15650
inline LVOptions &options(options445,15700
inline void setOptions(446,15767
  enum class LVMatchMode 450,15891
    None 451,15918
    Match,452,15953
    NoCase,453,15985
    Regex 454,16015
  struct LVMatch 458,16100
    std::string Pattern;459,16119
    std::shared_ptr<Regex> RE;460,16180
inline LVPatterns &patterns(patterns642,22168

/usr/include/llvm/DebugInfo/LogicalView/Core/LVRange.h,134
#define LLVM_DEBUGINFO_LOGICALVIEW_CORE_LVRANGE_H15,603
using LVRangeEntries 47,1519
class LVRange final : public LVObject 49,1570

/usr/include/llvm/DebugInfo/LogicalView/Core/LVReader.h,2484
#define LLVM_DEBUGINFO_LOGICALVIEW_CORE_LVREADER_H15,606
class LVReader 60,1913
  LVBinaryType BinaryType;61,1930
  LVSplitContext SplitContext;64,2017
  using LVCompileUnits 67,2089
  LVCompileUnits CompileUnits;68,2156
  LVLines Lines;71,2247
  LVScopes Scopes;72,2264
  LVSymbols Symbols;73,2283
  LVTypes Types;74,2304
  bool OutputSplit 78,2377
#define LV_OBJECT_ALLOCATOR(81,2462
#undef LV_OBJECT_ALLOCATOR122,3680
  LV_OBJECT_ALLOCATOR(85,2626
  std::string InputFilename;126,3750
  std::string FileFormatName;127,3779
  ScopedPrinter &W;W128,3809
  raw_ostream &OS;OS129,3829
  LVScopeCompileUnit *CompileUnit CompileUnit130,3848
  LVSectionIndex DotTextSectionIndex 133,3964
  void addCompileUnitOffset(136,4063
  virtual Error createScopes(141,4223
  std::string createAlternativePath(155,4853
  virtual void sortScopes(168,5427
  LVReader(172,5490
#define LV_CREATE_OBJECT(188,6139
#undef LV_CREATE_OBJECT228,7322
  LV_CREATE_OBJECT(194,6408
  StringRef getFilename(236,7599
  void setFilename(237,7657
  StringRef getFileFormatName(238,7731
  raw_ostream &outputStream(outputStream240,7797
  bool isBinaryTypeNone(242,7843
  bool isBinaryTypeELF(243,7920
  bool isBinaryTypeCOFF(244,7995
  LVScopeCompileUnit *getCompileUnit(getCompileUnit246,8073
  void setCompileUnit(247,8142
  void setCompileUnitCPUType(251,8324
  codeview::CPUType getCompileUnitCPUType(254,8418
  LVScopeRoot *getScopesRoot(getScopesRoot259,8539
  virtual std::string getRegisterName(264,8632
  LVSectionIndex getDotTextSectionIndex(270,8825
  virtual LVSectionIndex getSectionIndex(271,8905
  virtual bool isSystemEntry(275,9006
  LVSplitContext &getSplitContext(getSplitContext280,9138
  void notifyAddedElement(283,9269
  void notifyAddedElement(287,9415
  void notifyAddedElement(291,9566
  void notifyAddedElement(295,9722
  const LVLines &getLines(getLines300,9869
  const LVScopes &getScopes(getScopes301,9921
  const LVSymbols &getSymbols(getSymbols302,9976
  const LVTypes &getTypes(getTypes303,10034
  bool doPrintLine(306,10123
  bool doPrintLocation(309,10216
  bool doPrintScope(312,10324
  bool doPrintSymbol(315,10421
  bool doPrintType(318,10522
  virtual void printRecords(326,10733
  void dump(329,10838
inline LVReader &getReader(getReader333,10888
inline LVSplitContext &getReaderSplitContext(getReaderSplitContext334,10953
inline LVScopeCompileUnit *getReaderCompileUnit(getReaderCompileUnit337,11044

/usr/include/llvm/DebugInfo/LogicalView/Core/LVScope.h,3880
#define LLVM_DEBUGINFO_LOGICALVIEW_CORE_LVSCOPE_H15,603
enum class LVScopeKind 35,1152
  IsAggregate,36,1177
  IsArray,37,1192
  IsBlock,38,1203
  IsCallSite,39,1214
  IsCatchBlock,40,1228
  IsClass,41,1244
  IsCompileUnit,42,1255
  IsEntryPoint,43,1272
  IsEnumeration,44,1288
  IsFunction,45,1305
  IsFunctionType,46,1319
  IsInlinedFunction,47,1337
  IsLabel,48,1358
  IsLexicalBlock,49,1369
  IsMember,50,1387
  IsNamespace,51,1399
  IsRoot,52,1414
  IsStructure,53,1424
  IsSubprogram,54,1439
  IsTemplate,55,1455
  IsTemplateAlias,56,1469
  IsTemplatePack,57,1488
  IsTryBlock,58,1506
  IsUnion,59,1520
  LastEntry60,1531
using LVScopeKindSet 62,1546
using LVScopeDispatch 63,1592
using LVScopeRequest 64,1659
using LVOffsetElementMap 66,1716
using LVOffsetLinesMap 67,1776
using LVOffsetLocationsMap 68,1830
using LVOffsetSymbolMap 69,1892
using LVTagOffsetsMap 70,1950
class LVScope 73,2045
  enum class Property 74,2080
    HasDiscriminator,75,2104
    CanHaveRanges,76,2126
    CanHaveLines,77,2145
    HasGlobals,78,2163
    HasLocals,79,2179
    HasLines,80,2194
    HasScopes,81,2208
    HasSymbols,82,2223
    HasTypes,83,2239
    IsComdat,84,2253
    HasComdatScopes,85,2267
    HasRanges,86,2326
    AddedMissing,87,2341
    LastEntry88,2396
  LVProperties<LVScopeKind> Kinds;92,2479
  LVProperties<Property> Properties;93,2514
  static LVScopeDispatch Dispatch;94,2551
  unsigned CoverageFactor 97,2626
  void calculateCoverage(100,2690
  std::unique_ptr<LVTypes> Types;120,3409
  std::unique_ptr<LVSymbols> Symbols;121,3443
  std::unique_ptr<LVScopes> Scopes;122,3481
  std::unique_ptr<LVLines> Lines;123,3517
  std::unique_ptr<LVLocations> Ranges;124,3551
  std::unique_ptr<LVElements> Children;132,3937
  virtual void printSizes(139,4192
  virtual void printSummary(140,4244
  virtual StringRef getEncodedArgs(143,4332
  virtual void setEncodedArgs(144,4399
  LVScope(147,4464
  static bool classof(155,4679
  bool isCompileUnit(199,6367
  bool isRoot(200,6436
  const LVLines *getLines(getLines205,6562
  const LVLocations *getRanges(getRanges206,6620
  const LVScopes *getScopes(getScopes207,6684
  const LVSymbols *getSymbols(getSymbols208,6745
  const LVTypes *getTypes(getTypes209,6809
  const LVElements *getChildren(getChildren210,6867
  size_t lineCount(231,7745
  size_t rangeCount(232,7810
  size_t scopeCount(233,7878
  size_t symbolCount(234,7946
  size_t typeCount(235,8017
  unsigned getCoverageFactor(247,8521
  virtual LVScope *getReference(getReference259,8983
  LVScope *getCompileUnitParent(getCompileUnitParent261,9044
  static LVScopeDispatch &getDispatch(getDispatch313,11141
  virtual void printWarnings(317,11336
  virtual void printMatchedElements(318,11409
  void dump(321,11541
class LVScopeAggregate final : public LVScope 326,11653
class LVScopeAlias final : public LVScope 364,13019
class LVScopeArray final : public LVScope 381,13547
class LVScopeEnumeration final : public LVScope 617,22711
class LVScopeFormalPack final : public LVScope 632,23286
class LVScopeFunction 646,23804
  LVScope *Reference Reference647,23845
  size_t LinkageNameIndex 648,23924
  size_t EncodedArgsIndex 649,23998
  LVScopeFunction(652,24070
  LVScope *getReference(getReference658,24312
  void setReference(659,24375
  void setReference(663,24472
  StringRef getEncodedArgs(667,24579
  void setEncodedArgs(670,24685
  void setLinkageName(674,24808
  StringRef getLinkageName(677,24930
  size_t getLinkageNameIndex(680,25036
class LVScopeFunctionInlined final : public LVScopeFunction 698,25663
class LVScopeFunctionType final : public LVScopeFunction 741,27354
class LVScopeNamespace final : public LVScope 752,27737
class LVScopeRoot final : public LVScope 782,28824
class LVScopeTemplatePack final : public LVScope 816,30042

/usr/include/llvm/DebugInfo/LogicalView/Core/LVSort.h,218
#define LLVM_DEBUGINFO_LOGICALVIEW_CORE_LVSORT_H14,548
enum class LVSortMode 22,681
  None 23,705
  Kind,24,735
  Line,25,764
  Name,26,793
  Offset 27,822
using LVSortValue 31,914
using LVSortFunction 32,939

/usr/include/llvm/DebugInfo/LogicalView/Core/LVStringPool.h,412
#define LLVM_DEBUGINFO_LOGICALVIEW_CORE_LVSTRINGPOOL_H15,614
class LVStringPool 28,921
  BumpPtrAllocator Allocator;32,1115
  TableType StringTable;33,1145
  std::vector<ValueType *> Entries;34,1170
  LVStringPool(37,1215
  bool isValidIndex(42,1379
  size_t getSize(47,1611
  size_t findIndex(50,1735
  size_t getIndex(58,1969
  StringRef getString(70,2338
  void print(74,2466
  void dump(84,2775

/usr/include/llvm/DebugInfo/LogicalView/Core/LVSymbol.h,559
#define LLVM_DEBUGINFO_LOGICALVIEW_CORE_LVSYMBOL_H15,606
enum class LVSymbolKind 22,756
  IsCallSiteParameter,23,782
  IsConstant,24,805
  IsInheritance,25,819
  IsMember,26,836
  IsParameter,27,848
  IsUnspecified,28,863
  IsVariable,29,880
  LastEntry30,894
using LVSymbolKindSet 32,909
using LVSymbolDispatch 33,957
using LVSymbolRequest 34,1027
  enum class Property 37,1128
  enum class Property { HasLocation,37,1128
  enum class Property { HasLocation, FillGaps,37,1128
  enum class Property { HasLocation, FillGaps, LastEntry 37,1128

/usr/include/llvm/DebugInfo/LogicalView/Core/LVType.h,1606
#define LLVM_DEBUGINFO_LOGICALVIEW_CORE_LVTYPE_H15,600
enum class LVTypeKind 22,748
  IsBase,23,772
  IsConst,24,782
  IsEnumerator,25,793
  IsImport,26,809
  IsImportDeclaration,27,821
  IsImportModule,28,844
  IsPointer,29,862
  IsPointerMember,30,875
  IsReference,31,894
  IsRestrict,32,909
  IsRvalueReference,33,923
  IsSubrange,34,944
  IsTemplateParam,35,958
  IsTemplateTemplateParam,36,977
  IsTemplateTypeParam,37,1004
  IsTemplateValueParam,38,1027
  IsTypedef,39,1051
  IsUnaligned,40,1064
  IsUnspecified,41,1079
  IsVolatile,42,1096
  IsModifier,43,1110
  LastEntry44,1150
using LVTypeKindSelection 46,1165
using LVTypeDispatch 47,1215
using LVTypeRequest 48,1279
class LVType 51,1370
  enum class Property 52,1404
  enum class Property { IsSubrangeCount,52,1404
  enum class Property { IsSubrangeCount, LastEntry 52,1404
  LVProperties<LVTypeKind> Kinds;55,1521
  LVProperties<Property> Properties;56,1555
  static LVTypeDispatch Dispatch;57,1592
  LVType(63,1735
  static bool classof(68,1911
  bool isBase(102,3080
  bool isTemplateParam(103,3135
  virtual void encodeTemplateArgument(106,3253
  virtual LVElement *getUnderlyingType(getUnderlyingType109,3375
  virtual void setUnderlyingType(110,3436
  static LVTypeDispatch &getDispatch(getDispatch115,3562
  void dump(143,4737
class LVTypeDefinition final : public LVType 148,4839
class LVTypeEnumerator final : public LVType 171,5581
class LVTypeImport final : public LVType 200,6544
class LVTypeParam final : public LVType 214,7054
class LVTypeSubrange final : public LVType 243,7980

/usr/include/llvm/DebugInfo/LogicalView/Core/LVObject.h,2702
#define LLVM_DEBUGINFO_LOGICALVIEW_CORE_LVOBJECT_H15,606
namespace llvm 32,1090
namespace logicalview 33,1107
enum class LVBinaryType 88,2717
enum class LVBinaryType { NONE,88,2717
enum class LVBinaryType { NONE, ELF,88,2717
enum class LVBinaryType { NONE, ELF, COFF 88,2717
enum class LVComparePass 89,2762
enum class LVComparePass { Missing,89,2762
enum class LVComparePass { Missing, Added 89,2762
struct LVCounter 95,2909
  void reset(100,3019
class LVObject 108,3107
  enum class Property 109,3124
    IsLocation,110,3148
    IsGlobalReference,111,3186
    IsGeneratedName,112,3263
    IsResolved,113,3322
    IsResolvedName,114,3376
    IsDiscarded,115,3435
    IsOptimized,116,3503
    IsAdded,117,3574
    IsMatched,118,3627
    IsMissing,119,3699
    IsMissingLink,120,3748
    IsInCompare,121,3808
    IsFileFromReference,122,3855
    IsLineFromReference,123,3911
    HasMoved,124,3967
    HasPattern,125,4046
    IsFinalized,126,4100
    IsReferenced,127,4158
    HasCodeViewLocation,128,4220
    LastEntry129,4285
  LVProperties<Property> Properties;132,4358
  LVOffset Offset 134,4396
  uint32_t LineNumber 135,4419
  LVLevel ScopeLevel 136,4446
    dwarf::Tag Tag;138,4482
    dwarf::Attribute Attr;139,4502
    LVSmall Opcode;140,4529
  } TagAttrOpcode 141,4549
    LVElement *Element;Element146,4745
    LVScope *Scope;Scope147,4769
    LVSymbol *Symbol;Symbol148,4789
  } Parent 149,4811
  LVObject(156,5227
  static uint64_t GID;172,5691
  uint64_t ID 173,5714
  void incID(175,5734
  virtual void printFileIndex(192,6282
  LVObject(195,6365
  virtual bool isNamed(224,7264
  virtual bool isTyped(225,7313
  virtual bool isFiled(226,7362
  bool isLined(227,7411
  dwarf::Tag getTag(230,7511
  void setTag(231,7569
  dwarf::Attribute getAttr(232,7628
  void setAttr(233,7694
  LVSmall getOpcode(234,7763
  void setOpcode(235,7824
  LVOffset getOffset(238,7910
  void setOffset(239,7958
  LVLevel getLevel(242,8061
  void setLevel(243,8111
  virtual StringRef getName(245,8167
  virtual void setName(246,8227
  LVElement *getParent(getParent248,8276
  LVScope *getParentScope(getParentScope254,8479
  LVSymbol *getParentSymbol(getParentSymbol260,8673
  void resetParent(268,8945
  virtual LVAddress getLowerAddress(270,8991
  virtual void setLowerAddress(271,9049
  virtual LVAddress getUpperAddress(272,9102
  virtual void setUpperAddress(273,9160
  uint32_t getLineNumber(275,9214
  void setLineNumber(276,9270
  virtual const char *kind(kind278,9334
  virtual std::string lineNumberAsString(288,9758
  virtual void printExtra(315,11215
  virtual void dump(318,11336
  uint64_t getID(321,11391

/usr/include/llvm/DebugInfo/LogicalView/Core/LVSupport.h,1460
#define LLVM_DEBUGINFO_LOGICALVIEW_CORE_LVSUPPORT_H14,549
template <typename T> class LVProperties 39,1288
  void set(45,1450
  void reset(46,1510
  bool get(47,1572
#define BOOL_BIT(55,1863
#define BOOL_BIT_1(60,2160
#define BOOL_BIT_2(68,2700
#define BOOL_BIT_3(77,3321
#define PROPERTY(88,4082
#define PROPERTY_1(89,4146
#define PROPERTY_2(90,4222
#define PROPERTY_3(92,4349
#define KIND(96,4535
#define KIND_1(97,4590
#define KIND_2(98,4657
#define KIND_3(99,4732
const int HEX_WIDTH 102,4859
inline FormattedNumber hexValue(103,4885
inline std::string hexString(109,5129
inline std::string hexSquareString(117,5394
std::string formatAttributes(123,5612
template <typename MapType,136,5998
template <typename MapType, typename KeyType,136,5998
void addItem(137,6064
template <typename FirstKeyType,142,6188
template <typename FirstKeyType, typename SecondKeyType,142,6188
class LVDoubleMap 143,6265
  using LVSecondMapType 146,6385
  using LVFirstMapType 147,6447
  using LVAuxMapType 149,6536
  using LVValueTypes 150,6598
  LVFirstMapType FirstMap;151,6645
  LVAuxMapType AuxMap;152,6672
  void add(155,6704
  LVSecondMapType *findMap(findMap173,7405
  ValueType find(181,7645
  ValueType find(191,7988
  LVValueTypes find(199,8273
inline std::string formattedKind(216,8789
inline std::string formattedName(220,8899
inline std::string formattedNames(224,9009
inline uint16_t getCodeViewOperationCode(250,10323

/usr/include/llvm/DebugInfo/LogicalView/Readers/LVBinaryReader.h,1513
#define LLVM_DEBUGINFO_LOGICALVIEW_READERS_LVBINARYREADER_H15,610
class LVSymbolTable final 49,1727
class LVBinaryReader 69,2326
  LVSymbolTable SymbolTable;71,2427
  using LVInlineeLine 76,2647
  LVInlineeLine CUInlineeLines;77,2718
  LVDoubleMap<LVDoubleMap81,2870
  LVDoubleMap<LVSectionIndex, LVScope *, LVLines *> ScopeInstructions;81,2870
  LVDoubleMap<LVDoubleMap84,3002
  LVDoubleMap<LVSectionIndex, LVAddress, LVScope *> AssemblerMappings;84,3002
  using LVSectionAddresses 88,3196
  LVSectionAddresses SectionAddresses;89,3271
  void addSectionAddress(91,3311
  using LVSectionRanges 99,3737
  LVSectionRanges SectionRanges;100,3815
  uint64_t ImageBaseAddress 103,3906
  uint64_t VirtualAddress 104,3939
  using LVSections 107,4011
  LVSections Sections;108,4078
  std::vector<std::unique_ptr<LVLines>> DiscoveredLines;110,4102
  LVLines CULines;115,4322
  std::unique_ptr<const MCRegisterInfo> MRI;117,4342
  std::unique_ptr<const MCAsmInfo> MAI;118,4387
  std::unique_ptr<const MCSubtargetInfo> STI;119,4427
  std::unique_ptr<const MCInstrInfo> MII;120,4473
  std::unique_ptr<const MCDisassembler> MD;121,4515
  std::unique_ptr<MCContext> MC;122,4559
  std::unique_ptr<MCInstPrinter> MIP;123,4592
  virtual void mapRangeAddress(128,4777
  virtual void mapRangeAddress(129,4842
  Expected<Expected137,5198
  LVBinaryReader(158,6137
  void addInlineeLines(165,6474
  LVAddress linearAddress(170,6671
  LVSectionIndex getSectionIndex(186,7386
  void dump(194,7643

/usr/include/llvm/DebugInfo/LogicalView/Readers/LVCodeViewReader.h,198
#define LLVM_DEBUGINFO_LOGICALVIEW_READERS_CODEVIEWREADER_H15,630
namespace codeview 38,1587
namespace object 41,1642
namespace pdb 44,1684
namespace logicalview 47,1721
using LVNames 59,1924

/usr/include/llvm/DebugInfo/LogicalView/Readers/LVELFReader.h,234
#define LLVM_DEBUGINFO_LOGICALVIEW_READERS_LVELFREADER_H15,623
  struct LVElementEntry 72,2366
    LVElement *Element;Element73,2392
    LVElementSet References;74,2416
    LVElementSet Types;75,2445
    LVElementEntry(76,2469

/usr/include/llvm/DebugInfo/LogicalView/Readers/LVCodeViewVisitor.h,68
#define LLVM_DEBUGINFO_LOGICALVIEW_READERS_CODEVIEWVISITOR_H15,637

/usr/include/llvm/DebugInfo/LogicalView/LVReaderHandler.h,367
#define LLVM_DEBUGINFO_LOGICALVIEW_READERS_LVREADERHANDLER_H14,563
class LVReaderHandler 41,1569
  ArgVector &Objects;Objects42,1593
  ScopedPrinter &W;W43,1615
  raw_ostream &OS;OS44,1635
  LVReaders TheReaders;45,1654
  LVReaderHandler(69,2629
  Error createReader(77,2936
  Expected<std::unique_ptr<LVReader>> createReader(82,3065
  void dump(92,3370

/usr/include/llvm/DebugInfo/MSF/IMSFFile.h,108
#define LLVM_DEBUGINFO_MSF_IMSFFILE_H10,408
class IMSFFile 20,597
  virtual uint32_t getBlockSize(24,656

/usr/include/llvm/DebugInfo/MSF/MSFBuilder.h,859
#define LLVM_DEBUGINFO_MSF_MSFBUILDER_H10,410
class MSFBuilder 27,752
  static Expected<MSFBuilder> create(57,2508
  Error setBlockMapAddr(64,2913
  Error setDirectoryBlocksHint(65,2953
  void setFreePageMap(66,3015
  void setUnknown1(67,3052
  Expected<uint32_t> addStream(74,3472
  Expected<uint32_t> addStream(80,3822
  Error setStreamSize(85,4088
  uint32_t getNumStreams(89,4257
  MSFBuilder(122,5454
  Error allocateBlocks(125,5569
  uint32_t computeDirectoryByteSize(126,5647
  BumpPtrAllocator &Allocator;Allocator130,5737
  bool IsGrowable;132,5769
  uint32_t FreePageMap;133,5788
  uint32_t BlockSize;135,5837
  uint32_t BlockMapAddr;136,5859
  BitVector FreeBlocks;137,5884
  std::vector<uint32_t> DirectoryBlocks;138,5908
  std::vector<std::vector139,5949
  std::vector<std::pair<uint32_t, BlockList>> StreamData;139,5949

/usr/include/llvm/DebugInfo/MSF/MSFCommon.h,1239
#define LLVM_DEBUGINFO_MSF_MSFCOMMON_H10,409
struct SuperBlock 31,1178
  char MagicBytes[MagicBytes32,1198
  support::ulittle32_t BlockSize;36,1414
  support::ulittle32_t FreeBlockMapBlock;38,1486
  support::ulittle32_t NumBlocks;42,1686
  support::ulittle32_t NumDirectoryBytes;44,1788
  support::ulittle32_t Unknown1;46,1874
  support::ulittle32_t BlockMapAddr;48,1956
struct MSFLayout 51,1997
  uint32_t mainFpmBlock(54,2042
  uint32_t alternateFpmBlock(59,2185
  const SuperBlock *SB SB64,2335
  BitVector FreePageMap;65,2369
  ArrayRef<support::ulittle32_t> DirectoryBlocks;66,2394
  ArrayRef<support::ulittle32_t> StreamSizes;67,2444
  std::vector<ArrayRef<support::ulittle32_t>> StreamMap;68,2490
class MSFStreamLayout 77,3012
  uint32_t Length;79,3044
  std::vector<support::ulittle32_t> Blocks;80,3063
inline bool isValidBlockSize(90,3463
inline uint64_t getMaxFileSizeFromBlockSize(111,3918
inline uint32_t getMinimumBlockCount(125,4251
inline uint32_t getFirstUnreservedBlock(129,4411
inline uint64_t bytesToBlocks(131,4468
inline uint64_t blockToOffset(135,4584
inline uint32_t getFpmIntervalLength(139,4695
inline uint32_t getNumFpmIntervals(155,5587
inline uint32_t getNumFpmIntervals(171,6305

/usr/include/llvm/DebugInfo/MSF/MSFError.h,678
#define LLVM_DEBUGINFO_MSF_MSFERROR_H10,408
enum class msf_error_code 16,513
  unspecified 17,541
  insufficient_buffer,18,560
  not_writable,19,583
  no_stream,20,599
  invalid_format,21,612
  block_in_use,22,630
  size_overflow_4096,23,646
  size_overflow_8192,24,668
  size_overflow_16384,25,690
  size_overflow_32768,26,713
  stream_directory_overflow,27,736
namespace llvm 37,930
namespace msf 38,947
inline std::error_code make_error_code(41,1009
class MSFError 46,1201
  using ErrorInfo<ErrorInfo48,1268
  using ErrorInfo<MSFError, StringError>::ErrorInfo;ErrorInfo48,1268
  MSFError(49,1345
  bool isPageOverflow(51,1420
  static char ID;70,2104

/usr/include/llvm/DebugInfo/MSF/MappedBlockStream.h,958
#define LLVM_DEBUGINFO_MSF_MAPPEDBLOCKSTREAM_H10,417
class MappedBlockStream 37,1533
  llvm::endianness getEndian(57,2338
  BumpPtrAllocator &getAllocator(getAllocator68,2692
  uint32_t getBlockSize(72,2777
  uint32_t getNumBlocks(73,2831
  uint32_t getStreamLength(74,2902
  const MSFStreamLayout &getStreamLayout(getStreamLayout81,3143
  const uint32_t BlockSize;88,3476
  const MSFStreamLayout StreamLayout;89,3504
  BinaryStreamRef MsfData;90,3542
  BumpPtrAllocator &Allocator;Allocator101,4130
  DenseMap<DenseMap102,4161
  DenseMap<uint32_t, std::vector<CacheEntry>> CacheMap;102,4161
class WritableMappedBlockStream 105,4221
  llvm::endianness getEndian(124,5108
  const MSFStreamLayout &getStreamLayout(getStreamLayout138,5562
  uint32_t getBlockSize(142,5662
  uint32_t getNumBlocks(143,5735
  uint32_t getStreamLength(144,5808
  MappedBlockStream ReadInterface;153,6141
  WritableBinaryStreamRef WriteInterface;154,6176

/usr/include/llvm/DebugInfo/PDB/DIA/DIADataStream.h,203
#define LLVM_DEBUGINFO_PDB_DIA_DIADATASTREAM_H10,417
class DIADataStream 17,570
  explicit DIADataStream(19,624
  uint32_t getRecordCount(21,699
  CComPtr<IDiaEnumDebugStreamData> StreamData;28,938

/usr/include/llvm/DebugInfo/PDB/DIA/DIAEnumDebugStreams.h,166
#define LLVM_DEBUGINFO_PDB_DIA_DIAENUMDEBUGSTREAMS_H10,423
class DIAEnumDebugStreams 21,655
  explicit DIAEnumDebugStreams(23,733
  uint32_t getChildCount(25,811

/usr/include/llvm/DebugInfo/PDB/DIA/DIAEnumFrameData.h,157
#define LLVM_DEBUGINFO_PDB_DIA_DIAENUMFRAMEDATA_H10,420
class DIAEnumFrameData 19,625
  explicit DIAEnumFrameData(21,699
  uint32_t getChildCount(23,771

/usr/include/llvm/DebugInfo/PDB/DIA/DIAEnumInjectedSources.h,175
#define LLVM_DEBUGINFO_PDB_DIA_DIAENUMINJECTEDSOURCES_H10,426
class DIAEnumInjectedSources 19,642
  explicit DIAEnumInjectedSources(21,727
  uint32_t getChildCount(24,818

/usr/include/llvm/DebugInfo/PDB/DIA/DIAEnumLineNumbers.h,163
#define LLVM_DEBUGINFO_PDB_DIA_DIAENUMLINENUMBERS_H10,422
class DIAEnumLineNumbers 20,652
  explicit DIAEnumLineNumbers(22,729
  uint32_t getChildCount(24,805

/usr/include/llvm/DebugInfo/PDB/DIA/DIAEnumSectionContribs.h,175
#define LLVM_DEBUGINFO_PDB_DIA_DIAENUMSECTIONCONTRIBS_H10,426
class DIAEnumSectionContribs 20,660
  explicit DIAEnumSectionContribs(22,745
  uint32_t getChildCount(26,872

/usr/include/llvm/DebugInfo/PDB/DIA/DIAEnumSourceFiles.h,163
#define LLVM_DEBUGINFO_PDB_DIA_DIAENUMSOURCEFILES_H10,422
class DIAEnumSourceFiles 20,648
  explicit DIAEnumSourceFiles(22,725
  uint32_t getChildCount(25,861

/usr/include/llvm/DebugInfo/PDB/DIA/DIAEnumSymbols.h,243
#define LLVM_DEBUGINFO_PDB_DIA_DIAENUMSYMBOLS_H10,418
class DIAEnumSymbols 20,635
  explicit DIAEnumSymbols(22,703
  uint32_t getChildCount(25,824
  const DIASession &Session;Session31,1028
  CComPtr<IDiaEnumSymbols> Enumerator;32,1057

/usr/include/llvm/DebugInfo/PDB/DIA/DIAEnumTables.h,193
#define LLVM_DEBUGINFO_PDB_DIA_DIAENUMTABLES_H10,417
class DIAEnumTables 20,632
  explicit DIAEnumTables(22,699
  uint32_t getChildCount(24,765
  CComPtr<IDiaEnumTables> Enumerator;30,969

/usr/include/llvm/DebugInfo/PDB/DIA/DIAError.h,520
#define LLVM_DEBUGINFO_PDB_DIA_DIAERROR_H10,412
enum class dia_error_code 17,553
  unspecified 18,581
  could_not_create_impl,19,600
  invalid_file_format,20,625
  invalid_parameter,21,648
  already_loaded,22,669
  debug_info_mismatch,23,687
namespace llvm 33,875
namespace pdb 34,892
inline std::error_code make_error_code(37,954
class DIAError 42,1146
  using ErrorInfo<ErrorInfo44,1213
  using ErrorInfo<DIAError, StringError>::ErrorInfo;ErrorInfo44,1213
  DIAError(45,1266
  static char ID;46,1340

/usr/include/llvm/DebugInfo/PDB/DIA/DIAFrameData.h,191
#define LLVM_DEBUGINFO_PDB_DIA_DIAFRAMEDATA_H10,416
class DIAFrameData 20,587
  explicit DIAFrameData(22,639
  uint32_t getAddressOffset(24,702
  CComPtr<IDiaFrameData> FrameData;32,994

/usr/include/llvm/DebugInfo/PDB/DIA/DIAInjectedSource.h,205
#define LLVM_DEBUGINFO_PDB_DIA_DIAINJECTEDSOURCE_H10,421
class DIAInjectedSource 19,601
  explicit DIAInjectedSource(21,663
  uint32_t getCrc32(23,737
  CComPtr<IDiaInjectedSource> SourceFile;32,1059

/usr/include/llvm/DebugInfo/PDB/DIA/DIALineNumber.h,148
#define LLVM_DEBUGINFO_PDB_DIA_DIALINENUMBER_H10,417
class DIALineNumber 17,570
  explicit DIALineNumber(19,624
  uint32_t getLineNumber(21,690

/usr/include/llvm/DebugInfo/PDB/DIA/DIARawSymbol.h,208
#define LLVM_DEBUGINFO_PDB_DIA_DIARAWSYMBOL_H10,415
class DIARawSymbol 18,584
  DIARawSymbol(20,636
  void dump(22,714
  const DIASession &Session;Session227,9865
  CComPtr<IDiaSymbol> Symbol;228,9894

/usr/include/llvm/DebugInfo/PDB/DIA/DIASectionContrib.h,219
#define LLVM_DEBUGINFO_PDB_DIA_DIASECTIONCONTRIB_H10,421
class DIASectionContrib 19,601
  explicit DIASectionContrib(21,663
  const DIASession &Session;Session48,1728
  CComPtr<IDiaSectionContrib> Section;49,1757

/usr/include/llvm/DebugInfo/PDB/DIA/DIASession.h,254
#define LLVM_DEBUGINFO_PDB_DIA_DIASESSION_H10,414
class DIASession 22,636
  explicit DIASession(24,684
  static Error createFromPdb(26,741
  static Error createFromExe(28,855
  uint64_t getLoadAddress(31,970
  CComPtr<IDiaSession> Session;89,3868

/usr/include/llvm/DebugInfo/PDB/DIA/DIASourceFile.h,252
#define LLVM_DEBUGINFO_PDB_DIA_DIASOURCEFILE_H10,417
class DIASourceFile 19,589
  explicit DIASourceFile(21,643
  CComPtr<IDiaSourceFile> getDiaFile(31,1030
  const DIASession &Session;Session34,1108
  CComPtr<IDiaSourceFile> SourceFile;35,1137

/usr/include/llvm/DebugInfo/PDB/DIA/DIASupport.h,157
#define LLVM_DEBUGINFO_PDB_DIA_DIASUPPORT_H14,685
#define NTDDI_VERSION 17,756
#define _WIN32_WINNT 18,790
#define WINVER 19,830
#define NOMINMAX21,881

/usr/include/llvm/DebugInfo/PDB/DIA/DIATable.h,167
#define LLVM_DEBUGINFO_PDB_DIA_DIATABLE_H10,412
class DIATable 17,555
  explicit DIATable(19,599
  uint32_t getItemCount(21,650
  CComPtr<IDiaTable> Table;26,789

/usr/include/llvm/DebugInfo/PDB/DIA/DIAUtils.h,86
#define LLVM_DEBUGINFO_PDB_DIA_DIAUTILS_H10,412
std::string invokeBstrMethod(16,548

/usr/include/llvm/DebugInfo/PDB/Native/DbiModuleDescriptor.h,196
#define LLVM_DEBUGINFO_PDB_NATIVE_DBIMODULEDESCRIPTOR_H10,426
class DbiModuleDescriptor 23,745
  static Error initialize(31,994
  bool hasECInfo(33,1073
  Error operator()(operator()59,1799

/usr/include/llvm/DebugInfo/PDB/Native/DbiModuleDescriptorBuilder.h,1249
#define LLVM_DEBUGINFO_PDB_NATIVE_DBIMODULEDESCRIPTORBUILDER_H10,433
struct SymbolListWrapper 38,1203
  explicit SymbolListWrapper(39,1230
  explicit SymbolListWrapper(42,1391
  ArrayRef<uint8_t> asArray(45,1518
  uint32_t size(49,1638
struct StringTableFixup 58,1857
  uint32_t StrTabOffset 59,1883
  uint32_t SymOffsetOfReference 60,1912
class DbiModuleDescriptorBuilder 63,1953
  using MergeSymbolsCallback 79,2484
  void setMergeSymbolsCallback(82,2622
  void setStringTableFixups(87,2760
  StringRef getModuleName(106,3410
  StringRef getObjFileName(107,3467
  unsigned getModuleIndex(109,3527
  ArrayRef<std::string> source_files(111,3585
  uint32_t getNextSymbolOffset(117,3850
  msf::MSFBuilder &MSF;MSF135,4492
  uint32_t SymbolByteSize 137,4517
  uint32_t PdbFilePathNI 138,4548
  std::string ModuleName;139,4578
  std::string ObjFileName;140,4604
  std::vector<std::string> SourceFiles;141,4631
  std::vector<SymbolListWrapper> Symbols;142,4671
  void *MergeSymsCtx MergeSymsCtx144,4714
  MergeSymbolsCallback MergeSymsCallback 145,4746
  std::vector<StringTableFixup> StringTableFixups;147,4799
  std::vector<codeview::DebugSubsectionRecordBuilder> C13Builders;149,4851
  ModuleInfoHeader Layout;151,4919

/usr/include/llvm/DebugInfo/PDB/Native/DbiModuleList.h,869
#define LLVM_DEBUGINFO_PDB_NATIVE_DBIMODULELIST_H10,420
class DbiModuleSourceFilesIterator31,946
  const StringRef &operator*(operator*46,1624
  StringRef &operator*(operator*47,1683
  StringRef ThisValue;61,2143
  const DbiModuleList *Modules{Modules62,2166
  uint32_t Modi{Modi63,2207
  uint16_t Filei{Filei64,2227
class DbiModuleList 67,2252
  VarStreamArray<DbiModuleDescriptor> Descriptors;87,2844
  FixedStreamArray<support::little32_t> FileNameOffsets;89,2896
  FixedStreamArray<support::ulittle16_t> ModFileCountArray;90,2953
  std::vector<uint32_t> ModuleInitialFileIndex;99,3487
  std::vector<uint32_t> ModuleDescriptorOffsets;104,3715
  const FileInfoSubstreamHeader *FileInfoHeader FileInfoHeader106,3765
  BinaryStreamRef ModInfoSubstream;108,3825
  BinaryStreamRef FileInfoSubstream;109,3861
  BinaryStreamRef NamesBuffer;110,3898

/usr/include/llvm/DebugInfo/PDB/Native/DbiStream.h,1335
#define LLVM_DEBUGINFO_PDB_NATIVE_DBISTREAM_H10,416
class DbiStream 39,1168
  explicit DbiStream(43,1228
  ~DbiStream(44,1288
  Error reload(45,1304
  PdbRaw_DbiVer getDbiVersion(47,1335
  BinarySubstreamRef getSectionContributionData(70,1954
  std::unique_ptr<BinaryStream> Stream;105,3324
  PDBStringTable ECNames;107,3365
  BinarySubstreamRef SecContrSubstream;109,3392
  BinarySubstreamRef SecMapSubstream;110,3432
  BinarySubstreamRef ModiSubstream;111,3470
  BinarySubstreamRef FileInfoSubstream;112,3506
  BinarySubstreamRef TypeServerMapSubstream;113,3546
  BinarySubstreamRef ECSubstream;114,3591
  DbiModuleList Modules;116,3626
  FixedStreamArray<support::ulittle16_t> DbgStreams;118,3652
  FixedStreamArray<SectionContrib> SectionContribs;122,3807
  FixedStreamArray<SectionContrib2> SectionContribs2;123,3859
  FixedStreamArray<SecMapEntry> SectionMap;124,3913
  std::unique_ptr<msf::MappedBlockStream> SectionHeaderStream;126,3958
  FixedStreamArray<object::coff_section> SectionHeaders;127,4021
  std::unique_ptr<msf::MappedBlockStream> OldFpoStream;129,4079
  FixedStreamArray<object::FpoData> OldFpoRecords;130,4135
  std::unique_ptr<msf::MappedBlockStream> NewFpoStream;132,4189
  codeview::DebugFrameDataSubsectionRef NewFpoRecords;133,4245
  const DbiStreamHeader *Header;Header135,4301

/usr/include/llvm/DebugInfo/PDB/Native/DbiStreamBuilder.h,1563
#define LLVM_DEBUGINFO_PDB_NATIVE_DBISTREAMBUILDER_H10,423
class DbiStreamBuilder 40,1216
  DbiStreamBuilder(42,1249
  ~DbiStreamBuilder(43,1291
  void setVersionHeader(48,1437
  void setAge(49,1479
  void setBuildNumber(50,1506
  void setBuildNumber(51,1541
  void setPdbDllVersion(52,1594
  void setPdbDllRbld(53,1631
  void setFlags(54,1665
  void setMachineType(55,1694
  void setMachineType(56,1732
  Error addDbgStream(59,1816
  uint32_t addECName(61,1888
  uint32_t calculateSerializedLength(63,1927
  void addSectionContrib(79,2558
  struct DebugStream 87,2792
    std::function<Error(BinaryStreamWriter &)> WriteFn;88,2815
  msf::MSFBuilder &Msf;Msf104,3341
  BumpPtrAllocator &Allocator;Allocator105,3365
  std::optional<PdbRaw_DbiVer> VerHeader;107,3397
  uint32_t Age;108,3439
  uint16_t BuildNumber;109,3455
  uint16_t PdbDllVersion;110,3479
  uint16_t PdbDllRbld;111,3505
  uint16_t Flags;112,3528
  PDB_Machine MachineType;113,3546
  const DbiStreamHeader *Header;Header118,3735
  std::vector<std::unique_ptr<DbiModuleDescriptorBuilder>> ModiList;120,3769
  std::optional<codeview::DebugFrameDataSubsection> NewFpoData;122,3839
  std::vector<object::FpoData> OldFpoData;123,3903
  StringMap<uint32_t> SourceFileNames;125,3947
  PDBStringTableBuilder ECNamesBuilder;127,3987
  WritableBinaryStreamRef NamesBuffer;128,4027
  MutableBinaryByteStream FileInfoBuffer;129,4066
  std::vector<SectionContrib> SectionContribs;130,4108
  std::vector<SecMapEntry> SectionMap;131,4155
  std::array<std::array132,4194

/usr/include/llvm/DebugInfo/PDB/Native/EnumTables.h,54
#define LLVM_DEBUGINFO_PDB_NATIVE_ENUMTABLES_H10,417

/usr/include/llvm/DebugInfo/PDB/Native/GSIStreamBuilder.h,1101
#define LLVM_DEBUGINFO_PDB_NATIVE_GSISTREAMBUILDER_H10,423
template <> struct BinaryItemTraits<BinaryItemTraits28,942
  static size_t length(29,1000
  static ArrayRef<uint8_t> bytes(32,1096
namespace msf 37,1199
namespace pdb 41,1270
class GSIStreamBuilder 46,1362
  uint32_t getPublicsStreamIndex(59,1702
  uint32_t getGlobalsStreamIndex(60,1774
  uint32_t getRecordStreamIndex(61,1846
  msf::MSFBuilder &Msf;Msf89,3022
  std::unique_ptr<GSIHashStreamBuilder> PSH;90,3046
  std::unique_ptr<GSIHashStreamBuilder> GSH;91,3091
  std::vector<BulkPublic> Publics;95,3289
  std::vector<codeview::CVSymbol> Globals;98,3365
  llvm::DenseSet<llvm::DenseSet102,3508
  llvm::DenseSet<codeview::CVSymbol, SymbolDenseMapInfo> GlobalsSeen;102,3508
struct BulkPublic 108,3755
  BulkPublic(109,3775
  const char *Name Name111,3819
  uint32_t NameLen 112,3849
  uint32_t SymOffset 115,3930
  uint32_t Offset 118,4005
  uint16_t Segment 121,4086
  uint16_t Flags 124,4132
  uint16_t BucketIdx 127,4221
  void setFlags(130,4310
  void setBucketIdx(135,4435
  StringRef getName(140,4520

/usr/include/llvm/DebugInfo/PDB/Native/GlobalsStream.h,1016
#define LLVM_DEBUGINFO_PDB_NATIVE_GLOBALSSTREAM_H10,420
class GSIHashIterator29,972
  GSIHashIterator(35,1190
  uint32_t operator*(38,1289
enum : unsigned 45,1459
enum : unsigned { IPHR_HASH 45,1459
class GSIHashTable 50,1684
  const GSIHashHeader *HashHdr;HashHdr52,1713
  FixedStreamArray<PSHashRecord> HashRecords;53,1745
  FixedStreamArray<support::ulittle32_t> HashBitmap;54,1791
  FixedStreamArray<support::ulittle32_t> HashBuckets;55,1844
  std::array<std::array56,1898
  std::array<int32_t, IPHR_HASH + 1> BucketMap;56,1898
  uint32_t getVerSignature(60,1990
  uint32_t getVerHeader(61,2059
  uint32_t getHashRecordSize(62,2119
  uint32_t getNumBuckets(63,2184
  typedef GSIHashHeader iterator;65,2250
  GSIHashIterator begin(66,2284
  GSIHashIterator end(67,2365
class GlobalsStream 70,2446
  const GSIHashTable &getGlobalsTable(getGlobalsTable74,2570
  std::vector<std::vector77,2660
  GSIHashTable GlobalsTable;81,2797
  std::unique_ptr<msf::MappedBlockStream> Stream;82,2826

/usr/include/llvm/DebugInfo/PDB/Native/Hash.h,48
#define LLVM_DEBUGINFO_PDB_NATIVE_HASH_H10,411

/usr/include/llvm/DebugInfo/PDB/Native/HashTable.h,1518
#define LLVM_DEBUGINFO_PDB_NATIVE_HASHTABLE_H10,416
class HashTableIterator34,1077
  HashTableIterator(41,1389
  HashTableIterator(46,1545
  HashTableIterator &operator=(operator=58,1847
  bool operator==(operator==62,1947
  const std::pair<std::pair70,2146
  const std::pair<uint32_t, ValueT> &operator*(operator*70,2146
  HashTableIterator &operator++(operator++78,2402
  bool isEnd(90,2610
  uint32_t index(91,2649
  const HashTable<ValueT> *Map;Map93,2693
  uint32_t Index;94,2725
  bool IsEnd;95,2743
class HashTable 99,2788
  struct Header 100,2806
    support::ulittle32_t Size;101,2824
    support::ulittle32_t Capacity;102,2855
  using BucketList 105,2896
  using const_iterator 108,2968
  HashTable(111,3046
  explicit HashTable(112,3083
  Error load(116,3160
  uint32_t calculateSerializedLength(153,4419
  Error commit(180,5287
  void clear(202,5835
  bool empty(208,5922
  uint32_t capacity(209,5967
  uint32_t size(210,6022
  const_iterator begin(212,6075
  const_iterator end(213,6140
  template <typename Key,217,6344
  const_iterator find_as(218,6388
  template <typename Key,249,7687
  bool set_as(250,7731
  template <typename Key,254,7860
  ValueT get(255,7904
  bool isPresent(262,8062
  bool isDeleted(263,8125
  BucketList Buckets;265,8189
  mutable SparseBitVector<> Present;266,8211
  mutable SparseBitVector<> Deleted;267,8248
private:private269,8286
  bool set_as_internal(273,8456
  static uint32_t maxLoad(298,9238
  void grow(301,9347

/usr/include/llvm/DebugInfo/PDB/Native/ISectionContribVisitor.h,103
#define LLVM_DEBUGINFO_PDB_NATIVE_ISECTIONCONTRIBVISITOR_H10,429
class ISectionContribVisitor 18,571

/usr/include/llvm/DebugInfo/PDB/Native/InfoStream.h,431
#define LLVM_DEBUGINFO_PDB_NATIVE_INFOSTREAM_H10,417
class InfoStream 24,818
  InfoStream(28,880
  Error reload(30,933
  uint32_t getStreamSize(32,952
  bool containsIdStream(36,1051
  std::unique_ptr<BinaryStream> Stream;54,1590
  const InfoStreamHeader *Header;Header56,1631
  BinarySubstreamRef SubNamedStreams;58,1666
  std::vector<PdbRaw_FeatureSig> FeatureSignatures;60,1705
  NamedStreamMap NamedStreams;65,1843

/usr/include/llvm/DebugInfo/PDB/Native/InfoStreamBuilder.h,708
#define LLVM_DEBUGINFO_PDB_NATIVE_INFOSTREAMBUILDER_H10,424
class InfoStreamBuilder 27,749
  InfoStreamBuilder(29,783
  void setVersion(33,982
  void addFeature(34,1019
  void setHashPDBContentsToGUID(38,1190
  void setSignature(41,1300
  void setAge(42,1333
  void setGuid(43,1360
  bool hashPDBContentsToGUID(45,1395
  uint32_t getAge(46,1466
  codeview::GUID getGuid(47,1508
  std::optional<uint32_t> getSignature(48,1558
  msf::MSFBuilder &Msf;Msf58,1791
  std::vector<PdbRaw_FeatureSig> Features;60,1816
  PdbRaw_ImplVer Ver;61,1859
  uint32_t Age;62,1881
  std::optional<uint32_t> Signature;63,1897
  codeview::GUID Guid;64,1934
  NamedStreamMap &NamedStreams;NamedStreams68,1997

/usr/include/llvm/DebugInfo/PDB/Native/InjectedSourceStream.h,405
#define LLVM_DEBUGINFO_PDB_NATIVE_INJECTEDSOURCESTREAM_H10,427
class InjectedSourceStream 22,730
  InjectedSourceStream(24,767
  Error reload(25,839
  const_iterator begin(28,960
  const_iterator end(29,1031
  uint32_t size(31,1099
  std::unique_ptr<msf::MappedBlockStream> Stream;34,1172
  const SrcHeaderBlockHeader* Header;36,1223
  HashTable<SrcHeaderBlockEntry> InjectedSourceTable;37,1261

/usr/include/llvm/DebugInfo/PDB/Native/InputFile.h,1411
#define LLVM_DEBUGINFO_PDB_NATIVE_INPUTFILE_H10,416
class InputFile 39,1160
  InputFile(40,1178
  std::unique_ptr<NativeSession> PdbSession;42,1194
  object::OwningBinary<object::Binary> CoffObject;43,1239
  std::unique_ptr<MemoryBuffer> UnknownFile;44,1290
  PointerUnion<PointerUnion45,1335
  PointerUnion<PDBFile *, object::COFFObjectFile *, MemoryBuffer *> PdbOrObj;45,1335
  TypeCollectionPtr Types;49,1496
  TypeCollectionPtr Ids;50,1523
  enum TypeCollectionKind 52,1549
  enum TypeCollectionKind { kTypes,52,1549
  enum TypeCollectionKind { kTypes, kIds 52,1549
  InputFile(57,1695
  InputFile(58,1741
  InputFile(59,1802
class SymbolGroup 90,2622
  codeview::DebugSubsectionArray getDebugSubsections(107,3171
  const InputFile &getFile(getFile112,3321
  InputFile &getFile(getFile113,3374
  bool hasDebugStream(115,3416
  InputFile *File File123,3661
  StringRef Name;124,3690
  codeview::DebugSubsectionArray Subsections;125,3708
  std::shared_ptr<ModuleDebugStreamRef> DebugStream;126,3754
  codeview::StringsAndChecksumsRef SC;127,3807
  StringMap<codeview::FileChecksumEntry> ChecksumsByFile;128,3846
class SymbolGroupIterator131,3908
  uint32_t Index 150,4510
  std::optional<object::section_iterator> SectionIter;151,4532
  SymbolGroup Value;152,4587
Error iterateOneModule(165,5086
Error iterateSymbolGroups(177,5495
Error iterateModuleSubsections(204,6303

/usr/include/llvm/DebugInfo/PDB/Native/LinePrinter.h,2373
#define LLVM_DEBUGINFO_PDB_NATIVE_LINEPRINTER_H10,418
struct FilterOptions 24,854
  std::list<std::string> ExcludeTypes;25,877
  std::list<std::string> ExcludeSymbols;26,916
  std::list<std::string> ExcludeCompilands;27,957
  std::list<std::string> IncludeTypes;28,1001
  std::list<std::string> IncludeSymbols;29,1040
  std::list<std::string> IncludeCompilands;30,1081
  uint32_t PaddingThreshold;31,1125
  uint32_t SizeThreshold;32,1154
  std::optional<uint32_t> DumpModi;33,1180
  std::optional<uint32_t> ParentRecurseDepth;34,1216
  std::optional<uint32_t> ChildrenRecurseDepth;35,1262
  std::optional<uint32_t> SymbolOffset;36,1310
  bool JustMyCode;37,1350
namespace llvm 40,1373
namespace msf 41,1390
namespace pdb 44,1448
class LinePrinter 50,1519
  template <typename... Ts> void formatLine(63,1839
  template <typename... Ts> void format(66,1978
  bool hasColor(83,2791
  raw_ostream &getStream(getStream84,2836
  int getIndentLevel(85,2878
  const FilterOptions &getFilters(getFilters92,3161
  void SetFilters(96,3260
  raw_ostream &OS;OS102,3427
  int IndentSpaces;103,3446
  int CurrentIndent;104,3466
  bool UseColor;105,3487
  const FilterOptions &Filters;Filters106,3504
  std::list<Regex> ExcludeCompilandFilters;108,3537
  std::list<Regex> ExcludeTypeFilters;109,3581
  std::list<Regex> ExcludeSymbolFilters;110,3620
  std::list<Regex> IncludeCompilandFilters;112,3662
  std::list<Regex> IncludeTypeFilters;113,3706
  std::list<Regex> IncludeSymbolFilters;114,3745
struct PrintScope 117,3790
  explicit PrintScope(118,3810
  explicit PrintScope(120,3912
  LinePrinter &P;P123,4059
  uint32_t IndentLevel;124,4077
  uint32_t LabelWidth 125,4101
inline PrintScope withLabelWidth(128,4132
struct AutoIndent 132,4238
  explicit AutoIndent(133,4258
  explicit AutoIndent(137,4375
  ~AutoIndent(141,4478
  LinePrinter *L L146,4539
  uint32_t Amount 147,4567
inline raw_ostream &operator<<(operator<<151,4613
enum class PDB_ColorItem 155,4724
  None,156,4751
  Address,157,4759
  Type,158,4770
  Comment,159,4778
  Padding,160,4789
  Keyword,161,4800
  Offset,162,4811
  Identifier,163,4821
  Path,164,4835
  SectionHeader,165,4843
  LiteralValue,166,4860
  Register,167,4876
class WithColor 170,4892
  raw_ostream &get(get175,4981
  raw_ostream &OS;OS179,5063
  bool UseColor;180,5082

/usr/include/llvm/DebugInfo/PDB/Native/ModuleDebugStream.h,677
#define LLVM_DEBUGINFO_PDB_NATIVE_MODULEDEBUGSTREAM_H10,424
class ModuleDebugStreamRef 31,953
  uint32_t signature(43,1377
  const codeview::CVSymbolArray &getSymbolArray(getSymbolArray48,1515
  codeview::DebugSubsectionArray getSubsectionsArray(62,2090
  DbiModuleDescriptor Mod;76,2387
  uint32_t Signature;78,2415
  std::shared_ptr<msf::MappedBlockStream> Stream;80,2438
  codeview::CVSymbolArray SymbolArray;82,2489
  BinarySubstreamRef SymbolsSubstream;84,2529
  BinarySubstreamRef C11LinesSubstream;85,2568
  BinarySubstreamRef C13LinesSubstream;86,2608
  BinarySubstreamRef GlobalRefsSubstream;87,2648
  codeview::DebugSubsectionArray Subsections;89,2691

/usr/include/llvm/DebugInfo/PDB/Native/NamedStreamMap.h,342
#define LLVM_DEBUGINFO_PDB_NATIVE_NAMEDSTREAMMAP_H10,421
struct NamedStreamMapTraits 27,749
  NamedStreamMap *NS;NS28,779
  explicit NamedStreamMapTraits(30,802
  uint16_t hashLookupKey(31,855
class NamedStreamMap 36,1009
  NamedStreamMap(40,1079
  Error load(42,1100
  Error commit(43,1142
  std::vector<char> NamesBuffer;63,1790

/usr/include/llvm/DebugInfo/PDB/Native/NativeCompilandSymbol.h,191
#define LLVM_DEBUGINFO_PDB_NATIVE_NATIVECOMPILANDSYMBOL_H10,428
class NativeCompilandSymbol 18,636
  NativeCompilandSymbol(20,699
  void dump(23,818
  DbiModuleDescriptor Module;33,1192

/usr/include/llvm/DebugInfo/PDB/Native/NativeEnumGlobals.h,268
#define LLVM_DEBUGINFO_PDB_NATIVE_NATIVEENUMGLOBALS_H10,424
class NativeEnumGlobals 23,692
  NativeEnumGlobals(25,763
  uint32_t getChildCount(28,870
  std::vector<uint32_t> MatchOffsets;34,1074
  uint32_t Index;35,1112
  NativeSession &Session;Session36,1130

/usr/include/llvm/DebugInfo/PDB/Native/NativeEnumInjectedSources.h,362
#define LLVM_DEBUGINFO_PDB_NATIVE_NATIVEENUMINJECTEDSOURCES_H10,432
class NativeEnumInjectedSources 23,756
  NativeEnumInjectedSources(25,844
  uint32_t getChildCount(28,981
  PDBFile &File;File35,1205
  const InjectedSourceStream &Stream;Stream36,1222
  const PDBStringTable &Strings;Strings37,1260
  InjectedSourceStream::const_iterator Cur;38,1293

/usr/include/llvm/DebugInfo/PDB/Native/NativeEnumLineNumbers.h,201
#define LLVM_DEBUGINFO_PDB_NATIVE_NATIVEENUMLINENUMBERS_H10,428
class NativeEnumLineNumbers 20,692
  explicit NativeEnumLineNumbers(22,772
  uint32_t getChildCount(24,847
  uint32_t Index;31,1062

/usr/include/llvm/DebugInfo/PDB/Native/NativeEnumModules.h,220
#define LLVM_DEBUGINFO_PDB_NATIVE_NATIVEENUMMODULES_H10,424
class NativeEnumModules 19,626
  NativeEnumModules(21,697
  uint32_t getChildCount(23,763
  NativeSession &Session;Session29,967
  uint32_t Index;30,993

/usr/include/llvm/DebugInfo/PDB/Native/NativeEnumSymbols.h,265
#define LLVM_DEBUGINFO_PDB_NATIVE_NATIVEENUMSYMBOLS_H10,424
class NativeEnumSymbols 23,687
  NativeEnumSymbols(25,758
  uint32_t getChildCount(27,837
  std::vector<SymIndexId> Symbols;33,1041
  uint32_t Index;34,1076
  NativeSession &Session;Session35,1094

/usr/include/llvm/DebugInfo/PDB/Native/NativeEnumTypes.h,296
#define LLVM_DEBUGINFO_PDB_NATIVE_NATIVEENUMTYPES_H10,422
class NativeEnumTypes 27,790
  NativeEnumTypes(29,859
  NativeEnumTypes(33,1034
  uint32_t getChildCount(36,1138
  std::vector<codeview::TypeIndex> Matches;42,1342
  uint32_t Index;43,1386
  NativeSession &Session;Session44,1404

/usr/include/llvm/DebugInfo/PDB/Native/NativeExeSymbol.h,115
#define LLVM_DEBUGINFO_PDB_NATIVE_NATIVEEXESYMBOL_H10,422
class NativeExeSymbol 23,688
  NativeExeSymbol(28,836

/usr/include/llvm/DebugInfo/PDB/Native/NativeFunctionSymbol.h,201
#define LLVM_DEBUGINFO_PDB_NATIVE_NATIVEFUNCTIONSYMBOL_H10,427
class NativeFunctionSymbol 23,753
  NativeFunctionSymbol(25,815
  ~NativeFunctionSymbol(28,955
  const codeview::ProcSym Sym;43,1500

/usr/include/llvm/DebugInfo/PDB/Native/NativeInlineSiteSymbol.h,246
#define LLVM_DEBUGINFO_PDB_NATIVE_NATIVEINLINESITESYMBOL_H10,429
class NativeInlineSiteSymbol 22,738
  NativeInlineSiteSymbol(24,802
  ~NativeInlineSiteSymbol(28,975
  const codeview::InlineSiteSym Sym;38,1307
  uint64_t ParentAddr;39,1344

/usr/include/llvm/DebugInfo/PDB/Native/NativeLineNumber.h,338
#define LLVM_DEBUGINFO_PDB_NATIVE_NATIVELINENUMBER_H10,423
class NativeLineNumber 20,623
  explicit NativeLineNumber(22,680
  uint32_t getLineNumber(28,1000
  uint32_t ColumnNumber;44,1617
  uint32_t Section;45,1642
  uint32_t Offset;46,1662
  uint32_t Length;47,1681
  uint32_t SrcFileId;48,1700
  uint32_t CompilandId;49,1722

/usr/include/llvm/DebugInfo/PDB/Native/NativePublicSymbol.h,197
#define LLVM_DEBUGINFO_PDB_NATIVE_NATIVEPUBLICSYMBOL_H10,425
class NativePublicSymbol 21,662
  NativePublicSymbol(23,722
  ~NativePublicSymbol(26,839
  const codeview::PublicSym32 Sym;38,1256

/usr/include/llvm/DebugInfo/PDB/Native/NativeRawSymbol.h,272
#define LLVM_DEBUGINFO_PDB_NATIVE_NATIVERAWSYMBOL_H10,422
class NativeRawSymbol 21,615
  virtual void initialize(23,690
  NativeRawSymbol(26,730
  void dump(29,833
  NativeSession &Session;Session232,9924
  PDB_SymType Tag;233,9950
  SymIndexId SymbolId;234,9969

/usr/include/llvm/DebugInfo/PDB/Native/NativeSession.h,662
#define LLVM_DEBUGINFO_PDB_NATIVE_NATIVESESSION_H10,420
class NativeSession 32,1001
  struct PdbSearchOptions 33,1044
    StringRef ExePath;34,1072
  NativeSession(39,1178
  ~NativeSession(41,1290
  PDBFile &getPDBFile(getPDBFile109,4654
  const PDBFile &getPDBFile(getPDBFile110,4695
  SymbolCache &getSymbolCache(getSymbolCache113,4798
  const SymbolCache &getSymbolCache(getSymbolCache114,4848
  std::unique_ptr<PDBFile> Pdb;126,5399
  std::unique_ptr<BumpPtrAllocator> Allocator;127,5431
  SymbolCache Cache;129,5479
      IntervalMap<uint64_t, uint16_t,135,5620
  IMap::Allocator IMapAllocator;136,5697
  IMap AddrToModuleIndex;137,5730

/usr/include/llvm/DebugInfo/PDB/Native/NativeSourceFile.h,250
#define LLVM_DEBUGINFO_PDB_NATIVE_NATIVESOURCEFILE_H10,423
class NativeSourceFile 22,763
  explicit NativeSourceFile(24,820
  NativeSession &Session;Session35,1242
  uint32_t FileId;36,1268
  const codeview::FileChecksumEntry Checksum;37,1287

/usr/include/llvm/DebugInfo/PDB/Native/NativeSymbolEnumerator.h,263
#define LLVM_DEBUGINFO_PDB_NATIVE_NATIVESYMBOLENUMERATOR_H10,429
class NativeSymbolEnumerator 24,777
  NativeSymbolEnumerator(26,841
  ~NativeSymbolEnumerator(30,1022
  const NativeTypeEnum &Parent;Parent47,1635
  codeview::EnumeratorRecord Record;48,1667

/usr/include/llvm/DebugInfo/PDB/Native/NativeTypeArray.h,179
#define LLVM_DEBUGINFO_PDB_NATIVE_NATIVETYPEARRAY_H10,422
class NativeTypeArray 22,677
  NativeTypeArray(24,734
  ~NativeTypeArray(26,864
  codeview::TypeIndex Index;43,1364

/usr/include/llvm/DebugInfo/PDB/Native/NativeTypeBuiltin.h,209
#define LLVM_DEBUGINFO_PDB_NATIVE_NATIVETYPEBUILTIN_H10,424
class NativeTypeBuiltin 21,633
  NativeTypeBuiltin(23,692
  ~NativeTypeBuiltin(26,858
  PDB_BuiltinType Type;42,1350
  uint64_t Length;43,1374

/usr/include/llvm/DebugInfo/PDB/Native/NativeTypeEnum.h,383
#define LLVM_DEBUGINFO_PDB_NATIVE_NATIVETYPEENUM_H10,421
class NativeTypeEnum 24,790
  NativeTypeEnum(26,846
  NativeTypeEnum(29,974
  ~NativeTypeEnum(32,1132
  const codeview::EnumRecord &getEnumRecord(getEnumRecord63,2291
  codeview::TypeIndex Index;66,2375
  std::optional<codeview::EnumRecord> Record;67,2404
  std::optional<codeview::ModifierRecord> Modifiers;69,2494

/usr/include/llvm/DebugInfo/PDB/Native/NativeTypeFunctionSig.h,306
#define LLVM_DEBUGINFO_PDB_NATIVE_NATIVETYPEFUNCTIONSIG_H10,428
class NativeTypeFunctionSig 21,759
  void initialize(23,825
    codeview::MemberFunctionRecord MemberFunc;57,1999
    codeview::ProcedureRecord Proc;58,2046
  codeview::TypeIndex Index;62,2120
  codeview::ArgListRecord ArgList;63,2149

/usr/include/llvm/DebugInfo/PDB/Native/NativeTypePointer.h,237
#define LLVM_DEBUGINFO_PDB_NATIVE_NATIVETYPEPOINTER_H10,424
class NativeTypePointer 21,751
  NativeTypePointer(24,858
  NativeTypePointer(28,1015
  ~NativeTypePointer(30,1147
  std::optional<codeview::PointerRecord> Record;54,1991

/usr/include/llvm/DebugInfo/PDB/Native/NativeTypeTypedef.h,185
#define LLVM_DEBUGINFO_PDB_NATIVE_NATIVETYPETYPEDEF_H10,424
class NativeTypeTypedef 25,749
  NativeTypeTypedef(28,860
  ~NativeTypeTypedef(31,967
  codeview::UDTSym Record;40,1229

/usr/include/llvm/DebugInfo/PDB/Native/NativeTypeUDT.h,390
#define LLVM_DEBUGINFO_PDB_NATIVE_NATIVETYPEUDT_H10,420
class NativeTypeUDT 24,784
  NativeTypeUDT(26,839
  NativeTypeUDT(29,965
  NativeTypeUDT(32,1091
  ~NativeTypeUDT(36,1246
  codeview::TypeIndex Index;64,2282
  std::optional<codeview::ClassRecord> Class;66,2312
  std::optional<codeview::UnionRecord> Union;67,2358
  std::optional<codeview::ModifierRecord> Modifiers;70,2485

/usr/include/llvm/DebugInfo/PDB/Native/NativeTypeVTShape.h,198
#define LLVM_DEBUGINFO_PDB_NATIVE_NATIVETYPEVTSHAPE_H10,424
class NativeTypeVTShape 22,772
  NativeTypeVTShape(25,883
  ~NativeTypeVTShape(28,1021
  codeview::VFTableShapeRecord Record;40,1384

/usr/include/llvm/DebugInfo/PDB/Native/PDBFile.h,1179
#define LLVM_DEBUGINFO_PDB_NATIVE_PDBFILE_H10,414
class PDBFile 40,991
  friend PDBFileBuilder;41,1030
  PDBFile(44,1064
  ~PDBFile(46,1175
  ArrayRef<support::ulittle32_t> getStreamSizes(73,2124
  ArrayRef<ArrayRef<support::ulittle32_t>> getStreamMap(76,2226
  const msf::MSFLayout &getMsfLayout(getMsfLayout80,2335
  BinaryStreamRef getMsfBuffer(81,2408
  BumpPtrAllocator &getAllocator(getAllocator108,3432
  std::string FilePath;123,3813
  BumpPtrAllocator &Allocator;Allocator124,3837
  std::unique_ptr<BinaryStream> Buffer;126,3869
  msf::MSFLayout ContainerLayout;128,3910
  std::unique_ptr<GlobalsStream> Globals;130,3945
  std::unique_ptr<InfoStream> Info;131,3987
  std::unique_ptr<DbiStream> Dbi;132,4023
  std::unique_ptr<TpiStream> Tpi;133,4057
  std::unique_ptr<TpiStream> Ipi;134,4091
  std::unique_ptr<PublicsStream> Publics;135,4125
  std::unique_ptr<SymbolStream> Symbols;136,4167
  std::unique_ptr<msf::MappedBlockStream> DirectoryStream;137,4208
  std::unique_ptr<msf::MappedBlockStream> StringTableStream;138,4267
  std::unique_ptr<InjectedSourceStream> InjectedSources;139,4328
  std::unique_ptr<PDBStringTable> Strings;140,4385

/usr/include/llvm/DebugInfo/PDB/Native/PDBFileBuilder.h,1114
#define LLVM_DEBUGINFO_PDB_NATIVE_PDBFILEBUILDER_H10,421
class PDBFileBuilder 39,1106
  explicit PDBFileBuilder(41,1137
  ~PDBFileBuilder(42,1193
  Error initialize(46,1328
  struct InjectedSourceDescriptor 65,2034
    std::string StreamName;69,2251
    uint32_t NameIndex;72,2345
    uint32_t VNameIndex;77,2572
    std::unique_ptr<MemoryBuffer> Content;78,2597
  BumpPtrAllocator &Allocator;Allocator89,2992
  std::unique_ptr<msf::MSFBuilder> Msf;91,3024
  std::unique_ptr<InfoStreamBuilder> Info;92,3064
  std::unique_ptr<DbiStreamBuilder> Dbi;93,3107
  std::unique_ptr<GSIStreamBuilder> Gsi;94,3148
  std::unique_ptr<TpiStreamBuilder> Tpi;95,3189
  std::unique_ptr<TpiStreamBuilder> Ipi;96,3230
  PDBStringTableBuilder Strings;98,3272
  StringTableHashTraits InjectedSourceHashTraits;99,3305
  HashTable<SrcHeaderBlockEntry> InjectedSourceTable;100,3355
  SmallVector<SmallVector102,3410
  SmallVector<InjectedSourceDescriptor, 2> InjectedSources;102,3410
  NamedStreamMap NamedStreams;104,3471
  DenseMap<DenseMap105,3502
  DenseMap<uint32_t, std::string> NamedStreamData;105,3502

/usr/include/llvm/DebugInfo/PDB/Native/PDBStringTable.h,254
#define LLVM_DEBUGINFO_PDB_NATIVE_PDBSTRINGTABLE_H10,421
class PDBStringTable 26,789
  Error reload(28,820
  uint32_t getByteSize(30,865
  codeview::DebugStringTableSubsectionRef Strings;49,1505
  FixedStreamArray<support::ulittle32_t> IDs;50,1556

/usr/include/llvm/DebugInfo/PDB/Native/PDBStringTableBuilder.h,378
#define LLVM_DEBUGINFO_PDB_NATIVE_PDBSTRINGTABLEBUILDER_H14,557
struct StringTableHashTraits 34,945
  PDBStringTableBuilder *Table;Table35,976
  explicit StringTableHashTraits(37,1009
  uint32_t hashLookupKey(38,1073
class PDBStringTableBuilder 43,1227
  uint32_t insert(47,1356
  uint32_t getIdForString(49,1389
  codeview::DebugStringTableSubsection Strings;64,1930

/usr/include/llvm/DebugInfo/PDB/Native/PublicsStream.h,699
#define LLVM_DEBUGINFO_PDB_NATIVE_PUBLICSSTREAM_H10,420
class PublicsStream 24,728
  PublicsStream(26,758
  ~PublicsStream(27,823
  Error reload(28,843
  uint32_t getSymHash(30,862
  FixedStreamArray<support::ulittle32_t> getAddressMap(34,1045
  FixedStreamArray<support::ulittle32_t> getThunkMap(37,1137
  FixedStreamArray<SectionOffset> getSectionOffsets(40,1225
  std::unique_ptr<msf::MappedBlockStream> Stream;45,1328
  GSIHashTable PublicsTable;46,1378
  FixedStreamArray<support::ulittle32_t> AddressMap;47,1407
  FixedStreamArray<support::ulittle32_t> ThunkMap;48,1460
  FixedStreamArray<SectionOffset> SectionOffsets;49,1511
  const PublicsStreamHeader *Header;Header51,1562

/usr/include/llvm/DebugInfo/PDB/Native/RawConstants.h,1941
#define LLVM_DEBUGINFO_PDB_NATIVE_RAWCONSTANTS_H10,419
enum PdbRaw_ImplVer 21,649
  PdbImplVC2 22,682
  PdbImplVC4 23,707
  PdbImplVC41 24,732
  PdbImplVC50 25,758
  PdbImplVC98 26,784
  PdbImplVC70Dep 27,810
  PdbImplVC70 28,853
  PdbImplVC80 29,879
  PdbImplVC110 30,905
  PdbImplVC140 31,932
enum class PdbRaw_SrcHeaderBlockVer 34,963
enum class PdbRaw_SrcHeaderBlockVer : uint32_t { SrcVerOne 34,963
enum class PdbRaw_FeatureSig 36,1037
  VC110 37,1079
  VC140 38,1103
  NoTypeMerge 39,1127
  MinimalDebugInfo 40,1155
enum PdbRaw_Features 43,1192
  PdbFeatureNone 44,1226
  PdbFeatureContainsIdStream 45,1250
  PdbFeatureMinimalDebugInfo 46,1286
  PdbFeatureNoTypeMerging 47,1322
  LLVM_MARK_AS_BITMASK_ENUM(48,1355
  LLVM_MARK_AS_BITMASK_ENUM(/* LargestValue = */ PdbFeatureNoTypeMerging)48,1355
enum PdbRaw_DbiVer 51,1433
  PdbDbiVC41 52,1465
  PdbDbiV50 53,1488
  PdbDbiV60 54,1512
  PdbDbiV70 55,1536
  PdbDbiV110 56,1560
enum PdbRaw_TpiVer 59,1588
  PdbTpiV40 60,1620
  PdbTpiV41 61,1644
  PdbTpiV50 62,1668
  PdbTpiV70 63,1692
  PdbTpiV80 64,1716
enum PdbRaw_DbiSecContribVer 67,1744
  DbiSecContribVer60 68,1786
  DbiSecContribV2 69,1832
enum SpecialStream 72,1878
  OldMSFDirectory 76,2104
  StreamPDB 78,2128
  StreamTPI 79,2145
  StreamDBI 80,2162
  StreamIPI 81,2179
  kSpecialStreamCount83,2197
enum class DbgHeaderType 86,2223
  FPO,87,2261
  Exception,88,2268
  Fixup,89,2281
  OmapToSrc,90,2290
  OmapFromSrc,91,2303
  SectionHdr,92,2318
  TokenRidMap,93,2332
  Xdata,94,2347
  Pdata,95,2356
  NewFPO,96,2365
  SectionHdrOrig,97,2375
  Max98,2393
enum class OMFSegDescFlags 101,2403
  None 102,2443
  Read 103,2455
  Write 104,2509
  Execute 105,2563
  AddressIs32Bit 106,2619
  IsSelector 107,2698
  IsAbsoluteAddress 108,2760
  IsGroup 109,2831
  LLVM_MARK_AS_BITMASK_ENUM(110,2903
  LLVM_MARK_AS_BITMASK_ENUM(/* LargestValue = */ IsGroup)110,2903

/usr/include/llvm/DebugInfo/PDB/Native/RawError.h,690
#define LLVM_DEBUGINFO_PDB_NATIVE_RAWERROR_H10,415
enum class raw_error_code 16,527
  unspecified 17,555
  feature_unsupported,18,574
  invalid_format,19,597
  corrupt_file,20,615
  insufficient_buffer,21,631
  no_stream,22,654
  index_out_of_bounds,23,667
  invalid_block_address,24,690
  duplicate_entry,25,715
  no_entry,26,734
  not_writable,27,746
  stream_too_long,28,762
  invalid_tpi_hash,29,781
namespace llvm 39,966
namespace pdb 40,983
inline std::error_code make_error_code(43,1045
class RawError 48,1237
  using ErrorInfo<ErrorInfo50,1304
  using ErrorInfo<RawError, StringError>::ErrorInfo;ErrorInfo50,1304
  RawError(51,1381
  static char ID;52,1455

/usr/include/llvm/DebugInfo/PDB/Native/RawTypes.h,6044
#define LLVM_DEBUGINFO_PDB_NATIVE_RAWTYPES_H10,415
struct SectionOffset 19,678
  support::ulittle32_t Off;20,701
  support::ulittle16_t Isect;21,729
  char Padding[Padding22,759
struct GSIHashHeader 28,955
  enum : unsigned 29,978
    HdrSignature 30,998
    HdrVersion 31,1022
  support::ulittle32_t VerSignature;33,1067
  support::ulittle32_t VerHdr;34,1104
  support::ulittle32_t HrSize;35,1135
  support::ulittle32_t NumBuckets;36,1166
struct PSHashRecord 40,1224
  support::ulittle32_t Off;41,1246
  support::ulittle32_t CRef;42,1312
struct SectionContrib 46,1402
  support::ulittle16_t ISect;47,1426
  char Padding[Padding48,1456
  support::little32_t Off;49,1475
  support::little32_t Size;50,1502
  support::ulittle32_t Characteristics;51,1530
  support::ulittle16_t Imod;52,1570
  char Padding2[Padding253,1599
  support::ulittle32_t DataCrc;54,1619
  support::ulittle32_t RelocCrc;55,1651
struct SectionContrib2 59,1746
  SectionContrib Base;61,1852
  support::ulittle32_t ISectCoff;62,1875
struct SecMapHeader 66,1963
  support::ulittle16_t SecCount;67,1985
  support::ulittle16_t SecCountLog;68,2063
struct SecMapEntry 74,2330
  support::ulittle16_t Flags;75,2351
  support::ulittle16_t Ovl;76,2423
  support::ulittle16_t Group;77,2480
  support::ulittle16_t Frame;78,2548
  support::ulittle16_t SecName;79,2578
  support::ulittle16_t ClassName;81,2736
  support::ulittle32_t Offset;83,2883
  support::ulittle32_t SecByteLength;87,3182
struct DbiFlags 94,3577
  static const uint16_t FlagIncrementalMask 100,3865
  static const uint16_t FlagStrippedMask 101,3919
  static const uint16_t FlagHasCTypesMask 102,3970
struct DbiBuildNo 105,4026
  static const uint16_t BuildMinorMask 109,4152
  static const uint16_t BuildMinorShift 110,4201
  static const uint16_t BuildMajorMask 112,4247
  static const uint16_t BuildMajorShift 113,4296
  static const uint16_t NewVersionFormatMask 115,4342
struct DbiStreamHeader 119,4476
  support::little32_t VersionSignature;120,4501
  support::ulittle32_t VersionHeader;121,4541
  support::ulittle32_t Age;124,4660
  support::ulittle16_t GlobalSymbolStreamIndex;127,4718
  support::ulittle16_t BuildNumber;130,4799
  support::ulittle16_t PublicSymbolStreamIndex;133,4866
  support::ulittle16_t PdbDllVersion;136,4945
  support::ulittle16_t SymRecordStreamIndex;139,5014
  support::ulittle16_t PdbDllRbld;142,5094
  support::little32_t ModiSubstreamSize;145,5163
  support::little32_t SecContrSubstreamSize;148,5239
  support::little32_t SectionMapSize;151,5318
  support::little32_t FileInfoSize;154,5391
  support::little32_t TypeServerSize;157,5458
  support::ulittle32_t MFCTypeServerIndex;160,5528
  support::little32_t OptionalDbgHdrSize;163,5601
  support::little32_t ECSubstreamSize;166,5682
  support::ulittle16_t Flags;169,5747
  support::ulittle16_t MachineType;172,5810
  support::ulittle32_t Reserved;175,5869
struct FileInfoSubstreamHeader 180,6053
  support::ulittle16_t NumModules;183,6178
  support::ulittle16_t NumSourceFiles;188,6406
struct ModInfoFlags 199,6833
  static const uint16_t HasECFlagMask 204,7119
  static const uint16_t TypeServerIndexMask 206,7165
  static const uint16_t TypeServerIndexShift 207,7219
struct ModuleInfoHeader 212,7424
  support::ulittle32_t Mod;217,7700
  SectionContrib SC;220,7778
  support::ulittle16_t Flags;223,7835
  support::ulittle16_t ModDiStream;226,7907
  support::ulittle32_t SymBytes;229,7998
  support::ulittle32_t C11Bytes;232,8083
  support::ulittle32_t C13Bytes;235,8168
  support::ulittle16_t NumFiles;238,8252
  char Padding1[Padding1241,8337
  support::ulittle32_t FileNameOffs;249,8786
  support::ulittle32_t SrcFileNameNI;252,8859
  support::ulittle32_t PdbFilePathNI;255,8940
struct PublicsStreamHeader 264,9205
  support::ulittle32_t SymHash;265,9234
  support::ulittle32_t AddrMap;266,9266
  support::ulittle32_t NumThunks;267,9298
  support::ulittle32_t SizeOfThunk;268,9332
  support::ulittle16_t ISectThunkTable;269,9368
  char Padding[Padding270,9408
  support::ulittle32_t OffThunkTable;271,9427
  support::ulittle32_t NumSections;272,9465
struct TpiStreamHeader 277,9599
  struct EmbeddedBuf 278,9624
    support::little32_t Off;279,9647
    support::ulittle32_t Length;280,9676
  support::ulittle32_t Version;283,9715
  support::ulittle32_t HeaderSize;284,9747
  support::ulittle32_t TypeIndexBegin;285,9782
  support::ulittle32_t TypeIndexEnd;286,9821
  support::ulittle32_t TypeRecordBytes;287,9858
  support::ulittle16_t HashStreamIndex;290,9968
  support::ulittle16_t HashAuxStreamIndex;291,10008
  support::ulittle32_t HashKeySize;292,10051
  support::ulittle32_t NumHashBuckets;293,10087
  EmbeddedBuf HashValueBuffer;295,10127
  EmbeddedBuf IndexOffsetBuffer;296,10158
  EmbeddedBuf HashAdjBuffer;297,10191
const uint32_t MinTpiHashBuckets 300,10224
const uint32_t MaxTpiHashBuckets 301,10267
struct InfoStreamHeader 304,10370
  support::ulittle32_t Version;305,10396
  support::ulittle32_t Signature;306,10428
  support::ulittle32_t Age;307,10462
  codeview::GUID Guid;308,10490
struct PDBStringTableHeader 312,10561
  support::ulittle32_t Signature;313,10591
  support::ulittle32_t HashVersion;314,10654
  support::ulittle32_t ByteSize;315,10700
const uint32_t PDBStringTableSignature 318,10776
struct SrcHeaderBlockHeader 321,10884
  support::ulittle32_t Version;322,10914
  support::ulittle32_t Size;323,10987
  uint64_t FileTime;324,11045
  support::ulittle32_t Age;325,11118
  uint8_t Padding[Padding326,11157
struct SrcHeaderBlockEntry 331,11357
  support::ulittle32_t Size;332,11386
  support::ulittle32_t Version;333,11437
  support::ulittle32_t CRC;334,11511
  support::ulittle32_t FileSize;335,11582
  support::ulittle32_t FileNI;336,11648
  support::ulittle32_t ObjNI;337,11717
  support::ulittle32_t VFileNI;338,11788
  uint8_t Compression;339,11865
  uint8_t IsVirtual;340,11936
  short Padding;341,12007
  char Reserved[Reserved342,12059

/usr/include/llvm/DebugInfo/PDB/Native/SymbolCache.h,1773
#define LLVM_DEBUGINFO_PDB_NATIVE_SYMBOLCACHE_H10,418
class SymbolCache 37,1152
  NativeSession &Session;Session38,1172
  mutable std::vector<std::unique_ptr<NativeRawSymbol>> Cache;46,1539
  mutable DenseMap<DenseMap50,1740
  mutable DenseMap<codeview::TypeIndex, SymIndexId> TypeIndexToSymbolId;50,1740
  mutable DenseMap<DenseMap55,1994
      FieldListMembersToSymbolId;56,2067
  mutable std::vector<SymIndexId> Compilands;60,2213
  mutable std::vector<std::unique_ptr<NativeSourceFile>> SourceFiles;63,2325
  mutable DenseMap<DenseMap66,2450
  mutable DenseMap<uint32_t, SymIndexId> FileNameOffsetToId;66,2450
  mutable DenseMap<DenseMap69,2563
  mutable DenseMap<uint32_t, SymIndexId> GlobalOffsetToSymbolId;69,2563
  mutable DenseMap<DenseMap72,2689
  mutable DenseMap<std::pair<uint32_t, uint32_t>, SymIndexId> AddressToSymbolId;72,2689
  mutable DenseMap<DenseMap74,2828
      AddressToPublicSymId;75,2890
  mutable DenseMap<DenseMap78,2986
      SymTabOffsetToSymbolId;79,3048
  struct LineTableEntry 81,3079
    uint64_t Addr;82,3105
    codeview::LineInfo Line;83,3124
    uint32_t ColumnNumber;84,3153
    uint32_t FileNameIndex;85,3180
    bool IsTerminalEntry;86,3208
  mutable DenseMap<DenseMap90,3306
  mutable DenseMap<uint16_t, std::vector<LineTableEntry>> LineTable;90,3306
  SymIndexId createSymbolPlaceholder(92,3376
  template <typename ConcreteSymbolT,98,3507
  template <typename ConcreteSymbolT, typename CVRecordT,98,3507
  SymIndexId createSymbolForType(99,3583
  template <typename ConcreteSymbolT,126,4663
  SymIndexId createSymbol(127,4719
  template <typename ConcreteSymbolT,156,5682
  SymIndexId getOrCreateFieldListMember(157,5738
  ConcreteT &getNativeSymbolById(getNativeSymbolById190,7061

/usr/include/llvm/DebugInfo/PDB/Native/SymbolStream.h,331
#define LLVM_DEBUGINFO_PDB_NATIVE_SYMBOLSTREAM_H10,419
class SymbolStream 22,626
  SymbolStream(24,655
  ~SymbolStream(25,719
  Error reload(26,738
  const codeview::CVSymbolArray &getSymbolArray(getSymbolArray28,757
  codeview::CVSymbolArray SymbolRecords;40,1020
  std::unique_ptr<msf::MappedBlockStream> Stream;41,1061

/usr/include/llvm/DebugInfo/PDB/Native/TpiHashing.h,427
#define LLVM_DEBUGINFO_PDB_NATIVE_TPIHASHING_H10,417
struct TagRecordHash 20,652
  explicit TagRecordHash(21,675
  explicit TagRecordHash(27,883
  explicit TagRecordHash(33,1089
  uint32_t FullRecordHash;39,1297
  uint32_t ForwardDeclHash;40,1324
  codeview::TagRecord &getRecord(getRecord42,1353
    codeview::ClassRecord Class;56,1574
    codeview::EnumRecord Enum;57,1607
    codeview::UnionRecord Union;58,1638

/usr/include/llvm/DebugInfo/PDB/Native/TpiStream.h,926
#define LLVM_DEBUGINFO_PDB_NATIVE_TPISTREAM_H10,416
class TpiStream 34,962
  TpiStream(38,1022
  ~TpiStream(39,1098
  Error reload(40,1114
  PdbRaw_TpiVer getTpiVersion(42,1133
  const codeview::CVTypeArray &typeArray(typeArray57,1690
  codeview::LazyRandomTypeCollection &typeCollection(typeCollection59,1764
  PDBFile &Pdb;Pdb77,2217
  std::unique_ptr<msf::MappedBlockStream> Stream;78,2233
  std::unique_ptr<codeview::LazyRandomTypeCollection> Types;80,2284
  BinarySubstreamRef TypeRecordsSubstream;82,2346
  codeview::CVTypeArray TypeRecords;84,2390
  std::unique_ptr<BinaryStream> HashStream;86,2428
  FixedStreamArray<support::ulittle32_t> HashValues;87,2472
  FixedStreamArray<codeview::TypeIndexOffset> TypeIndexOffsets;88,2525
  HashTable<support::ulittle32_t> HashAdjusters;89,2589
  std::vector<std::vector<codeview::TypeIndex>> HashMap;91,2639
  const TpiStreamHeader *Header;Header93,2697

/usr/include/llvm/DebugInfo/PDB/Native/TpiStreamBuilder.h,559
#define LLVM_DEBUGINFO_PDB_NATIVE_TPISTREAMBUILDER_H10,423
namespace msf 32,1079
namespace pdb 36,1133
class TpiStreamBuilder 39,1174
  uint32_t getRecordCount(54,1702
  msf::MSFBuilder &Msf;Msf67,2062
  BumpPtrAllocator &Allocator;Allocator68,2086
  std::vector<ArrayRef<uint8_t>> TypeRecBuffers;74,2235
  std::vector<uint32_t> TypeHashes;75,2284
  std::vector<codeview::TypeIndexOffset> TypeIndexOffsets;76,2320
  std::unique_ptr<BinaryByteStream> HashValueStream;78,2429
  const TpiStreamHeader *Header;Header80,2483
  uint32_t Idx;81,2516

/usr/include/llvm/DebugInfo/PDB/Native/FormatUtil.h,382
#define LLVM_DEBUGINFO_PDB_NATIVE_FORMATUTIL_H10,417
#define PUSH_MASKED_FLAG(26,805
#define PUSH_FLAG(30,994
#define RETURN_CASE(33,1136
enum class CharacteristicStyle 43,1519
  HeaderDefinition,44,1552
  Descriptive,45,1611
inline int NumDigits(64,2408
namespace detail 106,3229
    : public FormatAdapter<FormatAdapter109,3297
detail::EndianAdapter<T> fmtle(124,3859

/usr/include/llvm/DebugInfo/PDB/ConcreteSymbolEnumerator.h,345
#define LLVM_DEBUGINFO_PDB_CONCRETESYMBOLENUMERATOR_H10,424
class ConcreteSymbolEnumerator 23,726
  ConcreteSymbolEnumerator(25,804
  uint32_t getChildCount(30,985
  std::unique_ptr<ChildType> getChildAtIndex(34,1074
  std::unique_ptr<ChildType> getNext(39,1286
  void reset(43,1411
  std::unique_ptr<IPDBEnumSymbols> Enumerator;47,1471

/usr/include/llvm/DebugInfo/PDB/GenericError.h,520
#define LLVM_DEBUGINFO_PDB_GENERICERROR_H10,412
enum class pdb_error_code 17,522
  invalid_utf8_path 18,550
  dia_sdk_not_present,19,575
  dia_failed_loading,20,598
  signature_out_of_date,21,620
  no_matching_pch,22,645
  unspecified,23,664
namespace llvm 33,844
namespace pdb 34,861
inline std::error_code make_error_code(37,923
class PDBError 42,1115
  using ErrorInfo<ErrorInfo44,1182
  using ErrorInfo<PDBError, StringError>::ErrorInfo;ErrorInfo44,1182
  PDBError(45,1259
  static char ID;46,1333

/usr/include/llvm/DebugInfo/PDB/IPDBDataStream.h,156
#define LLVM_DEBUGINFO_PDB_IPDBDATASTREAM_H10,414
class IPDBDataStream 23,757
  virtual ~IPDBDataStream(27,836
  virtual uint32_t getRecordCount(29,866

/usr/include/llvm/DebugInfo/PDB/IPDBEnumChildren.h,300
#define LLVM_DEBUGINFO_PDB_IPDBENUMCHILDREN_H10,416
template <typename ChildType> class IPDBEnumChildren 20,616
class NullEnumerator 34,1031
  uint32_t getChildCount(35,1091
  std::unique_ptr<ChildType> getChildAtIndex(36,1147
  std::unique_ptr<ChildType> getNext(39,1249
  void reset(40,1317

/usr/include/llvm/DebugInfo/PDB/IPDBFrameData.h,155
#define LLVM_DEBUGINFO_PDB_IPDBFRAMEDATA_H10,413
class IPDBFrameData 20,623
  virtual ~IPDBFrameData(22,653
  virtual uint32_t getAddressOffset(24,682

/usr/include/llvm/DebugInfo/PDB/IPDBInjectedSource.h,162
#define LLVM_DEBUGINFO_PDB_IPDBINJECTEDSOURCE_H10,418
class IPDBInjectedSource 21,820
  virtual ~IPDBInjectedSource(23,855
  virtual uint32_t getCrc32(25,889

/usr/include/llvm/DebugInfo/PDB/IPDBLineNumber.h,155
#define LLVM_DEBUGINFO_PDB_IPDBLINENUMBER_H10,414
class IPDBLineNumber 16,512
  virtual ~IPDBLineNumber(18,543
  virtual uint32_t getLineNumber(20,573

/usr/include/llvm/DebugInfo/PDB/IPDBRawSymbol.h,348
#define LLVM_DEBUGINFO_PDB_IPDBRAWSYMBOL_H10,413
enum class PdbSymbolIdField 24,683
  None 25,724
  SymIndexId 26,736
  LexicalParent 27,759
  ClassParent 28,785
  Type 29,809
  UnmodifiedType 30,826
  All 31,853
  LLVM_MARK_AS_BITMASK_ENUM(32,873
  LLVM_MARK_AS_BITMASK_ENUM(/* LargestValue = */ All)32,873
class IPDBRawSymbol 45,1587

/usr/include/llvm/DebugInfo/PDB/IPDBSectionContrib.h,126
#define LLVM_DEBUGINFO_PDB_IPDBSECTIONCONTRIB_H10,418
class IPDBSectionContrib 19,653
  virtual ~IPDBSectionContrib(21,688

/usr/include/llvm/DebugInfo/PDB/IPDBSession.h,199
#define LLVM_DEBUGINFO_PDB_IPDBSESSION_H10,411
class IPDBSession 25,808
  virtual ~IPDBSession(27,836
  virtual uint64_t getLoadAddress(29,863
  std::unique_ptr<T> getConcreteSymbolById(41,1373

/usr/include/llvm/DebugInfo/PDB/IPDBSourceFile.h,134
#define LLVM_DEBUGINFO_PDB_IPDBSOURCEFILE_H10,414
class IPDBSourceFile 23,688
  virtual ~IPDBSourceFile(25,719
  void dump(27,749

/usr/include/llvm/DebugInfo/PDB/IPDBTable.h,99
#define LLVM_DEBUGINFO_PDB_IPDBTABLE_H10,409
class IPDBTable 16,505
  virtual ~IPDBTable(18,531

/usr/include/llvm/DebugInfo/PDB/PDB.h,40
#define LLVM_DEBUGINFO_PDB_PDB_H10,403

/usr/include/llvm/DebugInfo/PDB/PDBContext.h,205
#define LLVM_DEBUGINFO_PDB_PDBCONTEXT_H10,409
  class PDBContext 32,1079
    PDBContext(34,1129
    static bool classof(39,1329
    void dump(43,1427
    std::unique_ptr<IPDBSession> Session;62,2260

/usr/include/llvm/DebugInfo/PDB/PDBExtras.h,46
#define LLVM_DEBUGINFO_PDB_PDBEXTRAS_H10,409

/usr/include/llvm/DebugInfo/PDB/PDBSymDumper.h,1561
#define LLVM_DEBUGINFO_PDB_PDBSYMDUMPER_H10,412
class PDBSymDumper 19,532
  PDBSymDumper(21,561
  virtual ~PDBSymDumper(22,601
  virtual void dump(24,629
  virtual void dump(25,685
  virtual void dump(26,736
  virtual void dump(27,791
  virtual void dump(28,853
  virtual void dump(29,911
  virtual void dump(30,963
  virtual void dump(31,1013
  virtual void dump(32,1062
  virtual void dump(33,1112
  virtual void dump(34,1170
  virtual void dump(35,1230
  virtual void dump(36,1281
  virtual void dump(37,1339
  virtual void dump(38,1390
  virtual void dump(39,1445
  virtual void dump(40,1504
  virtual void dump(41,1561
  virtual void dump(42,1617
  virtual void dump(43,1676
  virtual void dump(44,1730
  virtual void dump(45,1786
  virtual void dump(46,1847
  virtual void dump(47,1908
  virtual void dump(48,1965
  virtual void dump(49,2022
  virtual void dump(50,2079
  virtual void dump(51,2132
  virtual void dump(52,2188
  virtual void dump(53,2249
  virtual void dump(54,2302
  virtual void dumpRight(56,2363
  virtual void dumpRight(57,2425
  virtual void dumpRight(58,2491
  virtual void dumpRight(59,2555
  virtual void dumpRight(60,2618
  virtual void dumpRight(61,2684
  virtual void dumpRight(62,2745
  virtual void dumpRight(63,2808
  virtual void dumpRight(64,2876
  virtual void dumpRight(65,2944
  virtual void dumpRight(66,3008
  virtual void dumpRight(67,3072
  virtual void dumpRight(68,3136
  virtual void dumpRight(69,3196
  virtual void dumpRight(70,3259
  bool RequireImpl;73,3337

/usr/include/llvm/DebugInfo/PDB/PDBSymbol.h,949
#define LLVM_DEBUGINFO_PDB_PDBSYMBOL_H10,409
#define FORWARD_SYMBOL_METHOD(17,556
#define FORWARD_CONCRETE_SYMBOL_ID_METHOD_WITH_NAME(20,710
#define FORWARD_SYMBOL_ID_METHOD_WITH_NAME(30,1363
#define FORWARD_SYMBOL_ID_METHOD(34,1584
#define DECLARE_PDB_SYMBOL_CONCRETE_TYPE(48,1917
#define DECLARE_PDB_SYMBOL_CUSTOM_TYPE(57,2561
class PDBSymbol 71,3539
  createAs(88,4151
  static std::unique_ptr<ConcreteT> createAs(94,4422
  virtual void dumpRight(110,5199
  template <typename T> std::unique_ptr<T> findOneChild(120,5520
  std::unique_ptr<ConcreteSymbolEnumerator<T>> findAllChildren(128,5735
  const IPDBRawSymbol &getRawSymbol(getRawSymbol153,6936
  IPDBRawSymbol &getRawSymbol(getRawSymbol154,7003
  const IPDBSession &getSession(getSession156,7059
  std::unique_ptr<ConcreteType> getConcreteSymbolByIdHelper(164,7310
  const IPDBSession &Session;Session168,7471
  std::unique_ptr<IPDBRawSymbol> OwnedRawSymbol;169,7501

/usr/include/llvm/DebugInfo/PDB/PDBSymbolAnnotation.h,132
#define LLVM_DEBUGINFO_PDB_PDBSYMBOLANNOTATION_H9,418
class PDBSymbolAnnotation 18,549
  DECLARE_PDB_SYMBOL_CONCRETE_TYPE(19,596

/usr/include/llvm/DebugInfo/PDB/PDBSymbolBlock.h,122
#define LLVM_DEBUGINFO_PDB_PDBSYMBOLBLOCK_H9,413
class PDBSymbolBlock 18,539
  DECLARE_PDB_SYMBOL_CONCRETE_TYPE(19,581

/usr/include/llvm/DebugInfo/PDB/PDBSymbolCompiland.h,130
#define LLVM_DEBUGINFO_PDB_PDBSYMBOLCOMPILAND_H9,417
class PDBSymbolCompiland 21,585
  DECLARE_PDB_SYMBOL_CONCRETE_TYPE(22,631

/usr/include/llvm/DebugInfo/PDB/PDBSymbolCompilandDetails.h,210
#define LLVM_DEBUGINFO_PDB_PDBSYMBOLCOMPILANDDETAILS_H10,425
class PDBSymbolCompilandDetails 19,562
  DECLARE_PDB_SYMBOL_CONCRETE_TYPE(20,615
  void getBackEndVersion(28,845
  FORWARD_SYMBOL_METHOD(32,948

/usr/include/llvm/DebugInfo/PDB/PDBSymbolCompilandEnv.h,137
#define LLVM_DEBUGINFO_PDB_PDBSYMBOLCOMPILANDENV_H10,421
class PDBSymbolCompilandEnv 18,553
  DECLARE_PDB_SYMBOL_CONCRETE_TYPE(19,602

/usr/include/llvm/DebugInfo/PDB/PDBSymbolCustom.h,125
#define LLVM_DEBUGINFO_PDB_PDBSYMBOLCUSTOM_H10,415
class PDBSymbolCustom 22,759
  DECLARE_PDB_SYMBOL_CONCRETE_TYPE(23,802

/usr/include/llvm/DebugInfo/PDB/PDBSymbolData.h,121
#define LLVM_DEBUGINFO_PDB_PDBSYMBOLDATA_H10,413
class PDBSymbolData 22,605
  DECLARE_PDB_SYMBOL_CONCRETE_TYPE(23,646

/usr/include/llvm/DebugInfo/PDB/PDBSymbolExe.h,119
#define LLVM_DEBUGINFO_PDB_PDBSYMBOLEXE_H10,411
class PDBSymbolExe 21,555
  DECLARE_PDB_SYMBOL_CONCRETE_TYPE(22,595

/usr/include/llvm/DebugInfo/PDB/PDBSymbolFunc.h,121
#define LLVM_DEBUGINFO_PDB_PDBSYMBOLFUNC_H10,413
class PDBSymbolFunc 26,713
  DECLARE_PDB_SYMBOL_CONCRETE_TYPE(27,754

/usr/include/llvm/DebugInfo/PDB/PDBSymbolFuncDebugEnd.h,137
#define LLVM_DEBUGINFO_PDB_PDBSYMBOLFUNCDEBUGEND_H10,421
class PDBSymbolFuncDebugEnd 19,554
  DECLARE_PDB_SYMBOL_CONCRETE_TYPE(20,603

/usr/include/llvm/DebugInfo/PDB/PDBSymbolFuncDebugStart.h,141
#define LLVM_DEBUGINFO_PDB_PDBSYMBOLFUNCDEBUGSTART_H10,423
class PDBSymbolFuncDebugStart 19,558
  DECLARE_PDB_SYMBOL_CONCRETE_TYPE(20,609

/usr/include/llvm/DebugInfo/PDB/PDBSymbolLabel.h,123
#define LLVM_DEBUGINFO_PDB_PDBSYMBOLLABEL_H10,414
class PDBSymbolLabel 19,540
  DECLARE_PDB_SYMBOL_CONCRETE_TYPE(20,582

/usr/include/llvm/DebugInfo/PDB/PDBSymbolPublicSymbol.h,137
#define LLVM_DEBUGINFO_PDB_PDBSYMBOLPUBLICSYMBOL_H10,421
class PDBSymbolPublicSymbol 19,554
  DECLARE_PDB_SYMBOL_CONCRETE_TYPE(20,603

/usr/include/llvm/DebugInfo/PDB/PDBSymbolThunk.h,123
#define LLVM_DEBUGINFO_PDB_PDBSYMBOLTHUNK_H10,414
class PDBSymbolThunk 19,540
  DECLARE_PDB_SYMBOL_CONCRETE_TYPE(20,582

/usr/include/llvm/DebugInfo/PDB/PDBSymbolTypeArray.h,131
#define LLVM_DEBUGINFO_PDB_PDBSYMBOLTYPEARRAY_H10,418
class PDBSymbolTypeArray 19,548
  DECLARE_PDB_SYMBOL_CONCRETE_TYPE(20,594

/usr/include/llvm/DebugInfo/PDB/PDBSymbolTypeBaseClass.h,139
#define LLVM_DEBUGINFO_PDB_PDBSYMBOLTYPEBASECLASS_H10,422
class PDBSymbolTypeBaseClass 23,624
  DECLARE_PDB_SYMBOL_CONCRETE_TYPE(24,674

/usr/include/llvm/DebugInfo/PDB/PDBSymbolTypeBuiltin.h,135
#define LLVM_DEBUGINFO_PDB_PDBSYMBOLTYPEBUILTIN_H10,420
class PDBSymbolTypeBuiltin 19,552
  DECLARE_PDB_SYMBOL_CONCRETE_TYPE(20,600

/usr/include/llvm/DebugInfo/PDB/PDBSymbolTypeCustom.h,133
#define LLVM_DEBUGINFO_PDB_PDBSYMBOLTYPECUSTOM_H10,419
class PDBSymbolTypeCustom 19,550
  DECLARE_PDB_SYMBOL_CONCRETE_TYPE(20,597

/usr/include/llvm/DebugInfo/PDB/PDBSymbolTypeDimension.h,139
#define LLVM_DEBUGINFO_PDB_PDBSYMBOLTYPEDIMENSION_H10,422
class PDBSymbolTypeDimension 19,556
  DECLARE_PDB_SYMBOL_CONCRETE_TYPE(20,606

/usr/include/llvm/DebugInfo/PDB/PDBSymbolTypeEnum.h,129
#define LLVM_DEBUGINFO_PDB_PDBSYMBOLTYPEENUM_H10,417
class PDBSymbolTypeEnum 24,642
  DECLARE_PDB_SYMBOL_CONCRETE_TYPE(25,687

/usr/include/llvm/DebugInfo/PDB/PDBSymbolTypeFriend.h,133
#define LLVM_DEBUGINFO_PDB_PDBSYMBOLTYPEFRIEND_H10,419
class PDBSymbolTypeFriend 19,550
  DECLARE_PDB_SYMBOL_CONCRETE_TYPE(20,597

/usr/include/llvm/DebugInfo/PDB/PDBSymbolTypeFunctionArg.h,143
#define LLVM_DEBUGINFO_PDB_PDBSYMBOLTYPEFUNCTIONARG_H10,424
class PDBSymbolTypeFunctionArg 19,560
  DECLARE_PDB_SYMBOL_CONCRETE_TYPE(20,612

/usr/include/llvm/DebugInfo/PDB/PDBSymbolTypeFunctionSig.h,143
#define LLVM_DEBUGINFO_PDB_PDBSYMBOLTYPEFUNCTIONSIG_H10,424
class PDBSymbolTypeFunctionSig 20,579
  DECLARE_PDB_SYMBOL_CONCRETE_TYPE(21,631

/usr/include/llvm/DebugInfo/PDB/PDBSymbolTypeManaged.h,135
#define LLVM_DEBUGINFO_PDB_PDBSYMBOLTYPEMANAGED_H10,420
class PDBSymbolTypeManaged 19,552
  DECLARE_PDB_SYMBOL_CONCRETE_TYPE(20,600

/usr/include/llvm/DebugInfo/PDB/PDBSymbolTypePointer.h,135
#define LLVM_DEBUGINFO_PDB_PDBSYMBOLTYPEPOINTER_H10,420
class PDBSymbolTypePointer 19,552
  DECLARE_PDB_SYMBOL_CONCRETE_TYPE(20,600

/usr/include/llvm/DebugInfo/PDB/PDBSymbolTypeTypedef.h,135
#define LLVM_DEBUGINFO_PDB_PDBSYMBOLTYPETYPEDEF_H10,420
class PDBSymbolTypeTypedef 19,552
  DECLARE_PDB_SYMBOL_CONCRETE_TYPE(20,600

/usr/include/llvm/DebugInfo/PDB/PDBSymbolTypeUDT.h,127
#define LLVM_DEBUGINFO_PDB_PDBSYMBOLTYPEUDT_H10,416
class PDBSymbolTypeUDT 23,612
  DECLARE_PDB_SYMBOL_CONCRETE_TYPE(24,656

/usr/include/llvm/DebugInfo/PDB/PDBSymbolTypeVTable.h,133
#define LLVM_DEBUGINFO_PDB_PDBSYMBOLTYPEVTABLE_H10,419
class PDBSymbolTypeVTable 19,550
  DECLARE_PDB_SYMBOL_CONCRETE_TYPE(20,597

/usr/include/llvm/DebugInfo/PDB/PDBSymbolTypeVTableShape.h,143
#define LLVM_DEBUGINFO_PDB_PDBSYMBOLTYPEVTABLESHAPE_H10,424
class PDBSymbolTypeVTableShape 19,560
  DECLARE_PDB_SYMBOL_CONCRETE_TYPE(20,612

/usr/include/llvm/DebugInfo/PDB/PDBSymbolUnknown.h,125
#define LLVM_DEBUGINFO_PDB_PDBSYMBOLUNKNOWN_H10,416
class PDBSymbolUnknown 18,522
  DECLARE_PDB_SYMBOL_CUSTOM_TYPE(19,566

/usr/include/llvm/DebugInfo/PDB/PDBSymbolUsingNamespace.h,141
#define LLVM_DEBUGINFO_PDB_PDBSYMBOLUSINGNAMESPACE_H10,423
class PDBSymbolUsingNamespace 19,558
  DECLARE_PDB_SYMBOL_CONCRETE_TYPE(20,609

/usr/include/llvm/DebugInfo/PDB/PDBTypes.h,6869
#define LLVM_DEBUGINFO_PDB_PDBTYPES_H10,408
typedef uint32_t SymIndexId;26,798
enum class PDB_ReaderType 80,2499
  DIA 81,2527
  Native 82,2538
enum class PDB_TableType 86,2628
  TableInvalid 87,2655
  Symbols,88,2675
  SourceFiles,89,2686
  LineNumbers,90,2701
  SectionContribs,91,2716
  Segments,92,2735
  InjectedSources,93,2747
  FrameData,94,2766
  InputAssemblyFiles,95,2779
  Dbg96,2801
enum PDB_NameSearchFlags 102,3009
  NS_Default 103,3036
  NS_CaseSensitive 104,3056
  NS_CaseInsensitive 105,3082
  NS_FileNameExtMatch 106,3110
  NS_Regex 107,3139
  NS_UndecoratedName 108,3157
  NS_CaseInFileNameExt 111,3220
  NS_CaseRegex 112,3287
  NS_CaseInRex 113,3333
enum class PDB_Checksum 119,3606
enum class PDB_Checksum { None 119,3606
enum class PDB_Checksum { None = 0, MD5 119,3606
enum class PDB_Checksum { None = 0, MD5 = 1, SHA1 119,3606
enum class PDB_Checksum { None = 0, MD5 = 1, SHA1 = 2, SHA256 119,3606
using PDB_Cpu 123,3822
enum class PDB_Machine 125,3858
  Invalid 126,3883
  Unknown 127,3903
  Am33 128,3920
  Amd64 129,3935
  Arm 130,3953
  Arm64 131,3968
  ArmNT 132,3986
  Ebc 133,4003
  x86 134,4018
  Ia64 135,4033
  M32R 136,4049
  Mips16 137,4066
  MipsFpu 138,4084
  MipsFpu16 139,4103
  PowerPC 140,4124
  PowerPCFP 141,4143
  R4000 142,4164
  SH3 143,4181
  SH3DSP 144,4196
  SH4 145,4214
  SH5 146,4229
  Thumb 147,4244
  WceMipsV2 148,4261
struct PDB_SourceCompression 154,4471
  enum : uint32_t 155,4502
    None,157,4593
    RunLengthEncoded,159,4640
    Huffman,161,4699
    LZ,163,4749
    DotNet 212,6876
using PDB_CallingConv 220,7159
using PDB_Lang 224,7357
enum class PDB_DataKind 228,7542
  Unknown,229,7568
  Local,230,7579
  StaticLocal,231,7588
  Param,232,7603
  ObjectPtr,233,7612
  FileStatic,234,7625
  Global,235,7639
  Member,236,7649
  StaticMember,237,7659
  Constant238,7675
enum class PDB_SymType 243,7833
  None,244,7858
  Exe,245,7866
  Compiland,246,7873
  CompilandDetails,247,7886
  CompilandEnv,248,7906
  Function,249,7922
  Block,250,7934
  Data,251,7943
  Annotation,252,7951
  Label,253,7965
  PublicSymbol,254,7974
  UDT,255,7990
  Enum,256,7997
  FunctionSig,257,8005
  PointerType,258,8020
  ArrayType,259,8035
  BuiltinType,260,8048
  Typedef,261,8063
  BaseClass,262,8074
  Friend,263,8087
  FunctionArg,264,8097
  FuncDebugStart,265,8112
  FuncDebugEnd,266,8130
  UsingNamespace,267,8146
  VTableShape,268,8164
  VTable,269,8179
  Custom,270,8189
  Thunk,271,8199
  CustomType,272,8208
  ManagedType,273,8222
  Dimension,274,8237
  CallSite,275,8250
  InlineSite,276,8262
  BaseInterface,277,8276
  VectorType,278,8293
  MatrixType,279,8307
  HLSLType,280,8321
  Caller,281,8333
  Callee,282,8343
  Export,283,8353
  HeapAllocationSite,284,8363
  CoffGroup,285,8385
  Inlinee,286,8398
  Max287,8409
enum class PDB_LocType 292,8564
  Null,293,8589
  Static,294,8597
  TLS,295,8607
  RegRel,296,8614
  ThisRel,297,8624
  Enregistered,298,8635
  BitField,299,8651
  Slot,300,8663
  IlRel,301,8671
  MetaData,302,8680
  Constant,303,8692
  RegRelAliasIndir,304,8704
  Max305,8724
enum class PDB_UdtType 310,8874
enum class PDB_UdtType { Struct,310,8874
enum class PDB_UdtType { Struct, Class,310,8874
enum class PDB_UdtType { Struct, Class, Union,310,8874
enum class PDB_UdtType { Struct, Class, Union, Interface 310,8874
enum class PDB_StackFrameType 314,9087
  FPO,315,9130
  KernelTrap,316,9137
  KernelTSS,317,9151
  EBP,318,9164
  FrameData,319,9171
  Unknown 320,9184
enum class PDB_MemoryType 325,9355
  Code,326,9394
  Data,327,9402
  Stack,328,9410
  HeapCode,329,9419
  Any 330,9431
enum class PDB_BuiltinType 335,9592
  None 336,9621
  Void 337,9633
  Char 338,9645
  WCharT 339,9657
  Int 340,9671
  UInt 341,9682
  Float 342,9694
  BCD 343,9707
  Bool 344,9718
  Long 345,9731
  ULong 346,9744
  Currency 347,9758
  Date 348,9775
  Variant 349,9788
  Complex 350,9804
  Bitfield 351,9820
  BSTR 352,9837
  HResult 353,9850
  Char16 354,9866
  Char32 355,9881
  Char8 356,9896
enum PDB_UndnameFlags 362,10135
  Undname_Complete 363,10170
  Undname_NoLeadingUnderscores 364,10196
  Undname_NoMsKeywords 365,10234
  Undname_NoFuncReturns 366,10264
  Undname_NoAllocModel 367,10295
  Undname_NoAllocLang 368,10325
  Undname_Reserved1 369,10355
  Undname_Reserved2 370,10383
  Undname_NoThisType 371,10411
  Undname_NoAccessSpec 372,10440
  Undname_NoThrowSig 373,10471
  Undname_NoMemberType 374,10501
  Undname_NoReturnUDTModel 375,10533
  Undname_32BitDecode 376,10569
  Undname_NameOnly 377,10600
  Undname_TypeOnly 378,10629
  Undname_HaveParams 379,10658
  Undname_NoECSU 380,10689
  Undname_NoIdentCharCheck 381,10716
  Undname_NoPTR64 382,10754
enum class PDB_MemberAccess 385,10786
enum class PDB_MemberAccess { Private 385,10786
enum class PDB_MemberAccess { Private = 1, Protected 385,10786
enum class PDB_MemberAccess { Private = 1, Protected = 2, Public 385,10786
struct VersionInfo 387,10859
  uint32_t Major;388,10880
  uint32_t Minor;389,10898
  uint32_t Build;390,10916
  uint32_t QFE;391,10934
enum PDB_VariantType 394,10954
  Empty,395,10977
  Unknown,396,10986
  Int8,397,10997
  Int16,398,11005
  Int32,399,11014
  Int64,400,11023
  Single,401,11032
  Double,402,11042
  UInt8,403,11052
  UInt16,404,11061
  UInt32,405,11071
  UInt64,406,11081
  Bool,407,11091
  String408,11099
struct Variant 411,11112
  explicit Variant(414,11153
  explicit Variant(415,11230
  explicit Variant(416,11309
  explicit Variant(419,11397
  explicit Variant(422,11485
  explicit Variant(425,11573
  explicit Variant(428,11661
  explicit Variant(431,11750
  explicit Variant(434,11838
  explicit Variant(437,11929
  explicit Variant(440,12020
  Variant(444,12112
  ~Variant(448,12170
  PDB_VariantType Type 453,12260
    bool Bool;455,12319
    int8_t Int8;456,12334
    int16_t Int16;457,12351
    int32_t Int32;458,12370
    int64_t Int64;459,12389
    float Single;460,12408
    double Double;461,12426
    uint8_t UInt8;462,12445
    uint16_t UInt16;463,12464
    uint32_t UInt32;464,12485
    uint64_t UInt64;465,12506
    char *String;String466,12527
  } Value;467,12545
  bool isIntegralType(469,12557
#define VARIANT_WIDTH(486,12817
  unsigned getBitWidth(490,13000
#undef VARIANT_WIDTH509,13517
#define VARIANT_APSINT(511,13539
  APSInt toAPSInt(515,13761
#undef VARIANT_APSINT532,14281
  APFloat toAPFloat(534,14304
#define VARIANT_EQUAL_CASE(551,14835
  bool operator==(operator==555,15041
#undef VARIANT_EQUAL_CASE576,15588
  bool operator!=(operator!=578,15615
  Variant &operator=(operator=579,15691
namespace std 598,16181
template <> struct hash<hash600,16198
  result_type operator()(operator()604,16332

/usr/include/llvm/DebugInfo/PDB/UDTLayout.h,2368
#define LLVM_DEBUGINFO_PDB_UDTLAYOUT_H10,409
class LayoutItemBase 33,1013
  LayoutItemBase(35,1044
  uint32_t deepPaddingSize(40,1270
  virtual uint32_t tailPadding(42,1364
  StringRef getName(45,1465
  uint32_t getOffsetInParent(46,1510
  uint32_t getSize(47,1574
  uint32_t getLayoutSize(48,1620
  const PDBSymbol *getSymbol(getSymbol49,1676
  const BitVector &usedBytes(usedBytes50,1732
  bool isElided(51,1791
  virtual bool isVBPtr(52,1836
  uint32_t containsOffset(54,1886
  BitVector UsedBytes;63,2148
  std::string Name;64,2171
class VBPtrLayoutItem 71,2301
  bool isVBPtr(77,2517
  std::unique_ptr<PDBSymbolTypeBuiltin> Type;80,2576
class DataMemberLayoutItem 83,2626
  std::unique_ptr<PDBSymbolData> DataMember;93,2929
  std::unique_ptr<ClassLayout> UdtLayout;94,2974
class VTableLayoutItem 97,3020
  uint32_t getElementSize(102,3191
  uint32_t ElementSize 105,3259
  std::unique_ptr<PDBSymbolTypeVTable> VTable;106,3287
class UDTLayoutBase 109,3338
  template <typename T> using UniquePtrVector 110,3384
  ArrayRef<LayoutItemBase *> layout_items(118,3696
  ArrayRef<BaseClassLayout *> bases(119,3770
  ArrayRef<BaseClassLayout *> regular_bases(120,3835
  ArrayRef<BaseClassLayout *> virtual_bases(121,3915
  uint32_t directVirtualBaseCount(122,3992
  ArrayRef<std::unique_ptr<PDBSymbolFunc>> funcs(123,4063
  ArrayRef<std::unique_ptr<PDBSymbol>> other_items(124,4138
  uint32_t DirectVBaseCount 132,4387
  UniquePtrVector<PDBSymbol> Other;134,4421
  UniquePtrVector<PDBSymbolFunc> Funcs;135,4457
  UniquePtrVector<LayoutItemBase> ChildStorage;136,4497
  std::vector<LayoutItemBase *> LayoutItems;137,4545
  std::vector<BaseClassLayout *> AllBases;139,4591
  ArrayRef<BaseClassLayout *> NonVirtualBases;140,4634
  ArrayRef<BaseClassLayout *> VirtualBases;141,4681
  VTableLayoutItem *VTable VTable143,4726
  VBPtrLayoutItem *VBPtr VBPtr144,4764
class BaseClassLayout 147,4804
  const PDBSymbolTypeBaseClass &getBase(getBase152,5009
  bool isVirtualBase(153,5075
  bool isEmptyBase(154,5130
  std::unique_ptr<PDBSymbolTypeBaseClass> Base;157,5204
  bool IsVirtualBase;158,5252
class ClassLayout 161,5278
  const PDBSymbolTypeUDT &getClass(getClass168,5493
  BitVector ImmediateUsedBytes;172,5608
  std::unique_ptr<PDBSymbolTypeUDT> OwnedStorage;173,5640
  const PDBSymbolTypeUDT &UDT;UDT174,5690

/usr/include/llvm/DebugInfo/Symbolize/Markup.h,477
#define LLVM_DEBUGINFO_SYMBOLIZE_MARKUP_H17,645
struct MarkupNode 33,1204
  StringRef Text;35,1271
  StringRef Tag;38,1354
  SmallVector<StringRef> Fields;42,1475
class MarkupParser 51,1796
  bool isSGR(84,3106
  const StringSet<> MultilineTags;95,3488
  std::string FinishedMultiline;99,3660
  std::string InProgressMultiline;103,3786
  StringRef Line;106,3860
  SmallVector<MarkupNode> Buffer;109,3931
  size_t NextIdx;112,4000
  const Regex SGRSyntax;115,4089

/usr/include/llvm/DebugInfo/Symbolize/DIPrinter.h,984
#define LLVM_DEBUGINFO_SYMBOLIZE_DIPRINTER_H15,626
struct Request 34,946
  StringRef ModuleName;35,963
  std::optional<uint64_t> Address;36,987
  StringRef Symbol;37,1022
class DIPrinter 40,1046
struct PrinterConfig 60,1759
  bool PrintAddress;61,1782
  bool PrintFunctions;62,1803
  bool Pretty;63,1826
  bool Verbose;64,1841
  int SourceContextLines;65,1857
using ErrorHandler 68,1887
class PlainPrinterBase 70,1963
  raw_ostream &OS;OS72,2018
  ErrorHandler ErrHandler;73,2037
  PrinterConfig Config;74,2064
  virtual void printStartAddress(82,2433
  virtual void printFooter(83,2493
  PlainPrinterBase(89,2597
  void listBegin(103,3243
  void listEnd(104,3274
class LLVMPrinter 107,3307
  LLVMPrinter(114,3542
class GNUPrinter 118,3661
  GNUPrinter(123,3805
class JSONPrinter 128,3924
  raw_ostream &OS;OS130,3972
  PrinterConfig Config;131,3991
  std::unique_ptr<json::Array> ObjectList;132,4015
  void printJSON(134,4059
  JSONPrinter(141,4197

/usr/include/llvm/DebugInfo/Symbolize/MarkupFilter.h,1052
#define LLVM_DEBUGINFO_SYMBOLIZE_MARKUPFILTER_H16,618
class MarkupFilter 32,1019
  MarkupFilter(34,1048
  void filter(42,1431
  void finish(45,1550
  struct Module 48,1577
    uint64_t ID;49,1595
    std::string Name;50,1612
    SmallVector<uint8_t> BuildID;51,1634
  struct MMap 54,1674
    uint64_t Addr;55,1690
    uint64_t Size;56,1709
    const Module *Mod;Mod57,1728
    std::string Mode;58,1751
    uint64_t ModuleRelativeAddr;59,1786
  struct ModuleInfoLine 67,2062
    const Module *Mod;Mod68,2088
  enum class PCType 74,2216
    ReturnAddress,77,2334
    PreciseCode,79,2433
  raw_ostream &OS;OS138,4594
  LLVMSymbolizer &Symbolizer;Symbolizer139,4613
  const bool ColorsEnabled;140,4643
  MarkupParser Parser;142,4672
  std::string Line;145,4730
  std::optional<ModuleInfoLine> MIL;149,4880
  std::optional<raw_ostream::Colors> Color;152,4934
  DenseMap<DenseMap156,5035
  DenseMap<uint64_t, std::unique_ptr<Module>> Modules;156,5035
  std::map<std::map159,5139
  std::map<uint64_t, MMap> MMaps;159,5139

/usr/include/llvm/DebugInfo/Symbolize/SymbolizableModule.h,94
#define LLVM_DEBUGINFO_SYMBOLIZE_SYMBOLIZABLEMODULE_H13,566
class SymbolizableModule 23,784

/usr/include/llvm/DebugInfo/Symbolize/SymbolizableObjectFile.h,560
#define LLVM_DEBUGINFO_SYMBOLIZE_SYMBOLIZABLEOBJECTFILE_H13,570
class SymbolizableObjectFile 31,944
  const object::ObjectFile *Module;Module73,3024
  std::unique_ptr<DIContext> DebugInfoContext;74,3060
  bool UntagAddresses;75,3107
  struct SymbolDesc 77,3131
    uint64_t Addr;78,3153
    uint64_t Size;81,3279
    StringRef Name;83,3299
    uint32_t ELFLocalSymIdx;86,3417
    bool operator<(88,3447
  std::vector<SymbolDesc> Symbols;92,3575
  std::vector<std::vector94,3664
  std::vector<std::pair<uint32_t, StringRef>> FileSymbols;94,3664

/usr/include/llvm/DebugInfo/Symbolize/Symbolize.h,1071
#define LLVM_DEBUGINFO_SYMBOLIZE_SYMBOLIZE_H14,544
class LLVMSymbolizer 50,1329
  struct Options 52,1360
    std::string DefaultArch;60,1669
    std::vector<std::string> DsymHints;61,1698
    std::string FallbackDebugPath;62,1738
    std::string DWPName;63,1773
    std::vector<std::string> DebugFileDirectory;64,1798
  void setBuildIDFetcher(126,4515
  std::map<std::map203,8001
      Modules;204,8075
  StringMap<std::string> BuildIDPaths;205,8090
  std::map<std::map208,8188
      ObjectPairForPathArch;209,8248
  std::map<std::map212,8340
  std::map<std::string, CachedBinary> BinaryForPath;212,8340
  simple_ilist<CachedBinary> LRUBinaries;215,8440
  std::map<std::map221,8661
      ObjectForUBPathAndArch;222,8738
  Options Opts;224,8769
  std::unique_ptr<BuildIDFetcher> BIDFetcher;226,8786
class CachedBinary 232,9001
  CachedBinary(235,9092
  OwningBinary<Binary> &operator*(operator*237,9159
  OwningBinary<Binary> *operator->(operator->238,9211
  void evict(246,9521
  size_t size(251,9577
  OwningBinary<Binary> Bin;254,9649

/usr/include/llvm/DebugInfo/DIContext.h,3336
#define LLVM_DEBUGINFO_DICONTEXT_H15,589
struct DILineInfo 32,978
  std::string FileName;37,1277
  std::string FunctionName;38,1301
  std::string StartFileName;39,1329
  std::optional<StringRef> Source;41,1403
  std::optional<StringRef> LineSource;44,1524
  std::optional<uint64_t> StartAddress;48,1633
  DILineInfo(53,1726
  bool operator==(operator==57,1827
  bool operator!=(operator!=64,2137
  bool operator<(66,2213
  explicit operator bool(operator bool73,2535
  void dump(75,2603
using DILineInfoTable 89,3037
class DIInliningInfo 92,3173
  SmallVector<SmallVector93,3196
  SmallVector<DILineInfo, 4> Frames;93,3196
  const DILineInfo &getFrame(getFrame100,3390
  DILineInfo *getMutableFrame(getMutableFrame105,3509
  uint32_t getNumberOfFrames(110,3624
  void addFrame(112,3688
  void resize(114,3759
struct DIGlobal 118,3863
  std::string Name;119,3881
  uint64_t Start 120,3901
  uint64_t Size 121,3923
  std::string DeclFile;122,3944
  uint64_t DeclLine 123,3968
  DIGlobal(125,3994
struct DILocal 128,4044
  std::string FunctionName;129,4061
  std::string Name;130,4089
  std::string DeclFile;131,4109
  uint64_t DeclLine 132,4133
  std::optional<int64_t> FrameOffset;133,4158
  std::optional<uint64_t> Size;134,4196
  std::optional<uint64_t> TagOffset;135,4228
enum class DINameKind 140,4403
enum class DINameKind { None,140,4403
enum class DINameKind { None, ShortName,140,4403
enum class DINameKind { None, ShortName, LinkageName 140,4403
struct DILineInfoSpecifier 144,4542
  enum class FileLineInfoKind 145,4571
    None,146,4603
    RawValue,149,4739
    BaseNameOnly,150,4753
    RelativeFilePath,152,4817
    AbsoluteFilePath153,4839
  using FunctionNameKind 155,4865
  FileLineInfoKind FLIKind;157,4905
  FunctionNameKind FNKind;158,4933
  DILineInfoSpecifier(160,4961
  inline bool operator==(operator==164,5155
enum DIDumpTypeCounter 170,5355
#define HANDLE_DWARF_SECTION(171,5380
#undef HANDLE_DWARF_SECTION174,5523
  DIDT_ID_UUID,175,5551
  DIDT_ID_Count176,5567
enum DIDumpType 181,5702
  DIDT_Null,182,5731
  DIDT_All 183,5744
#define HANDLE_DWARF_SECTION(184,5762
#undef HANDLE_DWARF_SECTION187,5930
  DIDT_UUID 188,5958
struct DIDumpOptions 193,6083
  unsigned DumpType 194,6106
  unsigned ChildRecurseDepth 195,6138
  unsigned ParentRecurseDepth 196,6174
  uint16_t Version 197,6211
  uint8_t AddrSize 198,6279
  bool ShowAddresses 199,6351
  bool ShowChildren 200,6380
  bool ShowParents 201,6409
  bool ShowForm 202,6437
  bool SummarizeTypes 203,6462
  bool Verbose 204,6493
  bool DisplayRawContents 205,6517
  bool IsEH 206,6552
  bool DumpNonSkeleton 207,6573
  static DIDumpOptions getForSingleDIE(212,6774
  DIDumpOptions noImplicitRecursion(220,7008
class DIContext 234,7456
  enum DIContextKind 236,7482
  enum DIContextKind { CK_DWARF,236,7482
  enum DIContextKind { CK_DWARF, CK_PDB,236,7482
  enum DIContextKind { CK_DWARF, CK_PDB, CK_BTF 236,7482
  DIContext(238,7534
  DIContextKind getKind(241,7611
  virtual bool verify(245,7728
  const DIContextKind Kind;266,8541
class LoadedObjectInfo 272,8735
  virtual uint64_t getSectionLoadAddress(287,9316
  virtual bool getLoadedSectionContents(302,10153
template <typename Derived,314,10636
template <typename Derived, typename Base 314,10636

/usr/include/llvm/Debuginfod/BuildIDFetcher.h,103
#define LLVM_DEBUGINFOD_DIFETCHER_H16,608
class DebuginfodFetcher 23,717
  DebuginfodFetcher(25,783

/usr/include/llvm/Debuginfod/HTTPClient.h,385
#define LLVM_DEBUGINFOD_HTTPCLIENT_H16,630
enum class HTTPMethod 27,845
enum class HTTPMethod { GET 27,845
struct HTTPRequest 30,934
  SmallString<128> Url;31,955
  SmallVector<std::string,std::string32,979
  SmallVector<std::string, 0> Headers;32,979
class HTTPResponseHandler 43,1360
class HTTPClient 53,1646
  void *Curl Curl55,1689
  static bool IsInitialized;62,1763

/usr/include/llvm/Debuginfod/HTTPServer.h,868
#define LLVM_DEBUGINFOD_HTTPSERVER_H17,685
class HTTPServerError 37,1023
  static char ID;39,1100
  HTTPServerError(40,1118
  void log(41,1155
class HTTPServerRequest 47,1232
  httplib::Response &HTTPLibResponse;HTTPLibResponse54,1433
  std::string UrlPath;58,1487
  SmallVector<SmallVector60,1588
  SmallVector<std::string, 1> UrlPathMatches;60,1588
struct HTTPResponse 68,1767
  unsigned Code;69,1789
  const char *ContentType;ContentType70,1806
  StringRef Body;71,1833
typedef std::function<void(void74,1855
typedef std::function<StringRef(StringRef79,2113
struct StreamingHTTPResponse 83,2276
  unsigned Code;84,2307
  const char *ContentType;ContentType85,2324
  size_t ContentLength;86,2351
  HTTPContentProvider Provider;87,2375
class HTTPServer 99,2897
  std::unique_ptr<httplib::Server> Server;101,2943
  unsigned Port 102,2986

/usr/include/llvm/Debuginfod/Debuginfod.h,899
#define LLVM_DEBUGINFOD_DEBUGINFOD_H21,995
struct DebuginfodLogEntry 102,4142
  std::string Message;103,4170
class DebuginfodLog 108,4275
  std::mutex QueueMutex;109,4297
  std::condition_variable QueueCondition;110,4322
  std::queue<DebuginfodLogEntry> LogEntryQueue;111,4364
class DebuginfodCollection 124,4782
  SmallVector<SmallVector125,4811
  SmallVector<std::string, 1> Paths;125,4811
  sys::RWMutex BinariesMutex;126,4848
  StringMap<std::string> Binaries;127,4878
  sys::RWMutex DebugBinariesMutex;128,4913
  StringMap<std::string> DebugBinaries;129,4948
  DebuginfodLog &Log;Log137,5387
  ThreadPool &Pool;Pool138,5409
  Timer UpdateTimer;139,5429
  sys::Mutex UpdateMutex;140,5450
  double MinInterval;144,5586
struct DebuginfodServer 155,5955
  HTTPServer Server;156,5981
  DebuginfodLog &Log;Log157,6002
  DebuginfodCollection &Collection;Collection158,6024

/usr/include/llvm/Demangle/MicrosoftDemangle.h,1432
#define LLVM_DEMANGLE_MICROSOFTDEMANGLE_H10,412
class ArenaAllocator 27,936
  struct AllocatorNode 28,959
  void addNode(35,1099
  ArenaAllocator(45,1339
  ~ArenaAllocator(47,1383
  char *allocUnalignedBuffer(allocUnalignedBuffer57,1564
  template <typename T,71,1903
  template <typename T, typename... Args> T *allocArray(allocArray71,1903
  template <typename T,90,2479
  template <typename T, typename... Args> T *alloc(alloc90,2479
struct BackrefContext 114,3195
  static constexpr size_t Max 115,3219
  TypeNode *FunctionParams[FunctionParams117,3256
  size_t FunctionParamCount 118,3289
  NamedIdentifierNode *Names[Names122,3477
  size_t NamesCount 123,3512
enum class QualifierMangleMode 126,3541
enum class QualifierMangleMode { Drop,126,3541
enum class QualifierMangleMode { Drop, Mangle,126,3541
enum class QualifierMangleMode { Drop, Mangle, Result 126,3541
enum NameBackrefBehavior 128,3599
  NBB_None 129,3636
  NBB_Template 130,3698
  NBB_Simple 131,3754
enum class FunctionIdentifierCodeGroup 134,3805
enum class FunctionIdentifierCodeGroup { Basic,134,3805
enum class FunctionIdentifierCodeGroup { Basic, Under,134,3805
enum class FunctionIdentifierCodeGroup { Basic, Under, DoubleUnder 134,3805
class Demangler 139,4085
  bool Error 151,4485
  std::pair<std::pair185,6126
  std::pair<std::pair261,9963
  ArenaAllocator Arena;264,10068
  BackrefContext Backrefs;279,10580

/usr/include/llvm/Demangle/MicrosoftDemangleNodes.h,10623
#define LLVM_DEMANGLE_MICROSOFTDEMANGLENODES_H14,567
using llvm::itanium_demangle::OutputBuffer;27,764
namespace llvm 29,809
namespace ms_demangle 30,826
enum Qualifiers 33,870
  Q_None 34,898
  Q_Const 35,912
  Q_Volatile 36,932
  Q_Far 37,955
  Q_Huge 38,973
  Q_Unaligned 39,992
  Q_Restrict 40,1016
  Q_Pointer64 41,1039
enum class StorageClass 44,1066
  None,45,1102
  PrivateStatic,46,1110
  ProtectedStatic,47,1127
  PublicStatic,48,1146
  Global,49,1162
  FunctionLocalStatic,50,1172
enum class PointerAffinity 53,1199
enum class PointerAffinity { None,53,1199
enum class PointerAffinity { None, Pointer,53,1199
enum class PointerAffinity { None, Pointer, Reference,53,1199
enum class PointerAffinity { None, Pointer, Reference, RValueReference 53,1199
enum class FunctionRefQualifier 54,1273
enum class FunctionRefQualifier { None,54,1273
enum class FunctionRefQualifier { None, Reference,54,1273
enum class FunctionRefQualifier { None, Reference, RValueReference 54,1273
enum class CallingConv 57,1367
  None,58,1402
  Cdecl,59,1410
  Pascal,60,1419
  Thiscall,61,1429
  Stdcall,62,1441
  Fastcall,63,1452
  Clrcall,64,1464
  Eabi,65,1475
  Vectorcall,66,1483
  Regcall,67,1497
  Swift,68,1508
  SwiftAsync,69,1536
enum class ReferenceKind 72,1568
enum class ReferenceKind : uint8_t { None,72,1568
enum class ReferenceKind : uint8_t { None, LValueRef,72,1568
enum class ReferenceKind : uint8_t { None, LValueRef, RValueRef 72,1568
enum OutputFlags 74,1636
  OF_Default 75,1655
  OF_NoCallingConvention 76,1673
  OF_NoTagSpecifier 77,1703
  OF_NoAccessSpecifier 78,1728
  OF_NoMemberType 79,1756
  OF_NoReturnType 80,1779
  OF_NoVariableType 81,1803
enum class PrimitiveKind 85,1842
  Void,86,1869
  Bool,87,1877
  Char,88,1885
  Schar,89,1893
  Uchar,90,1902
  Char8,91,1911
  Char16,92,1920
  Char32,93,1930
  Short,94,1940
  Ushort,95,1949
  Int,96,1959
  Uint,97,1966
  Long,98,1974
  Ulong,99,1982
  Int64,100,1991
  Uint64,101,2000
  Wchar,102,2010
  Float,103,2019
  Double,104,2028
  Ldouble,105,2038
  Nullptr,106,2049
enum class CharKind 109,2064
  Char,110,2086
  Char16,111,2094
  Char32,112,2104
  Wchar,113,2114
enum class IntrinsicFunctionKind 116,2127
  None,117,2172
  New,118,2180
  Delete,119,2231
  Assign,120,2285
  RightShift,121,2333
  LeftShift,122,2382
  LogicalNot,123,2431
  Equals,124,2479
  NotEquals,125,2528
  ArraySubscript,126,2577
  Pointer,127,2626
  Dereference,128,2675
  Increment,129,2723
  Decrement,130,2772
  Minus,131,2821
  Plus,132,2869
  BitwiseAnd,133,2917
  MemberPointer,134,2965
  Divide,135,3015
  Modulus,136,3063
  LessThan,137,3111
  LessThanEqual,138,3157
  GreaterThan,139,3204
  GreaterThanEqual,140,3250
  Comma,141,3297
  Parens,142,3343
  BitwiseNot,143,3390
  BitwiseXor,144,3436
  BitwiseOr,145,3482
  LogicalAnd,146,3528
  LogicalOr,147,3575
  TimesEqual,148,3622
  PlusEqual,149,3669
  MinusEqual,150,3716
  DivEqual,151,3763
  ModEqual,152,3811
  RshEqual,153,3859
  LshEqual,154,3908
  BitwiseAndEqual,155,3957
  BitwiseOrEqual,156,4005
  BitwiseXorEqual,157,4053
  VbaseDtor,158,4101
  VecDelDtor,159,4157
  DefaultCtorClosure,160,4223
  ScalarDelDtor,161,4290
  VecCtorIter,162,4356
  VecDtorIter,163,4423
  VecVbaseCtorIter,164,4489
  VdispMap,165,4562
  EHVecCtorIter,166,4626
  EHVecDtorIter,167,4696
  EHVecVbaseCtorIter,168,4765
  CopyCtorClosure,169,4841
  LocalVftableCtorClosure,170,4905
  ArrayNew,171,4978
  ArrayDelete,172,5030
  ManVectorCtorIter,173,5085
  ManVectorDtorIter,174,5152
  EHVectorCopyCtorIter,175,5219
  EHVectorVbaseCopyCtorIter,176,5286
  VectorCopyCtorIter,177,5359
  VectorVbaseCopyCtorIter,178,5430
  ManVectorVbaseCopyCtorIter,179,5507
  CoAwait,180,5583
  Spaceship,181,5639
  MaxIntrinsic182,5689
enum class SpecialIntrinsicKind 185,5708
  None,186,5742
  Vftable,187,5750
  Vbtable,188,5761
  Typeof,189,5772
  VcallThunk,190,5782
  LocalStaticGuard,191,5796
  StringLiteralSymbol,192,5816
  UdtReturning,193,5839
  Unknown,194,5855
  DynamicInitializer,195,5866
  DynamicAtexitDestructor,196,5888
  RttiTypeDescriptor,197,5915
  RttiBaseClassDescriptor,198,5937
  RttiBaseClassArray,199,5964
  RttiClassHierarchyDescriptor,200,5986
  RttiCompleteObjLocator,201,6018
  LocalVftable,202,6044
  LocalStaticThreadGuard,203,6060
enum FuncClass 207,6110
  FC_None 208,6138
  FC_Public 209,6153
  FC_Protected 210,6175
  FC_Private 211,6200
  FC_Global 212,6223
  FC_Static 213,6245
  FC_Virtual 214,6267
  FC_Far 215,6290
  FC_ExternC 216,6309
  FC_NoParameterList 217,6332
  FC_VirtualThisAdjust 218,6363
  FC_VirtualThisAdjustEx 219,6396
  FC_StaticThisAdjust 220,6432
enum class TagKind 223,6469
enum class TagKind { Class,223,6469
enum class TagKind { Class, Struct,223,6469
enum class TagKind { Class, Struct, Union,223,6469
enum class TagKind { Class, Struct, Union, Enum 223,6469
enum class NodeKind 225,6521
  Unknown,226,6543
  Md5Symbol,227,6554
  PrimitiveType,228,6567
  FunctionSignature,229,6584
  Identifier,230,6605
  NamedIdentifier,231,6619
  VcallThunkIdentifier,232,6638
  LocalStaticGuardIdentifier,233,6662
  IntrinsicFunctionIdentifier,234,6692
  ConversionOperatorIdentifier,235,6723
  DynamicStructorIdentifier,236,6755
  StructorIdentifier,237,6784
  LiteralOperatorIdentifier,238,6806
  ThunkSignature,239,6835
  PointerType,240,6853
  TagType,241,6868
  ArrayType,242,6879
  Custom,243,6892
  IntrinsicType,244,6902
  NodeArray,245,6919
  QualifiedName,246,6932
  TemplateParameterReference,247,6949
  EncodedStringLiteral,248,6979
  IntegerLiteral,249,7003
  RttiBaseClassDescriptor,250,7021
  LocalStaticGuardVariable,251,7048
  FunctionSymbol,252,7076
  VariableSymbol,253,7094
  SpecialTableSymbol254,7112
struct Node 257,7137
  explicit Node(258,7151
  NodeKind kind(261,7222
  NodeKind Kind;268,7407
struct TypeNode 297,8153
  explicit TypeNode(298,8185
  void output(303,8379
  Qualifiers Quals 308,8505
struct PrimitiveTypeNode 311,8538
  explicit PrimitiveTypeNode(312,8583
  void outputPost(316,8758
  PrimitiveKind PrimKind;318,8832
struct FunctionSignatureNode 321,8862
  explicit FunctionSignatureNode(322,8911
  FunctionSignatureNode(323,8973
  PointerAffinity Affinity 330,9280
  CallingConv CallConvention 333,9373
  FuncClass FunctionClass 336,9466
  FunctionRefQualifier RefQualifier 338,9506
  TypeNode *ReturnType ReturnType341,9611
  bool IsVariadic 344,9699
  NodeArrayNode *Params Params347,9752
  bool IsNoexcept 350,9832
struct IdentifierNode 353,9863
  explicit IdentifierNode(354,9901
  NodeArrayNode *TemplateParams TemplateParams356,9953
struct VcallThunkIdentifierNode 362,10088
  VcallThunkIdentifierNode(363,10146
  uint64_t OffsetInVTable 367,10296
struct DynamicStructorIdentifierNode 370,10331
  DynamicStructorIdentifierNode(371,10394
  VariableSymbolNode *Variable Variable376,10560
  QualifiedNameNode *Name Name377,10602
  bool IsDestructor 378,10639
struct NamedIdentifierNode 381,10672
  NamedIdentifierNode(382,10725
  std::string_view Name;386,10865
struct IntrinsicFunctionIdentifierNode 389,10894
  explicit IntrinsicFunctionIdentifierNode(390,10959
  IntrinsicFunctionKind Operator;396,11196
struct LiteralOperatorIdentifierNode 399,11234
  LiteralOperatorIdentifierNode(400,11297
  std::string_view Name;405,11463
struct LocalStaticGuardIdentifierNode 408,11492
  LocalStaticGuardIdentifierNode(409,11556
  bool IsThread 414,11724
  uint32_t ScopeIndex 415,11749
struct ConversionOperatorIdentifierNode 418,11780
  ConversionOperatorIdentifierNode(419,11846
  TypeNode *TargetType TargetType425,12065
struct StructorIdentifierNode 428,12103
  StructorIdentifierNode(429,12159
  explicit StructorIdentifierNode(430,12236
  IdentifierNode *Class Class437,12505
  bool IsDestructor 438,12540
struct ThunkSignatureNode 441,12573
  ThunkSignatureNode(442,12632
  struct ThisAdjustor 447,12851
  ThisAdjustor ThisAdjust;454,13005
struct PointerTypeNode 457,13036
  PointerTypeNode(458,13079
  PointerAffinity Affinity 463,13334
  QualifiedNameNode *ClassParent ClassParent466,13462
  TypeNode *Pointee Pointee470,13605
struct TagTypeNode 473,13640
  explicit TagTypeNode(474,13679
  QualifiedNameNode *QualifiedName QualifiedName479,13901
  TagKind Tag;480,13947
struct ArrayTypeNode 483,13966
  ArrayTypeNode(484,14007
  NodeArrayNode *Dimensions Dimensions493,14424
  TypeNode *ElementType ElementType496,14496
struct IntrinsicNode 499,14535
  IntrinsicNode(500,14576
  void output(501,14633
struct CustomTypeNode 504,14706
  CustomTypeNode(505,14748
  IdentifierNode *Identifier Identifier510,14942
struct NodeArrayNode 513,14986
  NodeArrayNode(514,15023
  Node **Nodes Nodes521,15242
  size_t Count 522,15268
struct QualifiedNameNode 525,15292
  QualifiedNameNode(526,15333
  NodeArrayNode *Components Components530,15459
  IdentifierNode *getUnqualifiedIdentifier(getUnqualifiedIdentifier532,15499
struct TemplateParameterReferenceNode 538,15679
  TemplateParameterReferenceNode(539,15733
  SymbolNode *Symbol Symbol544,15891
  int ThunkOffsetCount 546,15924
  std::array<std::array547,15952
  std::array<int64_t, 3> ThunkOffsets;547,15952
  PointerAffinity Affinity 548,15991
  bool IsMemberPointer 549,16043
struct IntegerLiteralNode 552,16079
  IntegerLiteralNode(553,16121
  IntegerLiteralNode(554,16180
  uint64_t Value 559,16383
  bool IsNegative 560,16405
struct RttiBaseClassDescriptorNode 563,16436
  RttiBaseClassDescriptorNode(564,16497
  uint32_t NVOffset 569,16659
  int32_t VBPtrOffset 570,16684
  uint32_t VBTableOffset 571,16711
  uint32_t Flags 572,16741
struct SymbolNode 575,16767
  explicit SymbolNode(576,16801
  QualifiedNameNode *Name Name578,16915
struct SpecialTableSymbolNode 581,16956
  explicit SpecialTableSymbolNode(582,17008
  QualifiedNameNode *TargetName TargetName586,17164
  Qualifiers Quals 587,17207
struct LocalStaticGuardVariableNode 590,17252
  LocalStaticGuardVariableNode(591,17310
  bool IsVisible 596,17470
struct EncodedStringLiteralNode 599,17500
  EncodedStringLiteralNode(600,17554
  std::string_view DecodedString;604,17700
  bool IsTruncated 605,17734
  CharKind Char 606,17762
struct VariableSymbolNode 609,17800
  VariableSymbolNode(610,17848
  StorageClass SC 614,17982
  TypeNode *Type Type615,18022
struct FunctionSymbolNode 618,18054
  FunctionSymbolNode(619,18102
  FunctionSignatureNode *Signature Signature623,18236

/usr/include/llvm/Demangle/StringViewExtras.h,101
#define DEMANGLE_STRINGVIEW_H16,735
inline bool starts_with(24,845
inline bool starts_with(28,960

/usr/include/llvm/Demangle/Demangle.h,580
#define LLVM_DEMANGLE_DEMANGLE_H10,403
enum : int 24,844
  demangle_unknown_error 25,857
  demangle_invalid_args 26,888
  demangle_invalid_mangled_name 27,918
  demangle_memory_alloc_failure 28,956
  demangle_success 29,994
enum MSDemangleFlags 37,1309
  MSDF_None 38,1332
  MSDF_DumpBackrefs 39,1349
  MSDF_NoAccessSpecifier 40,1379
  MSDF_NoCallingConvention 41,1414
  MSDF_NoReturnType 42,1451
  MSDF_NoMemberType 43,1481
  MSDF_NoVariableType 44,1511
struct ItaniumPartialDemangler 77,3076
  void *RootNode;RootNode127,4914
  void *Context;Context128,4932

/usr/include/llvm/Demangle/DemangleConfig.h,995
#define LLVM_DEMANGLE_DEMANGLECONFIG_H16,673
#define __has_feature(19,735
#define __has_cpp_attribute(23,798
#define __has_attribute(27,863
#define __has_builtin(31,922
#define DEMANGLE_GNUC_PREREQ(36,1067
#define DEMANGLE_GNUC_PREREQ(40,1317
#define DEMANGLE_GNUC_PREREQ(43,1476
#define DEMANGLE_ATTRIBUTE_USED 48,1598
#define DEMANGLE_ATTRIBUTE_USED50,1662
#define DEMANGLE_UNREACHABLE 54,1776
#define DEMANGLE_UNREACHABLE 56,1853
#define DEMANGLE_UNREACHABLE58,1904
#define DEMANGLE_ATTRIBUTE_NOINLINE 62,2004
#define DEMANGLE_ATTRIBUTE_NOINLINE 64,2090
#define DEMANGLE_ATTRIBUTE_NOINLINE66,2153
#define DEMANGLE_DUMP_METHOD 70,2218
#define DEMANGLE_DUMP_METHOD 72,2305
#define DEMANGLE_FALLTHROUGH 76,2432
#define DEMANGLE_FALLTHROUGH 78,2521
#define DEMANGLE_FALLTHROUGH82,2741
#define DEMANGLE_FALLTHROUGH 84,2816
#define DEMANGLE_FALLTHROUGH86,2874
#define DEMANGLE_ASSERT(91,2954
#define DEMANGLE_NAMESPACE_BEGIN 94,3029
#define DEMANGLE_NAMESPACE_END 95,3108

/usr/include/llvm/Demangle/ItaniumDemangle.h,27054
#define DEMANGLE_ITANIUMDEMANGLE_H17,778
template <class T, size_t N> class PODSmallVector 40,1237
  T *First First44,1391
  T *Last Last45,1413
  T *Cap Cap46,1434
  T Inline[Inline47,1454
  bool isInline(49,1476
  void clearInline(51,1529
  void reserve(57,1618
  PODSmallVector(75,2069
  PODSmallVector(80,2252
  PODSmallVector &operator=(operator=94,2570
  void push_back(122,3212
  void pop_back(129,3370
  void shrinkToSize(134,3468
  T *begin(begin139,3605
  T *end(end140,3636
  bool empty(142,3665
  size_t size(143,3712
  T &back(back144,3780
  void clear(152,4016
  ~PODSmallVector(154,4050
class Node 162,4274
  enum Kind 164,4295
#define NODE(165,4325
  enum class Cache 171,4550
  enum class Cache : unsigned char { Yes,171,4550
  enum class Cache : unsigned char { Yes, No,171,4550
  enum class Cache : unsigned char { Yes, No, Unknown,171,4550
  enum class Prec 175,4721
    Primary,176,4741
    Postfix,177,4754
    Unary,178,4767
    Cast,179,4778
    PtrMem,180,4788
    Multiplicative,181,4800
    Additive,182,4820
    Shift,183,4834
    Spaceship,184,4845
    Relational,185,4860
    Equality,186,4876
    And,187,4890
    Xor,188,4899
    Ior,189,4908
    AndIf,190,4917
    OrIf,191,4928
    Conditional,192,4938
    Assign,193,4955
    Comma,194,4967
    Default,195,4978
  Kind K;199,5006
  Prec Precedence 201,5017
  Cache RHSComponentCache 207,5192
  Cache ArrayCache 211,5342
  Cache FunctionCache 215,5488
  Node(218,5524
  Node(223,5836
  bool hasRHSComponent(237,6402
  bool hasArray(243,6583
  bool hasFunction(249,6736
  Kind getKind(255,6901
  Prec getPrecedence(257,6939
  virtual bool hasRHSComponentSlow(259,6992
  virtual bool hasArraySlow(260,7067
  virtual bool hasFunctionSlow(261,7135
  virtual const Node *getSyntaxNode(getSyntaxNode265,7354
  void printAsOperand(269,7559
  void print(280,7869
  virtual void printRight(293,8348
  virtual std::string_view getBaseName(295,8400
class NodeArray 305,8625
  Node **Elements;Elements306,8643
  size_t NumElements;307,8662
  NodeArray(310,8693
  NodeArray(311,8746
  bool empty(314,8856
  size_t size(315,8906
  Node **begin(begin317,8953
  Node **end(end318,8997
  void printWithComma(322,9118
struct NodeArrayNode 343,9736
  NodeArray Array;344,9766
  NodeArrayNode(345,9785
  template<typename Fn> void match(347,9861
  void printLeft(349,9923
enum FunctionRefQual 394,11051
  FrefQualNone,395,11090
  FrefQualLValue,396,11106
  FrefQualRValue,397,11124
enum Qualifiers 400,11146
  QualNone 401,11164
  QualConst 402,11180
  QualVolatile 403,11199
  QualRestrict 404,11221
inline Qualifiers operator|=(operator|=407,11247
class ElaboratedTypeSpefType 519,14113
  std::string_view Kind;520,14158
  Node *Child;Child521,14183
  ElaboratedTypeSpefType(523,14206
  template<typename Fn> void match(526,14339
  void printLeft(528,14407
class TransformedType 535,14520
  std::string_view Transform;536,14558
  Node *BaseType;BaseType537,14588
  TransformedType(539,14614
  template<typename Fn> void match(542,14757
  void printLeft(544,14833
struct AbiTagAttr 552,14969
  Node *Base;Base553,14996
  std::string_view Tag;554,15010
  AbiTagAttr(556,15035
  template<typename Fn> void match(561,15226
  std::string_view getBaseName(563,15292
  void printLeft(565,15373
class EnableIfAttr 573,15507
  NodeArray Conditions;574,15542
  EnableIfAttr(576,15574
  template<typename Fn> void match(579,15669
  void printLeft(581,15736
class ObjCProtoName 588,15872
  const Node *Ty;Ty589,15908
  std::string_view Protocol;590,15926
  ObjCProtoName(595,15993
  template<typename Fn> void match(598,16117
  bool isObjCObject(600,16186
  void printLeft(605,16336
enum class ReferenceKind 657,17771
  LValue,658,17798
  RValue,659,17808
class ReferenceType 663,17881
  const Node *Pointee;Pointee664,17917
  ReferenceKind RK;665,17940
  mutable bool Printing 667,17961
  std::pair<std::pair676,18392
  std::pair<ReferenceKind, const Node *> collapse(676,18392
  ReferenceType(701,19264
  template<typename Fn> void match(705,19419
  bool hasRHSComponentSlow(707,19487
  void printLeft(711,19595
  void printRight(726,20104
class NoexceptSpec 860,24050
  const Node *E;E861,24085
  NoexceptSpec(863,24110
  template<typename Fn> void match(865,24174
  void printLeft(867,24232
class DynamicExceptionSpec 875,24382
  NodeArray Types;876,24425
  DynamicExceptionSpec(878,24452
  template<typename Fn> void match(881,24548
  void printLeft(883,24610
class LiteralOperator 988,27362
  const Node *OpName;OpName989,27400
  LiteralOperator(992,27431
  template<typename Fn> void match(995,27522
  void printLeft(997,27585
struct NestedName 1038,28624
  Node *Qual;Qual1039,28651
  Node *Name;Name1040,28665
  NestedName(1042,28680
  template<typename Fn> void match(1045,28775
  std::string_view getBaseName(1047,28842
  void printLeft(1049,28923
struct MemberLikeFriendName 1056,29041
  Node *Qual;Qual1057,29078
  Node *Name;Name1058,29092
  MemberLikeFriendName(1060,29107
  template<typename Fn> void match(1063,29222
  std::string_view getBaseName(1065,29289
  void printLeft(1067,29370
struct ModuleName 1074,29495
  ModuleName *Parent;Parent1075,29522
  Node *Name;Name1076,29544
  bool IsPartition;1077,29558
  ModuleName(1079,29579
  template <typename Fn> void match(1083,29748
  void printLeft(1087,29837
struct ModuleEntity 1096,30027
  ModuleName *Module;Module1097,30056
  Node *Name;Name1098,30078
  ModuleEntity(1100,30093
  template <typename Fn> void match(1103,30204
  std::string_view getBaseName(1105,30274
  void printLeft(1107,30355
struct LocalName 1114,30474
  Node *Encoding;Encoding1115,30500
  Node *Entity;Entity1116,30518
  LocalName(1118,30535
  template<typename Fn> void match(1121,30646
  void printLeft(1123,30719
enum class TemplateParamKind 1204,32720
enum class TemplateParamKind { Type,1204,32720
enum class TemplateParamKind { Type, NonType,1204,32720
enum class TemplateParamKind { Type, NonType, Template 1204,32720
struct ForwardTemplateReference 1542,43298
  size_t Index;1543,43339
  Node *Ref Ref1544,43355
  mutable bool Printing 1550,43671
  ForwardTemplateReference(1552,43705
  bool hasRHSComponentSlow(1562,44107
  bool hasArraySlow(1568,44303
  bool hasFunctionSlow(1574,44485
  const Node *getSyntaxNode(getSyntaxNode1580,44673
  void printLeft(1587,44868
  void printRight(1593,45035
struct NameWithTemplateArgs 1601,45208
  Node *Name;Name1603,45270
  Node *TemplateArgs;TemplateArgs1604,45284
  NameWithTemplateArgs(1606,45307
  template<typename Fn> void match(1609,45446
  std::string_view getBaseName(1611,45521
  void printLeft(1613,45602
enum class SpecialSubKind 1636,46116
  allocator,1637,46144
  basic_string,1638,46157
  string,1639,46173
  istream,1640,46183
  ostream,1641,46194
  iostream,1642,46205
class ExpandedSpecialSubstitution 1646,46248
  SpecialSubKind SSK;1648,46309
  ExpandedSpecialSubstitution(1650,46332
  ExpandedSpecialSubstitution(1653,46431
  template<typename Fn> void match(1657,46625
  bool isInstantiation(1660,46696
  std::string_view getBaseName(1664,46796
  void printLeft(1683,47309
class SpecialSubstitution final : public ExpandedSpecialSubstitution 1694,47583
inline ExpandedSpecialSubstitution::ExpandedSpecialSubstitution(1716,48276
class DtorName 1739,48912
  const Node *Base;Base1740,48943
  DtorName(1743,48972
  template<typename Fn> void match(1745,49037
  void printLeft(1747,49098
class UnnamedTypeName 1753,49198
  const std::string_view Count;1754,49236
  UnnamedTypeName(1757,49277
  template<typename Fn> void match(1760,49370
  void printLeft(1762,49432
class ClosureTypeName 1769,49547
  NodeArray TemplateParams;1770,49585
  const Node *Requires1;Requires11771,49613
  NodeArray Params;1772,49638
  const Node *Requires2;Requires21773,49658
  std::string_view Count;1774,49683
  ClosureTypeName(1777,49718
  template<typename Fn> void match(1784,50053
  void printDeclarator(1788,50167
  void printLeft(1809,50659
class StructuredBindingName 1818,50859
  NodeArray Bindings;1819,50903
  StructuredBindingName(1821,50933
  template<typename Fn> void match(1824,51040
  void printLeft(1826,51105
class BinaryExpr 1835,51272
  const Node *LHS;LHS1836,51305
  const std::string_view InfixOperator;1837,51324
  const Node *RHS;RHS1838,51364
  BinaryExpr(1841,51392
  template <typename Fn> void match(1846,51597
  void printLeft(1850,51701
class ArraySubscriptExpr 1869,52349
  const Node *Op1;Op11870,52390
  const Node *Op2;Op21871,52409
  ArraySubscriptExpr(1874,52437
  template <typename Fn> void match(1877,52573
  void printLeft(1881,52662
class PostfixExpr 1889,52844
  const Node *Child;Child1890,52878
  const std::string_view Operator;1891,52899
  PostfixExpr(1894,52943
  template <typename Fn> void match(1897,53091
  void printLeft(1901,53187
class ConditionalExpr 1907,53321
  const Node *Cond;Cond1908,53359
  const Node *Then;Then1909,53379
  const Node *Else;Else1910,53399
  ConditionalExpr(1913,53428
  template <typename Fn> void match(1917,53614
  void printLeft(1921,53711
class MemberExpr 1930,53932
  const Node *LHS;LHS1931,53965
  const std::string_view Kind;1932,53984
  const Node *RHS;RHS1933,54015
  MemberExpr(1936,54043
  template <typename Fn> void match(1940,54213
  void printLeft(1944,54308
class SubobjectExpr 1951,54489
  const Node *Type;Type1952,54525
  const Node *SubExpr;SubExpr1953,54545
  std::string_view Offset;1954,54568
  NodeArray UnionSelectors;1955,54595
  bool OnePastTheEnd;1956,54623
  SubobjectExpr(1959,54654
  template<typename Fn> void match(1965,54971
  void printLeft(1969,55086
class EnclosingExpr 1986,55449
  const std::string_view Prefix;1987,55485
  const Node *Infix;Infix1988,55518
  const std::string_view Postfix;1989,55539
  EnclosingExpr(1992,55582
  template <typename Fn> void match(1996,55760
  void printLeft(2000,55854
class CastExpr 2009,56014
  const std::string_view CastKind;2011,56070
  const Node *To;To2012,56105
  const Node *From;From2013,56123
  CastExpr(2016,56152
  template <typename Fn> void match(2020,56328
  void printLeft(2024,56427
class SizeofParamPackExpr 2038,56698
  const Node *Pack;Pack2039,56740
  SizeofParamPackExpr(2042,56769
  template<typename Fn> void match(2045,56862
  void printLeft(2047,56923
class CallExpr 2056,57108
  const Node *Callee;Callee2057,57139
  NodeArray Args;2058,57161
  CallExpr(2061,57188
  template <typename Fn> void match(2064,57314
  void printLeft(2068,57407
class NewExpr 2076,57560
  NodeArray ExprList;2078,57627
  Node *Type;Type2079,57649
  NodeArray InitList;2080,57663
  bool IsGlobal;2081,57685
  bool IsArray;2082,57722
  NewExpr(2084,57758
  template<typename Fn> void match(2089,58013
  void printLeft(2093,58136
class DeleteExpr 2114,58550
  Node *Op;Op2115,58583
  bool IsGlobal;2116,58595
  bool IsArray;2117,58612
  DeleteExpr(2120,58637
  template <typename Fn> void match(2124,58798
  void printLeft(2128,58900
class PrefixExpr 2139,59085
  std::string_view Prefix;2140,59118
  Node *Child;Child2141,59145
  PrefixExpr(2144,59169
  template <typename Fn> void match(2147,59303
  void printLeft(2151,59397
class FunctionParam 2157,59523
  std::string_view Number;2158,59559
  FunctionParam(2161,59595
  template<typename Fn> void match(2164,59687
  void printLeft(2166,59750
class ConversionExpr 2172,59844
  const Node *Type;Type2173,59881
  NodeArray Expressions;2174,59901
  ConversionExpr(2177,59935
  template <typename Fn> void match(2180,60088
  void printLeft(2184,60186
class PointerToMemberConversionExpr 2194,60385
  const Node *Type;Type2195,60437
  const Node *SubExpr;SubExpr2196,60457
  std::string_view Offset;2197,60480
  PointerToMemberConversionExpr(2200,60516
  template <typename Fn> void match(2205,60772
  void printLeft(2209,60874
class InitListExpr 2219,61061
  const Node *Ty;Ty2220,61096
  NodeArray Inits;2221,61114
  InitListExpr(2223,61141
  template<typename Fn> void match(2226,61247
  void printLeft(2228,61313
class BracedExpr 2237,61466
  const Node *Elem;Elem2238,61499
  const Node *Init;Init2239,61519
  bool IsArray;2240,61539
  BracedExpr(2242,61563
  template<typename Fn> void match(2245,61704
  void printLeft(2247,61780
class BracedRangeExpr 2262,62094
  const Node *First;First2263,62132
  const Node *Last;Last2264,62153
  const Node *Init;Init2265,62173
  BracedRangeExpr(2267,62201
  template<typename Fn> void match(2270,62353
  void printLeft(2272,62427
class FoldExpr 2284,62698
  const Node *Pack,Pack2285,62729
  const Node *Pack, *Init;Init2285,62729
  std::string_view OperatorName;2286,62756
  bool IsLeftFold;2287,62789
  FoldExpr(2290,62817
  template<typename Fn> void match(2295,63043
  void printLeft(2299,63142
class ThrowExpr 2331,64000
  const Node *Op;Op2332,64032
  ThrowExpr(2335,64059
  template<typename Fn> void match(2337,64120
  void printLeft(2339,64179
class BoolExpr 2345,64278
  bool Value;2346,64309
  BoolExpr(2349,64332
  template<typename Fn> void match(2351,64393
  void printLeft(2353,64455
class StringLiteral 2358,64587
  const Node *Type;Type2359,64623
  StringLiteral(2362,64652
  template<typename Fn> void match(2364,64727
  void printLeft(2366,64788
class LambdaExpr 2373,64903
  const Node *Type;Type2374,64936
  LambdaExpr(2377,64965
  template<typename Fn> void match(2379,65034
  void printLeft(2381,65095
class EnumLiteral 2389,65306
  const Node *Ty;Ty2391,65357
  std::string_view Integer;2392,65375
  EnumLiteral(2395,65412
  template<typename Fn> void match(2398,65529
  void printLeft(2400,65597
class IntegerLiteral 2412,65852
  std::string_view Type;2413,65889
  std::string_view Value;2414,65914
  IntegerLiteral(2417,65949
  template<typename Fn> void match(2420,66077
  void printLeft(2422,66145
class RequiresExpr 2439,66473
  NodeArray Parameters;2440,66508
  NodeArray Requirements;2441,66532
  RequiresExpr(2443,66566
  template<typename Fn> void match(2447,66723
  void printLeft(2449,66804
class ExprRequirement 2467,67170
  const Node *Expr;Expr2468,67208
  bool IsNoexcept;2469,67228
  const Node *TypeConstraint;TypeConstraint2470,67247
  ExprRequirement(2472,67285
  template <typename Fn> void match(2477,67501
  void printLeft(2481,67597
class TypeRequirement 2498,67965
  const Node *Type;Type2499,68003
  TypeRequirement(2501,68031
  template <typename Fn> void match(2504,68116
  void printLeft(2506,68178
class NestedRequirement 2513,68298
  const Node *Constraint;Constraint2514,68338
  NestedRequirement(2516,68372
  template <typename Fn> void match(2519,68479
  void printLeft(2521,68547
namespace float_literal_impl 2530,68715
constexpr Node::Kind getFloatLiteralKind(2531,68746
constexpr Node::Kind getFloatLiteralKind(2534,68830
constexpr Node::Kind getFloatLiteralKind(2537,68916
template <class Float> class FloatLiteralImpl 2542,69014
  const std::string_view Contents;2543,69076
  static constexpr Kind KindForClass 2545,69112
  FloatLiteralImpl(2549,69225
  template<typename Fn> void match(2552,69324
  void printLeft(2554,69389
using FloatLiteral 2582,70350
using DoubleLiteral 2583,70396
using LongDoubleLiteral 2584,70444
void Node::visit(visit2589,70625
#define NODE(2591,70671
#define NODE(2601,71054
template <typename Derived,2608,71412
template <typename Derived, typename Alloc> struct AbstractManglingParser 2608,71412
  const char *First;First2609,71488
  const char *Last;Last2610,71509
  PODSmallVector<PODSmallVector2615,71747
  PODSmallVector<Node *, 32> Names;2615,71747
  PODSmallVector<PODSmallVector2620,71950
  PODSmallVector<Node *, 32> Subs;2620,71950
  using TemplateParamList 2624,72075
  class ScopedTemplateParamList 2626,72131
    AbstractManglingParser *Parser;Parser2627,72165
    size_t OldNumTemplateParamLists;2628,72201
    TemplateParamList Params;2629,72238
    ScopedTemplateParamList(2632,72279
    ~ScopedTemplateParamList(2637,72497
    TemplateParamList *params(params2642,72713
  TemplateParamList OuterTemplateParams;2648,72946
  PODSmallVector<PODSmallVector2655,73351
  PODSmallVector<TemplateParamList *, 4> TemplateParams;2655,73351
  class SaveTemplateParams 2657,73409
    AbstractManglingParser *Parser;Parser2658,73438
    SaveTemplateParams(2663,73575
    ~SaveTemplateParams(2669,73858
  PODSmallVector<PODSmallVector2677,74174
  PODSmallVector<ForwardTemplateReference *, 4> ForwardTemplateRefs;2677,74174
  bool TryToParseTemplateArgs 2679,74244
  bool PermitForwardTemplateReferences 2680,74282
  bool InConstraintExpr 2681,74330
  size_t ParsingLambdaParamsAtLevel 2682,74363
  unsigned NumSyntheticTemplateParameters[NumSyntheticTemplateParameters2684,74414
  Alloc ASTAllocator;2686,74466
  AbstractManglingParser(2688,74489
  Derived &getDerived(getDerived2691,74592
  void reset(2693,74659
  template <class T, class... Args> Node *make(make2707,75050
  template <class It> NodeArray makeNodeArray(2711,75196
  NodeArray popTrailingNodeArray(2719,75474
  bool consumeIf(2727,75736
  bool consumeIf(2735,75913
  char consume(2743,76043
  char look(2745,76105
  size_t numLeft(2751,76258
  bool isTemplateParamDecl(2765,76742
  struct NameState 2802,77990
    size_t ForwardTemplateRefsBegin;2807,78182
    NameState(2810,78265
  bool resolveForwardTemplateRefs(2814,78397
  struct OperatorInfo 2842,79489
    enum OIKind 2843,79513
      Prefix,2844,79547
      Postfix,2845,79590
      Binary,2846,79634
      Array,2847,79674
      Member,2848,79722
      New,2849,79769
      Del,2850,79795
      Call,2851,79824
      CCast,2852,79874
      Conditional,2853,79915
      NameOnly,2854,79969
      NamedCast,2856,80075
      OfIdOp,2857,80121
      Unnameable 2859,80166
    char Enc[Enc2861,80203
    OIKind Kind;2862,80237
    bool Flag 2863,80279
    Node::Prec Prec 2864,80324
    const char *Name;Name2865,80363
    constexpr OperatorInfo(2868,80408
        : Enc{E[0], E[1]}, Kind{K}K2870,80529
        : Enc{E[0], E[1]}, Kind{K}, Flag{F}F2870,80529
        : Enc{E[0], E[1]}, Kind{K}, Flag{F}, Prec{P}P2870,80529
    bool operator<(2873,80605
    bool operator<(2876,80697
    bool operator==(operator==2879,80822
    bool operator!=(operator!=2882,80927
    std::string_view getSymbol(2885,81018
    std::string_view getName(2896,81402
    OIKind getKind(2897,81456
    bool getFlag(2898,81500
    Node::Prec getPrecedence(2899,81542
  static const OperatorInfo Ops[Ops2901,81601
  static const size_t NumOps;2902,81636
template <typename Derived,2925,82361
Node *AbstractManglingParser<Derived, Alloc>::parseName(parseName2926,82405
template <typename Derived,2961,83525
Node *AbstractManglingParser<Derived, Alloc>::parseLocalName(parseLocalName2962,83569
template <typename Derived,3001,84726
AbstractManglingParser<Derived, Alloc>::parseUnscopedName(parseUnscopedName3003,84777
template <typename Derived,3042,85969
Node *AbstractManglingParser<Derived, Alloc>::parseUnqualifiedName(parseUnqualifiedName3043,86013
template <typename Derived,3093,87688
bool AbstractManglingParser<Derived, Alloc>::parseModuleNameOpt(parseModuleNameOpt3094,87732
template <typename Derived,3116,88458
AbstractManglingParser<Derived, Alloc>::parseUnnamedTypeName(parseUnnamedTypeName3118,88509
template <typename Derived,3213,91793
Node *AbstractManglingParser<Derived, Alloc>::parseSourceName(parseSourceName3214,91837
template <typename Derived,3228,92259
                                                         Alloc>::Ops[Ops3231,92408
template <typename Derived,3309,97398
const size_t AbstractManglingParser<Derived, Alloc>::NumOps NumOps3310,97442
template <typename Derived,3315,97720
AbstractManglingParser<Derived, Alloc>::parseOperatorEncoding(parseOperatorEncoding3317,97834
template <typename Derived,3341,98561
AbstractManglingParser<Derived, Alloc>::parseOperatorName(parseOperatorName3343,98612
template <typename Derived,3404,100972
AbstractManglingParser<Derived, Alloc>::parseCtorDtorName(parseCtorDtorName3406,101023
template <typename Derived,3461,102892
AbstractManglingParser<Derived, Alloc>::parseNestedName(parseNestedName3463,102943
template <typename Derived,3564,105996
Node *AbstractManglingParser<Derived, Alloc>::parseSimpleId(parseSimpleId3565,106040
template <typename Derived,3580,106528
Node *AbstractManglingParser<Derived, Alloc>::parseDestructorName(parseDestructorName3581,106572
template <typename Derived,3595,106984
Node *AbstractManglingParser<Derived, Alloc>::parseUnresolvedType(parseUnresolvedType3596,107028
template <typename Derived,3621,108184
Node *AbstractManglingParser<Derived, Alloc>::parseBaseUnresolvedName(parseBaseUnresolvedName3622,108228
template <typename Derived,3655,109682
Node *AbstractManglingParser<Derived, Alloc>::parseUnresolvedName(parseUnresolvedName3656,109726
template <typename Derived,3743,112248
Node *AbstractManglingParser<Derived, Alloc>::parseAbiTags(parseAbiTags3744,112292
template <typename Alloc,3757,112617
AbstractManglingParser<Alloc, Derived>::parseNumber(parseNumber3759,112678
template <typename Alloc,3771,113047
bool AbstractManglingParser<Alloc, Derived>::parsePositiveInteger(parsePositiveInteger3772,113091
template <typename Alloc,3783,113369
std::string_view AbstractManglingParser<Alloc, Derived>::parseBareSourceName(parseBareSourceName3784,113413
template <typename Derived,3801,114192
Node *AbstractManglingParser<Derived, Alloc>::parseFunctionType(parseFunctionType3802,114236
template <typename Derived,3871,116233
Node *AbstractManglingParser<Derived, Alloc>::parseVectorType(parseVectorType3872,116277
template <typename Derived,3908,117434
Node *AbstractManglingParser<Derived, Alloc>::parseDecltype(parseDecltype3909,117478
template <typename Derived,3924,117947
Node *AbstractManglingParser<Derived, Alloc>::parseArrayType(parseArrayType3925,117991
template <typename Derived,3953,118686
Node *AbstractManglingParser<Derived, Alloc>::parsePointerToMemberType(parsePointerToMemberType3954,118730
template <typename Derived,3970,119491
Node *AbstractManglingParser<Derived, Alloc>::parseClassEnumType(parseClassEnumType3971,119535
template <typename Derived,3993,120172
Node *AbstractManglingParser<Derived, Alloc>::parseQualifiedType(parseQualifiedType3994,120216
template <typename Derived,4060,122639
Node *AbstractManglingParser<Derived, Alloc>::parseType(parseType4061,122683
template <typename Derived,4441,134063
AbstractManglingParser<Derived, Alloc>::parsePrefixExpr(parsePrefixExpr4443,134114
template <typename Derived,4451,134391
AbstractManglingParser<Derived, Alloc>::parseBinaryExpr(parseBinaryExpr4453,134442
template <typename Derived,4464,134812
Node *AbstractManglingParser<Derived, Alloc>::parseIntegerLiteral(parseIntegerLiteral4465,134856
template <typename Alloc,4474,135132
Qualifiers AbstractManglingParser<Alloc, Derived>::parseCVQualifiers(parseCVQualifiers4475,135176
template <typename Derived,4491,136028
Node *AbstractManglingParser<Derived, Alloc>::parseFunctionParam(parseFunctionParam4492,136072
template <typename Derived,4518,136874
Node *AbstractManglingParser<Derived, Alloc>::parseConversionExpr(parseConversionExpr4519,136918
template <typename Derived,4556,138334
Node *AbstractManglingParser<Derived, Alloc>::parseExprPrimary(parseExprPrimary4557,138378
template <typename Derived,4676,141879
Node *AbstractManglingParser<Derived, Alloc>::parseBracedExpr(parseBracedExpr4677,141923
template <typename Derived,4723,143416
Node *AbstractManglingParser<Derived, Alloc>::parseFoldExpr(parseFoldExpr4724,143460
template <typename Derived,4775,144608
AbstractManglingParser<Derived, Alloc>::parsePointerToMemberConversionExpr(parsePointerToMemberConversionExpr4777,144659
template <typename Derived,4795,145283
Node *AbstractManglingParser<Derived, Alloc>::parseSubobjectExpr(parseSubobjectExpr4796,145327
template <typename Derived,4818,145988
Node *AbstractManglingParser<Derived, Alloc>::parseConstraintExpr(parseConstraintExpr4819,146032
template <typename Derived,4826,146296
Node *AbstractManglingParser<Derived, Alloc>::parseRequiresExpr(parseRequiresExpr4827,146340
template <typename Derived,4931,152421
Node *AbstractManglingParser<Derived, Alloc>::parseExpr(parseExpr4932,152465
template <typename Alloc,5228,161937
bool AbstractManglingParser<Alloc, Derived>::parseCallOffset(parseCallOffset5229,161981
template <typename Derived,5261,163723
Node *AbstractManglingParser<Derived, Alloc>::parseSpecialName(parseSpecialName5262,163767
template <typename Derived,5406,168356
Node *AbstractManglingParser<Derived, Alloc>::parseEncoding(parseEncoding5407,168400
struct FloatData<FloatData5500,171065
    static const size_t mangled_size 5502,171091
    static const size_t max_demangled_size 5503,171133
    static constexpr const char* spec 5504,171182
struct FloatData<FloatData5508,171245
    static const size_t mangled_size 5510,171272
    static const size_t max_demangled_size 5511,171315
    static constexpr const char* spec 5512,171364
struct FloatData<FloatData5516,171426
    static const size_t mangled_size 5521,171625
    static const size_t mangled_size 5523,171736
    static const size_t mangled_size 5525,171785
    static const size_t max_demangled_size 5532,172263
    static constexpr const char *spec spec5533,172312
template <typename Alloc,5536,172364
Node *AbstractManglingParser<Alloc, Derived>::parseFloatingLiteral(parseFloatingLiteral5538,172431
template <typename Alloc,5553,172833
bool AbstractManglingParser<Alloc, Derived>::parseSeqId(parseSeqId5554,172877
template <typename Derived,5586,174033
Node *AbstractManglingParser<Derived, Alloc>::parseSubstitution(parseSubstitution5587,174077
template <typename Derived,5652,175769
Node *AbstractManglingParser<Derived, Alloc>::parseTemplateParam(parseTemplateParam5653,175813
template <typename Derived,5721,178278
Node *AbstractManglingParser<Derived, Alloc>::parseTemplateParamDecl(parseTemplateParamDecl5722,178322
template <typename Derived,5798,180740
Node *AbstractManglingParser<Derived, Alloc>::parseTemplateArg(parseTemplateArg5799,180784
template <typename Derived,5851,182305
AbstractManglingParser<Derived, Alloc>::parseTemplateArgs(parseTemplateArgs5853,182356
template <typename Derived,5906,184130
Node *AbstractManglingParser<Derived, Alloc>::parse(parse5907,184174
struct ManglingParser 5943,185218
  using AbstractManglingParser<AbstractManglingParser5944,185297
                               Alloc>::AbstractManglingParser;AbstractManglingParser5945,185351

/usr/include/llvm/Demangle/Utility.h,1485
#define DEMANGLE_UTILITY_H17,784
class OutputBuffer 32,1081
  char *Buffer Buffer33,1102
  size_t CurrentPosition 34,1128
  size_t BufferCapacity 35,1158
  void grow(38,1251
  OutputBuffer &writeUnsigned(writeUnsigned54,1787
  OutputBuffer(73,2224
  OutputBuffer(75,2318
  operator std::string_view(string_view82,2577
  unsigned CurrentPackIndex 88,2804
  unsigned CurrentPackMax 89,2872
  unsigned GtIsGt 93,3087
  bool isGtInsideTemplateArgs(95,3111
  void printOpen(97,3174
  void printClose(101,3247
  OutputBuffer &operator+=(operator+=106,3324
  OutputBuffer &operator+=(operator+=115,3549
  OutputBuffer &prepend(prepend121,3657
  OutputBuffer &operator<<(operator<<132,3903
  OutputBuffer &operator<<(operator<<134,3976
  OutputBuffer &operator<<(operator<<136,4037
  OutputBuffer &operator<<(operator<<140,4163
  OutputBuffer &operator<<(operator<<144,4255
  OutputBuffer &operator<<(operator<<148,4353
  OutputBuffer &operator<<(operator<<152,4469
  OutputBuffer &operator<<(operator<<156,4566
  void insert(160,4681
  size_t getCurrentPosition(170,4967
  void setCurrentPosition(171,5031
  char back(173,5103
  bool empty(178,5212
  char *getBuffer(getBuffer180,5267
  char *getBufferEnd(getBufferEnd181,5306
  size_t getBufferCapacity(182,5370
template <class T> class ScopedOverride 185,5436
  T &Loc;Loc186,5478
  T Original;187,5488
  ScopedOverride(190,5511
  ScopedOverride(192,5570
  ~ScopedOverride(195,5670

/usr/include/llvm/ExecutionEngine/JITLink/COFF.h,51
#define LLVM_EXECUTIONENGINE_JITLINK_COFF_H14,539

/usr/include/llvm/ExecutionEngine/JITLink/COFF_x86_64.h,58
#define LLVM_EXECUTIONENGINE_JITLINK_COFF_X86_64_H14,545

/usr/include/llvm/ExecutionEngine/JITLink/DWARFRecordSectionSplitter.h,239
#define LLVM_EXECUTIONENGINE_JITLINK_DWARFRECORDSECTIONSPLITTER_H10,436
class DWARFRecordSectionSplitter 21,894
  DWARFRecordSectionSplitter(23,937
  Error operator(24,990
  Error processBlock(27,1034
  StringRef SectionName;29,1116

/usr/include/llvm/ExecutionEngine/JITLink/EHFrameSupport.h,614
#define LLVM_EXECUTIONENGINE_JITLINK_EHFRAMESUPPORT_H14,556
class EHFrameCFIBlockInspector 25,850
  static EHFrameCFIBlockInspector FromEdgeScan(39,1484
  bool isFDE(42,1604
  bool isCIE(45,1718
  Edge *getPersonalityEdge(getPersonalityEdge50,1927
  Edge *getCIEEdge(getCIEEdge60,2266
  Edge *getPCBeginEdge(getPCBeginEdge65,2444
  Edge *getLSDAEdge(getLSDAEdge69,2635
  EHFrameCFIBlockInspector(75,2751
  EHFrameCFIBlockInspector(76,2802
    Edge *PersonalityEdge;PersonalityEdge81,2949
    Edge *LSDAEdge;LSDAEdge82,2976
class EHFrameRegistrar 87,3080
using StoreFrameRangeFunction 102,3595

/usr/include/llvm/ExecutionEngine/JITLink/ELF.h,50
#define LLVM_EXECUTIONENGINE_JITLINK_ELF_H14,535

/usr/include/llvm/ExecutionEngine/JITLink/ELF_aarch32.h,56
#define LLVM_EXECUTIONENGINE_JITLINK_ELF_AARCH3214,545

/usr/include/llvm/ExecutionEngine/JITLink/ELF_aarch64.h,58
#define LLVM_EXECUTIONENGINE_JITLINK_ELF_AARCH64_H16,631

/usr/include/llvm/ExecutionEngine/JITLink/ELF_i386.h,55
#define LLVM_EXECUTIONENGINE_JITLINK_ELF_I386_H16,619

/usr/include/llvm/ExecutionEngine/JITLink/ELF_loongarch.h,60
#define LLVM_EXECUTIONENGINE_JITLINK_ELF_LOONGARCH_H16,635

/usr/include/llvm/ExecutionEngine/JITLink/ELF_ppc64.h,56
#define LLVM_EXECUTIONENGINE_JITLINK_ELF_PPC64_H14,547

/usr/include/llvm/ExecutionEngine/JITLink/ELF_riscv.h,56
#define LLVM_EXECUTIONENGINE_JITLINK_ELF_RISCV_H16,627

/usr/include/llvm/ExecutionEngine/JITLink/ELF_x86_64.h,57
#define LLVM_EXECUTIONENGINE_JITLINK_ELF_X86_64_H14,541

/usr/include/llvm/ExecutionEngine/JITLink/JITLinkDylib.h,181
#define LLVM_EXECUTIONENGINE_JITLINK_JITLINKDYLIB_H14,542
class JITLinkDylib 21,652
  JITLinkDylib(23,681
  const std::string &getName(getName26,784
  std::string Name;29,848

/usr/include/llvm/ExecutionEngine/JITLink/MachO.h,52
#define LLVM_EXECUTIONENGINE_JITLINK_MACHO_H14,543

/usr/include/llvm/ExecutionEngine/JITLink/MachO_arm64.h,58
#define LLVM_EXECUTIONENGINE_JITLINK_MACHO_ARM64_H14,547

/usr/include/llvm/ExecutionEngine/JITLink/MachO_x86_64.h,59
#define LLVM_EXECUTIONENGINE_JITLINK_MACHO_X86_64_H14,549

/usr/include/llvm/ExecutionEngine/JITLink/TableManager.h,339
#define LLVM_EXECUTIONENGINE_JITLINK_TABLEMANAGER_H14,581
template <typename TableManagerImplT> class TableManager 27,1060
  Symbol &getEntryForTarget(getEntryForTarget32,1231
  bool registerPreExistingEntry(61,2350
  TableManagerImplT &impl(impl71,2607
  DenseMap<DenseMap72,2687
  DenseMap<StringRef, Symbol *> Entries;72,2687

/usr/include/llvm/ExecutionEngine/JITLink/i386.h,1258
#define LLVM_EXECUTIONENGINE_JITLINK_I386_H14,554
enum EdgeKind_i386 21,763
  None 24,809
  Pointer32,35,1121
  PCRel32,53,1751
  Pointer16,64,2042
  PCRel16,82,2672
  Delta32,94,2982
  Delta32FromGOT,106,3305
  RequestGOTAndTransformToDelta32FromGOT,126,4048
  BranchPCRel32,144,4740
  BranchPCRel32ToPtrJumpStub,173,5644
  BranchPCRel32ToPtrJumpStubBypassable,189,6262
inline Error applyFixup(197,6487
constexpr uint32_t PointerSize 276,8649
inline Symbol &createAnonymousPointer(createAnonymousPointer298,9341
inline Block &createPointerJumpStubBlock(createPointerJumpStubBlock314,10064
inline Symbol &createAnonymousPointerJumpStub(createAnonymousPointerJumpStub330,10780
class GOTTableManager 339,11137
  static StringRef getSectionName(341,11208
  bool visitEdge(343,11266
  Symbol &createEntry(createEntry370,12182
  Section &getGOTSection(getGOTSection375,12315
  Section *GOTSection GOTSection381,12481
class PLTTableManager 385,12555
  PLTTableManager(387,12626
  static StringRef getSectionName(389,12681
  bool visitEdge(391,12741
  Symbol &createEntry(createEntry407,13423
  Section &getStubsSection(getStubsSection413,13632
  GOTTableManager &GOT;GOT420,13857
  Section *PLTSection PLTSection421,13881

/usr/include/llvm/ExecutionEngine/JITLink/JITLink.h,13479
#define LLVM_EXECUTIONENGINE_JITLINK_JITLINK_H14,542
class JITLinkError 51,1700
  static char ID;53,1762
  JITLinkError(55,1781
  void log(57,1837
  std::string ErrMsg;62,2010
class Edge 66,2092
  using Kind 68,2113
  enum GenericEdgeKind 70,2138
    Invalid,71,2170
    FirstKeepAlive,72,2225
    KeepAlive 73,2300
    FirstRelocation 74,2380
  using OffsetT 77,2461
  using AddendT 78,2489
  Edge(80,2517
  OffsetT getOffset(83,2646
  void setOffset(84,2693
  Kind getKind(85,2753
  void setKind(86,2790
  bool isRelocation(87,2830
  Kind getRelocation(88,2891
  bool isKeepAlive(92,3013
  Symbol &getTarget(getTarget93,3072
  void setTarget(94,3120
  AddendT getAddend(95,3181
  void setAddend(96,3228
  Symbol *Target Target99,3298
  OffsetT Offset 100,3326
  AddendT Addend 101,3348
  Kind K 102,3370
class Addressable 110,3621
  Addressable(114,3679
  Addressable(117,3806
  orc::ExecutorAddr getAddress(129,4216
  void setAddress(130,4275
  bool isDefined(134,4457
  bool isAbsolute(135,4523
  void setAbsolute(138,4601
  orc::ExecutorAddr Address;143,4759
  uint64_t IsDefined 144,4788
  uint64_t IsAbsolute 145,4814
  uint64_t ContentMutable 149,4914
  uint64_t P2Align 150,4945
  uint64_t AlignmentOffset 151,4969
using SectionOrdinal 154,5006
class Block 157,5083
  Block(162,5200
  Block(178,5969
  Block(197,6910
  using EdgeVector 212,7568
  using edge_iterator 213,7608
  using const_edge_iterator 214,7654
  Section &getSection(getSection222,7906
  bool isZeroFill(228,8147
  size_t getSize(231,8244
  orc::ExecutorAddrRange getRange(234,8348
  ArrayRef<char> getContent(239,8532
  void setContent(247,8826
  MutableArrayRef<char> getAlreadyMutableContent(266,9541
  void setMutableContent(276,9970
  bool isContentMutable(289,10512
  uint64_t getAlignment(292,10614
  void setAlignment(295,10717
  uint64_t getAlignmentOffset(301,10949
  void setAlignmentOffset(304,11065
  void addEdge(311,11307
  void addEdge(320,11682
  iterator_range<edge_iterator> edges(323,11794
  iterator_range<const_edge_iterator> edges(328,11950
  size_t edges_size(333,12101
  bool edges_empty(336,12205
  edge_iterator removeEdge(340,12366
  orc::ExecutorAddr getFixupAddress(344,12566
  static constexpr uint64_t MaxAlignmentOffset 349,12680
  void setSection(351,12748
  Section *Parent;Parent353,12812
  const char *Data Data354,12831
  size_t Size 355,12861
  std::vector<Edge> Edges;356,12880
inline uint64_t alignToBlock(360,12977
inline orc::ExecutorAddr alignToBlock(366,13211
enum class Linkage 376,13676
  Strong,377,13707
  Weak,378,13717
using TargetFlagsType 382,13780
enum class Scope 391,14148
  Default,392,14177
  Hidden,393,14188
  Local394,14198
class Symbol 415,14938
  Symbol(419,14989
  static Symbol &constructExternal(constructExternal431,15421
  static Symbol &constructAbsolute(constructAbsolute444,16046
  static Symbol &constructAnonDef(constructAnonDef455,16543
  static Symbol &constructNamedDef(constructNamedDef467,17102
  bool hasName(492,18150
  StringRef getName(495,18274
  void setName(503,18560
  bool isDefined(507,18768
  bool isLive(514,18986
  void setLive(520,19124
  bool isCallable(523,19227
  void setCallable(526,19315
  bool isExternal(529,19463
  bool isAbsolute(535,19675
  Addressable &getAddressable(getAddressable541,19849
  const Addressable &getAddressable(getAddressable547,20036
  Block &getBlock(getBlock553,20243
  const Block &getBlock(getBlock560,20488
  orc::ExecutorAddrDiff getOffset(567,20762
  void setOffset(569,20824
  orc::ExecutorAddr getAddress(575,21018
  orc::ExecutorAddrDiff getSize(578,21137
  void setSize(581,21230
  orc::ExecutorAddrRange getRange(591,21673
  bool isSymbolZeroFill(597,21905
  ArrayRef<char> getSymbolContent(601,22119
  Linkage getLinkage(606,22263
  void setLinkage(609,22368
  Scope getScope(616,22632
  void setScope(619,22734
  TargetFlagsType getTargetFlags(628,23089
  void setTargetFlags(631,23199
  bool isWeaklyReferenced(638,23475
  void setWeaklyReferenced(645,23721
  void makeExternal(651,23881
  void makeAbsolute(661,24188
  void setBlock(668,24383
  static constexpr uint64_t MaxOffset 670,24425
  StringRef Name;673,24540
  Addressable *Base Base674,24558
  uint64_t Offset 675,24589
  uint64_t L 676,24613
  uint64_t S 677,24631
  uint64_t IsLive 678,24649
  uint64_t IsCallable 679,24672
  uint64_t WeakRef 680,24699
  uint64_t TargetFlags 681,24723
  size_t Size 682,24751
class Section 691,24977
  Section(695,25029
  using SymbolSet 698,25160
  using BlockSet 699,25200
  using symbol_iterator 702,25247
  using const_symbol_iterator 703,25294
  using block_iterator 705,25354
  using const_block_iterator 706,25399
  StringRef getName(717,25716
  orc::MemProt getMemProt(720,25815
  void setMemProt(723,25916
  orc::MemLifetime getMemLifetime(726,26032
  void setMemLifetime(729,26145
  SectionOrdinal getOrdinal(732,26252
  bool empty(735,26389
  iterator_range<block_iterator> blocks(738,26505
  iterator_range<const_block_iterator> blocks(743,26674
  BlockSet::size_type blocks_size(748,26840
  iterator_range<symbol_iterator> symbols(751,26977
  iterator_range<const_symbol_iterator> symbols(756,27151
  SymbolSet::size_type symbols_size(761,27321
  void addSymbol(764,27402
  void removeSymbol(769,27538
  void addBlock(774,27671
  void removeBlock(779,27796
  void transferContentTo(784,27918
  StringRef Name;795,28173
  orc::MemProt Prot;796,28191
  orc::MemLifetime ML 797,28212
  SectionOrdinal SecOrdinal 798,28264
  BlockSet Blocks;799,28297
  SymbolSet Symbols;800,28316
class SectionRange 805,28458
  SectionRange(808,28515
  Block *getFirstBlock(getFirstBlock819,28817
  Block *getLastBlock(getLastBlock823,28948
  bool empty(827,29078
  orc::ExecutorAddr getStart(831,29201
  orc::ExecutorAddr getEnd(834,29306
  orc::ExecutorAddrDiff getSize(837,29425
  orc::ExecutorAddrRange getRange(839,29500
  Block *First First844,29615
  Block *Last Last845,29641
class LinkGraph 848,29670
  using SectionMap 850,29697
  using ExternalSymbolMap 851,29765
  using AbsoluteSymbolSet 852,29814
  using BlockSet 853,29862
  Addressable &createAddressable(createAddressable856,29932
  void destroyAddressable(863,30157
  template <typename... ArgTs> Block &createBlock(createBlock868,30258
  void destroyBlock(875,30502
  void destroySymbol(880,30585
  static iterator_range<Section::block_iterator> getSectionBlocks(885,30671
  getSectionConstBlocks(890,30834
  getSectionSymbols(895,30956
  getSectionConstSymbols(900,31075
  struct GetExternalSymbolMapEntryValue 904,31149
    Symbol *operator()(operator()905,31191
  struct GetSectionMapEntryValue 910,31293
    Section &operator()(operator()911,31328
  struct GetSectionMapEntryConstValue 914,31415
    const Section &operator()(operator()915,31455
  using external_symbol_iterator 921,31572
  using absolute_symbol_iterator 924,31713
  using section_iterator 926,31778
  using const_section_iterator 928,31875
  template <typename OuterItrT,931,31990
  template <typename OuterItrT, typename InnerItrT,931,31990
  template <typename OuterItrT, typename InnerItrT, typename T,931,31990
  class nested_collection_iterator934,32155
    nested_collection_iterator(941,32406
    bool operator==(operator==947,32606
    T operator*(951,32743
    nested_collection_iterator operator++(956,32876
    static InnerItrT getInnerBegin(963,33010
    void moveToNonEmptyInnerOrEnd(967,33168
    OuterItrT OuterI,974,33362
    OuterItrT OuterI, OuterE;974,33362
    InnerItrT InnerI;975,33392
  using defined_symbol_iterator 978,33420
      nested_collection_iterator<section_iterator, Section::symbol_iterator,979,33454
                                 Symbol 980,33531
  using const_defined_symbol_iterator 982,33595
                                 Section::const_symbol_iterator,984,33692
                                 Section::const_symbol_iterator, const Symbol 984,33692
  using block_iterator 987,33832
      nested_collection_iterator<section_iterator, Section::block_iterator,988,33857
                                 Block 989,33933
  using const_block_iterator 991,33995
                                 Section::const_block_iterator,993,34083
                                 Section::const_block_iterator, const Block 993,34083
  using GetEdgeKindNameFunction 996,34220
  LinkGraph(998,34284
  LinkGraph(1005,34660
  const std::string &getName(getName1018,35228
  const Triple &getTargetTriple(getTargetTriple1021,35331
  const SubtargetFeatures &getFeatures(getFeatures1024,35439
  unsigned getPointerSize(1027,35562
  llvm::endianness getEndianness(1030,35676
  const char *getEdgeKindName(getEdgeKindName1032,35741
  MutableArrayRef<char> allocateBuffer(1036,35912
  MutableArrayRef<char> allocateContent(1043,36186
  MutableArrayRef<char> allocateContent(1056,36794
  MutableArrayRef<char> allocateCString(1069,37374
  MutableArrayRef<char> allocateCString(1085,38114
  Section &createSection(createSection1095,38575
  Block &createContentBlock(createContentBlock1102,38892
  Block &createMutableContentBlock(createMutableContentBlock1109,39233
  Block &createMutableContentBlock(createMutableContentBlock1122,39914
  Block &createZeroFillBlock(createZeroFillBlock1133,40430
  BinaryStreamReader getBlockContentReader(1140,40773
  BinaryStreamWriter getBlockContentWriter(1148,41125
  using SplitBlockCache 1156,41408
  Symbol &addExternalSymbol(addExternalSymbol1202,43944
  Symbol &addAbsoluteSymbol(addAbsoluteSymbol1213,44416
  Symbol &addAnonymousSymbol(addAnonymousSymbol1228,45184
  Symbol &addDefinedSymbol(addDefinedSymbol1238,45602
  iterator_range<section_iterator> sections(1252,46359
  iterator_range<const_section_iterator> sections(1258,46576
  size_t sections_size(1265,46858
  Section *findSectionByName(findSectionByName1269,47008
  iterator_range<block_iterator> blocks(1276,47173
  iterator_range<const_block_iterator> blocks(1282,47377
  iterator_range<external_symbol_iterator> external_symbols(1288,47605
  iterator_range<absolute_symbol_iterator> absolute_symbols(1296,47948
  iterator_range<defined_symbol_iterator> defined_symbols(1300,48088
  iterator_range<const_defined_symbol_iterator> defined_symbols(1306,48328
  void makeExternal(1316,48808
  void makeAbsolute(1343,49886
  void makeDefined(1365,50776
  transferDefinedSymbol(1399,52020
  void transferBlock(1425,53050
  void mergeSections(1446,53775
  void removeExternalSymbol(1458,54205
  void removeAbsoluteSymbol(1473,54824
  void removeDefinedSymbol(1488,55423
  void removeBlock(1496,55724
  void removeSection(1508,56175
  orc::shared::AllocActions &allocActions(allocActions1520,56659
  BumpPtrAllocator Allocator;1528,56930
  std::string Name;1530,56961
  Triple TT;1531,56981
  SubtargetFeatures Features;1532,56994
  unsigned PointerSize;1533,57024
  llvm::endianness Endianness;1534,57048
  GetEdgeKindNameFunction GetEdgeKindName 1535,57079
  DenseMap<DenseMap1536,57132
  DenseMap<StringRef, std::unique_ptr<Section>> Sections;1536,57132
  ExternalSymbolMap ExternalSymbols;1537,57190
  AbsoluteSymbolSet AbsoluteSymbols;1538,57227
  orc::shared::AllocActions AAs;1539,57264
inline MutableArrayRef<char> Block::getMutableContent(getMutableContent1542,57301
class BlockAddressMap 1549,57565
  using AddrToBlockMap 1551,57597
  using const_iterator 1552,57660
  static bool includeAllBlocks(1555,57771
  static bool includeNonNull(1558,57913
  template <typename PredFn 1564,58120
  void addBlockWithoutChecking(1593,59180
  template <typename BlockPtrRange,1598,59438
            typename PredFn 1599,59474
  void addBlocksWithoutChecking(1611,59970
  const_iterator begin(1617,60170
  const_iterator end(1618,60233
  Block *getBlockAt(getBlockAt1622,60390
  Block *getBlockCovering(getBlockCovering1631,60654
  Error overlapError(1642,60945
  AddrToBlockMap AddrToBlock;1655,61489
class SymbolAddressMap 1659,61558
  using SymbolVector 1661,61591
  void addSymbol(1664,61685
  void addSymbols(1670,61881
  const SymbolVector *getSymbolsAt(getSymbolsAt1677,62100
  std::map<std::map1685,62299
  std::map<orc::ExecutorAddr, SymbolVector> AddrToSymbols;1685,62299
using LinkGraphPassFunction 1689,62402
using LinkGraphPassList 1692,62502
struct PassConfiguration 1696,62676
  LinkGraphPassList PrePrunePasses;1704,62961
  LinkGraphPassList PostPrunePasses;1712,63240
  LinkGraphPassList PostAllocationPasses;1727,63976
  LinkGraphPassList PreFixupPasses;1738,64395
  LinkGraphPassList PostFixupPasses;1747,64710
enum class SymbolLookupFlags 1754,64924
enum class SymbolLookupFlags { RequiredSymbol,1754,64924
enum class SymbolLookupFlags { RequiredSymbol, WeaklyReferencedSymbol 1754,64924
using AsyncLookupResult 1759,65119
class JITLinkAsyncLookupContinuation 1763,65310
createLookupContinuation(1775,65645
class JITLinkContext 1790,66027
  using LookupMap 1792,66058
  JITLinkContext(1795,66150
  const JITLinkDylib *getJITLinkDylib(getJITLinkDylib1801,66333
  const JITLinkDylib *JD JD1851,68939
using AnonymousPointerCreator 1872,69700
using PointerJumpStubCreator 1883,70197
inline void visitEdge(1890,70511
template <typename VisitorT,1895,70751
void visitEdge(1896,70803
void visitExistingEdges(1909,71393

/usr/include/llvm/ExecutionEngine/JITLink/JITLinkMemoryManager.h,2406
#define LLVM_EXECUTIONENGINE_JITLINK_JITLINKMEMORYMANAGER_H14,565
class JITLinkMemoryManager 43,1463
  class FinalizedAlloc 55,1952
    explicit FinalizedAlloc(62,2114
    FinalizedAlloc(67,2335
    ~FinalizedAlloc(77,2717
    explicit operator bool(operator bool84,2996
    orc::ExecutorAddr getAddress(88,3181
    orc::ExecutorAddr release(93,3433
    orc::ExecutorAddr A{A100,3567
  class InFlightAlloc 118,4299
    Expected<FinalizedAlloc> finalize(132,4846
  AllocResult allocate(163,6041
  void deallocate(180,6717
  Error deallocate(187,6996
  Error deallocate(196,7375
class BasicLayout 210,7958
  class Segment 220,8434
    Segment(224,8493
    Align Alignment;227,8617
    size_t ContentSize;228,8638
    uint64_t ZeroFillSize;229,8662
    orc::ExecutorAddr Addr;230,8689
    size_t NextWorkingMemOffset;234,8761
    std::vector<Block *> ContentBlocks,235,8794
    std::vector<Block *> ContentBlocks, ZeroFillBlocks;235,8794
  struct ContiguousPageBasedLayoutSizes 241,9076
    uint64_t total(245,9181
  using SegmentMap 249,9263
  LinkGraph &getGraph(getGraph255,9429
  iterator_range<SegmentMap::iterator> segments(270,10038
  LinkGraph &G;G283,10446
  SegmentMap Segments;284,10462
class SimpleSegmentAlloc 297,11095
  struct Segment 300,11173
    Segment(302,11217
    Align ContentAlign;306,11364
  struct SegmentInfo 310,11459
    orc::ExecutorAddr Addr;311,11482
    MutableArrayRef<char> WorkingMem;312,11510
  using SegmentMap 315,11554
  using OnCreatedFunction 317,11610
  using OnFinalizedFunction 319,11692
  void finalize(337,12415
  Expected<JITLinkMemoryManager::FinalizedAlloc> finalize(342,12543
  std::unique_ptr<LinkGraph> G;352,12829
  orc::AllocGroupSmallMap<Block *> ContentBlocks;353,12861
  std::unique_ptr<JITLinkMemoryManager::InFlightAlloc> Alloc;354,12911
class InProcessMemoryManager 358,13038
  InProcessMemoryManager(366,13305
  using JITLinkMemoryManager::allocate;372,13524
  using JITLinkMemoryManager::deallocate;378,13720
  struct FinalizedAllocInfo 383,13908
    sys::MemoryBlock StandardSegments;384,13938
    std::vector<orc::shared::WrapperFunctionCall> DeallocActions;385,13977
  uint64_t PageSize;392,14199
  std::mutex FinalizedAllocsMutex;393,14220
  RecyclingAllocator<RecyclingAllocator394,14255
  RecyclingAllocator<BumpPtrAllocator, FinalizedAllocInfo> FinalizedAllocInfos;394,14255

/usr/include/llvm/ExecutionEngine/JITLink/aarch32.h,4191
#define LLVM_EXECUTIONENGINE_JITLINK_AARCH3214,566
enum EdgeKind_aarch32 30,1050
  FirstDataRelocation 36,1193
  Data_Delta32 39,1280
  Data_Pointer32,42,1358
  Data_PRel31,45,1456
  Data_RequestGOTAndTransformToDelta32,48,1512
  LastDataRelocation 50,1553
  FirstArmRelocation,55,1705
  Arm_Call 61,1987
  Arm_Jump24,66,2200
  Arm_MovwAbsNC,69,2293
  Arm_MovtAbs,72,2387
  LastArmRelocation 74,2403
  FirstThumbRelocation,79,2532
  Thumb_Call 85,2816
  Thumb_Jump24,90,3077
  Thumb_MovwAbsNC,93,3172
  Thumb_MovtAbs,96,3268
  Thumb_MovwPrelNC,100,3382
  Thumb_MovtPrel,104,3497
  LastThumbRelocation 106,3516
  None,109,3580
  LastRelocation 111,3589
enum TargetFlags_aarch32 115,3672
  ThumbSymbol 116,3717
enum class StubsFlavor 136,4440
  Undefined 137,4465
  pre_v7,138,4482
  v7,139,4492
struct ArmConfig 143,4556
  bool J1J2BranchEncoding 144,4575
  StubsFlavor Stubs 145,4610
  bool Target1Rel 147,4728
inline ArmConfig getArmConfigForCPUArch(151,4824
struct HalfWords 164,5243
  constexpr HalfWords(165,5262
  constexpr HalfWords(166,5304
  const uint16_t Hi;170,5498
  const uint16_t Lo;171,5537
struct FixupInfoBase 175,5639
  virtual ~FixupInfoBase(177,5723
struct FixupInfoArm 181,5818
struct FixupInfoThumb 186,5991
template <EdgeKind_aarch32 Kind> struct FixupInfo 203,6612
struct FixupInfoArmBranch 205,6667
  static constexpr uint32_t Opcode 206,6717
  static constexpr uint32_t ImmMask 207,6766
template <> struct FixupInfo<FixupInfo210,6820
  static constexpr uint32_t OpcodeMask 211,6891
template <> struct FixupInfo<FixupInfo214,6948
  static constexpr uint32_t OpcodeMask 215,7017
  static constexpr uint32_t CondMask 216,7070
  static constexpr uint32_t Unconditional 217,7142
  static constexpr uint32_t BitH 218,7198
  static constexpr uint32_t BitBlx 219,7245
struct FixupInfoArmMov 222,7298
  static constexpr uint32_t OpcodeMask 223,7345
  static constexpr uint32_t ImmMask 224,7398
  static constexpr uint32_t RegMask 225,7448
template <> struct FixupInfo<FixupInfo228,7502
  static constexpr uint32_t Opcode 229,7571
template <> struct FixupInfo<FixupInfo232,7624
  static constexpr uint32_t Opcode 233,7695
template <> struct FixupInfo<FixupInfo236,7748
  static constexpr HalfWords Opcode{Opcode237,7817
  static constexpr HalfWords OpcodeMask{OpcodeMask238,7870
  static constexpr HalfWords ImmMask{ImmMask239,7927
template <> struct FixupInfo<FixupInfo242,7985
  static constexpr HalfWords Opcode{Opcode243,8052
  static constexpr HalfWords OpcodeMask{OpcodeMask244,8105
  static constexpr HalfWords ImmMask{ImmMask245,8162
  static constexpr uint16_t LoBitH 246,8216
  static constexpr uint16_t LoBitNoBlx 247,8261
struct FixupInfoThumbMov 250,8314
  static constexpr HalfWords OpcodeMask{OpcodeMask251,8365
  static constexpr HalfWords ImmMask{ImmMask252,8422
  static constexpr HalfWords RegMask{RegMask253,8476
template <> struct FixupInfo<FixupInfo256,8534
  static constexpr HalfWords Opcode{Opcode257,8607
template <> struct FixupInfo<FixupInfo260,8664
  static constexpr HalfWords Opcode{Opcode261,8738
template <> struct FixupInfo<FixupInfo264,8795
  static constexpr HalfWords Opcode{Opcode265,8870
template <> struct FixupInfo<FixupInfo268,8927
  static constexpr HalfWords Opcode{Opcode269,9003
inline Expected<int64_t> readAddend(286,9847
inline Error applyFixup(313,10870
class GOTBuilder 331,11400
  static StringRef getSectionName(333,11461
  Section *GOTSection GOTSection339,11633
class StubsManager_prev7 346,11937
  static StringRef getSectionName(351,12078
  struct StubMapEntry 361,12392
  std::pair<std::pair367,12512
  std::pair<StubMapEntry *, bool> getStubMapSlot(367,12512
  DenseMap<DenseMap375,12813
  DenseMap<StringRef, StubMapEntry> StubMap;375,12813
  Section *StubsSection StubsSection376,12858
class StubsManager_v7 380,12974
  static StringRef getSectionName(385,13109
  using StubMapEntry 394,13366
  Symbol *&getStubSymbolSlot(getStubSymbolSlot396,13422
  DenseMap<DenseMap403,13632
  DenseMap<StringRef, StubMapEntry> StubMap;403,13632
  Section *StubsSection StubsSection404,13677

/usr/include/llvm/ExecutionEngine/JITLink/aarch64.h,1970
#define LLVM_EXECUTIONENGINE_JITLINK_AARCH64_H14,566
enum EdgeKind_aarch64 25,875
  Pointer64 32,1038
  Pointer32,43,1355
  Delta64,52,1524
  Delta32,65,1840
  NegDelta64,74,2017
  NegDelta32,86,2344
  Branch26PCRel,108,3225
  TestAndBranch14PCRel,130,4107
  CondBranch19PCRel,152,5001
  MoveWide16,165,5366
  LDRLiteral19,181,5935
  ADRLiteral21,195,6288
  Page21,210,6705
  PageOffset12,227,7308
  RequestGOTAndTransformToPage21,247,8017
  RequestGOTAndTransformToPageOffset12,267,8756
  RequestGOTAndTransformToDelta32,287,9492
  RequestTLVPAndTransformToPage21,302,10032
  RequestTLVPAndTransformToPageOffset12,317,10584
  RequestTLSDescEntryAndTransformToPage21,332,11139
  RequestTLSDescEntryAndTransformToPageOffset12,347,11708
inline bool isLoadStoreImm12(355,11937
inline bool isTestAndBranchImm14(360,12094
inline bool isCondBranchImm19(365,12263
inline bool isCompAndBranchImm19(370,12423
inline bool isADR(375,12592
inline unsigned getPageOffset12Shift(386,12954
inline bool isMoveWideImm16(402,13357
inline unsigned getMoveWide16Shift(411,13672
inline Error applyFixup(421,13913
constexpr uint64_t PointerSize 606,21102
inline Symbol &createAnonymousPointer(createAnonymousPointer630,21864
inline Block &createPointerJumpStubBlock(createPointerJumpStubBlock646,22591
inline Symbol &createAnonymousPointerJumpStub(createAnonymousPointerJumpStub659,23196
class GOTTableManager 668,23582
  static StringRef getSectionName(670,23653
  bool visitEdge(672,23711
  Symbol &createEntry(createEntry713,25185
  Section &getGOTSection(getGOTSection718,25318
  Section *GOTSection GOTSection725,25541
class PLTTableManager 729,25615
  PLTTableManager(731,25686
  static StringRef getSectionName(733,25741
  bool visitEdge(735,25801
  Symbol &createEntry(createEntry748,26296
  Section &getStubsSection(getStubsSection754,26505
  GOTTableManager &GOT;GOT761,26738
  Section *StubsSection StubsSection762,26762

/usr/include/llvm/ExecutionEngine/JITLink/loongarch.h,1296
#define LLVM_EXECUTIONENGINE_JITLINK_LOONGARCH_H14,570
enum EdgeKind_loongarch 25,847
  Pointer64 31,1011
  Pointer32,42,1328
  Branch26PCRel,64,2198
  Delta32,77,2520
  NegDelta32,90,2850
  Delta64,99,3020
  Page20,115,3485
  PageOffset12,124,3713
  RequestGOTAndTransformToPage20,144,4426
  RequestGOTAndTransformToPageOffset12,160,4994
inline uint32_t extractBits(168,5207
inline Error applyFixup(173,5384
inline ArrayRef<char> getGOTEntryBlockContent(261,8286
constexpr size_t StubEntrySize 273,8656
inline ArrayRef<char> getStubBlockContent(276,8799
inline Symbol &createAnonymousPointer(createAnonymousPointer291,9366
inline Symbol &createAnonymousPointerJumpStub(createAnonymousPointerJumpStub304,10087
class GOTTableManager 315,10643
  static StringRef getSectionName(317,10714
  bool visitEdge(319,10772
  Symbol &createEntry(createEntry343,11556
  Section &getGOTSection(getGOTSection348,11689
  Section *GOTSection GOTSection355,11912
class PLTTableManager 359,11986
  PLTTableManager(361,12057
  static StringRef getSectionName(363,12112
  bool visitEdge(365,12172
  Symbol &createEntry(createEntry378,12658
  Section &getStubsSection(getStubsSection384,12867
  GOTTableManager &GOT;GOT391,13100
  Section *StubsSection StubsSection392,13124

/usr/include/llvm/ExecutionEngine/JITLink/ppc64.h,2811
#define LLVM_EXECUTIONENGINE_JITLINK_PPC64_H14,571
enum EdgeKind_ppc64 23,855
  Pointer64 24,890
  Pointer32,25,927
  Pointer16,26,940
  Pointer16DS,27,953
  Pointer16HA,28,968
  Pointer16HI,29,983
  Pointer16HIGH,30,998
  Pointer16HIGHA,31,1015
  Pointer16HIGHER,32,1033
  Pointer16HIGHERA,33,1052
  Pointer16HIGHEST,34,1072
  Pointer16HIGHESTA,35,1092
  Pointer16LO,36,1113
  Pointer16LODS,37,1128
  Pointer14,38,1145
  Delta64,39,1158
  Delta34,40,1169
  Delta32,41,1180
  NegDelta32,42,1191
  Delta16,43,1205
  Delta16HA,44,1216
  Delta16HI,45,1229
  Delta16LO,46,1242
  TOC,47,1255
  TOCDelta16,48,1262
  TOCDelta16DS,49,1276
  TOCDelta16HA,50,1292
  TOCDelta16HI,51,1308
  TOCDelta16LO,52,1324
  TOCDelta16LODS,53,1340
  RequestGOTAndTransformToDelta34,54,1358
  CallBranchDelta,55,1393
  CallBranchDeltaRestoreTOC,57,1490
  RequestCall,59,1559
  RequestCallNoTOC,61,1617
  RequestTLSDescInGOTAndTransformToTOCDelta16HA,62,1637
  RequestTLSDescInGOTAndTransformToTOCDelta16LO,63,1686
  RequestTLSDescInGOTAndTransformToDelta34,64,1735
enum PLTCallStubKind 67,1783
  LongBranch,69,1874
  LongBranchSaveR2,71,1969
  LongBranchNoTOC,73,2065
struct PLTCallStubReloc 82,2346
  Edge::Kind K;83,2372
  size_t Offset;84,2388
  Edge::AddendT A;85,2405
struct PLTCallStubInfo 88,2428
  ArrayRef<char> Content;89,2453
  SmallVector<SmallVector90,2479
  SmallVector<PLTCallStubReloc, 2> Relocs;90,2479
inline PLTCallStubInfo pickStub(94,2565
inline Symbol &createAnonymousPointer(createAnonymousPointer131,3771
inline Symbol &createAnonymousPointerJumpStub(createAnonymousPointerJumpStub145,4494
class TOCTableManager 158,5176
  static StringRef getSectionName(161,5324
  bool visitEdge(163,5382
  Symbol &createEntry(createEntry184,5942
  Section &getOrCreateTOCSection(getOrCreateTOCSection189,6083
  Section *TOCSection TOCSection196,6313
class PLTTableManager 200,6389
  PLTTableManager(202,6472
  static StringRef getSectionName(204,6539
  bool visitEdge(210,6866
  Symbol &createEntry(createEntry240,8085
  Section &getOrCreateStubsSection(getOrCreateStubsSection247,8306
  TOCTableManager<Endianness> &TOC;TOC255,8595
  Section *PLTSection PLTSection256,8631
  PLTCallStubKind StubKind;257,8664
inline static uint16_t ha(264,8825
inline static uint64_t lo(265,8894
inline static uint16_t hi(266,8955
inline static uint64_t high(267,9013
inline static uint64_t higha(268,9084
inline static uint64_t higher(271,9169
inline static uint64_t highera(272,9242
inline static uint16_t highest(275,9329
inline static uint16_t highesta(276,9392
inline static uint64_t readPrefixedInstruction(285,9921
inline static void writePrefixedInstruction(292,10205
inline Error relocateHalf16(299,10486
inline Error applyFixup(357,12222

/usr/include/llvm/ExecutionEngine/JITLink/riscv.h,923
#define LLVM_EXECUTIONENGINE_JITLINK_RISCV_H14,562
enum EdgeKind_riscv 24,841
  R_RISCV_32 32,1050
  R_RISCV_64,39,1213
  R_RISCV_BRANCH,46,1357
  R_RISCV_JAL,53,1517
  R_RISCV_CALL,59,1629
  R_RISCV_CALL_PLT,65,1749
  R_RISCV_GOT_HI20,71,1875
  R_RISCV_PCREL_HI20,77,2028
  R_RISCV_PCREL_LO12_I,83,2211
  R_RISCV_PCREL_LO12_S,89,2396
  R_RISCV_HI20,95,2553
  R_RISCV_LO12_I,101,2695
  R_RISCV_LO12_S,108,2880
  R_RISCV_ADD8,114,3003
  R_RISCV_ADD16,120,3125
  R_RISCV_ADD32,126,3249
  R_RISCV_ADD64,132,3373
  R_RISCV_SUB8,138,3498
  R_RISCV_SUB16,144,3623
  R_RISCV_SUB32,150,3749
  R_RISCV_SUB64,156,3875
  R_RISCV_RVC_BRANCH,162,4004
  R_RISCV_RVC_JUMP,168,4137
  R_RISCV_SUB6,174,4265
  R_RISCV_SET6,180,4376
  R_RISCV_SET8,186,4487
  R_RISCV_SET16,192,4598
  R_RISCV_SET32,198,4710
  R_RISCV_32_PCREL,204,4838
  CallRelaxable,210,5061
  AlignRelaxable,216,5278
  NegDelta32,222,5397

/usr/include/llvm/ExecutionEngine/JITLink/x86_64.h,1850
#define LLVM_EXECUTIONENGINE_JITLINK_X86_64_H14,564
enum EdgeKind_x86_64 24,841
  Pointer64 31,1003
  Pointer32,42,1320
  Pointer32Signed,52,1628
  Pointer16,63,1927
  Pointer8,74,2217
  Delta64,83,2385
  Delta32,96,2701
  NegDelta64,105,2878
  NegDelta32,117,3205
  Delta64FromGOT,129,3530
  BranchPCRel32,147,4198
  PCRel32,165,4832
  BranchPCRel32ToPtrJumpStub,194,5737
  BranchPCRel32ToPtrJumpStubBypassable,210,6355
  RequestGOTAndTransformToDelta32,230,7090
  RequestGOTAndTransformToDelta64,250,7820
  RequestGOTAndTransformToDelta64FromGOT,271,8585
  PCRel32GOTLoadRelaxable,285,9011
  PCRel32GOTLoadREXRelaxable,300,9538
  RequestGOTAndTransformToPCRel32GOTLoadREXRelaxable,321,10302
  RequestGOTAndTransformToPCRel32GOTLoadRelaxable,342,11084
  PCRel32TLVPLoadREXRelaxable,364,11999
  RequestTLSDescInGOTAndTransformToDelta32,367,12073
  RequestTLVPAndTransformToPCRel32TLVPLoadREXRelaxable,384,12680
  FirstPlatformRelocation386,12777
inline Error applyFixup(394,12991
constexpr uint64_t PointerSize 508,16225
inline Symbol &createAnonymousPointer(createAnonymousPointer530,16927
inline Block &createPointerJumpStubBlock(createPointerJumpStubBlock546,17652
inline Symbol &createAnonymousPointerJumpStub(createAnonymousPointerJumpStub558,18215
class GOTTableManager 567,18572
  static StringRef getSectionName(569,18643
  bool visitEdge(571,18701
  Symbol &createEntry(createEntry610,20085
  Section &getGOTSection(getGOTSection615,20218
  Section *GOTSection GOTSection621,20384
class PLTTableManager 625,20458
  PLTTableManager(627,20529
  static StringRef getSectionName(629,20584
  bool visitEdge(631,20644
  Symbol &createEntry(createEntry647,21330
  Section &getStubsSection(getStubsSection653,21539
  GOTTableManager &GOT;GOT660,21764
  Section *PLTSection PLTSection661,21788

/usr/include/llvm/ExecutionEngine/Orc/Shared/AllocationActions.h,407
#define LLVM_EXECUTIONENGINE_ORC_SHARED_ALLOCATIONACTIONS_H14,575
struct AllocActionCallPair 35,1339
  WrapperFunctionCall Finalize;36,1368
  WrapperFunctionCall Dealloc;37,1400
using AllocActions 44,1640
inline size_t numDeallocActions(50,1899
using SPSAllocActionCallPair 73,2855
  using AL 79,3066
  static size_t size(82,3123
  static bool serialize(86,3231
  static bool deserialize(91,3396

/usr/include/llvm/ExecutionEngine/Orc/Shared/ExecutorAddress.h,2532
#define LLVM_EXECUTIONENGINE_ORC_SHARED_EXECUTORADDRESS_H14,566
class ExecutorAddr 31,1006
  class Tag 44,1461
    constexpr Tag(46,1485
    template <typename T> constexpr T *operator()(operator()49,1589
    uintptr_t TagMask;54,1743
  class Untag 59,1903
    constexpr Untag(61,1929
    template <typename T> constexpr T *operator()(operator()64,2060
    uintptr_t UntagMask;69,2216
  explicit constexpr ExecutorAddr(75,2327
  template <typename T,79,2510
  template <typename T,87,2873
  toPtr(89,3003
  template <typename T,97,3362
  toPtr(99,3472
  uint64_t getValue(105,3699
  void setValue(106,3744
  bool isNull(107,3798
  explicit operator bool(operator bool109,3843
  friend bool operator==(operator==111,3899
  friend bool operator!=(operator!=115,4014
  friend bool operator<(119,4129
  friend bool operator<=(operator<=123,4242
  friend bool operator>(127,4357
  friend bool operator>=(operator>=131,4470
  ExecutorAddr &operator++(operator++135,4585
  ExecutorAddr &operator--(operator--139,4650
  ExecutorAddr operator++(143,4715
  ExecutorAddr operator--(144,4779
  ExecutorAddr &operator+=(operator+=146,4844
  ExecutorAddr &operator-=(operator-=151,4946
inline ExecutorAddrDiff operator-(161,5130
inline ExecutorAddr operator+(167,5368
inline ExecutorAddr operator+(173,5587
inline ExecutorAddr operator-(179,5812
inline ExecutorAddrDiff operator%(185,6039
struct ExecutorAddrRange 191,6272
  ExecutorAddrRange(193,6332
  ExecutorAddrRange(195,6424
  bool empty(198,6531
  ExecutorAddrDiff size(199,6577
  friend bool operator==(operator==201,6634
  friend bool operator!=(operator!=205,6807
  friend bool operator<(209,6949
  friend bool operator<=(operator<=214,7157
  friend bool operator>(219,7368
  friend bool operator>=(operator>=224,7576
  bool contains(230,7788
  bool overlaps(231,7869
  ExecutorAddr Start;235,7980
  ExecutorAddr End;236,8002
inline raw_ostream &operator<<(operator<<239,8026
inline raw_ostream &operator<<(operator<<243,8149
namespace shared 247,8310
class SPSExecutorAddr 249,8330
using SPSExecutorAddrRange 271,8938
  static size_t size(277,9149
  static bool serialize(282,9358
  static bool deserialize(287,9549
using SPSExecutorAddrRangeSequence 293,9740
template <> struct DenseMapInfo<DenseMapInfo299,9908
  static inline orc::ExecutorAddr getEmptyKey(300,9961
  static inline orc::ExecutorAddr getTombstoneKey(303,10084
  static unsigned getHashValue(307,10216
  static bool isEqual(311,10351

/usr/include/llvm/ExecutionEngine/Orc/Shared/OrcError.h,889
#define LLVM_EXECUTIONENGINE_ORC_SHARED_ORCERROR_H14,580
enum class OrcErrorCode 24,779
  UnknownORCError 26,827
  DuplicateDefinition,27,850
  JITSymbolNotFound,28,873
  RemoteAllocatorDoesNotExist,29,894
  RemoteAllocatorIdAlreadyInUse,30,925
  RemoteMProtectAddrUnrecognized,31,958
  RemoteIndirectStubsOwnerDoesNotExist,32,992
  RemoteIndirectStubsOwnerIdAlreadyInUse,33,1032
  RPCConnectionClosed,34,1074
  RPCCouldNotNegotiateFunction,35,1097
  RPCResponseAbandoned,36,1129
  UnexpectedRPCCall,37,1153
  UnexpectedRPCResponse,38,1174
  UnknownErrorCodeFromRemote,39,1199
  UnknownResourceHandle,40,1229
  MissingSymbolDefinitions,41,1254
  UnexpectedSymbolDefinitions,42,1282
class DuplicateDefinition 47,1366
  static char ID;49,1442
  std::string SymbolName;56,1660
class JITSymbolNotFound 59,1690
  static char ID;61,1762
  std::string SymbolName;68,1978

/usr/include/llvm/ExecutionEngine/Orc/Shared/SimplePackedSerialization.h,5097
#define LLVM_EXECUTIONENGINE_ORC_SHARED_SIMPLEPACKEDSERIALIZATION_H33,1405
class SPSOutputBuffer 55,1908
  SPSOutputBuffer(57,1940
  bool write(59,2038
class SPSInputBuffer 75,2379
  SPSInputBuffer(78,2440
  bool read(80,2543
  const char *data(data89,2725
  bool skip(90,2771
  const char *Buffer Buffer99,2918
  size_t Remaining 100,2950
template <typename SPSTagT,105,3071
template <typename SPSTagT, typename ConcreteT,105,3071
template <typename SPSTagT, typename ConcreteT, typename _ 105,3071
template <> class SPSArgList<SPSArgList112,3330
  static size_t size(114,3371
  static bool serialize(116,3409
  static bool deserialize(117,3471
  static bool serializeToSmallVector(119,3535
  static bool deserializeFromSmallVector(121,3616
template <typename SPSTagT,127,3765
  using OutputBuffer 132,4004
  template <typename ArgT,134,4045
  static size_t size(135,4091
  template <typename ArgT,140,4271
  static bool serialize(141,4317
  template <typename ArgT,147,4564
  static bool deserialize(148,4610
  static size_t size(169,5592
  static bool serialize(171,5664
  static bool deserialize(178,5896
class SPSEmpty 190,6241
template <typename... SPSTagTs> class SPSTuple 196,6385
  typedef SPSArgList<SPSTagTs...> AsArgList;199,6499
template <typename SPSTagT> class SPSOptional 208,6829
using SPSString 217,7173
template <typename SPSTagT1,222,7298
using SPSMap 223,7346
  static size_t size(228,7513
  static bool serialize(229,7568
  static bool deserialize(232,7656
template <typename SPSElementTagT,244,8156
class TrivialSPSSequenceSerialization 245,8219
  static constexpr bool available 247,8267
template <typename SPSElementTagT,260,8819
class TrivialSPSSequenceDeserialization 261,8882
  static constexpr bool available 263,8932
  static constexpr bool available 269,9118
  static constexpr bool available 275,9307
  using element_type 277,9350
  static void reserve(279,9380
  static bool append(280,9454
template <typename SPSElementTagT,287,9619
  static constexpr bool available 290,9746
template <typename SPSElementTagT,294,9867
  static constexpr bool available 297,9996
  using element_type 299,10039
  static void reserve(301,10100
  static bool append(302,10177
template <typename SPSElementTagT,309,10347
  static constexpr bool available 312,10478
template <typename SPSElementTagT,316,10603
  static constexpr bool available 319,10736
  using element_type 321,10779
  static void reserve(323,10844
  static bool append(324,10925
template <typename SPSElementTagT,331,11099
template <typename SPSElementTagT, typename T,331,11099
    : public TrivialSPSSequenceSerialization<TrivialSPSSequenceSerialization333,11231
template <typename SPSElementTagT,337,11441
template <typename SPSElementTagT, typename T,337,11441
    : public TrivialSPSSequenceDeserialization<TrivialSPSSequenceDeserialization339,11575
template <typename SPSElementTagT,343,11780
  static constexpr bool available 346,11904
  static size_t size(354,12166
  static bool serialize(359,12313
  static bool deserialize(367,12625
template <typename SPSElementTagT,381,13133
  static size_t size(386,13419
  static bool serialize(393,13642
  static bool deserialize(402,13937
template <typename... SPSTagTs,420,14496
  using TupleArgList 423,14626
  using ArgIndices 424,14692
  static size_t size(427,14785
  static bool serialize(432,14948
  static bool deserialize(438,15168
  static size_t size(444,15365
  static bool serialize(448,15455
  static bool deserialize(452,15578
template <typename SPSTagT1,458,15743
template <typename SPSTagT1, typename SPSTagT2,458,15743
template <typename SPSTagT1, typename SPSTagT2, typename T1,458,15743
  static size_t size(461,15905
  static bool serialize(466,16059
  static bool deserialize(471,16256
template <typename SPSTagT,478,16504
  static size_t size(481,16623
  static bool serialize(488,16814
  static bool deserialize(496,17057
  static size_t size(515,17598
  static bool serialize(520,17740
  static bool deserialize(528,18041
template <typename SPSValueT,542,18409
  static size_t size(546,18588
  static bool serialize(553,18831
  static bool deserialize(564,19154
namespace detail 591,19811
struct SPSSerializableError 602,20291
  std::string ErrMsg;604,20346
template <typename T> struct SPSSerializableExpected 612,20532
  bool HasValue 613,20587
  T Value{Value614,20612
  std::string ErrMsg;615,20625
inline SPSSerializableError toSPSSerializable(618,20651
inline Error fromSPSSerializable(624,20791
SPSSerializableExpected<T> toSPSSerializable(631,20998
Expected<T> fromSPSSerializable(639,21189
  static size_t size(652,21575
  static bool serialize(659,21794
  static bool deserialize(669,22109
template <typename SPSTagT,683,22498
  static size_t size(687,22664
  static bool serialize(696,22950
  static bool deserialize(707,23294
  static size_t size(724,23869
  static bool serialize(730,24111
template <typename SPSTagT,740,24489
  static size_t size(743,24593
  static bool serialize(747,24713

/usr/include/llvm/ExecutionEngine/Orc/Shared/SimpleRemoteEPCUtils.h,1890
#define LLVM_EXECUTIONENGINE_ORC_SHARED_SIMPLEREMOTEEPCUTILS_H15,613
enum class SimpleRemoteEPCOpcode 37,1244
  Setup,38,1289
  Hangup,39,1298
  Result,40,1308
  CallWrapper,41,1318
  LastOpC 42,1333
struct SimpleRemoteEPCExecutorInfo 45,1361
  std::string TargetTriple;46,1398
  uint64_t PageSize;47,1426
  StringMap<std::vector<char>> BootstrapMap;48,1447
  StringMap<ExecutorAddr> BootstrapSymbols;49,1492
using SimpleRemoteEPCArgBytesVector 52,1540
class SimpleRemoteEPCTransportClient 54,1603
  enum HandleMessageAction 56,1650
  enum HandleMessageAction { ContinueSession,56,1650
  enum HandleMessageAction { ContinueSession, EndSession 56,1650
class SimpleRemoteEPCTransport 78,2595
class FDSimpleRemoteEPCTransport 103,3548
  Create(113,4023
  FDSimpleRemoteEPCTransport(127,4363
  std::mutex M;135,4656
  SimpleRemoteEPCTransportClient &C;C136,4672
  std::thread ListenerThread;137,4709
  int InFD,138,4739
  int InFD, OutFD;138,4739
  std::atomic<bool> Disconnected{Disconnected139,4758
struct RemoteSymbolLookupSetElement 142,4803
  std::string Name;143,4841
  bool Required;144,4861
using RemoteSymbolLookupSet 147,4882
struct RemoteSymbolLookup 149,4956
  uint64_t H;150,4984
  RemoteSymbolLookupSet Symbols;151,4998
namespace shared 154,5035
using SPSRemoteSymbolLookupSetElement 156,5055
using SPSRemoteSymbolLookupSet 158,5123
using SPSRemoteSymbolLookup 160,5203
using SPSSimpleRemoteEPCExecutorInfo 163,5350
    SPSTuple<SPSString, uint64_t,164,5389
             SPSSequence<SPSSequence165,5423
             SPSSequence<SPSSequence166,5489
  static size_t size(190,6315
  static size_t serialize(194,6453
  static size_t deserialize(199,6695
  static size_t size(209,7018
  static bool serialize(214,7223
  static bool deserialize(220,7485
using SPSLoadDylibSignature 226,7723
using SPSLookupSymbolsSignature 229,7881

/usr/include/llvm/ExecutionEngine/Orc/Shared/WrapperFunctionUtils.h,6937
#define LLVM_EXECUTIONENGINE_ORC_SHARED_WRAPPERFUNCTIONUTILS_H14,556
union CWrapperFunctionResultDataUnion 27,920
  char *ValuePtr;ValuePtr28,960
  char Value[Value29,978
  CWrapperFunctionResultDataUnion Data;34,1089
  size_t Size;35,1129
} CWrapperFunctionResult;36,1144
class WrapperFunctionResult 40,1265
  WrapperFunctionResult(43,1349
  WrapperFunctionResult(50,1615
  WrapperFunctionResult(58,1850
  WrapperFunctionResult &operator=(operator=63,1952
  ~WrapperFunctionResult(69,2117
  CWrapperFunctionResult release(79,2523
  char *data(data87,2711
  const char *data(data94,2991
  size_t size(101,3280
  bool empty(109,3546
  static WrapperFunctionResult allocate(113,3732
  static WrapperFunctionResult copyFrom(123,4017
  static WrapperFunctionResult copyFrom(130,4263
  static WrapperFunctionResult copyFrom(135,4449
  static WrapperFunctionResult createOutOfBandError(140,4623
  static WrapperFunctionResult createOutOfBandError(150,4925
  const char *getOutOfBandError(getOutOfBandError156,5168
  static void init(161,5276
  CWrapperFunctionResult R;166,5376
namespace detail 169,5408
template <typename SPSArgListT,171,5428
serializeViaSPSToWrapperFunctionResult(173,5501
template <typename RetT> class WrapperFunctionHandlerCaller 182,5869
public:public183,5931
  static decltype(185,6008
template <> class WrapperFunctionHandlerCaller<WrapperFunctionHandlerCaller191,6194
public:public192,6249
  static SPSEmpty call(194,6326
template <typename WrapperFunctionImplT,201,6516
class WrapperFunctionHandlerHelper203,6633
template <typename RetT,208,6837
template <typename RetT, typename... ArgTs,208,6837
  using ArgTuple 213,7084
  using ArgIndices 214,7139
  static WrapperFunctionResult apply(217,7252
  static bool deserialize(233,7857
template <typename RetT,241,8159
template <typename RetT, typename... ArgTs,241,8159
template <typename ClassT,249,8594
template <typename ClassT, typename RetT,249,8594
template <typename ClassT, typename RetT, typename... ArgTs,249,8594
class WrapperFunctionHandlerHelper<WrapperFunctionHandlerHelper251,8731
template <typename ClassT,257,9050
template <typename ClassT, typename RetT,257,9050
template <typename ClassT, typename RetT, typename... ArgTs,257,9050
class WrapperFunctionHandlerHelper<WrapperFunctionHandlerHelper259,9187
template <typename WrapperFunctionImplT,264,9458
class WrapperFunctionAsyncHandlerHelper266,9575
template <typename RetT,271,9789
template <typename RetT, typename SendResultT,271,9789
template <typename RetT, typename SendResultT, typename... ArgTs,271,9789
  using ArgTuple 276,10081
  using ArgIndices 277,10136
  template <typename HandlerT,279,10218
  static void applyAsync(280,10286
  static bool deserialize(302,11110
  template <typename HandlerT,308,11365
  template <typename HandlerT, typename SerializeAndSendResultT,308,11365
            typename ArgTupleT,309,11430
  static void callAsync(310,11480
template <typename RetT,320,11904
template <typename RetT, typename... ArgTs,320,11904
template <typename ClassT,328,12359
template <typename ClassT, typename RetT,328,12359
template <typename ClassT, typename RetT, typename... ArgTs,328,12359
class WrapperFunctionAsyncHandlerHelper<WrapperFunctionAsyncHandlerHelper330,12496
template <typename ClassT,336,12835
template <typename ClassT, typename RetT,336,12835
template <typename ClassT, typename RetT, typename... ArgTs,336,12835
class WrapperFunctionAsyncHandlerHelper<WrapperFunctionAsyncHandlerHelper338,12972
template <typename SPSRetTagT,343,13263
template <typename SPSRetTagT, typename RetT> class ResultSerializer 343,13263
  static WrapperFunctionResult serialize(345,13342
  static WrapperFunctionResult serialize(353,13581
  static WrapperFunctionResult serialize(362,13852
template <typename SPSRetTagT,368,14040
  static WrapperFunctionResult serialize(371,14141
template <typename SPSRetTagT,377,14324
template <typename SPSRetTagT, typename RetT> class ResultDeserializer 377,14324
  static RetT makeValue(379,14405
  static void makeSafe(380,14450
  static Error deserialize(382,14491
  static Error makeValue(394,14910
  static void makeSafe(395,14966
  static Error deserialize(397,15032
template <typename SPSTagT,409,15457
  static Expected<T> makeValue(412,15567
  static void makeSafe(413,15616
  static Error deserialize(415,15685
template <typename SPSRetTagT,428,16157
template <typename SPSRetTagT, typename RetT> class AsyncCallResultHelper 428,16157
template <typename SPSRetTagT,436,16382
class WrapperFunction<WrapperFunction437,16435
  using ResultSerializer 440,16520
public:public442,16592
  static Error call(446,16794
  template <typename AsyncCallerFn,473,17943
  template <typename AsyncCallerFn, typename SendDeserializedResultFn,473,17943
  static void callAsync(475,18045
  static WrapperFunctionResult handle(517,19727
  template <typename HandlerT,526,20166
  static void handleAsync(527,20219
  template <typename T> static const T &makeSerializable(makeSerializable536,20641
  static detail::SPSSerializableError makeSerializable(540,20739
  static detail::SPSSerializableExpected<T> makeSerializable(545,20890
class WrapperFunction<WrapperFunction551,21060
public:public554,21157
  static Error call(556,21215
  template <typename AsyncCallerFn,561,21383
  template <typename AsyncCallerFn, typename SendDeserializedResultFn,561,21383
  static void callAsync(563,21485
  using WrapperFunction<SPSEmpty(SPSTagTs...)>::handle;handle575,21972
  using WrapperFunction<SPSEmpty(SPSTagTs...)>::handleAsync;handleAsync576,22028
template <typename RetT,601,22943
template <typename RetT, typename ClassT,601,22943
class MethodWrapperHandler 602,23004
  using MethodT 604,23041
  MethodWrapperHandler(605,23087
  RetT operator()(operator()606,23131
  MethodT M;611,23276
template <typename RetT,615,23365
template <typename RetT, typename ClassT,615,23365
makeMethodWrapperHandler(617,23471
class WrapperFunctionCall 628,24001
  using ArgDataBufferType 630,24037
  template <typename SPSSerializer,634,24189
  static Expected<WrapperFunctionCall> Create(635,24244
  WrapperFunctionCall(651,24978
  const ExecutorAddr &getCallee(getCallee655,25144
  const ArgDataBufferType &getArgData(getArgData658,25237
  explicit operator bool(operator bool661,25374
  shared::WrapperFunctionResult run(664,25481
  template <typename SPSRetT,672,25782
  std::enable_if_t<!std::is_same<SPSRetT, void>::value,value673,25827
  runWithSPSRet(674,25890
  std::enable_if_t<std::enable_if_t688,26536
  runWithSPSRet(689,26598
  Error runWithSPSRetErrorMerged(696,26839
  orc::ExecutorAddr FnAddr;704,27066
  ArgDataBufferType ArgData;705,27094
using SPSWrapperFunctionCall 708,27127
  static size_t size(713,27301
  static bool serialize(718,27499
  static bool deserialize(723,27735

/usr/include/llvm/ExecutionEngine/Orc/Shared/ExecutorSymbolDef.h,505
#define LLVM_EXECUTIONENGINE_ORC_SHARED_EXECUTORSYMBOLDEF_H14,569
class ExecutorSymbolDef 24,894
  ExecutorSymbolDef(27,961
  const ExecutorAddr &getAddress(getAddress30,1057
  const JITSymbolFlags &getFlags(getFlags32,1116
  void setFlags(34,1176
  ExecutorAddr Addr;48,1605
  JITSymbolFlags Flags;49,1626
namespace shared 52,1654
using SPSExecutorSymbolDef 82,2665
  using DefArgList 87,2870
  static size_t size(90,2933
  static bool serialize(94,3054
  static bool deserialize(98,3210

/usr/include/llvm/ExecutionEngine/Orc/Shared/MemoryFlags.h,1962
#define LLVM_EXECUTIONENGINE_ORC_SHARED_MEMORYFLAGS_H15,601
enum class MemProt 27,917
  None 28,938
  Read 29,950
  Write 30,968
  Exec 31,987
  LLVM_MARK_AS_BITMASK_ENUM(32,1005
  LLVM_MARK_AS_BITMASK_ENUM(/* LargestValue = */ Exec)32,1005
inline sys::Memory::ProtectionFlags toSysMemoryProtectionFlags(44,1463
inline MemProt fromSysMemoryProtectionFlags(57,1982
enum class MemLifetime 75,2610
  Standard,78,2788
  Finalize,83,2961
  NoAlloc88,3179
inline raw_ostream &operator<<(operator<<92,3223
class AllocGroup 110,3618
  using underlying_type 113,3686
  static constexpr unsigned BitsForProt 114,3721
  static constexpr unsigned BitsForLifetimePolicy 115,3766
  static constexpr unsigned MaxIdentifiers 116,3821
  static constexpr unsigned NumGroups 120,3926
  AllocGroup(128,4184
  AllocGroup(131,4313
  MemProt getMemProt(136,4510
  MemLifetime getMemLifetime(141,4657
  friend bool operator==(operator==145,4757
  friend bool operator!=(operator!=149,4864
  friend bool operator<(153,4968
  AllocGroup(158,5082
  underlying_type Id 159,5133
template <typename T> class AllocGroupSmallMap 165,5269
  using ElemT 167,5327
  using VectorTy 168,5369
  static bool compareKey(170,5412
  using iterator 175,5513
  AllocGroupSmallMap(178,5596
  iterator begin(183,5743
  iterator end(184,5788
  iterator find(185,5829
  bool empty(190,5954
  size_t size(191,6001
  VectorTy Elems;201,6259
inline raw_ostream &operator<<(operator<<205,6306
template <> struct DenseMapInfo<DenseMapInfo211,6475
  static inline orc::MemProt getEmptyKey(212,6523
  static inline orc::MemProt getTombstoneKey(213,6604
  static unsigned getHashValue(216,6699
  static bool isEqual(220,6879
template <> struct DenseMapInfo<DenseMapInfo225,6984
  static inline orc::AllocGroup getEmptyKey(226,7035
  static inline orc::AllocGroup getTombstoneKey(229,7128
  static unsigned getHashValue(232,7229
  static bool isEqual(235,7375

/usr/include/llvm/ExecutionEngine/Orc/Shared/ObjectFormats.h,63
#define LLVM_EXECUTIONENGINE_ORC_SHARED_OBJECTFORMATS_H14,552

/usr/include/llvm/ExecutionEngine/Orc/Shared/OrcRTBridge.h,61
#define LLVM_EXECUTIONENGINE_ORC_SHARED_ORCRTBRIDGE_H14,575

/usr/include/llvm/ExecutionEngine/Orc/Shared/PerfSharedStructs.h,2208
#define LLVM_EXECUTIONENGINE_ORC_SHARED_PERFSHAREDSTRUCTS_H14,580
enum class PerfJITRecordType 24,825
  JIT_CODE_LOAD 25,856
  JIT_CODE_MOVE 26,877
  JIT_CODE_DEBUG_INFO 27,931
  JIT_CODE_CLOSE 28,958
  JIT_CODE_UNWINDING_INFO 29,1017
  JIT_CODE_MAX31,1064
struct PerfJITRecordPrefix 34,1083
  PerfJITRecordType Id;35,1112
  uint32_t TotalSize;36,1172
struct PerfJITCodeLoadRecord 38,1197
  PerfJITRecordPrefix Prefix;39,1228
  uint32_t Pid;41,1259
  uint32_t Tid;42,1275
  uint64_t Vma;43,1291
  uint64_t CodeAddr;44,1307
  uint64_t CodeSize;45,1328
  uint64_t CodeIndex;46,1349
  std::string Name;47,1371
struct PerfJITDebugEntry 50,1395
  uint64_t Addr;51,1422
  uint32_t Lineno;52,1439
  uint32_t Discrim;53,1495
  std::string Name;54,1553
struct PerfJITDebugInfoRecord 57,1577
  PerfJITRecordPrefix Prefix;58,1609
  uint64_t CodeAddr;60,1640
  std::vector<PerfJITDebugEntry> Entries;61,1661
struct PerfJITCodeUnwindingInfoRecord 64,1707
  PerfJITRecordPrefix Prefix;65,1747
  uint64_t UnwindDataSize;67,1778
  uint64_t EHFrameHdrSize;68,1805
  uint64_t MappedSize;69,1832
  uint64_t EHFrameHdrAddr;71,1911
  std::string EHFrameHdr;72,1938
  uint64_t EHFrameAddr;74,1965
struct PerfJITRecordBatch 79,2101
  std::vector<PerfJITDebugInfoRecord> DebugInfoRecords;80,2129
  std::vector<PerfJITCodeLoadRecord> CodeLoadRecords;81,2185
  PerfJITCodeUnwindingInfoRecord UnwindingRecord;83,2274
namespace shared 88,2355
using SPSPerfJITRecordPrefix 90,2375
using SPSPerfJITCodeLoadRecord 112,3163
  static size_t size(119,3419
  static bool deserialize(125,3644
  static bool serialize(131,3899
using SPSPerfJITDebugEntry 138,4160
  static size_t size(143,4333
  static bool deserialize(148,4535
  static bool serialize(153,4727
using SPSPerfJITDebugInfoRecord 159,4970
  static size_t size(166,5258
  static bool deserialize(170,5468
  static bool serialize(174,5663
using SPSPerfJITCodeUnwindingInfoRecord 181,5889
  static size_t size(188,6190
  static bool deserialize(193,6461
  static bool serialize(199,6788
using SPSPerfJITRecordBatch 207,7120
  static size_t size(213,7446
  static bool deserialize(217,7628
  static bool serialize(221,7840

/usr/include/llvm/ExecutionEngine/Orc/Shared/TargetProcessControlTypes.h,2891
#define LLVM_EXECUTIONENGINE_ORC_SHARED_TARGETPROCESSCONTROLTYPES_H15,620
struct RemoteAllocGroup 34,1285
  RemoteAllocGroup(36,1343
  RemoteAllocGroup(37,1392
  RemoteAllocGroup(39,1506
  MemProt Prot;45,1783
struct SegFinalizeRequest 49,1836
  RemoteAllocGroup RAG;50,1864
  ExecutorAddr Addr;51,1888
  uint64_t Size;52,1909
  ArrayRef<char> Content;53,1926
struct FinalizeRequest 56,1956
  std::vector<SegFinalizeRequest> Segments;57,1981
  shared::AllocActions Actions;58,2025
struct SharedMemorySegFinalizeRequest 61,2061
  RemoteAllocGroup RAG;62,2101
  ExecutorAddr Addr;63,2125
  uint64_t Size;64,2146
struct SharedMemoryFinalizeRequest 67,2167
  std::vector<SharedMemorySegFinalizeRequest> Segments;68,2204
  shared::AllocActions Actions;69,2260
template <typename T> struct UIntWrite 72,2296
  UIntWrite(74,2362
  ExecutorAddr Addr;76,2433
  T Value 77,2454
using UInt8Write 81,2509
using UInt16Write 84,2586
using UInt32Write 87,2665
using UInt64Write 90,2744
struct BufferWrite 94,2882
  BufferWrite(96,2930
  ExecutorAddr Addr;99,3020
  StringRef Buffer;100,3041
struct PointerWrite 105,3162
  PointerWrite(107,3212
  ExecutorAddr Addr;110,3303
  ExecutorAddr Value;111,3324
using DylibHandle 115,3419
using LookupResult 117,3454
namespace shared 121,3537
using SPSSegFinalizeRequest 125,3585
    SPSTuple<SPSRemoteAllocGroup, SPSExecutorAddr,126,3615
    SPSTuple<SPSRemoteAllocGroup, SPSExecutorAddr, uint64_t,126,3615
using SPSFinalizeRequest 128,3697
using SPSSharedMemorySegFinalizeRequest 131,3844
    SPSTuple<SPSRemoteAllocGroup, SPSExecutorAddr,132,3886
using SPSSharedMemoryFinalizeRequest 134,3949
using SPSMemoryAccessUIntWrite 139,4123
using SPSMemoryAccessUInt8Write 141,4187
using SPSMemoryAccessUInt16Write 142,4256
using SPSMemoryAccessUInt32Write 143,4327
using SPSMemoryAccessUInt64Write 144,4398
using SPSMemoryAccessBufferWrite 146,4470
using SPSMemoryAccessPointerWrite 147,4551
  enum WireBits 151,4724
    ReadBit 152,4742
    WriteBit 153,4764
    ExecBit 154,4787
    FinalizeBit 155,4809
  using SFRAL 198,6128
  static size_t size(201,6187
  static bool serialize(205,6322
  static bool deserialize(210,6514
  using FRAL 218,6798
  static size_t size(221,6853
  static bool serialize(225,6966
  static bool deserialize(230,7136
  using SFRAL 238,7431
  static size_t size(241,7502
  static bool serialize(245,7636
  static bool deserialize(250,7827
  using FRAL 259,8163
  static size_t size(262,8230
  static bool serialize(266,8355
  static bool deserialize(271,8537
  static size_t size(281,8864
  static bool serialize(285,9000
  static bool deserialize(290,9231
  static size_t size(300,9595
  static bool serialize(305,9756
  static bool deserialize(310,9951
  static size_t size(321,10354
  static bool serialize(326,10575
  static bool deserialize(331,10767

/usr/include/llvm/ExecutionEngine/Orc/TargetProcess/ExecutorBootstrapService.h,164
#define LLVM_EXECUTIONENGINE_ORC_TARGETPROCESS_EXECUTORBOOTSTRAPSERVICE_H16,677
class ExecutorBootstrapService 24,880
  virtual ~ExecutorBootstrapService(26,921

/usr/include/llvm/ExecutionEngine/Orc/TargetProcess/ExecutorSharedMemoryMapperService.h,340
#define LLVM_EXECUTIONENGINE_ORC_TARGETPROCESS_EXECUTORSHAREDMEMORYMAPPERSERVICE_H10,453
  struct Allocation 43,1438
    std::vector<shared::WrapperFunctionCall> DeinitializationActions;44,1460
  struct Reservation 48,1596
    size_t Size;49,1619
    std::vector<ExecutorAddr> Allocations;50,1636
    HANDLE SharedMemoryFile;52,1699

/usr/include/llvm/ExecutionEngine/Orc/TargetProcess/RegisterEHFrames.h,73
#define LLVM_EXECUTIONENGINE_ORC_TARGETPROCESS_REGISTEREHFRAMES_H17,707

/usr/include/llvm/ExecutionEngine/Orc/TargetProcess/SimpleExecutorMemoryManager.h,463
#define LLVM_EXECUTIONENGINE_ORC_TARGETPROCESS_SIMPLEEXECUTORMEMORYMANAGER_H16,677
class SimpleExecutorMemoryManager 32,1204
  virtual ~SimpleExecutorMemoryManager(34,1282
  Expected<ExecutorAddr> allocate(36,1325
  Error finalize(37,1375
  Error deallocate(38,1424
  Error shutdown(40,1485
  struct Allocation 44,1589
    std::vector<shared::WrapperFunctionCall> DeallocationActions;46,1632
  std::mutex M;62,2137
  AllocationsMap Allocations;63,2153

/usr/include/llvm/ExecutionEngine/Orc/TargetProcess/SimpleRemoteEPCServer.h,1790
#define LLVM_EXECUTIONENGINE_ORC_TARGETPROCESS_SIMPLEREMOTEEPCSERVER_H14,565
class SimpleRemoteEPCServer 36,1333
  class Dispatcher 41,1510
    virtual ~Dispatcher(43,1541
  class ThreadDispatcher 49,1692
    void dispatch(51,1749
    std::condition_variable OutstandingCV;58,1932
  class Setup 62,1988
    SimpleRemoteEPCServer &server(server66,2055
    StringMap<std::vector<char>> &bootstrapMap(bootstrapMap67,2105
    template <typename T,68,2179
    void setBootstrapMapValue(69,2223
    StringMap<ExecutorAddr> &bootstrapSymbols(bootstrapSymbols78,2671
    std::vector<std::unique_ptr<ExecutorBootstrapService>> &services(services79,2748
    void setDispatcher(82,2850
    void setErrorReporter(83,2928
    Setup(88,3062
    SimpleRemoteEPCServer &S;S89,3108
    StringMap<std::vector<char>> BootstrapMap;90,3138
    StringMap<ExecutorAddr> BootstrapSymbols;91,3185
    std::vector<std::unique_ptr<ExecutorBootstrapService>> Services;92,3231
  template <typename TransportT,97,3367
  Create(99,3491
  void setErrorReporter(136,4868
  uint64_t getNextSeqNo(173,6469
  void releaseSeqNo(174,6519
  std::mutex ServerStateMutex;179,6666
  std::condition_variable ShutdownCV;180,6697
  enum { ServerRunning,181,6735
  enum { ServerRunning, ServerShuttingDown,181,6735
  enum { ServerRunning, ServerShuttingDown, ServerShutDown 181,6735
  enum { ServerRunning, ServerShuttingDown, ServerShutDown } RunState;181,6735
  std::unique_ptr<SimpleRemoteEPCTransport> T;183,6846
  std::unique_ptr<Dispatcher> D;184,6893
  std::vector<std::unique_ptr<ExecutorBootstrapService>> Services;185,6926
  ReportErrorFunction ReportError;186,6993
  PendingJITDispatchResultsMap PendingJITDispatchResults;189,7055
  std::vector<sys::DynamicLibrary> Dylibs;190,7113

/usr/include/llvm/ExecutionEngine/Orc/TargetProcess/TargetExecutionUtils.h,77
#define LLVM_EXECUTIONENGINE_ORC_TARGETPROCESS_TARGETEXECUTIONUTILS_H14,577

/usr/include/llvm/ExecutionEngine/Orc/TargetProcess/JITLoaderGDB.h,603
#define LLVM_EXECUTIONENGINE_ORC_TARGETPROCESS_JITLOADERGDB_H14,589
  JIT_NOACTION 23,802
  JIT_REGISTER_FN,24,822
  JIT_UNREGISTER_FN25,841
} jit_actions_t;26,861
struct jit_code_entry 28,879
  struct jit_code_entry *next_entry;next_entry29,903
  struct jit_code_entry *prev_entry;prev_entry30,940
  const char *symfile_addr;symfile_addr31,977
  uint64_t symfile_size;32,1005
struct jit_descriptor 35,1034
  uint32_t version;36,1058
  uint32_t action_flag;39,1166
  struct jit_code_entry *relevant_entry;relevant_entry40,1190
  struct jit_code_entry *first_entry;first_entry41,1231

/usr/include/llvm/ExecutionEngine/Orc/TargetProcess/JITLoaderPerf.h,70
#define LLVM_EXECUTIONENGINE_ORC_TARGETPROCESS_JITLOADERPERF_H14,592

/usr/include/llvm/ExecutionEngine/Orc/TargetProcess/SimpleExecutorDylibManager.h,223
#define LLVM_EXECUTIONENGINE_ORC_TARGETPROCESS_SIMPLEEXECUTORDYLIBMANAGER_H17,714
class SimpleExecutorDylibManager 36,1410
  virtual ~SimpleExecutorDylibManager(38,1487
  std::mutex M;56,2072
  DylibSet Dylibs;57,2088

/usr/include/llvm/ExecutionEngine/Orc/COFFPlatform.h,2256
#define LLVM_EXECUTIONENGINE_ORC_COFFPLATFORM_H14,551
class COFFPlatform 33,1143
  ExecutionSession &getExecutionSession(getExecutionSession57,2246
  ObjectLinkingLayer &getObjectLinkingLayer(getObjectLinkingLayer58,2309
  static ArrayRef<ArrayRef72,2945
  static ArrayRef<ArrayRef75,3095
  static StringRef getSEHFrameSectionName(78,3188
  class COFFPlatformPlugin 94,3933
    COFFPlatformPlugin(96,4008
    Error notifyFailed(107,4465
    Error notifyRemovingResources(111,4572
    void notifyTransferringResources(115,4684
    std::mutex PluginMutex;132,5488
    COFFPlatform &CP;CP133,5516
    InitSymbolDepMap InitSymbolDeps;134,5538
  struct JDBootstrapState 137,5581
    std::string JDName;139,5637
    ExecutorAddr HeaderAddr;140,5661
    std::list<COFFObjectSectionsMap> ObjectSectionsMaps;141,5690
    SmallVector<SmallVector142,5747
    SmallVector<std::pair<std::string, ExecutorAddr>> Initializers;142,5747
  ExecutionSession &ES;ES187,7687
  ObjectLinkingLayer &ObjLinkingLayer;ObjLinkingLayer188,7711
  LoadDynamicLibrary LoadDynLibrary;190,7751
  std::unique_ptr<COFFVCRuntimeBootstrapper> VCRuntimeBootstrap;191,7788
  std::unique_ptr<MemoryBuffer> OrcRuntimeArchiveBuffer;192,7853
  std::unique_ptr<object::Archive> OrcRuntimeArchive;193,7910
  bool StaticVCRuntime;194,7964
  SymbolStringPtr COFFHeaderStartSymbol;196,7989
  std::map<std::map199,8067
  std::map<JITDylib *, JDBootstrapState> JDBootstrapStates;199,8067
  std::atomic<bool> Bootstrapping;200,8127
  ExecutorAddr orc_rt_coff_platform_bootstrap;202,8163
  ExecutorAddr orc_rt_coff_platform_shutdown;203,8210
  ExecutorAddr orc_rt_coff_register_object_sections;204,8256
  ExecutorAddr orc_rt_coff_deregister_object_sections;205,8309
  ExecutorAddr orc_rt_coff_register_jitdylib;206,8364
  ExecutorAddr orc_rt_coff_deregister_jitdylib;207,8410
  DenseMap<DenseMap209,8459
  DenseMap<JITDylib *, ExecutorAddr> JITDylibToHeaderAddr;209,8459
  DenseMap<DenseMap210,8518
  DenseMap<ExecutorAddr, JITDylib *> HeaderAddrToJITDylib;210,8518
  DenseMap<DenseMap212,8578
  DenseMap<JITDylib *, SymbolLookupSet> RegisteredInitSymbols;212,8578
  std::set<std::string> DylibsToPreload;214,8642
  std::mutex PlatformMutex;216,8684

/usr/include/llvm/ExecutionEngine/Orc/DebugObjectManagerPlugin.h,714
#define LLVM_EXECUTIONENGINE_ORC_DEBUGOBJECTMANAGERPLUGIN_H14,573
class DebugObjectManagerPlugin 48,1741
  DebugObjectManagerPlugin(51,1870
  DebugObjectManagerPlugin(69,2785
  ~DebugObjectManagerPlugin(72,2985
  void notifyMaterializing(74,3017
  ExecutionSession &ES;ES90,3757
  std::map<std::map93,3839
  std::map<MaterializationResponsibility *, OwnedDebugObject> PendingObjs;93,3839
  std::map<std::map94,3914
  std::map<ResourceKey, std::vector<OwnedDebugObject>> RegisteredObjs;94,3914
  std::mutex PendingObjsLock;96,3986
  std::mutex RegisteredObjsLock;97,4016
  std::unique_ptr<DebugObjectRegistrar> Target;99,4050
  bool RequireDebugSections;100,4098
  bool AutoRegisterCode;101,4127

/usr/include/llvm/ExecutionEngine/Orc/EPCGenericRTDyldMemoryManager.h,1343
#define LLVM_EXECUTIONENGINE_ORC_EPCGENERICRTDYLDMEMORYMANAGER_H15,620
#define DEBUG_TYPE 20,794
class EPCGenericRTDyldMemoryManager 26,911
  struct SymbolAddrs 29,1035
    ExecutorAddr Instance;30,1058
    ExecutorAddr Reserve;31,1085
    ExecutorAddr Finalize;32,1111
    ExecutorAddr Deallocate;33,1138
    ExecutorAddr RegisterEHFrame;34,1167
    ExecutorAddr DeregisterEHFrame;35,1201
  struct SectionAlloc 79,3023
    SectionAlloc(81,3057
    uint64_t Size;85,3211
    unsigned Align;86,3230
    std::unique_ptr<uint8_t[]> Contents;87,3250
    ExecutorAddr RemoteAddr;88,3291
  struct SectionAllocGroup 94,3495
    ExecutorAddrRange RemoteCode;101,3810
    ExecutorAddrRange RemoteROData;102,3844
    ExecutorAddrRange RemoteRWData;103,3880
    std::vector<ExecutorAddrRange> UnfinalizedEHFrames;104,3916
    std::vector<SectionAlloc> CodeAllocs,105,3972
    std::vector<SectionAlloc> CodeAllocs, RODataAllocs,105,3972
    std::vector<SectionAlloc> CodeAllocs, RODataAllocs, RWDataAllocs;105,3972
  ExecutorProcessControl &EPC;EPC113,4281
  SymbolAddrs SAs;114,4312
  std::mutex M;116,4332
  std::vector<SectionAllocGroup> Unmapped;117,4348
  std::vector<SectionAllocGroup> Unfinalized;118,4391
  std::vector<ExecutorAddr> FinalizedAllocs;119,4437
  std::string ErrMsg;120,4482
#undef DEBUG_TYPE126,4556

/usr/include/llvm/ExecutionEngine/Orc/EPCIndirectionUtils.h,1562
#define LLVM_EXECUTIONENGINE_ORC_EPCINDIRECTIONUTILS_H15,660
class EPCIndirectionUtils 30,1079
  class ABISupport 36,1247
    ABISupport(38,1281
    virtual ~ABISupport(46,1670
    unsigned getPointerSize(48,1698
    unsigned getTrampolineSize(49,1758
    unsigned getStubSize(50,1824
    unsigned getStubToPointerMaxDisplacement(51,1878
    unsigned getResolverCodeSize(54,1982
    virtual void writeResolverCode(56,2053
  Create(89,3407
  ExecutorProcessControl &getExecutorProcessControl(getExecutorProcessControl94,3559
  ABISupport &getABISupport(getABISupport97,3705
  ExecutorAddr getResolverBlockAddress(111,4359
  LazyCallThroughManager &getLazyCallThroughManager(getLazyCallThroughManager126,4962
  struct IndirectStubInfo 134,5196
    IndirectStubInfo(136,5258
    ExecutorAddr StubAddress;138,5404
    ExecutorAddr PointerAddress;139,5434
  std::mutex EPCUIMutex;150,5765
  ExecutorProcessControl &EPC;EPC151,5790
  std::unique_ptr<ABISupport> ABI;152,5821
  ExecutorAddr ResolverBlockAddr;153,5856
  FinalizedAlloc ResolverBlock;154,5890
  std::unique_ptr<TrampolinePool> TP;155,5922
  std::unique_ptr<LazyCallThroughManager> LCTM;156,5960
  std::vector<IndirectStubInfo> AvailableIndirectStubs;158,6009
  std::vector<FinalizedAlloc> IndirectStubAllocs;159,6065
namespace detail 175,6679
class ABISupportImpl 178,6726
  ABISupportImpl(180,6798
  void writeResolverCode(185,7005
  void writeTrampolines(193,7375
  void writeIndirectStubsBlock(202,7790
EPCIndirectionUtils::CreateWithABI(CreateWithABI216,8350

/usr/include/llvm/ExecutionEngine/Orc/IRCompileLayer.h,610
#define LLVM_EXECUTIONENGINE_ORC_IRCOMPILELAYER_H14,583
class IRCompileLayer 31,933
  class IRCompiler 33,981
    IRCompiler(35,1012
    const IRSymbolMapper::ManglingOptions &getManglingOptions(getManglingOptions37,1113
    IRSymbolMapper::ManglingOptions &manglingOptions(manglingOptions43,1301
    IRSymbolMapper::ManglingOptions MO;46,1383
  IRCompiler &getCompiler(getCompiler55,1666
  mutable std::mutex IRLayerMutex;63,1898
  ObjectLayer &BaseLayer;BaseLayer64,1933
  std::unique_ptr<IRCompiler> Compile;65,1959
  const IRSymbolMapper::ManglingOptions *ManglingOpts;ManglingOpts66,1998

/usr/include/llvm/ExecutionEngine/Orc/IRTransformLayer.h,279
#define LLVM_EXECUTIONENGINE_ORC_IRTRANSFORMLAYER_H14,566
class IRTransformLayer 27,966
  IRTransformLayer(32,1149
  void setTransform(35,1280
  static ThreadSafeModule identityTransform(42,1487
  IRLayer &BaseLayer;BaseLayer48,1663
  TransformFunction Transform;49,1685

/usr/include/llvm/ExecutionEngine/Orc/Layer.h,1052
#define LLVM_EXECUTIONENGINE_ORC_LAYER_H14,518
class IRMaterializationUnit 31,1172
  const ThreadSafeModule &getModule(getModule53,2184
  ThreadSafeModule TSM;56,2256
  SymbolNameToDefinitionMap SymbolToDefinition;57,2280
class IRLayer 67,2593
  IRLayer(69,2617
  ExecutionSession &getExecutionSession(getExecutionSession75,2794
  const IRSymbolMapper::ManglingOptions *&getManglingOptions(getManglingOptions78,2899
  void setCloneToNewContextOnEmit(91,3518
  bool getCloneToNewContextOnEmit(96,3719
  Error add(104,4083
  bool CloneToNewContextOnEmit 113,4373
  ExecutionSession &ES;ES114,4413
  const IRSymbolMapper::ManglingOptions *&MO;MO115,4437
class BasicIRLayerMaterializationUnit 120,4592
  IRLayer &L;L129,4941
class ObjectLayer 133,5010
  static char ID;135,5082
  ExecutionSession &getExecutionSession(getExecutionSession141,5217
  Error add(155,5943
  ExecutionSession &ES;ES170,6576
class BasicObjectLayerMaterializationUnit 175,6732
  ObjectLayer &L;L192,7470
  std::unique_ptr<MemoryBuffer> O;193,7488

/usr/include/llvm/ExecutionEngine/Orc/LazyReexports.h,1092
#define LLVM_EXECUTIONENGINE_ORC_LAZYREEXPORTS_H17,765
class LazyCallThroughManager 38,1479
  LazyCallThroughManager(43,1609
  getCallThroughTrampoline(49,1868
  void resolveTrampolineLandingAddress(52,2011
  struct ReexportsEntry 62,2316
    JITDylib *SourceJD;SourceJD63,2342
    SymbolStringPtr SymbolName;64,2366
  void setTrampolinePool(70,2604
  std::mutex LCTMMutex;77,2815
  ExecutionSession &ES;ES78,2839
  ExecutorAddr ErrorHandlerAddr;79,2863
  ReexportsMap Reexports;81,2928
  NotifiersMap Notifiers;82,2954
class LocalLazyCallThroughManager 86,3064
  using NotifyTargetResolved 88,3141
  LocalLazyCallThroughManager(90,3210
  template <typename ORCABI> Error init(94,3389
  std::unique_ptr<TrampolinePool> TP;111,3923
  Create(118,4172
class LazyReexportsMaterializationUnit 140,5083
  LazyCallThroughManager &LCTManager;LCTManager156,5773
  IndirectStubsManager &ISManager;ISManager157,5811
  JITDylib &SourceJD;SourceJD158,5846
  SymbolAliasMap CallableAliases;159,5868
  ImplSymbolMap *AliaseeTable;AliaseeTable160,5902
lazyReexports(167,6225

/usr/include/llvm/ExecutionEngine/Orc/LookupAndRecordAddrs.h,63
#define LLVM_EXECUTIONENGINE_ORC_LOOKUPANDRECORDADDRS_H17,688

/usr/include/llvm/ExecutionEngine/Orc/Mangling.h,323
#define LLVM_EXECUTIONENGINE_ORC_MANGLING_H14,537
class MangleAndInterner 26,868
  MangleAndInterner(28,902
  SymbolStringPtr operator(29,967
  ExecutionSession &ES;ES32,1023
  const DataLayout &DL;DL33,1047
class IRSymbolMapper 39,1211
  struct ManglingOptions 41,1242
  using SymbolNameToDefinitionMap 45,1305

/usr/include/llvm/ExecutionEngine/Orc/MapperJITLinkMemoryManager.h,623
#define LLVM_EXECUTIONENGINE_ORC_MAPPERJITLINKMEMORYMANAGER_H14,573
class MapperJITLinkMemoryManager 23,819
  MapperJITLinkMemoryManager(25,901
  CreateWithMapper(30,1144
  using JITLinkMemoryManager::allocate;42,1649
  using JITLinkMemoryManager::deallocate;47,1835
  std::mutex Mutex;52,1911
  size_t ReservationUnits;55,1998
  AvailableMemoryMap::Allocator AMAllocator;59,2158
  IntervalMap<IntervalMap60,2203
  IntervalMap<ExecutorAddr, bool> AvailableMemory;60,2203
  DenseMap<DenseMap63,2325
  DenseMap<ExecutorAddr, ExecutorAddrDiff> UsedMemory;63,2325
  std::unique_ptr<MemoryMapper> Mapper;65,2381

/usr/include/llvm/ExecutionEngine/Orc/MemoryMapper.h,1276
#define LLVM_EXECUTIONENGINE_ORC_MEMORYMAPPER_H14,567
class MemoryMapper 26,872
  struct AllocInfo 30,1021
    struct SegInfo 31,1042
      ExecutorAddrDiff Offset;32,1063
      const char *WorkingMem;WorkingMem33,1094
      size_t ContentSize;34,1124
      size_t ZeroFillSize;35,1150
      AllocGroup AG;36,1177
    ExecutorAddr MappingBase;39,1206
    std::vector<SegInfo> Segments;40,1236
    shared::AllocActions Actions;41,1271
class InProcessMemoryMapper 82,2856
  unsigned int getPageSize(88,3028
  struct Allocation 105,3592
    size_t Size;106,3614
    std::vector<shared::WrapperFunctionCall> DeinitializationActions;107,3631
  using AllocationMap 109,3706
  struct Reservation 111,3767
    size_t Size;112,3790
    std::vector<ExecutorAddr> Allocations;113,3807
  using ReservationMap 115,3855
  std::mutex Mutex;117,3912
  ReservationMap Reservations;118,3932
  AllocationMap Allocations;119,3963
  size_t PageSize;121,3993
  struct SymbolAddrs 126,4079
    ExecutorAddr Instance;127,4102
    ExecutorAddr Reserve;128,4129
    ExecutorAddr Initialize;129,4155
    ExecutorAddr Deinitialize;130,4184
    ExecutorAddr Release;131,4215
  struct Reservation 157,5027
    void *LocalAddr;LocalAddr158,5050
    size_t Size;159,5071

/usr/include/llvm/ExecutionEngine/Orc/ObjectFileInterface.h,62
#define LLVM_EXECUTIONENGINE_ORC_OBJECTFILEINTERFACE_H15,599

/usr/include/llvm/ExecutionEngine/Orc/ObjectTransformLayer.h,234
#define LLVM_EXECUTIONENGINE_ORC_OBJECTTRANSFORMLAYER_H14,575
class ObjectTransformLayer24,794
  static char ID;27,891
  void setTransform(39,1306
  ObjectLayer &BaseLayer;BaseLayer44,1415
  TransformFunction Transform;45,1441

/usr/include/llvm/ExecutionEngine/Orc/OrcABISupport.h,2941
#define LLVM_EXECUTIONENGINE_ORC_ORCABISUPPORT_H18,725
struct IndirectStubsAllocationSizes 29,999
getIndirectStubsBlockSizes(37,1177
class OrcGenericABI 55,2015
  static constexpr unsigned PointerSize 57,2045
  static constexpr unsigned TrampolineSize 58,2106
  static constexpr unsigned StubSize 59,2154
  static constexpr unsigned StubToPointerMaxDisplacement 60,2196
  static constexpr unsigned ResolverCodeSize 61,2258
  static void writeResolverCode(63,2309
  static void writeTrampolines(71,2677
  static void writeIndirectStubsBlock(79,3050
class OrcAArch64 89,3458
  static constexpr unsigned PointerSize 91,3485
  static constexpr unsigned TrampolineSize 92,3530
  static constexpr unsigned StubSize 93,3579
  static constexpr unsigned StubToPointerMaxDisplacement 94,3621
  static constexpr unsigned ResolverCodeSize 95,3690
class OrcX86_64_Base 130,5434
  static constexpr unsigned PointerSize 132,5465
  static constexpr unsigned TrampolineSize 133,5510
  static constexpr unsigned StubSize 134,5558
  static constexpr unsigned StubToPointerMaxDisplacement 135,5600
class OrcX86_64_SysV 158,6707
  static constexpr unsigned ResolverCodeSize 160,6762
class OrcX86_64_Win32 178,7555
  static constexpr unsigned ResolverCodeSize 180,7611
class OrcI386 198,8384
  static constexpr unsigned PointerSize 200,8408
  static constexpr unsigned TrampolineSize 201,8453
  static constexpr unsigned StubSize 202,8501
  static constexpr unsigned StubToPointerMaxDisplacement 203,8543
  static constexpr unsigned ResolverCodeSize 204,8611
class OrcMips32_Base 239,10336
  static constexpr unsigned PointerSize 241,10367
  static constexpr unsigned TrampolineSize 242,10412
  static constexpr unsigned StubSize 243,10461
  static constexpr unsigned StubToPointerMaxDisplacement 244,10503
  static constexpr unsigned ResolverCodeSize 245,10571
class OrcMips32Le 276,12262
  static void writeResolverCode(278,12314
class OrcMips32Be 287,12729
  static void writeResolverCode(289,12781
class OrcMips64 301,13256
  static constexpr unsigned PointerSize 303,13282
  static constexpr unsigned TrampolineSize 304,13327
  static constexpr unsigned StubSize 305,13376
  static constexpr unsigned StubToPointerMaxDisplacement 306,13419
  static constexpr unsigned ResolverCodeSize 307,13487
class OrcRiscv64 341,15218
  static constexpr unsigned PointerSize 343,15245
  static constexpr unsigned TrampolineSize 344,15290
  static constexpr unsigned StubSize 345,15339
  static constexpr unsigned StubToPointerMaxDisplacement 346,15382
  static constexpr unsigned ResolverCodeSize 347,15450
class OrcLoongArch64 381,17188
  static constexpr unsigned PointerSize 383,17219
  static constexpr unsigned TrampolineSize 384,17264
  static constexpr unsigned StubSize 385,17313
  static constexpr unsigned StubToPointerMaxDisplacement 386,17356
  static constexpr unsigned ResolverCodeSize 387,17424

/usr/include/llvm/ExecutionEngine/Orc/SimpleRemoteEPC.h,942
#define LLVM_EXECUTIONENGINE_ORC_SIMPLEREMOTEEPC_H14,551
class SimpleRemoteEPC 31,1122
  struct Setup 37,1468
    unique_function<CreateMemoryManagerFn> CreateMemoryManager;44,1719
    unique_function<CreateMemoryAccessFn> CreateMemoryAccess;45,1783
  template <typename TransportT,49,1923
  Create(51,2041
  SimpleRemoteEPC(97,3772
  uint64_t getNextSeqNo(119,4763
  void releaseSeqNo(120,4813
  std::mutex SimpleRemoteEPCMutex;125,4937
  std::condition_variable DisconnectCV;126,4972
  std::unique_ptr<SimpleRemoteEPCTransport> T;130,5084
  std::unique_ptr<jitlink::JITLinkMemoryManager> OwnedMemMgr;131,5131
  std::unique_ptr<MemoryAccess> OwnedMemAccess;132,5193
  std::unique_ptr<EPCGenericDylibManager> DylibMgr;134,5242
  ExecutorAddr RunAsMainAddr;135,5294
  ExecutorAddr RunAsVoidFunctionAddr;136,5324
  ExecutorAddr RunAsIntFunctionAddr;137,5362
  PendingCallWrapperResultsMap PendingCallWrapperResults;140,5426

/usr/include/llvm/ExecutionEngine/Orc/Speculation.h,1049
#define LLVM_EXECUTIONENGINE_ORC_SPECULATION_H14,577
class ImplSymbolMap 34,1146
  std::optional<AliaseeDetails> getImplFor(46,1522
  std::mutex ConcurrentAccess;55,1812
  ImapTy Maps;56,1843
class Speculator 60,1893
  using TargetFAddr 62,1920
  using FunctionCandidatesMap 63,1956
  using StubAddrLikelies 64,2030
  void registerSymbolsWithAddr(67,2105
  void launchCompile(73,2347
  Speculator(122,4083
  void speculateFor(136,4747
  void registerSymbols(139,4879
  ExecutionSession &getES(getES161,5734
  std::mutex ConcurrentAccess;165,5859
  ImplSymbolMap &AliaseeImplTable;AliaseeImplTable166,5890
  ExecutionSession &ES;ES167,5925
  StubAddrLikelies GlobalSpecMap;168,5949
class IRSpeculationLayer 171,5987
  using IRlikiesStrRef 173,6039
  using ResultEval 175,6127
  using TargetAndLikelies 176,6191
  IRSpeculationLayer(178,6262
  internToJITSymbols(188,6690
  IRLayer &NextLayer;NextLayer200,7161
  Speculator &S;S201,7183
  MangleAndInterner &Mangle;Mangle202,7200
  ResultEval QueryAnalysis;203,7229

/usr/include/llvm/ExecutionEngine/Orc/TaskDispatch.h,864
#define LLVM_EXECUTIONENGINE_ORC_TASKDISPATCH_H14,539
class Task 34,954
  static char ID;36,1012
  void anchor(47,1237
class GenericNamedTask 51,1301
  static char ID;53,1379
  static const char *DefaultDescription;DefaultDescription54,1397
template <typename FnT> class GenericNamedTaskImpl 58,1475
  GenericNamedTaskImpl(60,1562
  GenericNamedTaskImpl(63,1725
  void printDescription(67,1878
  void run(68,1944
  FnT Fn;71,1986
  const char *Desc;Desc72,1996
  std::string DescBuffer;73,2016
std::unique_ptr<GenericNamedTask> makeGenericNamedTask(78,2134
makeGenericNamedTask(87,2547
class TaskDispatcher 95,2864
class InPlaceTaskDispatcher 107,3155
class DynamicThreadPoolTaskDispatcher 115,3325
  std::mutex DispatchMutex;120,3485
  bool Running 121,3513
  size_t Outstanding 122,3536
  std::condition_variable OutstandingCV;123,3562

/usr/include/llvm/ExecutionEngine/Orc/ThreadSafeModule.h,1196
#define LLVM_EXECUTIONENGINE_ORC_THREADSAFEMODULE_H14,575
class ThreadSafeContext 29,958
  struct State 31,993
    State(32,1010
    std::unique_ptr<LLVMContext> Ctx;34,1080
    std::recursive_mutex Mutex;35,1118
  class [[nodiscard]] Lock 40,1208
    Lock(42,1247
    std::shared_ptr<State> S;45,1334
    std::unique_lock<std::recursive_mutex> L;46,1364
  ThreadSafeContext(53,1546
  LLVMContext *getContext(getContext61,1904
  const LLVMContext *getContext(getContext65,2112
  Lock getLock(67,2192
  std::shared_ptr<State> S;73,2311
class ThreadSafeModule 77,2404
  ThreadSafeModule &operator=(operator=85,2625
  ThreadSafeModule(104,3408
  ThreadSafeModule(109,3641
  ~ThreadSafeModule(112,3765
  explicit operator bool(operator bool122,4036
  template <typename Func> decltype(133,4332
  template <typename Func> decltype(141,4608
  template <typename Func> decltype(150,4965
  Module *getModuleUnlocked(getModuleUnlocked156,5180
  const Module *getModuleUnlocked(getModuleUnlocked159,5308
  ThreadSafeContext getContext(162,5424
  std::unique_ptr<Module> M;165,5491
  ThreadSafeContext TSCtx;166,5520
using GVPredicate 169,5551
using GVModifier 170,5613

/usr/include/llvm/ExecutionEngine/Orc/Debugging/DebugInfoSupport.h,330
#define LLVM_EXECUTIONENGINE_ORC_DEBUGINFOSUPPORT_H14,572
class DebugInfoPreservationPlugin 32,1171
  void modifyPassConfig(34,1251
  Error notifyRemovingResources(40,1502
  Error notifyFailed(44,1626
  void notifyTransferringResources(48,1745
  static Expected<std::unique_ptr<DebugInfoPreservationPlugin>> Create(53,1904

/usr/include/llvm/ExecutionEngine/Orc/Debugging/DebuggerSupport.h,58
#define LLVM_EXECUTIONENGINE_ORC_DEBUGGERSUPPORT_H14,552

/usr/include/llvm/ExecutionEngine/Orc/Debugging/DebuggerSupportPlugin.h,242
#define LLVM_EXECUTIONENGINE_ORC_DEBUGGERSUPPORTPLUGIN_H14,595
class GDBJITDebugInfoRegistrationPlugin 28,1136
  class DebugSectionSynthesizer 30,1222
  GDBJITDebugInfoRegistrationPlugin(40,1558
  ExecutorAddr RegisterActionAddr;58,2339

/usr/include/llvm/ExecutionEngine/Orc/Debugging/PerfSupportPlugin.h,552
#define LLVM_EXECUTIONENGINE_ORC_PERFSUPPORTPLUGIN_H14,560
class PerfSupportPlugin 27,1072
  PerfSupportPlugin(29,1142
  ~PerfSupportPlugin(34,1418
  void modifyPassConfig(36,1443
  Error notifyRemovingResources(44,1721
  void notifyTransferringResources(48,1827
  ExecutorProcessControl &EPC;EPC56,2131
  ExecutorAddr RegisterPerfStartAddr;57,2162
  ExecutorAddr RegisterPerfEndAddr;58,2200
  ExecutorAddr RegisterPerfImplAddr;59,2236
  std::atomic<uint64_t> CodeIndex;60,2273
  bool EmitDebugInfo;61,2308
  bool EmitUnwindInfo;62,2330

/usr/include/llvm/ExecutionEngine/Orc/COFFVCRuntimeSupport.h,358
#define LLVM_EXECUTIONENGINE_ORC_COFFCRUNTIMESUPPORT_H14,574
class COFFVCRuntimeBootstrapper 31,1040
  ExecutionSession &ES;ES72,3108
  ObjectLinkingLayer &ObjLinkingLayer;ObjLinkingLayer73,3132
  std::string RuntimePath;74,3171
  struct MSVCToolchainPath 76,3199
    SmallString<256> VCToolchainLib;77,3228
    SmallString<256> UCRTSdkLib;78,3265

/usr/include/llvm/ExecutionEngine/Orc/CompileOnDemandLayer.h,671
#define LLVM_EXECUTIONENGINE_ORC_COMPILEONDEMANDLAYER_H15,633
class CompileOnDemandLayer 55,1824
  struct PerDylibResources 96,3344
    PerDylibResources(98,3383
    JITDylib &getImplDylib(getImplDylib101,3540
    IndirectStubsManager &getISManager(getISManager102,3587
    JITDylib &ImplD;ImplD105,3659
    std::unique_ptr<IndirectStubsManager> ISMgr;106,3680
  mutable std::mutex CODLayerMutex;121,4155
  IRLayer &BaseLayer;BaseLayer123,4192
  LazyCallThroughManager &LCTMgr;LCTMgr124,4214
  IndirectStubsManagerBuilder BuildIndirectStubsManager;125,4248
  PerDylibResourcesMap DylibResources;126,4305
  SymbolLinkagePromoter PromoteSymbols;128,4394

/usr/include/llvm/ExecutionEngine/Orc/CompileUtils.h,446
#define LLVM_EXECUTIONENGINE_ORC_COMPILEUTILS_H14,561
class SimpleCompiler 36,1218
  SimpleCompiler(41,1405
  void setObjectCache(46,1633
  TargetMachine &TM;TM58,2045
class TMOwningSimpleCompiler 66,2254
  TMOwningSimpleCompiler(68,2317
  std::shared_ptr<llvm::TargetMachine> TM;75,2621
class ConcurrentIRCompiler 82,2810
  void setObjectCache(87,2994
  JITTargetMachineBuilder JTMB;92,3155
  ObjectCache *ObjCache ObjCache93,3187

/usr/include/llvm/ExecutionEngine/Orc/Core.h,12600
#define LLVM_EXECUTIONENGINE_ORC_CORE_H14,524
private:private57,1840
  friend 58,1849
  ~ResourceTracker(68,2187
  JITDylib &getJITDylib(getJITDylib71,2262
  template <typename Func> Error withResourceKeyDo(78,2589
  Error remove(81,2705
  void transferTo(85,2855
  bool isDefunct(88,2953
  ResourceKey getKeyUnsafe(93,3200
  ResourceTracker(96,3291
  void makeDefunct(98,3326
  std::atomic_uintptr_t JDAndFlag;100,3349
class ResourceManager 104,3432
using SymbolNameSet 114,3790
using SymbolNameVector 117,3870
using SymbolMap 121,4017
using SymbolFlagsMap 124,4151
using SymbolDependenceMap 127,4263
enum class JITDylibLookupFlags 135,4640
enum class JITDylibLookupFlags { MatchExportedSymbolsOnly,135,4640
enum class JITDylibLookupFlags { MatchExportedSymbolsOnly, MatchAllSymbols 135,4640
enum class SymbolLookupFlags 145,5178
enum class SymbolLookupFlags { RequiredSymbol,145,5178
enum class SymbolLookupFlags { RequiredSymbol, WeaklyReferencedSymbol 145,5178
enum class LookupKind 157,5764
enum class LookupKind { Static,157,5764
enum class LookupKind { Static, DLSym 157,5764
using JITDylibSearchOrder 161,5914
inline JITDylibSearchOrder makeJITDylibSearchOrder(166,6117
class SymbolLookupSet 183,6781
  using value_type 185,6813
  using UnderlyingVector 186,6881
  using iterator 187,6933
  using const_iterator 188,6980
  explicit SymbolLookupSet(192,7072
  explicit SymbolLookupSet(199,7315
  explicit SymbolLookupSet(209,7677
  explicit SymbolLookupSet(221,8140
  fromMapKeys(232,8481
  add(244,8897
  SymbolLookupSet &append(append251,9128
  bool empty(258,9321
  UnderlyingVector::size_type size(259,9370
  iterator begin(260,9440
  iterator end(261,9487
  const_iterator begin(262,9530
  const_iterator end(263,9589
  void remove(266,9726
  void remove(273,9984
  template <typename PredFn> void remove_if(277,10181
                   Expected<bool>>::value,value320,11944
  SymbolNameVector getSymbolNames(339,12441
  void sortByAddress(350,12811
  void sortByName(354,12998
  void removeDuplicates(362,13303
  bool containsDuplicates(371,13577
  UnderlyingVector Symbols;383,13858
struct SymbolAliasMapEntry 386,13890
  SymbolAliasMapEntry(388,13954
  SymbolStringPtr Aliasee;391,14092
  JITSymbolFlags AliasFlags;392,14119
using SymbolAliasMap 396,14199
using SymbolsResolvedCallback 399,14334
using RegisterDependenciesFunction 402,14472
class ResourceTrackerDefunct 409,14745
  static char ID;411,14827
  ResourceTrackerSP RT;418,15003
class FailedToMaterialize 423,15118
  static char ID;425,15194
  const SymbolDependenceMap &getSymbols(getSymbols432,15468
  std::shared_ptr<SymbolStringPool> SSP;435,15547
  std::shared_ptr<SymbolDependenceMap> Symbols;436,15588
class SymbolsNotFound 440,15714
  static char ID;442,15782
  std::shared_ptr<SymbolStringPool> getSymbolStringPool(449,16083
  const SymbolNameVector &getSymbols(getSymbols450,16157
  std::shared_ptr<SymbolStringPool> SSP;453,16232
  SymbolNameVector Symbols;454,16273
class SymbolsCouldNotBeRemoved 458,16376
  static char ID;460,16462
  std::shared_ptr<SymbolStringPool> getSymbolStringPool(466,16697
  const SymbolNameSet &getSymbols(getSymbols467,16771
  std::shared_ptr<SymbolStringPool> SSP;470,16843
  SymbolNameSet Symbols;471,16884
class MissingSymbolDefinitions 478,17181
  static char ID;480,17267
  MissingSymbolDefinitions(482,17286
  std::shared_ptr<SymbolStringPool> getSymbolStringPool(488,17631
  const std::string &getModuleName(getModuleName489,17705
  const SymbolNameVector &getSymbols(getSymbols490,17771
  std::shared_ptr<SymbolStringPool> SSP;492,17845
  std::string ModuleName;493,17886
  SymbolNameVector Symbols;494,17912
class UnexpectedSymbolDefinitions 501,18220
  static char ID;503,18312
  UnexpectedSymbolDefinitions(505,18331
  std::shared_ptr<SymbolStringPool> getSymbolStringPool(511,18682
  const std::string &getModuleName(getModuleName512,18756
  const SymbolNameVector &getSymbols(getSymbols513,18822
  std::shared_ptr<SymbolStringPool> SSP;515,18896
  std::string ModuleName;516,18937
  SymbolNameVector Symbols;517,18963
class MaterializationResponsibility 527,19371
  template <typename Func> Error withResourceKeyDo(543,20029
  JITDylib &getTargetJITDylib(getTargetJITDylib549,20255
  const SymbolFlagsMap &getSymbols(getSymbols558,20657
  const SymbolStringPtr &getInitializerSymbol(getInitializerSymbol563,20895
  MaterializationResponsibility(640,25034
  JITDylib &JD;JD648,25412
  ResourceTrackerSP RT;649,25428
  SymbolFlagsMap SymbolFlags;650,25452
  SymbolStringPtr InitSymbol;651,25482
class MaterializationUnit 662,26005
  static char ID;667,26100
  struct Interface 669,26119
    Interface(671,26167
    SymbolFlagsMap SymbolFlags;678,26506
    SymbolStringPtr InitSymbol;679,26538
  MaterializationUnit(682,26576
  const SymbolFlagsMap &getSymbols(getSymbols692,26938
  const SymbolStringPtr &getInitializerSymbol(getInitializerSymbol695,27085
  void doDiscard(705,27530
  SymbolFlagsMap SymbolFlags;718,27887
  SymbolStringPtr InitSymbol;719,27917
class AbsoluteSymbolsMaterializationUnit 735,28489
  SymbolMap Symbols;746,28909
absoluteSymbols(760,29347
class ReExportsMaterializationUnit 767,29588
  JITDylib *SourceJD SourceJD789,30571
  JITDylibLookupFlags SourceJDLookupFlags;790,30603
  SymbolAliasMap Aliases;791,30646
symbolAliases(806,31234
reexports(815,31643
enum class SymbolState 828,32250
  Invalid,829,32285
  NeverSearched,830,32341
  Materializing,831,32404
  Resolved,832,32457
  Emitted,833,32517
  Ready 834,32597
class AsynchronousSymbolQuery 841,32807
  bool isComplete(862,33663
  SymbolState getRequiredState(868,33787
  SymbolsResolvedCallback NotifyComplete;880,34085
  SymbolDependenceMap QueryRegistrations;881,34127
  SymbolMap ResolvedSymbols;882,34169
  size_t OutstandingSymbolsCount;883,34198
  SymbolState RequiredState;884,34232
class LookupState 890,34457
  std::unique_ptr<InProgressLookupState> IPLS;910,34953
class DefinitionGenerator 915,35139
  std::mutex M;932,35862
  bool InUse 933,35878
  std::deque<LookupState> PendingLookups;934,35900
class JITDylib 957,37076
  ExecutionSession &getExecutionSession(getExecutionSession977,37852
  using AsynchronousSymbolQuerySet 1167,46533
  using AsynchronousSymbolQueryList 1170,46627
  struct UnmaterializedInfo 1173,46727
    UnmaterializedInfo(1174,46757
    std::unique_ptr<MaterializationUnit> MU;1178,46905
    ResourceTracker *RT;RT1179,46950
  using UnmaterializedInfosMap 1182,46981
  using UnmaterializedInfosList 1185,47085
  struct MaterializingInfo 1188,47176
    SymbolDependenceMap Dependants;1189,47205
    SymbolDependenceMap UnemittedDependencies;1190,47241
    AsynchronousSymbolQueryList takeAllPendingQueries(1195,47487
    bool hasQueriesPending(1198,47591
    const AsynchronousSymbolQueryList &pendingQueries(pendingQueries1199,47662
    AsynchronousSymbolQueryList PendingQueries;1203,47772
  using MaterializingInfosMap 1206,47826
  class SymbolTableEntry 1208,47905
    SymbolTableEntry(1211,47976
    ExecutorAddr getAddress(1215,48142
    JITSymbolFlags getFlags(1216,48195
    SymbolState getState(1217,48249
    bool hasMaterializerAttached(1219,48327
    void setAddress(1221,48402
    void setFlags(1222,48464
    void setState(1223,48529
    void setMaterializerAttached(1229,48727
    ExecutorSymbolDef getSymbol(1233,48853
    ExecutorAddr Addr;1236,48931
    JITSymbolFlags Flags;1237,48954
    uint8_t State 1238,48980
    uint8_t MaterializerAttached 1239,49003
  using SymbolTable 1242,49047
  std::pair<std::pair1246,49168
  using FailedSymbolsWorklist 1285,50738
  static std::pair<std::pair1288,50830
  ExecutionSession &ES;ES1292,50977
  enum { Open,1293,51001
  enum { Open, Closing,1293,51001
  enum { Open, Closing, Closed 1293,51001
  enum { Open, Closing, Closed } State 1293,51001
  std::mutex GeneratorsMutex;1294,51048
  SymbolTable Symbols;1295,51078
  UnmaterializedInfosMap UnmaterializedInfos;1296,51101
  MaterializingInfosMap MaterializingInfos;1297,51147
  std::vector<std::shared_ptr<DefinitionGenerator>> DefGenerators;1298,51191
  JITDylibSearchOrder LinkOrder;1299,51258
  ResourceTrackerSP DefaultTracker;1300,51291
  DenseMap<DenseMap1303,51374
  DenseMap<ResourceTracker *, SymbolNameVector> TrackerSymbols;1303,51374
  DenseMap<DenseMap1304,51438
      TrackerMRs;1305,51511
class Platform 1312,51801
  static Expected<Expected1339,52996
class MaterializationTask 1352,53556
  static char ID;1354,53640
  MaterializationTask(1356,53659
  std::unique_ptr<MaterializationUnit> MU;1363,53927
  std::unique_ptr<MaterializationResponsibility> MR;1364,53970
class LookupTask 1370,54192
  static char ID;1372,54258
  LookupTask(1374,54277
  LookupState LS;1379,54413
class ExecutionSession 1383,54493
  using ErrorReporter 1393,54771
  using SendResultFunction 1396,54859
  using DispatchTaskFunction 1399,55010
  using JITDispatchHandlerFunction 1403,55180
  using JITDispatchHandlerAssociationMap 1409,55425
  ExecutorProcessControl &getExecutorProcessControl(getExecutorProcessControl1426,56065
  const Triple &getTargetTriple(getTargetTriple1429,56179
  size_t getPageSize(1432,56299
  std::shared_ptr<SymbolStringPool> getSymbolStringPool(1435,56410
  SymbolStringPtr intern(1440,56590
  void setPlatform(1443,56718
  Platform *getPlatform(getPlatform1447,56914
  template <typename Func> decltype(1450,57019
  Error removeJITDylib(1508,59836
  ExecutionSession &setErrorReporter(setErrorReporter1513,59979
  void reportError(1521,60224
  ExecutionSession &setDispatchTask(setDispatchTask1524,60326
  void dispatchTask(1600,64221
  void callWrapperAsync(1616,64716
  shared::WrapperFunctionResult callWrapper(1626,65028
  template <typename SPSSignature,1633,65333
  template <typename SPSSignature, typename SendResultT,1633,65333
  void callSPSWrapperAsync(1634,65409
  template <typename SPSSignature,1645,65948
  Error callSPSWrapper(1646,66013
  template <typename SPSSignature,1659,66693
  static JITDispatchHandlerFunction wrapAsyncWithSPS(1660,66747
  template <typename SPSSignature,1676,67561
  template <typename SPSSignature, typename ClassT,1676,67561
  wrapAsyncWithSPS(1678,67674
  static void logErrorsToStdErr(1708,69076
  static void runOnCurrentThread(1712,69200
  createMaterializationResponsibility(1717,69363
  mutable std::recursive_mutex SessionMutex;1788,72977
  bool SessionOpen 1789,73022
  std::unique_ptr<ExecutorProcessControl> EPC;1790,73049
  std::unique_ptr<Platform> P;1791,73096
  ErrorReporter ReportError 1792,73127
  DispatchTaskFunction DispatchTask 1793,73176
  std::vector<ResourceManager *> ResourceManagers;1795,73235
  std::vector<JITDylibSP> JDs;1797,73287
  mutable std::recursive_mutex OutstandingMUsMutex;1801,73450
  std::vector<std::vector1802,73502
      OutstandingMUs;1804,73637
  mutable std::mutex JITDispatchHandlersMutex;1806,73660
  DenseMap<DenseMap1807,73707
      JITDispatchHandlers;1808,73777
template <typename Func> Error ResourceTracker::withResourceKeyDo(withResourceKeyDo1811,73808
MaterializationResponsibility::getExecutionSession(getExecutionSession1821,74128
GeneratorT &JITDylib::addGenerator(addGenerator1826,74258
    -> decltype(1837,74605
Error JITDylib::define(define1843,74851
Error JITDylib::define(define1886,76095
class ReexportsGenerator 1930,77434
  using SymbolPredicate 1932,77498
  JITDylib &SourceJD;SourceJD1946,78146
  JITDylibLookupFlags SourceJDLookupFlags;1947,78168
  SymbolPredicate Allow;1948,78211
inline MaterializationResponsibility::~MaterializationResponsibility(~MaterializationResponsibility1955,78388
inline SymbolNameSet MaterializationResponsibility::getRequestedSymbols(getRequestedSymbols1959,78536
inline Error MaterializationResponsibility::notifyResolved(notifyResolved1963,78683
inline Error MaterializationResponsibility::notifyEmitted(notifyEmitted1968,78844
inline Error MaterializationResponsibility::defineMaterializing(defineMaterializing1972,78965
inline void MaterializationResponsibility::failMaterialization(failMaterialization1978,79207
inline Error MaterializationResponsibility::replace(replace1982,79325
MaterializationResponsibility::delegate(delegate1988,79557
inline void MaterializationResponsibility::addDependencies(addDependencies1992,79692
inline void MaterializationResponsibility::addDependenciesForAll(addDependenciesForAll1997,79902

/usr/include/llvm/ExecutionEngine/Orc/DebugUtils.h,156
#define LLVM_EXECUTIONENGINE_ORC_DEBUGUTILS_H14,546
class DumpObjects 100,3448
  std::string DumpDir;123,4581
  std::string IdentifierOverride;124,4604

/usr/include/llvm/ExecutionEngine/Orc/ELFNixPlatform.h,2750
#define LLVM_EXECUTIONENGINE_ORC_ELFNIXPLATFORM_H14,560
struct ELFPerObjectSectionsToRegister 29,955
  ExecutorAddrRange EHFrameSection;30,995
  ExecutorAddrRange ThreadDataSection;31,1031
struct ELFNixJITDylibInitializers 34,1074
  using SectionList 35,1110
  ELFNixJITDylibInitializers(37,1165
  std::string Name;40,1324
  ExecutorAddr DSOHandleAddress;41,1344
  StringMap<SectionList> InitSections;43,1378
class ELFNixJITDylibDeinitializers 46,1421
using ELFNixJITDylibInitializerSequence 48,1461
using ELFNixJITDylibDeinitializerSequence 51,1549
class ELFNixPlatform 55,1712
  ExecutionSession &getExecutionSession(getExecutionSession106,4267
  ObjectLinkingLayer &getObjectLinkingLayer(getObjectLinkingLayer107,4330
  static ArrayRef<ArrayRef122,5058
  static ArrayRef<ArrayRef125,5207
  class ELFNixPlatformPlugin 132,5484
    ELFNixPlatformPlugin(134,5561
    Error notifyFailed(145,6022
    Error notifyRemovingResources(149,6129
    void notifyTransferringResources(153,6241
    std::mutex PluginMutex;176,7187
    ELFNixPlatform &MP;MP177,7215
    InitSymbolDepMap InitSymbolDeps;178,7239
  using SendInitializerSequenceFn 181,7282
  using SendDeinitializerSequenceFn 184,7393
  using SendSymbolAddressFn 187,7508
  ExecutionSession &ES;ES225,9045
  ObjectLinkingLayer &ObjLinkingLayer;ObjLinkingLayer226,9069
  SymbolStringPtr DSOHandleSymbol;228,9109
  std::atomic<bool> RuntimeBootstrapped{RuntimeBootstrapped229,9144
  ExecutorAddr orc_rt_elfnix_platform_bootstrap;231,9193
  ExecutorAddr orc_rt_elfnix_platform_shutdown;232,9242
  ExecutorAddr orc_rt_elfnix_register_object_sections;233,9290
  ExecutorAddr orc_rt_elfnix_create_pthread_key;234,9345
  DenseMap<DenseMap236,9395
  DenseMap<JITDylib *, SymbolLookupSet> RegisteredInitSymbols;236,9395
  std::mutex PlatformMutex;240,9572
  DenseMap<DenseMap241,9600
  DenseMap<JITDylib *, ELFNixJITDylibInitializers> InitSeqs;241,9600
  std::vector<ELFPerObjectSectionsToRegister> BootstrapPOSRs;242,9661
  DenseMap<DenseMap244,9724
  DenseMap<ExecutorAddr, JITDylib *> HandleAddrToJITDylib;244,9724
  DenseMap<DenseMap245,9783
  DenseMap<JITDylib *, uint64_t> JITDylibToPThreadKey;245,9783
namespace shared 248,9842
using SPSELFPerObjectSectionsToRegister 250,9862
using SPSNamedExecutorAddrRangeSequenceMap 276,10812
using SPSELFNixJITDylibInitializers 279,10926
using SPSELFNixJITDylibInitializerSequence 282,11045
  static size_t size(290,11335
  static bool serialize(295,11532
  static bool deserialize(301,11786
using SPSELFJITDylibDeinitializers 308,12042
using SPSELFJITDylibDeinitializerSequence 310,12090
  static size_t size(317,12322
  static bool serialize(319,12402
  static bool deserialize(324,12539

/usr/include/llvm/ExecutionEngine/Orc/EPCDebugObjectRegistrar.h,246
#define LLVM_EXECUTIONENGINE_ORC_EPCDEBUGOBJECTREGISTRAR_H14,579
class DebugObjectRegistrar 31,1051
class EPCDebugObjectRegistrar 40,1368
  EPCDebugObjectRegistrar(42,1438
  ExecutionSession &ES;ES49,1682
  ExecutorAddr RegisterFn;50,1706

/usr/include/llvm/ExecutionEngine/Orc/EPCDynamicLibrarySearchGenerator.h,359
#define LLVM_EXECUTIONENGINE_ORC_EPCDYNAMICLIBRARYSEARCHGENERATOR_H15,643
class EPCDynamicLibrarySearchGenerator 25,858
  EPCDynamicLibrarySearchGenerator(39,1549
  GetForTargetProcess(57,2528
  ExecutorProcessControl &EPC;EPC68,2994
  tpctypes::DylibHandle H;69,3025
  SymbolPredicate Allow;70,3052
  AddAbsoluteSymbolsFn AddAbsoluteSymbols;71,3077

/usr/include/llvm/ExecutionEngine/Orc/EPCEHFrameRegistrar.h,272
#define LLVM_EXECUTIONENGINE_ORC_EPCEHFRAMEREGISTRAR_H14,567
class EPCEHFrameRegistrar 26,899
  EPCEHFrameRegistrar(40,1596
  ExecutionSession &ES;ES50,2079
  ExecutorAddr RegisterEHFrameSectionWrapper;51,2103
  ExecutorAddr DeregisterEHFrameSectionWrapper;52,2149

/usr/include/llvm/ExecutionEngine/Orc/EPCGenericDylibManager.h,381
#define LLVM_EXECUTIONENGINE_ORC_EPCGENERICDYLIBMANAGER_H19,801
class EPCGenericDylibManager 30,1109
  struct SymbolAddrs 33,1192
    ExecutorAddr Instance;34,1215
    ExecutorAddr Open;35,1242
    ExecutorAddr Lookup;36,1265
  CreateWithDefaultBootstrapSymbols(42,1428
  EPCGenericDylibManager(46,1585
  ExecutorProcessControl &EPC;EPC61,2131
  SymbolAddrs SAs;62,2162

/usr/include/llvm/ExecutionEngine/Orc/EPCGenericJITLinkMemoryManager.h,504
#define LLVM_EXECUTIONENGINE_ORC_EPCGENERICJITLINKMEMORYMANAGER_H19,815
class EPCGenericJITLinkMemoryManager 27,1023
  struct SymbolAddrs 30,1153
    ExecutorAddr Allocator;31,1176
    ExecutorAddr Reserve;32,1204
    ExecutorAddr Finalize;33,1230
    ExecutorAddr Deallocate;34,1257
  EPCGenericJITLinkMemoryManager(39,1390
  void allocate(42,1500
  using JITLinkMemoryManager::deallocate;52,1865
  ExecutorProcessControl &EPC;EPC60,2077
  SymbolAddrs SAs;61,2108
namespace shared 64,2131

/usr/include/llvm/ExecutionEngine/Orc/EPCGenericMemoryAccess.h,670
#define LLVM_EXECUTIONENGINE_ORC_EPCGENERICMEMORYACCESS_H19,815
class EPCGenericMemoryAccess 26,952
  struct FuncAddrs 29,1081
    ExecutorAddr WriteUInt8s;30,1102
    ExecutorAddr WriteUInt16s;31,1132
    ExecutorAddr WriteUInt32s;32,1163
    ExecutorAddr WriteUInt64s;33,1194
    ExecutorAddr WriteBuffers;34,1225
    ExecutorAddr WritePointers;35,1256
  EPCGenericMemoryAccess(40,1384
  void writeUInt8sAsync(43,1484
  void writeUInt16sAsync(50,1775
  void writeUInt32sAsync(57,2071
  void writeUInt64sAsync(64,2367
  void writeBuffersAsync(71,2663
  void writePointersAsync(78,2959
  ExecutorProcessControl &EPC;EPC86,3269
  FuncAddrs FAs;87,3300

/usr/include/llvm/ExecutionEngine/Orc/ExecutionUtils.h,2679
#define LLVM_EXECUTIONENGINE_ORC_EXECUTIONUTILS_H14,556
class CtorDtorIterator 51,1540
  struct Element 57,1761
    Element(58,1780
    unsigned Priority;61,1895
    Function *Func;Func62,1918
    Value *Data;Data63,1938
  CtorDtorIterator(68,2107
  CtorDtorIterator operator++(int)80,2446
  Element operator*operator84,2625
class StaticInitGVIterator 101,3139
  StaticInitGVIterator(105,3213
  bool operator==(operator==115,3531
  bool operator!=(operator!=116,3607
  StaticInitGVIterator &operator++(operator++118,3684
  GlobalValue &operator*(operator*124,3833
  void moveToNextStaticInitGlobal(128,3929
  Module::global_value_iterator I,136,4101
  Module::global_value_iterator I, E;136,4101
  Triple::ObjectFormatType ObjFmt;137,4139
inline iterator_range<StaticInitGVIterator> getStaticInitGVs(142,4275
class CtorDtorRunner 146,4422
  CtorDtorRunner(148,4453
  using CtorDtorList 153,4577
  using CtorDtorPriorityMap 154,4630
  JITDylib &JD;JD156,4695
  CtorDtorPriorityMap CtorDtorsByPriority;157,4711
class LocalCXXRuntimeOverridesBase 175,5626
  using DestructorPtr 182,5809
  using CXXDestructorDataPair 183,5851
  using CXXDestructorDataPairList 184,5917
  CXXDestructorDataPairList DSOHandleOverride;185,5989
class LocalCXXRuntimeOverrides 190,6157
class ItaniumCXAAtExitSupport 196,6368
  struct AtExitRecord 198,6408
    void *Ctx;Ctx200,6455
  std::mutex AtExitsMutex;207,6592
  DenseMap<DenseMap208,6619
  DenseMap<void *, std::vector<AtExitRecord>> AtExitRecords;208,6619
class DynamicLibrarySearchGenerator 216,6972
  using SymbolPredicate 218,7047
  using AddAbsoluteSymbolsFn 219,7119
  GetForCurrentProcess(246,8479
  sys::DynamicLibrary Dylib;258,8971
  SymbolPredicate Allow;259,9000
  AddAbsoluteSymbolsFn AddAbsoluteSymbols;260,9025
  char GlobalPrefix;261,9068
class StaticLibraryDefinitionGenerator 269,9364
  using GetObjectFileInterface 272,9512
  const std::set<std::string> &getImportedDynamicLibraries(getImportedDynamicLibraries306,11447
  static Expected<Expected322,12123
  ObjectLayer &L;L325,12245
  GetObjectFileInterface GetObjFileInterface;326,12263
  std::set<std::string> ImportedDynamicLibraries;327,12309
  std::unique_ptr<MemoryBuffer> ArchiveBuffer;328,12359
  std::unique_ptr<object::Archive> Archive;329,12406
  DenseMap<DenseMap330,12450
  DenseMap<SymbolStringPtr, MemoryBufferRef> ObjectFilesMap;330,12450
class DLLImportDefinitionGenerator 340,12869
  DLLImportDefinitionGenerator(351,13307
  static StringRef getImpPrefix(359,13647
  static StringRef getSectionName(361,13703
  ExecutionSession &ES;ES363,13773
  ObjectLinkingLayer &L;L364,13797

/usr/include/llvm/ExecutionEngine/Orc/ExecutorProcessControl.h,3366
#define LLVM_EXECUTIONENGINE_ORC_EXECUTORPROCESSCONTROL_H14,573
class ExecutorProcessControl 38,1369
  class IncomingWFRHandler 48,1763
    explicit operator bool(52,1879
    void operator(53,1930
    template <typename FnT> IncomingWFRHandler(55,2019
  class RunInPlace 67,2594
    IncomingWFRHandler operator()(operator()70,2653
  class RunAsTask 80,3040
    RunAsTask(82,3070
    IncomingWFRHandler operator()(operator()85,3142
    TaskDispatcher &D;D97,3579
  class MemoryAccess 101,3666
    Error writeUInt8s(126,4695
    Error writeUInt16s(134,4978
    Error writeUInt32s(142,5265
    Error writeUInt64s(150,5552
    Error writeBuffers(158,5839
    Error writePointers(166,6126
  struct LookupRequest 176,6484
    LookupRequest(177,6509
    tpctypes::DylibHandle Handle;179,6635
    const SymbolLookupSet &Symbols;Symbols180,6669
  struct JITDispatchInfo 185,6840
    ExecutorAddr JITDispatchFunction;186,6867
    ExecutorAddr JITDispatchContext;187,6905
  ExecutorProcessControl(190,6948
  ExecutionSession &getExecutionSession(getExecutionSession198,7289
  SymbolStringPtr intern(204,7462
  std::shared_ptr<SymbolStringPool> getSymbolStringPool(207,7613
  TaskDispatcher &getDispatcher(getDispatcher209,7694
  const Triple &getTargetTriple(getTargetTriple212,7792
  unsigned getPageSize(215,7906
  const JITDispatchInfo &getJITDispatchInfo(getJITDispatchInfo218,8033
  MemoryAccess &getMemoryAccess(getMemoryAccess221,8161
  jitlink::JITLinkMemoryManager &getMemMgr(getMemMgr227,8344
  const StringMap<std::vector<char>> &getBootstrapMap(getBootstrapMap233,8501
  template <typename T,240,8664
  Error getBootstrapMapValue(241,8706
  const StringMap<ExecutorAddr> &getBootstrapSymbolsMap(getBootstrapSymbolsMap260,9335
  Error getBootstrapSymbols(267,9660
  template <typename RunPolicyT,323,12077
  void callWrapperAsync(324,12124
  void callWrapperAsync(333,12541
  shared::WrapperFunctionResult callWrapper(345,12989
  template <typename SPSSignature,359,13510
  template <typename SPSSignature, typename RunPolicyT,359,13510
  template <typename SPSSignature, typename RunPolicyT, typename SendResultT,359,13510
  void callSPSWrapperAsync(361,13619
  template <typename SPSSignature,375,14324
  template <typename SPSSignature, typename SendResultT,375,14324
  void callSPSWrapperAsync(376,14400
  template <typename SPSSignature,388,14993
  Error callSPSWrapper(389,15058
  std::shared_ptr<SymbolStringPool> SSP;405,15613
  std::unique_ptr<TaskDispatcher> D;406,15654
  Triple TargetTriple;408,15725
  JITDispatchInfo JDI;410,15773
  StringMap<std::vector<char>> BootstrapMap;413,15884
  StringMap<ExecutorAddr> BootstrapSymbols;414,15929
class InProcessMemoryAccess 417,15977
  InProcessMemoryAccess(419,16061
  bool IsArch64Bit;439,16910
class UnsupportedExecutorProcessControl 445,17136
  UnsupportedExecutorProcessControl(448,17291
  Expected<tpctypes::DylibHandle> loadDylib(461,17830
  lookupSymbols(466,17998
  Expected<int32_t> runAsMain(470,18100
  Expected<int32_t> runAsVoidFunction(475,18266
  Expected<int32_t> runAsIntFunction(479,18382
  void callWrapperAsync(483,18505
  Error disconnect(489,18715
class SelfExecutorProcessControl 493,18853
  std::unique_ptr<jitlink::JITLinkMemoryManager> OwnedMemMgr;534,20600
  char GlobalManglingPrefix 535,20662

/usr/include/llvm/ExecutionEngine/Orc/IndirectionUtils.h,2319
#define LLVM_EXECUTIONENGINE_ORC_INDIRECTIONUTILS_H14,580
class TrampolinePool 63,1837
  virtual ~TrampolinePool(72,2112
  Expected<ExecutorAddr> getTrampoline(76,2241
  void releaseTrampoline(89,2699
  std::mutex TPMutex;97,2899
  std::vector<ExecutorAddr> AvailableTrampolines;98,2921
template <typename ORCABI> class LocalTrampolinePool 102,3041
  Create(108,3379
  static JITTargetAddress reenter(120,3667
  LocalTrampolinePool(134,4279
  Error grow(163,5308
  ResolveLandingFunction ResolveLanding;196,6527
  sys::OwningMemoryBlock ResolverBlock;198,6569
  std::vector<sys::OwningMemoryBlock> TrampolineBlocks;199,6609
class JITCompileCallbackManager 203,6736
  using CompileFunction 205,6778
  JITCompileCallbackManager(218,7236
  void setTrampolinePool(225,7559
  std::mutex CCMgrMutex;230,7666
  std::unique_ptr<TrampolinePool> TP;231,7691
  ExecutionSession &ES;ES232,7729
  JITDylib &CallbacksJD;CallbacksJD233,7753
  ExecutorAddr ErrorHandlerAddress;234,7778
  std::map<std::map235,7814
  std::map<ExecutorAddr, SymbolStringPtr> AddrToSymbol;235,7814
  size_t NextCallbackId 236,7870
class LocalJITCompileCallbackManager 241,7980
  Create(245,8180
  LocalJITCompileCallbackManager(258,8721
class IndirectStubsManager 281,9483
  using StubInitsMap 284,9575
template <typename ORCABI> class LocalIndirectStubsInfo 312,10656
  LocalIndirectStubsInfo(314,10722
  static Expected<LocalIndirectStubsInfo> create(317,10861
  unsigned getNumStubs(350,12249
  void *getStub(getStub352,12302
  void **getPtr(getPtr356,12419
  unsigned NumStubs 363,12622
  sys::OwningMemoryBlock StubsMem;364,12647
class LocalIndirectStubsManager 370,12840
  Error createStub(372,12912
  Error createStubs(383,13225
  ExecutorSymbolDef findStub(395,13589
  ExecutorSymbolDef findPointer(410,14221
  Error updatePointer(422,14695
  Error reserveStubs(436,15238
  void createStubInternal(452,15797
  unsigned PageSize 461,16134
  std::mutex StubsMutex;462,16193
  std::vector<LocalIndirectStubsInfo<TargetT>> IndirectStubsInfos;463,16218
  using StubKey 464,16285
  std::vector<StubKey> FreeStubs;465,16334
  StringMap<StringMap466,16368
  StringMap<std::pair<StubKey, JITSymbolFlags>> StubIndexes;466,16368
class SymbolLinkagePromoter 503,17975
  unsigned NextId 510,18190

/usr/include/llvm/ExecutionEngine/Orc/JITTargetMachineBuilder.h,1613
#define LLVM_EXECUTIONENGINE_ORC_JITTARGETMACHINEBUILDER_H14,567
class JITTargetMachineBuilder 34,1045
  JITTargetMachineBuilder(44,1418
  static Expected<JITTargetMachineBuilder> detectHost(51,1715
  Expected<DataLayout> getDefaultDataLayoutForTarget(67,2424
  JITTargetMachineBuilder &setCPU(setCPU75,2629
  const std::string &getCPU(getCPU81,2767
  JITTargetMachineBuilder &setRelocationModel(setRelocationModel84,2852
  const std::optional<Reloc::Model> &getRelocationModel(getRelocationModel90,3017
  JITTargetMachineBuilder &setCodeModel(setCodeModel93,3123
  const std::optional<CodeModel::Model> &getCodeModel(getCodeModel99,3280
  JITTargetMachineBuilder &setCodeGenOptLevel(setCodeGenOptLevel102,3405
  JITTargetMachineBuilder &setFeatures(setFeatures108,3563
  SubtargetFeatures &getFeatures(getFeatures118,3852
  const SubtargetFeatures &getFeatures(getFeatures121,3942
  JITTargetMachineBuilder &setOptions(setOptions129,4294
  TargetOptions &getOptions(getOptions135,4448
  const TargetOptions &getOptions(getOptions138,4527
  Triple &getTargetTriple(getTargetTriple141,4611
  const Triple &getTargetTriple(getTargetTriple144,4676
  Triple TT;147,4741
  std::string CPU;148,4754
  SubtargetFeatures Features;149,4773
  TargetOptions Options;150,4803
  std::optional<Reloc::Model> RM;151,4828
  std::optional<CodeModel::Model> CM;152,4862
class JITTargetMachineBuilderPrinter 157,4974
  JITTargetMachineBuilderPrinter(159,5021
  friend raw_ostream &operator<<(operator<<164,5212
  JITTargetMachineBuilder &JTMB;JTMB171,5392
  StringRef Indent;172,5425

/usr/include/llvm/ExecutionEngine/Orc/LLJIT.h,5926
#define LLVM_EXECUTIONENGINE_ORC_LLJIT_H14,541
class LLJIT 38,1330
  template <typename,typename39,1344
  template <typename, typename,39,1344
  friend Expected<JITDylibSP> setUpGenericLLVMIRPlatform(41,1421
  class PlatformSupport 45,1535
    virtual ~PlatformSupport(47,1571
    static void setInitTransform(54,1717
  virtual ~LLJIT(60,1948
  ExecutionSession &getExecutionSession(getExecutionSession63,2023
  const Triple &getTargetTriple(getTargetTriple66,2141
  const DataLayout &getDataLayout(getDataLayout69,2260
  JITDylib &getMainJITDylib(getMainJITDylib72,2397
  JITDylibSP getProcessSymbolsJITDylib(79,2699
  JITDylibSP getPlatformJITDylib(86,2990
  JITDylib *getJITDylibByName(getJITDylibByName90,3130
  Expected<JITDylib &> loadPlatformDynamicLibrary(101,3598
  Error linkStaticLibraryInto(109,3996
  Error linkStaticLibraryInto(118,4440
  Expected<JITDylib &> createJITDylib(126,4828
  JITDylibSearchOrder defaultLinkOrder(131,5066
  Error addIRModule(134,5189
  Error addIRModule(137,5302
  Error addIRModule(140,5406
  Error addObjectFile(151,5803
  Expected<ExecutorAddr> lookupLinkerMangled(162,6358
  Expected<ExecutorAddr> lookupLinkerMangled(170,6708
  Expected<ExecutorAddr> lookup(175,6888
  Expected<ExecutorAddr> lookup(180,7098
  void setPlatformSupport(185,7243
  PlatformSupport *getPlatformSupport(getPlatformSupport190,7383
  Error initialize(193,7496
  Error deinitialize(203,7828
  ObjectLayer &getObjLinkingLayer(getObjLinkingLayer213,8162
  ObjectTransformLayer &getObjTransformLayer(getObjTransformLayer216,8285
  IRTransformLayer &getIRTransformLayer(getIRTransformLayer219,8417
  IRCompileLayer &getIRCompileLayer(getIRCompileLayer222,8539
  SymbolStringPtr mangleAndIntern(228,8783
  std::unique_ptr<ExecutionSession> ES;246,9352
  std::unique_ptr<PlatformSupport> PS;247,9392
  JITDylibSearchOrder DefaultLinks;253,9531
  DataLayout DL;255,9568
  Triple TT;256,9585
  std::unique_ptr<ThreadPool> CompileThreads;257,9598
  std::unique_ptr<ObjectLayer> ObjLinkingLayer;259,9645
  std::unique_ptr<ObjectTransformLayer> ObjTransformLayer;260,9693
  std::unique_ptr<IRCompileLayer> CompileLayer;261,9752
  std::unique_ptr<IRTransformLayer> TransformLayer;262,9800
  std::unique_ptr<IRTransformLayer> InitHelperTransformLayer;263,9852
class LLLazyJIT 268,10017
  template <typename,typename269,10050
  template <typename, typename,269,10050
  setPartitionFunction(275,10178
  CompileOnDemandLayer &getCompileOnDemandLayer(getCompileOnDemandLayer280,10367
  Error addLazyIRModule(286,10620
  std::unique_ptr<LazyCallThroughManager> LCTMgr;295,10832
  std::unique_ptr<CompileOnDemandLayer> CODLayer;296,10882
class LLJITBuilderState 299,10936
  using ObjectLinkingLayerCreator 301,10970
  using CompileFunctionCreator 305,11163
  using ProcessSymbolsJITDylibSetupFunction 309,11314
  using PlatformSetupFunction 312,11416
  std::unique_ptr<ExecutorProcessControl> EPC;314,11498
  std::unique_ptr<ExecutionSession> ES;315,11545
  std::optional<JITTargetMachineBuilder> JTMB;316,11585
  std::optional<DataLayout> DL;317,11632
  bool LinkProcessSymbolsByDefault 318,11664
  ProcessSymbolsJITDylibSetupFunction SetupProcessSymbolsJITDylib;319,11707
  ObjectLinkingLayerCreator CreateObjectLinkingLayer;320,11774
  CompileFunctionCreator CreateCompileFunction;321,11828
  unique_function<Error(LLJIT &)> PrePlatformSetup;322,11876
  PlatformSetupFunction SetUpPlatform;323,11928
  unsigned NumCompileThreads 324,11967
template <typename JITType,330,12104
template <typename JITType, typename SetterImpl,330,12104
class LLJITBuilderSetters 331,12169
  setExecutorProcessControl(336,12348
  SetterImpl &setExecutionSession(setExecutionSession346,12677
  SetterImpl &setJITTargetMachineBuilder(setJITTargetMachineBuilder359,13185
  std::optional<JITTargetMachineBuilder> &getJITTargetMachineBuilder(getJITTargetMachineBuilder366,13380
  SetterImpl &setDataLayout(setDataLayout372,13613
  SetterImpl &setLinkProcessSymbolsByDefault(setLinkProcessSymbolsByDefault383,14153
  SetterImpl &setProcessSymbolsJITDylibSetup(setProcessSymbolsJITDylibSetup392,14590
  SetterImpl &setObjectLinkingLayerCreator(setObjectLinkingLayerCreator403,15032
  SetterImpl &setCompileFunctionCreator(setCompileFunctionCreator415,15567
  setPrePlatformSetup(429,16139
  setPlatformSetUp(439,16483
  SetterImpl &setNumCompileThreads(setNumCompileThreads452,17001
  SetterImpl &setExecutorProcessControl(setExecutorProcessControl463,17420
  Expected<std::unique_ptr<JITType>> create(469,17575
  SetterImpl &impl(impl481,17880
class LLJITBuilder485,17982
class LLLazyJITBuilderState 489,18111
  using IndirectStubsManagerBuilderFunction 493,18203
  Triple TT;496,18312
  ExecutorAddr LazyCompileFailureAddr;497,18325
  std::unique_ptr<LazyCallThroughManager> LCTMgr;498,18364
  IndirectStubsManagerBuilderFunction ISMBuilder;499,18414
template <typename JITType,504,18503
template <typename JITType, typename SetterImpl,504,18503
class LLLazyJITBuilderSetters505,18568
  SetterImpl &setLazyCompileFailureAddr(setLazyCompileFailureAddr511,18821
  setLazyCallthroughManager(521,19150
  SetterImpl &setIndirectStubsManagerBuilder(setIndirectStubsManagerBuilder530,19495
class LLLazyJITBuilder538,19742
class ExecutorNativePlatform 549,20230
  ExecutorNativePlatform(552,20309
  ExecutorNativePlatform(556,20456
  ExecutorNativePlatform &addVCRuntime(addVCRuntime562,20638
  std::variant<std::variant571,20906
  std::variant<std::string, std::unique_ptr<MemoryBuffer>> OrcRuntime;571,20906
  std::optional<std::optional572,20977
  std::optional<std::pair<std::string, bool>> VCRuntime;572,20977
class ORCPlatformSupport 589,21831
  ORCPlatformSupport(591,21898
  orc::LLJIT &J;J596,22052
  DenseMap<DenseMap597,22069
  DenseMap<orc::JITDylib *, orc::ExecutorAddr> DSOHandles;597,22069

/usr/include/llvm/ExecutionEngine/Orc/MachOBuilder.h,3518
#define LLVM_EXECUTIONENGINE_ORC_MACHOBUILDER_H14,585
struct MachOBuilderLoadCommandBase 38,1278
  virtual ~MachOBuilderLoadCommandBase(39,1315
#define HANDLE_LOAD_COMMAND(48,1634
#undef HANDLE_LOAD_COMMAND71,3219
struct MachOBuilderLoadCommand74,3288
  MachOBuilderLoadCommand(80,3453
struct MachOBuilderLoadCommand<MachOBuilderLoadCommand85,3577
  MachOBuilderLoadCommand(88,3696
        Name(93,3989
  size_t write(97,4077
  std::string Name;104,4349
struct MachOBuilderLoadCommand<MachOBuilderLoadCommand108,4385
  MachOBuilderLoadCommand(111,4508
        Name(116,4801
  size_t write(120,4889
  std::string Name;127,5161
struct MachOBuilderLoadCommand<MachOBuilderLoadCommand131,5197
  MachOBuilderLoadCommand(133,5309
  size_t write(138,5479
  std::string Path;145,5751
template <typename MachOTraits> class MachOBuilder 149,5800
  struct SymbolContainer 151,5862
    std::vector<typename MachOTraits::NList> Symbols;153,5921
  struct StringTableEntry 156,5981
    StringRef S;157,6009
    size_t Offset;158,6026
  using StringTable 161,6051
  static bool swapStruct(163,6105
  using StringId 168,6211
  class RelocTarget 174,6353
    RelocTarget(176,6385
    RelocTarget(177,6440
    bool isSymbol(179,6513
    uint32_t getSymbolNum(181,6557
    uint32_t getSectionId(186,6688
    typename MachOTraits::NList &nlist(nlist191,6812
      const Section *S;S198,6970
      SymbolContainer *SC;SC199,6994
    size_t Idx;201,7028
  struct Reloc 204,7050
    RelocTarget Target;205,7099
    Reloc(207,7124
    MachO::relocation_info &rawStruct(rawStruct219,7523
  struct SectionContent 224,7636
  struct Section 229,7721
    MachOBuilder &Builder;Builder230,7790
    SectionContent Content;231,7817
    SymbolContainer SC;233,7875
    std::vector<Reloc> Relocs;234,7899
    Section(236,7931
    RelocTarget addSymbol(245,8369
    void addReloc(258,8830
    auto &rawStruct(rawStruct263,9018
  struct Segment 268,9120
    MachOBuilder &Builder;Builder269,9197
    std::vector<std::unique_ptr<Section>> Sections;270,9224
    Segment(272,9277
    Section &addSection(addSection281,9677
    size_t write(286,9859
  MachOBuilder(296,10215
  template <MachO::LoadCommandType LCType,301,10362
  MachOBuilderLoadCommand<LCType> &addLoadCommand(addLoadCommand302,10424
  StringId addString(312,10800
  Segment &addSegment(addSegment318,10983
  RelocTarget addSymbol(323,11108
  size_t layout(340,11727
  void write(444,15259
  typename MachOTraits::Header Header;455,15649
  void makeStringTable(458,15698
  size_t writeHeader(472,15999
  size_t writeSegments(477,16191
  size_t writeLoadCommands(483,16366
  size_t writeSectionContent(489,16548
  size_t writeRelocations(508,17151
  size_t writeSymbols(527,17809
  size_t writeStrings(558,18647
  size_t PageSize;568,18969
  std::list<Segment> Segments;569,18988
  std::vector<std::unique_ptr<MachOBuilderLoadCommandBase>> LoadCommands;570,19019
  SymbolContainer SC;571,19093
  std::map<std::map574,19166
  std::map<StringRef, size_t> Strings;574,19166
  StringTable StrTab;575,19205
struct MachO64LE 578,19231
  using UIntPtr 579,19250
  using Header 580,19278
  using Section 581,19318
  using NList 582,19355
  using Relocation 583,19388
  static constexpr llvm::endianness Endianness 585,19434
  static constexpr uint32_t Magic 586,19509
  static constexpr MachO::LoadCommandType SegmentCmd 587,19565
  static constexpr MachO::LoadCommandType SymTabCmd 588,19642

/usr/include/llvm/ExecutionEngine/Orc/MachOPlatform.h,3473
#define LLVM_EXECUTIONENGINE_ORC_MACHOPLATFORM_H14,553
class MachOPlatform 30,1017
  struct MachOJITDylibDepInfo 33,1145
    std::vector<ExecutorAddr> DepHeaders;35,1202
  enum class MachOExecutorSymbolFlags 43,1511
    None 44,1561
    Weak 45,1575
    Callable 46,1595
    LLVM_MARK_AS_BITMASK_ENUM(47,1619
    LLVM_MARK_AS_BITMASK_ENUM(/* LargestValue = */ Callable)47,1619
  struct HeaderOptions 52,1814
    struct Dylib 54,1919
      std::string Name;55,1938
      uint32_t Timestamp;56,1962
      uint32_t CurrentVersion;57,1988
      uint32_t CompatibilityVersion;58,2019
    std::optional<Dylib> IDDylib;63,2164
    std::vector<Dylib> LoadDylibs;65,2230
    std::vector<std::string> RPaths;67,2292
    HeaderOptions(70,2361
  ExecutionSession &getExecutionSession(getExecutionSession136,5715
  ObjectLinkingLayer &getObjectLinkingLayer(getObjectLinkingLayer137,5778
  NonOwningSymbolStringPtr getMachOHeaderStartSymbol(139,5859
  static ArrayRef<ArrayRef160,6730
  static ArrayRef<ArrayRef163,6881
      std::tuple<ExecutorAddr, ExecutorAddr,168,7024
  struct BootstrapInfo 171,7135
    std::mutex Mutex;172,7160
    std::condition_variable CV;173,7182
    shared::AllocActions DeferredAAs;175,7243
    ExecutorAddr MachOHeaderAddr;176,7281
    SymbolTableVector SymTab;177,7315
  class MachOPlatformPlugin 183,7527
    MachOPlatformPlugin(185,7603
    Error notifyFailed(196,8062
    Error notifyRemovingResources(200,8169
    void notifyTransferringResources(204,8281
    struct UnwindSections 211,8532
      SmallVector<ExecutorAddrRange> CodeRanges;212,8560
      ExecutorAddrRange DwarfSection;213,8609
      ExecutorAddrRange CompactUnwindSection;214,8647
    struct ObjCImageInfo 217,8701
    struct SymbolTablePair 225,8944
    std::mutex PluginMutex;264,10784
    MachOPlatform &MP;MP265,10812
    DenseMap<DenseMap269,10935
    DenseMap<JITDylib *, ObjCImageInfo> ObjCImageInfos;269,10935
    DenseMap<DenseMap270,10991
    DenseMap<JITDylib *, ExecutorAddr> HeaderAddrs;270,10991
    InitSymbolDepMap InitSymbolDeps;271,11043
  ExecutionSession &ES;ES318,13195
  JITDylib &PlatformJD;PlatformJD319,13219
  ObjectLinkingLayer &ObjLinkingLayer;ObjLinkingLayer320,13243
  MachOHeaderMUBuilder BuildMachOHeaderMU;321,13282
  struct RuntimeFunction 325,13398
    RuntimeFunction(326,13425
    SymbolStringPtr Name;327,13494
    ExecutorAddr Addr;328,13520
  DenseMap<DenseMap358,14922
  DenseMap<JITDylib *, SymbolLookupSet> RegisteredInitSymbols;358,14922
  std::mutex PlatformMutex;360,14986
  DenseMap<DenseMap361,15014
  DenseMap<JITDylib *, ExecutorAddr> JITDylibToHeaderAddr;361,15014
  DenseMap<DenseMap362,15073
  DenseMap<ExecutorAddr, JITDylib *> HeaderAddrToJITDylib;362,15073
  DenseMap<DenseMap363,15132
  DenseMap<JITDylib *, uint64_t> JITDylibToPThreadKey;363,15132
  std::atomic<BootstrapInfo *> Bootstrap;365,15188
class SimpleMachOHeaderMU 369,15263
  StringRef getName(373,15463
  MachOPlatform &MOP;MOP381,15852
  MachOPlatform::HeaderOptions Opts;382,15874
  struct HeaderSymbol 385,15921
    const char *Name;Name386,15945
    uint64_t Offset;387,15967
  static constexpr HeaderSymbol AdditionalHeaderSymbols[AdditionalHeaderSymbols390,15994
MachOPlatform::buildSimpleMachOHeaderMU(buildSimpleMachOHeaderMU402,16458
struct MachOHeaderInfo 408,16728
  size_t PageSize 409,16753
  uint32_t CPUType 410,16776
  uint32_t CPUSubType 411,16800

/usr/include/llvm/ExecutionEngine/Orc/ObjectLinkingLayer.h,1421
#define LLVM_EXECUTIONENGINE_ORC_OBJECTLINKINGLAYER_H15,596
class ObjectLinkingLayer 49,1506
  static char ID;54,1697
  class Plugin 59,1881
    virtual void modifyPassConfig(66,2086
    virtual void notifyMaterializing(72,2403
    virtual void notifyLoaded(77,2672
    virtual Error notifyEmitted(78,2740
    getSyntheticSymbolDependencies(91,3412
  void setReturnObjectBuffer(120,4596
  ObjectLinkingLayer &addPlugin(addPlugin125,4775
  Error add(135,5132
  using ObjectLayer::add;140,5304
  setOverrideObjectFlagsWithResponsibilityFlags(159,6104
  setAutoClaimResponsibilityForObjectSymbols(176,7102
  mutable std::mutex LayerMutex;194,7843
  jitlink::JITLinkMemoryManager &MemMgr;MemMgr195,7876
  std::unique_ptr<jitlink::JITLinkMemoryManager> MemMgrOwnership;196,7917
  ReturnObjectBufferFunction ReturnObjectBuffer;199,8058
  DenseMap<DenseMap200,8107
  DenseMap<ResourceKey, std::vector<FinalizedAlloc>> Allocs;200,8107
  std::vector<std::unique_ptr<Plugin>> Plugins;201,8168
class EHFrameRegistrationPlugin 204,8220
  std::mutex EHFramePluginMutex;219,8944
  ExecutionSession &ES;ES220,8977
  std::unique_ptr<jitlink::EHFrameRegistrar> Registrar;221,9001
  DenseMap<DenseMap222,9057
  DenseMap<MaterializationResponsibility *, ExecutorAddrRange> InProcessLinks;222,9057
  DenseMap<DenseMap223,9136
  DenseMap<ResourceKey, std::vector<ExecutorAddrRange>> EHFrameRanges;223,9136

/usr/include/llvm/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.h,779
#define LLVM_EXECUTIONENGINE_ORC_RTDYLDOBJECTLINKINGLAYER_H14,598
class RTDyldObjectLinkingLayer36,1187
  static char ID;40,1323
  RTDyldObjectLinkingLayer &setNotifyLoaded(setNotifyLoaded66,2296
  setNotifyEmitted(73,2517
  RTDyldObjectLinkingLayer &setProcessAllSections(setProcessAllSections84,2918
  setOverrideObjectFlagsWithResponsibilityFlags(98,3592
  setAutoClaimResponsibilityForObjectSymbols(115,4602
  mutable std::mutex RTDyldLayerMutex;146,5856
  GetMemoryManagerFunction GetMemoryManager;147,5895
  NotifyLoadedFunction NotifyLoaded;148,5940
  NotifyEmittedFunction NotifyEmitted;149,5977
  DenseMap<DenseMap153,6126
  DenseMap<ResourceKey, std::vector<MemoryManagerUP>> MemMgrs;153,6126
  std::vector<JITEventListener *> EventListeners;154,6189

/usr/include/llvm/ExecutionEngine/Orc/SpeculateAnalyses.h,370
#define LLVM_EXECUTIONENGINE_ORC_SPECULATEANALYSES_H14,637
class SpeculateQuery 25,894
  void findCalles(27,928
  bool isStraightLine(28,990
class BlockFreqQuery 35,1183
class SequenceBBQuery 47,1603
  struct WalkDirection 48,1651
  using VisitedBlocksInfoTy 55,1804
  using BlockListTy 56,1879
  using BackEdgesInfoTy 57,1937
  using BlockFreqInfoTy 59,2036

/usr/include/llvm/ExecutionEngine/Orc/SymbolStringPool.h,2997
#define LLVM_EXECUTIONENGINE_ORC_SYMBOLSTRINGPOOL_H14,574
class SymbolStringPool 32,914
  friend raw_ostream &operator<<(raw_ostream &OS, const SymbolStringPool &SSP)SSP38,1091
  ~SymbolStringPool(42,1214
  SymbolStringPtr intern(45,1298
  void clearDeadEntries(48,1408
  bool empty(51,1477
  mutable std::mutex PoolMutex;59,1708
  PoolMap Pool;60,1740
class SymbolStringPtrBase 70,2048
  SymbolStringPtrBase(77,2256
  explicit operator bool(operator bool79,2298
  StringRef operator*(81,2346
  friend bool operator==(operator==83,2400
  friend bool operator!=(operator!=87,2509
  friend bool operator<(91,2617
  bool poolEntryIsAlive(100,3030
  using PoolEntry 106,3146
  using PoolEntryPtr 107,3198
  SymbolStringPtrBase(109,3235
  constexpr static uintptr_t EmptyBitPattern 111,3284
  constexpr static uintptr_t TombstoneBitPattern 115,3443
  constexpr static uintptr_t InvalidPtrMask 119,3612
  static bool isRealPoolEntry(124,3850
  size_t getRefCount(129,4000
  PoolEntryPtr S 133,4103
class SymbolStringPtr 137,4194
  SymbolStringPtr(144,4411
  SymbolStringPtr(145,4448
  SymbolStringPtr& operator=(operator=151,4609
  SymbolStringPtr(158,4738
  SymbolStringPtr& operator=(operator=160,4809
  ~SymbolStringPtr(167,4946
  SymbolStringPtr(170,4991
  void incRef(172,5065
  void decRef(177,5139
  static SymbolStringPtr getEmptyVal(184,5301
  static SymbolStringPtr getTombstoneVal(188,5424
class SymbolStringPoolEntryUnsafe 195,5700
  using PoolEntry 197,5744
  SymbolStringPoolEntryUnsafe(199,5797
  static SymbolStringPoolEntryUnsafe from(202,5922
  static SymbolStringPoolEntryUnsafe take(207,6088
  PoolEntry *rawPtr(rawPtr213,6223
  SymbolStringPtr copyToSymbolStringPtr(217,6369
  SymbolStringPtr moveToSymbolStringPtr(221,6557
  void retain(227,6666
  void release(228,6703
  PoolEntry *E E231,6751
class NonOwningSymbolStringPtr 246,7505
  explicit NonOwningSymbolStringPtr(251,7677
  using SymbolStringPtrBase::operator=;SymbolStringPtrBase::operator=;254,7774
  static NonOwningSymbolStringPtr getEmptyVal(259,7896
  static NonOwningSymbolStringPtr getTombstoneVal(264,8046
inline SymbolStringPtr::SymbolStringPtr(270,8207
inline SymbolStringPool::~SymbolStringPool(~SymbolStringPool279,8470
inline SymbolStringPtr SymbolStringPool::intern(intern286,8648
inline void SymbolStringPool::clearDeadEntries(clearDeadEntries294,8876
inline bool SymbolStringPool::empty(empty303,9107
SymbolStringPool::getRefCount(getRefCount309,9240
struct DenseMapInfo<DenseMapInfo316,9373
  static orc::SymbolStringPtr getEmptyKey(318,9418
  static orc::SymbolStringPtr getTombstoneKey(322,9517
  static unsigned getHashValue(326,9624
  static bool isEqual(330,9777
template <> struct DenseMapInfo<DenseMapInfo336,9932
  static orc::NonOwningSymbolStringPtr getEmptyKey(338,9998
  static orc::NonOwningSymbolStringPtr getTombstoneKey(342,10115
  static unsigned getHashValue(346,10240
  static bool isEqual(351,10411

/usr/include/llvm/ExecutionEngine/GenericValue.h,559
#define LLVM_EXECUTIONENGINE_GENERICVALUE_H14,581
namespace llvm 19,673
struct GenericValue 23,718
  struct IntPair 24,740
    unsigned int first;25,759
    unsigned int second;26,783
    double DoubleVal;29,823
    float FloatVal;30,845
    PointerTy PointerVal;31,865
    struct IntPair UIntPairVal;32,891
    unsigned char Untyped[Untyped33,923
  APInt IntVal;35,958
  std::vector<GenericValue> AggregateVal;37,1036
  GenericValue(42,1253
  explicit GenericValue(46,1346
inline GenericValue PTOGV(49,1416
inline void *GVTOP(GVTOP50,1479

/usr/include/llvm/ExecutionEngine/Interpreter.h,127
#define LLVM_EXECUTIONENGINE_INTERPRETER_H15,591
  struct ForceInterpreterLinking 22,740
    ForceInterpreterLinking(23,775

/usr/include/llvm/ExecutionEngine/MCJIT.h,109
#define LLVM_EXECUTIONENGINE_MCJIT_H15,579
  struct ForceMCJITLinking 23,735
    ForceMCJITLinking(24,764

/usr/include/llvm/ExecutionEngine/ObjectCache.h,106
#define LLVM_EXECUTIONENGINE_OBJECTCACHE_H10,413
class ObjectCache 23,759
  virtual void anchor(24,779

/usr/include/llvm/ExecutionEngine/RuntimeDyld.h,1156
#define LLVM_EXECUTIONENGINE_RUNTIMEDYLD_H14,570
class RuntimeDyldError 42,1218
  static char ID;44,1288
  RuntimeDyldError(46,1307
  const std::string &getErrorMessage(getErrorMessage49,1422
  std::string ErrMsg;53,1551
class RuntimeDyld 58,1601
  using NotifyStubEmittedFunction 64,1851
  class LoadedObjectInfo 69,2071
    LoadedObjectInfo(75,2246
    RuntimeDyldImpl &RTDyld;RTDyld87,2641
    ObjSectionToIDMap ObjSecToIDMap;88,2670
  class MemoryManager 92,2738
    struct TLSSection 116,3881
      uint8_t *InitializationImage;InitializationImage118,3955
      intptr_t Offset;120,4016
    virtual void reserveAllocationSpace(137,4838
    virtual bool needsToReserveAllocationSpace(143,5200
    virtual bool allowStubAllocation(148,5481
    virtual void notifyObjectLoaded(182,7375
  std::map<std::map218,8884
  void setNotifyStubEmitted(238,9812
  void setProcessAllSections(262,10937
  std::unique_ptr<RuntimeDyldImpl> Dyld;300,12516
  MemoryManager &MemMgr;MemMgr301,12557
  JITSymbolResolver &Resolver;Resolver302,12582
  bool ProcessAllSections;303,12613
  NotifyStubEmittedFunction NotifyStubEmitted;304,12640

/usr/include/llvm/ExecutionEngine/SectionMemoryManager.h,883
#define LLVM_EXECUTIONENGINE_SECTIONMEMORYMANAGER_H15,636
class SectionMemoryManager 39,1686
  enum class AllocationPurpose 43,1849
    Code,44,1882
    ROData,45,1892
    RWData,46,1904
  class MemoryMapper 51,2045
  struct FreeMemBlock 153,7196
    sys::MemoryBlock Free;155,7259
    unsigned PendingPrefixIndex;160,7545
  struct MemoryGroup 163,7584
    SmallVector<SmallVector168,7911
    SmallVector<sys::MemoryBlock, 16> PendingMem;168,7911
    SmallVector<SmallVector169,7961
    SmallVector<FreeMemBlock, 16> FreeMem;169,7961
    SmallVector<SmallVector172,8071
    SmallVector<sys::MemoryBlock, 16> AllocatedMem;172,8071
    sys::MemoryBlock Near;174,8124
  MemoryGroup CodeMem;185,8442
  MemoryGroup RWDataMem;186,8465
  MemoryGroup RODataMem;187,8490
  MemoryMapper *MMapper;MMapper188,8515
  std::unique_ptr<MemoryMapper> OwnedMMapper;189,8540

/usr/include/llvm/ExecutionEngine/ExecutionEngine.h,3627
#define LLVM_EXECUTIONENGINE_EXECUTIONENGINE_H15,595
class ExecutionEngineState 64,1782
  using GlobalAddressMapTy 66,1819
  GlobalAddressMapTy GlobalAddressMap;71,1992
  std::map<std::map77,2302
  std::map<uint64_t, std::string> GlobalAddressReverseMap;77,2302
  GlobalAddressMapTy &getGlobalAddressMap(getGlobalAddressMap80,2370
  std::map<std::map84,2450
  std::map<uint64_t, std::string> &getGlobalAddressReverseMap(getGlobalAddressReverseMap84,2450
using FunctionCreator 94,2712
class ExecutionEngine 99,2944
  ExecutionEngineState EEState;105,3211
  const DataLayout DL;113,3605
  bool CompilingLazily;116,3676
  bool GVCompilationDisabled;119,3772
  bool SymbolSearchingDisabled;123,3895
  bool VerifyModules;126,3995
  SmallVector<SmallVector133,4244
  SmallVector<std::unique_ptr<Module>, 1> Modules;133,4244
  FunctionCreator LazyFunctionCreator;150,4949
  std::string ErrMsg;155,5084
  sys::Mutex lock;160,5267
  virtual void addModule(169,5575
  const DataLayout &getDataLayout(getDataLayout196,6766
  virtual void mapSectionAddress(244,9306
  virtual void generateCodeForModule(265,10372
  virtual void finalizeObject(277,10998
  bool hasError(280,11084
  void clearErrorMessage(283,11168
  const std::string &getErrorMessage(getErrorMessage286,11261
  virtual void *getPointerToFunctionOrStub(getPointerToFunctionOrStub367,15259
  virtual uint64_t getGlobalValueAddress(376,15612
  virtual uint64_t getFunctionAddress(384,15964
  virtual void *getOrEmitGlobalVariable(getOrEmitGlobalVariable410,17082
  virtual void RegisterJITEventListener(418,17461
  virtual void UnregisterJITEventListener(419,17524
  virtual void setObjectCache(423,17733
  virtual void setProcessAllSections(438,18537
  virtual TargetMachine *getTargetMachine(getTargetMachine443,18720
  void DisableLazyCompilation(458,19641
  bool isCompilingLazily(461,19732
  void DisableGVCompilation(468,19969
  bool isGVCompilationDisabled(471,20063
  void DisableSymbolSearching(478,20343
  bool isSymbolSearchingDisabled(481,20441
  void setVerifyModules(489,20730
  bool getVerifyModules(492,20801
  void InstallLazyFunctionCreator(499,21044
  ExecutionEngine(504,21155
namespace EngineKind 520,21626
  enum Kind 523,21708
    JIT 524,21722
    Interpreter 525,21745
  const static Kind Either 527,21772
class EngineBuilder 534,22025
  std::unique_ptr<Module> M;536,22056
  EngineKind::Kind WhichEngine;537,22085
  std::string *ErrorStr;ErrorStr538,22117
  CodeGenOptLevel OptLevel;539,22142
  std::shared_ptr<MCJITMemoryManager> MemMgr;540,22170
  std::shared_ptr<LegacyJITSymbolResolver> Resolver;541,22216
  TargetOptions Options;542,22269
  std::optional<Reloc::Model> RelocModel;543,22294
  std::optional<CodeModel::Model> CMModel;544,22336
  std::string MArch;545,22379
  std::string MCPU;546,22400
  SmallVector<SmallVector547,22420
  SmallVector<std::string, 4> MAttrs;547,22420
  bool VerifyModules;548,22458
  bool EmulatedTLS 549,22480
  EngineBuilder &setEngineKind(setEngineKind563,22918
  EngineBuilder &setErrorStr(setErrorStr583,23813
  EngineBuilder &setOptLevel(setOptLevel590,24018
  EngineBuilder &setTargetOptions(setTargetOptions597,24234
  EngineBuilder &setRelocationModel(setRelocationModel604,24494
  EngineBuilder &setCodeModel(setCodeModel612,24752
  EngineBuilder &setMArch(setMArch618,24915
  EngineBuilder &setMCPU(setMCPU624,25073
  EngineBuilder &setVerifyModules(setVerifyModules631,25293
  EngineBuilder &setMAttrs(setMAttrs638,25476
  void setEmulatedTLS(644,25627
  ExecutionEngine *create(create657,26116

/usr/include/llvm/ExecutionEngine/JITEventListener.h,672
#define LLVM_EXECUTIONENGINE_JITEVENTLISTENER_H15,659
class JITEventListener 40,1353
  using ObjectKey 42,1386
  virtual void notifyObjectLoaded(56,2012
  virtual void notifyFreeingObject(61,2289
  static JITEventListener *createIntelJITEventListener(createIntelJITEventListener74,2814
  static JITEventListener *createIntelJITEventListener(createIntelJITEventListener76,2892
  static JITEventListener *createOProfileJITEventListener(createOProfileJITEventListener90,3426
  static JITEventListener *createOProfileJITEventListener(createOProfileJITEventListener92,3507
  static JITEventListener *createPerfJITEventListener(createPerfJITEventListener101,3769

/usr/include/llvm/ExecutionEngine/JITSymbol.h,2758
#define LLVM_EXECUTIONENGINE_JITSYMBOL_H14,543
using JITTargetAddress 42,1064
template <typename T> T jitTargetAddressToPointer(50,1426
template <typename T> T jitTargetAddressToFunction(61,1966
template <typename T> JITTargetAddress pointerToJITTargetAddress(69,2305
class JITSymbolFlags 74,2491
  using UnderlyingType 76,2522
  using TargetFlagsType 77,2556
  enum FlagNames 79,2592
    None 80,2628
    HasError 81,2642
    Weak 82,2666
    Common 83,2686
    Absolute 84,2708
    Exported 85,2732
    Callable 86,2756
    MaterializationSideEffectsOnly 87,2780
    LLVM_MARK_AS_BITMASK_ENUM(88,2826
        MaterializationSideEffectsOnly)89,2875
  JITSymbolFlags(96,3067
  JITSymbolFlags(100,3214
  explicit operator bool(operator bool104,3395
  bool operator==(operator==107,3503
  JITSymbolFlags &operator&=(operator&=112,3670
  JITSymbolFlags &operator|=(operator|=118,3807
  bool hasError(124,3965
  bool isWeak(129,4083
  bool isCommon(134,4193
  bool isStrong(139,4318
  bool isExported(144,4434
  bool isCallable(149,4574
  bool hasMaterializationSideEffectsOnly(161,5358
  UnderlyingType getRawFlagsValue(167,5564
  TargetFlagsType& getTargetFlags(172,5715
  const TargetFlagsType& getTargetFlags(175,5831
  TargetFlagsType TargetFlags 191,6412
  FlagNames Flags 192,6447
inline JITSymbolFlags operator&(195,6477
inline JITSymbolFlags operator|(202,6667
class ARMJITSymbolFlags 211,6955
  enum FlagNames 215,7023
    None 216,7042
    Thumb 217,7056
  operator JITSymbolFlags::TargetFlagsType&(TargetFlagsType&220,7081
  JITSymbolFlags::TargetFlagsType Flags 225,7234
class JITEvaluatedSymbol 229,7354
  JITEvaluatedSymbol(234,7454
  JITEvaluatedSymbol(237,7550
  fromPointer(243,7781
  explicit operator bool(operator bool248,7998
  JITTargetAddress getAddress(251,8098
  JITSymbolFlags getFlags(254,8197
  void setFlags(257,8287
  JITTargetAddress Address 260,8371
  JITSymbolFlags Flags;261,8403
class JITSymbol 265,8467
  using GetAddressFtor 267,8493
  JITSymbol(271,8697
  JITSymbol(276,8889
  JITSymbol(280,9036
  JITSymbol(284,9191
  JITSymbol(296,9745
  JITSymbol(302,9973
  JITSymbol& operator=(operator=310,10205
  ~JITSymbol(320,10471
  explicit operator bool(operator bool328,10644
  Error takeError(333,10800
  Expected<JITTargetAddress> getAddress(341,11031
  JITSymbolFlags getFlags(354,11442
  GetAddressFtor GetAddress;357,11504
    JITTargetAddress CachedAddr;359,11543
    Error Err;360,11576
  JITSymbolFlags Flags;362,11596
class JITSymbolResolver 371,11948
  using LookupSet 373,11982
  using LookupResult 374,12023
  using OnResolvedFunction 375,12087
  virtual bool allowsZeroSymbols(394,12950
class LegacyJITSymbolResolver 401,13082

/usr/include/llvm/ExecutionEngine/OProfileWrapper.h,1685
#define LLVM_EXECUTIONENGINE_OPROFILEWRAPPER_H20,961
class OProfileWrapper 28,1086
  typedef  op_agent_t    (*op_open_agent_ptr_t)op_open_agent_ptr_t29,1110
  typedef  int           (*op_close_agent_ptr_t)op_close_agent_ptr_t30,1161
  typedef  int           (*op_write_native_code_ptr_t)op_write_native_code_ptr_t31,1223
  typedef  int           (*op_write_debug_line_info_ptr_t)op_write_debug_line_info_ptr_t36,1539
  typedef  int           (*op_unload_native_code_ptr_t)op_unload_native_code_ptr_t40,1807
  typedef  int           (*op_major_version_ptr_t)op_major_version_ptr_t43,1961
  typedef  bool          (*IsOProfileRunningPtrT)IsOProfileRunningPtrT46,2086
  op_agent_t                      Agent;49,2141
  op_open_agent_ptr_t             OpenAgentFunc;50,2182
  op_close_agent_ptr_t            CloseAgentFunc;51,2231
  op_write_native_code_ptr_t      WriteNativeCodeFunc;52,2281
  op_write_debug_line_info_ptr_t  WriteDebugLineInfoFunc;53,2336
  op_unload_native_code_ptr_t     UnloadNativeCodeFunc;54,2394
  op_major_version_ptr_t          MajorVersionFunc;55,2450
  op_major_version_ptr_t          MinorVersionFunc;56,2502
  IsOProfileRunningPtrT           IsOProfileRunningFunc;57,2554
  bool Initialized;59,2612
  OProfileWrapper(62,2641
  OProfileWrapper(66,2773
  bool op_open_agent(90,3910
  int op_close_agent(92,3935
  int op_write_native_code(93,3959
  int op_write_debug_line_info(97,4144
  int op_unload_native_code(100,4312
  int op_major_version(101,4356
  int op_minor_version(102,4382
  bool isAgentAvailable(107,4577
  bool initialize(112,4716
  bool checkForOProfileProcEntry(116,4849
  bool isOProfileRunning(118,4886

/usr/include/llvm/ExecutionEngine/RTDyldMemoryManager.h,582
#define LLVM_EXECUTIONENGINE_RTDYLDMEMORYMANAGER_H14,571
class MCJITMemoryManager 32,957
  using RuntimeDyld::MemoryManager::notifyObjectLoaded;35,1107
  virtual void notifyObjectLoaded(47,1789
class RTDyldMemoryManager 60,2284
  virtual uint64_t getSymbolAddress(85,3352
  JITSymbol findSymbol(100,4102
  virtual uint64_t getSymbolAddressInLogicalDylib(108,4393
  findSymbolInLogicalDylib(123,5067
  struct EHFrame 141,5879
    uint8_t *Addr;Addr142,5898
    size_t Size;143,5917
  typedef std::vector<EHFrame> EHFrameInfos;145,5939
  EHFrameInfos EHFrames;146,5984

/usr/include/llvm/ExecutionEngine/RuntimeDyldChecker.h,608
#define LLVM_EXECUTIONENGINE_RUNTIMEDYLDCHECKER_H10,420
class RuntimeDyldChecker 79,2520
  class MemoryRegionInfo 81,2555
    MemoryRegionInfo(86,2697
    MemoryRegionInfo(92,3005
    bool isZeroFill(96,3188
    void setContent(102,3368
    void setZeroFill(109,3611
    ArrayRef<char> getContent(115,3820
    uint64_t getZeroFillLength(121,4052
    void setTargetAddress(127,4247
    JITTargetAddress getTargetAddress(133,4475
    TargetFlagsType getTargetFlags(136,4594
    void setTargetFlags(139,4708
  std::pair<std::pair185,6835
  std::unique_ptr<RuntimeDyldCheckerImpl> Impl;194,7252

/usr/include/llvm/FileCheck/FileCheck.h,1853
#define LLVM_FILECHECK_FILECHECK_H14,558
struct FileCheckRequest 30,914
  std::vector<StringRef> CheckPrefixes;31,940
  std::vector<StringRef> CommentPrefixes;32,980
  std::vector<StringRef> ImplicitCheckNot;34,1063
  std::vector<StringRef> GlobalDefines;35,1106
namespace Check 47,1441
enum FileCheckKind 49,1460
  CheckNone 50,1481
  CheckMisspelled,51,1498
  CheckPlain,52,1517
  CheckNext,53,1531
  CheckSame,54,1544
  CheckNot,55,1557
  CheckDAG,56,1569
  CheckLabel,57,1581
  CheckEmpty,58,1595
  CheckComment,59,1609
  CheckEOF,63,1728
  CheckBadNot,66,1821
  CheckBadCount69,1913
enum FileCheckKindModifier 72,1933
  ModifierLiteral 74,2013
  Size77,2066
class FileCheckType 80,2077
  FileCheckKind Kind;81,2099
  int Count;82,2121
  std::bitset<FileCheckKindModifier::Size> Modifiers;84,2210
  FileCheckType(87,2273
  operator FileCheckKind(operator FileCheckKind91,2459
  int getCount(93,2510
  bool isLiteralMatch(96,2586
  FileCheckType &setLiteralMatch(setLiteralMatch99,2684
struct FileCheckDiag 113,3084
  Check::FileCheckType CheckTy;115,3166
  SMLoc CheckLoc;117,3258
  enum MatchType 130,3994
    MatchFoundAndExpected,132,4069
    MatchFoundButExcluded,134,4147
    MatchFoundButWrongLine,137,4269
    MatchFoundButDiscarded,139,4358
    MatchFoundErrorNote,145,4740
    MatchNoneAndExcluded,147,4817
    MatchNoneButExpected,151,5052
    MatchNoneForInvalidPattern,156,5325
    MatchFuzzy,159,5510
  } MatchTy;160,5526
  unsigned InputStartLine;163,5632
  unsigned InputStartCol;164,5659
  unsigned InputEndLine;165,5685
  unsigned InputEndCol;166,5710
  std::string Note;169,5832
class FileCheck 180,6204
  FileCheckRequest Req;181,6222
  std::unique_ptr<FileCheckPatternContext> PatternContext;182,6246
  std::unique_ptr<std::vector<FileCheckString>> CheckStrings;184,6353

/usr/include/llvm/Frontend/Debug/Options.h,582
#define LLVM_FRONTEND_DEBUG_OPTIONS_H10,408
enum DebugInfoFormat 15,492
  DIF_DWARF,16,515
  DIF_CodeView,17,528
enum DebugInfoKind 20,548
  NoDebugInfo,22,602
  LocTrackingOnly,28,880
  DebugDirectivesOnly,31,960
  DebugLineTablesOnly,35,1083
  DebugInfoConstructor,41,1347
  LimitedDebugInfo,47,1661
  FullDebugInfo,50,1718
  UnusedTypeInfo,54,1848
enum class DebugTemplateNamesKind 57,1870
enum class DebugTemplateNamesKind { Full,57,1870
enum class DebugTemplateNamesKind { Full, Simple,57,1870
enum class DebugTemplateNamesKind { Full, Simple, Mangled 57,1870

/usr/include/llvm/Frontend/Directive/DirectiveBase.td,1231
class DirectiveLanguage 15,571
  string name 17,653
  string cppNamespace 26,1103
  string directivePrefix 30,1225
  string clausePrefix 34,1345
  bit makeEnumAvailableInNamespace 38,1524
  bit enableBitmaskEnumInNamespace 41,1629
  string includeHeader 45,1823
  string clauseEnumSetClass 48,1932
  string flangClauseBaseClass 51,2023
  string name 57,2194
  int value 60,2248
  bit isUserValue 63,2300
  bit isDefault 66,2377
class Clause<Clause70,2445
  string name 72,2495
  string alternativeName 75,2595
  list<string> aliases 78,2667
  string clangClass 81,2759
  string flangClass 84,2848
  bit isValueOptional 87,2940
  string enumClauseValue 90,3037
  list<ClauseVal> allowedClauseValues 93,3104
  bit isValueList 96,3226
  string defaultValue 99,3295
  bit isImplicit 103,3474
  bit isDefault 107,3632
  string prefix 111,3755
  bit isPrefixOptional 115,3842
class Directive<Directive131,4248
  string name 133,4356
  string alternativeName 137,4464
  list<VersionedClause> allowedClauses 144,4744
  list<VersionedClause> allowedOnceClauses 147,4849
  list<VersionedClause> allowedExclusiveClauses 150,4961
  list<VersionedClause> requiredClauses 153,5056
  bit isDefault 156,5152

/usr/include/llvm/Frontend/HLSL/HLSLResource.h,1201
#define LLVM_FRONTEND_HLSL_HLSLRESOURCE_H14,578
enum class ResourceClass 23,710
  SRV 24,747
  UAV,25,758
  CBuffer,26,765
  Sampler,27,776
  Invalid,28,787
  NumClasses 29,798
enum class ResourceKind 34,952
  Invalid 35,989
  Texture1D,36,1004
  Texture2D,37,1017
  Texture2DMS,38,1030
  Texture3D,39,1045
  TextureCube,40,1058
  Texture1DArray,41,1073
  Texture2DArray,42,1091
  Texture2DMSArray,43,1109
  TextureCubeArray,44,1129
  TypedBuffer,45,1149
  RawBuffer,46,1164
  StructuredBuffer,47,1177
  CBuffer,48,1197
  Sampler,49,1208
  TBuffer,50,1219
  RTAccelerationStructure,51,1230
  FeedbackTexture2D,52,1257
  FeedbackTexture2DArray,53,1278
  NumEntries,54,1304
enum class ElementType 59,1448
  Invalid 60,1484
  I1,61,1499
  I16,62,1505
  U16,63,1512
  I32,64,1519
  U32,65,1526
  I64,66,1533
  U64,67,1540
  F16,68,1547
  F32,69,1554
  F64,70,1561
  SNormF16,71,1568
  UNormF16,72,1580
  SNormF32,73,1592
  UNormF32,74,1604
  SNormF64,75,1616
  UNormF64,76,1628
  PackedS8x32,77,1640
  PackedU8x32,78,1655
class FrontendResource 81,1674
  MDNode *Entry;Entry82,1699
  FrontendResource(85,1725
  MDNode *getMetadata(getMetadata99,2195

/usr/include/llvm/Frontend/OpenACC/ACC.h.inc,1587
namespace 6,86
class 7,103
namespace 8,120
enum 12,180
static 36,546
constexpr 38,601
constexpr 39,665
constexpr 40,727
constexpr 41,787
constexpr 42,853
constexpr 43,925
constexpr 44,995
constexpr 45,1065
constexpr 46,1125
constexpr 47,1191
constexpr 48,1267
constexpr 49,1327
constexpr 50,1395
constexpr 51,1473
constexpr 52,1539
constexpr 53,1603
constexpr 54,1677
constexpr 55,1735
constexpr 56,1803
constexpr 57,1869
constexpr 58,1933
enum 60,1994
static 108,2742
constexpr 110,2794
constexpr 111,2853
constexpr 112,2914
constexpr 113,2971
constexpr 114,3028
constexpr 115,3091
constexpr 116,3156
constexpr 117,3213
constexpr 118,3274
constexpr 119,3337
constexpr 120,3398
constexpr 121,3461
constexpr 122,3536
constexpr 123,3597
constexpr 124,3658
constexpr 125,3719
constexpr 126,3788
constexpr 127,3855
constexpr 128,3934
constexpr 129,4005
constexpr 130,4070
constexpr 131,4143
constexpr 132,4200
constexpr 133,4257
constexpr 134,4310
constexpr 135,4379
constexpr 136,4450
constexpr 137,4507
constexpr 138,4574
constexpr 139,4635
constexpr 140,4702
constexpr 141,4773
constexpr 142,4836
constexpr 143,4899
constexpr 144,4956
constexpr 145,5023
constexpr 146,5080
constexpr 147,5135
constexpr 148,5192
constexpr 149,5255
constexpr 150,5324
constexpr 151,5385
constexpr 152,5460
constexpr 153,5517
constexpr 154,5578
enum 156,5638
constexpr 161,5715
constexpr 162,5798
Directive 165,5908
llvm:llvm167,5965
Clause 169,6020
llvm:llvm171,6071
bool 174,6194
DefaultValue 176,6270
llvm:llvm177,6311

/usr/include/llvm/Frontend/OpenACC/ACC.inc,2355
namespace 4,79
namespace 5,96
void 850,22920
void 854,23004
void 860,23104
void 861,23159
void 867,23255
void 868,23316
void 874,23420
void 880,23516
void 886,23616
void 892,23718
void 898,23818
void 904,23920
void 910,24033
void 916,24133
void 922,24233
void 928,24333
void 934,24440
void 940,24546
void 946,24663
void 952,24772
void 953,24835
void 959,24947
void 963,25029
void 969,25125
void 975,25217
void 976,25283
void 977,25352
void 983,25448
void 989,25553
void 990,25612
void 996,25722
void 1002,25831
void 1008,25933
void 1014,26035
void 1015,26090
void 1021,26196
void 1025,26278
void 1026,26331
void 1032,26427
void 1033,26488
void 1039,26595
void 1043,26681
void 1049,26794
void 1053,26876
void 1057,26962
void 1064,27129
void 1065,27175
void 1066,27222
void 1067,27267
void 1068,27312
void 1069,27360
void 1070,27409
void 1071,27454
void 1072,27501
void 1073,27549
void 1074,27596
void 1075,27644
void 1076,27697
void 1077,27744
void 1078,27791
void 1079,27838
void 1080,27888
void 1081,27938
void 1082,27993
void 1083,28044
void 1084,28093
void 1085,28146
void 1086,28191
void 1087,28236
void 1088,28279
void 1089,28329
void 1090,28381
void 1091,28426
void 1092,28475
void 1093,28522
void 1094,28571
void 1095,28622
void 1096,28670
void 1097,28718
void 1098,28763
void 1099,28813
void 1100,28858
void 1101,28902
void 1102,28947
void 1103,28995
void 1104,29045
void 1105,29092
void 1106,29145
void 1107,29190
void 1108,29237
if 1115,29405
if 1117,29504
if 1119,29605
if 1121,29702
if 1123,29799
if 1125,29902
if 1127,30007
if 1129,30104
if 1131,30205
if 1133,30308
if 1135,30409
if 1137,30512
if 1139,30626
if 1141,30727
if 1143,30828
if 1145,30929
if 1147,31037
if 1149,31144
if 1151,31262
if 1153,31372
if 1155,31477
if 1157,31590
if 1159,31687
if 1161,31784
if 1163,31877
if 1165,31985
if 1167,32096
if 1169,32193
if 1171,32299
if 1173,32400
if 1175,32506
if 1177,32616
if 1179,32719
if 1181,32822
if 1183,32919
if 1185,33026
if 1187,33123
if 1189,33218
if 1191,33315
if 1193,33418
if 1195,33526
if 1197,33627
if 1199,33741
if 1201,33838
if 1203,33939
Directive 1346,41403
llvm:llvm1372,42266
Clause 1420,43407
llvm:llvm1470,45079
DefaultValue 1566,47341
llvm:llvm1573,47562
bool 1583,47826

/usr/include/llvm/Frontend/OpenACC/ACC.td,2918
def OpenACC : DirectiveLanguage 19,788
  let flangClass 36,1389
  let isValueOptional 37,1425
  let flangClass 45,1549
  let flangClass 50,1631
  let flangClass 59,1770
  let flangClass 64,1852
  let aliases 65,1888
  let flangClass 70,1983
  let aliases 71,2031
  let flangClass 76,2132
  let aliases 77,2180
  let flangClass 82,2281
  let aliases 83,2329
def ACC_Default_none : ClauseVal<"none", 1, 1> { let isDefault 87,2392
  let flangClass 91,2558
  let enumClauseValue 92,2597
  let allowedClauseValues 93,2637
  let flangClass 101,2781
  let flangClass 106,2867
  let flangClass 111,2953
  let flangClass 116,3039
  let flangClass 121,3142
  let flangClass 126,3233
  let flangClass 131,3336
  let flangClass 136,3428
  let defaultValue 137,3472
  let aliases 138,3498
  let flangClass 146,3639
  let flangClass 151,3720
  let isValueOptional 152,3757
  let flangClass 157,3833
  let flangClass 162,3911
  let flangClass 173,4104
  let flangClass 178,4195
  let flangClass 186,4335
  let isValueList 187,4371
  let flangClass 192,4453
  let flangClass 197,4540
  let flangClass 202,4628
  let flangClass 207,4710
  let flangClass 212,4805
  let flangClass 220,4940
  let flangClass 225,5034
  let isValueOptional 226,5070
  let flangClass 234,5191
  let isValueOptional 235,5227
  let prefix 236,5257
  let flangClass 241,5345
  let flangClass 246,5427
  let isValueOptional 247,5465
  let flangClass 252,5543
  let isValueOptional 253,5579
  let prefix 254,5609
  let isDefault 261,5718
  let allowedOnceClauses 273,6037
  let allowedClauses 278,6172
  let requiredClauses 282,6279
  let allowedClauses 297,6673
  let allowedClauses 311,7036
  let allowedOnceClauses 323,7412
  let allowedClauses 336,7744
  let allowedOnceClauses 355,8379
  let allowedClauses 366,8714
  let allowedOnceClauses 381,9202
  let allowedClauses 391,9410
  let allowedExclusiveClauses 401,9717
  let allowedOnceClauses 413,9952
  let allowedClauses 422,10144
  let allowedOnceClauses 430,10374
  let allowedOnceClauses 437,10487
  let requiredClauses 443,10665
  let allowedOnceClauses 455,11048
  let allowedClauses 464,11238
  let allowedOnceClauses 468,11337
  let requiredClauses 473,11470
  let allowedOnceClauses 482,11646
  let allowedClauses 490,11801
  let allowedOnceClauses 493,11862
  let requiredClauses 497,11958
  let allowedClauses 506,12147
  let allowedOnceClauses 509,12208
  let requiredClauses 514,12340
  let allowedOnceClauses 523,12527
  let requiredClauses 527,12627
  let allowedClauses 534,12755
  let allowedOnceClauses 556,13485
  let allowedExclusiveClauses 562,13648
  let allowedClauses 571,13851
  let allowedOnceClauses 594,14621
  let allowedExclusiveClauses 600,14784
  let allowedClauses 609,14983
  let allowedOnceClauses 629,15639
  let allowedExclusiveClauses 635,15802
  let isDefault 643,15986

/usr/include/llvm/Frontend/OpenMP/OMPAssume.h,415
#define LLVM_FRONTEND_OPENMP_OMPASSUME_H16,652
struct AssumptionClauseMappingInfo 25,801
  llvm::StringLiteral Identifier;27,901
  bool StartsWith;29,1016
  bool HasDirectiveList;31,1089
  bool HasExpression;33,1164
static constexpr AssumptionClauseMappingInfo AssumptionClauseMappings[AssumptionClauseMappings37,1220
#define OMP_ASSUME_CLAUSE(38,1296
inline std::string getAllAssumeClauseOptions(44,1568

/usr/include/llvm/Frontend/OpenMP/OMPContext.h,1184
#define LLVM_FRONTEND_OPENMP_OMPCONTEXT_H16,658
enum class TraitSet 33,1051
#define OMP_TRAIT_SET(34,1073
enum class TraitSelector 39,1235
#define OMP_TRAIT_SELECTOR(40,1262
enum class TraitProperty 45,1427
#define OMP_TRAIT_PROPERTY(46,1454
#define OMP_LAST_TRAIT_PROPERTY(47,1498
struct VariantMatchInfo 119,4848
  void addTrait(124,5161
  void addTrait(133,5672
  BitVector RequiredTraits 148,6163
  SmallVector<SmallVector149,6238
  SmallVector<StringRef, 8> ISATraits;149,6238
  SmallVector<SmallVector150,6277
  SmallVector<TraitProperty, 8> ConstructTraits;150,6277
  SmallDenseMap<SmallDenseMap151,6326
  SmallDenseMap<TraitProperty, APInt> ScoreMap;151,6326
struct OMPContext 157,6576
  void addTrait(161,6693
  void addTrait(164,6810
  virtual bool matchesISATrait(173,7177
  BitVector ActiveTraits 175,7244
  SmallVector<SmallVector176,7317
  SmallVector<TraitProperty, 8> ConstructTraits;176,7317
template <> struct DenseMapInfo<DenseMapInfo194,8161
  static inline omp::TraitProperty getEmptyKey(195,8215
  static inline omp::TraitProperty getTombstoneKey(198,8305
  static unsigned getHashValue(201,8399
  static bool isEqual(204,8509

/usr/include/llvm/Frontend/OpenMP/OMPDeviceConstants.h,200
#define LLVM_FRONTEND_OPENMP_OMPDEVICECONSTANTS_H16,609
enum OMPTgtExecModeFlags 21,694
  OMP_TGT_EXEC_MODE_GENERIC 22,737
  OMP_TGT_EXEC_MODE_SPMD 23,775
  OMP_TGT_EXEC_MODE_GENERIC_SPMD 24,810

/usr/include/llvm/Frontend/OpenMP/OMPGridValues.h,653
#define LLVM_FRONTEND_OPENMP_OMPGRIDVALUES_H15,577
struct GV 57,2205
  unsigned GV_Slot_Size;59,2275
  unsigned GV_Warp_Size;61,2371
  constexpr unsigned warpSlotSize(63,2397
  unsigned GV_Max_Teams;68,2521
  unsigned GV_Default_Num_Teams;70,2620
  unsigned GV_SimpleBufferSize;75,2875
  unsigned GV_Max_WG_Size;77,2963
  unsigned GV_Default_WG_Size;79,3045
  constexpr unsigned maxWarpNumber(81,3077
static constexpr GV AMDGPUGridValues64 87,3192
static constexpr GV AMDGPUGridValues32 97,3480
template <unsigned wavesize> constexpr const GV &getAMDGPUGridValues(getAMDGPUGridValues107,3768
static constexpr GV NVPTXGridValues 113,4005

/usr/include/llvm/Frontend/OpenMP/OMP.h.inc,5640
namespace 6,84
class 7,101
namespace 8,118
enum 12,178
static 124,2752
constexpr 126,2808
constexpr 127,2876
constexpr 128,2948
constexpr 129,3014
constexpr 130,3078
constexpr 131,3144
constexpr 132,3222
constexpr 133,3314
constexpr 134,3408
constexpr 135,3472
constexpr 136,3560
constexpr 137,3628
constexpr 138,3708
constexpr 139,3794
constexpr 140,3870
constexpr 141,3950
constexpr 142,4032
constexpr 143,4096
constexpr 144,4168
constexpr 145,4264
constexpr 146,4370
constexpr 147,4468
constexpr 148,4576
constexpr 149,4658
constexpr 150,4714
constexpr 151,4780
constexpr 152,4854
constexpr 153,4942
constexpr 154,5032
constexpr 155,5096
constexpr 156,5170
constexpr 157,5246
constexpr 158,5318
constexpr 159,5396
constexpr 160,5458
constexpr 161,5520
constexpr 162,5578
constexpr 163,5646
constexpr 164,5728
constexpr 165,5820
constexpr 166,5884
constexpr 167,5966
constexpr 168,6058
constexpr 169,6136
constexpr 170,6202
constexpr 171,6268
constexpr 172,6336
constexpr 173,6410
constexpr 174,6494
constexpr 175,6570
constexpr 176,6656
constexpr 177,6738
constexpr 178,6838
constexpr 179,6948
constexpr 180,7030
constexpr 181,7130
constexpr 182,7240
constexpr 183,7326
constexpr 184,7414
constexpr 185,7482
constexpr 186,7542
constexpr 187,7608
constexpr 188,7676
constexpr 189,7736
constexpr 190,7800
constexpr 191,7864
constexpr 192,7938
constexpr 193,8024
constexpr 194,8108
constexpr 195,8190
constexpr 196,8278
constexpr 197,8376
constexpr 198,8466
constexpr 199,8566
constexpr 200,8640
constexpr 201,8716
constexpr 202,8814
constexpr 203,8936
constexpr 204,9068
constexpr 205,9192
constexpr 206,9326
constexpr 207,9434
constexpr 208,9512
constexpr 209,9572
constexpr 210,9642
constexpr 211,9710
constexpr 212,9788
constexpr 213,9856
constexpr 214,9926
constexpr 215,9988
constexpr 216,10072
constexpr 217,10180
constexpr 218,10298
constexpr 219,10408
constexpr 220,10528
constexpr 221,10622
constexpr 222,10700
constexpr 223,10760
constexpr 224,10826
constexpr 225,10890
constexpr 226,10960
constexpr 227,11028
constexpr 228,11094
constexpr 229,11154
constexpr 230,11218
constexpr 231,11296
constexpr 232,11358
constexpr 233,11450
constexpr 234,11536
enum 236,11609
static 343,13459
constexpr 345,13512
constexpr 346,13575
constexpr 347,13638
constexpr 348,13709
constexpr 349,13774
constexpr 350,13833
constexpr 351,13896
constexpr 352,13961
constexpr 353,14028
constexpr 354,14099
constexpr 355,14152
constexpr 356,14249
constexpr 357,14306
constexpr 358,14409
constexpr 359,14472
constexpr 360,14537
constexpr 361,14600
constexpr 362,14671
constexpr 363,14732
constexpr 364,14795
constexpr 365,14864
constexpr 366,14925
constexpr 367,14986
constexpr 368,15049
constexpr 369,15110
constexpr 370,15171
constexpr 371,15242
constexpr 372,15317
constexpr 373,15382
constexpr 374,15467
constexpr 375,15526
constexpr 376,15593
constexpr 377,15650
constexpr 378,15711
constexpr 379,15770
constexpr 380,15843
constexpr 381,15902
constexpr 382,15959
constexpr 383,16016
constexpr 384,16083
constexpr 385,16162
constexpr 386,16219
constexpr 387,16272
constexpr 388,16345
constexpr 389,16410
constexpr 390,16477
constexpr 391,16542
constexpr 392,16599
constexpr 393,16674
constexpr 394,16745
constexpr 395,16806
constexpr 396,16863
constexpr 397,16918
constexpr 398,16977
constexpr 399,17050
constexpr 400,17117
constexpr 401,17180
constexpr 402,17243
constexpr 403,17304
constexpr 404,17371
constexpr 405,17442
constexpr 406,17513
constexpr 407,17582
constexpr 408,17649
constexpr 409,17716
constexpr 410,17787
constexpr 411,17864
constexpr 412,17951
constexpr 413,18018
constexpr 414,18077
constexpr 415,18140
constexpr 416,18203
constexpr 417,18268
constexpr 418,18331
constexpr 419,18398
constexpr 420,18455
constexpr 421,18522
constexpr 422,18585
constexpr 423,18648
constexpr 424,18727
constexpr 425,18790
constexpr 426,18855
constexpr 427,18918
constexpr 428,18983
constexpr 429,19044
constexpr 430,19101
constexpr 431,19164
constexpr 432,19223
constexpr 433,19300
constexpr 434,19373
constexpr 435,19448
constexpr 436,19511
constexpr 437,19564
constexpr 438,19643
constexpr 439,19734
constexpr 440,19797
constexpr 441,19860
constexpr 442,19921
constexpr 443,19982
constexpr 444,20037
constexpr 445,20116
constexpr 446,20193
constexpr 447,20272
constexpr 448,20329
enum 450,20389
constexpr 458,20630
constexpr 459,20758
constexpr 460,20878
constexpr 461,21006
constexpr 462,21136
enum 464,21257
constexpr 469,21341
constexpr 470,21427
enum 472,21516
constexpr 481,21727
constexpr 482,21821
constexpr 483,21915
constexpr 484,22011
constexpr 485,22107
constexpr 486,22203
enum 488,22300
constexpr 493,22381
constexpr 494,22464
enum 496,22550
constexpr 501,22626
constexpr 502,22702
enum 504,22785
constexpr 513,22973
constexpr 514,23060
constexpr 515,23145
constexpr 516,23228
constexpr 517,23313
constexpr 518,23400
enum 520,23488
constexpr 529,23669
constexpr 530,23752
constexpr 531,23837
constexpr 532,23920
constexpr 533,23999
constexpr 534,24084
Directive 537,24202
llvm:llvm539,24258
Clause 541,24312
llvm:llvm543,24362
bool 546,24484
CancellationConstructType 548,24560
llvm:llvm549,24627
GrainsizeType 550,24710
llvm:llvm551,24753
MemoryOrderKind 552,24812
llvm:llvm553,24859
NumTasksType 554,24922
llvm:llvm555,24963
OrderKind 556,25020
llvm:llvm557,25055
ProcBindKind 558,25106
llvm:llvm559,25147
ScheduleKind 560,25204
llvm:llvm561,25245

/usr/include/llvm/Frontend/OpenMP/OMP.inc,5904
namespace 4,79
namespace 5,96
void 3954,119260
void 3955,119320
void 3956,119381
void 3957,119449
void 3958,119512
void 3959,119569
void 3965,119671
void 3971,119775
void 3977,119881
void 3978,119949
void 3979,120000
void 3985,120133
void 3986,120188
void 3987,120287
void 3988,120348
void 3994,120452
void 3995,120513
void 4001,120623
void 4007,120723
void 4013,120825
void 4019,120933
void 4025,121033
void 4026,121092
void 4027,121153
void 4028,121212
void 4034,121312
void 4040,121421
void 4044,121520
void 4045,121583
void 4046,121665
void 4052,121763
void 4053,121828
void 4054,121883
void 4060,121983
void 4066,122081
void 4072,122193
void 4073,122250
void 4079,122346
void 4080,122401
void 4086,122507
void 4092,122623
void 4098,122719
void 4104,122811
void 4110,122922
void 4111,122985
void 4112,123050
void 4113,123113
void 4114,123168
void 4120,123280
void 4126,123390
void 4132,123490
void 4138,123586
void 4144,123680
void 4145,123737
void 4146,123807
void 4147,123872
void 4148,123933
void 4149,123994
void 4150,124053
void 4156,124159
void 4162,124274
void 4163,124343
void 4169,124451
void 4175,124556
void 4181,124661
void 4187,124770
void 4188,124844
void 4194,124967
void 4195,125031
void 4201,125129
void 4205,125217
void 4209,125305
void 4215,125409
void 4221,125511
void 4227,125616
void 4228,125671
void 4234,125777
void 4235,125838
void 4236,125899
void 4237,125975
void 4243,126077
void 4249,126181
void 4250,126241
void 4251,126304
void 4257,126404
void 4258,126459
void 4264,126561
void 4270,126664
void 4276,126779
void 4282,126890
void 4283,126963
void 4284,127024
void 4290,127116
void 4291,127192
void 4292,127279
void 4298,127386
void 4299,127447
void 4300,127506
void 4301,127565
void 4302,127618
void 4308,127734
void 4314,127848
void 4315,127924
void 4316,127979
void 4323,128146
void 4324,128193
void 4325,128241
void 4326,128292
void 4327,128341
void 4328,128387
void 4329,128435
void 4330,128484
void 4331,128534
void 4332,128585
void 4333,128628
void 4334,128690
void 4335,128735
void 4336,128801
void 4337,128849
void 4338,128898
void 4339,128946
void 4340,128998
void 4341,129045
void 4342,129093
void 4343,129144
void 4344,129191
void 4345,129238
void 4346,129286
void 4347,129333
void 4348,129380
void 4349,129431
void 4350,129484
void 4351,129533
void 4352,129591
void 4353,129637
void 4354,129687
void 4355,129732
void 4356,129779
void 4357,129825
void 4358,129878
void 4359,129924
void 4360,129969
void 4361,130014
void 4362,130064
void 4363,130118
void 4364,130163
void 4365,130206
void 4366,130258
void 4367,130307
void 4368,130357
void 4369,130406
void 4370,130451
void 4371,130503
void 4372,130555
void 4373,130602
void 4374,130647
void 4375,130691
void 4376,130737
void 4377,130789
void 4378,130839
void 4379,130887
void 4380,130935
void 4381,130982
void 4382,131032
void 4383,131084
void 4384,131136
void 4385,131187
void 4386,131236
void 4387,131285
void 4388,131336
void 4389,131390
void 4390,131447
void 4391,131496
void 4392,131542
void 4393,131590
void 4394,131638
void 4395,131687
void 4396,131735
void 4397,131784
void 4398,131829
void 4399,131879
void 4400,131927
void 4401,131975
void 4402,132030
void 4403,132078
void 4404,132127
void 4405,132174
void 4406,132223
void 4407,132270
void 4408,132315
void 4409,132363
void 4410,132409
void 4411,132463
void 4412,132515
void 4413,132569
void 4414,132617
void 4415,132660
void 4416,132715
void 4417,132775
void 4418,132823
void 4419,132871
void 4420,132918
void 4421,132965
void 4422,133009
void 4423,133063
void 4424,133116
void 4425,133171
void 4426,133216
if 4433,133384
if 4435,133486
if 4437,133589
if 4439,133699
if 4441,133804
if 4443,133903
if 4445,134006
if 4447,134111
if 4449,134218
if 4451,134328
if 4453,134421
if 4455,134555
if 4457,134652
if 4459,134793
if 4461,134896
if 4463,135001
if 4465,135104
if 4467,135215
if 4469,135316
if 4471,135419
if 4473,135528
if 4475,135629
if 4477,135730
if 4479,135833
if 4481,135934
if 4483,136035
if 4485,136145
if 4487,136259
if 4489,136364
if 4491,136488
if 4493,136587
if 4495,136694
if 4497,136791
if 4499,136892
if 4501,136991
if 4503,137104
if 4505,137203
if 4507,137300
if 4509,137397
if 4511,137504
if 4513,137621
if 4515,137718
if 4517,137811
if 4519,137923
if 4521,138028
if 4523,138135
if 4525,138240
if 4527,138337
if 4529,138450
if 4531,138561
if 4533,138662
if 4535,138759
if 4537,138854
if 4539,138953
if 4541,139065
if 4543,139172
if 4545,139275
if 4547,139378
if 4549,139479
if 4551,139586
if 4553,139697
if 4555,139808
if 4557,139917
if 4559,140023
if 4561,140129
if 4563,140239
if 4565,140355
if 4567,140479
if 4569,140585
if 4571,140684
if 4573,140787
if 4575,140890
if 4577,140995
if 4579,141098
if 4581,141204
if 4583,141301
if 4585,141408
if 4587,141511
if 4589,141614
if 4591,141732
if 4593,141835
if 4595,141940
if 4597,142042
if 4599,142147
if 4601,142248
if 4603,142345
if 4605,142448
if 4607,142547
if 4609,142663
if 4611,142775
if 4613,142890
if 4615,142993
if 4617,143086
if 4619,143204
if 4621,143333
if 4623,143436
if 4625,143539
if 4627,143640
if 4629,143741
if 4631,143836
if 4633,143953
if 4635,144068
if 4637,144186
if 4639,144283
Directive 4900,159344
llvm:llvm5014,164798
Clause 5238,171673
llvm:llvm5347,175663
CancellationConstructType 5561,181028
llvm:llvm5571,181503
GrainsizeType 5587,182043
llvm:llvm5594,182280
MemoryOrderKind 5604,182553
llvm:llvm5615,182989
NumTasksType 5633,183510
llvm:llvm5640,183741
OrderKind 5650,184009
llvm:llvm5657,184230
ProcBindKind 5667,184491
llvm:llvm5678,184891
ScheduleKind 5696,185379
llvm:llvm5707,185770
bool 5725,186250

/usr/include/llvm/Frontend/OpenMP/OMP.td,10792
def OpenMP : DirectiveLanguage 19,782
  let clangClass 35,1378
  let flangClass 36,1419
  let clangClass 39,1486
  let flangClass 40,1520
  let clangClass 43,1591
  let flangClass 44,1628
  let clangClass 47,1716
  let flangClass 48,1758
  let clangClass 51,1835
  let flangClass 52,1874
  let clangClass 55,1959
  let flangClass 56,1998
  let clangClass 59,2085
  let flangClass 60,2125
  let clangClass 63,2210
  let flangClass 64,2249
  let clangClass 67,2329
  let flangClass 68,2368
  let clangClass 71,2440
  let flangClass 72,2477
  let isValueList 73,2513
  let clangClass 76,2575
  let clangClass 79,2651
  let flangClass 80,2690
  let isValueOptional 81,2734
  let clangClass 84,2816
  let flangClass 85,2860
  let clangClass 88,2945
  let flangClass 89,2988
  let clangClass 92,3063
  let flangClass 93,3101
  let clangClass 96,3182
  let flangClass 97,3223
  let clangClass 100,3303
  let flangClass 101,3341
  let clangClass 104,3420
  let flangClass 105,3459
  let clangClass 108,3537
  let flangClass 109,3575
  let clangClass 112,3660
  let flangClass 113,3703
def OMP_PROC_BIND_unknown : ClauseVal<"unknown",7,0> { let isDefault 120,4013
  let clangClass 122,4134
  let flangClass 123,4174
  let enumClauseValue 124,4214
  let allowedClauseValues 125,4254
def OMP_SCHEDULE_Default : ClauseVal<"default", 7, 0> { let isDefault 140,4724
  let clangClass 143,4843
  let flangClass 144,4883
  let enumClauseValue 145,4923
  let allowedClauseValues 146,4963
  let isDefault 162,5514
  let enumClauseValue 165,5585
  let allowedClauseValues 166,5628
  let isDefault 181,6193
  let enumClauseValue 185,6294
  let allowedClauseValues 186,6347
  let clangClass 196,6621
  let flangClass 197,6660
  let isValueOptional 198,6704
  let clangClass 201,6773
def OMPC_Untied : Clause<"untied"> { let clangClass 203,6813
  let clangClass 205,6931
def OMPC_Read : Clause<"read"> { let clangClass 207,6974
def OMPC_Write : Clause<"write"> { let clangClass 208,7043
def OMPC_Update : Clause<"update"> { let clangClass 209,7115
def OMPC_Capture : Clause<"capture"> { let clangClass 210,7190
def OMPC_Compare : Clause<"compare"> { let clangClass 211,7268
def OMPC_Fail : Clause<"fail"> { let clangClass 212,7346
def OMPC_SeqCst : Clause<"seq_cst"> { let clangClass 213,7415
def OMPC_AcqRel : Clause<"acq_rel"> { let clangClass 214,7491
def OMPC_Acquire : Clause<"acquire"> { let clangClass 215,7567
def OMPC_Release : Clause<"release"> { let clangClass 216,7645
def OMPC_Relaxed : Clause<"relaxed"> { let clangClass 217,7723
  let clangClass 219,7838
  let flangClass 220,7876
  let clangClass 223,7953
  let flangClass 224,7991
  let flangClass 227,8077
def OMPC_Threads : Clause<"threads"> { let clangClass 229,8121
def OMPC_Simd : Clause<"simd"> { let clangClass 230,8199
  let clangClass 232,8299
  let flangClass 233,8334
  let clangClass 236,8413
  let flangClass 237,8453
  let clangClass 240,8539
  let flangClass 241,8582
  let clangClass 244,8661
  let flangClass 245,8701
def OMP_GRAINSIZE_Unknown : ClauseVal<"unkonwn", 2, 0> { let isDefault 249,8796
  let clangClass 252,8918
  let flangClass 253,8959
  let enumClauseValue 254,8995
  let allowedClauseValues 255,9036
  let clangClass 261,9164
def OMP_NUMTASKS_Unknown : ClauseVal<"unkonwn", 2, 0> { let isDefault 265,9261
  let clangClass 268,9381
  let flangClass 269,9421
  let enumClauseValue 270,9457
  let allowedClauseValues 271,9497
  let clangClass 277,9617
  let flangClass 278,9653
  let clangClass 281,9740
  let flangClass 282,9784
  let isValueOptional 283,9820
  let clangClass 286,9897
  let flangClass 287,9939
  let clangClass 290,10012
  let flangClass 291,10046
  let flangClass 294,10119
  let clangClass 297,10190
  let flangClass 298,10226
  let clangClass 301,10315
  let flangClass 302,10359
  let clangClass 305,10446
  let flangClass 306,10489
  let clangClass 309,10580
  let flangClass 310,10625
  let clangClass 313,10715
  let flangClass 314,10760
  let clangClass 317,10851
  let flangClass 318,10894
  let clangClass 321,10993
  let clangClass 324,11106
  let clangClass 327,11213
  let clangClass 330,11321
  let clangClass 333,11442
  let flangClass 334,11495
  let clangClass 337,11579
  let clangClass 340,11656
  let clangClass 343,11737
  let clangClass 346,11819
  let flangClass 347,11859
  let clangClass 350,11948
  let flangClass 351,11991
  let isValueList 352,12018
def OMP_ORDER_unknown : ClauseVal<"unknown",2,0> { let isDefault 356,12105
  let clangClass 358,12212
  let flangClass 359,12249
  let enumClauseValue 360,12286
  let allowedClauseValues 361,12323
  let clangClass 367,12441
  let clangClass 370,12510
  let clangClass 373,12586
  let clangClass 376,12672
  let flangClass 377,12714
  let clangClass 380,12799
  let flangClass 381,12840
  let clangClass 384,12919
  let clangClass 387,13002
  let clangClass 390,13088
  let clangClass 393,13185
  let clangClass 396,13274
  let clangClass 399,13369
  let flangClass 400,13414
  let flangClass 403,13491
  let isValueList 404,13518
  let clangClass 410,13715
  let isImplicit 411,13753
  let clangClass 414,13815
  let isImplicit 415,13852
  let alternativeName 418,13930
  let isImplicit 419,13987
  let isImplicit 422,14053
  let isDefault 423,14078
  let flangClass 426,14137
  let clangClass 432,14344
  let flangClass 433,14382
  let clangClass 436,14455
  let clangClass 441,14561
  let clangClass 445,14661
  let flangClass 446,14706
  let clangClass 450,14786
  let clangClass 454,14882
  let clangClass 458,14969
  let allowedClauses 467,15304
  let allowedOnceClauses 476,15592
  let allowedClauses 484,15802
  let allowedOnceClauses 496,16198
  let allowedClauses 504,16402
  let allowedOnceClauses 513,16691
  let allowedOnceClauses 522,16938
  let allowedOnceClauses 527,17050
  let allowedClauses 533,17194
  let allowedClauses 548,17655
  let allowedOnceClauses 555,17869
  let allowedClauses 564,18125
  let allowedClauses 575,18458
  let allowedClauses 585,18756
  let allowedClauses 592,18944
  let allowedClauses 599,19131
  let allowedClauses 605,19283
  let allowedOnceClauses 611,19436
  let allowedClauses 621,19751
  let allowedOnceClauses 625,19854
  let allowedClauses 631,19995
  let allowedOnceClauses 638,20197
  let allowedClauses 649,20532
  let allowedOnceClauses 662,20990
  let allowedClauses 672,21287
  let allowedOnceClauses 680,21541
  let allowedOnceClauses 688,21759
  let allowedOnceClauses 693,21867
  let allowedClauses 711,22676
  let allowedOnceClauses 715,22790
  let requiredClauses 719,22887
  let allowedClauses 724,23009
  let allowedOnceClauses 727,23072
  let requiredClauses 732,23203
  let allowedClauses 737,23323
  let allowedOnceClauses 740,23386
  let requiredClauses 745,23517
  let allowedClauses 750,23636
  let allowedOnceClauses 766,24184
  let allowedClauses 776,24517
  let allowedOnceClauses 802,25428
  let allowedClauses 808,25613
  let allowedOnceClauses 825,26188
  let allowedClauses 838,26599
  let allowedOnceClauses 843,26724
  let allowedClauses 850,26907
  let allowedClauses 871,27601
  let allowedOnceClauses 881,27918
  let allowedClauses 892,28260
  let allowedClauses 917,29111
  let allowedOnceClauses 931,29569
  let allowedClauses 943,29948
  let allowedClauses 958,30433
  let allowedClauses 974,30956
  let allowedOnceClauses 986,31354
  let allowedClauses 992,31499
  let allowedClauses 1012,32151
  let allowedOnceClauses 1020,32400
  let allowedClauses 1034,32891
  let allowedClauses 1039,33003
  let allowedOnceClauses 1044,33136
  let allowedExclusiveClauses 1047,33204
  let allowedClauses 1053,33362
  let allowedOnceClauses 1065,33757
  let allowedExclusiveClauses 1072,33961
  let allowedClauses 1078,34126
  let allowedOnceClauses 1095,34698
  let allowedExclusiveClauses 1103,34943
  let allowedClauses 1109,35103
  let allowedOnceClauses 1115,35282
  let allowedClauses 1121,35458
  let allowedClauses 1129,35679
  let allowedOnceClauses 1135,35843
  let allowedClauses 1141,36053
  let allowedClauses 1161,36739
  let allowedOnceClauses 1172,37092
  let allowedClauses 1184,37495
  let allowedClauses 1209,38372
  let allowedClauses 1233,39180
  let allowedOnceClauses 1245,39577
  let allowedClauses 1260,40047
  let allowedOnceClauses 1290,41106
  let allowedClauses 1296,41300
  let allowedClauses 1327,42358
  let allowedOnceClauses 1346,43022
  let allowedClauses 1361,43529
  let allowedOnceClauses 1375,44008
  let allowedClauses 1380,44140
  let allowedOnceClauses 1393,44579
  let allowedClauses 1407,45003
  let allowedClauses 1434,45936
  let allowedOnceClauses 1446,46324
  let allowedClauses 1462,46848
  let allowedClauses 1485,47624
let allowedOnceClauses 1496,47972
  let allowedClauses 1510,48423
  let allowedOnceClauses 1525,48903
  let allowedClauses 1537,49307
  let allowedOnceClauses 1552,49825
  let allowedClauses 1567,50298
  let allowedOnceClauses 1594,51255
  let allowedClauses 1600,51433
  let allowedOnceClauses 1617,52008
  let allowedClauses 1634,52590
  let allowedOnceClauses 1666,53729
  let allowedClauses 1672,53916
  let allowedOnceClauses 1691,54564
  let allowedClauses 1710,55192
  let allowedOnceClauses 1728,55822
  let allowedOnceClauses 1743,56309
  let allowedClauses 1749,56465
  let allowedClauses 1754,56588
  let allowedExclusiveClauses 1757,56650
  let allowedClauses 1763,56830
  let allowedClauses 1784,57526
  let allowedClauses 1807,58277
  let allowedClauses 1832,59106
  let allowedClauses 1857,59957
  let allowedClauses 1884,60881
  let allowedClauses 1913,61860
  let allowedClauses 1944,62917
  let allowedClauses 1975,63961
  let allowedClauses 1985,64270
  let allowedClauses 1996,64696
  let allowedOnceClauses 2000,64806
  let allowedClauses 2005,64941
  let allowedOnceClauses 2014,65221
  let allowedOnceClauses 2022,65444
  let allowedOnceClauses 2027,65560
  let allowedOnceClauses 2032,65679
  let allowedClauses 2037,65794
  let allowedOnceClauses 2040,65862
  let allowedClauses 2045,65983
  let allowedClauses 2050,66089
  let allowedClauses 2060,66364
  let allowedOnceClauses 2071,66695
  let allowedClauses 2076,66799
  let allowedOnceClauses 2081,66940
  let allowedClauses 2088,67131
  let allowedOnceClauses 2097,67424
  let allowedClauses 2107,67736
  let allowedOnceClauses 2124,68326
  let allowedClauses 2136,68709
  let allowedOnceClauses 2146,69036
  let allowedClauses 2157,69383
  let allowedOnceClauses 2174,69969
  let allowedClauses 2188,70432
  let allowedOnceClauses 2189,70485
  let isDefault 2192,70588

/usr/include/llvm/Frontend/OpenMP/OMPConstants.h,4857
#define LLVM_FRONTEND_OPENMP_OMPCONSTANTS_H15,587
enum class InternalControlVar 27,869
#define ICV_DATA_ENV(28,901
#define ICV_DATA_ENV(32,988
enum class ICVInitValue 36,1170
#define ICV_INIT_VALUE(37,1196
#define ICV_INIT_VALUE(41,1286
enum class RuntimeFunction 46,1515
#define OMP_RTL(47,1544
#define OMP_RTL(51,1626
enum class DefaultKind 55,1790
#define OMP_DEFAULT_KIND(56,1815
#define OMP_DEFAULT_KIND(60,1906
enum class IdentFlag 66,2195
#define OMP_IDENT_FLAG(67,2218
  LLVM_MARK_AS_BITMASK_ENUM(69,2318
  LLVM_MARK_AS_BITMASK_ENUM(0x7FFFFFFF)x7FFFFFFF69,2318
#define OMP_IDENT_FLAG(72,2362
#define OMP_KERNEL_ARG_VERSION 76,2552
enum class OMPScheduleType 80,2729
  None 82,2807
  BaseStaticChunked 85,2845
  BaseStatic 86,2870
  BaseDynamicChunked 87,2888
  BaseGuidedChunked 88,2914
  BaseRuntime 89,2939
  BaseAuto 90,2958
  BaseTrapezoidal 91,2974
  BaseGreedy 92,2997
  BaseBalanced 93,3015
  BaseGuidedIterativeChunked 94,3035
  BaseGuidedAnalyticalChunked 95,3070
  BaseSteal 96,3106
  BaseStaticBalancedChunked 99,3165
  BaseGuidedSimd 100,3199
  BaseRuntimeSimd 101,3222
  BaseDistributeChunked 104,3296
  BaseDistribute 105,3326
  ModifierUnordered 108,3410
  ModifierOrdered 109,3442
  ModifierNomerge 110,3472
  ModifierMonotonic 111,3502
  ModifierNonmonotonic 112,3535
  OrderingMask 115,3608
  MonotonicityMask 116,3680
  ModifierMask 117,3743
  UnorderedStaticChunked 120,3854
  UnorderedStatic 121,3934
  UnorderedDynamicChunked 122,4014
  UnorderedGuidedChunked 123,4094
  UnorderedRuntime 124,4174
  UnorderedAuto 125,4254
  UnorderedTrapezoidal 126,4334
  UnorderedGreedy 127,4414
  UnorderedBalanced 128,4494
  UnorderedGuidedIterativeChunked 129,4574
  UnorderedGuidedAnalyticalChunked 131,4690
  UnorderedSteal 133,4807
  UnorderedStaticBalancedChunked 135,4888
  UnorderedGuidedSimd 137,5003
  UnorderedRuntimeSimd 138,5083
  OrderedStaticChunked 140,5164
  OrderedStatic 141,5244
  OrderedDynamicChunked 142,5324
  OrderedGuidedChunked 143,5404
  OrderedRuntime 144,5484
  OrderedAuto 145,5564
  OrderdTrapezoidal 146,5644
  OrderedDistributeChunked 148,5725
  OrderedDistribute 149,5805
  NomergeUnorderedStaticChunked 151,5886
  NomergeUnorderedStatic 153,6000
  NomergeUnorderedDynamicChunked 155,6107
  NomergeUnorderedGuidedChunked 157,6222
  NomergeUnorderedRuntime 159,6336
  NomergeUnorderedAuto 161,6444
  NomergeUnorderedTrapezoidal 162,6524
  NomergeUnorderedGreedy 164,6636
  NomergeUnorderedBalanced 166,6743
  NomergeUnorderedGuidedIterativeChunked 168,6852
  NomergeUnorderedGuidedAnalyticalChunked 170,6975
  NomergeUnorderedSteal 172,7099
  NomergeOrderedStaticChunked 175,7206
  NomergeOrderedStatic 177,7318
  NomergeOrderedDynamicChunked 178,7398
  NomergeOrderedGuidedChunked 180,7511
  NomergeOrderedRuntime 182,7623
  NomergeOrderedAuto 184,7729
  NomergeOrderedTrapezoidal 185,7809
  LLVM_MARK_AS_BITMASK_ENUM(188,7920
  LLVM_MARK_AS_BITMASK_ENUM(/* LargestValue */ ModifierMask)188,7920
enum class OpenMPOffloadMappingFlags 193,8063
  OMP_MAP_NONE 195,8128
  OMP_MAP_TO 197,8221
  OMP_MAP_FROM 199,8313
  OMP_MAP_ALWAYS 202,8446
  OMP_MAP_DELETE 205,8597
  OMP_MAP_PTR_AND_OBJ 208,8737
  OMP_MAP_TARGET_PARAM 211,8886
  OMP_MAP_RETURN_PARAM 215,9115
  OMP_MAP_PRIVATE 218,9238
  OMP_MAP_LITERAL 220,9311
  OMP_MAP_IMPLICIT 222,9357
  OMP_MAP_CLOSE 225,9475
  OMP_MAP_PRESENT 228,9620
  OMP_MAP_OMPX_HOLD 236,10109
  OMP_MAP_NON_CONTIG 240,10342
  OMP_MAP_MEMBER_OF 243,10477
  LLVM_MARK_AS_BITMASK_ENUM(244,10519
  LLVM_MARK_AS_BITMASK_ENUM(/* LargestFlag = */ OMP_MAP_MEMBER_OF)244,10519
enum OpenMPOffloadingReservedDeviceIDs 247,10590
  OMP_DEVICEID_UNDEF 250,10746
enum class AddressSpace 253,10776
  Generic 254,10813
  Global 255,10828
  Shared 256,10842
  Constant 257,10856
  Local 258,10872
enum class OMPInteropType 262,10970
enum class OMPInteropType { Unknown,262,10970
enum class OMPInteropType { Unknown, Target,262,10970
enum class OMPInteropType { Unknown, Target, TargetSync 262,10970
enum class OMPAtomicCompareOp 265,11106
enum class OMPAtomicCompareOp : unsigned { EQ,265,11106
enum class OMPAtomicCompareOp : unsigned { EQ, MIN,265,11106
enum class OMPAtomicCompareOp : unsigned { EQ, MIN, MAX 265,11106
enum class RTLDependInfoFields 268,11208
enum class RTLDependInfoFields { BaseAddr,268,11208
enum class RTLDependInfoFields { BaseAddr, Len,268,11208
enum class RTLDependInfoFields { BaseAddr, Len, Flags 268,11208
enum class RTLDependenceKindTy 271,11295
  DepUnknown 272,11328
  DepIn 273,11348
  DepInOut 274,11364
  DepMutexInOutSet 275,11382
  DepInOutSet 276,11408
  DepOmpAllMem 277,11429
enum class WorksharingLoopType 281,11497
  ForStaticLoop,283,11558
  DistributeStaticLoop,285,11609
  DistributeForStaticLoop287,11680

/usr/include/llvm/Frontend/OpenMP/OMPIRBuilder.h,9727
#define LLVM_FRONTEND_OPENMP_OMPIRBUILDER_H15,639
class OpenMPIRBuilderConfig 84,3930
  std::optional<bool> IsTargetDevice;88,4066
  std::optional<bool> IsGPU;91,4178
  std::optional<bool> OpenMPOffloadMandatory;94,4261
  std::optional<StringRef> FirstSeparator;97,4376
  std::optional<StringRef> Separator;99,4492
  bool isTargetDevice(110,4977
  bool isGPU(115,5113
  bool openMPOffloadMandatory(120,5213
  bool hasRequiresFlags(126,5392
  StringRef firstSeparator(138,5868
  StringRef separator(148,6122
  void setIsTargetDevice(156,6266
  void setIsGPU(157,6331
  void setOpenMPOffloadMandatory(158,6378
  void setFirstSeparator(159,6459
  void setSeparator(160,6523
  int64_t RequiresFlags;169,6863
struct TargetRegionEntryInfo 174,6986
  std::string ParentName;175,7017
  unsigned DeviceID;176,7043
  unsigned FileID;177,7064
  unsigned Line;178,7083
  unsigned Count;179,7100
  TargetRegionEntryInfo(181,7119
  TargetRegionEntryInfo(182,7192
  bool operator<(192,7722
class OffloadEntriesInfoManager 200,8049
  OpenMPIRBuilder *OMPBuilder;OMPBuilder202,8126
  unsigned OffloadingEntriesNum 203,8157
  class OffloadEntryInfo 207,8241
    enum OffloadingEntryInfoKinds 210,8309
      OffloadingEntryInfoTargetRegion 212,8392
      OffloadingEntryInfoDeviceGlobalVar 214,8481
      OffloadingEntryInfoInvalid 216,8557
    explicit OffloadEntryInfo(221,8650
    explicit OffloadEntryInfo(222,8727
    bool isValid(228,8948
    unsigned getOrder(229,8998
    OffloadingEntryInfoKinds getKind(230,9046
    uint32_t getFlags(231,9108
    void setFlags(232,9156
    Constant *getAddress(getAddress233,9215
    void setAddress(234,9289
    static bool classof(238,9422
    WeakTrackingVH Addr;242,9573
  unsigned size(256,9931
  OffloadEntriesInfoManager(258,9989
  enum OMPTargetRegionEntryKind 265,10157
    OMPTargetRegionEntryTargetRegion 267,10243
      OffloadTargetRegionEntryInfoActTy;316,12296
  enum OMPTargetGlobalVarEntryKind 325,12524
    OMPTargetGlobalVarEntryTo 327,12619
    OMPTargetGlobalVarEntryLink 329,12708
    OMPTargetGlobalVarEntryEnter 331,12797
    OMPTargetGlobalVarEntryNone 333,12900
    OMPTargetGlobalVarEntryIndirect 335,12999
  enum OMPTargetDeviceClauseKind 343,13285
    OMPTargetDeviceClauseAny 345,13376
    OMPTargetDeviceClauseNoHost 347,13462
    OMPTargetDeviceClauseHost 349,13547
    OMPTargetDeviceClauseNone 351,13633
  bool hasDeviceGlobalVarEntryInfo(399,15929
      OffloadDeviceGlobalVarEntryInfoActTy;404,16195
  getTargetRegionEntryCountKey(418,16691
  std::map<std::map424,16952
  std::map<TargetRegionEntryInfo, unsigned> OffloadEntriesTargetRegionCount;424,16952
  typedef std::map<TargetRegionEntryInfo,TargetRegionEntryInfo427,17075
      OffloadEntriesTargetRegionTy;428,17147
  OffloadEntriesTargetRegionTy OffloadEntriesTargetRegion;429,17183
      OffloadEntriesDeviceGlobalVarTy;433,17402
  OffloadEntriesDeviceGlobalVarTy OffloadEntriesDeviceGlobalVar;434,17441
class OpenMPIRBuilder 440,17643
  OpenMPIRBuilder(444,17806
  void setConfig(455,18277
  using InsertPointTy 466,18748
  using FinalizeCallbackTy 486,19756
  struct FinalizationInfo 488,19832
    FinalizeCallbackTy FiniCB;491,19988
    omp::Directive DK;495,20162
    bool IsCancellable;498,20244
  void pushFinalizationCB(504,20397
  void popFinalizationCB(511,20626
  using BodyGenCallbackTy 537,22097
  using StorableBodyGenCallbackTy 544,22443
  using LoopBodyGenCallbackTy 555,23029
  using PrivatizeCallbackTy 576,24105
  struct LocationDescription 582,24392
    LocationDescription(583,24423
    LocationDescription(585,24538
    LocationDescription(586,24599
    InsertPointTy IP;588,24696
    DebugLoc DL;589,24718
  struct DependData 1174,55437
    Type *DepValueType;DepValueType1176,55536
    Value *DepVal;DepVal1177,55560
    DependData(1179,55616
  using FileIdentifierInfoCallbackTy 1213,57458
  using ReductionGenTy 1230,58275
  using AtomicReductionGenTy 1237,58651
  struct ReductionInfo 1241,58804
    ReductionInfo(1242,58829
    Type *ElementType;ElementType1250,59263
    Value *Variable;Variable1253,59331
    Value *PrivateVariable;PrivateVariable1256,59404
    ReductionGenTy ReductionGen;1261,59664
    AtomicReductionGenTy AtomicReductionGen;1267,59997
  InsertPointTy getInsertionPoint(1339,62781
  bool updateToLocation(1342,62893
  SmallVector<SmallVector1432,67487
  SmallVector<FinalizationInfo, 8> FinalizationStack;1432,67487
  bool isLastFinalizationInfoCancellable(1436,67644
  OpenMPIRBuilderConfig Config;1458,68417
  Module &M;M1461,68486
  IRBuilder<> Builder;1464,68545
  StringMap<Constant *> SrcLocStrMap;1467,68615
  DenseMap<DenseMap1470,68695
  DenseMap<std::pair<Constant *, uint64_t>, Constant *> IdentMap;1470,68695
  OffloadEntriesInfoManager OffloadInfoManager;1473,68814
  const Triple T;1476,68913
  struct OutlineInfo 1480,69031
    PostOutlineCBTy PostOutlineCB;1482,69115
    BasicBlock *EntryBB,EntryBB1483,69150
    BasicBlock *EntryBB, *ExitBB,ExitBB1483,69150
    BasicBlock *EntryBB, *ExitBB, *OuterAllocaBB;OuterAllocaBB1483,69150
    SmallVector<SmallVector1484,69200
    SmallVector<Value *, 2> ExcludeArgsFromAggregate;1484,69200
    Function *getFunction(getFunction1492,69556
  SmallVector<SmallVector1496,69703
  SmallVector<OutlineInfo, 16> OutlineInfos;1496,69703
  std::forward_list<CanonicalLoopInfo> LoopInfos;1500,69839
  void addOutlineInfo(1503,69942
  StringMap<StringMap1510,70336
  StringMap<GlobalVariable *, BumpPtrAllocator> InternalVars;1510,70336
  struct MapperAllocas 1543,71684
  struct TargetDataRTArgs 1569,72909
    explicit TargetDataRTArgs(1590,73934
    explicit TargetDataRTArgs(1591,73969
  struct TargetKernelArgs 1603,74611
    unsigned NumTargetItems;1605,74698
    TargetDataRTArgs RTArgs;1607,74775
    Value *NumIterations;NumIterations1609,74837
    Value *NumTeams;NumTeams1611,74892
    Value *NumThreads;NumThreads1613,74944
    Value *DynCGGroupMem;DynCGGroupMem1615,75014
    bool HasNoWait;1617,75089
    TargetKernelArgs(1620,75151
  class TargetDataInfo 1638,76039
    TargetDataRTArgs RTArgs;1646,76387
    SmallMapVector<SmallMapVector1648,76417
        DevicePtrInfoMap;1649,76483
    explicit TargetDataInfo(1656,76696
    explicit TargetDataInfo(1657,76729
    void clearArrayInfo(1662,77016
    bool isValid(1668,77212
    bool requiresDevicePointerInfo(1673,77428
    bool separateBeginEndCalls(1674,77503
  enum class DeviceInfoTy 1677,77576
  enum class DeviceInfoTy { None,1677,77576
  enum class DeviceInfoTy { None, Pointer,1677,77576
  enum class DeviceInfoTy { None, Pointer, Address 1677,77576
  using MapValuesArrayTy 1678,77630
  using MapDeviceInfoArrayTy 1679,77682
  using MapFlagsArrayTy 1680,77743
  using MapNamesArrayTy 1681,77817
  using MapDimArrayTy 1682,77871
  using MapNonContiguousArrayTy 1683,77921
  struct MapInfosTy 1688,78192
    struct StructNonContiguousInfo 1689,78214
      MapDimArrayTy Dims;1691,78287
      MapNonContiguousArrayTy Offsets;1692,78313
      MapNonContiguousArrayTy Counts;1693,78352
      MapNonContiguousArrayTy Strides;1694,78390
    MapValuesArrayTy BasePointers;1696,78436
    MapValuesArrayTy Pointers;1697,78471
    MapDeviceInfoArrayTy DevicePointers;1698,78502
    MapValuesArrayTy Sizes;1699,78543
    MapFlagsArrayTy Types;1700,78571
    MapNamesArrayTy Names;1701,78598
    StructNonContiguousInfo NonContigInfo;1702,78625
    void append(1705,78706
  using EmitFallbackCallbackTy 1729,80117
  enum EmitMetadataErrorKind 1780,82898
    EMIT_MD_TARGET_REGION_ERROR,1781,82929
    EMIT_MD_DECLARE_TARGET_ERROR,1782,82962
    EMIT_MD_GLOBAL_VAR_LINK_ERROR1783,82996
  using EmitMetadataErrorReportFunctionTy 1787,83065
  static std::pair<std::pair2080,96959
  static std::pair<std::pair2087,97294
  using FunctionGenCallback 2109,98353
  enum BodyGenTy 2171,101882
  enum BodyGenTy { Priv,2171,101882
  enum BodyGenTy { Priv, DupNoPriv,2171,101882
  enum BodyGenTy { Priv, DupNoPriv, NoPriv 2171,101882
  using GenMapInfoCallbackTy 2176,102102
  using TargetBodyGenCallbackTy 2208,103780
  using TargetGenArgAccessorsCallbackTy 2211,103900
#define OMP_TYPE(2262,106644
#define OMP_ARRAY_TYPE(2263,106706
#define OMP_FUNCTION_TYPE(2266,106909
#define OMP_STRUCT_TYPE(2269,107110
  using AtomicUpdateCallbackTy 2364,111506
  enum AtomicKind 2368,111615
  enum AtomicKind { Read,2368,111615
  enum AtomicKind { Read, Write,2368,111615
  enum AtomicKind { Read, Write, Update,2368,111615
  enum AtomicKind { Read, Write, Update, Capture,2368,111615
  enum AtomicKind { Read, Write, Update, Capture, Compare 2368,111615
  std::pair<std::pair2404,113444
  struct AtomicOpValue 2418,114043
  const std::string ompOffloadInfoName 2595,123615
class CanonicalLoopInfo 2732,130641
  BasicBlock *Header Header2736,130709
  BasicBlock *Cond Cond2737,130741
  BasicBlock *Latch Latch2738,130771
  BasicBlock *Exit Exit2739,130802
  bool isValid(2776,132567
  BasicBlock *getHeader(getHeader2786,133096
  BasicBlock *getCond(getCond2793,133355
  BasicBlock *getBody(getBody2801,133672
  BasicBlock *getLatch(getLatch2809,134005
  BasicBlock *getExit(getExit2815,134194
  BasicBlock *getAfter(getAfter2825,134636
  Value *getTripCount(getTripCount2833,134955
  Instruction *getIndVar(getIndVar2842,135356
  Type *getIndVarType(getIndVarType2850,135667
  OpenMPIRBuilder::InsertPointTy getPreheaderIP(2856,135863
  OpenMPIRBuilder::InsertPointTy getBodyIP(2863,136144
  OpenMPIRBuilder::InsertPointTy getAfterIP(2870,136394
  Function *getFunction(getFunction2876,136586

/usr/include/llvm/Frontend/Driver/CodeGenOptions.h,241
#define LLVM_FRONTEND_DRIVER_CODEGENOPTIONS_H14,576
enum class VectorLibrary 24,776
  NoLibrary,25,803
  Accelerate,26,858
  LIBMVEC,27,913
  MASSV,28,965
  SVML,29,1015
  SLEEF,30,1073
  Darwin_libsystem_m,31,1154
  ArmPL 32,1222

/usr/include/llvm/Frontend/Offloading/OffloadWrapper.h,57
#define LLVM_FRONTEND_OFFLOADING_OFFLOADWRAPPER_H10,419

/usr/include/llvm/Frontend/Offloading/Utility.h,322
#define LLVM_FRONTEND_OFFLOADING_UTILITY_H10,413
enum OffloadEntryKindFlag 20,722
  OffloadGlobalEntry 23,904
  OffloadGlobalManagedEntry 25,983
  OffloadGlobalSurfaceEntry 27,1062
  OffloadGlobalTextureEntry 29,1141
  OffloadGlobalExtern 31,1214
  OffloadGlobalConstant 33,1288
  OffloadGlobalNormalized 35,1376

/usr/include/llvm/FuzzMutate/FuzzerCLI.h,43
#define LLVM_FUZZMUTATE_FUZZERCLI_H15,651

/usr/include/llvm/FuzzMutate/IRMutator.h,1524
#define LLVM_FUZZMUTATE_IRMUTATOR_H19,769
class IRMutationStrategy 35,1144
  virtual void mutate(51,1839
  virtual void mutate(52,1894
  virtual void mutate(53,1951
  virtual void mutate(54,2011
using TypeGetter 60,2155
class IRMutator 63,2271
  std::vector<TypeGetter> AllowedTypes;64,2289
  std::vector<std::unique_ptr<IRMutationStrategy>> Strategies;65,2329
  IRMutator(68,2401
class InjectorIRStrategy 89,3205
  std::vector<fuzzerop::OpDescriptor> Operations;90,3260
  InjectorIRStrategy(96,3466
  InjectorIRStrategy(97,3522
  uint64_t getWeight(101,3701
  using IRMutationStrategy::mutate;106,3849
class InstDeleterIRStrategy 112,4077
  using IRMutationStrategy::mutate;117,4256
class InstModificationIRStrategy 123,4482
  uint64_t getWeight(125,4553
  using IRMutationStrategy::mutate;130,4685
class InsertFunctionStrategy 137,4955
  uint64_t getWeight(139,5022
  using IRMutationStrategy::mutate;144,5155
class InsertCFGStrategy 149,5329
  uint64_t MaxNumCases;151,5392
  enum CFGToSink 152,5416
  enum CFGToSink { Return,152,5416
  enum CFGToSink { Return, DirectSink,152,5416
  enum CFGToSink { Return, DirectSink, SinkOrSelfLoop,152,5416
  enum CFGToSink { Return, DirectSink, SinkOrSelfLoop, EndOfCFGToLink 152,5416
  InsertCFGStrategy(155,5498
  uint64_t getWeight(156,5558
class InsertPHIStrategy 169,5956
  uint64_t getWeight(171,6018
class SinkInstructionStrategy 181,6324
  uint64_t getWeight(183,6392
class ShuffleBlockStrategy 194,6753
  uint64_t getWeight(196,6818

/usr/include/llvm/FuzzMutate/OpDescriptor.h,1208
#define LLVM_FUZZMUTATE_OPDESCRIPTOR_H15,614
class SourcePred 43,1541
  PredT Pred;55,2070
  MakeT Make;56,2084
  SourcePred(60,2154
  SourcePred(61,2219
  bool matches(77,2808
  std::vector<Constant *> generate(82,2972
struct OpDescriptor 89,3203
  unsigned Weight;90,3225
  SmallVector<SmallVector91,3244
  SmallVector<SourcePred, 2> SourcePreds;91,3244
  std::function<Value *(ArrayRef<Value *>, Instruction *)> BuilderFunc;92,3286
static inline SourcePred onlyType(95,3362
static inline SourcePred anyType(105,3637
static inline SourcePred anyIntType(113,3825
static inline SourcePred anyIntOrVecIntType(121,4018
static inline SourcePred boolOrVecBoolType(128,4206
static inline SourcePred anyFloatType(135,4394
static inline SourcePred anyFloatOrVecFloatType(143,4595
static inline SourcePred anyPtrType(150,4785
static inline SourcePred sizedPtrType(164,5228
static inline SourcePred matchFirstLengthWAnyType(185,5799
static inline SourcePred matchSecondType(221,7134
static inline SourcePred anyAggregateType(233,7544
static inline SourcePred anyVectorType(251,8171
static inline SourcePred matchFirstType(263,8619
static inline SourcePred matchScalarOfFirstType(276,9077

/usr/include/llvm/FuzzMutate/Operations.h,72
#define LLVM_FUZZMUTATE_OPERATIONS_H15,581
namespace fuzzerop 35,1416

/usr/include/llvm/FuzzMutate/Random.h,935
#define LLVM_FUZZMUTATE_RANDOM_H14,524
template <typename T,26,902
template <typename T, typename GenT> T uniform(26,902
template <typename T,33,1219
template <typename T, typename GenT> class ReservoirSampler 33,1219
  GenT &RandGen;RandGen34,1281
  std::remove_const_t<T> Selection 35,1298
  uint64_t TotalWeight 36,1339
  ReservoirSampler(39,1376
  uint64_t totalWeight(41,1433
  bool isEmpty(42,1488
  const T &getSelection(getSelection44,1541
  explicit operator bool(operator bool49,1648
  const T &operator*(operator*50,1704
  template <typename RangeT> ReservoirSampler &sample(sample53,1813
  ReservoirSampler &sample(sample60,2004
template <typename GenT,72,2349
template <typename GenT, typename RangeT,72,2349
          typename ElT 73,2391
template <typename GenT,81,2655
ReservoirSampler<T, GenT> makeSampler(82,2692
template <typename T,89,2901
ReservoirSampler<T, GenT> makeSampler(90,2938

/usr/include/llvm/FuzzMutate/RandomIRBuilder.h,787
#define LLVM_FUZZMUTATE_RANDOMIRBUILDER_H14,570
using RandomEngine 35,908
struct RandomIRBuilder 37,944
  RandomEngine Rand;38,969
  SmallVector<SmallVector39,990
  SmallVector<Type *, 16> KnownTypes;39,990
  uint64_t MinArgNum 41,1029
  uint64_t MaxArgNum 42,1055
  uint64_t MinFunctionNum 43,1081
  RandomIRBuilder(45,1113
  std::pair<std::pair56,1693
  enum SourceType 59,1850
    SrcFromInstInCurBlock,60,1870
    FunctionArgument,61,1897
    InstInDominator,62,1919
    SrcFromGlobalVariable,63,1940
    NewConstOrStack,64,1967
    EndOfValueSource,65,1988
  enum SinkType 84,3062
    SinkToInstInCurBlock,86,3139
    PointersInDominator,87,3165
    InstInDominatee,88,3190
    NewStore,89,3211
    SinkToGlobalVariable,90,3225
    EndOfValueSink,91,3251

/usr/include/llvm/IR/AbstractCallSite.h,1037
#define LLVM_IR_ABSTRACTCALLSITE_H15,636
class AbstractCallSite 50,2159
  struct CallbackInfo 54,2270
    ParameterEncodingTy ParameterEncoding;67,3031
  CallBase *CB;CB76,3273
  CallbackInfo CI;79,3367
  AbstractCallSite(98,4279
  static void getCallbackUses(105,4560
  explicit operator bool(109,4763
  CallBase *getInstruction(getInstruction112,4864
  bool isDirectCall(115,4971
  bool isIndirectCall(120,5120
  bool isCallbackCall(125,5269
  bool isCallee(132,5576
  bool isCallee(137,5745
  unsigned getNumArgOperands(154,6336
  int getCallArgOperandNo(163,6611
  int getCallArgOperandNo(169,6859
  Value *getCallArgOperand(getCallArgOperand177,7119
  Value *getCallArgOperand(getCallArgOperand183,7365
  int getCallArgOperandNoForCallee(194,7802
  const Use &getCalleeUseForCallback(getCalleeUseForCallback202,8100
  Value *getCalledOperand(getCalledOperand210,8429
  Function *getCalledFunction(getCalledFunction218,8714
void forEachCallbackCallSite(226,8957
void forEachCallbackFunction(238,9377

/usr/include/llvm/IR/Argument.h,34
#define LLVM_IR_ARGUMENT_H14,526

/usr/include/llvm/IR/AssemblyAnnotationWriter.h,357
#define LLVM_IR_ASSEMBLYANNOTATIONWRITER_H17,785
class AssemblyAnnotationWriter 27,943
  virtual ~AssemblyAnnotationWriter(29,984
  virtual void emitFunctionAnnot(33,1135
  virtual void emitBasicBlockStartAnnot(39,1416
  virtual void emitBasicBlockEndAnnot(45,1655
  virtual void emitInstructionAnnot(51,1899
  virtual void printInfoComment(56,2142

/usr/include/llvm/IR/Assumptions.h,206
#define LLVM_IR_ASSUMPTIONS_H16,688
struct KnownAssumptionString 36,1257
  KnownAssumptionString(37,1288
  KnownAssumptionString(41,1432
  operator StringRef(45,1574
  StringRef AssumptionStr;48,1639

/usr/include/llvm/IR/AttributeMask.h,470
#define LLVM_IR_ATTRIBUTEMASK_H15,546
class AttributeMask 29,952
  std::bitset<Attribute::EndAttrKinds> Attrs;30,974
  std::set<std::set31,1020
  std::set<SmallString<32>, std::less<>> TargetDepAttrs;31,1020
  AttributeMask(38,1210
  AttributeMask &addAttribute(addAttribute44,1336
  AttributeMask &addAttribute(addAttribute52,1579
  AttributeMask &addAttribute(addAttribute61,1824
  bool contains(67,1984
  bool contains(74,2222
  bool contains(77,2358

/usr/include/llvm/IR/BuiltinGCs.h,36
#define LLVM_IR_BUILTINGCS_H15,573

/usr/include/llvm/IR/CFG.h,4409
#define LLVM_IR_CFG_H20,912
class PredIterator 42,1501
  USE_iterator It;52,1765
  inline void advancePastNonTerminators(54,1785
  explicit inline PredIterator(67,2089
  inline PredIterator(70,2191
  inline bool operator==(operator==72,2253
  inline bool operator!=(operator!=73,2322
  inline reference operator*(75,2396
  inline pointer *operator->(operator->79,2545
  inline Self& operator++(81,2608
  inline Self operator++(87,2776
  unsigned getOperandNo(93,2976
  Use &getUse(getUse99,3139
using pred_iterator 104,3195
using const_pred_iterator 105,3265
using pred_range 107,3357
using const_pred_range 108,3407
inline pred_iterator pred_begin(110,3470
inline const_pred_iterator pred_begin(111,3548
inline pred_iterator pred_end(114,3646
inline const_pred_iterator pred_end(115,3727
inline bool pred_empty(118,3829
inline unsigned pred_size(123,4076
inline pred_range predecessors(126,4182
inline const_pred_range predecessors(129,4284
class SuccIterator138,4664
  using difference_type 143,4897
  using pointer 144,4928
  using reference 145,4956
  InstructionT *Inst;Inst148,4996
  int Idx;149,5018
  using Self 150,5029
  inline bool index_is_valid(152,5081
  class SuccessorProxy 159,5371
    Self It;160,5396
    explicit SuccessorProxy(163,5420
    SuccessorProxy &operator=(operator=167,5532
    SuccessorProxy &operator=(operator=172,5641
    operator reference(operator reference177,5757
  explicit inline SuccIterator(182,5838
  inline SuccIterator(184,5931
  int getSuccessorIndex(199,6539
  inline bool operator==(operator==201,6588
  inline BlockT *operator*(operator*203,6660
  inline BlockT *operator->(operator->206,6793
  inline bool operator<(208,6854
  int operator-(213,7015
  inline Self &operator+=(operator+=218,7168
  inline Self &operator-=(operator-=225,7343
  inline BlockT *getSource(getSource236,7678
using succ_iterator 242,7821
using const_succ_iterator 243,7882
using succ_range 244,7961
using const_succ_range 245,8011
inline succ_iterator succ_begin(247,8074
inline const_succ_iterator succ_begin(248,8151
inline succ_iterator succ_end(251,8248
inline const_succ_iterator succ_end(252,8329
inline bool succ_empty(255,8430
inline unsigned succ_size(258,8518
inline succ_range successors(261,8622
inline const_succ_range successors(264,8720
inline succ_iterator succ_begin(268,8837
inline const_succ_iterator succ_begin(271,8934
inline succ_iterator succ_end(274,9049
inline const_succ_iterator succ_end(277,9150
inline bool succ_empty(280,9269
inline unsigned succ_size(283,9359
inline succ_range successors(286,9465
inline const_succ_range successors(289,9565
template <> struct GraphTraits<GraphTraits300,10011
  using NodeRef 301,10057
  using ChildIteratorType 302,10089
  static NodeRef getEntryNode(304,10133
  static ChildIteratorType child_begin(305,10194
  static ChildIteratorType child_end(306,10270
template <> struct GraphTraits<GraphTraits309,10346
  using NodeRef 310,10398
  using ChildIteratorType 311,10436
  static NodeRef getEntryNode(313,10486
  static ChildIteratorType child_begin(315,10554
  static ChildIteratorType child_end(316,10630
template <> struct GraphTraits<GraphTraits324,10982
  using NodeRef 325,11037
  using ChildIteratorType 326,11069
  static NodeRef getEntryNode(328,11113
  static ChildIteratorType child_begin(329,11188
  static ChildIteratorType child_end(330,11264
template <> struct GraphTraits<GraphTraits333,11340
  using NodeRef 334,11401
  using ChildIteratorType 335,11439
  static NodeRef getEntryNode(337,11489
  static ChildIteratorType child_begin(338,11570
  static ChildIteratorType child_end(339,11646
template <> struct GraphTraits<GraphTraits350,12184
  static NodeRef getEntryNode(351,12262
  using nodes_iterator 354,12414
  static nodes_iterator nodes_begin(356,12478
  static nodes_iterator nodes_end(360,12573
  static size_t size(364,12664
template <> struct GraphTraits<GraphTraits366,12723
  static NodeRef getEntryNode(368,12815
  using nodes_iterator 371,12973
  static nodes_iterator nodes_begin(373,13043
  static nodes_iterator nodes_end(377,13144
  static size_t size(381,13241
template <> struct GraphTraits<GraphTraits389,13583
  static NodeRef getEntryNode(391,13681
template <> struct GraphTraits<GraphTraits395,13781
  static NodeRef getEntryNode(397,13891

/usr/include/llvm/IR/Comdat.h,527
#define LLVM_IR_COMDAT_H16,598
class Comdat 33,1159
  enum SelectionKind 35,1182
    Any,36,1205
    ExactMatch,37,1263
    Largest,38,1339
    NoDeduplicate,39,1406
    SameSize,40,1461
  Comdat(44,1583
  SelectionKind getSelectionKind(46,1606
  void setSelectionKind(47,1662
  StringRef getName(48,1719
  Comdat(57,1970
  void addUser(58,1982
  void removeUser(59,2016
  SmallPtrSet<GlobalObject GlobalObject65,2188
  SmallPtrSet<GlobalObject *, 2> Users;65,2188
DEFINE_SIMPLE_CONVERSION_FUNCTIONS(69,2297

/usr/include/llvm/IR/Constant.h,549
#define LLVM_IR_CONSTANT_H14,545
class Constant 41,1728
  Constant(43,1770
  bool isNullValue(53,2066
  void handleOperandChange(182,7644
  static Constant *getNullValue(getNullValue184,7691
  static Constant *getAllOnesValue(getAllOnesValue189,7893
  static Constant *getIntegerValue(getIntegerValue193,8055
  void removeDeadConstantUsers(199,8389
  Constant *stripPointerCasts(stripPointerCasts217,9014
  enum PossibleRelocationsTy 237,9908
    NoRelocation 240,10047
    LocalRelocation 244,10168
    GlobalRelocation 248,10296

/usr/include/llvm/IR/ConstantFold.h,38
#define LLVM_IR_CONSTANTFOLD_H22,941

/usr/include/llvm/IR/DebugLoc.h,473
#define LLVM_IR_DEBUGLOC_H15,604
  class DebugLoc 33,1056
    TrackingMDNodeRef Loc;34,1075
    DebugLoc(40,1181
    explicit DebugLoc(48,1503
    DILocation *get(get54,1663
    DILocation &operator*operator57,1797
    explicit operator bool(66,2170
    bool hasTrivialDestructor(69,2275
    enum { ReplaceLastInlinedAt 71,2353
    static DebugLoc appendInlinedAt(75,2607
    unsigned getLine(79,2821
    bool isImplicitCode(109,3947
    void dump(115,4171

/usr/include/llvm/IR/DerivedUser.h,123
#define LLVM_IR_DERIVEDUSER_H10,400
class DerivedUser 27,965
  DeleteValueTy DeleteValue;34,1093
  DerivedUser(37,1131

/usr/include/llvm/IR/DiagnosticInfo.h,8069
#define LLVM_IR_DIAGNOSTICINFO_H15,636
enum DiagnosticSeverity 49,1404
  DS_Error,50,1437
  DS_Warning,51,1449
  DS_Remark,52,1463
  DS_Note55,1566
enum DiagnosticKind 60,1719
  DK_InlineAsm,61,1741
  DK_ResourceLimit,62,1757
  DK_StackSize,63,1777
  DK_Linker,64,1793
  DK_Lowering,65,1806
  DK_DebugMetadataVersion,66,1821
  DK_DebugMetadataInvalid,67,1848
  DK_ISelFallback,68,1875
  DK_SampleProfile,69,1894
  DK_OptimizationRemark,70,1914
  DK_OptimizationRemarkMissed,71,1939
  DK_OptimizationRemarkAnalysis,72,1970
  DK_OptimizationRemarkAnalysisFPCommute,73,2003
  DK_OptimizationRemarkAnalysisAliasing,74,2045
  DK_OptimizationFailure,75,2086
  DK_FirstRemark 76,2112
  DK_LastRemark 77,2154
  DK_MachineOptimizationRemark,78,2196
  DK_MachineOptimizationRemarkMissed,79,2228
  DK_MachineOptimizationRemarkAnalysis,80,2266
  DK_FirstMachineRemark 81,2306
  DK_LastMachineRemark 82,2362
  DK_MIRParser,83,2425
  DK_PGOProfile,84,2441
  DK_Unsupported,85,2458
  DK_SrcMgr,86,2476
  DK_DontCall,87,2489
  DK_MisExpect,88,2504
  DK_FirstPluginKind 89,2520
class DiagnosticInfo 108,3397
  const /* DiagnosticKind */ int Kind;111,3482
  const DiagnosticSeverity Severity;113,3574
  DiagnosticInfo(117,3645
  /* DiagnosticKind */ int getKind(122,3805
  DiagnosticSeverity getSeverity(123,3865
using DiagnosticHandlerFunction 134,4335
class DiagnosticInfoInlineAsm 138,4526
  uint64_t LocCookie 141,4638
  const Twine &MsgStr;MsgStr143,4694
  const Instruction *Instr Instr145,4755
  DiagnosticInfoInlineAsm(151,4994
  DiagnosticInfoInlineAsm(159,5408
  uint64_t getLocCookie(172,6037
  const Twine &getMsgStr(getMsgStr173,6091
  const Instruction *getInstruction(getInstruction174,6143
  static bool classof(179,6293
class DiagnosticInfoDebugMetadataVersion 186,6504
  const Module &M;M189,6658
  unsigned MetadataVersion;191,6712
  DiagnosticInfoDebugMetadataVersion(196,6868
  const Module &getModule(getModule201,7137
  unsigned getMetadataVersion(202,7185
  static bool classof(207,7339
class DiagnosticInfoIgnoringInvalidDebugMetadata 213,7515
  const Module &M;M216,7677
  DiagnosticInfoIgnoringInvalidDebugMetadata(220,7786
  const Module &getModule(getModule224,7965
  static bool classof(229,8101
class DiagnosticInfoSampleProfile 235,8264
  DiagnosticInfoSampleProfile(237,8332
  DiagnosticInfoSampleProfile(242,8628
  DiagnosticInfoSampleProfile(246,8858
  static bool classof(253,9128
  StringRef getFileName(257,9229
  unsigned getLineNum(258,9282
  const Twine &getMsg(getMsg259,9332
  StringRef FileName;263,9450
  unsigned LineNum 267,9581
  const Twine &Msg;Msg270,9631
class DiagnosticInfoPGOProfile 274,9704
  DiagnosticInfoPGOProfile(276,9769
  static bool classof(283,10072
  const char *getFileName(getFileName287,10170
  const Twine &getMsg(getMsg288,10225
  const char *FileName;FileName292,10343
  const Twine &Msg;Msg295,10393
class DiagnosticLocation 298,10417
  DIFile *File File299,10444
  unsigned Line 300,10470
  unsigned Column 301,10491
  bool isValid(308,10646
  unsigned getLine(313,10868
  unsigned getColumn(314,10912
class DiagnosticInfoWithLocationBase 318,11029
  DiagnosticInfoWithLocationBase(323,11260
  bool isLocationAvailable(330,11640
  const Function &getFunction(getFunction345,12249
  DiagnosticLocation getLocation(346,12302
  const Function &Fn;Fn350,12420
  DiagnosticLocation Loc;353,12500
class DiagnosticInfoResourceLimit 358,12633
  const Function &Fn;Fn361,12790
  const char *ResourceName;ResourceName364,12870
  uint64_t ResourceSize;367,12929
  uint64_t ResourceLimit;370,12978
  const Function &getFunction(getFunction380,13415
  const char *getResourceName(getResourceName381,13468
  uint64_t getResourceSize(382,13531
  uint64_t getResourceLimit(383,13591
  static bool classof(388,13741
class DiagnosticInfoStackSize 393,13878
  DiagnosticInfoStackSize(397,13982
  uint64_t getStackSize(403,14310
  uint64_t getStackLimit(404,14372
  static bool classof(406,14437
class DiagnosticInfoOptimizationBase 413,14652
  struct setIsVerbose 416,14793
  struct setExtraArgs 422,15063
  struct Argument 426,15222
    std::string Key;427,15242
    std::string Val;428,15263
    DiagnosticLocation Loc;430,15346
    explicit Argument(432,15375
    Argument(436,15577
    Argument(445,15991
  DiagnosticInfoOptimizationBase(456,16558
  StringRef getPassName(479,17580
  StringRef getRemarkName(480,17633
  std::optional<uint64_t> getHotness(482,17720
  void setHotness(483,17785
  bool isVerbose(485,17848
  ArrayRef<Argument> getArgs(487,17896
  static bool classof(489,17951
  bool isPassed(496,18206
  bool isMissed(501,18343
  bool isAnalysis(506,18492
  const char *PassName;PassName515,18816
  StringRef RemarkName;520,19023
  std::optional<uint64_t> Hotness;524,19195
  SmallVector<SmallVector527,19286
  SmallVector<Argument, 4> Args;527,19286
  bool IsVerbose 530,19362
  int FirstExtraArgIndex 535,19551
operator<<(543,19853
operator<<(556,20196
operator<<(567,20440
operator<<(578,20714
operator<<(589,20989
operator<<(600,21267
operator<<(611,21546
class DiagnosticInfoIROptimization 622,21893
  DiagnosticInfoIROptimization(633,22568
  DiagnosticInfoIROptimization(650,23463
  DiagnosticInfoIROptimization(668,24438
  const Value *getCodeRegion(getCodeRegion676,24822
  static bool classof(678,24883
  const Value *CodeRegion CodeRegion685,25182
class OptimizationRemark 689,25284
  static bool classof(710,26319
  OptimizationRemark(727,27174
class OptimizationRemarkMissed 734,27506
  static bool classof(756,28601
  OptimizationRemarkMissed(773,29469
class OptimizationRemarkAnalysis 780,29821
  OptimizationRemarkAnalysis(799,30867
  static bool classof(813,31497
  static const char *AlwaysPrint;AlwaysPrint820,31701
  bool shouldAlwaysPrint(822,31736
  OptimizationRemarkAnalysis(825,31822
  OptimizationRemarkAnalysis(845,33020
class OptimizationRemarkAnalysisFPCommute 853,33426
  OptimizationRemarkAnalysisFPCommute(863,34072
  static bool classof(870,34477
  OptimizationRemarkAnalysisFPCommute(886,35388
class OptimizationRemarkAnalysisAliasing 895,35828
  OptimizationRemarkAnalysisAliasing(905,36466
  static bool classof(911,36829
  OptimizationRemarkAnalysisAliasing(927,37732
class DiagnosticInfoMIRParser 936,38181
  const SMDiagnostic &Diagnostic;Diagnostic937,38237
  DiagnosticInfoMIRParser(940,38280
  const SMDiagnostic &getDiagnostic(getDiagnostic944,38468
  static bool classof(948,38589
class DiagnosticInfoISelFallback 954,38740
  const Function &Fn;Fn956,38856
  DiagnosticInfoISelFallback(959,38887
  const Function &getFunction(getFunction963,39069
  static bool classof(967,39176
class DiagnosticInfoOptimizationFailure 976,39473
  DiagnosticInfoOptimizationFailure(984,39968
  static bool classof(999,40799
class DiagnosticInfoUnsupported 1008,41062
  Twine Msg;1010,41145
  DiagnosticInfoUnsupported(1019,41574
  static bool classof(1026,41849
  const Twine &getMessage(getMessage1030,41948
class DiagnosticInfoMisExpect 1036,42106
  static bool classof(1043,42338
  const Twine &getMsg(getMsg1047,42435
  const Twine &Msg;Msg1051,42516
static DiagnosticSeverity getDiagnosticSeverity(1054,42540
class DiagnosticInfoSrcMgr 1073,43011
  const SMDiagnostic &Diagnostic;Diagnostic1074,43064
  StringRef ModName;1075,43098
  bool InlineAsmDiag;1078,43160
  unsigned LocCookie;1079,43182
  DiagnosticInfoSrcMgr(1082,43213
  StringRef getModuleName(1088,43554
  bool isInlineAsmDiag(1089,43608
  const SMDiagnostic &getSMDiag(getSMDiag1090,43665
  unsigned getLocCookie(1091,43728
  static bool classof(1094,43835
class DiagnosticInfoDontCall 1101,43976
  StringRef CalleeName;1102,44031
  StringRef Note;1103,44055
  unsigned LocCookie;1104,44073
  DiagnosticInfoDontCall(1107,44104
  StringRef getFunctionName(1111,44344
  StringRef getNote(1112,44403
  unsigned getLocCookie(1113,44448
  static bool classof(1115,44554

/usr/include/llvm/IR/DiagnosticPrinter.h,195
#define LLVM_IR_DIAGNOSTICPRINTER_H16,660
class DiagnosticPrinter 31,902
class DiagnosticPrinterRawOStream 61,2202
  raw_ostream &Stream;Stream63,2276
  DiagnosticPrinterRawOStream(66,2308

/usr/include/llvm/IR/EHPersonalities.h,575
#define LLVM_IR_EHPERSONALITIES_H10,404
enum class EHPersonality 21,586
  Unknown,22,613
  GNU_Ada,23,624
  GNU_C,24,635
  GNU_C_SjLj,25,644
  GNU_CXX,26,658
  GNU_CXX_SjLj,27,669
  GNU_ObjC,28,685
  MSVC_X86SEH,29,697
  MSVC_TableSEH,30,712
  MSVC_CXX,31,729
  CoreCLR,32,741
  Rust,33,752
  Wasm_CXX,34,760
  XL_CXX35,772
inline bool isAsynchronousEHPersonality(49,1193
inline bool isFuncletEHPersonality(64,1682
inline bool isScopedEHPersonality(79,2106
inline bool isNoOpWithoutInvoke(95,2569
typedef TinyPtrVector<BasicBlock *> ColorVector;108,2871

/usr/include/llvm/IR/FPEnv.h,291
#define LLVM_IR_FPENV_H16,611
typedef unsigned ID;26,779
namespace fp 31,823
enum ExceptionBehavior 38,1073
  ebIgnore,39,1108
  ebMayTrap,40,1165
  ebStrict 41,1223
inline bool isDefaultFPEnvironment(65,2255
inline bool canRoundingModeBe(77,2805
inline bool canIgnoreSNaN(83,3008

/usr/include/llvm/IR/FixedPointBuilder.h,1074
#define LLVM_IR_FIXEDPOINTBUILDER_H15,635
template <class IRBuilderTy> class FixedPointBuilder 32,1021
  IRBuilderTy &B;B33,1076
  Value *Convert(Convert35,1095
  getCommonBinopSemantic(115,4443
  Type *getAccommodatingFloatType(getAccommodatingFloatType128,5108
  FixedPointBuilder(136,5444
  Value *CreateFixedToFixed(CreateFixedToFixed143,5791
  Value *CreateFixedToInteger(CreateFixedToInteger154,6337
  Value *CreateIntegerToFixed(CreateIntegerToFixed166,6895
  Value *CreateFixedToFloating(CreateFixedToFloating174,7229
  Value *CreateFloatingToFixed(CreateFloatingToFixed191,8043
  Value *CreateAdd(CreateAdd228,9656
  Value *CreateSub(CreateSub254,10737
  Value *CreateMul(CreateMul288,12172
  Value *CreateDiv(CreateDiv316,13345
  Value *CreateShl(CreateShl343,14486
  Value *CreateShr(CreateShr364,15225
  Value *CreateEQ(CreateEQ375,15685
  Value *CreateNE(CreateNE390,16308
  Value *CreateLT(CreateLT405,16929
  Value *CreateLE(CreateLE421,17645
  Value *CreateGT(CreateGT437,18360
  Value *CreateGE(CreateGE453,19076

/usr/include/llvm/IR/GCStrategy.h,343
#define LLVM_IR_GCSTRATEGY_H48,2153
class GCStrategy 63,2608
  std::string Name;67,2666
  const std::string &getName(getName88,3589
  bool useStatepoints(92,3747
  virtual std::optional<bool> isGCManagedPointer(101,4157
  bool useRS4GC(107,4360
  bool usesMetadata(118,4757
  bool needsSafePoints(127,5015
using GCRegistry 142,5593

/usr/include/llvm/IR/GVMaterializer.h,104
#define LLVM_IR_GVMATERIALIZER_H18,818
class GVMaterializer 28,940
  virtual ~GVMaterializer(33,1013

/usr/include/llvm/IR/IRPrintingPasses.h,42
#define LLVM_IR_IRPRINTINGPASSES_H16,613

/usr/include/llvm/IR/InstIterator.h,1767
#define LLVM_IR_INSTITERATOR_H19,806
template <class BB_t, class BB_i_t, class BI_t, class II_t> class InstIterator 32,1121
  BB_t *BBs;BBs37,1289
  BB_i_t BB;38,1321
  BI_t BI;39,1363
  template<typename A,52,1665
  template<typename A, typename B,52,1665
  template<typename A, typename B, typename C,52,1665
  InstIterator(53,1724
  template<typename A,56,1816
  template<typename A, typename B,56,1816
  template<typename A, typename B, typename C,56,1816
  InstIterator(57,1875
  template<class M> InstIterator(60,1961
  template<class M> InstIterator(68,2159
  inline BBIty &getBasicBlockIterator(getBasicBlockIterator73,2329
  inline BIty  &getInstructionIterator(getInstructionIterator74,2385
  inline reference operator*(76,2442
  inline pointer operator->(77,2496
  inline bool operator==(operator==79,2558
  inline bool operator!=(operator!=82,2677
  InstIterator& operator++(86,2765
  inline InstIterator operator++(91,2851
  InstIterator& operator--(95,2947
  inline InstIterator operator--(103,3102
  inline bool atEnd(107,3198
  inline void advanceToNextBB(110,3265
using inst_iterator 121,3562
using const_inst_iterator 124,3703
using inst_range 128,3891
using const_inst_range 129,3941
inline inst_iterator inst_begin(131,4004
inline inst_iterator inst_end(132,4079
inline inst_range instructions(133,4160
inline const_inst_iterator inst_begin(136,4257
inline const_inst_iterator inst_end(139,4352
inline const_inst_range instructions(142,4451
inline inst_iterator inst_begin(145,4566
inline inst_iterator inst_end(146,4640
inline inst_range instructions(147,4720
inline const_inst_iterator inst_begin(150,4817
inline const_inst_iterator inst_end(153,4911
inline const_inst_range instructions(156,5009

/usr/include/llvm/IR/InstVisitor.h,176
#define LLVM_IR_INSTVISITOR_H11,401
#define HANDLE_INST(24,709
#define DELEGATE(27,800
#define HANDLE_INST(122,4559
#define HANDLE_INST(154,6066
#undef DELEGATE314,14488

/usr/include/llvm/IR/Instruction.def,351
HANDLE_TERM_INST 127,3407
HANDLE_TERM_INST 128,3458
HANDLE_TERM_INST 129,3509
HANDLE_TERM_INST 130,3560
HANDLE_TERM_INST 131,3615
HANDLE_TERM_INST 132,3666
HANDLE_TERM_INST 133,3717
HANDLE_TERM_INST 134,3773
HANDLE_TERM_INST 135,3831
HANDLE_TERM_INST 136,3887
HANDLE_TERM_INST 137,3943
HANDLE_USER_INST 211,7335
HANDLE_USER_INST 212,7416

/usr/include/llvm/IR/Intrinsics.h,1834
#define LLVM_IR_INTRINSICS_H16,645
  typedef unsigned ID;41,1322
  enum IndependentIntrinsics 43,1346
    not_intrinsic 44,1388
#define GET_INTRINSIC_ENUM_VALUES47,1486
#undef GET_INTRINSIC_ENUM_VALUES49,1558
  struct IITDescriptor 110,4435
    enum IITDescriptorKind 111,4460
      Void,112,4489
      VarArg,113,4501
      MMX,114,4515
      Token,115,4526
      Metadata,116,4539
      Half,117,4555
      BFloat,118,4567
      Float,119,4581
      Double,120,4594
      Quad,121,4608
      Integer,122,4620
      Vector,123,4635
      Pointer,124,4649
      Struct,125,4664
      Argument,126,4678
      ExtendArgument,127,4694
      TruncArgument,128,4716
      HalfVecArgument,129,4737
      SameVecWidthArgument,130,4760
      VecOfAnyPtrsToElt,131,4788
      VecElementArgument,132,4813
      Subdivide2Argument,133,4839
      Subdivide4Argument,134,4865
      VecOfBitcastsToInt,135,4891
      AMX,136,4917
      PPCQuad,137,4928
      AArch64Svcount,138,4943
    } Kind;139,4965
      unsigned Integer_Width;142,4990
      unsigned Float_Width;143,5020
      unsigned Pointer_AddressSpace;144,5048
      unsigned Struct_NumElements;145,5085
      unsigned Argument_Info;146,5120
      ElementCount Vector_Width;147,5150
    enum ArgKind 151,5230
#define GET_INTRINSIC_ARGKIND152,5249
#undef GET_INTRINSIC_ARGKIND154,5317
    unsigned getArgumentNumber(157,5354
    ArgKind getArgumentKind(165,5748
    unsigned getOverloadArgNumber(176,6306
    unsigned getRefArgNumber(180,6431
    static IITDescriptor get(185,6555
    static IITDescriptor get(190,6698
    static IITDescriptor getVector(197,6926
  enum MatchIntrinsicTypesResult 208,7324
    MatchIntrinsicTypes_Match 209,7359
    MatchIntrinsicTypes_NoMatchRet 210,7394
    MatchIntrinsicTypes_NoMatchArg 211,7434

/usr/include/llvm/IR/IntrinsicsARM.td,11352
let TargetPrefix 17,604
  def int_arm_neon_vhaddu : Neon_2Arg_Intrinsic;503,25556
  def int_arm_neon_vrhadds : Neon_2Arg_Intrinsic;504,25605
  def int_arm_neon_vrhaddu : Neon_2Arg_Intrinsic;505,25655
  def int_arm_neon_vraddhn : Neon_2Arg_Narrow_Intrinsic;506,25705
  def int_arm_neon_vmulp : Neon_2Arg_Intrinsic;509,25785
  def int_arm_neon_vqdmulh : Neon_2Arg_Intrinsic;510,25833
  def int_arm_neon_vqrdmulh : Neon_2Arg_Intrinsic;511,25883
  def int_arm_neon_vmulls : Neon_2Arg_Long_Intrinsic;512,25934
  def int_arm_neon_vmullu : Neon_2Arg_Long_Intrinsic;513,25988
  def int_arm_neon_vmullp : Neon_2Arg_Long_Intrinsic;514,26042
  def int_arm_neon_vqdmull : Neon_2Arg_Long_Intrinsic;515,26096
  def int_arm_neon_vmaxs : Neon_2Arg_Intrinsic;518,26173
  def int_arm_neon_vmaxu : Neon_2Arg_Intrinsic;519,26221
  def int_arm_neon_vmaxnm : Neon_2Arg_Intrinsic;520,26269
  def int_arm_neon_vmins : Neon_2Arg_Intrinsic;523,26340
  def int_arm_neon_vminu : Neon_2Arg_Intrinsic;524,26388
  def int_arm_neon_vminnm : Neon_2Arg_Intrinsic;525,26436
  def int_arm_neon_vrecps : Neon_2Arg_Intrinsic;528,26515
  def int_arm_neon_vrsqrts : Neon_2Arg_Intrinsic;531,26606
def int_arm_neon_vhsubs : Neon_2Arg_Intrinsic;535,26679
def int_arm_neon_vhsubu : Neon_2Arg_Intrinsic;536,26726
def int_arm_neon_vrsubhn : Neon_2Arg_Narrow_Intrinsic;537,26773
def int_arm_neon_vacge : Neon_Compare_Intrinsic;540,26857
def int_arm_neon_vacgt : Neon_Compare_Intrinsic;541,26906
def int_arm_neon_vabds : Neon_2Arg_Intrinsic;544,26988
def int_arm_neon_vabdu : Neon_2Arg_Intrinsic;545,27034
def int_arm_neon_vpadd : Neon_2Arg_Intrinsic;548,27105
def int_arm_neon_vpmaxs : Neon_2Arg_Intrinsic;568,28059
def int_arm_neon_vpmaxu : Neon_2Arg_Intrinsic;569,28106
def int_arm_neon_vpmins : Neon_2Arg_Intrinsic;570,28153
def int_arm_neon_vpminu : Neon_2Arg_Intrinsic;571,28200
def int_arm_neon_vshifts : Neon_2Arg_Intrinsic;595,29507
def int_arm_neon_vshiftu : Neon_2Arg_Intrinsic;596,29555
def int_arm_neon_vrshifts : Neon_2Arg_Intrinsic;599,29630
def int_arm_neon_vrshiftu : Neon_2Arg_Intrinsic;600,29679
def int_arm_neon_vrshiftn : Neon_2Arg_Narrow_Intrinsic;601,29728
def int_arm_neon_vqshifts : Neon_2Arg_Intrinsic;604,29813
def int_arm_neon_vqshiftu : Neon_2Arg_Intrinsic;605,29862
def int_arm_neon_vqshiftsu : Neon_2Arg_Intrinsic;606,29911
def int_arm_neon_vqshiftns : Neon_2Arg_Narrow_Intrinsic;607,29961
def int_arm_neon_vqshiftnu : Neon_2Arg_Narrow_Intrinsic;608,30018
def int_arm_neon_vqshiftnsu : Neon_2Arg_Narrow_Intrinsic;609,30075
def int_arm_neon_vqrshifts : Neon_2Arg_Intrinsic;612,30171
def int_arm_neon_vqrshiftu : Neon_2Arg_Intrinsic;613,30221
def int_arm_neon_vqrshiftns : Neon_2Arg_Narrow_Intrinsic;614,30271
def int_arm_neon_vqrshiftnu : Neon_2Arg_Narrow_Intrinsic;615,30329
def int_arm_neon_vqrshiftnsu : Neon_2Arg_Narrow_Intrinsic;616,30387
def int_arm_neon_vshiftins : Neon_3Arg_Intrinsic;619,30475
def int_arm_neon_vabs : Neon_1Arg_Intrinsic;622,30582
def int_arm_neon_vqabs : Neon_1Arg_Intrinsic;623,30627
def int_arm_neon_vqneg : Neon_1Arg_Intrinsic;626,30703
def int_arm_neon_vcls : Neon_1Arg_Intrinsic;629,30790
def int_arm_neon_vrecpe : Neon_1Arg_Intrinsic;632,30867
def int_arm_neon_vrsqrte : Neon_1Arg_Intrinsic;635,30958
def int_arm_neon_vcvtau : Neon_CvtFPtoInt_1Arg_Intrinsic;638,31064
def int_arm_neon_vcvtas : Neon_CvtFPtoInt_1Arg_Intrinsic;639,31122
def int_arm_neon_vcvtnu : Neon_CvtFPtoInt_1Arg_Intrinsic;640,31180
def int_arm_neon_vcvtns : Neon_CvtFPtoInt_1Arg_Intrinsic;641,31238
def int_arm_neon_vcvtpu : Neon_CvtFPtoInt_1Arg_Intrinsic;642,31296
def int_arm_neon_vcvtps : Neon_CvtFPtoInt_1Arg_Intrinsic;643,31354
def int_arm_neon_vcvtmu : Neon_CvtFPtoInt_1Arg_Intrinsic;644,31412
def int_arm_neon_vcvtms : Neon_CvtFPtoInt_1Arg_Intrinsic;645,31470
def int_arm_neon_vcvtfp2fxs : Neon_CvtFPToFx_Intrinsic;648,31591
def int_arm_neon_vcvtfp2fxu : Neon_CvtFPToFx_Intrinsic;649,31647
def int_arm_neon_vcvtfxs2fp : Neon_CvtFxToFP_Intrinsic;650,31703
def int_arm_neon_vcvtfxu2fp : Neon_CvtFxToFP_Intrinsic;651,31759
def int_arm_neon_vqmovns : Neon_1Arg_Narrow_Intrinsic;660,32128
def int_arm_neon_vqmovnu : Neon_1Arg_Narrow_Intrinsic;661,32183
def int_arm_neon_vqmovnsu : Neon_1Arg_Narrow_Intrinsic;662,32238
def int_arm_neon_vtbl1 : Neon_Tbl2Arg_Intrinsic;666,32361
def int_arm_neon_vtbl2 : Neon_Tbl3Arg_Intrinsic;667,32410
def int_arm_neon_vtbl3 : Neon_Tbl4Arg_Intrinsic;668,32459
def int_arm_neon_vtbl4 : Neon_Tbl5Arg_Intrinsic;669,32508
def int_arm_neon_vtbx1 : Neon_Tbl3Arg_Intrinsic;675,32774
def int_arm_neon_vtbx2 : Neon_Tbl4Arg_Intrinsic;676,32823
def int_arm_neon_vtbx3 : Neon_Tbl5Arg_Intrinsic;677,32872
def int_arm_neon_vtbx4 : Neon_Tbl6Arg_Intrinsic;678,32921
def int_arm_neon_vrintn : Neon_1FloatArg_Intrinsic;681,33002
def int_arm_neon_vrintx : Neon_1Arg_Intrinsic;682,33054
def int_arm_neon_vrinta : Neon_1Arg_Intrinsic;683,33101
def int_arm_neon_vrintz : Neon_1Arg_Intrinsic;684,33148
def int_arm_neon_vrintm : Neon_1Arg_Intrinsic;685,33195
def int_arm_neon_vrintp : Neon_1Arg_Intrinsic;686,33242
  def "": DefaultAttrsIntrinsic<rets, params,989,47826
  def "": DefaultAttrsIntrinsic<rets, params, props,989,47826
  def _predicated: DefaultAttrsIntrinsic<DefaultAttrsIntrinsic990,47893
multiclass MVEPredicatedM<MVEPredicatedM993,48021
defm int_arm_mve_min: MVE_minmaxv;1012,48832
defm int_arm_mve_max: MVE_minmaxv;1013,48867
defm int_arm_mve_addv: MVEPredicated<MVEPredicated1015,48903
defm int_arm_mve_addlv: MVEPredicated<MVEPredicated1017,49008
multiclass MVEMXPredicated<MVEMXPredicated1023,49299
defm int_arm_mve_vcvt_narrow: MVEPredicated<MVEPredicated1032,49738
defm int_arm_mve_vcvt_widen: MVEMXPredicated<MVEMXPredicated1034,49862
defm int_arm_mve_vldr_gather_base: MVEPredicated<MVEPredicated1037,49992
defm int_arm_mve_vldr_gather_base_wb: MVEPredicated<MVEPredicated1040,50156
defm int_arm_mve_vstr_scatter_base: MVEPredicated<MVEPredicated1044,50344
defm int_arm_mve_vstr_scatter_base_wb: MVEPredicated<MVEPredicated1047,50512
defm int_arm_mve_vldr_gather_offset: MVEPredicated<MVEPredicated1060,51211
defm int_arm_mve_vstr_scatter_offset: MVEPredicated<MVEPredicated1064,51422
def int_arm_mve_shl_imm_predicated: DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1069,51625
def int_arm_mve_shr_imm_predicated: DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1072,51794
defm int_arm_mve_vqshl_imm: MVEPredicatedM<MVEPredicatedM1077,52011
defm int_arm_mve_vrshr_imm: MVEPredicatedM<MVEPredicatedM1079,52153
defm int_arm_mve_vqshlu_imm: MVEPredicatedM<MVEPredicatedM1081,52295
defm int_arm_mve_vshll_imm: MVEPredicatedM<MVEPredicatedM1083,52412
defm int_arm_mve_vsli: MVEPredicated<MVEPredicated1087,52605
defm int_arm_mve_vsri: MVEPredicated<MVEPredicated1089,52719
defm int_arm_mve_vshrn: MVEPredicated<MVEPredicated1092,52834
defm int_arm_mve_vshl_scalar: MVEPredicated<MVEPredicated1098,53112
defm int_arm_mve_vshl_vector: MVEPredicatedM<MVEPredicatedM1101,53309
                             list<LLVMType> saturate 1107,53588
multiclass ARM_MVE_qrshift<ARM_MVE_qrshift1109,53728
defm int_arm_mve_urshr: ARM_MVE_qrshift;1115,54044
defm int_arm_mve_uqshl: ARM_MVE_qrshift;1116,54085
defm int_arm_mve_srshr: ARM_MVE_qrshift;1117,54126
defm int_arm_mve_sqshl: ARM_MVE_qrshift;1118,54167
defm int_arm_mve_uqrshl: ARM_MVE_qrshift<ARM_MVE_qrshift1119,54208
defm int_arm_mve_sqrshr: ARM_MVE_qrshift<ARM_MVE_qrshift1120,54265
def int_arm_mve_lsll: ARM_MVE_qrshift_single<ARM_MVE_qrshift_single1122,54374
def int_arm_mve_asrl: ARM_MVE_qrshift_single<ARM_MVE_qrshift_single1123,54448
def int_arm_mve_vabd: DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1125,54523
def int_arm_mve_vadc: DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1129,54678
def int_arm_mve_vsbc: DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1132,54828
def int_arm_mve_vadc_predicated: DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1135,54978
def int_arm_mve_vsbc_predicated: DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1139,55180
def int_arm_mve_vshlc: DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1143,55382
def int_arm_mve_vshlc_predicated: DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1147,55595
def int_arm_mve_vmulh: DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1151,55838
def int_arm_mve_vqdmulh: DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1155,55994
def int_arm_mve_vhadd: DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1158,56121
def int_arm_mve_vrhadd: DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1162,56277
def int_arm_mve_vhsub: DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1166,56434
def int_arm_mve_vrmulh: DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1170,56590
def int_arm_mve_vqrdmulh: DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1174,56747
def int_arm_mve_vmull: DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1177,56875
def int_arm_mve_vmull_poly: DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1181,57056
defm int_arm_mve_vcaddq : MVEMXPredicated<MVEMXPredicated1190,57508
defm int_arm_mve_vcmulq : MVEMXPredicated<MVEMXPredicated1201,57854
defm int_arm_mve_vcmlaq : MVEPredicated<MVEPredicated1206,58017
def int_arm_mve_vld2q: DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1211,58176
def int_arm_mve_vld4q: DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1214,58319
defm int_arm_mve_vabav: MVEPredicated<MVEPredicated1233,59152
defm int_arm_mve_vmldava: MVEPredicated<MVEPredicated1254,60077
defm int_arm_mve_vmlldava: MVEPredicated<MVEPredicated1261,60304
defm int_arm_mve_vrmlldavha: MVEPredicated<MVEPredicated1268,60568
defm int_arm_mve_vidup: MVEMXPredicated<MVEMXPredicated1274,60774
defm int_arm_mve_vddup: MVEMXPredicated<MVEMXPredicated1278,60987
defm int_arm_mve_viwdup: MVEMXPredicated<MVEMXPredicated1282,61200
defm int_arm_mve_vdwdup: MVEMXPredicated<MVEMXPredicated1286,61439
defm int_arm_mve_vcvt_fix: MVEMXPredicated<MVEMXPredicated1293,61703
def int_arm_mve_vcvt_fp_int_predicated: DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1298,61906
foreach suffix 1303,62129
def int_arm_mve_vrintn: DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1309,62366
def int_arm_mve_vcls: DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1311,62470
defm int_arm_mve_vbrsr: MVEMXPredicated<MVEMXPredicated1314,62573
def int_arm_mve_vqdmull: DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1318,62715
def int_arm_mve_vqdmull_predicated: DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1322,62856
  def "" : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1398,66796
  def a : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1402,67004
  def d: DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1408,67251
  def da: DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1412,67488
defm int_arm_cde_cx1: CDEGPRIntrinsics<CDEGPRIntrinsics1419,67798
defm int_arm_cde_cx2: CDEGPRIntrinsics<CDEGPRIntrinsics1420,67842
defm int_arm_cde_cx3: CDEGPRIntrinsics<CDEGPRIntrinsics1421,67897
defm int_arm_cde_vcx1 : CDEVCXIntrinsics<CDEVCXIntrinsics1435,68490
defm int_arm_cde_vcx2 : CDEVCXIntrinsics<CDEVCXIntrinsics1436,68536
defm int_arm_cde_vcx3 : CDEVCXIntrinsics<CDEVCXIntrinsics1437,68598
defm int_arm_cde_vcx1q : CDEVCXVecIntrinsics<CDEVCXVecIntrinsics1462,69797
defm int_arm_cde_vcx2q : CDEVCXVecIntrinsics<CDEVCXVecIntrinsics1463,69847
defm int_arm_cde_vcx3q : CDEVCXVecIntrinsics<CDEVCXVecIntrinsics1464,69910

/usr/include/llvm/IR/IntrinsicsDirectX.td,25
let TargetPrefix 13,518

/usr/include/llvm/IR/IntrinsicsHexagon.td,1315
let TargetPrefix 16,696
  Intrinsic<Intrinsic134,4981
  Intrinsic<Intrinsic138,5164
  Intrinsic<Intrinsic143,5349
  Intrinsic<Intrinsic147,5546
defm int_hexagon_L2_loadrub : Hexagon_custom_circ_ld_Intrinsic<Hexagon_custom_circ_ld_Intrinsic169,6465
defm int_hexagon_L2_loadrb : Hexagon_custom_circ_ld_Intrinsic<Hexagon_custom_circ_ld_Intrinsic170,6542
defm int_hexagon_L2_loadruh : Hexagon_custom_circ_ld_Intrinsic<Hexagon_custom_circ_ld_Intrinsic171,6618
defm int_hexagon_L2_loadrh : Hexagon_custom_circ_ld_Intrinsic<Hexagon_custom_circ_ld_Intrinsic172,6695
defm int_hexagon_L2_loadri : Hexagon_custom_circ_ld_Intrinsic<Hexagon_custom_circ_ld_Intrinsic173,6771
defm int_hexagon_L2_loadrd : Hexagon_custom_circ_ld_Intrinsic<Hexagon_custom_circ_ld_Intrinsic174,6847
defm int_hexagon_S2_storerb : Hexagon_custom_circ_st_Intrinsic<Hexagon_custom_circ_st_Intrinsic186,7319
defm int_hexagon_S2_storerh : Hexagon_custom_circ_st_Intrinsic<Hexagon_custom_circ_st_Intrinsic187,7396
defm int_hexagon_S2_storerf : Hexagon_custom_circ_st_Intrinsic<Hexagon_custom_circ_st_Intrinsic188,7473
defm int_hexagon_S2_storeri : Hexagon_custom_circ_st_Intrinsic<Hexagon_custom_circ_st_Intrinsic189,7550
defm int_hexagon_S2_storerd : Hexagon_custom_circ_st_Intrinsic<Hexagon_custom_circ_st_Intrinsic190,7627

/usr/include/llvm/IR/IntrinsicsHexagonDep.td,3766
      list<IntrinsicProperty> intr_properties 13,566
      list<IntrinsicProperty> intr_properties 20,796
      list<IntrinsicProperty> intr_properties 27,1028
      list<IntrinsicProperty> intr_properties 34,1273
      list<IntrinsicProperty> intr_properties 41,1519
      list<IntrinsicProperty> intr_properties 48,1769
      list<IntrinsicProperty> intr_properties 55,2015
      list<IntrinsicProperty> intr_properties 62,2245
      list<IntrinsicProperty> intr_properties 69,2481
      list<IntrinsicProperty> intr_properties 76,2736
      list<IntrinsicProperty> intr_properties 83,3000
      list<IntrinsicProperty> intr_properties 90,3249
      list<IntrinsicProperty> intr_properties 97,3499
      list<IntrinsicProperty> intr_properties 104,3762
      list<IntrinsicProperty> intr_properties 111,4009
      list<IntrinsicProperty> intr_properties 118,4269
      list<IntrinsicProperty> intr_properties 125,4531
      list<IntrinsicProperty> intr_properties 132,4771
      list<IntrinsicProperty> intr_properties 139,5011
      list<IntrinsicProperty> intr_properties 146,5255
      list<IntrinsicProperty> intr_properties 153,5499
      list<IntrinsicProperty> intr_properties 160,5739
      list<IntrinsicProperty> intr_properties 167,5982
      list<IntrinsicProperty> intr_properties 174,6225
      list<IntrinsicProperty> intr_properties 181,6466
      list<IntrinsicProperty> intr_properties 188,6707
      list<IntrinsicProperty> intr_properties 195,6952
      list<IntrinsicProperty> intr_properties 202,7212
      list<IntrinsicProperty> intr_properties 209,7469
      list<IntrinsicProperty> intr_properties 216,7738
      list<IntrinsicProperty> intr_properties 223,8014
      list<IntrinsicProperty> intr_properties 230,8270
      list<IntrinsicProperty> intr_properties 237,8524
      list<IntrinsicProperty> intr_properties 244,8778
      list<IntrinsicProperty> intr_properties 251,9027
      list<IntrinsicProperty> intr_properties 258,9310
      list<IntrinsicProperty> intr_properties 265,9594
      list<IntrinsicProperty> intr_properties 272,9859
      list<IntrinsicProperty> intr_properties 279,10136
      list<IntrinsicProperty> intr_properties 286,10402
      list<IntrinsicProperty> intr_properties 293,10678
      list<IntrinsicProperty> intr_properties 300,10933
      list<IntrinsicProperty> intr_properties 307,11182
      list<IntrinsicProperty> intr_properties 314,11422
      list<IntrinsicProperty> intr_properties 321,11665
      list<IntrinsicProperty> intr_properties 328,11905
      list<IntrinsicProperty> intr_properties 335,12151
      list<IntrinsicProperty> intr_properties 342,12415
      list<IntrinsicProperty> intr_properties 349,12674
      list<IntrinsicProperty> intr_properties 356,12918
      list<IntrinsicProperty> intr_properties 363,13164
      list<IntrinsicProperty> intr_properties 370,13407
      list<IntrinsicProperty> intr_properties 377,13662
      list<IntrinsicProperty> intr_properties 384,13947
      list<IntrinsicProperty> intr_properties 391,14242
      list<IntrinsicProperty> intr_properties 398,14552
      list<IntrinsicProperty> intr_properties 405,14849
      list<IntrinsicProperty> intr_properties 412,15117
      list<IntrinsicProperty> intr_properties 419,15375
      list<IntrinsicProperty> intr_properties 426,15620
      list<IntrinsicProperty> intr_properties 433,15873
      list<IntrinsicProperty> intr_properties 440,16141
      list<IntrinsicProperty> intr_properties 447,16410
      list<IntrinsicProperty> intr_properties 454,16679
      list<IntrinsicProperty> intr_properties 461,16946
      list<IntrinsicProperty> intr_properties 468,17217
      list<IntrinsicProperty> intr_properties 475,17503

/usr/include/llvm/IR/IntrinsicsMips.td,25
let TargetPrefix 19,722

/usr/include/llvm/IR/IntrinsicsRISCVXTHead.td,25
let TargetPrefix 13,526

/usr/include/llvm/IR/IntrinsicsVE.td,23
let TargetPrefix 4,69

/usr/include/llvm/IR/IntrinsicsVEVL.gen.td,36074
let TargetPrefix 1,0
let TargetPrefix 2,186
let TargetPrefix 3,393
let TargetPrefix 4,583
let TargetPrefix 5,794
let TargetPrefix 6,982
let TargetPrefix 7,1191
let TargetPrefix 8,1383
let TargetPrefix 9,1596
let TargetPrefix 10,1788
let TargetPrefix 11,2001
let TargetPrefix 12,2197
let TargetPrefix 13,2414
let TargetPrefix 14,2606
let TargetPrefix 15,2819
let TargetPrefix 16,3015
let TargetPrefix 17,3232
let TargetPrefix 18,3422
let TargetPrefix 19,3633
let TargetPrefix 20,3827
let TargetPrefix 21,4042
let TargetPrefix 22,4234
let TargetPrefix 23,4447
let TargetPrefix 24,4643
let TargetPrefix 25,4860
let TargetPrefix 26,5056
let TargetPrefix 27,5273
let TargetPrefix 28,5473
let TargetPrefix 29,5694
let TargetPrefix 30,5890
let TargetPrefix 31,6107
let TargetPrefix 32,6307
let TargetPrefix 33,6528
let TargetPrefix 34,6717
let TargetPrefix 35,6926
let TargetPrefix 36,7119
let TargetPrefix 37,7332
let TargetPrefix 38,7525
let TargetPrefix 39,7738
let TargetPrefix 40,7935
let TargetPrefix 41,8152
let TargetPrefix 42,8343
let TargetPrefix 43,8554
let TargetPrefix 44,8749
let TargetPrefix 45,8964
let TargetPrefix 46,9159
let TargetPrefix 47,9374
let TargetPrefix 48,9573
let TargetPrefix 49,9792
let TargetPrefix 50,9983
let TargetPrefix 51,10194
let TargetPrefix 52,10389
let TargetPrefix 53,10604
let TargetPrefix 54,10799
let TargetPrefix 55,11014
let TargetPrefix 56,11213
let TargetPrefix 57,11432
let TargetPrefix 58,11625
let TargetPrefix 59,11838
let TargetPrefix 60,12035
let TargetPrefix 61,12252
let TargetPrefix 62,12449
let TargetPrefix 63,12666
let TargetPrefix 64,12867
let TargetPrefix 65,13088
let TargetPrefix 66,13283
let TargetPrefix 67,13498
let TargetPrefix 68,13697
let TargetPrefix 69,13916
let TargetPrefix 70,14115
let TargetPrefix 71,14334
let TargetPrefix 72,14537
let TargetPrefix 73,14760
let TargetPrefix 74,14955
let TargetPrefix 75,15170
let TargetPrefix 76,15369
let TargetPrefix 77,15588
let TargetPrefix 78,15787
let TargetPrefix 79,16006
let TargetPrefix 80,16209
let TargetPrefix 81,16432
let TargetPrefix 82,16623
let TargetPrefix 83,16818
let TargetPrefix 84,17008
let TargetPrefix 85,17179
let TargetPrefix 86,17350
let TargetPrefix 87,17521
let TargetPrefix 88,17709
let TargetPrefix 89,17897
let TargetPrefix 90,18065
let TargetPrefix 91,18233
let TargetPrefix 92,18406
let TargetPrefix 93,18600
let TargetPrefix 94,18814
let TargetPrefix 95,18987
let TargetPrefix 96,19181
let TargetPrefix 97,19395
let TargetPrefix 98,19568
let TargetPrefix 99,19762
let TargetPrefix 100,19976
let TargetPrefix 101,20149
let TargetPrefix 102,20343
let TargetPrefix 103,20557
let TargetPrefix 104,20730
let TargetPrefix 105,20924
let TargetPrefix 106,21138
let TargetPrefix 107,21328
let TargetPrefix 108,21539
let TargetPrefix 109,21770
let TargetPrefix 110,21970
let TargetPrefix 111,22191
let TargetPrefix 112,22387
let TargetPrefix 113,22604
let TargetPrefix 114,22845
let TargetPrefix 115,23082
let TargetPrefix 116,23282
let TargetPrefix 117,23503
let TargetPrefix 118,23699
let TargetPrefix 119,23916
let TargetPrefix 120,24157
let TargetPrefix 121,24394
let TargetPrefix 122,24594
let TargetPrefix 123,24815
let TargetPrefix 124,25011
let TargetPrefix 125,25228
let TargetPrefix 126,25469
let TargetPrefix 127,25706
let TargetPrefix 128,25910
let TargetPrefix 129,26135
let TargetPrefix 130,26335
let TargetPrefix 131,26556
let TargetPrefix 132,26801
let TargetPrefix 133,27042
let TargetPrefix 134,27246
let TargetPrefix 135,27471
let TargetPrefix 136,27671
let TargetPrefix 137,27892
let TargetPrefix 138,28137
let TargetPrefix 139,28378
let TargetPrefix 140,28578
let TargetPrefix 141,28799
let TargetPrefix 142,28995
let TargetPrefix 143,29212
let TargetPrefix 144,29453
let TargetPrefix 145,29690
let TargetPrefix 146,29890
let TargetPrefix 147,30111
let TargetPrefix 148,30307
let TargetPrefix 149,30524
let TargetPrefix 150,30765
let TargetPrefix 151,31002
let TargetPrefix 152,31202
let TargetPrefix 153,31423
let TargetPrefix 154,31619
let TargetPrefix 155,31836
let TargetPrefix 156,32077
let TargetPrefix 157,32314
let TargetPrefix 158,32514
let TargetPrefix 159,32735
let TargetPrefix 160,32931
let TargetPrefix 161,33148
let TargetPrefix 162,33389
let TargetPrefix 163,33626
let TargetPrefix 164,33826
let TargetPrefix 165,34047
let TargetPrefix 166,34243
let TargetPrefix 167,34460
let TargetPrefix 168,34701
let TargetPrefix 169,34938
let TargetPrefix 170,35142
let TargetPrefix 171,35367
let TargetPrefix 172,35567
let TargetPrefix 173,35788
let TargetPrefix 174,36033
let TargetPrefix 175,36274
let TargetPrefix 176,36478
let TargetPrefix 177,36703
let TargetPrefix 178,36903
let TargetPrefix 179,37124
let TargetPrefix 180,37369
let TargetPrefix 181,37610
let TargetPrefix 182,37810
let TargetPrefix 183,38031
let TargetPrefix 184,38227
let TargetPrefix 185,38444
let TargetPrefix 186,38685
let TargetPrefix 187,38922
let TargetPrefix 188,39122
let TargetPrefix 189,39343
let TargetPrefix 190,39539
let TargetPrefix 191,39756
let TargetPrefix 192,39997
let TargetPrefix 193,40234
let TargetPrefix 194,40434
let TargetPrefix 195,40655
let TargetPrefix 196,40851
let TargetPrefix 197,41068
let TargetPrefix 198,41309
let TargetPrefix 199,41546
let TargetPrefix 200,41746
let TargetPrefix 201,41967
let TargetPrefix 202,42163
let TargetPrefix 203,42380
let TargetPrefix 204,42621
let TargetPrefix 205,42858
let TargetPrefix 206,43062
let TargetPrefix 207,43287
let TargetPrefix 208,43487
let TargetPrefix 209,43708
let TargetPrefix 210,43953
let TargetPrefix 211,44194
let TargetPrefix 212,44398
let TargetPrefix 213,44623
let TargetPrefix 214,44823
let TargetPrefix 215,45044
let TargetPrefix 216,45289
let TargetPrefix 217,45530
let TargetPrefix 218,45730
let TargetPrefix 219,45951
let TargetPrefix 220,46147
let TargetPrefix 221,46364
let TargetPrefix 222,46605
let TargetPrefix 223,46842
let TargetPrefix 224,47044
let TargetPrefix 225,47267
let TargetPrefix 226,47465
let TargetPrefix 227,47684
let TargetPrefix 228,47884
let TargetPrefix 229,48105
let TargetPrefix 230,48301
let TargetPrefix 231,48518
let TargetPrefix 232,48759
let TargetPrefix 233,48996
let TargetPrefix 234,49196
let TargetPrefix 235,49417
let TargetPrefix 236,49613
let TargetPrefix 237,49830
let TargetPrefix 238,50071
let TargetPrefix 239,50308
let TargetPrefix 240,50504
let TargetPrefix 241,50721
let TargetPrefix 242,50958
let TargetPrefix 243,51154
let TargetPrefix 244,51371
let TargetPrefix 245,51608
let TargetPrefix 246,51812
let TargetPrefix 247,52037
let TargetPrefix 248,52237
let TargetPrefix 249,52458
let TargetPrefix 250,52703
let TargetPrefix 251,52944
let TargetPrefix 252,53148
let TargetPrefix 253,53373
let TargetPrefix 254,53573
let TargetPrefix 255,53794
let TargetPrefix 256,54039
let TargetPrefix 257,54280
let TargetPrefix 258,54480
let TargetPrefix 259,54701
let TargetPrefix 260,54942
let TargetPrefix 261,55142
let TargetPrefix 262,55363
let TargetPrefix 263,55604
let TargetPrefix 264,55804
let TargetPrefix 265,56025
let TargetPrefix 266,56221
let TargetPrefix 267,56438
let TargetPrefix 268,56679
let TargetPrefix 269,56916
let TargetPrefix 270,57112
let TargetPrefix 271,57329
let TargetPrefix 272,57566
let TargetPrefix 273,57766
let TargetPrefix 274,57987
let TargetPrefix 275,58183
let TargetPrefix 276,58400
let TargetPrefix 277,58641
let TargetPrefix 278,58878
let TargetPrefix 279,59078
let TargetPrefix 280,59299
let TargetPrefix 281,59495
let TargetPrefix 282,59712
let TargetPrefix 283,59953
let TargetPrefix 284,60190
let TargetPrefix 285,60390
let TargetPrefix 286,60611
let TargetPrefix 287,60807
let TargetPrefix 288,61024
let TargetPrefix 289,61265
let TargetPrefix 290,61502
let TargetPrefix 291,61706
let TargetPrefix 292,61931
let TargetPrefix 293,62131
let TargetPrefix 294,62352
let TargetPrefix 295,62597
let TargetPrefix 296,62838
let TargetPrefix 297,63042
let TargetPrefix 298,63267
let TargetPrefix 299,63467
let TargetPrefix 300,63688
let TargetPrefix 301,63933
let TargetPrefix 302,64174
let TargetPrefix 303,64374
let TargetPrefix 304,64595
let TargetPrefix 305,64791
let TargetPrefix 306,65008
let TargetPrefix 307,65249
let TargetPrefix 308,65486
let TargetPrefix 309,65686
let TargetPrefix 310,65907
let TargetPrefix 311,66103
let TargetPrefix 312,66320
let TargetPrefix 313,66561
let TargetPrefix 314,66798
let TargetPrefix 315,67002
let TargetPrefix 316,67227
let TargetPrefix 317,67427
let TargetPrefix 318,67648
let TargetPrefix 319,67893
let TargetPrefix 320,68134
let TargetPrefix 321,68338
let TargetPrefix 322,68563
let TargetPrefix 323,68763
let TargetPrefix 324,68984
let TargetPrefix 325,69229
let TargetPrefix 326,69470
let TargetPrefix 327,69670
let TargetPrefix 328,69891
let TargetPrefix 329,70087
let TargetPrefix 330,70304
let TargetPrefix 331,70545
let TargetPrefix 332,70782
let TargetPrefix 333,70986
let TargetPrefix 334,71211
let TargetPrefix 335,71411
let TargetPrefix 336,71632
let TargetPrefix 337,71877
let TargetPrefix 338,72118
let TargetPrefix 339,72322
let TargetPrefix 340,72547
let TargetPrefix 341,72747
let TargetPrefix 342,72968
let TargetPrefix 343,73213
let TargetPrefix 344,73454
let TargetPrefix 345,73654
let TargetPrefix 346,73875
let TargetPrefix 347,74071
let TargetPrefix 348,74288
let TargetPrefix 349,74529
let TargetPrefix 350,74766
let TargetPrefix 351,74966
let TargetPrefix 352,75187
let TargetPrefix 353,75383
let TargetPrefix 354,75600
let TargetPrefix 355,75841
let TargetPrefix 356,76078
let TargetPrefix 357,76278
let TargetPrefix 358,76499
let TargetPrefix 359,76695
let TargetPrefix 360,76912
let TargetPrefix 361,77153
let TargetPrefix 362,77390
let TargetPrefix 363,77586
let TargetPrefix 364,77803
let TargetPrefix 365,77995
let TargetPrefix 366,78208
let TargetPrefix 367,78445
let TargetPrefix 368,78678
let TargetPrefix 369,78876
let TargetPrefix 370,79095
let TargetPrefix 371,79289
let TargetPrefix 372,79504
let TargetPrefix 373,79743
let TargetPrefix 374,79978
let TargetPrefix 375,80172
let TargetPrefix 376,80387
let TargetPrefix 377,80577
let TargetPrefix 378,80788
let TargetPrefix 379,81023
let TargetPrefix 380,81254
let TargetPrefix 381,81450
let TargetPrefix 382,81667
let TargetPrefix 383,81859
let TargetPrefix 384,82072
let TargetPrefix 385,82309
let TargetPrefix 386,82542
let TargetPrefix 387,82738
let TargetPrefix 388,82955
let TargetPrefix 389,83147
let TargetPrefix 390,83360
let TargetPrefix 391,83597
let TargetPrefix 392,83830
let TargetPrefix 393,84028
let TargetPrefix 394,84247
let TargetPrefix 395,84441
let TargetPrefix 396,84656
let TargetPrefix 397,84895
let TargetPrefix 398,85130
let TargetPrefix 399,85326
let TargetPrefix 400,85543
let TargetPrefix 401,85735
let TargetPrefix 402,85948
let TargetPrefix 403,86185
let TargetPrefix 404,86418
let TargetPrefix 405,86616
let TargetPrefix 406,86835
let TargetPrefix 407,87029
let TargetPrefix 408,87244
let TargetPrefix 409,87483
let TargetPrefix 410,87718
let TargetPrefix 411,87893
let TargetPrefix 412,88089
let TargetPrefix 413,88305
let TargetPrefix 414,88486
let TargetPrefix 415,88688
let TargetPrefix 416,88910
let TargetPrefix 417,89091
let TargetPrefix 418,89293
let TargetPrefix 419,89515
let TargetPrefix 420,89692
let TargetPrefix 421,89890
let TargetPrefix 422,90108
let TargetPrefix 423,90285
let TargetPrefix 424,90483
let TargetPrefix 425,90701
let TargetPrefix 426,90884
let TargetPrefix 427,91088
let TargetPrefix 428,91312
let TargetPrefix 429,91495
let TargetPrefix 430,91699
let TargetPrefix 431,91923
let TargetPrefix 432,92102
let TargetPrefix 433,92302
let TargetPrefix 434,92522
let TargetPrefix 435,92697
let TargetPrefix 436,92893
let TargetPrefix 437,93109
let TargetPrefix 438,93290
let TargetPrefix 439,93492
let TargetPrefix 440,93714
let TargetPrefix 441,93895
let TargetPrefix 442,94097
let TargetPrefix 443,94319
let TargetPrefix 444,94496
let TargetPrefix 445,94694
let TargetPrefix 446,94912
let TargetPrefix 447,95066
let TargetPrefix 448,95241
let TargetPrefix 449,95401
let TargetPrefix 450,95582
let TargetPrefix 451,95742
let TargetPrefix 452,95923
let TargetPrefix 453,96079
let TargetPrefix 454,96256
let TargetPrefix 455,96452
let TargetPrefix 456,96669
let TargetPrefix 457,96861
let TargetPrefix 458,97074
let TargetPrefix 459,97311
let TargetPrefix 460,97544
let TargetPrefix 461,97742
let TargetPrefix 462,97961
let TargetPrefix 463,98155
let TargetPrefix 464,98370
let TargetPrefix 465,98609
let TargetPrefix 466,98844
let TargetPrefix 467,99040
let TargetPrefix 468,99257
let TargetPrefix 469,99449
let TargetPrefix 470,99662
let TargetPrefix 471,99899
let TargetPrefix 472,100132
let TargetPrefix 473,100330
let TargetPrefix 474,100549
let TargetPrefix 475,100743
let TargetPrefix 476,100958
let TargetPrefix 477,101197
let TargetPrefix 478,101432
let TargetPrefix 479,101634
let TargetPrefix 480,101857
let TargetPrefix 481,102055
let TargetPrefix 482,102274
let TargetPrefix 483,102517
let TargetPrefix 484,102756
let TargetPrefix 485,102958
let TargetPrefix 486,103181
let TargetPrefix 487,103379
let TargetPrefix 488,103598
let TargetPrefix 489,103841
let TargetPrefix 490,104080
let TargetPrefix 491,104278
let TargetPrefix 492,104497
let TargetPrefix 493,104691
let TargetPrefix 494,104906
let TargetPrefix 495,105145
let TargetPrefix 496,105380
let TargetPrefix 497,105578
let TargetPrefix 498,105797
let TargetPrefix 499,105991
let TargetPrefix 500,106206
let TargetPrefix 501,106445
let TargetPrefix 502,106680
let TargetPrefix 503,106882
let TargetPrefix 504,107105
let TargetPrefix 505,107303
let TargetPrefix 506,107522
let TargetPrefix 507,107765
let TargetPrefix 508,108004
let TargetPrefix 509,108206
let TargetPrefix 510,108429
let TargetPrefix 511,108627
let TargetPrefix 512,108846
let TargetPrefix 513,109089
let TargetPrefix 514,109328
let TargetPrefix 515,109526
let TargetPrefix 516,109745
let TargetPrefix 517,109939
let TargetPrefix 518,110154
let TargetPrefix 519,110393
let TargetPrefix 520,110628
let TargetPrefix 521,110826
let TargetPrefix 522,111045
let TargetPrefix 523,111239
let TargetPrefix 524,111454
let TargetPrefix 525,111693
let TargetPrefix 526,111928
let TargetPrefix 527,112137
let TargetPrefix 528,112367
let TargetPrefix 529,112617
let TargetPrefix 530,112817
let TargetPrefix 531,113038
let TargetPrefix 532,113234
let TargetPrefix 533,113451
let TargetPrefix 534,113692
let TargetPrefix 535,113929
let TargetPrefix 536,114129
let TargetPrefix 537,114350
let TargetPrefix 538,114546
let TargetPrefix 539,114763
let TargetPrefix 540,115004
let TargetPrefix 541,115241
let TargetPrefix 542,115441
let TargetPrefix 543,115662
let TargetPrefix 544,115858
let TargetPrefix 545,116075
let TargetPrefix 546,116316
let TargetPrefix 547,116553
let TargetPrefix 548,116753
let TargetPrefix 549,116974
let TargetPrefix 550,117170
let TargetPrefix 551,117387
let TargetPrefix 552,117628
let TargetPrefix 553,117865
let TargetPrefix 554,118065
let TargetPrefix 555,118286
let TargetPrefix 556,118482
let TargetPrefix 557,118699
let TargetPrefix 558,118940
let TargetPrefix 559,119177
let TargetPrefix 560,119377
let TargetPrefix 561,119598
let TargetPrefix 562,119794
let TargetPrefix 563,120011
let TargetPrefix 564,120252
let TargetPrefix 565,120489
let TargetPrefix 566,120689
let TargetPrefix 567,120910
let TargetPrefix 568,121106
let TargetPrefix 569,121323
let TargetPrefix 570,121564
let TargetPrefix 571,121801
let TargetPrefix 572,122001
let TargetPrefix 573,122222
let TargetPrefix 574,122418
let TargetPrefix 575,122635
let TargetPrefix 576,122876
let TargetPrefix 577,123113
let TargetPrefix 578,123313
let TargetPrefix 579,123534
let TargetPrefix 580,123730
let TargetPrefix 581,123947
let TargetPrefix 582,124188
let TargetPrefix 583,124425
let TargetPrefix 584,124625
let TargetPrefix 585,124846
let TargetPrefix 586,125042
let TargetPrefix 587,125259
let TargetPrefix 588,125500
let TargetPrefix 589,125737
let TargetPrefix 590,125937
let TargetPrefix 591,126158
let TargetPrefix 592,126354
let TargetPrefix 593,126571
let TargetPrefix 594,126812
let TargetPrefix 595,127049
let TargetPrefix 596,127230
let TargetPrefix 597,127432
let TargetPrefix 598,127613
let TargetPrefix 599,127815
let TargetPrefix 600,128015
let TargetPrefix 601,128236
let TargetPrefix 602,128432
let TargetPrefix 603,128649
let TargetPrefix 604,128890
let TargetPrefix 605,129127
let TargetPrefix 606,129327
let TargetPrefix 607,129548
let TargetPrefix 608,129744
let TargetPrefix 609,129961
let TargetPrefix 610,130202
let TargetPrefix 611,130439
let TargetPrefix 612,130639
let TargetPrefix 613,130860
let TargetPrefix 614,131056
let TargetPrefix 615,131273
let TargetPrefix 616,131514
let TargetPrefix 617,131751
let TargetPrefix 618,131951
let TargetPrefix 619,132172
let TargetPrefix 620,132368
let TargetPrefix 621,132585
let TargetPrefix 622,132826
let TargetPrefix 623,133063
let TargetPrefix 624,133263
let TargetPrefix 625,133484
let TargetPrefix 626,133680
let TargetPrefix 627,133897
let TargetPrefix 628,134138
let TargetPrefix 629,134375
let TargetPrefix 630,134575
let TargetPrefix 631,134796
let TargetPrefix 632,134992
let TargetPrefix 633,135209
let TargetPrefix 634,135450
let TargetPrefix 635,135687
let TargetPrefix 636,135887
let TargetPrefix 637,136108
let TargetPrefix 638,136304
let TargetPrefix 639,136521
let TargetPrefix 640,136762
let TargetPrefix 641,136999
let TargetPrefix 642,137199
let TargetPrefix 643,137420
let TargetPrefix 644,137616
let TargetPrefix 645,137833
let TargetPrefix 646,138074
let TargetPrefix 647,138311
let TargetPrefix 648,138511
let TargetPrefix 649,138732
let TargetPrefix 650,138928
let TargetPrefix 651,139145
let TargetPrefix 652,139386
let TargetPrefix 653,139623
let TargetPrefix 654,139844
let TargetPrefix 655,140086
let TargetPrefix 656,140303
let TargetPrefix 657,140541
let TargetPrefix 658,140758
let TargetPrefix 659,140996
let TargetPrefix 660,141258
let TargetPrefix 661,141516
let TargetPrefix 662,141774
let TargetPrefix 663,141995
let TargetPrefix 664,142237
let TargetPrefix 665,142454
let TargetPrefix 666,142692
let TargetPrefix 667,142909
let TargetPrefix 668,143147
let TargetPrefix 669,143409
let TargetPrefix 670,143667
let TargetPrefix 671,143925
let TargetPrefix 672,144146
let TargetPrefix 673,144388
let TargetPrefix 674,144605
let TargetPrefix 675,144843
let TargetPrefix 676,145060
let TargetPrefix 677,145298
let TargetPrefix 678,145560
let TargetPrefix 679,145818
let TargetPrefix 680,146076
let TargetPrefix 681,146297
let TargetPrefix 682,146539
let TargetPrefix 683,146756
let TargetPrefix 684,146994
let TargetPrefix 685,147211
let TargetPrefix 686,147449
let TargetPrefix 687,147711
let TargetPrefix 688,147969
let TargetPrefix 689,148227
let TargetPrefix 690,148448
let TargetPrefix 691,148690
let TargetPrefix 692,148907
let TargetPrefix 693,149145
let TargetPrefix 694,149362
let TargetPrefix 695,149600
let TargetPrefix 696,149862
let TargetPrefix 697,150120
let TargetPrefix 698,150378
let TargetPrefix 699,150599
let TargetPrefix 700,150841
let TargetPrefix 701,151058
let TargetPrefix 702,151296
let TargetPrefix 703,151513
let TargetPrefix 704,151751
let TargetPrefix 705,152013
let TargetPrefix 706,152271
let TargetPrefix 707,152529
let TargetPrefix 708,152752
let TargetPrefix 709,152996
let TargetPrefix 710,153215
let TargetPrefix 711,153455
let TargetPrefix 712,153674
let TargetPrefix 713,153914
let TargetPrefix 714,154178
let TargetPrefix 715,154438
let TargetPrefix 716,154698
let TargetPrefix 717,154921
let TargetPrefix 718,155165
let TargetPrefix 719,155384
let TargetPrefix 720,155624
let TargetPrefix 721,155843
let TargetPrefix 722,156083
let TargetPrefix 723,156347
let TargetPrefix 724,156607
let TargetPrefix 725,156867
let TargetPrefix 726,157090
let TargetPrefix 727,157334
let TargetPrefix 728,157553
let TargetPrefix 729,157793
let TargetPrefix 730,158012
let TargetPrefix 731,158252
let TargetPrefix 732,158516
let TargetPrefix 733,158776
let TargetPrefix 734,159036
let TargetPrefix 735,159259
let TargetPrefix 736,159503
let TargetPrefix 737,159722
let TargetPrefix 738,159962
let TargetPrefix 739,160181
let TargetPrefix 740,160421
let TargetPrefix 741,160685
let TargetPrefix 742,160945
let TargetPrefix 743,161205
let TargetPrefix 744,161428
let TargetPrefix 745,161672
let TargetPrefix 746,161891
let TargetPrefix 747,162131
let TargetPrefix 748,162350
let TargetPrefix 749,162590
let TargetPrefix 750,162854
let TargetPrefix 751,163114
let TargetPrefix 752,163374
let TargetPrefix 753,163597
let TargetPrefix 754,163841
let TargetPrefix 755,164060
let TargetPrefix 756,164300
let TargetPrefix 757,164519
let TargetPrefix 758,164759
let TargetPrefix 759,165023
let TargetPrefix 760,165283
let TargetPrefix 761,165543
let TargetPrefix 762,165720
let TargetPrefix 763,165918
let TargetPrefix 764,166095
let TargetPrefix 765,166293
let TargetPrefix 766,166470
let TargetPrefix 767,166668
let TargetPrefix 768,166849
let TargetPrefix 769,167051
let TargetPrefix 770,167232
let TargetPrefix 771,167434
let TargetPrefix 772,167615
let TargetPrefix 773,167817
let TargetPrefix 774,168004
let TargetPrefix 775,168212
let TargetPrefix 776,168399
let TargetPrefix 777,168607
let TargetPrefix 778,168794
let TargetPrefix 779,169002
let TargetPrefix 780,169185
let TargetPrefix 781,169389
let TargetPrefix 782,169613
let TargetPrefix 783,169800
let TargetPrefix 784,170008
let TargetPrefix 785,170236
let TargetPrefix 786,170419
let TargetPrefix 787,170623
let TargetPrefix 788,170847
let TargetPrefix 789,171034
let TargetPrefix 790,171242
let TargetPrefix 791,171470
let TargetPrefix 792,171653
let TargetPrefix 793,171857
let TargetPrefix 794,172081
let TargetPrefix 795,172268
let TargetPrefix 796,172476
let TargetPrefix 797,172704
let TargetPrefix 798,172887
let TargetPrefix 799,173091
let TargetPrefix 800,173315
let TargetPrefix 801,173502
let TargetPrefix 802,173710
let TargetPrefix 803,173938
let TargetPrefix 804,174119
let TargetPrefix 805,174321
let TargetPrefix 806,174543
let TargetPrefix 807,174728
let TargetPrefix 808,174934
let TargetPrefix 809,175160
let TargetPrefix 810,175339
let TargetPrefix 811,175539
let TargetPrefix 812,175759
let TargetPrefix 813,175942
let TargetPrefix 814,176146
let TargetPrefix 815,176370
let TargetPrefix 816,176549
let TargetPrefix 817,176749
let TargetPrefix 818,176928
let TargetPrefix 819,177128
let TargetPrefix 820,177309
let TargetPrefix 821,177511
let TargetPrefix 822,177690
let TargetPrefix 823,177890
let TargetPrefix 824,178069
let TargetPrefix 825,178269
let TargetPrefix 826,178448
let TargetPrefix 827,178648
let TargetPrefix 828,178864
let TargetPrefix 829,179101
let TargetPrefix 830,179313
let TargetPrefix 831,179546
let TargetPrefix 832,179764
let TargetPrefix 833,180003
let TargetPrefix 834,180217
let TargetPrefix 835,180452
let TargetPrefix 836,180665
let TargetPrefix 837,180899
let TargetPrefix 838,181113
let TargetPrefix 839,181327
let TargetPrefix 840,181486
let TargetPrefix 841,181645
let TargetPrefix 842,181804
let TargetPrefix 843,181963
let TargetPrefix 844,182143
let TargetPrefix 845,182343
let TargetPrefix 846,182523
let TargetPrefix 847,182723
let TargetPrefix 848,182903
let TargetPrefix 849,183103
let TargetPrefix 850,183283
let TargetPrefix 851,183483
let TargetPrefix 852,183663
let TargetPrefix 853,183863
let TargetPrefix 854,184043
let TargetPrefix 855,184243
let TargetPrefix 856,184425
let TargetPrefix 857,184627
let TargetPrefix 858,184809
let TargetPrefix 859,185011
let TargetPrefix 860,185197
let TargetPrefix 861,185403
let TargetPrefix 862,185589
let TargetPrefix 863,185795
let TargetPrefix 864,185981
let TargetPrefix 865,186187
let TargetPrefix 866,186373
let TargetPrefix 867,186579
let TargetPrefix 868,186765
let TargetPrefix 869,186971
let TargetPrefix 870,187157
let TargetPrefix 871,187363
let TargetPrefix 872,187543
let TargetPrefix 873,187743
let TargetPrefix 874,187923
let TargetPrefix 875,188123
let TargetPrefix 876,188303
let TargetPrefix 877,188503
let TargetPrefix 878,188683
let TargetPrefix 879,188883
let TargetPrefix 880,189063
let TargetPrefix 881,189263
let TargetPrefix 882,189443
let TargetPrefix 883,189643
let TargetPrefix 884,189825
let TargetPrefix 885,190027
let TargetPrefix 886,190209
let TargetPrefix 887,190411
let TargetPrefix 888,190597
let TargetPrefix 889,190803
let TargetPrefix 890,190989
let TargetPrefix 891,191195
let TargetPrefix 892,191381
let TargetPrefix 893,191587
let TargetPrefix 894,191773
let TargetPrefix 895,191979
let TargetPrefix 896,192165
let TargetPrefix 897,192371
let TargetPrefix 898,192557
let TargetPrefix 899,192763
let TargetPrefix 900,192949
let TargetPrefix 901,193135
let TargetPrefix 902,193341
let TargetPrefix 903,193547
let TargetPrefix 904,193733
let TargetPrefix 905,193919
let TargetPrefix 906,194125
let TargetPrefix 907,194331
let TargetPrefix 908,194517
let TargetPrefix 909,194703
let TargetPrefix 910,194909
let TargetPrefix 911,195115
let TargetPrefix 912,195301
let TargetPrefix 913,195487
let TargetPrefix 914,195693
let TargetPrefix 915,195899
let TargetPrefix 916,196085
let TargetPrefix 917,196271
let TargetPrefix 918,196477
let TargetPrefix 919,196683
let TargetPrefix 920,196869
let TargetPrefix 921,197055
let TargetPrefix 922,197261
let TargetPrefix 923,197467
let TargetPrefix 924,197655
let TargetPrefix 925,197843
let TargetPrefix 926,198051
let TargetPrefix 927,198259
let TargetPrefix 928,198447
let TargetPrefix 929,198635
let TargetPrefix 930,198843
let TargetPrefix 931,199051
let TargetPrefix 932,199243
let TargetPrefix 933,199435
let TargetPrefix 934,199647
let TargetPrefix 935,199859
let TargetPrefix 936,200051
let TargetPrefix 937,200243
let TargetPrefix 938,200455
let TargetPrefix 939,200667
let TargetPrefix 940,200859
let TargetPrefix 941,201051
let TargetPrefix 942,201263
let TargetPrefix 943,201475
let TargetPrefix 944,201667
let TargetPrefix 945,201859
let TargetPrefix 946,202071
let TargetPrefix 947,202283
let TargetPrefix 948,202475
let TargetPrefix 949,202667
let TargetPrefix 950,202879
let TargetPrefix 951,203091
let TargetPrefix 952,203283
let TargetPrefix 953,203475
let TargetPrefix 954,203687
let TargetPrefix 955,203899
let TargetPrefix 956,204081
let TargetPrefix 957,204283
let TargetPrefix 958,204465
let TargetPrefix 959,204667
let TargetPrefix 960,204849
let TargetPrefix 961,205051
let TargetPrefix 962,205233
let TargetPrefix 963,205435
let TargetPrefix 964,205617
let TargetPrefix 965,205819
let TargetPrefix 966,206001
let TargetPrefix 967,206203
let TargetPrefix 968,206387
let TargetPrefix 969,206591
let TargetPrefix 970,206775
let TargetPrefix 971,206979
let TargetPrefix 972,207167
let TargetPrefix 973,207375
let TargetPrefix 974,207563
let TargetPrefix 975,207771
let TargetPrefix 976,207959
let TargetPrefix 977,208167
let TargetPrefix 978,208355
let TargetPrefix 979,208563
let TargetPrefix 980,208751
let TargetPrefix 981,208959
let TargetPrefix 982,209147
let TargetPrefix 983,209355
let TargetPrefix 984,209535
let TargetPrefix 985,209735
let TargetPrefix 986,209915
let TargetPrefix 987,210115
let TargetPrefix 988,210295
let TargetPrefix 989,210495
let TargetPrefix 990,210675
let TargetPrefix 991,210875
let TargetPrefix 992,211055
let TargetPrefix 993,211255
let TargetPrefix 994,211435
let TargetPrefix 995,211635
let TargetPrefix 996,211817
let TargetPrefix 997,212019
let TargetPrefix 998,212201
let TargetPrefix 999,212403
let TargetPrefix 1000,212589
let TargetPrefix 1001,212795
let TargetPrefix 1002,212981
let TargetPrefix 1003,213187
let TargetPrefix 1004,213373
let TargetPrefix 1005,213579
let TargetPrefix 1006,213765
let TargetPrefix 1007,213971
let TargetPrefix 1008,214157
let TargetPrefix 1009,214363
let TargetPrefix 1010,214549
let TargetPrefix 1011,214755
let TargetPrefix 1012,214935
let TargetPrefix 1013,215135
let TargetPrefix 1014,215315
let TargetPrefix 1015,215515
let TargetPrefix 1016,215695
let TargetPrefix 1017,215895
let TargetPrefix 1018,216075
let TargetPrefix 1019,216275
let TargetPrefix 1020,216455
let TargetPrefix 1021,216655
let TargetPrefix 1022,216835
let TargetPrefix 1023,217035
let TargetPrefix 1024,217217
let TargetPrefix 1025,217419
let TargetPrefix 1026,217601
let TargetPrefix 1027,217803
let TargetPrefix 1028,217989
let TargetPrefix 1029,218195
let TargetPrefix 1030,218381
let TargetPrefix 1031,218587
let TargetPrefix 1032,218773
let TargetPrefix 1033,218979
let TargetPrefix 1034,219165
let TargetPrefix 1035,219371
let TargetPrefix 1036,219557
let TargetPrefix 1037,219763
let TargetPrefix 1038,219949
let TargetPrefix 1039,220155
let TargetPrefix 1040,220341
let TargetPrefix 1041,220527
let TargetPrefix 1042,220733
let TargetPrefix 1043,220939
let TargetPrefix 1044,221125
let TargetPrefix 1045,221311
let TargetPrefix 1046,221517
let TargetPrefix 1047,221723
let TargetPrefix 1048,221909
let TargetPrefix 1049,222095
let TargetPrefix 1050,222301
let TargetPrefix 1051,222507
let TargetPrefix 1052,222693
let TargetPrefix 1053,222879
let TargetPrefix 1054,223085
let TargetPrefix 1055,223291
let TargetPrefix 1056,223477
let TargetPrefix 1057,223663
let TargetPrefix 1058,223869
let TargetPrefix 1059,224075
let TargetPrefix 1060,224261
let TargetPrefix 1061,224447
let TargetPrefix 1062,224653
let TargetPrefix 1063,224859
let TargetPrefix 1064,225047
let TargetPrefix 1065,225235
let TargetPrefix 1066,225443
let TargetPrefix 1067,225651
let TargetPrefix 1068,225839
let TargetPrefix 1069,226027
let TargetPrefix 1070,226235
let TargetPrefix 1071,226443
let TargetPrefix 1072,226635
let TargetPrefix 1073,226827
let TargetPrefix 1074,227039
let TargetPrefix 1075,227251
let TargetPrefix 1076,227443
let TargetPrefix 1077,227635
let TargetPrefix 1078,227847
let TargetPrefix 1079,228059
let TargetPrefix 1080,228251
let TargetPrefix 1081,228443
let TargetPrefix 1082,228655
let TargetPrefix 1083,228867
let TargetPrefix 1084,229059
let TargetPrefix 1085,229251
let TargetPrefix 1086,229463
let TargetPrefix 1087,229675
let TargetPrefix 1088,229867
let TargetPrefix 1089,230059
let TargetPrefix 1090,230271
let TargetPrefix 1091,230483
let TargetPrefix 1092,230675
let TargetPrefix 1093,230867
let TargetPrefix 1094,231079
let TargetPrefix 1095,231291
let TargetPrefix 1096,231473
let TargetPrefix 1097,231675
let TargetPrefix 1098,231857
let TargetPrefix 1099,232059
let TargetPrefix 1100,232241
let TargetPrefix 1101,232443
let TargetPrefix 1102,232625
let TargetPrefix 1103,232827
let TargetPrefix 1104,233009
let TargetPrefix 1105,233211
let TargetPrefix 1106,233393
let TargetPrefix 1107,233595
let TargetPrefix 1108,233779
let TargetPrefix 1109,233983
let TargetPrefix 1110,234167
let TargetPrefix 1111,234371
let TargetPrefix 1112,234559
let TargetPrefix 1113,234767
let TargetPrefix 1114,234955
let TargetPrefix 1115,235163
let TargetPrefix 1116,235351
let TargetPrefix 1117,235559
let TargetPrefix 1118,235747
let TargetPrefix 1119,235955
let TargetPrefix 1120,236143
let TargetPrefix 1121,236351
let TargetPrefix 1122,236539
let TargetPrefix 1123,236747
let TargetPrefix 1124,236928
let TargetPrefix 1125,237129
let TargetPrefix 1126,237310
let TargetPrefix 1127,237511
let TargetPrefix 1128,237688
let TargetPrefix 1129,237885
let TargetPrefix 1130,238064
let TargetPrefix 1131,238263
let TargetPrefix 1132,238442
let TargetPrefix 1133,238641
let TargetPrefix 1134,238832
let TargetPrefix 1135,239044
let TargetPrefix 1136,239235
let TargetPrefix 1137,239447
let TargetPrefix 1138,239638
let TargetPrefix 1139,239850
let TargetPrefix 1140,240041
let TargetPrefix 1141,240253
let TargetPrefix 1142,240444
let TargetPrefix 1143,240656
let TargetPrefix 1144,240847
let TargetPrefix 1145,241059
let TargetPrefix 1146,241250
let TargetPrefix 1147,241462
let TargetPrefix 1148,241653
let TargetPrefix 1149,241865
let TargetPrefix 1150,242052
let TargetPrefix 1151,242260
let TargetPrefix 1152,242447
let TargetPrefix 1153,242655
let TargetPrefix 1154,242842
let TargetPrefix 1155,243050
let TargetPrefix 1156,243237
let TargetPrefix 1157,243445
let TargetPrefix 1158,243632
let TargetPrefix 1159,243840
let TargetPrefix 1160,244027
let TargetPrefix 1161,244235
let TargetPrefix 1162,244422
let TargetPrefix 1163,244630
let TargetPrefix 1164,244817
let TargetPrefix 1165,245025
let TargetPrefix 1166,245212
let TargetPrefix 1167,245420
let TargetPrefix 1168,245607
let TargetPrefix 1169,245815
let TargetPrefix 1170,246002
let TargetPrefix 1171,246210
let TargetPrefix 1172,246397
let TargetPrefix 1173,246605
let TargetPrefix 1174,246782
let TargetPrefix 1175,246979
let TargetPrefix 1176,247154
let TargetPrefix 1177,247349
let TargetPrefix 1178,247526
let TargetPrefix 1179,247723
let TargetPrefix 1180,247932
let TargetPrefix 1181,248162
let TargetPrefix 1182,248391
let TargetPrefix 1183,248641
let TargetPrefix 1184,248854
let TargetPrefix 1185,249088
let TargetPrefix 1186,249321
let TargetPrefix 1187,249575
let TargetPrefix 1188,249786
let TargetPrefix 1189,250018
let TargetPrefix 1190,250249
let TargetPrefix 1191,250501
let TargetPrefix 1192,250716
let TargetPrefix 1193,250952
let TargetPrefix 1194,251187
let TargetPrefix 1195,251443
let TargetPrefix 1196,251658
let TargetPrefix 1197,251894
let TargetPrefix 1198,252129
let TargetPrefix 1199,252385
let TargetPrefix 1200,252604
let TargetPrefix 1201,252844
let TargetPrefix 1202,253083
let TargetPrefix 1203,253343
let TargetPrefix 1204,253558
let TargetPrefix 1205,253794
let TargetPrefix 1206,254029
let TargetPrefix 1207,254285
let TargetPrefix 1208,254504
let TargetPrefix 1209,254744
let TargetPrefix 1210,254983
let TargetPrefix 1211,255243
let TargetPrefix 1212,255455
let TargetPrefix 1213,255687
let TargetPrefix 1214,255903
let TargetPrefix 1215,256139
let TargetPrefix 1216,256355
let TargetPrefix 1217,256591
let TargetPrefix 1218,256811
let TargetPrefix 1219,257051
let TargetPrefix 1220,257265
let TargetPrefix 1221,257499
let TargetPrefix 1222,257717
let TargetPrefix 1223,257955
let TargetPrefix 1224,258173
let TargetPrefix 1225,258411
let TargetPrefix 1226,258633
let TargetPrefix 1227,258875
let TargetPrefix 1228,259089
let TargetPrefix 1229,259323
let TargetPrefix 1230,259541
let TargetPrefix 1231,259779
let TargetPrefix 1232,259997
let TargetPrefix 1233,260235
let TargetPrefix 1234,260457
let TargetPrefix 1235,260699
let TargetPrefix 1236,260875
let TargetPrefix 1237,261051
let TargetPrefix 1238,261225
let TargetPrefix 1239,261399
let TargetPrefix 1240,261575
let TargetPrefix 1241,261751
let TargetPrefix 1242,261927
let TargetPrefix 1243,262103
let TargetPrefix 1244,262279
let TargetPrefix 1245,262455
let TargetPrefix 1246,262611
let TargetPrefix 1247,262767
let TargetPrefix 1248,262937
let TargetPrefix 1249,263107
let TargetPrefix 1250,263277
let TargetPrefix 1251,263442
let TargetPrefix 1252,263629
let TargetPrefix 1253,263833
let TargetPrefix 1254,264022
let TargetPrefix 1255,264164
let TargetPrefix 1256,264323
let TargetPrefix 1257,264482

/usr/include/llvm/IR/IntrinsicsWebAssembly.td,25
let TargetPrefix 17,627

/usr/include/llvm/IR/IntrinsicsXCore.td,25
let TargetPrefix 13,516

/usr/include/llvm/IR/LLVMContext.h,697
#define LLVM_IR_LLVMCONTEXT_H15,618
typedef uint8_t ID;46,1210
  SingleThread 54,1610
  System 57,1702
class LLVMContext 67,2077
  LLVMContextImpl *const pImpl;69,2105
  enum : unsigned 77,2423
#define LLVM_FIXED_MD_KIND(78,2443
#undef LLVM_FIXED_MD_KIND80,2549
  enum : unsigned 88,2922
    OB_deopt 89,2942
    OB_funclet 90,2988
    OB_gc_transition 91,3036
    OB_cfguardtarget 92,3090
    OB_preallocated 93,3144
    OB_gc_live 94,3197
    OB_clang_arc_attachedcall 95,3245
    OB_ptrauth 96,3308
    OB_kcfi 97,3356
    OB_convergencectrl 98,3401
  using YieldCallbackTy 160,6073
DEFINE_SIMPLE_CONVERSION_FUNCTIONS(339,14647
inline LLVMContextRef *wrap(wrap347,14860

/usr/include/llvm/IR/LLVMRemarkStreamer.h,833
#define LLVM_IR_LLVMREMARKSTREAMER_H15,601
class LLVMRemarkStreamer 34,994
  remarks::RemarkStreamer &RS;RS35,1021
  LLVMRemarkStreamer(42,1290
struct LLVMRemarkSetupErrorInfo 48,1489
  std::string Msg;49,1553
  std::error_code EC;50,1572
  LLVMRemarkSetupErrorInfo(52,1595
  void log(59,1776
  std::error_code convertToErrorCode(60,1834
struct LLVMRemarkSetupFileError63,1907
  static char ID;65,1998
      LLVMRemarkSetupFileError>::LLVMRemarkSetupErrorInfo;LLVMRemarkSetupErrorInfo67,2050
struct LLVMRemarkSetupPatternError70,2113
  static char ID;72,2210
      LLVMRemarkSetupPatternError>::LLVMRemarkSetupErrorInfo;LLVMRemarkSetupErrorInfo74,2262
struct LLVMRemarkSetupFormatError77,2328
  static char ID;79,2423
      LLVMRemarkSetupFormatError>::LLVMRemarkSetupErrorInfo;LLVMRemarkSetupErrorInfo81,2475

/usr/include/llvm/IR/LegacyPassManager.h,273
#define LLVM_IR_LEGACYPASSMANAGER_H17,778
class PassManagerBase 39,1292
  virtual ~PassManagerBase(41,1324
class PassManager 52,1808
  PassManagerImpl *PM;PM67,2251
class FunctionPassManager 71,2326
  FunctionPassManagerImpl *FPM;FPM95,3058
  Module *M;M96,3090

/usr/include/llvm/IR/LegacyPassNameParser.h,335
#define LLVM_IR_LEGACYPASSNAMEPARSER_H26,1245
class PassNameParser 41,1718
  PassNameParser(44,1842
  ~PassNameParser(45,1875
  virtual bool ignorablePassImpl(57,2205
  inline bool ignorablePass(59,2282
  void passRegistered(68,2628
  void passEnumerate(77,3034
  void printOptionInfo(81,3250
  static int ValCompare(89,3614

/usr/include/llvm/IR/MDBuilder.h,1402
#define LLVM_IR_MDBUILDER_H15,632
class MDBuilder 36,1040
  LLVMContext &Context;Context37,1058
  MDBuilder(40,1091
  MDString *createString(createString43,1191
  ConstantAsMetadata *createConstant(createConstant46,1278
  MDNode *createFPMath(createFPMath55,1671
  MDNode *createBranchWeights(createBranchWeights62,1944
  MDNode *createBranchWeights(createBranchWeights65,2080
  MDNode *createUnpredictable(createUnpredictable68,2215
  MDNode *createFunctionEntryCount(createFunctionEntryCount74,2540
  MDNode *createFunctionSectionPrefix(createFunctionSectionPrefix78,2756
  MDNode *createPseudoProbeDesc(createPseudoProbeDesc81,2891
  createLLVMStats(85,3033
  MDNode *createRange(createRange92,3341
  MDNode *createRange(createRange95,3452
  MDNode *createCallees(createCallees103,3765
  MDNode *createCallbackEncoding(createCallbackEncoding110,4078
  MDNode *mergeCallbackEncodings(mergeCallbackEncodings114,4290
  MDNode *createRTTIPointerPrologue(createRTTIPointerPrologue118,4490
  MDNode *createAnonymousTBAARoot(createAnonymousTBAARoot145,5677
  MDNode *createAnonymousAliasScopeDomain(createAnonymousAliasScopeDomain152,5948
  MDNode *createAnonymousAliasScope(createAnonymousAliasScope159,6257
  struct TBAAStructField 184,7333
    uint64_t Offset;185,7360
    uint64_t Size;186,7381
    MDNode *Type;Type187,7400
    TBAAStructField(188,7418

/usr/include/llvm/IR/Mangler.h,217
#define LLVM_IR_MANGLER_H14,529
class Mangler 27,735
  mutable DenseMap<const GlobalValue*GlobalValue30,894
  mutable DenseMap<const GlobalValue*, unsigned> AnonGlobalIDs;30,894
  void getNameWithPrefix(36,1144

/usr/include/llvm/IR/MatrixBuilder.h,850
#define LLVM_IR_MATRIXBUILDER_H15,611
class MatrixBuilder 33,988
  IRBuilderBase &B;B34,1010
  Module *getModule(getModule35,1030
  std::pair<std::pair37,1110
  std::pair<Value *, Value *> splatScalarOperandIfNeeded(37,1110
  MatrixBuilder(58,2061
  CallInst *CreateColumnMajorLoad(CreateColumnMajorLoad66,2433
  CallInst *CreateColumnMajorStore(CreateColumnMajorStore89,3449
  CallInst *CreateMatrixTranspose(CreateMatrixTranspose110,4432
  CallInst *CreateMatrixMultiply(CreateMatrixMultiply126,5118
  Value *CreateMatrixInsert(CreateMatrixInsert146,6011
  Value *CreateAdd(CreateAdd157,6478
  Value *CreateSub(CreateSub182,7528
  Value *CreateScalarMultiply(CreateScalarMultiply207,8570
  Value *CreateScalarDiv(CreateScalarDiv216,8969
  void CreateIndexAssumption(231,9670
  Value *CreateIndex(CreateIndex244,10209

/usr/include/llvm/IR/ModuleSlotTracker.h,620
#define LLVM_IR_MODULESLOTTRACKER_H10,406
class AbstractSlotTrackerStorage 26,664
  virtual ~AbstractSlotTrackerStorage(28,707
class ModuleSlotTracker 44,1292
  std::unique_ptr<SlotTracker> MachineStorage;46,1352
  bool ShouldCreateStorage 47,1399
  bool ShouldInitializeAllMetadata 48,1435
  const Module *M M50,1480
  const Function *F F51,1509
  SlotTracker *Machine Machine52,1540
      ProcessModuleHookFn;55,1649
      ProcessFunctionHookFn;57,1752
  const Module *getModule(getModule80,2568
  const Function *getCurrentFunction(getCurrentFunction81,2616
  using MachineMDNodeListType 101,3409

/usr/include/llvm/IR/ModuleSummaryIndexYAML.h,2241
#define LLVM_IR_MODULESUMMARYINDEXYAML_H10,411
template <> struct MappingTraits<MappingTraits29,1094
  static void mapping(30,1149
struct ScalarEnumerationTraits<ScalarEnumerationTraits41,1509
  static void enumeration(42,1585
template <> struct MappingTraits<MappingTraits54,2113
  static void mapping(55,2185
struct CustomMappingTraits<CustomMappingTraits64,2432
  static void inputOne(66,2536
  static void output(82,3030
template <> struct ScalarEnumerationTraits<ScalarEnumerationTraits97,3380
  static void enumeration(98,3461
template <> struct MappingTraits<MappingTraits106,3798
  static void mapping(107,3863
struct CustomMappingTraits<CustomMappingTraits115,4095
  static void inputOne(116,4174
  static void output(125,4473
template <> struct MappingTraits<MappingTraits131,4650
  static void mapping(132,4700
struct FunctionSummaryYaml 138,4854
  unsigned Linkage,139,4883
  unsigned Linkage, Visibility;139,4883
  bool NotEligibleToImport,140,4915
  bool NotEligibleToImport, Live,140,4915
  bool NotEligibleToImport, Live, IsLocal,140,4915
  bool NotEligibleToImport, Live, IsLocal, CanAutoHide;140,4915
  std::vector<uint64_t> Refs;141,4971
  std::vector<uint64_t> TypeTests;142,5001
  std::vector<FunctionSummary::VFuncId> TypeTestAssumeVCalls,143,5036
      TypeCheckedLoadVCalls;144,5098
  std::vector<FunctionSummary::ConstVCall> TypeTestAssumeConstVCalls,145,5127
      TypeCheckedLoadConstVCalls;146,5197
namespace llvm 152,5284
namespace yaml 153,5301
template <> struct MappingTraits<MappingTraits155,5319
  static void mapping(156,5380
template <> struct MappingTraits<MappingTraits162,5528
  static void mapping(163,5592
namespace llvm 175,5904
namespace yaml 176,5921
template <> struct MappingTraits<MappingTraits178,5939
  static void mapping(179,5995
namespace llvm 202,6935
namespace yaml 203,6952
template <> struct CustomMappingTraits<CustomMappingTraits206,7034
  static void inputOne(207,7100
  static void output(241,8599
template <> struct CustomMappingTraits<CustomMappingTraits267,9660
  static void inputOne(268,9721
  static void output(273,9931
template <> struct MappingTraits<MappingTraits279,10096
  static void mapping(280,10151

/usr/include/llvm/IR/PassInstrumentation.h,2358
#define LLVM_IR_PASSINSTRUMENTATION_H50,2300
class PassInstrumentationCallbacks 66,2717
  void registerShouldRunOptionalPassCallback(96,4250
  void registerBeforeSkippedPassCallback(101,4410
  void registerBeforeNonSkippedPassCallback(106,4562
  void registerAfterPassCallback(111,4720
  void registerAfterPassInvalidatedCallback(119,4981
  void registerBeforeAnalysisCallback(128,5297
  void registerAfterAnalysisCallback(133,5443
  void registerAnalysisInvalidatedCallback(142,5756
  void registerAnalysesClearedCallback(147,5912
  SmallVector<SmallVector161,6454
      ShouldRunOptionalPassCallbacks;162,6510
  SmallVector<SmallVector164,6596
      BeforeSkippedPassCallbacks;165,6659
  SmallVector<SmallVector167,6749
      BeforeNonSkippedPassCallbacks;168,6815
  SmallVector<SmallVector170,6902
  SmallVector<llvm::unique_function<AfterPassFunc>, 4> AfterPassCallbacks;170,6902
  SmallVector<SmallVector172,7042
      AfterPassInvalidatedCallbacks;173,7108
  SmallVector<SmallVector175,7203
      BeforeAnalysisCallbacks;176,7263
  SmallVector<SmallVector178,7346
      AfterAnalysisCallbacks;179,7405
  SmallVector<SmallVector181,7495
      AnalysisInvalidatedCallbacks;182,7560
  SmallVector<SmallVector184,7652
      AnalysesClearedCallbacks;185,7713
  StringMap<std::string> ClassToPassName;187,7746
class PassInstrumentation 192,7940
  PassInstrumentationCallbacks *Callbacks;Callbacks193,7968
  using has_required_t 202,8449
  static std::enable_if_t<std::enable_if_t205,8551
  isRequired(206,8626
  static std::enable_if_t<!is_detected<has_required_t, PassT>::value,value210,8722
  isRequired(211,8798
  PassInstrumentation(220,9092
  template <typename IRUnitT,228,9532
  bool runBeforePass(229,9578
  template <typename IRUnitT,253,10334
  void runAfterPass(254,10380
  template <typename IRUnitT,264,10789
  void runAfterPassInvalidated(265,10835
  template <typename IRUnitT,274,11206
  void runBeforeAnalysis(275,11252
  template <typename IRUnitT,283,11602
  void runAfterAnalysis(284,11648
  template <typename IRUnitT,293,12011
  void runAnalysisInvalidated(294,12057
  void runAnalysesCleared(302,12363
  template <typename IRUnitT,313,12748
  bool invalidate(314,12802
  void pushBeforeNonSkippedPassCallback(320,12960
  void popBeforeNonSkippedPassCallback(324,13113

/usr/include/llvm/IR/PassManagerImpl.h,275
#define LLVM_IR_PASSMANAGERIMPL_H16,726
template <typename IRUnitT,52,1979
AnalysisManager<IRUnitT, ExtraArgTs...>::getResultImpl(getResultImpl54,2105
template <typename IRUnitT,88,3258
inline void AnalysisManager<IRUnitT, ExtraArgTs...>::invalidate(invalidate89,3310

/usr/include/llvm/IR/PredIteratorCache.h,512
#define LLVM_IR_PREDITERATORCACHE_H14,543
class PredIteratorCache 27,952
  mutable DenseMap<BasicBlock BasicBlock29,1035
  mutable DenseMap<BasicBlock *, BasicBlock **> BlockToPredsMap;29,1035
  mutable DenseMap<BasicBlock BasicBlock30,1100
  mutable DenseMap<BasicBlock *, unsigned> BlockToPredCountMap;30,1100
  BumpPtrAllocator Memory;33,1223
  BasicBlock **GetPreds(GetPreds42,1590
  unsigned GetNumPreds(57,2028
  size_t size(65,2262
  ArrayRef<BasicBlock *> get(66,2326
  void clear(71,2468

/usr/include/llvm/IR/PrintPasses.h,260
#define LLVM_IR_PRINTPASSES_H10,400
enum class ChangePrinter 18,538
  None,19,565
  Verbose,20,573
  Quiet,21,584
  DiffVerbose,22,593
  DiffQuiet,23,608
  ColourDiffVerbose,24,621
  ColourDiffQuiet,25,642
  DotCfgVerbose,26,661
  DotCfgQuiet27,678

/usr/include/llvm/IR/PseudoProbe.h,1368
#define LLVM_IR_PSEUDOPROBE_H14,563
enum class PseudoProbeReservedId 27,788
enum class PseudoProbeReservedId { Invalid 27,788
enum class PseudoProbeReservedId { Invalid = 0, Last 27,788
enum class PseudoProbeType 29,855
enum class PseudoProbeType { Block 29,855
enum class PseudoProbeType { Block = 0, IndirectCall,29,855
enum class PseudoProbeType { Block = 0, IndirectCall, DirectCall 29,855
enum class PseudoProbeAttributes 31,924
  Reserved 32,959
  Sentinel 33,977
  HasDiscriminator 34,1055
constexpr static uint64_t PseudoProbeFullDistributionFactor 38,1191
struct PseudoProbeDwarfDiscriminator 41,1296
  static uint32_t packProbeData(51,1733
  static uint32_t extractProbeIndex(61,2211
  static uint32_t extractProbeType(65,2304
  static uint32_t extractProbeAttributes(69,2394
  static uint32_t extractProbeFactor(73,2490
  constexpr static uint8_t FullDistributionFactor 78,2653
class PseudoProbeDescriptor 81,2714
  uint64_t FunctionGUID;82,2744
  uint64_t FunctionHash;83,2769
  PseudoProbeDescriptor(86,2803
  uint64_t getFunctionGUID(88,2907
  uint64_t getFunctionHash(89,2967
struct PseudoProbe 92,3031
  uint32_t Id;93,3052
  uint32_t Type;94,3067
  uint32_t Attr;95,3084
  uint32_t Discriminator;96,3101
  float Factor;100,3341
static inline bool isSentinelProbe(103,3361
static inline bool hasDiscriminator(107,3477

/usr/include/llvm/IR/Statepoint.h,1709
#define LLVM_IR_STATEPOINT_H17,723
enum class StatepointFlags 39,1315
  None 40,1344
  GCTransition 41,1356
  DeoptLiveIn 49,1960
  MaskAll 51,1980
class GCStatepointInst 61,2334
  static bool classof(67,2538
  static bool classof(73,2733
    IDPos 78,2846
    NumPatchBytesPos 79,2861
    CalledFunctionPos 80,2887
    NumCallArgsPos 81,2914
    FlagsPos 82,2938
    CallArgsBeginPos 83,2956
  uint64_t getID(87,3041
  uint32_t getNumPatchBytes(92,3217
  int getNumCallArgs(101,3570
  uint64_t getFlags(105,3683
  Value *getActualCalledOperand(getActualCalledOperand110,3846
  Function *getActualCalledFunction(getActualCalledFunction116,4035
  Type *getActualReturnType(getActualReturnType122,4240
  size_t actual_arg_size(129,4452
  const_op_iterator actual_arg_begin(131,4595
  const_op_iterator actual_arg_end(136,4807
  iterator_range<const_op_iterator> actual_args(142,5003
  const_op_iterator gc_transition_args_begin(146,5127
  const_op_iterator gc_transition_args_end(151,5310
  iterator_range<const_op_iterator> gc_transition_args(158,5538
  const_op_iterator deopt_begin(162,5685
  const_op_iterator deopt_end(167,5847
  iterator_range<const_op_iterator> deopt_operands(174,6049
  const_op_iterator gc_args_begin(180,6277
  const_op_iterator gc_args_end(187,6499
  iterator_range<const_op_iterator> gc_args(194,6699
std::vector<const GCRelocateInst *> GCStatepointInst::getGCRelocates(getGCRelocates206,7108
struct StatepointDirectives 235,8353
  std::optional<uint32_t> NumPatchBytes;236,8383
  std::optional<uint64_t> StatepointID;237,8424
  static const uint64_t DefaultStatepointID 239,8465
  static const uint64_t DeoptBundleStatepointID 240,8523

/usr/include/llvm/IR/TrackingMDRef.h,1710
#define LLVM_IR_TRACKINGMDREF_H14,532
class TrackingMDRef 25,752
  explicit TrackingMDRef(30,838
  TrackingMDRef(32,900
  TrackingMDRef(33,962
  ~TrackingMDRef(55,1345
  Metadata *get(get57,1380
  operator Metadata 58,1419
  Metadata &operator*operator60,1516
  void reset(62,1566
  void reset(66,1620
  bool hasTrivialDestructor(75,1824
  bool operator==(operator==79,1924
  bool operator!=(operator!=80,1995
  void track(83,2076
  void untrack(88,2145
  void retrack(93,2218
template <class T> class TypedTrackingMDRef 106,2542
  TrackingMDRef Ref;107,2588
  explicit TypedTrackingMDRef(111,2652
  TypedTrackingMDRef(113,2728
  TypedTrackingMDRef(114,2800
  TypedTrackingMDRef &operator=(operator=116,2867
  TypedTrackingMDRef &operator=(operator=121,2976
  T *get(get126,3079
  operator T operator T127,3123
  T *operator->(operator->128,3164
  T &operator*(operator*129,3206
  bool operator==(operator==131,3249
  bool operator!=(operator!=132,3327
  void reset(134,3406
  void reset(135,3438
  bool hasTrivialDestructor(138,3554
using TrackingMDNodeRef 141,3633
using TrackingValueAsMetadataRef 142,3687
template <> struct simplify_type<simplify_type145,3806
  using SimpleType 146,3856
  static SimpleType getSimplifiedValue(148,3890
template <> struct simplify_type<simplify_type151,3973
  using SimpleType 152,4029
  static SimpleType getSimplifiedValue(154,4063
template <class T> struct simplify_type<simplify_type159,4158
  using SimpleType 160,4223
  static SimpleType getSimplifiedValue(162,4250
template <class T> struct simplify_type<simplify_type167,4347
  using SimpleType 168,4418
  static SimpleType getSimplifiedValue(170,4445

/usr/include/llvm/IR/TypeFinder.h,563
#define LLVM_IR_TYPEFINDER_H14,549
class TypeFinder 31,869
  DenseSet<const Value*> VisitedConstants;34,1002
  DenseSet<const MDNode *> VisitedMetadata;35,1045
  DenseSet<AttributeList> VisitedAttributes;36,1089
  DenseSet<Type*> VisitedTypes;37,1134
  std::vector<StructType*> StructTypes;39,1167
  iterator begin(51,1454
  iterator end(52,1505
  const_iterator begin(54,1553
  const_iterator end(55,1616
  bool empty(57,1676
  size_t size(58,1729
  iterator erase(59,1782
  DenseSet<const MDNode *> &getVisitedMetadata(getVisitedMetadata63,1930

/usr/include/llvm/IR/TypedPointerType.h,347
#define LLVM_IR_TYPEDPOINTERTYPE_H15,644
class TypedPointerType 25,971
  explicit TypedPointerType(26,1010
  Type *PointeeTy;PointeeTy28,1074
  static TypedPointerType *get(get36,1326
  static bool isValidElementType(39,1469
  unsigned getAddressSpace(42,1570
  Type *getElementType(getElementType44,1636
  static bool classof(47,1760

/usr/include/llvm/IR/Use.h,580
#define LLVM_IR_USE_H25,1174
class Use 43,1768
  void swap(49,1930
  ~Use(53,1997
  Use(59,2068
  operator Value 65,2161
  Value *get(get66,2204
  User *getUser(getUser72,2382
  inline void set(74,2427
  Use *getNext(getNext82,2635
  unsigned getOperandNo(85,2728
  void removeFromList(106,3147
template <> struct simplify_type<simplify_type115,3321
  using SimpleType 116,3361
  static SimpleType getSimplifiedValue(118,3392
template <> struct simplify_type<simplify_type120,3466
  using SimpleType 121,3512
  static SimpleType getSimplifiedValue(123,3553

/usr/include/llvm/IR/UseListOrder.h,162
#define LLVM_IR_USELISTORDER_H15,575
struct UseListOrder 26,733
  std::vector<unsigned> Shuffle;29,814
  UseListOrder(31,848
using UseListOrderStack 39,1092

/usr/include/llvm/IR/User.h,2449
#define LLVM_IR_USER_H19,771
class User 44,1354
  allocateFixedOperandUser(49,1488
  void *operator new(56,1737
  void *operator new(61,1906
  void *operator new(71,2385
  User(73,2454
  void allocHungoffUses(87,3056
  void growHungoffUses(91,3227
  void operator delete(100,3465
  void operator delete(102,3569
  void operator delete(operator delete114,4118
protected:protected126,4609
  template <int Idx, typename U> static Use &OpFrom(OpFrom127,4620
  template <int Idx> Use &Op(Op133,4836
  template <int Idx> const Use &Op(Op136,4903
  const Use *getHungOffOperands(getHungOffOperands141,4992
  Use *&getHungOffOperands(getHungOffOperands145,5101
  const Use *getIntrusiveOperands(getIntrusiveOperands147,5181
  Use *getIntrusiveOperands(getIntrusiveOperands151,5296
  void setOperandList(155,5393
  const Use *getOperandList(getOperandList162,5577
  Use *getOperandList(getOperandList165,5694
  Value *getOperand(getOperand169,5806
  void setOperand(174,5948
  const Use &getOperandUse(getOperandUse182,6253
  Use &getOperandUse(getOperandUse186,6404
  unsigned getNumOperands(191,6544
  void setGlobalVariableNumOperands(207,7185
  void setNumHungOffUseOperands(215,7574
  op_iterator       op_begin(234,8319
  const_op_iterator op_begin(235,8385
  op_iterator       op_end(236,8451
  const_op_iterator op_end(239,8541
  op_range operands(242,8631
  const_op_range operands(245,8702
  struct value_op_iterator250,8855
    explicit value_op_iterator(254,9077
    Value *operator*(operator*256,9157
    Value *operator->(operator->257,9201
  value_op_iterator value_op_begin(260,9261
  value_op_iterator value_op_end(263,9346
  iterator_range<value_op_iterator> operand_values(266,9427
  struct const_value_op_iterator270,9544
    explicit const_value_op_iterator(274,9802
    const Value *operator*(operator*277,9900
    const Value *operator->(operator->278,9950
  const_value_op_iterator value_op_begin(281,10016
  const_value_op_iterator value_op_end(284,10119
  iterator_range<const_value_op_iterator> operand_values(287,10218
  void dropAllReferences(299,10825
  static bool classof(311,11226
template<> struct simplify_type<simplify_type322,11637
  using SimpleType 323,11690
  static SimpleType getSimplifiedValue(325,11720
template<> struct simplify_type<simplify_type329,11815
  using SimpleType 330,11874
  static SimpleType getSimplifiedValue(332,11914

/usr/include/llvm/IR/ValueHandle.h,4298
#define LLVM_IR_VALUEHANDLE_H14,552
class ValueHandleBase 29,989
  enum HandleBaseKind 37,1251
  enum HandleBaseKind { Assert,37,1251
  enum HandleBaseKind { Assert, Callback,37,1251
  enum HandleBaseKind { Assert, Callback, Weak,37,1251
  enum HandleBaseKind { Assert, Callback, Weak, WeakTracking 37,1251
  ValueHandleBase(39,1316
  ValueHandleBase(42,1418
  PointerIntPair<ValueHandleBase*ValueHandleBase49,1631
  PointerIntPair<ValueHandleBase**, 2, HandleBaseKind> PrevPair;49,1631
  void setValPtr(53,1756
  explicit ValueHandleBase(56,1805
  ValueHandleBase(58,1888
  ~ValueHandleBase(64,2036
  Value &operator*operator92,2715
  Value *getValPtr(getValPtr99,2857
  static bool isValid(101,2901
  void RemoveFromUseList(108,3127
  void clearValPtr(114,3335
  static void ValueIsDeleted(118,3421
  static void ValueIsRAUWd(119,3461
  ValueHandleBase **getPrevPtr(getPrevPtr123,3561
  HandleBaseKind getKind(124,3634
  void setPrevPtr(125,3697
  void AddToExistingUseList(131,3933
  void AddToExistingUseListAfter(134,4042
  void AddToUseList(137,4150
class WeakVH 144,4329
  WeakVH(146,4377
  WeakVH(147,4415
  WeakVH(148,4464
  Value *operator=(operator=153,4582
  Value *operator=(operator=156,4663
  operator Value*(operator Value*160,4761
template <> struct simplify_type<simplify_type167,4906
  using SimpleType 168,4949
  static SimpleType getSimplifiedValue(170,4980
template <> struct simplify_type<simplify_type172,5051
  using SimpleType 173,5100
  static SimpleType getSimplifiedValue(175,5131
template <> struct DenseMapInfo<DenseMapInfo179,5280
  static inline WeakVH getEmptyKey(180,5322
  static inline WeakVH getTombstoneKey(184,5423
  static unsigned getHashValue(188,5532
  static bool isEqual(192,5642
class WeakTrackingVH 204,6162
  WeakTrackingVH(206,6218
  WeakTrackingVH(207,6272
  WeakTrackingVH(208,6337
  Value *operator=(operator=213,6495
  Value *operator=(operator=216,6576
  operator Value*(operator Value*220,6674
  bool pointsToAliveValue(224,6731
template <> struct simplify_type<simplify_type231,6918
  using SimpleType 232,6969
  static SimpleType getSimplifiedValue(234,7000
template <> struct simplify_type<simplify_type236,7079
  using SimpleType 237,7136
  static SimpleType getSimplifiedValue(239,7167
class AssertingVH260,8191
  Value *getRawValPtr(getRawValPtr268,8372
  void setRawValPtr(269,8443
  Value *ThePtr;ThePtr271,8514
  Value *getRawValPtr(getRawValPtr272,8531
  void setRawValPtr(273,8580
  static Value *GetAsValue(GetAsValue276,8697
  static Value *GetAsValue(GetAsValue277,8748
  ValueTy *getValPtr(getValPtr279,8826
  void setValPtr(280,8906
  AssertingVH(284,9013
  AssertingVH(285,9058
  AssertingVH(286,9128
  AssertingVH(288,9206
  AssertingVH(289,9243
  operator ValueTy*(operator ValueTy*293,9350
  ValueTy *operator=(operator=297,9409
  ValueTy *operator=(operator=301,9494
  ValueTy *operator->(operator->306,9611
  ValueTy &operator*(operator*307,9665
struct DenseMapInfo<DenseMapInfo313,9881
template <typename ValueTy> class TrackingVH 331,10755
  WeakTrackingVH InnerHandle;332,10802
  ValueTy *getValPtr(getValPtr335,10841
  void setValPtr(348,11460
  static Value *GetAsValue(GetAsValue356,11714
  static Value *GetAsValue(GetAsValue357,11765
  TrackingVH(361,11877
  operator ValueTy*(operator ValueTy*363,11921
  ValueTy *operator=(operator=367,11980
  ValueTy *operator->(operator->372,12066
  ValueTy &operator*(operator*373,12120
class CallbackVH 383,12631
  void setValPtr(390,12838
  CallbackVH(395,12915
  CallbackVH(396,12961
  CallbackVH(397,13018
  operator Value*(operator Value*399,13088
  virtual void deleted(414,13659
  virtual void allUsesReplacedWith(423,14056
  PoisoningVH &operator=(operator=508,17135
  operator ValueTy operator ValueTy519,17375
  ValueTy *operator->(operator->521,17429
  ValueTy &operator*(operator*522,17483
template <typename T> struct DenseMapInfo<DenseMapInfo526,17617
  static inline PoisoningVH<T> getEmptyKey(527,17677
  static inline PoisoningVH<T> getTombstoneKey(533,17829
  static unsigned getHashValue(539,17989
  static bool isEqual(543,18122
  static unsigned getHashValue(551,18422
  static bool isEqual(555,18527

/usr/include/llvm/IR/ValueMap.h,2497
#define LLVM_IR_VALUEMAP_H26,1369
  enum { FollowRAUW 61,2459
  struct ExtraData 67,2751
template<typename KeyT,83,3392
template<typename KeyT, typename ValueT,83,3392
template<typename KeyT, typename ValueT, typename Config 83,3392
template <typename KeyT,239,8736
template <typename KeyT, typename ValueT,239,8736
template<typename KeyT,296,10977
template<typename KeyT, typename ValueT,296,10977
  using VH 298,11099
  static inline VH getEmptyKey(300,11155
  static inline VH getTombstoneKey(304,11248
  static unsigned getHashValue(308,11349
  static unsigned getHashValue(312,11461
  static bool isEqual(316,11566
  static bool isEqual(320,11648
template <typename DenseMapT,325,11747
template <typename DenseMapT, typename KeyT> class ValueMapIterator 325,11747
  using BaseT 326,11817
  using ValueT 327,11863
  BaseT I;329,11914
  using iterator_category 332,11934
  using value_type 333,11989
  using difference_type 334,12060
  using pointer 335,12102
  using reference 336,12134
  ValueMapIterator(338,12169
  ValueMapIterator(339,12199
  BaseT base(341,12238
  struct ValueTypeProxy 343,12274
    const KeyT first;344,12300
    ValueT& second;345,12322
    ValueTypeProxy *operator->(operator->347,12343
    operator std::pair<KeyT, pair<KeyT,349,12394
  ValueTypeProxy operator*(354,12497
  ValueTypeProxy operator->(359,12618
  bool operator==(operator==363,12685
  bool operator!=(operator!=366,12767
  inline ValueMapIterator& operator++(370,12850
  ValueMapIterator operator++(374,12940
template <typename DenseMapT,379,13058
template <typename DenseMapT, typename KeyT> class ValueMapConstIterator 379,13058
  using BaseT 380,13133
  using ValueT 381,13185
  BaseT I;383,13236
  using iterator_category 386,13256
  using value_type 387,13311
  using difference_type 388,13382
  using pointer 389,13424
  using reference 390,13456
  ValueMapConstIterator(392,13491
  ValueMapConstIterator(393,13526
  ValueMapConstIterator(394,13569
  BaseT base(397,13660
  struct ValueTypeProxy 399,13696
    const KeyT first;400,13722
    const ValueT& second;401,13744
    ValueTypeProxy *operator->(operator->402,13770
    operator std::pair<KeyT, pair<KeyT,403,13820
  ValueTypeProxy operator*(408,13923
  ValueTypeProxy operator->(413,14044
  bool operator==(operator==417,14111
  bool operator!=(operator!=420,14198
  inline ValueMapConstIterator& operator++(424,14286
  ValueMapConstIterator operator++(428,14381

/usr/include/llvm/IR/VectorBuilder.h,677
#define LLVM_IR_VECTORBUILDER_H16,677
class VectorBuilder 25,852
  enum class Behavior 27,882
    ReportAndAbort 30,1017
    SilentlyReturnNone 35,1206
  IRBuilderBase &Builder;Builder39,1249
  Behavior ErrorHandling;40,1275
  Value *Mask;Mask43,1332
  Value *ExplicitVectorLength;ExplicitVectorLength45,1386
  ElementCount StaticVectorLength;47,1450
  Value &requestMask(requestMask50,1549
  Value &requestEVL(requestEVL51,1573
  void handleError(53,1597
  VectorBuilder(61,1793
  LLVMContext &getContext(getContext68,2097
  VectorBuilder &setMask(setMask73,2265
  VectorBuilder &setEVL(setEVL77,2350
  VectorBuilder &setStaticVL(setStaticVL81,2482

/usr/include/llvm/IR/Verifier.h,657
#define LLVM_IR_VERIFIER_H21,895
class TBAAVerifier 39,1211
  template <typename... Tys> void CheckFailed(43,1309
  DenseMap<DenseMap54,1864
  DenseMap<const MDNode *, TBAABaseNodeSummary> TBAABaseNodes;54,1864
  DenseMap<DenseMap58,2069
  DenseMap<const MDNode *, bool> TBAAScalarNodes;58,2069
  TBAAVerifier(75,2825
class VerifierAnalysis 107,4154
  static AnalysisKey Key;110,4271
  struct Result 113,4306
    bool IRBroken,114,4324
    bool IRBroken, DebugInfoBroken;114,4324
  static bool isRequired(119,4470
class VerifierPass 132,5013
  bool FatalErrors;133,5071
  explicit VerifierPass(136,5100
  static bool isRequired(140,5310

/usr/include/llvm/IR/Attributes.h,5162
#define LLVM_IR_ATTRIBUTES_H16,621
  Unknown 48,1342
  Alloc 49,1357
  Realloc 50,1430
  Free 51,1510
  Uninitialized 52,1588
  Zeroed 53,1665
  Aligned 54,1735
  LLVM_MARK_AS_BITMASK_ENUM(56,1861
  LLVM_MARK_AS_BITMASK_ENUM(/* LargestValue = */ Aligned)56,1861
class Attribute 65,2280
  enum AttrKind 84,3168
    None,86,3213
    #define GET_ATTR_ENUM87,3273
    EndAttrKinds,89,3337
    EmptyKey,90,3401
    TombstoneKey,91,3475
  static const unsigned NumIntAttrKinds 94,3559
  static const unsigned NumTypeAttrKinds 95,3633
  static bool isEnumAttrKind(97,3711
  static bool isIntAttrKind(100,3819
  static bool isTypeAttrKind(103,3924
  AttributeImpl *pImpl pImpl112,4182
  Attribute(114,4217
  Attribute getWithNewType(153,6310
  bool isValid(184,7487
  std::pair<std::pair233,9246
  bool operator==(operator==262,10247
  bool operator!=(operator!=263,10313
  void *getRawPointer(getRawPointer271,10597
  static Attribute fromRawPointer(276,10720
inline LLVMAttributeRef wrap(282,10883
inline Attribute unwrap(287,11041
class AttributeSet 297,11536
  template <typename Ty,299,11585
  AttributeSetNode *SetNode SetNode306,11878
  explicit AttributeSet(309,11927
  bool operator==(operator==320,12298
  bool operator!=(operator!=321,12378
  bool hasAttributes(357,14032
  std::optional<std::optional381,14861
  using iterator 394,15372
  static AttributeSet getEmptyKey(407,15732
  static AttributeSet getTombstoneKey(413,15950
  static unsigned getHashValue(419,16172
  static bool isEqual(424,16330
class AttributeList 435,16917
  enum AttrIndex 437,16947
    ReturnIndex 438,16977
    FunctionIndex 439,16999
    FirstArgIndex 440,17024
  template <typename Ty,448,17186
  AttributeListImpl *pImpl pImpl452,17363
  explicit AttributeList(468,18021
  [[nodiscard]] AttributeList addFnAttribute(522,20617
  [[nodiscard]] AttributeList addFnAttribute(529,20926
  addFnAttribute(537,21255
  [[nodiscard]] AttributeList addFnAttributes(544,21534
  [[nodiscard]] AttributeList addRetAttribute(551,21843
  [[nodiscard]] AttributeList addRetAttribute(558,22156
  [[nodiscard]] AttributeList addRetAttributes(565,22459
  addParamAttribute(573,22795
  addParamAttribute(581,23109
  [[nodiscard]] AttributeList addParamAttributes(594,23764
  [[nodiscard]] AttributeList removeAttribute(609,24547
  removeFnAttribute(628,25528
  [[nodiscard]] AttributeList removeFnAttribute(634,25811
  removeFnAttributes(642,26190
  [[nodiscard]] AttributeList removeFnAttributes(648,26485
  removeRetAttribute(655,26800
  [[nodiscard]] AttributeList removeRetAttribute(661,27086
  removeRetAttributes(669,27469
  removeParamAttribute(677,27829
  removeParamAttribute(685,28197
  removeParamAttributes(692,28532
  [[nodiscard]] AttributeList removeParamAttributes(699,28883
  replaceAttributeTypeAtIndex(707,29261
  bool hasParamAttr(767,32071
  bool hasParamAttr(772,32272
  bool hasParamAttrs(777,32460
  bool hasRetAttr(782,32630
  bool hasRetAttr(787,32802
  bool hasRetAttrs(792,32960
  bool hasFnAttrs(801,33303
  Attribute getParamAttr(816,34045
  Attribute getParamAttr(821,34252
  Attribute getFnAttr(826,34447
  Attribute getFnAttr(831,34625
  using iterator 907,37483
  struct index_iterator 917,37782
    unsigned NumAttrSets;918,37808
    index_iterator(919,37834
    struct int_wrapper 920,37900
      int_wrapper(921,37925
      unsigned i;922,37965
      unsigned operator*(923,37983
      bool operator!=(operator!=924,38024
      int_wrapper &operator++(operator++925,38097
    int_wrapper begin(933,38303
    int_wrapper end(935,38382
  index_iterator indexes(939,38511
  bool operator==(operator==942,38641
  bool operator!=(operator!=943,38722
  void *getRawPointer(getRawPointer946,38877
  bool isEmpty(951,38978
  static AttributeList getEmptyKey(962,39284
  static AttributeList getTombstoneKey(968,39504
  static unsigned getHashValue(974,39728
  static bool isEqual(979,39883
class AttrBuilder 990,40337
  LLVMContext &Ctx;Ctx991,40357
  SmallVector<SmallVector992,40377
  SmallVector<Attribute, 8> Attrs;992,40377
  AttrBuilder(995,40421
  AttrBuilder(999,40554
  AttrBuilder &removeAttribute(removeAttribute1023,41296
  bool hasAttributes(1049,42201
  MaybeAlign getAlignment(1064,42862
  MaybeAlign getStackAlignment(1069,43035
  uint64_t getDereferenceableBytes(1075,43286
  uint64_t getDereferenceableOrNullBytes(1081,43546
  Type *getByValType(getByValType1089,43809
  Type *getStructRetType(getStructRetType1092,43911
  Type *getByRefType(getByRefType1095,44022
  Type *getPreallocatedType(getPreallocatedType1098,44132
  Type *getInAllocaType(getInAllocaType1103,44258
  std::optional<std::optional1107,44426
  inline AttrBuilder &addAlignmentAttr(addAlignmentAttr1121,45057
  inline AttrBuilder &addStackAlignmentAttr(addStackAlignmentAttr1133,45572
  ArrayRef<Attribute> attrs(1192,47933
  bool operator!=(operator!=1195,48035
namespace AttributeFuncs 1198,48111
enum AttributeSafetyKind 1200,48139
  ASK_SAFE_TO_DROP 1201,48176
  ASK_UNSAFE_TO_DROP 1202,48200
  ASK_ALL 1203,48226

/usr/include/llvm/IR/Attributes.inc,2116
FirstEnumAttr 130,4692
AllocAlign 131,4711
AllocatedPointer 132,4727
AlwaysInline 133,4749
Builtin 134,4767
Cold 135,4780
Convergent 136,4790
CoroDestroyOnlyWhenComplete 137,4806
DeadOnUnwind 138,4839
DisableSanitizerInstrumentation 139,4857
FnRetThunkExtern 140,4894
Hot 141,4917
ImmArg 142,4927
InReg 143,4940
InlineHint 144,4952
JumpTable 145,4969
MinSize 146,4985
MustProgress 147,4999
Naked 148,5018
Nest 149,5030
NoAlias 150,5041
NoBuiltin 151,5055
NoCallback 152,5071
NoCapture 153,5088
NoCfCheck 154,5104
NoDuplicate 155,5120
NoFree 156,5138
NoImplicitFloat 157,5151
NoInline 158,5173
NoMerge 159,5188
NoProfile 160,5202
NoRecurse 161,5218
NoRedZone 162,5234
NoReturn 163,5250
NoSanitizeBounds 164,5265
NoSanitizeCoverage 165,5288
NoSync 166,5313
NoUndef 167,5326
NoUnwind 168,5340
NonLazyBind 169,5355
NonNull 170,5373
NullPointerIsValid 171,5387
OptForFuzzing 172,5412
OptimizeForDebugging 173,5432
OptimizeForSize 174,5459
OptimizeNone 175,5481
PresplitCoroutine 176,5500
ReadNone 177,5524
ReadOnly 178,5539
Returned 179,5554
ReturnsTwice 180,5569
SExt 181,5588
SafeStack 182,5599
SanitizeAddress 183,5615
SanitizeHWAddress 184,5637
SanitizeMemTag 185,5661
SanitizeMemory 186,5682
SanitizeThread 187,5703
ShadowCallStack 188,5724
SkipProfile 189,5746
Speculatable 190,5764
SpeculativeLoadHardening 191,5783
StackProtect 192,5814
StackProtectReq 193,5833
StackProtectStrong 194,5855
StrictFP 195,5880
SwiftAsync 196,5895
SwiftError 197,5912
SwiftSelf 198,5929
WillReturn 199,5945
Writable 200,5962
WriteOnly 201,5977
ZExt 202,5993
LastEnumAttr 203,6004
FirstTypeAttr 204,6023
ByRef 205,6043
ByVal 206,6055
ElementType 207,6067
InAlloca 208,6085
Preallocated 209,6100
StructRet 210,6119
LastTypeAttr 211,6135
FirstIntAttr 212,6154
Alignment 213,6173
AllocKind 214,6189
AllocSize 215,6205
Dereferenceable 216,6221
DereferenceableOrNull 217,6243
Memory 218,6271
NoFPClass 219,6284
StackAlignment 220,6300
UWTable 221,6321
VScaleRange 222,6335
LastIntAttr 223,6353
static 228,6435
static 249,7310
static 272,8221

/usr/include/llvm/IR/Attributes.td,585
def FnAttr : AttrProperty;17,598
def ParamAttr : AttrProperty;20,666
def RetAttr : AttrProperty;23,734
  string AttrString 28,890
  list<AttrProperty> Properties 29,915
class EnumAttr<string S, list<AttrProperty> P> : Attr<Attr33,975
class IntAttr<string S, list<AttrProperty> P> : Attr<Attr36,1056
class TypeAttr<string S, list<AttrProperty> P> : Attr<Attr39,1137
  string CompatFunc 354,12357
  string AttrName 355,12382
class CompatRuleStrAttr<string F, string Attr> : CompatRule<CompatRule358,12409
class MergeRule<MergeRule378,13326
  string MergeFunc 384,13648

/usr/include/llvm/IR/AutoUpgrade.h,37
#define LLVM_IR_AUTOUPGRADE_H14,550

/usr/include/llvm/IR/BasicBlock.h,614
#define LLVM_IR_BASICBLOCK_H14,549
    bool operator==(operator==488,21098
    PHINodeT &operator*(operator*490,21180
    phi_iterator_impl &operator++(operator++493,21292
#define BEGIN_TWO_BYTE_PACK(718,31554
#define END_TWO_BYTE_PACK(719,31603
#define BEGIN_TWO_BYTE_PACK(721,31658
#define END_TWO_BYTE_PACK(722,31688
  struct BasicBlockBits 727,31814
    unsigned short BlockAddressRefCount 728,31840
    unsigned short InstrOrderValid 729,31886
#undef BEGIN_TWO_BYTE_PACK733,31954
#undef END_TWO_BYTE_PACK734,31981
inline void BasicBlock::validateInstrOrdering(validateInstrOrdering782,33814

/usr/include/llvm/IR/CallingConv.h,1605
#define LLVM_IR_CALLINGCONV_H14,543
    C 34,1264
    Fast 41,1527
    Cold 47,1814
    GHC 50,1881
    HiPE 53,1957
    AnyReg 60,2152
    PreserveMost 63,2232
    PreserveAll 66,2326
    Swift 69,2387
    CXX_FAST_TLS 72,2439
    Tail 76,2593
    CFGuard_Check 82,2902
    SwiftTail 87,3103
    FirstTargetCC 91,3237
    X86_StdCall 96,3468
    X86_FastCall 100,3648
    ARM_APCS 104,3763
    ARM_AAPCS 108,3894
    ARM_AAPCS_VFP 111,3976
    MSP430_INTR 114,4045
    X86_ThisCall 119,4256
    PTX_Kernel 122,4351
    PTX_Device 126,4473
    SPIR_FUNC 135,4975
    SPIR_KERNEL 141,5244
    Intel_OCL_BI 144,5308
    X86_64_SysV 148,5458
    Win64 156,5928
    X86_VectorCall 160,6045
    DUMMY_HHVM 163,6144
    DUMMY_HHVM_C 164,6165
    X86_INTR 170,6504
    AVR_INTR 173,6565
    AVR_SIGNAL 176,6623
    AVR_BUILTIN 180,6758
    AMDGPU_VS 185,6988
    AMDGPU_GS 188,7056
    AMDGPU_PS 191,7121
    AMDGPU_CS 194,7188
    AMDGPU_KERNEL 197,7254
    X86_RegCall 200,7357
    AMDGPU_HS 203,7456
    MSP430_BUILTIN 207,7598
    AMDGPU_LS 210,7689
    AMDGPU_ES 215,7924
    AArch64_VectorCall 218,7998
    AArch64_SVE_VectorCall 221,8071
    WASM_EmscriptenInvoke 226,8299
    AMDGPU_Gfx 229,8371
    M68k_INTR 232,8436
    AArch64_SME_ABI_Support_Routines_PreserveMost_From_X0 235,8512
    AArch64_SME_ABI_Support_Routines_PreserveMost_From_X2 238,8632
    AMDGPU_CS_Chain 242,8791
    AMDGPU_CS_ChainPreserve 246,8958
    M68k_RTD 249,9057
    GRAAL 252,9142
    ARM64EC_Thunk_X64 257,9385
    ARM64EC_Thunk_Native 262,9624
    MaxID 265,9712

/usr/include/llvm/IR/ConstantFolder.h,40
#define LLVM_IR_CONSTANTFOLDER_H17,773

/usr/include/llvm/IR/ConstantRange.h,1206
#define LLVM_IR_CONSTANTRANGE_H32,1283
class [[nodiscard]] ConstantRange 47,1579
  APInt Lower,48,1615
  APInt Lower, Upper;48,1615
  ConstantRange getEmpty(51,1692
  ConstantRange getFull(56,1833
  explicit ConstantRange(62,1993
  ConstantRange(65,2116
  ConstantRange(70,2358
  static ConstantRange getEmpty(73,2462
  static ConstantRange getFull(78,2622
  static ConstantRange getNonEmpty(84,2847
  const APInt &getLower(getLower198,8671
  const APInt &getUpper(getUpper201,8767
  uint32_t getBitWidth(204,8865
  const APInt *getSingleElement(getSingleElement246,10327
  const APInt *getSingleMissingElement(getSingleMissingElement254,10536
  bool isSingleElement(261,10718
  bool operator==(operator==288,11675
  bool operator!=(operator!=291,11781
  enum PreferredRangeType 319,13090
  enum PreferredRangeType { Smallest,319,13090
  enum PreferredRangeType { Smallest, Unsigned,319,13090
  enum PreferredRangeType { Smallest, Unsigned, Signed 319,13090
  enum class OverflowResult 542,24183
    AlwaysOverflowsLow,544,24285
    AlwaysOverflowsHigh,546,24381
    MayOverflow,548,24439
    NeverOverflows,550,24481
inline raw_ostream &operator<<(operator<<578,25491

/usr/include/llvm/IR/Constants.h,2417
#define LLVM_IR_CONSTANTS_H21,1002
class ConstantData 51,1886
  Value *handleOperandChangeImpl(handleOperandChangeImpl54,1951
  explicit ConstantData(59,2089
  void *operator new(61,2170
  void operator delete(operator delete64,2247
  static bool classof(69,2433
class ConstantAggregate 384,15302
  static bool classof(393,15619
struct OperandTraits<OperandTraits400,15794
class ConstantArray 408,16093
class ConstantDataSequential 568,21827
  const char *DataElements;DataElements574,22042
  std::unique_ptr<ConstantDataSequential> Next;580,22342
  explicit ConstantDataSequential(585,22433
  StringRef getAsString(643,24808
  StringRef getAsCString(650,25073
  static bool classof(662,25528
  void *operator new(operator new879,34972
  void operator delete(operator delete885,35138
struct OperandTraits<OperandTraits912,36148
class DSOLocalEquivalent 920,36475
  void *operator new(operator new925,36592
  void operator delete(operator delete931,36758
struct OperandTraits<OperandTraits950,37330
class NoCFIValue 957,37605
  void *operator new(operator new962,37706
struct OperandTraits<OperandTraits990,38473
class ConstantExpr 1002,38991
  ConstantExpr(1010,39193
  static Constant *getNSWNeg(getNSWNeg1056,41379
  static Constant *getNUWNeg(getNUWNeg1057,41456
  static Constant *getNSWAdd(getNSWAdd1059,41534
  static Constant *getNUWAdd(getNUWAdd1063,41638
  static Constant *getNSWSub(getNSWSub1067,41742
  static Constant *getNUWSub(getNUWSub1071,41846
  static Constant *getNSWMul(getNSWMul1075,41950
  static Constant *getNUWMul(getNUWMul1079,42054
  static Constant *getNSWShl(getNSWShl1083,42158
  static Constant *getNUWShl(getNUWShl1087,42262
  getGetElementPtr(1187,46808
  getGetElementPtr(1196,47224
  static Constant *getInBoundsGetElementPtr(getInBoundsGetElementPtr1213,48108
  static Constant *getInBoundsGetElementPtr(getInBoundsGetElementPtr1217,48306
  static Constant *getInBoundsGetElementPtr(getInBoundsGetElementPtr1224,48656
  unsigned getOpcode(1238,49396
  Constant *getWithOperands(getWithOperands1260,50293
  static bool isSupportedGetElementPtr(1303,52294
  static bool classof(1308,52474
  void setValueSubclassData(1315,52700
struct OperandTraits<OperandTraits1321,52804
class UndefValue 1336,53471
  explicit UndefValue(1339,53538
  explicit UndefValue(1344,53648
  static bool classof(1371,54682

/usr/include/llvm/IR/ConvergenceVerifier.h,68
#define LLVM_IR_CONVERGENCEVERIFIER_H16,605
namespace llvm 21,726

/usr/include/llvm/IR/CycleInfo.h,58
#define LLVM_IR_CYCLEINFO_H16,578
namespace llvm 21,679

/usr/include/llvm/IR/DIBuilder.h,5559
#define LLVM_IR_DIBUILDER_H15,596
  class DIBuilder 42,1199
    Module &M;M43,1219
    LLVMContext &VMContext;VMContext44,1234
    DICompileUnit *CUNode;CUNode46,1263
    Function *DeclareFn;DeclareFn47,1344
    Function *ValueFn;ValueFn48,1395
    Function *LabelFn;LabelFn49,1444
    Function *AssignFn;AssignFn50,1493
    SmallVector<TrackingMDNodeRef,TrackingMDNodeRef52,1544
    SmallVector<TrackingMDNodeRef, 4> AllEnumTypes;52,1544
    SmallVector<TrackingMDNodeRef,TrackingMDNodeRef54,1663
    SmallVector<TrackingMDNodeRef, 4> AllRetainTypes;54,1663
    SmallVector<DISubprogram DISubprogram55,1717
    SmallVector<DISubprogram *, 4> AllSubprograms;55,1717
    SmallVector<Metadata Metadata56,1768
    SmallVector<Metadata *, 4> AllGVs;56,1768
    SmallVector<TrackingMDNodeRef,TrackingMDNodeRef57,1807
    SmallVector<TrackingMDNodeRef, 4> ImportedModules;57,1807
    MapVector<MDNode MDNode61,2057
    MapVector<MDNode *, SetVector<Metadata *>> AllMacrosPerParent;61,2057
    SmallVector<TrackingMDNodeRef,TrackingMDNodeRef64,2169
    SmallVector<TrackingMDNodeRef, 4> UnresolvedNodes;64,2169
    bool AllowUnresolvedNodes;65,2224
    DenseMap<DISubprogram DISubprogram73,2522
    DenseMap<DISubprogram *, SmallVector<TrackingMDNodeRef,TrackingMDNodeRef73,2522
        SubprogramTrackedNodes;74,2586
    getImportTrackingVector(77,2660
    getSubprogramNodesTrackingVector(83,2892
    void trackIfUnresolved(90,3141
    Instruction *insertDeclare(insertDeclare93,3224
    Instruction *insertLabel(insertLabel98,3499
    Instruction *insertDbgIntrinsic(insertDbgIntrinsic102,3731
    insertDbgValueIntrinsic(110,4146
    explicit DIBuilder(121,4651
    void finalize(127,4920
    void finalizeSubprogram(131,5052
    createCompileUnit(161,6894
    DIFile *createFile(createFile179,7930
    DIMacro *createMacro(createMacro190,8471
    DIMacroFile *createTempMacroFile(createTempMacroFile199,9039
    DIEnumerator *createEnumerator(createEnumerator203,9207
    DIEnumerator *createEnumerator(createEnumerator204,9280
    DIBasicType *createUnspecifiedType(createUnspecifiedType208,9448
    DIBasicType *createNullPtrType(createNullPtrType211,9540
    DIBasicType *createBasicType(createBasicType219,9883
    DIStringType *createStringType(createStringType227,10235
    DIStringType *createStringType(createStringType234,10585
    DIStringType *createStringType(createStringType242,11023
    DIDerivedType *createQualifiedType(createQualifiedType250,11424
    createPointerType(260,11911
    createMemberPointerType(271,12480
    DIDerivedType *createReferenceType(createReferenceType277,12792
    DIDerivedType *createTypedef(createTypedef291,13484
    DIDerivedType *createFriend(createFriend298,13890
    DIDerivedType *createInheritance(createInheritance308,14378
    DIDerivedType *createMemberType(createMemberType323,15123
    DIDerivedType *createVariantMemberType(createVariantMemberType343,16215
    DIDerivedType *createBitFieldMemberType(createBitFieldMemberType362,17106
    DIDerivedType *createStaticMemberType(createStaticMemberType381,18174
    DIDerivedType *createObjCIVar(createObjCIVar398,19080
    DIObjCProperty *createObjCProperty(createObjCProperty412,19871
    DICompositeType *createClassType(createClassType435,21172
    DICompositeType *createStructType(createStructType453,22196
    DICompositeType *createUnionType(createUnionType470,23153
    DICompositeType *createVariantPart(createVariantPart491,24350
    DITemplateTypeParameter *createTemplateTypeParameter(createTemplateTypeParameter505,24963
    createTemplateValueParameter(518,25628
    createTemplateTemplateParameter(528,26160
    DITemplateValueParameter *createTemplateParameterPack(createTemplateParameterPack536,26603
    DICompositeType *createArrayType(createArrayType558,27861
    DICompositeType *createVectorType(createVectorType570,28492
    DICompositeType *createEnumerationType(createEnumerationType587,29388
    DIDerivedType *createSetType(createSetType600,30105
    createSubroutineType(611,30729
    static DISubprogram *createArtificialSubprogram(createArtificialSubprogram616,30962
    static DIType *createArtificialType(createArtificialType619,31099
    static DIType *createObjectPointerType(createObjectPointerType623,31248
    DICompositeType *createForwardDecl(createForwardDecl626,31355
    DICompositeType *createReplaceableCompositeType(createReplaceableCompositeType634,31823
    void retainType(642,32273
    DIBasicType *createUnspecifiedParameter(createUnspecifiedParameter646,32380
    DINodeArray getOrCreateArray(649,32479
    DIMacroNodeArray getOrCreateMacroArray(652,32601
    DITypeRefArray getOrCreateTypeArray(655,32731
    DISubrange *getOrCreateSubrange(getOrCreateSubrange659,32905
    DISubrange *getOrCreateSubrange(getOrCreateSubrange660,32969
    DISubrange *getOrCreateSubrange(getOrCreateSubrange661,33039
    getOrCreateGenericSubrange(665,33216
    DIGlobalVariableExpression *createGlobalVariableExpression(createGlobalVariableExpression684,34292
    DIGlobalVariable *createTempGlobalVariableFwdDecl(createTempGlobalVariableFwdDecl693,34812
    createAutoVariable(707,35516
    createLabel(717,35966
    createParameterVariable(732,36642
    DIExpression *createExpression(createExpression741,37171
    DIExpression *createConstantValueExpression(createConstantValueExpression745,37363
    NodeTy *replaceTemporary(replaceTemporary1020,52333

/usr/include/llvm/IR/DataLayout.h,3804
#define LLVM_IR_DATALAYOUT_H20,876
using LLVMTargetDataRef 42,1524
enum AlignTypeEnum 54,1777
  INTEGER_ALIGN 55,1798
  VECTOR_ALIGN 56,1821
  FLOAT_ALIGN 57,1843
  AGGREGATE_ALIGN 58,1864
struct LayoutAlignElem 72,2372
  uint32_t TypeBitWidth;73,2397
  Align ABIAlign;74,2422
  Align PrefAlign;75,2440
  static LayoutAlignElem get(77,2460
  bool operator=80,2572
struct PointerAlignElem 89,2897
  Align ABIAlign;90,2923
  Align PrefAlign;91,2941
  uint32_t TypeBitWidth;92,2960
  uint32_t AddressSpace;93,2985
  uint32_t IndexBitWidth;94,3010
  static PointerAlignElem getInBits(97,3055
  bool operator=101,3268
class DataLayout 110,3604
  enum class FunctionPtrAlignType 112,3631
    Independent,114,3748
    MultipleOfFunctionAlign,116,3845
  bool BigEndian;120,3913
  unsigned AllocaAddrSpace;122,3932
  MaybeAlign StackNaturalAlign;123,3960
  unsigned ProgramAddrSpace;124,3992
  unsigned DefaultGlobalsAddrSpace;125,4021
  MaybeAlign FunctionPtrAlign;127,4058
  FunctionPtrAlignType TheFunctionPtrAlignType;128,4089
  enum ManglingModeT 130,4138
    MM_None,131,4161
    MM_ELF,132,4174
    MM_MachO,133,4186
    MM_WinCOFF,134,4200
    MM_WinCOFFX86,135,4216
    MM_GOFF,136,4235
    MM_Mips,137,4248
    MM_XCOFF138,4261
  ManglingModeT ManglingMode;140,4279
  SmallVector<SmallVector142,4310
  SmallVector<unsigned char, 8> LegalIntWidths;142,4310
  using AlignmentsTy 146,4460
  AlignmentsTy IntAlignments;147,4516
  AlignmentsTy FloatAlignments;148,4546
  AlignmentsTy VectorAlignments;149,4578
  LayoutAlignElem StructAlignment;150,4611
  std::string StringRepresentation;153,4710
  using PointersTy 155,4747
  PointersTy Pointers;156,4802
  mutable void *LayoutMap LayoutMap161,4944
  SmallVector<SmallVector165,5099
  SmallVector<unsigned, 8> NonIntegralAddressSpaces;165,5099
  explicit DataLayout(193,6268
  DataLayout(200,6464
  DataLayout &operator=(operator=204,6577
  bool operator!=(operator!=226,7419
  bool isLittleEndian(238,7838
  bool isBigEndian(239,7891
  const std::string &getStringRepresentation(getStringRepresentation246,8209
  bool isDefault(251,8369
  bool isLegalInteger(260,8749
  bool isIllegalInteger(264,8854
  bool exceedsNaturalStackAlignment(267,9015
  Align getStackAlignment(271,9147
  unsigned getAllocaAddrSpace(276,9289
  PointerType *getAllocaPtrType(getAllocaPtrType278,9356
  MaybeAlign getFunctionPtrAlign(285,9624
  FunctionPtrAlignType getFunctionPtrAlignType(289,9779
  unsigned getProgramAddressSpace(293,9877
  unsigned getDefaultGlobalsAddressSpace(294,9948
  bool hasMicrosoftFastStdCallMangling(298,10040
  bool doNotMangleLeadingQuestionMark(304,10265
  bool hasLinkerPrivateGlobalPrefix(308,10390
  StringRef getLinkerPrivateGlobalPrefix(310,10472
  char getGlobalPrefix(316,10595
  StringRef getPrivateGlobalPrefix(332,10905
  bool fitsInLegalInteger(359,11602
  ArrayRef<unsigned> getNonIntegralAddressSpaces(389,12701
  bool isNonIntegralAddressSpace(393,12802
  bool isNonIntegralPointerType(398,12997
  bool isNonIntegralPointerType(402,13120
  unsigned getPointerSizeInBits(410,13399
  unsigned getMaxIndexSizeInBits(415,13572
  unsigned getIndexSizeInBits(420,13729
  unsigned getPointerTypeSize(435,14414
  TypeSize getTypeStoreSize(472,16008
  TypeSize getTypeStoreSizeInBits(484,16537
  bool typeSizeEqualsStoreSize(492,16802
  TypeSize getTypeAllocSize(504,17340
  TypeSize getTypeAllocSizeInBits(517,17954
  inline Align getValueOrABITypeAlignment(526,18310
  Align getABIIntegerTypeAlignment(533,18598
  Type *getLargestLegalIntType(getLargestLegalIntType564,19871
inline DataLayout *unwrap(unwrap612,21954
inline LLVMTargetDataRef wrap(616,22050
inline TypeSize DataLayout::getTypeSizeInBits(getTypeSizeInBits672,23904

/usr/include/llvm/IR/DebugInfo.h,2826
#define LLVM_IR_DEBUGINFO_H17,741
class DebugInfoFinder 101,4113
  void processModule(104,4205
  void processInstruction(106,4311
  void processVariable(109,4411
  void processLocation(111,4515
  void processDPValue(113,4637
  void processSubprogram(116,4724
  void reset(119,4792
  void processCompileUnit(122,4818
  void processScope(123,4864
  void processType(124,4901
  bool addCompileUnit(125,4933
  bool addGlobalVariable(126,4975
  bool addScope(127,5034
  bool addSubprogram(128,5067
  bool addType(129,5107
  iterator_range<compile_unit_iterator> compile_units(140,5563
  iterator_range<subprogram_iterator> subprograms(144,5679
  iterator_range<global_variable_expression_iterator> global_variables(148,5791
  iterator_range<type_iterator> types(152,5924
  iterator_range<scope_iterator> scopes(156,6024
  unsigned compile_unit_count(160,6132
  unsigned global_variable_count(161,6193
  unsigned subprogram_count(162,6257
  unsigned type_count(163,6316
  unsigned scope_count(164,6369
  SmallVector<DICompileUnit DICompileUnit167,6436
  SmallVector<DICompileUnit *, 8> CUs;167,6436
  SmallVector<DISubprogram DISubprogram168,6475
  SmallVector<DISubprogram *, 8> SPs;168,6475
  SmallVector<DIGlobalVariableExpression DIGlobalVariableExpression169,6513
  SmallVector<DIGlobalVariableExpression *, 8> GVs;169,6513
  SmallVector<DIType DIType170,6565
  SmallVector<DIType *, 8> TYs;170,6565
  SmallVector<DIScope DIScope171,6597
  SmallVector<DIScope *, 8> Scopes;171,6597
  SmallPtrSet<const MDNode 172,6633
  SmallPtrSet<const MDNode *, 32> NodesSeen;172,6633
namespace at 176,6712
inline AssignmentInstRange getAssignmentInsts(196,7605
class DbgAssignIt208,8124
  DbgAssignIt(216,8558
  DbgAssignIntrinsic *operator*(operator*217,8628
using AssignmentMarkerRange 220,8755
inline AssignmentMarkerRange getAssignmentMarkers(227,9202
inline SmallVector<DPValue *> getDPVAssignmentMarkers(234,9479
struct VarRecord 273,11266
  DILocalVariable *Var;Var274,11285
  DILocation *DL;DL275,11309
  VarRecord(277,11328
  VarRecord(279,11429
  VarRecord(281,11517
  friend bool operator<(282,11589
  friend bool operator==(operator==285,11729
template <> struct DenseMapInfo<DenseMapInfo292,11894
  static inline at::VarRecord getEmptyKey(293,11943
  static inline at::VarRecord getTombstoneKey(298,12136
  static unsigned getHashValue(303,12341
  static bool isEqual(307,12447
namespace at 312,12546
using StorageToVarsMap 317,12831
    DenseMap<const AllocaInst *, SmallSetVector<SmallSetVector318,12856
struct AssignmentInfo 328,13321
  AllocaInst const *Base;Base329,13345
  uint64_t OffsetInBits;330,13391
  uint64_t SizeInBits;331,13441
  bool StoreToWholeAlloca;332,13496
  AssignmentInfo(334,13577
class AssignmentTrackingPass 357,14763

/usr/include/llvm/IR/DebugInfoMetadata.h,31398
#define LLVM_IR_DEBUGINFOMETADATA_H14,546
#define DEFINE_MDNODE_GET_UNPACK_IMPL(38,1206
#define DEFINE_MDNODE_GET_UNPACK(39,1261
#define DEFINE_MDNODE_GET_DISTINCT_TEMPORARY(40,1335
#define DEFINE_MDNODE_GET(50,2068
class DITypeRefArray 72,3007
  const MDTuple *N N73,3030
  DITypeRefArray(77,3099
  explicit operator bool(operator bool79,3145
  explicit operator MDTuple operator MDTuple80,3196
  MDTuple *get(get82,3253
  MDTuple *operator->(operator->83,3313
  MDTuple &operator*(operator*84,3361
  unsigned size(87,3461
  class iterator 92,3623
    explicit iterator(103,3907
    DIType *operator*(operator*105,3963
    iterator &operator++(operator++107,4031
    iterator operator++(112,4098
    bool operator==(operator==118,4194
    bool operator!=(operator!=119,4260
  iterator begin(123,4383
  iterator end(124,4461
class DINode 134,4818
  DINode(139,4916
  template <class Ty> Ty *getOperandAs(getOperandAs147,5194
  StringRef getStringOperand(151,5302
  static MDString *getCanonicalMDString(getCanonicalMDString157,5454
  void setTag(164,5657
  enum DIFlags 173,5888
#define HANDLE_DI_FLAG(174,5916
#define DI_FLAG_LARGEST_NEEDED175,5966
    FlagAccessibility 177,6035
    FlagPtrToMemberRep 178,6101
    LLVM_MARK_AS_BITMASK_ENUM(180,6225
    LLVM_MARK_AS_BITMASK_ENUM(FlagLargest)180,6225
  static bool classof(193,6634
class GenericDINode 235,7841
  GenericDINode(239,7935
  ~GenericDINode(245,8191
  void setHash(247,8236
  static GenericDINode *getImpl(getImpl250,8320
  TempGenericDINode cloneImpl(261,8910
  unsigned getHash(267,9095
  DEFINE_MDNODE_GET(269,9150
  StringRef getHeader(282,9653
  MDString *getRawHeader(getRawHeader283,9715
  op_iterator dwarf_op_begin(285,9787
  op_iterator dwarf_op_end(286,9851
  op_range dwarf_operands(287,9907
  unsigned getNumDwarfOperands(291,10003
  const MDOperand &getDwarfOperand(getDwarfOperand292,10075
  void replaceDwarfOperandWith(295,10164
  static bool classof(299,10265
class DIAssignID 308,10595
  DIAssignID(312,10686
  ~DIAssignID(315,10797
  TempDIAssignID cloneImpl(320,10968
  SmallVector<DPValue *> getAllDPValueUsers(326,11158
  static DIAssignID *getDistinct(getDistinct330,11274
  static TempDIAssignID getTemporary(333,11374
  static bool classof(338,11560
class DISubrange 347,11772
  TempDISubrange cloneImpl(368,12631
  DEFINE_MDNODE_GET(374,12819
  Metadata *getRawCountNode(getRawCountNode387,13341
  Metadata *getRawLowerBound(getRawLowerBound389,13410
  Metadata *getRawUpperBound(getRawUpperBound391,13480
  Metadata *getRawStride(getRawStride393,13550
  typedef PointerUnion<ConstantInt ConstantInt395,13616
  typedef PointerUnion<ConstantInt *, DIVariable 395,13616
  typedef PointerUnion<ConstantInt *, DIVariable *, DIExpression *> BoundType;395,13616
  static bool classof(405,13831
class DIGenericSubrange 410,13933
  TempDIGenericSubrange cloneImpl(424,14469
  DEFINE_MDNODE_GET(430,14664
  Metadata *getRawCountNode(getRawCountNode437,14959
  Metadata *getRawLowerBound(getRawLowerBound438,15027
  Metadata *getRawUpperBound(getRawUpperBound439,15096
  Metadata *getRawStride(getRawStride440,15165
  using BoundType 442,15231
  static bool classof(449,15428
class DIEnumerator 458,15675
  APInt Value;462,15768
  DIEnumerator(465,15914
  static DIEnumerator *getImpl(getImpl471,16174
  TempDIEnumerator cloneImpl(481,16739
  DEFINE_MDNODE_GET(486,16867
  const APInt &getValue(getValue501,17574
  bool isUnsigned(502,17624
  StringRef getName(503,17677
  MDString *getRawName(getRawName505,17738
  static bool classof(507,17808
class DIScope 518,18123
  DIScope(520,18166
  DIFile *getFile(getFile526,18353
  Metadata *getRawFile(getRawFile541,18935
  static bool classof(546,19103
class DIFile 572,19721
  enum ChecksumKind 581,20038
    CSK_MD5 586,20314
    CSK_SHA1 587,20331
    CSK_SHA256 588,20349
    CSK_Last 589,20369
  template <typename T> struct ChecksumInfo 593,20509
    ChecksumKind Kind;595,20608
    T Value;597,20673
    ChecksumInfo(599,20687
    bool operator==(operator==601,20793
    bool operator!=(operator!=604,20902
    StringRef getKindAsString(605,20980
  std::optional<ChecksumInfo<MDString *>> Checksum;609,21075
  MDString *Source;Source611,21175
  static DIFile *getImpl(getImpl618,21370
  TempDIFile cloneImpl(637,22388
  DEFINE_MDNODE_GET(643,22556
  StringRef getFilename(656,23179
  StringRef getDirectory(657,23243
  std::optional<ChecksumInfo<StringRef>> getChecksum(658,23308
  std::optional<StringRef> getSource(664,23564
  MDString *getRawFilename(getRawFilename669,23716
  MDString *getRawDirectory(getRawDirectory670,23789
  std::optional<ChecksumInfo<MDString *>> getRawChecksum(671,23863
  MDString *getRawSource(getRawSource674,23955
  static bool classof(679,24149
StringRef DIScope::getFilename(getFilename684,24247
StringRef DIScope::getDirectory(getDirectory690,24360
std::optional<StringRef> DIScope::getSource(getSource696,24475
class DIType 709,24798
  unsigned Line;710,24830
  DIFlags Flags;711,24847
  uint64_t SizeInBits;712,24864
  uint64_t OffsetInBits;713,24887
  DIType(716,24924
  void init(724,25271
  void mutate(734,25590
  TempDIType clone(742,25884
  unsigned getLine(746,25982
  uint64_t getSizeInBits(747,26026
  uint32_t getAlignInBits(748,26082
  uint32_t getAlignInBytes(749,26143
  uint64_t getOffsetInBits(750,26218
  DIFlags getFlags(751,26278
  DIScope *getScope(getScope753,26324
  StringRef getName(754,26401
  Metadata *getRawScope(getRawScope756,26462
  MDString *getRawName(getRawName757,26520
  TempDIType cloneWithFlags(760,26646
  bool isPrivate(766,26778
  bool isProtected(769,26869
  bool isPublic(772,26964
  bool isForwardDecl(775,27053
  bool isAppleBlockExtension(776,27119
  bool isVirtual(777,27196
  bool isArtificial(778,27258
  bool isObjectPointer(779,27326
  bool isObjcClassComplete(780,27400
  bool isVector(783,27488
  bool isBitField(784,27548
  bool isStaticMember(785,27612
  bool isLValueReference(786,27684
  bool isRValueReference(787,27762
  bool isTypePassByValue(788,27840
  bool isTypePassByReference(789,27918
  bool isBigEndian(792,28010
  bool isLittleEndian(793,28076
  bool getExportSymbols(794,28148
  static bool classof(796,28224
class DIBasicType 814,28632
  unsigned Encoding;818,28724
  DIBasicType(820,28746
  static DIBasicType *getImpl(getImpl828,29109
  TempDIBasicType cloneImpl(843,29943
  DEFINE_MDNODE_GET(849,30140
  unsigned getEncoding(868,31165
  enum class Signedness 870,31218
  enum class Signedness { Signed,870,31218
  enum class Signedness { Signed, Unsigned 870,31218
  static bool classof(876,31426
class DIStringType 882,31567
  unsigned Encoding;886,31660
  DIStringType(888,31682
  static DIStringType *getImpl(getImpl896,32038
  TempDIStringType cloneImpl(913,33090
  DEFINE_MDNODE_GET(921,33401
  static bool classof(943,34579
  DIVariable *getStringLength(getStringLength947,34680
  DIExpression *getStringLengthExp(getStringLengthExp951,34784
  DIExpression *getStringLocationExp(getStringLocationExp955,34898
  unsigned getEncoding(959,35016
  Metadata *getRawStringLength(getRawStringLength961,35069
  Metadata *getRawStringLengthExp(getRawStringLengthExp963,35135
  Metadata *getRawStringLocationExp(getRawStringLocationExp965,35204
class DIDerivedType 974,35470
  std::optional<unsigned> DWARFAddressSpace;980,35684
  DIDerivedType(982,35730
  getImpl(992,36253
  TempDIDerivedType cloneImpl(1011,37348
  DEFINE_MDNODE_GET(1019,37659
  DIType *getBaseType(getBaseType1042,38911
  Metadata *getRawBaseType(getRawBaseType1043,38992
  std::optional<unsigned> getDWARFAddressSpace(1047,39183
  Metadata *getExtraData(getExtraData1059,39662
  Metadata *getRawExtraData(getRawExtraData1060,39725
  DINodeArray getAnnotations(1063,39845
  Metadata *getRawAnnotations(getRawAnnotations1066,39943
  DIObjCProperty *getObjCProperty(getObjCProperty1072,40090
  static bool classof(1085,40367
class DICompositeType 1094,40625
  unsigned RuntimeLang;1098,40721
  DICompositeType(1100,40746
  void mutate(1110,41238
  getImpl(1120,41696
  TempDICompositeType cloneImpl(1146,43301
  DEFINE_MDNODE_GET(1157,43783
  DIType *getBaseType(getBaseType1227,47607
  DINodeArray getElements(1228,47688
  DIType *getVTableHolder(getVTableHolder1231,47780
  DITemplateParameterArray getTemplateParams(1234,47875
  StringRef getIdentifier(1237,47992
  unsigned getRuntimeLang(1238,48058
  Metadata *getRawBaseType(getRawBaseType1240,48117
  Metadata *getRawElements(getRawElements1241,48178
  Metadata *getRawVTableHolder(getRawVTableHolder1242,48239
  Metadata *getRawTemplateParams(getRawTemplateParams1243,48304
  MDString *getRawIdentifier(getRawIdentifier1244,48371
  Metadata *getRawDiscriminator(getRawDiscriminator1245,48446
  DIDerivedType *getDiscriminator(getDiscriminator1246,48512
  Metadata *getRawDataLocation(getRawDataLocation1249,48603
  DIVariable *getDataLocation(getDataLocation1250,48668
  DIExpression *getDataLocationExp(getDataLocationExp1253,48775
  Metadata *getRawAssociated(getRawAssociated1256,48889
  DIVariable *getAssociated(getAssociated1257,48953
  DIExpression *getAssociatedExp(getAssociatedExp1260,49056
  Metadata *getRawAllocated(getRawAllocated1263,49166
  DIVariable *getAllocated(getAllocated1264,49229
  DIExpression *getAllocatedExp(getAllocatedExp1267,49330
  Metadata *getRawRank(getRawRank1270,49438
  ConstantInt *getRankConst(getRankConst1271,49496
  DIExpression *getRankExp(getRankExp1276,49689
  Metadata *getRawAnnotations(getRawAnnotations1280,49788
  DINodeArray getAnnotations(1281,49853
  void replaceElements(1291,50183
  void replaceVTableHolder(1300,50454
  void replaceTemplateParams(1304,50551
  static bool classof(1309,50686
class DISubroutineType 1317,50889
  uint8_t CC;1323,51100
  static DISubroutineType *getImpl(getImpl1329,51278
  TempDISubroutineType cloneImpl(1340,51885
  DEFINE_MDNODE_GET(1345,52017
  TempDISubroutineType cloneWithCC(1354,52450
  uint8_t getCC(1360,52574
  DITypeRefArray getTypeArray(1362,52614
  Metadata *getRawTypeArray(getRawTypeArray1366,52712
  static bool classof(1368,52775
class DICompileUnit 1374,52901
  enum DebugEmissionKind 1379,53004
    NoDebug 1380,53042
    FullDebug,1381,53059
    LineTablesOnly,1382,53074
    DebugDirectivesOnly,1383,53094
    LastEmissionKind 1384,53119
  enum class DebugNameTableKind 1387,53168
    Default 1388,53213
    GNU 1389,53230
    None 1390,53243
    Apple 1391,53257
    LastDebugNameTableKind 1392,53272
  unsigned SourceLanguage;1401,53601
  unsigned RuntimeVersion;1402,53628
  uint64_t DWOId;1403,53655
  unsigned EmissionKind;1404,53673
  unsigned NameTableKind;1405,53698
  bool IsOptimized;1406,53724
  bool SplitDebugInlining;1407,53744
  bool DebugInfoForProfiling;1408,53771
  bool RangesBaseAddress;1409,53801
  getImpl(1419,54236
  TempDICompileUnit cloneImpl(1450,56109
  DEFINE_MDNODE_GET_DISTINCT_TEMPORARY(1464,56680
  unsigned getSourceLanguage(1497,58556
  bool isOptimized(1498,58620
  unsigned getRuntimeVersion(1499,58671
  DebugEmissionKind getEmissionKind(1500,58735
  bool isDebugDirectivesOnly(1503,58829
  bool getDebugInfoForProfiling(1506,58920
  DebugNameTableKind getNameTableKind(1507,58994
  bool getRangesBaseAddress(1510,59092
  StringRef getProducer(1511,59158
  StringRef getFlags(1512,59222
  StringRef getSplitDebugFilename(1513,59283
  DICompositeTypeArray getEnumTypes(1514,59357
  DIScopeArray getRetainedTypes(1517,59460
  DIGlobalVariableExpressionArray getGlobalVariables(1520,59563
  DIImportedEntityArray getImportedEntities(1523,59689
  DIMacroNodeArray getMacros(1526,59807
  uint64_t getDWOId(1529,59900
  void setDWOId(1530,59946
  bool getSplitDebugInlining(1531,59997
  void setSplitDebugInlining(1532,60065
  StringRef getSysRoot(1535,60176
  StringRef getSDK(1536,60239
  MDString *getRawProducer(getRawProducer1538,60300
  MDString *getRawFlags(getRawFlags1539,60373
  MDString *getRawSplitDebugFilename(getRawSplitDebugFilename1540,60443
  Metadata *getRawEnumTypes(getRawEnumTypes1543,60532
  Metadata *getRawRetainedTypes(getRawRetainedTypes1544,60594
  Metadata *getRawGlobalVariables(getRawGlobalVariables1545,60660
  Metadata *getRawImportedEntities(getRawImportedEntities1546,60728
  Metadata *getRawMacros(getRawMacros1547,60797
  MDString *getRawSysRoot(getRawSysRoot1548,60856
  MDString *getRawSDK(getRawSDK1549,60928
  void replaceEnumTypes(1557,61234
  void replaceRetainedTypes(1560,61324
  void replaceGlobalVariables(1561,61403
  void replaceImportedEntities(1564,61510
  void replaceMacros(1567,61608
  static bool classof(1570,61695
class DILocalScope 1580,61996
  DILocalScope(1582,62045
  static bool classof(1607,62984
class DISubprogram 1615,63232
  unsigned Line;1619,63331
  unsigned ScopeLine;1620,63348
  unsigned VirtualIndex;1621,63370
  int ThisAdjustment;1626,63564
  enum DISPFlags 1630,63630
#define HANDLE_DISP_FLAG(1631,63660
#define DISP_FLAG_LARGEST_NEEDED1632,63714
    SPFlagNonvirtual 1634,63785
    SPFlagVirtuality 1635,63820
    LLVM_MARK_AS_BITMASK_ENUM(1636,63878
    LLVM_MARK_AS_BITMASK_ENUM(SPFlagLargest)1636,63878
  DIFlags Flags;1656,64636
  DISPFlags SPFlags;1657,64653
  getImpl(1665,64950
  TempDISubprogram cloneImpl(1692,66591
  DEFINE_MDNODE_GET(1703,67130
  TempDISubprogram cloneWithFlags(1733,68829
  unsigned getLine(1740,68975
  unsigned getVirtuality(1741,69019
  unsigned getVirtualIndex(1742,69096
  int getThisAdjustment(1743,69156
  unsigned getScopeLine(1744,69215
  void setScopeLine(1745,69269
  DIFlags getFlags(1749,69352
  DISPFlags getSPFlags(1750,69397
  bool isLocalToUnit(1751,69448
  bool isDefinition(1752,69522
  bool isOptimized(1753,69594
  bool isMainSubprogram(1754,69664
  bool isArtificial(1756,69745
  bool isPrivate(1757,69813
  bool isProtected(1760,69904
  bool isPublic(1763,69999
  bool isExplicit(1766,70088
  bool isPrototyped(1767,70152
  bool areAllCallsDescribed(1768,70220
  bool isPure(1771,70309
  bool isElemental(1772,70369
  bool isRecursive(1773,70439
  bool isObjCDirect(1774,70509
  bool isDeleted(1780,70732
  bool isLValueReference(1786,70966
  bool isRValueReference(1792,71227
  bool isNoReturn(1797,71427
  bool isThunk(1802,71630
  DIScope *getScope(getScope1804,71689
  StringRef getName(1806,71767
  StringRef getLinkageName(1807,71827
  void replaceLinkageName(1809,71973
  DISubroutineType *getType(getType1811,72045
  DIType *getContainingType(getContainingType1814,72144
  void replaceType(1817,72243
  DICompileUnit *getUnit(getUnit1822,72384
  void replaceUnit(1825,72477
  DITemplateParameterArray getTemplateParams(1826,72546
  DISubprogram *getDeclaration(getDeclaration1829,72663
  void replaceDeclaration(1832,72768
  DINodeArray getRetainedNodes(1833,72847
  DITypeArray getThrownTypes(1836,72949
  DINodeArray getAnnotations(1839,73047
  StringRef getTargetFuncName(1842,73145
  Metadata *getRawScope(getRawScope1846,73264
  MDString *getRawName(getRawName1847,73322
  MDString *getRawLinkageName(getRawLinkageName1848,73391
  Metadata *getRawType(getRawType1849,73467
  Metadata *getRawUnit(getRawUnit1850,73524
  Metadata *getRawDeclaration(getRawDeclaration1851,73581
  Metadata *getRawRetainedNodes(getRawRetainedNodes1852,73645
  Metadata *getRawContainingType(getRawContainingType1853,73711
  Metadata *getRawTemplateParams(getRawTemplateParams1856,73829
  Metadata *getRawThrownTypes(getRawThrownTypes1859,73947
  Metadata *getRawAnnotations(getRawAnnotations1862,74064
  MDString *getRawTargetFuncName(getRawTargetFuncName1865,74181
  void replaceRawLinkageName(1869,74302
  void replaceRetainedNodes(1872,74400
  static bool classof(1881,74651
class DILocation 1893,74938
  ~DILocation(1899,75170
  static DILocation *getImpl(getImpl1905,75487
  TempDILocation cloneImpl(1914,75960
  DEFINE_MDNODE_GET(1925,76372
  unsigned getLine(1938,76998
  unsigned getColumn(1939,77052
  DILocalScope *getScope(getScope1940,77108
  StringRef getSubprogramLinkageName(1944,77309
  DILocation *getInlinedAt(getInlinedAt1954,77549
  bool isImplicitCode(1964,78031
  void setImplicitCode(1965,78087
  DIFile *getFile(getFile1967,78164
  StringRef getFilename(1968,78224
  StringRef getDirectory(1969,78294
  std::optional<StringRef> getSource(1970,78366
  DILocalScope *getInlinedAtScope(getInlinedAtScope1976,78592
  inline static bool isPseudoProbeDiscriminator(2026,81148
  static unsigned getMaskedDiscriminator(2082,83938
  static unsigned getBaseDiscriminatorBits(2087,84093
  getBaseDiscriminatorFromDiscriminator(2091,84264
  static unsigned getDuplicationFactorFromDiscriminator(2128,86012
  static unsigned getCopyIdentifierFromDiscriminator(2139,86355
  Metadata *getRawScope(getRawScope2144,86547
  Metadata *getRawInlinedAt(getRawInlinedAt2145,86605
  static bool classof(2151,86727
class DILexicalBlockBase 2156,86829
  DILocalScope *getScope(getScope2163,87052
  Metadata *getRawScope(getRawScope2165,87132
  void replaceScope(2167,87191
  static bool classof(2172,87286
class DILexicalBlock 2181,87524
  uint16_t Column;2185,87631
  DILexicalBlock(2187,87651
  static DILexicalBlock *getImpl(getImpl2196,87994
  TempDILexicalBlock cloneImpl(2209,88671
  DEFINE_MDNODE_GET(2215,88835
  unsigned getLine(2226,89286
  unsigned getColumn(2227,89340
  static bool classof(2229,89389
class DILexicalBlockFile 2234,89495
  DILexicalBlockFile(2238,89606
  static DILexicalBlockFile *getImpl(getImpl2245,89881
  TempDILexicalBlockFile cloneImpl(2259,90608
  DEFINE_MDNODE_GET(2265,90772
  unsigned getDiscriminator(2274,91199
  static bool classof(2276,91263
unsigned DILocation::getDiscriminator(getDiscriminator2281,91373
DILocation::cloneWithDiscriminator(cloneWithDiscriminator2288,91547
unsigned DILocation::getBaseDiscriminator(getBaseDiscriminator2304,92303
unsigned DILocation::getDuplicationFactor(getDuplicationFactor2309,92496
unsigned DILocation::getCopyIdentifier(getCopyIdentifier2313,92619
DILocation::cloneWithBaseDiscriminator(cloneWithBaseDiscriminator2318,92770
DILocation::cloneByMultiplyingDuplicationFactor(cloneByMultiplyingDuplicationFactor2337,93260
class DINamespace 2360,94116
  static DINamespace *getImpl(getImpl2368,94356
  TempDINamespace cloneImpl(2378,94917
  DEFINE_MDNODE_GET(2384,95074
  bool getExportSymbols(2393,95449
  DIScope *getScope(getScope2394,95507
  StringRef getName(2395,95584
  Metadata *getRawScope(getRawScope2397,95645
  MDString *getRawName(getRawName2398,95703
  static bool classof(2400,95773
class DIModule 2409,96049
  static DIModule *getImpl(getImpl2417,96287
  TempDIModule cloneImpl(2434,97349
  DEFINE_MDNODE_GET(2441,97607
  DIScope *getScope(getScope2458,98473
  StringRef getName(2459,98550
  StringRef getConfigurationMacros(2460,98610
  StringRef getIncludePath(2461,98685
  StringRef getAPINotesFile(2462,98752
  unsigned getLineNo(2463,98820
  bool getIsDecl(2464,98876
  Metadata *getRawScope(getRawScope2466,98928
  MDString *getRawName(getRawName2467,98986
  MDString *getRawConfigurationMacros(getRawConfigurationMacros2468,99055
  MDString *getRawIncludePath(getRawIncludePath2471,99145
  MDString *getRawAPINotesFile(getRawAPINotesFile2472,99221
  static bool classof(2474,99299
class DITemplateParameter 2482,99485
  DITemplateParameter(2484,99540
  StringRef getName(2492,99825
  DIType *getType(getType2493,99885
  MDString *getRawName(getRawName2495,99959
  Metadata *getRawType(getRawType2496,100028
  bool isDefault(2497,100085
  static bool classof(2499,100137
class DITemplateTypeParameter 2505,100318
  static DITemplateTypeParameter *getImpl(getImpl2513,100614
  TempDITemplateTypeParameter cloneImpl(2525,101315
  DEFINE_MDNODE_GET(2530,101452
  static bool classof(2539,101841
class DITemplateValueParameter 2544,101956
  DITemplateValueParameter(2548,102074
  static DITemplateValueParameter *getImpl(getImpl2555,102424
  TempDITemplateValueParameter cloneImpl(2569,103293
  DEFINE_MDNODE_GET(2575,103477
  Metadata *getValue(getValue2586,103996
  static bool classof(2588,104052
class DIVariable 2596,104245
  unsigned Line;2597,104280
  unsigned getLine(2605,104487
  DIScope *getScope(getScope2606,104531
  StringRef getName(2607,104608
  DIFile *getFile(getFile2608,104668
  DIType *getType(getType2609,104741
  uint32_t getAlignInBits(2610,104814
  uint32_t getAlignInBytes(2611,104875
  std::optional<DIBasicType::Signedness> getSignedness(2617,105170
  StringRef getFilename(2623,105352
  StringRef getDirectory(2629,105466
  std::optional<StringRef> getSource(2635,105582
  Metadata *getRawScope(getRawScope2641,105717
  MDString *getRawName(getRawName2642,105775
  Metadata *getRawFile(getRawFile2643,105844
  Metadata *getRawType(getRawType2644,105901
  static bool classof(2646,105959
class DIExpression 2661,106498
  std::vector<uint64_t> Elements;2665,106591
  DIExpression(2667,106626
  TempDIExpression cloneImpl(2676,107044
  DEFINE_MDNODE_GET(2681,107150
  ArrayRef<uint64_t> getElements(2685,107286
  unsigned getNumElements(2687,107349
  uint64_t getElement(2689,107412
  enum SignedOrUnsignedConstant 2694,107540
  enum SignedOrUnsignedConstant { SignedConstant,2694,107540
  enum SignedOrUnsignedConstant { SignedConstant, UnsignedConstant 2694,107540
  using element_iterator 2709,108251
  element_iterator elements_begin(2711,108309
  element_iterator elements_end(2712,108385
  class ExprOperand 2718,108619
    explicit ExprOperand(2723,108715
    const uint64_t *get(get2725,108773
    uint64_t getOp(2728,108851
    uint64_t getArg(2733,108985
    unsigned getNumArgs(2735,109046
    void appendToVector(2743,109302
  class expr_op_iterator 2749,109461
    ExprOperand Op;2750,109488
    explicit expr_op_iterator(2760,109759
    element_iterator getBase(2762,109821
    const ExprOperand &operator*(operator*2763,109879
    const ExprOperand *operator->(operator->2764,109935
    expr_op_iterator &operator++(operator++2766,109994
    expr_op_iterator operator++(2770,110076
    expr_op_iterator getNext(2781,110422
    bool operator==(operator==2783,110498
    bool operator!=(operator!=2786,110598
    void increment(2791,110710
  expr_op_iterator expr_op_begin(2802,111062
  expr_op_iterator expr_op_end(2805,111156
  iterator_range<expr_op_iterator> expr_ops(2808,111246
  static bool classof(2815,111384
  struct FragmentInfo 2826,111743
    FragmentInfo(2828,111797
    uint64_t SizeInBits;2830,111922
    uint64_t OffsetInBits;2831,111947
    uint64_t startInBits(2833,112033
    uint64_t endInBits(2836,112228
    static DIExpression::FragmentInfo intersect(2839,112364
  std::optional<FragmentInfo> getFragmentInfo(2854,113076
  bool isFragment(2859,113260
  enum PrependOps 2947,118052
    ApplyOffset 2948,118082
    DerefBefore 2949,118103
    DerefAfter 2950,118129
    StackValue 2951,118154
    EntryValue 2952,118179
  static int fragmentCmp(3015,121521
  using ExtOps 3028,121840
  static bool fragmentsOverlap(3039,122363
  int fragmentCmp(3045,122629
  bool fragmentsOverlap(3052,122895
  std::pair<std::pair3065,123423
inline bool operator==(operator==3069,123515
inline bool operator<(3075,123740
template <> struct DenseMapInfo<DenseMapInfo3081,123962
  using FragInfo 3082,124024
  static const uint64_t MaxVal 3083,124071
  static inline FragInfo getEmptyKey(3085,124143
  static inline FragInfo getTombstoneKey(3087,124212
  static unsigned getHashValue(3089,124293
  static bool isEqual(3093,124429
class DIGlobalVariable 3099,124596
  bool IsLocalToUnit;3103,124697
  bool IsDefinition;3104,124719
  DIGlobalVariable(3106,124741
  getImpl(3114,125145
  TempDIGlobalVariable cloneImpl(3134,126308
  DEFINE_MDNODE_GET(3143,126697
  bool isLocalToUnit(3162,127733
  bool isDefinition(3163,127788
  StringRef getDisplayName(3164,127841
  StringRef getLinkageName(3165,127908
  DIDerivedType *getStaticDataMemberDeclaration(getStaticDataMemberDeclaration3166,127975
  DINodeArray getAnnotations(3169,128114
  MDString *getRawLinkageName(getRawLinkageName3173,128213
  Metadata *getRawStaticDataMemberDeclaration(getRawStaticDataMemberDeclaration3174,128289
  Metadata *getRawTemplateParams(getRawTemplateParams3175,128369
  MDTuple *getTemplateParams(getTemplateParams3176,128436
  Metadata *getRawAnnotations(getRawAnnotations3177,128510
  static bool classof(3179,128575
class DICommonBlock 3187,128754
  static DICommonBlock *getImpl(getImpl3194,128969
  TempDICommonBlock cloneImpl(3206,129675
  DEFINE_MDNODE_GET(3212,129849
  DIScope *getScope(getScope3223,130346
  DIGlobalVariable *getDecl(getDecl3224,130423
  StringRef getName(3227,130522
  DIFile *getFile(getFile3228,130582
  unsigned getLineNo(3229,130655
  Metadata *getRawScope(getRawScope3231,130712
  Metadata *getRawDecl(getRawDecl3232,130770
  MDString *getRawName(getRawName3233,130827
  Metadata *getRawFile(getRawFile3234,130896
  static bool classof(3236,130954
class DILocalVariable 3244,131109
  unsigned Arg 3248,131209
  DIFlags Flags;3249,131230
  DILocalVariable(3251,131248
  static DILocalVariable *getImpl(getImpl3260,131646
  TempDILocalVariable cloneImpl(3277,132701
  DEFINE_MDNODE_GET(3284,132957
  DILocalScope *getScope(getScope3302,133858
  bool isParameter(3306,133953
  unsigned getArg(3307,133996
  DIFlags getFlags(3308,134038
  DINodeArray getAnnotations(3310,134084
  Metadata *getRawAnnotations(getRawAnnotations3313,134182
  bool isArtificial(3315,134247
  bool isObjectPointer(3316,134315
  bool isValidLocationForIntrinsic(3323,134639
  static bool classof(3327,134790
class DILabel 3335,134955
  static DILabel *getImpl(getImpl3343,135167
  TempDILabel cloneImpl(3353,135721
  DEFINE_MDNODE_GET(3359,135876
  DILocalScope *getScope(getScope3373,136395
  unsigned getLine(3376,136488
  StringRef getName(3377,136542
  DIFile *getFile(getFile3378,136602
  Metadata *getRawScope(getRawScope3380,136676
  MDString *getRawName(getRawName3381,136734
  Metadata *getRawFile(getRawFile3382,136803
  bool isValidLocationForIntrinsic(3389,137107
  static bool classof(3393,137258
class DIObjCProperty 3398,137357
  unsigned Line;3402,137452
  unsigned Attributes;3403,137469
  getImpl(3410,137685
  TempDIObjCProperty cloneImpl(3424,138540
  DEFINE_MDNODE_GET(3431,138776
  unsigned getLine(3446,139496
  unsigned getAttributes(3447,139540
  StringRef getName(3448,139596
  DIFile *getFile(getFile3449,139656
  StringRef getGetterName(3450,139729
  StringRef getSetterName(3451,139795
  DIType *getType(getType3452,139861
  StringRef getFilename(3454,139935
  StringRef getDirectory(3460,140049
  MDString *getRawName(getRawName3466,140165
  Metadata *getRawFile(getRawFile3467,140234
  MDString *getRawGetterName(getRawGetterName3468,140291
  MDString *getRawSetterName(getRawSetterName3469,140366
  Metadata *getRawType(getRawType3470,140441
  static bool classof(3472,140499
class DIImportedEntity 3480,140709
  DIImportedEntity(3484,140806
  static DIImportedEntity *getImpl(getImpl3491,141062
  TempDIImportedEntity cloneImpl(3505,141845
  DEFINE_MDNODE_GET(3511,142047
  unsigned getLine(3524,142708
  DIScope *getScope(getScope3525,142762
  DINode *getEntity(getEntity3526,142839
  StringRef getName(3527,142916
  DIFile *getFile(getFile3528,142976
  DINodeArray getElements(3529,143049
  Metadata *getRawScope(getRawScope3533,143142
  Metadata *getRawEntity(getRawEntity3534,143200
  MDString *getRawName(getRawName3535,143259
  Metadata *getRawFile(getRawFile3536,143328
  Metadata *getRawElements(getRawElements3537,143385
  static bool classof(3539,143447
class DIGlobalVariableExpression 3545,143604
  DIGlobalVariableExpression(3549,143711
  TempDIGlobalVariableExpression cloneImpl(3558,144114
  DEFINE_MDNODE_GET(3563,144251
  Metadata *getRawVariable(getRawVariable3569,144481
  DIGlobalVariable *getVariable(getVariable3571,144543
  Metadata *getRawExpression(getRawExpression3575,144651
  DIExpression *getExpression(getExpression3577,144715
  static bool classof(3581,144811
class DIMacroNode 3594,145232
  DIMacroNode(3599,145335
  template <class Ty> Ty *getOperandAs(getOperandAs3608,145651
  StringRef getStringOperand(3612,145759
  static MDString *getCanonicalMDString(getCanonicalMDString3618,145911
  unsigned getMacinfoType(3625,146080
  static bool classof(3627,146142
class DIMacro 3641,146392
  DIMacro(3645,146485
  static DIMacro *getImpl(getImpl3652,146716
  TempDIMacro cloneImpl(3662,147308
  DEFINE_MDNODE_GET(3668,147470
  unsigned getLine(3679,147901
  StringRef getName(3681,147956
  StringRef getValue(3682,148016
  MDString *getRawName(getRawName3684,148078
  MDString *getRawValue(getRawValue3685,148147
  static bool classof(3687,148218
class DIMacroFile 3695,148379
  DIMacroFile(3699,148476
  static DIMacroFile *getImpl(getImpl3706,148723
  TempDIMacroFile cloneImpl(3718,149353
  DEFINE_MDNODE_GET(3724,149522
  void replaceElements(3735,149977
  unsigned getLine(3744,150266
  DIFile *getFile(getFile3745,150320
  DIMacroNodeArray getElements(3747,150394
  Metadata *getRawFile(getRawFile3751,150492
  Metadata *getRawElements(getRawElements3752,150549
  static bool classof(3754,150611
class DIArgList 3761,150799
  using iterator 3764,150932
  SmallVector<SmallVector3766,150998
  SmallVector<ValueAsMetadata *, 4> Args;3766,150998
  DIArgList(3768,151041
  ~DIArgList(3773,151243
  ArrayRef<ValueAsMetadata *> getArgs(3782,151439
  iterator args_begin(3784,151503
  iterator args_end(3785,151552
  static bool classof(3787,151598
  SmallVector<DPValue *> getAllDPValueUsers(3791,151696
class DebugVariable 3809,152514
  using FragmentInfo 3810,152536
  const DILocalVariable *Variable;Variable3812,152588
  std::optional<FragmentInfo> Fragment;3813,152623
  const DILocation *InlinedAt;InlinedAt3814,152663
  static const FragmentInfo DefaultFragment;3818,152803
  DebugVariable(3824,152945
  DebugVariable(3829,153164
  const DILocalVariable *getVariable(getVariable3835,153406
  std::optional<FragmentInfo> getFragment(3836,153472
  const DILocation *getInlinedAt(getInlinedAt3837,153543
  FragmentInfo getFragmentOrDefault(3839,153607
  static bool isDefaultFragment(3843,153705
  bool operator==(operator==3847,153799
  bool operator<(3852,153982
template <> struct DenseMapInfo<DenseMapInfo3858,154166
  using FragmentInfo 3859,154215
  static inline DebugVariable getEmptyKey(3862,154340
  static inline DebugVariable getTombstoneKey(3867,154515
  static unsigned getHashValue(3871,154624
  static bool isEqual(3880,154920
class DebugVariableAggregate 3887,155117
  DebugVariableAggregate(3890,155238
struct DenseMapInfo<DenseMapInfo3895,155377
#undef DEFINE_MDNODE_GET_UNPACK_IMPL3899,155491
#undef DEFINE_MDNODE_GET_UNPACK3900,155528
#undef DEFINE_MDNODE_GET3901,155560

/usr/include/llvm/IR/DebugProgramInstruction.h,2515
#define LLVM_IR_DEBUGPROGRAMINSTRUCTION_H48,2249
class DPValue 77,3174
  DILocalVariable *Variable;Variable84,3471
  DIExpression *Expression;Expression85,3500
  DebugLoc DbgLoc;86,3528
  DIExpression *AddressExpression;AddressExpression87,3547
  void deleteInstr(90,3591
  const BasicBlock *getParent(getParent92,3614
  DPValue *getPrevNode(getPrevNode99,3819
  enum class LocationType 104,4011
    Declare,105,4039
    Value,106,4052
    Assign,107,4063
    End,109,4076
    Any,110,4127
  LocationType Type;115,4405
  class location_op_iterator158,6804
    PointerUnion<PointerUnion161,6971
    PointerUnion<ValueAsMetadata *, ValueAsMetadata **> I;161,6971
    location_op_iterator(164,7041
    location_op_iterator(165,7114
    location_op_iterator(167,7187
    location_op_iterator &operator=(operator=168,7255
    bool operator==(operator==172,7365
    const Value *operator*(operator*175,7457
    Value *operator*(operator*181,7713
    location_op_iterator &operator++(operator++187,7956
    location_op_iterator &operator--(operator--194,8160
  bool isDbgDeclare(203,8370
  bool isDbgValue(204,8434
  void setVariable(222,9286
  void setExpression(224,9354
  bool hasArgList(228,9472
  bool hasValidLocation(230,9621
  bool isAddressOfVariable(234,9847
  LocationType getType(235,9924
  DebugLoc getDebugLoc(237,9973
  void setDebugLoc(238,10023
  DILocalVariable *getVariable(getVariable243,10144
  DIExpression *getExpression(getExpression245,10205
  Metadata *getRawLocation(getRawLocation251,10538
  Value *getValue(getValue253,10601
  void setRawLocation(260,10877
  bool isEquivalentTo(272,11329
  bool isIdenticalToWhenDefined(279,11681
  bool isDbgAssign(287,11951
  Metadata *getRawAddress(getRawAddress290,12054
  Metadata *getRawAssignID(getRawAssignID293,12154
  DIExpression *getAddressExpression(getAddressExpression295,12251
  void setAddressExpression(296,12326
  void setAddress(300,12453
  void setMarker(317,13259
  DPMarker *getMarker(getMarker319,13306
  const DPMarker *getMarker(getMarker320,13349
class DPMarker 366,15302
  DPMarker(368,15327
  Instruction *MarkedInstr MarkedInstr371,15489
  simple_ilist<DPValue> StoredDPValues;378,15865
  bool empty(379,15905
  static DPMarker EmptyDPMarker;440,19057
  static iterator_range<simple_ilist<DPValue>::iterator> getEmptyDPValueRange(441,19090
inline raw_ostream &operator<<(operator<<446,19274
inline raw_ostream &operator<<(operator<<451,19384

/usr/include/llvm/IR/DerivedTypes.h,6025
#define LLVM_IR_DERIVEDTYPES_H18,770
class IntegerType 40,1329
  explicit IntegerType(44,1407
    MIN_INT_BITS 51,1612
    MAX_INT_BITS 52,1691
  static IntegerType *get(get64,2381
  IntegerType *getExtendedType(getExtendedType67,2492
  unsigned getBitWidth(72,2656
  uint64_t getBitMask(76,2876
  uint64_t getSignBit(82,3091
  static bool classof(92,3446
unsigned Type::getIntegerBitWidth(getIntegerBitWidth97,3535
class FunctionType 103,3673
  bool isVarArg(123,4419
  Type *getReturnType(getReturnType124,4476
  using param_iterator 126,4535
  param_iterator param_begin(128,4585
  param_iterator param_end(129,4651
  ArrayRef<Type *> params(130,4729
  Type *getParamType(getParamType135,4851
  unsigned getNumParams(142,5106
  static bool classof(145,5243
bool Type::isFunctionVarArg(isFunctionVarArg152,5465
Type *Type::getFunctionParamType(getFunctionParamType156,5553
unsigned Type::getFunctionNumParams(getFunctionNumParams160,5661
class FunctionCallee 168,6059
public:public169,6082
      : FnTy(Fn ? Fn->getFunctionType() : nullptr), Callee(174,6296
  FunctionCallee(176,6363
  FunctionCallee(181,6511
  FunctionType *getFunctionType(getFunctionType185,6579
  Value *getCallee(getCallee187,6631
  explicit operator bool(operator bool189,6672
  FunctionType *FnTy FnTy192,6728
  Value *Callee Callee193,6760
class StructType 216,7904
  StructType(217,7937
    SCDB_HasBody 221,8057
    SCDB_Packed 222,8079
    SCDB_IsLiteral 223,8100
    SCDB_IsSized 224,8124
    SCDB_ContainsScalableVector 225,8146
    SCDB_NotContainsScalableVector 226,8184
  void *SymbolTableEntry SymbolTableEntry233,8487
  static std::enable_if_t<std::enable_if_t250,9218
  create(251,9292
  static std::enable_if_t<std::enable_if_t267,10053
  get(268,10127
  bool isPacked(278,10517
  bool isLiteral(282,10704
  bool isOpaque(286,10914
  bool hasName(304,11747
  std::enable_if_t<std::enable_if_t319,12350
  setBody(320,12409
  using element_iterator 329,12734
  element_iterator element_begin(331,12786
  element_iterator element_end(332,12852
  ArrayRef<Type *> elements(333,12933
  unsigned getNumElements(341,13188
  Type *getElementType(getElementType342,13250
  Type *getTypeAtIndex(getTypeAtIndex348,13512
  bool indexValid(350,13624
  static bool classof(353,13770
StringRef Type::getStructName(getStructName358,13858
unsigned Type::getStructNumElements(getStructNumElements362,13945
Type *Type::getStructElementType(getStructElementType366,14045
class ArrayType 371,14189
  Type *ContainedType;ContainedType373,14258
  uint64_t NumElements;375,14320
  uint64_t getNumElements(383,14491
  Type *getElementType(getElementType384,14549
  static bool classof(393,14933
uint64_t Type::getArrayNumElements(getArrayNumElements398,15020
class VectorType 403,15158
  Type *ContainedType;ContainedType418,15851
  const unsigned ElementQuantity;428,16314
  Type *getElementType(getElementType436,16515
  static VectorType *get(get441,16708
  static VectorType *get(get447,16931
  static VectorType *getInteger(getInteger454,17266
  static VectorType *getExtendedElementVectorType(getExtendedElementVectorType463,17716
  static VectorType *getTruncatedElementVectorType(getTruncatedElementVectorType472,18219
  static VectorType *getSubdividedVectorType(getSubdividedVectorType497,19212
  static VectorType *getHalfElementsVectorType(getHalfElementsVectorType507,19604
  static VectorType *getDoubleElementsVectorType(getDoubleElementsVectorType517,20050
  static bool classof(532,20684
class FixedVectorType 539,20876
  FixedVectorType(541,20931
  static FixedVectorType *get(get547,21111
  static FixedVectorType *getInteger(getInteger551,21249
  static FixedVectorType *getExtendedElementVectorType(getExtendedElementVectorType555,21378
  static FixedVectorType *getTruncatedElementVectorType(getTruncatedElementVectorType559,21543
  static FixedVectorType *getSubdividedVectorType(getSubdividedVectorType564,21719
  static FixedVectorType *getHalfElementsVectorType(getHalfElementsVectorType570,21961
  static FixedVectorType *getDoubleElementsVectorType(getDoubleElementsVectorType574,22120
  static bool classof(578,22283
  unsigned getNumElements(582,22373
class ScalableVectorType 586,22484
  ScalableVectorType(588,22542
  static ScalableVectorType *get(get594,22740
  static ScalableVectorType *getInteger(getInteger599,22920
  getExtendedElementVectorType(604,23088
  getTruncatedElementVectorType(610,23274
  static ScalableVectorType *getSubdividedVectorType(getSubdividedVectorType615,23432
  getHalfElementsVectorType(622,23716
  getDoubleElementsVectorType(627,23887
  uint64_t getMinNumElements(634,24186
  static bool classof(636,24252
inline ElementCount VectorType::getElementCount(getElementCount641,24348
class PointerType 646,24518
  static PointerType *getUnqual(getUnqual662,25173
  static PointerType *getUnqual(getUnqual668,25386
  inline unsigned getAddressSpace(679,25771
  static bool classof(682,25914
Type *Type::getExtendedType(getExtendedType687,26003
Type *Type::getWithNewType(getWithNewType697,26357
Type *Type::getWithNewBitWidth(getWithNewBitWidth703,26529
unsigned Type::getPointerAddressSpace(getPointerAddressSpace710,26777
class TargetExtType 720,27195
  StringRef Name;725,27402
  unsigned *IntParams;IntParams726,27420
  StringRef getName(741,28045
  ArrayRef<Type *> type_params(745,28229
  using type_param_iterator 749,28334
  type_param_iterator type_param_begin(750,28388
  type_param_iterator type_param_end(751,28460
  Type *getTypeParameter(getTypeParameter755,28555
  unsigned getNumTypeParameters(756,28630
  ArrayRef<unsigned> int_params(760,28847
  unsigned getIntParameter(764,28949
  unsigned getNumIntParameters(765,29019
  enum Property 767,29089
    HasZeroInit 769,29172
    CanBeGlobal 771,29269
  static bool classof(784,29828
StringRef Type::getTargetExtName(getTargetExtName787,29913

/usr/include/llvm/IR/DiagnosticHandler.h,238
#define LLVM_IR_DIAGNOSTICHANDLER_H13,598
struct DiagnosticHandler 24,949
  DiagnosticHandler(27,1039
  virtual bool handleDiagnostics(43,1817
  virtual bool isAnalysisRemarkEnabled(53,2110
  virtual bool isAnyRemarkEnabled(71,2883

/usr/include/llvm/IR/Dominators.h,2129
#define LLVM_IR_DOMINATORS_H15,588
namespace DomTreeBuilder 52,1603
using DomTreeNode 92,3563
class BasicBlockEdge 94,3613
  const BasicBlock *Start;Start95,3636
  const BasicBlock *End;End96,3663
  BasicBlockEdge(99,3697
  BasicBlockEdge(102,3799
  BasicBlockEdge(105,3915
  const BasicBlock *getStart(getStart108,4043
  const BasicBlock *getEnd(getEnd112,4105
template <> struct DenseMapInfo<DenseMapInfo120,4256
  using BBInfo 121,4306
  static inline BasicBlockEdge getEmptyKey(125,4416
  static inline BasicBlockEdge getTombstoneKey(129,4541
  static unsigned getHashValue(133,4678
  static bool isEqual(138,4869
class DominatorTree 162,6157
  using Base 164,6234
  explicit DominatorTree(167,6317
  explicit DominatorTree(168,6375
  using Base::dominates;177,6691
  using Base::isReachableFromEntry;213,8415
  using Base::findNearestCommonDominator;219,8585
template <class Node, class ChildIterator> struct DomTreeGraphTraitsBase 235,9227
  using NodeRef 236,9302
  using ChildIteratorType 237,9328
  using nodes_iterator 238,9371
  static NodeRef getEntryNode(240,9450
  static ChildIteratorType child_begin(241,9505
  static ChildIteratorType child_end(242,9578
  static nodes_iterator nodes_begin(244,9648
  static nodes_iterator nodes_end(248,9740
struct GraphTraits<GraphTraits252,9837
struct GraphTraits<GraphTraits257,9967
template <> struct GraphTraits<GraphTraits261,10132
  static NodeRef getEntryNode(263,10218
  static nodes_iterator nodes_begin(265,10298
  static nodes_iterator nodes_end(269,10397
class DominatorTreeAnalysis 275,10548
  static AnalysisKey Key;277,10679
  using Result 281,10771
class DominatorTreePrinterPass288,10986
  raw_ostream &OS;OS290,11072
  static bool isRequired(297,11223
struct DominatorTreeVerifierPass 301,11315
  static bool isRequired(303,11460
class DominatorTreeWrapperPass 313,11793
  DominatorTree DT;314,11848
  static char ID;317,11877
  DominatorTree &getDomTree(getDomTree321,11927
  const DominatorTree &getDomTree(getDomTree322,11972
  void getAnalysisUsage(328,12116
  void releaseMemory(332,12207

/usr/include/llvm/IR/FMF.h,876
#define LLVM_IR_FMF_H14,521
class FastMathFlags 20,656
  FastMathFlags(26,742
    AllowReassoc 40,1335
    NoNaNs 41,1367
    NoInfs 42,1399
    NoSignedZeros 43,1431
    AllowReciprocal 44,1463
    AllowContract 45,1495
    ApproxFunc 46,1527
  static FastMathFlags getFast(51,1594
  bool any(57,1692
  bool none(58,1734
  bool all(59,1777
  void clear(61,1822
  void set(62,1852
  bool allowReassoc(65,1904
  bool noNaNs(66,1975
  bool noInfs(67,2040
  bool noSignedZeros(68,2105
  bool allowReciprocal(69,2177
  bool allowContract(70,2251
  bool approxFunc(71,2323
  bool isFast(73,2429
  void setAllowReassoc(76,2498
  void setNoNaNs(79,2598
  void setNoInfs(82,2680
  void setNoSignedZeros(85,2762
  void setAllowReciprocal(88,2865
  void setAllowContract(91,2974
  void setApproxFunc(94,3077
  void setFast(97,3171
  void print(110,3542

/usr/include/llvm/IR/Function.h,5448
#define LLVM_IR_FUNCTION_H18,709
typedef unsigned ID;44,1365
public:public63,1799
  using 64,1807
  using BasicBlockListType 64,1807
  using 67,1895
  using iterator 67,1895
  using 68,1944
  using const_iterator 68,1944
  using 70,2006
  using arg_iterator 70,2006
  using 71,2041
  using const_arg_iterator 71,2041
private:private73,2089
  BasicBlockListType 75,2145
  BasicBlockListType BasicBlocks;75,2145
  mutable 76,2209
  mutable Argument 76,2209
  mutable Argument *Arguments Arguments76,2209
  size_t 77,2277
  size_t NumArgs;77,2277
  std::unique_ptr<std::unique_ptr78,2295
  std::unique_ptr<ValueSymbolTable>ValueSymbolTable78,2295
      SymTab;79,2331
  AttributeList 80,2412
  AttributeList AttributeSets;80,2412
    IsMaterializableBit 97,2859
  bool IsNewDbgInfoFormat;106,3121
  bool hasLazyArguments(112,3414
  static constexpr LibFunc UnknownLibFunc 127,3755
  mutable LibFunc LibFuncCache 132,4025
  void CheckLazyArguments(134,4075
  const Function &getFunction(getFunction160,4863
  static Function *Create(Create162,4920
  static Function *Create(Create169,5239
  FunctionType *getFunctionType(getFunctionType200,6573
  Type *getReturnType(getReturnType205,6706
  bool isVarArg(213,7004
  bool isMaterializable(215,7071
  void setIsMaterializable(218,7180
  Intrinsic::ID getIntrinsicID(230,7806
  bool isIntrinsic(235,8071
  CallingConv::ID getCallingConv(262,9369
  void setCallingConv(266,9553
  enum ProfileCountType 272,9797
  enum ProfileCountType { PCT_Real,272,9797
  enum ProfileCountType { PCT_Real, PCT_Synthetic 272,9797
  class ProfileCount 277,9966
    ProfileCount(283,10072
    uint64_t getCount(285,10163
    ProfileCountType getType(286,10211
    bool isSynthetic(287,10264
  bool hasProfileData(314,11487
  bool hasGC(330,12158
  AttributeList getAttributes(338,12371
  void setAttributes(341,12484
  MaybeAlign getFnStackAlign(446,16524
  MaybeAlign getParamAlign(461,17068
  MaybeAlign getParamStackAlign(465,17175
  Type *getParamByValType(getParamByValType470,17338
  Type *getParamStructRetType(getParamStructRetType475,17489
  Type *getParamInAllocaType(getParamInAllocaType480,17652
  Type *getParamByRefType(getParamByRefType485,17810
  Type *getParamPreallocatedType(getParamPreallocatedType490,17969
  uint64_t getParamDereferenceableBytes(496,18234
  uint64_t getParamDereferenceableOrNullBytes(503,18512
  FPClassTest getParamNoFPClass(508,18710
  bool isPresplitCoroutine(513,18877
  void setPresplitCoroutine(516,18975
  void setSplittedCoroutine(517,19050
  bool isCoroOnlyDestroyWhenComplete(519,19129
  void setCoroDestroyOnlyWhenComplete(522,19247
  bool doesNotReturn(557,20470
  void setDoesNotReturn(560,20553
  bool doesNoCfCheck(565,20699
  bool doesNotThrow(568,20825
  void setDoesNotThrow(571,20907
  bool cannotDuplicate(576,21025
  void setCannotDuplicate(579,21113
  bool isConvergent(584,21230
  void setConvergent(587,21314
  void setNotConvergent(590,21381
  bool isSpeculatable(595,21500
  void setSpeculatable(598,21588
  bool doesNotFreeMemory(603,21713
  void setDoesNotFreeMemory(606,21819
  bool hasNoSync(611,21952
  void setNoSync(614,22029
  bool doesNotRecurse(620,22176
  void setDoesNotRecurse(623,22261
  bool mustProgress(628,22402
  void setMustProgress(632,22540
  bool willReturn(635,22651
  void setWillReturn(636,22727
  UWTableKind getUWTableKind(639,22862
  bool hasUWTable(645,23051
  void setUWTableKind(648,23133
  bool needsUnwindTableEntry(652,23290
  bool hasStructRetAttr(658,23500
  bool returnDoesNotAlias(665,23758
  void setReturnDoesNotAlias(668,23855
  bool hasOptNone(671,23966
  bool hasMinSize(674,24098
  bool hasOptSize(677,24239
  void deleteBody(701,25216
  Function::iterator insert(724,25924
  void splice(731,26203
  void splice(737,26413
  const BasicBlockListType &getBasicBlockList(getBasicBlockList771,27918
        BasicBlockListType &getBasicBlockList(getBasicBlockList772,27996
  static BasicBlockListType Function::*getSublistAccess(getSublistAccess774,28075
  const BasicBlock       &getEntryBlock(getEntryBlock779,28194
        BasicBlock       &getEntryBlock(getEntryBlock780,28264
  inline ValueSymbolTable *getValueSymbolTable(getValueSymbolTable787,28540
  inline const ValueSymbolTable *getValueSymbolTable(getValueSymbolTable788,28614
  iterator                begin(795,28839
  const_iterator          begin(796,28911
  iterator                end 797,28983
  const_iterator          end 798,29055
  size_t                   size(800,29128
  bool                    empty(801,29200
  const BasicBlock       &front(front802,29272
        BasicBlock       &front(front803,29344
  const BasicBlock        &back(back804,29416
        BasicBlock        &back(back805,29488
  arg_iterator arg_begin(810,29607
  const_arg_iterator arg_begin(814,29688
  arg_iterator arg_end(819,29782
  const_arg_iterator arg_end(823,29871
  Argument* getArg(828,29973
  iterator_range<arg_iterator> args(834,30123
  iterator_range<const_arg_iterator> args(837,30214
  size_t arg_size(843,30326
  bool arg_empty(844,30372
  bool hasPersonalityFn(847,30488
  bool hasPrefixData(856,30770
  bool hasPrologueData(865,31044
  static bool classof(903,32607
  void dropAllReferences(919,33397
  void setValueSubclassData(972,35753
struct OperandTraits<OperandTraits986,36315

/usr/include/llvm/IR/GenericConvergenceVerifierImpl.h,385
#define LLVM_IR_GENERICCONVERGENCEVERIFIERIMPL_H27,1057
#define Check(34,1260
#define CheckOrNull(42,1765
void GenericConvergenceVerifier<ContextT>::visit(visit58,2462
void GenericConvergenceVerifier<ContextT>::visit(visit63,2587
void GenericConvergenceVerifier<ContextT>::reportFailure(reportFailure122,4693
void GenericConvergenceVerifier<ContextT>::verify(verify132,4936

/usr/include/llvm/IR/GetElementPtrTypeIterator.h,529
#define LLVM_IR_GETELEMENTPTRTYPEITERATOR_H15,609
  bool operator==(operator==90,3322
  bool operator!=(operator!=94,3416
  generic_gep_type_iterator &operator++(operator++112,4092
  generic_gep_type_iterator operator++(124,4421
  using gep_type_iterator 171,6481
  inline gep_type_iterator gep_type_begin(173,6539
  inline gep_type_iterator gep_type_end(180,6753
  inline gep_type_iterator gep_type_begin(184,6867
  inline gep_type_iterator gep_type_end(191,7079
  gep_type_begin(197,7261
  gep_type_end(203,7452

/usr/include/llvm/IR/GlobalAlias.h,690
#define LLVM_IR_GLOBALALIAS_H15,618
class GlobalAlias 28,905
  GlobalAlias(31,1030
  static GlobalAlias *create(create40,1411
  static GlobalAlias *create(create45,1635
  static GlobalAlias *create(create50,1857
  static GlobalAlias *create(create55,2101
  static GlobalAlias *create(create59,2292
  void *operator new(62,2408
  void operator delete(operator delete63,2476
  void copyAttributesFrom(68,2632
  const Constant *getAliasee(getAliasee84,3097
  Constant *getAliasee(getAliasee87,3191
  GlobalObject *getAliaseeObject(getAliaseeObject90,3316
  static bool isValidLinkage(95,3466
  static bool classof(101,3733
struct OperandTraits<OperandTraits107,3846

/usr/include/llvm/IR/GlobalIFunc.h,130
#define LLVM_IR_GLOBALIFUNC_H18,784
  void operator delete(operator delete52,1993
struct OperandTraits<OperandTraits105,3940

/usr/include/llvm/IR/GlobalObject.h,1210
#define LLVM_IR_GLOBALOBJECT_H15,593
class GlobalObject 27,803
  enum VCallVisibility 32,1038
    VCallVisibilityPublic 34,1116
    VCallVisibilityLinkageUnit 37,1253
    VCallVisibilityTranslationUnit 39,1348
  GlobalObject(43,1405
  ~GlobalObject(49,1680
    LastAlignmentBit 53,1740
    LastCodeModelBit 54,1766
    HasSectionHashEntryBit,55,1792
    GlobalObjectBits,57,1821
  uint64_t getAlignment(71,2292
  MaybeAlign getAlign(80,2586
  void setAlignment(87,2824
  void setAlignment(92,3010
  unsigned getGlobalObjectSubClassData(94,3050
  void setGlobalObjectSubClassData(99,3201
  bool hasSection(110,3669
  StringRef getSection(118,3988
  void setSection(126,4249
  bool hasComdat(128,4282
  const Comdat *getComdat(getComdat129,4342
  Comdat *getComdat(getComdat130,4398
  void setComdat(131,4442
  using Value::addMetadata;133,4472
  using Value::clearMetadata;134,4500
  using Value::eraseMetadata;135,4530
  using Value::eraseMetadataIf;136,4560
  using Value::getAllMetadata;137,4592
  using Value::getMetadata;138,4623
  using Value::hasMetadata;139,4651
  using Value::setMetadata;140,4679
  static bool classof(161,5385
  void setGlobalObjectFlag(168,5602

/usr/include/llvm/IR/GlobalValue.h,5234
#define LLVM_IR_GLOBALVALUE_H18,807
typedef unsigned ID;41,1273
inline constexpr char kGlobalIdentifierDelimiter 46,1468
class GlobalValue 48,1525
  enum LinkageTypes 51,1636
    ExternalLinkage 52,1658
    AvailableExternallyLinkage,53,1715
    LinkOnceAnyLinkage,54,1792
    LinkOnceODRLinkage,55,1869
    WeakAnyLinkage,56,1947
    WeakODRLinkage,57,2028
    AppendingLinkage,58,2106
    InternalLinkage,59,2182
    PrivateLinkage,60,2262
    ExternalWeakLinkage,61,2334
    CommonLinkage 62,2397
  enum VisibilityTypes 66,2522
    DefaultVisibility 67,2547
    HiddenVisibility,68,2598
    ProtectedVisibility 69,2648
  enum DLLStorageClassTypes 73,2762
    DefaultStorageClass 74,2792
    DLLImportStorageClass 75,2823
    DLLExportStorageClass 76,2892
  GlobalValue(80,2981
  Type *ValueType;ValueType92,3540
  static const unsigned GlobalValueSubClassDataBits 94,3560
  unsigned Linkage 98,3708
  unsigned Visibility 99,3768
  unsigned UnnamedAddrVal 100,3837
  unsigned DllStorageClass 101,3911
  unsigned ThreadLocal 103,3965
  unsigned HasLLVMReservedName 109,4303
  unsigned IsDSOLocal 113,4465
  unsigned HasPartition 117,4599
  unsigned HasSanitizerMetadata 122,4806
  unsigned SubClassData : GlobalValueSubClassDataBits;127,4977
  bool mayBeDerefined(137,5311
  Intrinsic::ID IntID 173,6498
  unsigned getGlobalValueSubClassData(175,6542
  void setGlobalValueSubClassData(178,6619
  Module *Parent Parent183,6767
  void setParent(186,6858
  ~GlobalValue(190,6919
  enum ThreadLocalMode 195,7025
    NotThreadLocal 196,7050
    GeneralDynamicTLSModel,197,7074
    LocalDynamicTLSModel,198,7102
    InitialExecTLSModel,199,7128
    LocalExecTLSModel200,7153
  unsigned getAddressSpace(205,7227
  enum class UnnamedAddr 209,7310
    None,210,7337
    Local,211,7347
    Global,212,7358
  bool hasGlobalUnnamedAddr(215,7376
  bool hasAtLeastLocalUnnamedAddr(224,7860
  UnnamedAddr getUnnamedAddr(228,7959
  void setUnnamedAddr(231,8042
  static UnnamedAddr getMinUnnamedAddr(233,8118
  bool hasComdat(241,8409
  Comdat *getComdat(getComdat243,8504
  VisibilityTypes getVisibility(248,8647
  bool hasDefaultVisibility(249,8727
  bool hasHiddenVisibility(250,8807
  bool hasProtectedVisibility(251,8885
  void setVisibility(254,8975
  bool isThreadLocal(263,9292
  void setThreadLocal(264,9372
  void setThreadLocalMode(267,9481
  ThreadLocalMode getThreadLocalMode(271,9630
  DLLStorageClassTypes getDLLStorageClass(275,9736
  bool hasDLLImportStorageClass(278,9842
  bool hasDLLExportStorageClass(281,9941
  void setDLLStorageClass(284,10040
  bool hasSection(290,10243
  PointerType *getType(getType294,10377
  Type *getValueType(getValueType296,10456
  bool isImplicitDSOLocal(298,10508
  void setDSOLocal(303,10648
  bool isDSOLocal(305,10704
  bool hasPartition(309,10760
  struct SanitizerMetadata 317,11009
    SanitizerMetadata(318,11038
    unsigned NoAddress 334,11973
    unsigned NoHWAddress 335,12001
    unsigned Memtag 347,12655
    unsigned IsDynInit 352,12861
  bool hasSanitizerMetadata(355,12895
  bool isTagged(364,13385
  static LinkageTypes getLinkOnceLinkage(368,13484
  static LinkageTypes getWeakLinkage(371,13599
  static bool isExternalLinkage(375,13703
  static bool isAvailableExternallyLinkage(378,13802
  static bool isLinkOnceAnyLinkage(381,13923
  static bool isLinkOnceODRLinkage(384,14028
  static bool isLinkOnceLinkage(387,14133
  static bool isWeakAnyLinkage(390,14268
  static bool isWeakODRLinkage(393,14365
  static bool isWeakLinkage(396,14462
  static bool isAppendingLinkage(399,14585
  static bool isInternalLinkage(402,14686
  static bool isPrivateLinkage(405,14785
  static bool isLocalLinkage(408,14882
  static bool isExternalWeakLinkage(411,15007
  static bool isCommonLinkage(414,15114
  static bool isValidDeclarationLinkage(417,15209
  static bool isInterposableLinkage(424,15570
  static bool isDiscardableIfUnused(448,16238
  static bool isWeakForLinker(457,16684
  bool isDefinitionExact(489,18095
  bool hasExactDefinition(494,18222
  bool hasExternalLinkage(510,18973
  bool hasAvailableExternallyLinkage(511,19051
  bool hasLinkOnceLinkage(514,19157
  bool hasLinkOnceAnyLinkage(515,19235
  bool hasLinkOnceODRLinkage(518,19325
  bool hasWeakLinkage(521,19415
  bool hasWeakAnyLinkage(522,19485
  bool hasWeakODRLinkage(523,19561
  bool hasAppendingLinkage(524,19637
  bool hasInternalLinkage(525,19717
  bool hasPrivateLinkage(526,19795
  bool hasLocalLinkage(527,19871
  bool hasExternalWeakLinkage(528,19943
  bool hasCommonLinkage(531,20035
  bool hasValidDeclarationLinkage(532,20109
  void setLinkage(536,20210
  LinkageTypes getLinkage(545,20443
  bool isDiscardableIfUnused(547,20512
  bool isWeakForLinker(551,20604
  static StringRef dropLLVMManglingEscape(566,21229
  using GUID 586,22180
  static GUID getGUID(590,22328
  GUID getGUID(594,22527
  bool isDeclarationForLinker(617,23294
  bool isStrongDefinitionForLinker(630,23750
  GlobalObject *getAliaseeObject(getAliaseeObject635,23909
  Module *getParent(getParent655,24635
  const Module *getParent(getParent656,24676
  static bool classof(659,24801

/usr/include/llvm/IR/GlobalVariable.h,1280
#define LLVM_IR_GLOBALVARIABLE_H20,934
class GlobalVariable 39,1361
  AttributeSet Attrs;42,1496
  bool isConstantGlobal 45,1551
  bool isExternallyInitializedConstant 48,1689
  GlobalVariable(58,2113
  GlobalVariable(64,2493
  ~GlobalVariable(73,2982
  void *operator new(78,3078
  void operator delete(operator delete83,3240
  inline bool hasInitializer(97,3778
  inline bool hasDefinitiveInitializer(115,4504
  inline bool hasUniqueInitializer(127,5069
  inline const Constant *getInitializer(getInitializer141,5705
  inline Constant *getInitializer(getInitializer145,5873
  bool isConstant(158,6462
  void setConstant(159,6517
  bool isExternallyInitialized(161,6575
  void setExternallyInitialized(164,6664
  void addAttribute(193,7694
  void addAttribute(198,7835
  bool hasAttribute(203,8007
  bool hasAttribute(208,8146
  bool hasAttributes(213,8275
  Attribute getAttribute(218,8380
  Attribute getAttribute(223,8516
  AttributeSet getAttributes(228,8654
  AttributeList getAttributesAsList(235,8876
  void setAttributes(243,9151
  bool hasImplicitSection(248,9249
  unsigned getCodeModelRaw(257,9590
  std::optional<CodeModel::Model> getCodeModel(266,9902
  static bool classof(278,10282
struct OperandTraits<OperandTraits284,10398

/usr/include/llvm/IR/IRBuilder.h,15892
#define LLVM_IR_IRBUILDER_H15,636
class IRBuilderDefaultInserter 61,1955
  virtual ~IRBuilderDefaultInserter(63,1996
  virtual void InsertHelper(65,2036
class IRBuilderCallbackInserter 76,2398
  std::function<void(Instruction *)> Callback;77,2466
  IRBuilderCallbackInserter(82,2564
  void InsertHelper(85,2679
class IRBuilderBase 94,2985
  SmallVector<SmallVector97,3130
  SmallVector<std::pair<unsigned, MDNode *>, 2> MetadataToCopy;97,3130
  void AddOrRemoveMetadataToCopy(101,3335
  BasicBlock *BB;BB119,3731
  BasicBlock::iterator InsertPt;120,3749
  LLVMContext &Context;Context121,3782
  const IRBuilderFolder &Folder;Folder122,3806
  const IRBuilderDefaultInserter &Inserter;Inserter123,3839
  MDNode *DefaultFPMathTag;DefaultFPMathTag125,3884
  FastMathFlags FMF;126,3912
  bool IsFPConstrained 128,3934
  fp::ExceptionBehavior DefaultConstrainedExcept 129,3966
  RoundingMode DefaultConstrainedRounding 130,4031
  ArrayRef<OperandBundleDef> DefaultOperandBundles;132,4099
  IRBuilderBase(135,4160
  InstTy *Insert(Insert145,4605
  Constant *Insert(Insert152,4802
  Value *Insert(Insert156,4880
  void ClearInsertionPoint(169,5361
  BasicBlock *GetInsertBlock(GetInsertBlock174,5454
  BasicBlock::iterator GetInsertPoint(175,5506
  LLVMContext &getContext(getContext176,5573
  void SetInsertPoint(180,5735
  void SetInsertPoint(187,5931
  void SetInsertPoint(196,6255
  void SetInsertPoint(205,6591
  void SetInsertPointPastAllocas(214,6944
  void SetCurrentDebugLocation(220,7139
  void CollectMetadataToCopy(227,7473
  void AddMetadataToInst(241,7987
  class InsertPoint 251,8300
    BasicBlock::iterator Point;253,8355
    InsertPoint(260,8560
    bool isSet(264,8738
    BasicBlock *getBlock(getBlock266,8793
    BasicBlock::iterator getPoint(267,8844
  InsertPoint saveIP(271,8950
  InsertPoint saveAndClearIP(276,9114
  void restoreIP(283,9318
  MDNode *getDefaultFPMathTag(getDefaultFPMathTag291,9523
  FastMathFlags getFastMathFlags(294,9655
  FastMathFlags &getFastMathFlags(getFastMathFlags296,9713
  void clearFastMathFlags(299,9799
  void setDefaultFPMathTag(302,9900
  void setFastMathFlags(305,10055
  void setIsFPConstrained(311,10343
  bool getIsFPConstrained(314,10470
  void setDefaultConstrainedExcept(317,10603
  void setDefaultConstrainedRounding(327,10976
  fp::ExceptionBehavior getDefaultConstrainedExcept(337,11334
  RoundingMode getDefaultConstrainedRounding(342,11506
  void setConstrainedFPFunctionAttr(346,11599
  void setConstrainedFPCallAttr(355,11855
  void setDefaultOperandBundles(359,11946
  class InsertPointGuard 369,12386
    IRBuilderBase &Builder;Builder370,12413
    AssertingVH<BasicBlock> Block;371,12441
    BasicBlock::iterator Point;372,12476
    DebugLoc DbgLoc;373,12508
    InsertPointGuard(376,12540
    ~InsertPointGuard(383,12831
  class FastMathFlagGuard 391,13081
    IRBuilderBase &Builder;Builder392,13109
    FastMathFlags FMF;393,13137
    MDNode *FPMathTag;FPMathTag394,13160
    bool IsFPConstrained;395,13183
    fp::ExceptionBehavior DefaultConstrainedExcept;396,13209
    RoundingMode DefaultConstrainedRounding;397,13261
    FastMathFlagGuard(400,13317
    ~FastMathFlagGuard(409,13733
  class OperandBundlesGuard 420,14146
    IRBuilderBase &Builder;Builder421,14176
    ArrayRef<OperandBundleDef> DefaultOperandBundles;422,14204
    OperandBundlesGuard(425,14269
    ~OperandBundlesGuard(431,14522
  ConstantInt *getInt1(getInt1455,15564
  ConstantInt *getTrue(getTrue460,15689
  ConstantInt *getFalse(getFalse465,15806
  ConstantInt *getInt8(getInt8470,15916
  ConstantInt *getInt16(getInt16475,16037
  ConstantInt *getInt32(getInt32480,16161
  ConstantInt *getInt64(getInt64485,16285
  ConstantInt *getIntN(getIntN491,16462
  ConstantInt *getInt(getInt496,16598
  IntegerType *getInt1Ty(getInt1Ty505,16923
  IntegerType *getInt8Ty(getInt8Ty510,17046
  IntegerType *getInt16Ty(getInt16Ty515,17169
  IntegerType *getInt32Ty(getInt32Ty520,17294
  IntegerType *getInt64Ty(getInt64Ty525,17419
  IntegerType *getInt128Ty(getInt128Ty530,17545
  IntegerType *getIntNTy(getIntNTy533,17666
  Type *getHalfTy(getHalfTy538,17815
  Type *getBFloatTy(getBFloatTy543,17950
  Type *getFloatTy(getFloatTy548,18083
  Type *getDoubleTy(getDoubleTy553,18214
  Type *getVoidTy(getVoidTy558,18322
  PointerType *getPtrTy(getPtrTy563,18431
  IntegerType *getIntPtrTy(getIntPtrTy569,18651
  IntegerType *getIndexTy(getIndexTy575,18886
  CallInst *CreateMemSet(CreateMemSet589,19477
  CallInst *CreateElementUnorderedAtomicMemSet(CreateElementUnorderedAtomicMemSet614,20791
  CallInst *CreateMemCpy(CreateMemCpy653,23035
  CallInst *CreateMemCpy(CreateMemCpy670,23898
  CreateMemCpyInline(682,24503
  CallInst *CreateMemMove(CreateMemMove705,25690
  CallInst *CreateMemMove(CreateMemMove714,26158
  Value *getAllOnesMask(getAllOnesMask842,31636
  Instruction *CreateNoAliasScopeDeclaration(CreateNoAliasScopeDeclaration858,32294
  CallInst *CreateMinNum(CreateMinNum986,38912
  CallInst *CreateMaxNum(CreateMaxNum996,39275
  CallInst *CreateMinimum(CreateMinimum1006,39639
  CallInst *CreateMaximum(CreateMaximum1011,39843
  CallInst *CreateCopySign(CreateCopySign1016,40048
  CallInst *CreateArithmeticFence(CreateArithmeticFence1024,40388
  CallInst *CreateExtractVector(CreateExtractVector1031,40680
  CallInst *CreateInsertVector(CreateInsertVector1039,41038
  CallInst *CreateStackSave(CreateStackSave1047,41402
  CallInst *CreateStackRestore(CreateStackRestore1054,41691
  InstTy *addBranchMetadata(addBranchMetadata1074,42532
  ReturnInst *CreateRetVoid(CreateRetVoid1084,42840
  ReturnInst *CreateRet(CreateRet1089,42965
  ReturnInst *CreateAggregateRet(CreateAggregateRet1100,43434
  BranchInst *CreateBr(CreateBr1108,43773
  BranchInst *CreateCondBr(CreateCondBr1114,43943
  BranchInst *CreateCondBr(CreateCondBr1123,44403
  SwitchInst *CreateSwitch(CreateSwitch1137,45003
  IndirectBrInst *CreateIndirectBr(CreateIndirectBr1147,45544
  InvokeInst *CreateInvoke(CreateInvoke1152,45718
  InvokeInst *CreateInvoke(CreateInvoke1163,46218
  InvokeInst *CreateInvoke(CreateInvoke1174,46658
  InvokeInst *CreateInvoke(CreateInvoke1182,47072
  CallBrInst *CreateCallBr(CreateCallBr1191,47494
  CallBrInst *CreateCallBr(CreateCallBr1199,47922
  CallBrInst *CreateCallBr(CreateCallBr1210,48411
  CallBrInst *CreateCallBr(CreateCallBr1217,48809
  ResumeInst *CreateResume(CreateResume1226,49258
  CleanupReturnInst *CreateCleanupRet(CreateCleanupRet1230,49348
  CatchSwitchInst *CreateCatchSwitch(CreateCatchSwitch1235,49559
  CatchPadInst *CreateCatchPad(CreateCatchPad1242,49865
  CleanupPadInst *CreateCleanupPad(CreateCleanupPad1247,50064
  CatchReturnInst *CreateCatchRet(CreateCatchRet1253,50323
  UnreachableInst *CreateUnreachable(CreateUnreachable1257,50462
  BinaryOperator *CreateInsertNUWNSWBinOp(CreateInsertNUWNSWBinOp1265,50780
  Instruction *setFPAttrs(setFPAttrs1275,51234
  Value *getConstrainedFPRounding(getConstrainedFPRounding1285,51504
  Value *getConstrainedFPExcept(getConstrainedFPExcept1299,51961
  Value *getConstrainedFPPredicate(getConstrainedFPPredicate1308,52344
  Value *CreateAdd(CreateAdd1321,52813
  Value *CreateNSWAdd(CreateNSWAdd1330,53184
  Value *CreateNUWAdd(CreateNUWAdd1334,53312
  Value *CreateSub(CreateSub1338,53440
  Value *CreateNSWSub(CreateNSWSub1347,53811
  Value *CreateNUWSub(CreateNUWSub1351,53939
  Value *CreateMul(CreateMul1355,54067
  Value *CreateNSWMul(CreateNSWMul1364,54438
  Value *CreateNUWMul(CreateNUWMul1368,54566
  Value *CreateUDiv(CreateUDiv1372,54694
  Value *CreateExactUDiv(CreateExactUDiv1381,55058
  Value *CreateSDiv(CreateSDiv1385,55183
  Value *CreateExactSDiv(CreateExactSDiv1394,55547
  Value *CreateURem(CreateURem1398,55672
  Value *CreateSRem(CreateSRem1404,55892
  Value *CreateShl(CreateShl1410,56112
  Value *CreateShl(CreateShl1419,56483
  Value *CreateShl(CreateShl1425,56733
  Value *CreateLShr(CreateLShr1431,56979
  Value *CreateLShr(CreateLShr1440,57343
  Value *CreateLShr(CreateLShr1445,57547
  Value *CreateAShr(CreateAShr1450,57747
  Value *CreateAShr(CreateAShr1459,58111
  Value *CreateAShr(CreateAShr1464,58315
  Value *CreateAnd(CreateAnd1469,58515
  Value *CreateAnd(CreateAnd1475,58731
  Value *CreateAnd(CreateAnd1479,58883
  Value *CreateAnd(CreateAnd1483,59031
  Value *CreateOr(CreateOr1491,59236
  Value *CreateOr(CreateOr1497,59449
  Value *CreateOr(CreateOr1501,59599
  Value *CreateOr(CreateOr1505,59745
  Value *CreateXor(CreateXor1513,59948
  Value *CreateXor(CreateXor1519,60165
  Value *CreateXor(CreateXor1523,60317
  Value *CreateFAdd(CreateFAdd1527,60465
  Value *CreateFAddFMF(CreateFAddFMF1541,61042
  Value *CreateFSub(CreateFSub1554,61581
  Value *CreateFSubFMF(CreateFSubFMF1568,62158
  Value *CreateFMul(CreateFMul1581,62697
  Value *CreateFMulFMF(CreateFMulFMF1595,63274
  Value *CreateFDiv(CreateFDiv1608,63813
  Value *CreateFDivFMF(CreateFDivFMF1622,64390
  Value *CreateFRem(CreateFRem1635,64929
  Value *CreateFRemFMF(CreateFRemFMF1648,65500
  Value *CreateBinOp(CreateBinOp1660,66033
  Value *CreateLogicalAnd(CreateLogicalAnd1670,66443
  Value *CreateLogicalOr(CreateLogicalOr1676,66695
  Value *CreateLogicalOp(CreateLogicalOp1682,66949
  Value *CreateLogicalOr(CreateLogicalOr1696,67408
  Value *CreateNeg(CreateNeg1715,68180
  Value *CreateNSWNeg(CreateNSWNeg1721,68407
  Value *CreateNUWNeg(CreateNUWNeg1725,68514
  Value *CreateFNeg(CreateFNeg1729,68621
  Value *CreateFNegFMF(CreateFNegFMF1739,69016
  Value *CreateNot(CreateNot1748,69364
  Value *CreateUnOp(CreateUnOp1752,69496
  AllocaInst *CreateAlloca(CreateAlloca1772,70376
  AllocaInst *CreateAlloca(CreateAlloca1779,70709
  LoadInst *CreateLoad(CreateLoad1789,71217
  LoadInst *CreateLoad(CreateLoad1793,71346
  LoadInst *CreateLoad(CreateLoad1797,71481
  StoreInst *CreateStore(CreateStore1802,71668
  LoadInst *CreateAlignedLoad(CreateAlignedLoad1806,71816
  LoadInst *CreateAlignedLoad(CreateAlignedLoad1811,72014
  LoadInst *CreateAlignedLoad(CreateAlignedLoad1816,72218
  StoreInst *CreateAlignedStore(CreateAlignedStore1825,72568
  FenceInst *CreateFence(CreateFence1833,72906
  CreateAtomicCmpXchg(1840,73164
  AtomicRMWInst *CreateAtomicRMW(CreateAtomicRMW1853,73714
  Value *CreateGEP(CreateGEP1865,74213
  Value *CreateInBoundsGEP(CreateInBoundsGEP1875,74635
  Value *CreateConstGEP1_32(CreateConstGEP1_321880,74838
  Value *CreateConstInBoundsGEP1_32(CreateConstInBoundsGEP1_321890,75184
  Value *CreateConstGEP2_32(CreateConstGEP2_321900,75553
  Value *CreateConstInBoundsGEP2_32(CreateConstInBoundsGEP2_321913,75990
  Value *CreateConstGEP1_64(CreateConstGEP1_641926,76450
  Value *CreateConstInBoundsGEP1_64(CreateConstInBoundsGEP1_641936,76796
  Value *CreateConstGEP2_64(CreateConstGEP2_641946,77165
  Value *CreateConstInBoundsGEP2_64(CreateConstInBoundsGEP2_641959,77602
  Value *CreateStructGEP(CreateStructGEP1972,78062
  Value *CreatePtrAdd(CreatePtrAdd1977,78241
  Value *CreateInBoundsPtrAdd(CreateInBoundsPtrAdd1982,78434
  Constant *CreateGlobalStringPtr(CreateGlobalStringPtr1992,78840
  Value *CreateTrunc(CreateTrunc2006,79576
  Value *CreateZExt(CreateZExt2010,79712
  Value *CreateSExt(CreateSExt2022,80084
  Value *CreateZExtOrTrunc(CreateZExtOrTrunc2028,80352
  Value *CreateSExtOrTrunc(CreateSExtOrTrunc2043,81007
  Value *CreateFPToUI(CreateFPToUI2056,81528
  Value *CreateFPToSI(CreateFPToSI2063,81836
  Value *CreateUIToFP(CreateUIToFP2070,82144
  Value *CreateSIToFP(CreateSIToFP2077,82451
  Value *CreateFPTrunc(CreateFPTrunc2084,82758
  Value *CreateFPExt(CreateFPExt2093,83076
  Value *CreatePtrToInt(CreatePtrToInt2100,83381
  Value *CreateIntToPtr(CreateIntToPtr2105,83547
  Value *CreateBitCast(CreateBitCast2110,83713
  Value *CreateAddrSpaceCast(CreateAddrSpaceCast2115,83876
  Value *CreateZExtOrBitCast(CreateZExtOrBitCast2120,84057
  Value *CreateSExtOrBitCast(CreateSExtOrBitCast2128,84368
  Value *CreateTruncOrBitCast(CreateTruncOrBitCast2136,84679
  Value *CreateCast(CreateCast2144,84992
  Value *CreatePointerCast(CreatePointerCast2153,85295
  Value *CreatePointerBitCastOrAddrSpaceCast(CreatePointerBitCastOrAddrSpaceCast2165,85783
  Value *CreateIntCast(CreateIntCast2179,86232
  Value *CreateBitOrPointerCast(CreateBitOrPointerCast2188,86605
  Value *CreateFPCast(CreateFPCast2200,87060
  Value *CreateICmpEQ(CreateICmpEQ2224,88126
  Value *CreateICmpNE(CreateICmpNE2228,88261
  Value *CreateICmpUGT(CreateICmpUGT2232,88396
  Value *CreateICmpUGE(CreateICmpUGE2236,88533
  Value *CreateICmpULT(CreateICmpULT2240,88670
  Value *CreateICmpULE(CreateICmpULE2244,88807
  Value *CreateICmpSGT(CreateICmpSGT2248,88944
  Value *CreateICmpSGE(CreateICmpSGE2252,89081
  Value *CreateICmpSLT(CreateICmpSLT2256,89218
  Value *CreateICmpSLE(CreateICmpSLE2260,89355
  Value *CreateFCmpOEQ(CreateFCmpOEQ2264,89492
  Value *CreateFCmpOGT(CreateFCmpOGT2269,89692
  Value *CreateFCmpOGE(CreateFCmpOGE2274,89892
  Value *CreateFCmpOLT(CreateFCmpOLT2279,90092
  Value *CreateFCmpOLE(CreateFCmpOLE2284,90292
  Value *CreateFCmpONE(CreateFCmpONE2289,90492
  Value *CreateFCmpORD(CreateFCmpORD2294,90692
  Value *CreateFCmpUNO(CreateFCmpUNO2299,90892
  Value *CreateFCmpUEQ(CreateFCmpUEQ2304,91092
  Value *CreateFCmpUGT(CreateFCmpUGT2309,91292
  Value *CreateFCmpUGE(CreateFCmpUGE2314,91492
  Value *CreateFCmpULT(CreateFCmpULT2319,91692
  Value *CreateFCmpULE(CreateFCmpULE2324,91892
  Value *CreateFCmpUNE(CreateFCmpUNE2329,92092
  Value *CreateICmp(CreateICmp2334,92292
  Value *CreateFCmp(CreateFCmp2344,92745
  Value *CreateCmp(CreateCmp2349,92957
  Value *CreateFCmpS(CreateFCmpS2359,93477
  PHINode *CreatePHI(CreatePHI2380,94381
  CallInst *CreateCall(CreateCall2395,94943
  CallInst *CreateCall(CreateCall2406,95385
  CallInst *CreateCall(CreateCall2417,95838
  CallInst *CreateCall(CreateCall2424,96143
  VAArgInst *CreateVAArg(CreateVAArg2439,96856
  Value *CreateExtractElement(CreateExtractElement2443,96985
  Value *CreateExtractElement(CreateExtractElement2450,97235
  Value *CreateInsertElement(CreateInsertElement2455,97411
  Value *CreateInsertElement(CreateInsertElement2460,97616
  Value *CreateInsertElement(CreateInsertElement2465,97823
  Value *CreateInsertElement(CreateInsertElement2472,98100
  Value *CreateShuffleVector(CreateShuffleVector2477,98296
  Value *CreateShuffleVector(CreateShuffleVector2485,98659
  Value *CreateShuffleVector(CreateShuffleVector2494,99022
  Value *CreateExtractValue(CreateExtractValue2499,99220
  Value *CreateInsertValue(CreateInsertValue2506,99476
  LandingPadInst *CreateLandingPad(CreateLandingPad2513,99750
  Value *CreateFreeze(CreateFreeze2518,99947
  Value *CreateIsNull(CreateIsNull2527,100300
  Value *CreateIsNotNull(CreateIsNotNull2532,100494
  Value *CreateIsNeg(CreateIsNeg2537,100690
  Value *CreateIsNotNeg(CreateIsNotNeg2542,100887
template <typename FolderTy 2647,106003
template <typename FolderTy,2712,108553
          ArrayRef<OperandBundleDef>) -> IRBuilder<IRBuilder2714,108660
IRBuilder(LLVMContext &, MDNode *, ArrayRef<OperandBundleDef>) -> IRBuilder<IRBuilder2715,108734
    -> IRBuilder<IRBuilder2718,108914
IRBuilder(BasicBlock *, MDNode *, ArrayRef<OperandBundleDef>) -> IRBuilder<IRBuilder2719,108942
IRBuilder(Instruction *, MDNode *, ArrayRef<OperandBundleDef>) -> IRBuilder<IRBuilder2720,109020
          ArrayRef<OperandBundleDef>) -> IRBuilder<IRBuilder2723,109194
          ArrayRef<OperandBundleDef>) -> IRBuilder<IRBuilder2725,109312

/usr/include/llvm/IR/IRBuilderFolder.h,152
#define LLVM_IR_IRBUILDERFOLDER_H15,638
class IRBuilderFolder 24,855
  virtual ~IRBuilderFolder(26,887
  virtual Value *FoldBinOp(FoldBinOp35,1223

/usr/include/llvm/IR/InlineAsm.h,2649
#define LLVM_IR_INLINEASM_H16,695
  enum AsmDialect 36,1119
    AD_ATT,37,1139
    AD_Intel38,1151
  enum ConstraintPrefix 95,3112
    isInput,96,3138
    isOutput,97,3169
    isClobber,98,3201
    isLabel,99,3233
  struct SubConstraintInfo 104,3329
    ConstraintCodeVector Codes;113,3810
  struct ConstraintInfo 123,4065
    bool hasMatchingInput(140,4843
    ConstraintCodeVector Codes;154,5488
    SubConstraintInfoVector multipleAlternatives;161,5782
    bool hasArg(179,6491
  enum : uint32_t 200,7305
    Op_InputChain 202,7371
    Op_AsmString 203,7394
    Op_MDNode 204,7416
    Op_ExtraInfo 205,7435
    Op_FirstOperand 206,7502
    MIOp_AsmString 209,7580
    MIOp_ExtraInfo 210,7604
    MIOp_FirstOperand 211,7673
    Extra_HasSideEffects 214,7756
    Extra_IsAlignStack 215,7786
    Extra_AsmDialect 216,7814
    Extra_MayLoad 217,7840
    Extra_MayStore 218,7863
    Extra_IsConvergent 219,7888
  enum class Kind 225,8094
    RegUse 226,8124
    RegDef 227,8176
    RegDefEarlyClobber 228,8230
    Clobber 229,8299
    Imm 230,8356
    Mem 231,8398
    Func 232,8470
  enum class ConstraintCode 239,8757
    Unknown 240,8798
    es,241,8815
    i,242,8823
    k,243,8830
    m,244,8837
    o,245,8844
    v,246,8851
    A,247,8858
    Q,248,8865
    R,249,8872
    S,250,8879
    T,251,8886
    Um,252,8893
    Un,253,8901
    Uq,254,8909
    Us,255,8917
    Ut,256,8925
    Uv,257,8933
    Uy,258,8941
    X,259,8949
    Z,260,8956
    ZB,261,8963
    ZC,262,8971
    Zy,263,8979
    p,266,9015
    ZQ,267,9022
    ZR,268,9030
    ZS,269,9038
    ZT,270,9046
    Max 272,9055
  class Flag 303,10626
    uint32_t Storage;304,10641
    unsigned getMatchedOperandNo(314,11121
    unsigned getRegClass(315,11215
    bool isMatched(316,11293
    Flag(319,11377
    explicit Flag(320,11404
    Flag(321,11450
    operator uint32_t(operator uint32_t325,11605
    Kind getKind(326,11649
    bool isRegUseKind(327,11720
    bool isRegDefKind(328,11788
    bool isRegDefEarlyClobberKind(329,11856
    bool isClobberKind(332,11958
    bool isImmKind(333,12028
    bool isMemKind(334,12090
    bool isFuncKind(335,12152
    StringRef getKindName(336,12216
    unsigned getNumOperandRegisters(357,12778
    bool isUseOperandTiedToDef(363,13035
    bool hasRegClassConstraint(372,13334
    ConstraintCode getMemoryConstraintID(383,13631
    void setMatchingOp(391,13990
    void setRegClass(400,14459
    void setMemConstraint(410,14948
    void clearMemConstraint(416,15303
    void setRegMayBeFolded(431,16162
    bool getRegMayBeFolded(436,16364

/usr/include/llvm/IR/InstrTypes.h,13829
#define LLVM_IR_INSTRTYPES_H16,660
typedef unsigned ID;48,1375
class UnaryInstruction 55,1613
  UnaryInstruction(57,1670
  UnaryInstruction(62,1840
  void *operator new(operator new69,2035
  void operator delete(operator delete70,2103
  static bool classof(76,2353
  static bool classof(84,2719
struct OperandTraits<OperandTraits90,2844
class UnaryOperator 100,3223
#define HANDLE_UNARY_INST(136,4662
#define HANDLE_UNARY_INST(141,4864
#define HANDLE_UNARY_INST(147,5119
  CreateWithCopiedFlags(155,5399
  static UnaryOperator *CreateFNegFMF(CreateFNegFMF163,5686
  UnaryOps getOpcode(170,6024
  static bool classof(175,6191
  static bool classof(178,6268
class BinaryOperator 187,6594
  void *operator new(operator new203,7116
  void operator delete(operator delete204,7184
#define HANDLE_BINARY_INST(228,8367
#define HANDLE_BINARY_INST(234,8627
#define HANDLE_BINARY_INST(240,8902
  CreateWithCopiedFlags(248,9203
  static BinaryOperator *CreateFAddFMF(CreateFAddFMF256,9503
  static BinaryOperator *CreateFSubFMF(CreateFSubFMF261,9774
  static BinaryOperator *CreateFMulFMF(CreateFMulFMF266,10045
  static BinaryOperator *CreateFDivFMF(CreateFDivFMF271,10316
  static BinaryOperator *CreateFRemFMF(CreateFRemFMF276,10587
  static BinaryOperator *CreateNSW(CreateNSW282,10859
  static BinaryOperator *CreateNSW(CreateNSW288,11097
  static BinaryOperator *CreateNSW(CreateNSW294,11350
  static BinaryOperator *CreateNUW(CreateNUW301,11603
  static BinaryOperator *CreateNUW(CreateNUW307,11843
  static BinaryOperator *CreateNUW(CreateNUW313,12098
  static BinaryOperator *CreateExact(CreateExact320,12353
  static BinaryOperator *CreateExact(CreateExact326,12587
  static BinaryOperator *CreateExact(CreateExact332,12836
#define DEFINE_HELPERS(348,13626
#undef DEFINE_HELPERS378,15201
  BinaryOps getOpcode(402,16531
  static bool classof(414,16988
  static bool classof(417,17066
struct OperandTraits<OperandTraits423,17191
class PossiblyDisjointInst 432,17537
  enum { IsDisjoint 434,17598
  void setIsDisjoint(436,17633
  bool isDisjoint(441,17761
  static bool classof(443,17834
  static bool classof(447,17931
BinaryOperator *BinaryOperator::CreateDisjoint(CreateDisjoint452,18044
BinaryOperator *BinaryOperator::CreateDisjoint(CreateDisjoint458,18316
BinaryOperator *BinaryOperator::CreateDisjoint(CreateDisjoint465,18655
class CastInst 483,19460
  CastInst(486,19588
  CastInst(492,19860
  Instruction::CastOps getOpcode(723,30977
  Type* getSrcTy(728,31131
  Type* getDestTy(730,31245
  static bool castIsValid(737,31593
  static bool classof(742,31795
  static bool classof(745,31869
class PossiblyNonNegInst 751,32037
  enum { NonNeg 753,32090
  static bool classof(755,32121
  static bool classof(759,32220
class CmpInst 770,32661
  enum Predicate 780,33185
    FCMP_FALSE 782,33271
    FCMP_OEQ 783,33336
    FCMP_OGT 784,33398
    FCMP_OGE 785,33467
    FCMP_OLT 786,33545
    FCMP_OLE 787,33611
    FCMP_ONE 788,33686
    FCMP_ORD 789,33763
    FCMP_UNO 790,33825
    FCMP_UEQ 791,33900
    FCMP_UGT 792,33963
    FCMP_UGE 793,34033
    FCMP_ULT 794,34111
    FCMP_ULE 795,34178
    FCMP_UNE 796,34253
    FCMP_TRUE 797,34320
    FIRST_FCMP_PREDICATE 798,34384
    LAST_FCMP_PREDICATE 799,34423
    BAD_FCMP_PREDICATE 800,34460
    ICMP_EQ 801,34500
    ICMP_NE 802,34530
    ICMP_UGT 803,34564
    ICMP_UGE 804,34610
    ICMP_ULT 805,34660
    ICMP_ULE 806,34703
    ICMP_SGT 807,34750
    ICMP_SGE 808,34794
    ICMP_SLT 809,34842
    ICMP_SLE 810,34883
    FIRST_ICMP_PREDICATE 811,34928
    LAST_ICMP_PREDICATE 812,34964
    BAD_ICMP_PREDICATE 813,35000
  using PredicateField 815,35043
  static auto FCmpPredicates(819,35183
  static auto ICmpPredicates(826,35465
  void *operator new(operator new844,36127
  void operator delete(operator delete845,36195
  OtherOps getOpcode(865,37219
  Predicate getPredicate(870,37364
  void setPredicate(873,37513
  static bool isFPPredicate(875,37587
  static bool isIntPredicate(881,37780
  bool isFPPredicate(887,37946
  bool isIntPredicate(888,38017
  Predicate getInversePredicate(894,38339
  static Predicate getOrderedPredicate(901,38557
  Predicate getOrderedPredicate(905,38671
  static Predicate getUnorderedPredicate(912,38891
  Predicate getUnorderedPredicate(916,39007
  Predicate getSwappedPredicate(932,39716
  bool isStrictPredicate(948,40388
  bool isNonStrictPredicate(957,40855
  Predicate getStrictPredicate(963,41074
  Predicate getNonStrictPredicate(976,41639
  Predicate getFlippedStrictnessPredicate(998,42651
  bool isEquality(1020,43446
  static bool isRelational(1023,43577
  bool isRelational(1026,43710
  bool isSigned(1030,43897
  bool isUnsigned(1036,44102
  Predicate getSignedPredicate(1049,44665
  Predicate getUnsignedPredicate(1061,45200
  Predicate getFlippedSignednessPredicate(1073,45776
  bool isTrueWhenEqual(1079,45984
  bool isFalseWhenEqual(1085,46166
  static bool classof(1118,47486
  static bool classof(1122,47634
  static Type* makeCmpResultType(1127,47785
  void setValueSubclassData(1138,48219
struct OperandTraits<OperandTraits1145,48381
struct OperandBundleUse 1154,48671
  ArrayRef<Use> Inputs;1155,48697
  explicit OperandBundleUse(1158,48754
  bool operandHasAttr(1163,48971
  StringRef getTagName(1173,49332
  uint32_t getTagID(1182,49666
  bool isDeoptOperandBundle(1187,49784
  bool isFuncletOperandBundle(1192,49932
  bool isCFGuardTargetOperandBundle(1197,50090
  StringMapEntry<uint32_t> *Tag;Tag1203,50274
template <typename InputTy> class OperandBundleDefT 1212,50621
  std::string Tag;1213,50675
  std::vector<InputTy> Inputs;1214,50694
  explicit OperandBundleDefT(1217,50734
  explicit OperandBundleDefT(1219,50867
  explicit OperandBundleDefT(1222,50987
  ArrayRef<InputTy> inputs(1227,51137
  using input_iterator 1229,51192
  size_t input_size(1231,51265
  input_iterator input_begin(1232,51319
  input_iterator input_end(1233,51383
  StringRef getTag(1235,51444
using OperandBundleDef 1238,51491
using ConstOperandBundleDef 1239,51544
class CallBase 1259,52523
  using CallInstReservedField 1262,52641
  using CallingConvField 1263,52708
      Bitfield::Element<CallingConv::ID, CallInstReservedField::NextBit,1264,52735
  static constexpr int CalledOperandOpEndIdx 1271,53034
  AttributeList Attrs;1273,53086
  FunctionType *FTy;FTy1274,53148
  CallBase(1277,53199
  using Instruction::Instruction;1280,53345
  bool hasDescriptor(1282,53380
  unsigned getNumSubclassExtraOperands(1284,53443
  using Instruction::getContext;1301,53918
  static bool classof(1330,55292
  static bool classof(1335,55494
  FunctionType *getFunctionType(getFunctionType1339,55604
  void mutateFunctionType(1341,55661
  User::op_iterator data_operands_begin(1353,56170
  User::const_op_iterator data_operands_begin(1354,56235
  User::op_iterator data_operands_end(1357,56359
  User::const_op_iterator data_operands_end(1362,56561
  iterator_range<User::op_iterator> data_ops(1365,56681
  iterator_range<User::const_op_iterator> data_ops(1368,56801
  bool data_operands_empty(1371,56933
  unsigned data_operands_size(1374,57031
  bool isDataOperand(1378,57146
  bool isDataOperand(1383,57361
  unsigned getDataOperandNo(1389,57604
  unsigned getDataOperandNo(1395,57815
  User::op_iterator arg_begin(1401,58046
  User::const_op_iterator arg_begin(1402,58101
  User::op_iterator arg_end(1407,58274
  User::const_op_iterator arg_end(1412,58462
  iterator_range<User::op_iterator> args(1417,58608
  iterator_range<User::const_op_iterator> args(1420,58704
  bool arg_empty(1423,58812
  unsigned arg_size(1424,58874
  Value *getArgOperand(getArgOperand1426,58939
  void setArgOperand(1431,59061
  const Use &getArgOperandUse(getArgOperandUse1437,59239
  Use &getArgOperandUse(getArgOperandUse1441,59376
  bool isArgOperand(1446,59502
  bool isArgOperand(1451,59696
  unsigned getArgOperandNo(1457,59893
  unsigned getArgOperandNo(1464,60181
  bool hasArgument(1470,60399
  Value *getCalledOperand(getCalledOperand1474,60489
  const Use &getCalledOperandUse(getCalledOperandUse1476,60564
  Use &getCalledOperandUse(getCalledOperandUse1477,60645
  Function *getCalledFunction(getCalledFunction1481,60868
  bool isCallee(1492,61234
  bool isCallee(1497,61391
  const Function *getCaller(getCaller1501,61547
  void setCalledOperand(1517,62081
  void setCalledFunction(1520,62223
  void setCalledFunction(1525,62389
  void setCalledFunction(1531,62590
  CallingConv::ID getCallingConv(1539,62891
  void setCallingConv(1543,62987
  bool isInlineAsm(1548,63132
  AttributeList getAttributes(1558,63460
  void setAttributes(1562,63573
  bool hasFnAttr(1567,63821
  bool hasFnAttr(1576,64223
  void addAttributeAtIndex(1580,64404
  void addAttributeAtIndex(1585,64590
  void addFnAttr(1590,64756
  void addFnAttr(1595,64902
  void addRetAttr(1600,65042
  void addRetAttr(1605,65194
  void addParamAttr(1610,65341
  void addParamAttr(1616,65576
  void removeAttributeAtIndex(1622,65807
  void removeAttributeAtIndex(1627,66004
  void removeFnAttrs(1632,66181
  void removeFnAttr(1637,66358
  void removeFnAttr(1642,66514
  void removeRetAttr(1647,66664
  void removeRetAttrs(1652,66827
  void removeParamAttr(1657,67012
  void removeParamAttr(1663,67254
  void removeParamAttrs(1669,67487
  void addDereferenceableParamAttr(1674,67715
  void addDereferenceableRetAttr(1679,67924
  bool hasRetAttr(1684,68112
  bool hasRetAttr(1688,68267
  Attribute getAttributeAtIndex(1694,68541
  Attribute getAttributeAtIndex(1699,68736
  Attribute getFnAttr(1704,68924
  Attribute getFnAttr(1712,69174
  Attribute getParamAttr(1720,69424
  Attribute getParamAttr(1726,69666
  bool dataOperandHasImpliedAttr(1742,70272
  bool doesNotCapture(1762,71206
  bool isByValArgument(1767,71380
  bool isInAllocaArgument(1772,71544
  bool isPassPointeeByValueArgument(1778,71750
  bool isPassingUndefUB(1787,72184
  bool hasInAllocaArgument(1797,72663
  bool doesNotAccessMemory(1803,72928
  bool onlyReadsMemory(1809,73193
  bool onlyWritesMemory(1816,73521
  MaybeAlign getRetAlign(1822,73755
  MaybeAlign getParamAlign(1831,74051
  MaybeAlign getParamStackAlign(1835,74150
  Type *getParamByValType(getParamByValType1840,74313
  Type *getParamPreallocatedType(getParamPreallocatedType1849,74624
  Type *getParamInAllocaType(getParamInAllocaType1858,74952
  Type *getParamStructRetType(getParamStructRetType1867,75264
  Type *getParamElementType(getParamElementType1878,75690
  uint64_t getRetDereferenceableBytes(1884,75885
  uint64_t getParamDereferenceableBytes(1893,76235
  uint64_t getRetDereferenceableOrNullBytes(1899,76438
  uint64_t getParamDereferenceableOrNullBytes(1911,76838
  bool returnDoesNotAlias(1929,77562
  Value *getReturnedArgOperand(getReturnedArgOperand1935,77772
  bool isNoBuiltin(1945,78149
  bool isStrictFP(1951,78350
  bool isNoInline(1954,78473
  void setIsNoInline(1955,78542
  bool doesNotReturn(1988,79705
  void setDoesNotReturn(1989,79777
  bool doesNoCfCheck(1992,79913
  bool doesNotThrow(1995,80030
  void setDoesNotThrow(1996,80101
  bool cannotDuplicate(1999,80215
  void setCannotDuplicate(2000,80292
  bool cannotMerge(2003,80411
  void setCannotMerge(2004,80480
  bool isConvergent(2007,80584
  void setConvergent(2008,80657
  void setNotConvergent(2009,80718
  bool hasStructRetAttr(2013,80872
  bool hasByValArgument(2022,81119
  unsigned getNumOperandBundles(2036,81470
  bool hasOperandBundles(2041,81645
  unsigned getBundleOperandsStartIndex(2044,81788
  unsigned getBundleOperandsEndIndex(2050,82012
  bool isBundleOperand(2056,82235
  bool isOperandBundleOfType(2063,82503
  bool isBundleOperand(2069,82719
  bool isBundleOperand(2074,82937
  unsigned getNumTotalBundleOperands(2080,83169
  OperandBundleUse getOperandBundleAt(2092,83488
  unsigned countOperandBundlesOfType(2099,83799
  unsigned countOperandBundlesOfType(2110,84140
  std::optional<OperandBundleUse> getOperandBundle(2123,84568
  std::optional<OperandBundleUse> getOperandBundle(2139,85119
  OperandBundleUse getOperandBundleForOperand(2164,86123
  bool bundleOperandHasAttr(2178,86650
  bool hasIdenticalOperandBundleSchema(2187,87052
  bool hasOperandBundlesOtherThan(2197,87458
  struct BundleOpInfo 2208,87833
    StringMapEntry<uint32_t> *Tag;Tag2211,87948
    uint32_t Begin;2215,88076
    uint32_t End;2219,88187
    bool operator==(operator==2221,88206
  operandBundleFromBundleOpInfo(2229,88448
  using bundle_op_iterator 2235,88662
  using const_bundle_op_iterator 2236,88707
  bundle_op_iterator bundle_op_info_begin(2284,91410
  const_bundle_op_iterator bundle_op_info_begin(2294,91729
  bundle_op_iterator bundle_op_info_end(2301,92001
  const_bundle_op_iterator bundle_op_info_end(2311,92310
  iterator_range<bundle_op_iterator> bundle_op_infos(2317,92546
  iterator_range<const_bundle_op_iterator> bundle_op_infos(2322,92750
  const BundleOpInfo &getBundleOpInfoForOperand(getBundleOpInfoForOperand2341,93587
  static unsigned CountBundleInputs(2347,93810
  template <typename AttrKind> bool hasFnAttrImpl(2361,94170
  template <typename AttrKind> bool hasRetAttrImpl(2371,94557
struct OperandTraits<OperandTraits2383,94861
class FuncletPadInst 2390,95208
  unsigned arg_size(2417,96186
  Value *getParentPad(getParentPad2425,96448
  void setParentPad(2426,96499
  Value *getArgOperand(getArgOperand2433,96676
  void setArgOperand(2434,96743
  op_range arg_operands(2437,96869
  const_op_range arg_operands(2440,97003
  static bool classof(2445,97172
  static bool classof(2446,97246
struct OperandTraits<OperandTraits2452,97371

/usr/include/llvm/IR/Instruction.h,4293
#define LLVM_IR_INSTRUCTION_H15,612
class Instruction 43,1219
  using InstListType 47,1414
  BasicBlock *Parent;Parent49,1503
  DebugLoc DbgLoc;50,1525
  mutable unsigned Order 54,1727
  DPMarker *DbgMarker DbgMarker60,1956
  using OpaqueField 102,3951
  using AlignmentBitfieldElementT 110,4309
      typename Bitfield::Element<unsigned, Offset,111,4345
  using BoolBitfieldElementT 115,4492
  using BoolBitfieldElementT = typename Bitfield::Element<bool, Offset,115,4492
  using AtomicOrderingBitfieldElementT 118,4598
      typename Bitfield::Element<AtomicOrdering, Offset,119,4639
  using HasMetadataField 125,4859
  Instruction       *user_back(user_back136,5237
  const Instruction *user_back(user_back137,5320
  inline const BasicBlock *getParent(getParent139,5404
  inline       BasicBlock *getParent(getParent140,5468
  Module *getModule(getModule148,5850
  Function *getFunction(getFunction158,6207
  unsigned getOpcode(239,9846
  const char *getOpcodeName(getOpcodeName241,9918
  bool isTerminator(242,9993
  bool isUnaryOp(243,10059
  bool isBinaryOp(244,10119
  bool isIntDivRem(245,10181
  bool isShift(246,10245
  bool isCast(247,10301
  bool isFuncletPad(248,10355
  bool isSpecialTerminator(249,10421
  static inline bool isTerminator(257,10682
  static inline bool isUnaryOp(261,10798
  static inline bool isBinaryOp(264,10912
  static inline bool isIntDivRem(268,11030
  static inline bool isShift(273,11232
  inline bool isLogicalShift(278,11405
  inline bool isArithmeticShift(283,11559
  static inline bool isBitwiseLogicOp(288,11683
  inline bool isBitwiseLogicOp(293,11845
  static inline bool isCast(298,12000
  static inline bool isFuncletPad(303,12183
  static inline bool isSpecialTerminator(309,12463
  bool hasMetadata(328,13061
  bool hasMetadataOtherThanDebugLoc(332,13233
  bool hasMetadata(335,13390
  bool hasMetadata(340,13561
  MDNode *getMetadata(getMetadata346,13770
  MDNode *getMetadata(getMetadata355,14135
  getAllMetadata(364,14473
  void getAllMetadataOtherThanDebugLoc(371,14713
  void dropUnknownNonDebugMetadata(402,16133
  void dropUnknownNonDebugMetadata(405,16230
  void dropUnknownNonDebugMetadata(408,16340
  void setDebugLoc(438,17603
  const DebugLoc &getDebugLoc(getDebugLoc441,17727
  bool hasPoisonGeneratingFlagsOrMetadata(487,19652
  void dropPoisonGeneratingFlagsAndMetadata(492,19838
  static bool isAssociative(663,27455
  static bool isCommutative(676,27893
  bool isIdempotent(693,28284
  static bool isIdempotent(694,28350
  bool isNilpotent(707,28747
  static bool isNilpotent(708,28811
  bool mayReadOrWriteMemory(719,29160
  bool isFenceLike(748,30295
  bool isEHPad(789,31850
  Instruction *getNextNonDebugInstruction(getNextNonDebugInstruction817,32835
  Instruction *getPrevNonDebugInstruction(getPrevNonDebugInstruction828,33343
  enum OperationEquivalenceFlags 853,34421
    CompareIgnoringAlignment 855,34517
    CompareUsingScalarTypes 858,34649
  static bool classof(903,36928
  enum TermOps 910,37134
#define  FIRST_TERM_INST(911,37189
#define HANDLE_TERM_INST(912,37247
#define   LAST_TERM_INST(913,37296
  enum UnaryOps 917,37394
#define  FIRST_UNARY_INST(918,37412
#define HANDLE_UNARY_INST(919,37472
#define   LAST_UNARY_INST(920,37522
  enum BinaryOps 924,37622
#define  FIRST_BINARY_INST(925,37641
#define HANDLE_BINARY_INST(926,37703
#define   LAST_BINARY_INST(927,37754
  enum MemoryOps 931,37856
#define  FIRST_MEMORY_INST(932,37875
#define HANDLE_MEMORY_INST(933,37937
#define   LAST_MEMORY_INST(934,37988
  enum CastOps 938,38090
#define  FIRST_CAST_INST(939,38107
#define HANDLE_CAST_INST(940,38165
#define   LAST_CAST_INST(941,38214
  enum FuncletPadOps 945,38312
#define  FIRST_FUNCLETPAD_INST(946,38335
#define HANDLE_FUNCLETPAD_INST(947,38405
#define   LAST_FUNCLETPAD_INST(948,38460
  enum OtherOps 952,38570
#define  FIRST_OTHER_INST(953,38588
#define HANDLE_OTHER_INST(954,38648
#define   LAST_OTHER_INST(955,38698
  void setValueSubclassData(965,39058
  unsigned short getSubclassDataFromValue(969,39147
  typename BitfieldElement::Type getSubclassData(980,39463
  void setSubclassData(989,39847
inline void ilist_alloc_traits<Instruction>::deleteNode(deleteNode1009,40575

/usr/include/llvm/IR/Instructions.h,33258
#define LLVM_IR_INSTRUCTIONS_H16,666
class AllocaInst 58,1783
  Type *AllocatedType;AllocatedType59,1828
  const Value *getArraySize(getArraySize96,3428
  Value *getArraySize(getArraySize97,3490
  PointerType *getType(getType100,3594
  unsigned getAddressSpace(105,3737
  Type *getAllocatedType(getAllocatedType118,4269
  void setAllocatedType(121,4469
  Align getAlign(125,4619
  void setAlignment(129,4712
  bool isUsedWithInAlloca(140,5194
  void setUsedWithInAlloca(145,5368
  bool isSwiftError(150,5534
  void setSwiftError(152,5678
  static bool classof(155,5820
  static bool classof(158,5922
  void setSubclassData(166,6209
class LoadInst 177,6672
  using VolatileField 178,6715
  using AlignmentField 179,6764
  using OrderingField 180,6840
  bool isVolatile(214,8339
  void setVolatile(217,8465
  Align getAlign(220,8598
  void setAlignment(224,8693
  AtomicOrdering getOrdering(229,8847
  void setOrdering(234,9041
  SyncScope::ID getSyncScopeID(239,9207
  void setSyncScopeID(244,9336
  void setAtomic(250,9508
  bool isSimple(256,9667
  bool isUnordered(258,9733
  Value *getPointerOperand(getPointerOperand264,9910
  const Value *getPointerOperand(getPointerOperand265,9965
  static unsigned getPointerOperandIndex(266,10032
  Type *getPointerOperandType(getPointerOperandType267,10090
  unsigned getPointerAddressSpace(270,10228
  static bool classof(275,10410
  static bool classof(278,10508
  void setSubclassData(286,10795
  SyncScope::ID SSID;293,11083
class StoreInst 301,11364
  using VolatileField 302,11403
  using AlignmentField 303,11452
  using OrderingField 304,11528
  void *operator new(operator new341,13257
  void operator delete(operator delete342,13325
  bool isVolatile(345,13460
  void setVolatile(348,13587
  Align getAlign(353,13766
  void setAlignment(357,13861
  AtomicOrdering getOrdering(362,14016
  void setOrdering(368,14212
  SyncScope::ID getSyncScopeID(373,14379
  void setSyncScopeID(378,14509
  void setAtomic(384,14682
  bool isSimple(390,14841
  bool isUnordered(392,14907
  Value *getValueOperand(getValueOperand398,15084
  const Value *getValueOperand(getValueOperand399,15137
  Value *getPointerOperand(getPointerOperand401,15203
  const Value *getPointerOperand(getPointerOperand402,15258
  static unsigned getPointerOperandIndex(403,15325
  Type *getPointerOperandType(getPointerOperandType404,15383
  unsigned getPointerAddressSpace(407,15521
  static bool classof(412,15703
  static bool classof(415,15802
  void setSubclassData(423,16089
  SyncScope::ID SSID;430,16378
struct OperandTraits<OperandTraits434,16416
class FenceInst 444,16825
  using OrderingField 445,16864
  void *operator new(operator new465,17537
  void operator delete(operator delete466,17605
  AtomicOrdering getOrdering(469,17737
  void setOrdering(475,17968
  SyncScope::ID getSyncScopeID(480,18135
  void setSyncScopeID(485,18265
  static bool classof(490,18408
  static bool classof(493,18507
  void setSubclassData(501,18794
  SyncScope::ID SSID;508,19083
class AtomicCmpXchgInst 521,19655
  using AtomicOrderingBitfieldElement 527,19905
      typename Bitfield::Element<AtomicOrdering, Offset,528,19945
  void *operator new(operator new548,20771
  void operator delete(operator delete549,20839
  using VolatileField 551,20906
  using WeakField 552,20955
  using SuccessOrderingField 553,21021
  using FailureOrderingField 555,21110
  using AlignmentField 557,21210
  Align getAlign(566,21596
  void setAlignment(570,21689
  bool isVolatile(577,21863
  void setVolatile(581,21991
  bool isWeak(584,22113
  void setWeak(586,22177
  static bool isValidSuccessOrdering(591,22358
  static bool isValidFailureOrdering(596,22529
  AtomicOrdering getSuccessOrdering(604,22882
  void setSuccessOrdering(609,23057
  AtomicOrdering getFailureOrdering(616,23338
  void setFailureOrdering(621,23513
  AtomicOrdering getMergedOrdering(629,23845
  SyncScope::ID getSyncScopeID(642,24397
  void setSyncScopeID(647,24529
  Value *getPointerOperand(getPointerOperand651,24601
  const Value *getPointerOperand(getPointerOperand652,24656
  static unsigned getPointerOperandIndex(653,24723
  Value *getCompareOperand(getCompareOperand655,24782
  const Value *getCompareOperand(getCompareOperand656,24837
  Value *getNewValOperand(getNewValOperand658,24905
  const Value *getNewValOperand(getNewValOperand659,24959
  unsigned getPointerAddressSpace(662,25082
  getStrongestFailureOrdering(674,25618
  static bool classof(690,26193
  static bool classof(693,26300
  void setSubclassData(701,26587
  SyncScope::ID SSID;708,26878
struct OperandTraits<OperandTraits712,26916
class AtomicRMWInst 726,27461
  enum BinOp 738,27959
    Xchg,740,28000
    Add,742,28031
    Sub,744,28061
    And,746,28091
    Nand,748,28124
    Or,750,28155
    Xor,752,28184
    Max,754,28230
    Min,756,28276
    UMax,758,28324
    UMin,760,28373
    FAdd,763,28405
    FSub,766,28437
    FMax,770,28536
    FMin,774,28635
    UIncWrap,778,28732
    UDecWrap,782,28856
    FIRST_BINOP 784,28871
    LAST_BINOP 785,28895
    BAD_BINOP786,28922
  using AtomicOrderingBitfieldElement 791,28980
      typename Bitfield::Element<AtomicOrdering, Offset,792,29020
  using BinOpBitfieldElement 796,29166
      typename Bitfield::Element<BinOp, Offset,797,29197
  void *operator new(operator new808,29689
  void operator delete(operator delete809,29757
  using VolatileField 811,29824
  using AtomicOrderingField 812,29873
  using OperationField 814,29965
  using AlignmentField 815,30042
  BinOp getOperation(820,30320
  static bool isFPOperation(824,30444
  void setOperation(836,30685
  Align getAlign(842,30868
  void setAlignment(846,30961
  bool isVolatile(852,31123
  void setVolatile(856,31254
  AtomicOrdering getOrdering(862,31496
  void setOrdering(867,31651
  SyncScope::ID getSyncScopeID(876,32043
  void setSyncScopeID(881,32171
  Value *getPointerOperand(getPointerOperand885,32243
  const Value *getPointerOperand(getPointerOperand886,32298
  static unsigned getPointerOperandIndex(887,32365
  Value *getValOperand(getValOperand889,32424
  const Value *getValOperand(getValOperand890,32475
  unsigned getPointerAddressSpace(893,32595
  bool isFloatingPointOperation(897,32713
  static bool classof(902,32873
  static bool classof(905,32976
  void setSubclassData(916,33388
  SyncScope::ID SSID;923,33675
struct OperandTraits<OperandTraits927,33713
DEFINE_TRANSPARENT_OPERAND_ACCESSORS(931,33807
class GetElementPtrInst 948,34432
  Type *SourceElementType;SourceElementType949,34479
  Type *ResultElementType;ResultElementType950,34506
  static GetElementPtrInst *Create(Create974,35481
  static GetElementPtrInst *Create(Create984,36001
  CreateInBounds(997,36655
  static GetElementPtrInst *CreateInBounds(CreateInBounds1006,36976
  Type *getSourceElementType(getSourceElementType1019,37512
  void setSourceElementType(1021,37580
  void setResultElementType(1022,37646
  Type *getResultElementType(getResultElementType1024,37713
  unsigned getAddressSpace(1029,37855
  inline op_iterator       idx_begin(1052,38846
  inline const_op_iterator idx_begin(1053,38916
  inline op_iterator       idx_end(1054,38986
  inline const_op_iterator idx_end(1055,39052
  inline iterator_range<op_iterator> indices(1057,39119
  inline iterator_range<const_op_iterator> indices(1061,39220
  Value *getPointerOperand(getPointerOperand1065,39333
  const Value *getPointerOperand(getPointerOperand1068,39394
  static unsigned getPointerOperandIndex(1071,39467
  Type *getPointerOperandType(getPointerOperandType1077,39646
  unsigned getPointerAddressSpace(1082,39790
  static Type *getGEPReturnType(getGEPReturnType1088,40006
  unsigned getNumIndices(1103,40427
  bool hasIndices(1107,40530
  static bool classof(1141,42085
  static bool classof(1144,42194
struct OperandTraits<OperandTraits1150,42319
GetElementPtrInst::GetElementPtrInst(1154,42420
GetElementPtrInst::GetElementPtrInst(1166,43009
class ICmpInst:ICmpInst1188,44100
  void AssertOK(1189,44133
  ICmpInst(1209,44849
  ICmpInst(1224,45393
  ICmpInst(1239,45938
  Predicate getSignedPredicate(1255,46550
  Predicate getUnsignedPredicate(1267,47026
  static bool isEquality(1277,47403
  bool isEquality(1283,47587
  bool isCommutative(1289,47777
  bool isRelational(1293,47903
  static bool isRelational(1299,48035
  static bool isGT(1305,48165
  static bool isLT(1311,48303
  static bool isGE(1317,48441
  static bool isLE(1323,48579
  static auto predicates(1329,48718
  void swapOperands(1336,49068
  static bool classof(1346,49394
  static bool classof(1349,49492
class FCmpInst:FCmpInst1362,50097
  void AssertOK(1363,50130
  FCmpInst(1381,50769
  FCmpInst(1394,51292
  FCmpInst(1407,51817
  static bool isEquality(1420,52390
  bool isEquality(1427,52658
  bool isCommutative(1431,52849
  bool isRelational(1441,53192
  void swapOperands(1448,53540
  static auto predicates(1455,53694
  static bool classof(1462,53985
  static bool classof(1465,54083
class CallInst 1476,54549
  inline CallInst(1485,54921
  static int ComputeNumOperands(1506,55912
  static CallInst *Create(Create1519,56278
  static CallInst *Create(Create1524,56508
  static CallInst *Create(Create1531,56827
  static CallInst *Create(Create1543,57394
  static CallInst *Create(Create1548,57606
  static CallInst *Create(Create1554,57886
  static CallInst *Create(Create1565,58394
  static CallInst *Create(Create1571,58640
  static CallInst *Create(Create1579,59028
  static CallInst *Create(Create1586,59325
  static CallInst *Create(Create1592,59553
  static CallInst *Create(Create1598,59811
  enum TailCallKind 1615,60617
    TCK_None 1616,60650
    TCK_Tail 1617,60668
    TCK_MustTail 1618,60686
    TCK_NoTail 1619,60708
    TCK_LAST 1620,60728
  using TailCallKindField 1623,60760
  TailCallKind getTailCallKind(1628,60974
  bool isTailCall(1632,61069
  bool isMustTailCall(1637,61198
  bool isNoTailCall(1639,61275
  void setTailCallKind(1641,61348
  void setTailCall(1645,61441
  bool canReturnTwice(1650,61581
  void setCanReturnTwice(1651,61658
  static bool classof(1654,61797
  static bool classof(1657,61895
  void setSubclassData(1668,62293
CallInst::CallInst(1673,62408
CallInst::CallInst(1684,62926
class SelectInst 1701,63721
  SelectInst(1702,63761
  SelectInst(1710,64017
  void init(1718,64270
  static SelectInst *Create(Create1732,64601
  static SelectInst *Create(Create1742,64988
  const Value *getCondition(getCondition1748,65221
  const Value *getTrueValue(getTrueValue1749,65277
  const Value *getFalseValue(getFalseValue1750,65333
  Value *getCondition(getCondition1751,65390
  Value *getTrueValue(getTrueValue1752,65434
  Value *getFalseValue(getFalseValue1753,65478
  void setCondition(1755,65524
  void setTrueValue(1756,65571
  void setFalseValue(1757,65618
  void swapValues(1761,65770
  OtherOps getOpcode(1770,66125
  static bool classof(1775,66292
  static bool classof(1778,66392
struct OperandTraits<OperandTraits1784,66517
class VAArgInst 1796,67024
  VAArgInst(1804,67217
  VAArgInst(1810,67412
  Value *getPointerOperand(getPointerOperand1816,67588
  const Value *getPointerOperand(getPointerOperand1817,67643
  static unsigned getPointerOperandIndex(1818,67710
  static bool classof(1821,67840
  static bool classof(1824,67926
class ExtractElementInst 1836,68349
  static ExtractElementInst *Create(Create1849,68801
  static ExtractElementInst *Create(Create1855,69073
  Value *getVectorOperand(getVectorOperand1865,69495
  Value *getIndexOperand(getIndexOperand1866,69543
  const Value *getVectorOperand(getVectorOperand1867,69590
  const Value *getIndexOperand(getIndexOperand1868,69650
  VectorType *getVectorOperandType(getVectorOperandType1870,69710
  static bool classof(1878,70003
  static bool classof(1881,70111
struct OperandTraits<OperandTraits1887,70236
class InsertElementInst 1900,70712
  static InsertElementInst *Create(Create1914,71208
  static InsertElementInst *Create(Create1920,71501
  VectorType *getType(getType1933,72052
  static bool classof(1941,72325
  static bool classof(1944,72432
struct OperandTraits<OperandTraits1950,72557
class ShuffleVectorInst 1972,73490
  SmallVector<SmallVector1973,73537
  SmallVector<int, 4> ShuffleMask;1973,73537
  Constant *ShuffleMaskForBitcode;ShuffleMaskForBitcode1974,73572
  void *operator new(operator new2002,74840
  void operator delete(operator delete2003,74908
  VectorType *getType(getType2018,75483
  int getMaskValue(2027,75823
  void getShuffleMask(2036,76280
  Constant *getShuffleMaskForBitcode(getShuffleMaskForBitcode2044,76568
  ArrayRef<int> getShuffleMask(2051,76826
  bool changesLength(2057,77132
  bool increasesLength(2068,77604
  static bool isSingleSourceMask(2082,78200
  bool isSingleSource(2093,78739
  static bool isIdentityMask(2104,79279
  bool isIdentity(2121,79973
  static bool isSelectMask(2152,81388
  bool isSelect(2167,82202
  static bool isReverseMask(2177,82615
  bool isReverse(2188,83116
  static bool isZeroEltSplatMask(2198,83572
  bool isZeroEltSplat(2211,84215
  static bool isTransposeMask(2249,85857
  bool isTranspose(2261,86463
  static bool isSpliceMask(2272,87002
  bool isSplice(2283,87593
  static bool isExtractSubvectorMask(2293,88067
  bool isExtractSubvectorMask(2306,88647
  static bool isInsertSubvectorMask(2323,89425
  bool isInsertSubvectorMask(2336,90030
  static bool isReplicationMask(2353,90770
  static void commuteShuffleMask(2385,92306
  static bool isInterleaveMask(2421,93840
  static bool classof(2443,94802
  static bool classof(2446,94909
struct OperandTraits<OperandTraits2452,95034
class ExtractValueInst 2464,95522
  SmallVector<SmallVector2465,95573
  SmallVector<unsigned, 4> Indices;2465,95573
  static ExtractValueInst *Create(Create2490,96494
  static ExtractValueInst *Create(Create2498,96811
  using idx_iterator 2511,97384
  inline idx_iterator idx_begin(2513,97425
  inline idx_iterator idx_end(2514,97493
  inline iterator_range<idx_iterator> indices(2515,97559
  Value *getAggregateOperand(getAggregateOperand2519,97667
  const Value *getAggregateOperand(getAggregateOperand2522,97730
  static unsigned getAggregateOperandIndex(2525,97805
  ArrayRef<unsigned> getIndices(2529,97936
  unsigned getNumIndices(2533,98003
  bool hasIndices(2537,98080
  static bool classof(2542,98201
  static bool classof(2545,98307
ExtractValueInst::ExtractValueInst(2550,98420
ExtractValueInst::ExtractValueInst(2559,98801
class InsertValueInst 2575,99498
  SmallVector<SmallVector2576,99543
  SmallVector<unsigned, 4> Indices;2576,99543
  void *operator new(operator new2611,100998
  void operator delete(operator delete2612,101066
  static InsertValueInst *Create(Create2614,101133
  static InsertValueInst *Create(Create2621,101456
  using idx_iterator 2631,101873
  inline idx_iterator idx_begin(2633,101914
  inline idx_iterator idx_end(2634,101982
  inline iterator_range<idx_iterator> indices(2635,102048
  Value *getAggregateOperand(getAggregateOperand2639,102156
  const Value *getAggregateOperand(getAggregateOperand2642,102219
  static unsigned getAggregateOperandIndex(2645,102294
  Value *getInsertedValueOperand(getInsertedValueOperand2649,102425
  const Value *getInsertedValueOperand(getInsertedValueOperand2652,102492
  static unsigned getInsertedValueOperandIndex(2655,102571
  ArrayRef<unsigned> getIndices(2659,102706
  unsigned getNumIndices(2663,102773
  bool hasIndices(2667,102850
  static bool classof(2672,102971
  static bool classof(2675,103076
struct OperandTraits<OperandTraits2681,103201
InsertValueInst::InsertValueInst(2685,103298
InsertValueInst::InsertValueInst(2696,103741
class PHINode 2717,104648
  unsigned ReservedSpace;2720,104784
  explicit PHINode(2724,104842
  PHINode(2734,105242
  void allocHungoffUses(2752,105943
  static PHINode *Create(Create2759,106196
  static PHINode *Create(Create2765,106450
  using block_iterator 2778,107022
  using const_block_iterator 2779,107062
  const_block_iterator block_begin(2781,107116
  const_block_iterator block_end(2785,107245
  iterator_range<const_block_iterator> blocks(2789,107338
  op_range incoming_values(2793,107450
  const_op_range incoming_values(2795,107503
  unsigned getNumIncomingValues(2799,107616
  Value *getIncomingValue(getIncomingValue2803,107729
  void setIncomingValue(2806,107805
  static unsigned getOperandNumForIncomingValue(2813,108046
  static unsigned getIncomingValueNumForOperand(2817,108127
  BasicBlock *getIncomingBlock(getIncomingBlock2823,108261
  BasicBlock *getIncomingBlock(getIncomingBlock2830,108432
  BasicBlock *getIncomingBlock(getIncomingBlock2838,108705
  void setIncomingBlock(2842,108820
  void copyIncomingBlocks(2848,109058
  void replaceIncomingBlockWith(2854,109324
  void addIncoming(2863,109673
  Value *removeIncomingValue(removeIncomingValue2882,110514
  int getBasicBlockIndex(2896,111145
  Value *getIncomingValueForBlock(getIncomingValueForBlock2903,111332
  void setIncomingValueForBlock(2910,111589
  bool isComplete(2933,112485
  static bool classof(2941,112790
  static bool classof(2944,112887
struct OperandTraits<OperandTraits2953,113045
class LandingPadInst 2970,113840
  using CleanupField 2971,113884
  unsigned ReservedSpace;2975,114032
  enum ClauseType 2980,114112
  enum ClauseType { Catch,2980,114112
  enum ClauseType { Catch, Filter 2980,114112
  void *operator new(operator new2989,114491
  void operator delete(operator delete3001,114811
  bool isCleanup(3017,115648
  void setCleanup(3020,115780
  Constant *getClause(getClause3027,116057
  bool isCatch(3032,116223
  bool isFilter(3037,116395
  unsigned getNumClauses(3042,116553
  void reserveClauses(3046,116704
  static bool classof(3049,116837
  static bool classof(3052,116941
struct OperandTraits<OperandTraits3058,117066
class ReturnInst 3071,117616
  static ReturnInst* Create(3098,118745
  static ReturnInst* Create(3103,118948
  static ReturnInst* Create(3108,119128
  Value *getReturnValue(getReturnValue3116,119406
  unsigned getNumSuccessors(3120,119505
  static bool classof(3123,119627
  static bool classof(3126,119726
  BasicBlock *getSuccessor(getSuccessor3131,119845
  void setSuccessor(3135,119954
struct OperandTraits<OperandTraits3141,120080
class BranchInst 3153,120570
  struct succ_op_iterator3186,122142
    explicit succ_op_iterator(3190,122383
    BasicBlock *operator*(operator*3192,122465
    BasicBlock *operator->(operator->3193,122532
  struct const_succ_op_iterator3197,122644
    explicit const_succ_op_iterator(3202,122951
    const BasicBlock *operator*(operator*3205,123053
    const BasicBlock *operator->(operator->3206,123126
  static BranchInst *Create(Create3209,123197
  static BranchInst *Create(Create3214,123369
  static BranchInst *Create(Create3219,123590
  static BranchInst *Create(Create3223,123721
  bool isUnconditional(3231,124041
  bool isConditional(3232,124106
  Value *getCondition(getCondition3234,124172
  void setCondition(3239,124306
  unsigned getNumSuccessors(3244,124441
  BasicBlock *getSuccessor(getSuccessor3246,124508
  void setSuccessor(3251,124699
  iterator_range<succ_op_iterator> successors(3263,125157
  iterator_range<const_succ_op_iterator> successors(3269,125358
  static bool classof(3276,125686
  static bool classof(3279,125784
struct OperandTraits<OperandTraits3285,125909
class SwitchInst 3297,126369
  unsigned ReservedSpace;3298,126409
  void *operator new(operator new3321,127477
  void operator delete(operator delete3333,127787
  static const unsigned DefaultPseudoIndex 3336,127862
  template <typename SwitchInstT,3345,128238
  template <typename SwitchInstT, typename ConstantIntT,3345,128238
  class CaseHandleImpl 3346,128317
        CaseHandleImpl<SwitchInstT, ConstantIntT,3349,128450
    SwitchInstT *SI;SI3355,128642
    ptrdiff_t Index;3356,128663
    CaseHandleImpl(3359,128717
    ConstantIntT *getCaseValue(getCaseValue3363,128853
    BasicBlockT *getCaseSuccessor(getCaseSuccessor3370,129124
    unsigned getCaseIndex(3378,129424
    unsigned getSuccessorIndex(3381,129537
    bool operator==(operator==3388,129810
  using ConstCaseHandle 3394,129967
      CaseHandleImpl<const SwitchInst, const ConstantInt,3395,129993
  class CaseHandle3397,130071
    CaseHandle(3402,130229
    void setValue(3405,130354
    void setSuccessor(3412,130616
  class CaseIteratorImpl3418,130755
    CaseHandleT Case;3424,131036
    CaseIteratorImpl(3433,131312
    static CaseIteratorImpl fromSuccessorIndex(3437,131486
    operator CaseIteratorImpl<ConstCaseHandle>(operator CaseIteratorImpl<ConstCaseHandle>3447,131986
    CaseIteratorImpl &operator+=(operator+=3451,132119
    CaseIteratorImpl &operator-=(operator-=3460,132474
    ptrdiff_t operator-(3469,132837
    bool operator==(operator==3473,133013
    bool operator<(3476,133107
    const CaseHandleT &operator*(operator*3480,133278
  using CaseIt 3483,133342
  using ConstCaseIt 3484,133389
  static SwitchInst *Create(Create3486,133447
  static SwitchInst *Create(Create3492,133696
  Value *getCondition(getCondition3501,134028
  void setCondition(3502,134084
  BasicBlock *getDefaultDest(getDefaultDest3504,134137
  void setDefaultDest(3508,134225
  unsigned getNumCases(3514,134434
  CaseIt case_begin(3520,134598
  ConstCaseIt case_begin(3526,134745
  CaseIt case_end(3532,134909
  ConstCaseIt case_end(3538,135066
  iterator_range<CaseIt> cases(3543,135194
  iterator_range<ConstCaseIt> cases(3548,135337
  CaseIt case_default(3557,135718
  ConstCaseIt case_default(3560,135793
  CaseIt findCaseValue(3568,136122
  ConstCaseIt findCaseValue(3573,136287
  ConstantInt *findCaseDest(findCaseDest3585,136687
  unsigned getNumSuccessors(3618,137653
  BasicBlock *getSuccessor(getSuccessor3619,137720
  void setSuccessor(3623,137904
  static bool classof(3629,138155
  static bool classof(3632,138255
class SwitchInstProfUpdateWrapper 3639,138484
  SwitchInst &SI;SI3640,138520
  std::optional<std::optional3641,138538
  std::optional<SmallVector<uint32_t, 8>> Weights;3641,138538
  bool Changed 3642,138589
  using CaseWeightOpt 3650,138688
  SwitchInst *operator->(operator->3651,138737
  SwitchInst &operator*(operator*3652,138780
  operator SwitchInst operator SwitchInst3653,138821
  SwitchInstProfUpdateWrapper(3655,138864
  ~SwitchInstProfUpdateWrapper(3657,138932
struct OperandTraits<OperandTraits3681,139843
class IndirectBrInst 3693,140305
  unsigned ReservedSpace;3694,140349
  void *operator new(operator new3713,141237
  void operator delete(operator delete3725,141529
  struct succ_op_iterator3731,141780
    explicit succ_op_iterator(3735,142021
    BasicBlock *operator*(operator*3737,142103
    BasicBlock *operator->(operator->3738,142170
  struct const_succ_op_iterator3742,142282
    explicit const_succ_op_iterator(3747,142589
    const BasicBlock *operator*(operator*3750,142691
    const BasicBlock *operator->(operator->3751,142764
  static IndirectBrInst *Create(Create3754,142835
  static IndirectBrInst *Create(Create3759,143042
  Value *getAddress(getAddress3768,143377
  const Value *getAddress(getAddress3769,143425
  void setAddress(3770,143485
  unsigned getNumDestinations(3774,143623
  BasicBlock *getDestination(getDestination3777,143733
  const BasicBlock *getDestination(getDestination3778,143802
  unsigned getNumSuccessors(3788,144085
  BasicBlock *getSuccessor(getSuccessor3789,144152
  void setSuccessor(3792,144249
  iterator_range<succ_op_iterator> successors(3796,144341
  iterator_range<const_succ_op_iterator> successors(3801,144522
  static bool classof(3807,144798
  static bool classof(3810,144902
struct OperandTraits<OperandTraits3816,145027
class InvokeInst 3828,145485
  static constexpr int NumExtraOperands 3831,145631
  static constexpr int NormalDestOpEndIdx 3834,145754
  static constexpr int UnwindDestOpEndIdx 3837,145880
  static int ComputeNumOperands(3859,146904
  static InvokeInst *Create(Create3872,147314
  static InvokeInst *Create(Create3882,147806
  static InvokeInst *Create(Create3896,148501
  static InvokeInst *Create(Create3905,148952
  static InvokeInst *Create(Create3918,149586
  static InvokeInst *Create(Create3926,150001
  static InvokeInst *Create(Create3935,150495
  static InvokeInst *Create(Create3942,150855
  BasicBlock *getNormalDest(getNormalDest3960,151789
  BasicBlock *getUnwindDest(getUnwindDest3963,151886
  void setNormalDest(3966,151983
  void setUnwindDest(3969,152086
  BasicBlock *getSuccessor(getSuccessor3977,152332
  void setSuccessor(3982,152500
  unsigned getNumSuccessors(3990,152706
  static bool classof(3993,152828
  static bool classof(3996,152930
  void setSubclassData(4004,153217
InvokeInst::InvokeInst(4009,153332
InvokeInst::InvokeInst(4019,153865
class CallBrInst 4037,154815
  unsigned NumIndirectDests;4039,154853
  static int ComputeNumOperands(4063,155945
  static CallBrInst *Create(Create4077,156409
  Create(4089,156994
  static CallBrInst *Create(Create4102,157661
  static CallBrInst *Create(Create4113,158211
  static CallBrInst *Create(Create4128,158977
  static CallBrInst *Create(Create4136,159399
  static CallBrInst *Create(Create4146,159942
  static CallBrInst *Create(Create4154,160351
  unsigned getNumIndirectDests(4176,161400
  Value *getIndirectDestLabel(getIndirectDestLabel4180,161541
  Value *getIndirectDestLabelUse(getIndirectDestLabelUse4185,161728
  BasicBlock *getDefaultDest(getDefaultDest4191,161965
  BasicBlock *getIndirectDest(getIndirectDest4194,162079
  SmallVector<SmallVector4197,162212
  SmallVector<BasicBlock *, 16> getIndirectDests(4197,162212
  void setDefaultDest(4203,162465
  void setIndirectDest(4206,162585
  BasicBlock *getSuccessor(getSuccessor4210,162719
  void setSuccessor(4216,162927
  unsigned getNumSuccessors(4222,163162
  static bool classof(4225,163308
  static bool classof(4228,163410
  void setSubclassData(4236,163697
CallBrInst::CallBrInst(4241,163812
CallBrInst::CallBrInst(4252,164389
class ResumeInst 4270,165304
  static ResumeInst *Create(Create4283,165653
  static ResumeInst *Create(Create4287,165786
  Value *getValue(getValue4295,166020
  unsigned getNumSuccessors(4297,166067
  static bool classof(4300,166189
  static bool classof(4303,166289
  BasicBlock *getSuccessor(getSuccessor4308,166408
  void setSuccessor(4312,166517
struct OperandTraits<OperandTraits4318,166649
class CatchSwitchInst 4327,167006
  using UnwindDestField 4328,167051
  unsigned ReservedSpace;4332,167202
  void *operator new(operator new4356,168298
  void operator delete(operator delete4368,168633
  static CatchSwitchInst *Create(Create4370,168707
  static CatchSwitchInst *Create(Create4378,169096
  Value *getParentPad(getParentPad4389,169563
  void setParentPad(4390,169619
  bool hasUnwindDest(4393,169731
  bool unwindsToCaller(4394,169807
  BasicBlock *getUnwindDest(getUnwindDest4395,169867
  void setUnwindDest(4400,170000
  unsigned getNumHandlers(4408,170240
  static BasicBlock *handler_helper(handler_helper4415,170383
  static const BasicBlock *handler_helper(handler_helper4416,170461
  using DerefFnTy 4421,170566
  using handler_iterator 4422,170612
  using handler_range 4423,170680
  using ConstDerefFnTy 4424,170738
  using const_handler_iterator 4425,170801
  using const_handler_range 4427,170892
  handler_iterator handler_begin(4430,171042
  const_handler_iterator handler_begin(4439,171307
  handler_iterator handler_end(4448,171615
  const_handler_iterator handler_end(4454,171815
  handler_range handlers(4459,171989
  const_handler_range handlers(4464,172123
  unsigned getNumSuccessors(4476,172477
  BasicBlock *getSuccessor(getSuccessor4477,172546
  void setSuccessor(4482,172745
  static bool classof(4489,173008
  static bool classof(4492,173113
struct OperandTraits<OperandTraits4498,173238
class CleanupPadInst 4505,173592
  explicit CleanupPadInst(4507,173648
  explicit CleanupPadInst(4512,173956
  static CleanupPadInst *Create(Create4519,174270
  static CleanupPadInst *Create(Create4528,174661
  static bool classof(4536,175027
  static bool classof(4539,175131
class CatchPadInst 4547,175458
  explicit CatchPadInst(4549,175512
  explicit CatchPadInst(4554,175816
  static CatchPadInst *Create(Create4561,176126
  static CatchPadInst *Create(Create4569,176466
  CatchSwitchInst *getCatchSwitch(getCatchSwitch4577,176786
  void setCatchSwitch(4580,176878
  static bool classof(4586,177052
  static bool classof(4589,177154
class CatchReturnInst 4598,177485
  static CatchReturnInst *Create(Create4612,177935
  static CatchReturnInst *Create(Create4619,178180
  CatchPadInst *getCatchPad(getCatchPad4630,178527
  void setCatchPad(4631,178603
  BasicBlock *getSuccessor(getSuccessor4636,178699
  void setSuccessor(4637,178772
  unsigned getNumSuccessors(4641,178863
  Value *getCatchSwitchParentPad(getCatchSwitchParentPad4645,179047
  static bool classof(4650,179226
  static bool classof(4653,179330
  BasicBlock *getSuccessor(getSuccessor4658,179449
  void setSuccessor(4663,179612
struct OperandTraits<OperandTraits4670,179786
class CleanupReturnInst 4679,180166
  using UnwindDestField 4680,180213
  static CleanupReturnInst *Create(Create4698,180797
  static CleanupReturnInst *Create(Create4709,181175
  bool hasUnwindDest(4722,181581
  bool unwindsToCaller(4723,181657
  CleanupPadInst *getCleanupPad(getCleanupPad4726,181746
  void setCleanupPad(4729,181834
  unsigned getNumSuccessors(4734,181940
  BasicBlock *getUnwindDest(getUnwindDest4736,182013
  void setUnwindDest(4739,182121
  static bool classof(4746,182314
  static bool classof(4749,182420
  BasicBlock *getSuccessor(getSuccessor4754,182539
  void setSuccessor(4759,182643
  void setSubclassData(4767,182911
struct OperandTraits<OperandTraits4773,183038
class UnreachableInst 4787,183698
  void *operator new(operator new4799,184095
  void operator delete(operator delete4800,184163
  unsigned getNumSuccessors(4802,184230
  static bool classof(4805,184352
  static bool classof(4808,184457
  BasicBlock *getSuccessor(getSuccessor4813,184576
  void setSuccessor(4817,184690
class TruncInst 4827,185080
  static bool classof(4853,186120
  static bool classof(4856,186206
class ZExtInst 4866,186591
  static bool classof(4892,187612
  static bool classof(4895,187697
class SExtInst 4905,188084
  static bool classof(4931,189113
  static bool classof(4934,189198
class FPTruncInst 4944,189591
  static bool classof(4970,190624
  static bool classof(4973,190712
class FPExtInst 4983,191103
  static bool classof(5009,192117
  static bool classof(5012,192203
class UIToFPInst 5022,192600
  static bool classof(5048,193623
  static bool classof(5051,193710
class SIToFPInst 5061,194110
  static bool classof(5087,195133
  static bool classof(5090,195220
class FPToUIInst 5100,195621
  static bool classof(5126,196640
  static bool classof(5129,196727
class FPToSIInst 5139,197127
  static bool classof(5165,198151
  static bool classof(5168,198238
class IntToPtrInst 5178,198631
  unsigned getAddressSpace(5203,199650
  static bool classof(5208,199811
  static bool classof(5211,199900
class PtrToIntInst 5221,200293
  Value *getPointerOperand(getPointerOperand5247,201287
  const Value *getPointerOperand(getPointerOperand5249,201374
  static unsigned getPointerOperandIndex(5251,201494
  unsigned getPointerAddressSpace(5254,201609
  static bool classof(5259,201798
  static bool classof(5262,201887
class BitCastInst 5272,202277
  static bool classof(5298,203297
  static bool classof(5301,203385
class AddrSpaceCastInst 5312,203808
  static bool classof(5338,204858
  static bool classof(5341,204952
  Value *getPointerOperand(getPointerOperand5346,205094
  const Value *getPointerOperand(getPointerOperand5351,205188
  static unsigned getPointerOperandIndex(5356,205315
  unsigned getSrcAddressSpace(5361,205436
  unsigned getDestAddressSpace(5366,205597
inline const Value *getLoadStorePointerOperand(getLoadStorePointerOperand5377,206031
inline Value *getLoadStorePointerOperand(getLoadStorePointerOperand5384,206279
inline const Value *getPointerOperand(getPointerOperand5391,206571
inline Value *getPointerOperand(getPointerOperand5398,206799
inline Align getLoadStoreAlignment(5403,207005
inline unsigned getLoadStoreAddressSpace(5413,207373
inline Type *getLoadStoreType(getLoadStoreType5422,207741
inline std::optional<SyncScope::ID> getAtomicSyncScopeID(5432,208139
class FreezeInst 5454,209053
  static inline bool classof(5469,209568
  static inline bool classof(5472,209662

/usr/include/llvm/IR/IntrinsicImpl.inc,256
struct 71,1750
static 76,1843
static 13758,442009
return 15468,482972
static 15473,483115
static 17183,658610
static 18384,724032
static 18463,726189
AttributeList 19104,750051
Intrinsic:Intrinsic35307,1354543
Intrinsic:Intrinsic58847,3201953

/usr/include/llvm/IR/IntrinsicInst.h,12426
#define LLVM_IR_INTRINSICINST_H24,1046
class IntrinsicInst 47,1669
  Intrinsic::ID getIntrinsicID(54,1904
  bool isAssociative(58,2000
  bool isCommutative(72,2333
  bool isAssumeLikeIntrinsic(101,3127
  static bool classof(129,4027
  static bool classof(134,4177
static inline bool isLifetimeIntrinsic(140,4340
class LifetimeIntrinsic 151,4593
  static bool classof(155,4687
  static bool classof(158,4792
static inline bool isDbgInfoIntrinsic(165,4976
class DbgInfoIntrinsic 178,5283
  static bool classof(182,5376
  static bool classof(185,5480
class location_op_iterator194,5784
  PointerUnion<PointerUnion197,5945
  PointerUnion<ValueAsMetadata *, ValueAsMetadata **> I;197,5945
  location_op_iterator(200,6011
  location_op_iterator(201,6082
  location_op_iterator(203,6153
  location_op_iterator &operator=(operator=204,6219
  bool operator==(operator==208,6321
  const Value *operator*(operator*209,6401
  Value *operator*(operator*215,6645
  location_op_iterator &operator++(operator++221,6876
  location_op_iterator &operator--(operator--228,7066
class RawLocationWrapper 240,7430
  Metadata *RawLocation RawLocation241,7457
  explicit RawLocationWrapper(245,7535
  Metadata *getRawLocation(getRawLocation253,7920
  unsigned getNumVariableLocationOps(259,8280
  bool hasArgList(264,8433
  bool isKillLocation(265,8504
  friend bool operator==(operator==278,9051
  friend bool operator!=(operator!=282,9208
  friend bool operator>(286,9344
  friend bool operator>=(operator>=290,9498
  friend bool operator<(294,9655
  friend bool operator<=(operator<=298,9809
class DbgVariableIntrinsic 305,10045
  void setVariable(322,10841
  void setExpression(326,10966
  unsigned getNumVariableLocationOps(330,11093
  bool hasArgList(334,11206
  bool isAddressOfVariable(339,11499
  void setKillLocation(343,11596
  bool isKillLocation(355,12006
  DILocalVariable *getVariable(getVariable359,12108
  DIExpression *getExpression(getExpression363,12206
  Metadata *getRawLocation(getRawLocation367,12302
  RawLocationWrapper getWrappedLocation(371,12411
  Metadata *getRawVariable(getRawVariable375,12515
  Metadata *getRawExpression(getRawExpression379,12624
  void setRawLocation(386,12919
  std::optional<DIExpression::FragmentInfo> getFragment(395,13245
  DIExpression::FragmentInfo getFragmentOrEntireVariable(402,13568
  static bool classof(414,13998
  static bool classof(424,14239
  void setArgOperand(429,14372
  void setOperand(432,14464
class DbgDeclareInst 436,14602
  Value *getAddress(getAddress438,14663
  static bool classof(446,14884
  static bool classof(449,14994
class DbgValueInst 456,15172
  Value *getValue(getValue460,15389
  iterator_range<location_op_iterator> getValues(463,15480
  static bool classof(469,15608
  static bool classof(473,15775
class DbgAssignIntrinsic 480,15954
  enum Operands 481,16003
    OpValue,482,16021
    OpVar,483,16034
    OpExpr,484,16045
    OpAssignID,485,16057
    OpAddress,486,16073
    OpAddressExpr,487,16088
  Metadata *getRawAddress(getRawAddress492,16150
  Metadata *getRawAssignID(getRawAssignID495,16265
  DIAssignID *getAssignID(getAssignID498,16382
  Metadata *getRawAddressExpression(getRawAddressExpression499,16463
  DIExpression *getAddressExpression(getAddressExpression502,16592
  void setAddressExpression(505,16701
  static bool classof(521,17356
  static bool classof(524,17465
class DbgLabelInst 531,17643
  DILabel *getLabel(getLabel533,17698
  Metadata *getRawLabel(getRawLabel535,17768
  static bool classof(541,17955
  static bool classof(544,18063
class VPIntrinsic 551,18258
  static bool classof(599,20199
  static bool classof(602,20298
  std::optional<unsigned> getFunctionalOpcode(607,20450
  std::optional<unsigned> getFunctionalIntrinsicID(612,20610
  std::optional<unsigned> getConstrainedIntrinsicID(617,20782
class VPReductionIntrinsic 634,21361
  static bool classof(646,21764
  static bool classof(649,21885
class VPCastIntrinsic 655,22011
  static bool classof(661,22188
  static bool classof(664,22299
class VPCmpIntrinsic 670,22425
  static bool classof(678,22644
  static bool classof(681,22753
class VPBinOpIntrinsic 687,22879
  static bool classof(693,23058
  static bool classof(696,23171
class ConstrainedFPIntrinsic 704,23375
  static bool classof(714,23773
class ConstrainedFPCmpIntrinsic 720,23941
  bool isSignaling(723,24059
  static bool classof(728,24238
  static bool classof(737,24486
class MinMaxIntrinsic 743,24649
  static bool classof(745,24704
  static bool classof(756,24953
  Value *getLHS(getLHS760,25067
  Value *getRHS(getRHS761,25141
  static ICmpInst::Predicate getPredicate(764,25281
  ICmpInst::Predicate getPredicate(780,25775
  static bool isSigned(785,25919
  bool isSigned(790,26068
  static APInt getSaturationPoint(795,26343
  APInt getSaturationPoint(813,26996
  static Constant *getSaturationPoint(getSaturationPoint820,27322
  Constant *getSaturationPoint(getSaturationPoint828,27707
class BinaryOpIntrinsic 835,27963
  static bool classof(837,28020
  static bool classof(854,28525
  Value *getLHS(getLHS858,28639
  Value *getRHS(getRHS859,28713
class WithOverflowInst 872,29120
  static bool classof(874,29180
  static bool classof(887,29565
class SaturatingInst 893,29729
  static bool classof(895,29787
  static bool classof(906,30052
template <typename Derived> class MemIntrinsicBase 915,30348
  enum { ARG_DEST 917,30433
  enum { ARG_DEST = 0, ARG_LENGTH 917,30433
  Value *getRawDest(getRawDest920,30483
  const Use &getRawDestUse(getRawDestUse923,30574
  Use &getRawDestUse(getRawDestUse924,30648
  Value *getLength(getLength926,30711
  const Use &getLengthUse(getLengthUse929,30803
  Use &getLengthUse(getLengthUse930,30878
  Value *getDest(getDest935,31148
  unsigned getDestAddressSpace(937,31220
  LLVM_DEPRECATED(943,31442
  MaybeAlign getDestAlign(949,31631
  void setDest(952,31756
  void setDestAlignment(958,31938
  void setDestAlignment(964,32166
  void setLength(970,32366
template <class BaseCL> class MemTransferBase 979,32642
  enum { ARG_SOURCE 981,32715
  Value *getRawSource(getRawSource985,32798
  const Use &getRawSourceUse(getRawSourceUse988,32901
  Use &getRawSourceUse(getRawSourceUse991,32993
  Value *getSource(getSource996,33250
  unsigned getSourceAddressSpace(998,33326
  LLVM_DEPRECATED(1004,33554
  MaybeAlign getSourceAlign(1011,33760
  void setSource(1015,33849
  void setSourceAlignment(1021,34047
  void setSourceAlignment(1028,34331
template <class BaseCL> class MemSetBase 1037,34674
  enum { ARG_VALUE 1039,34742
  Value *getValue(getValue1042,34777
  const Use &getValueUse(getValueUse1045,34875
  Use &getValueUse(getValueUse1046,34956
  void setValue(1048,35026
class AtomicMemIntrinsic 1057,35351
  enum { ARG_ELEMENTSIZE 1059,35433
  Value *getRawElementSizeInBytes(getRawElementSizeInBytes1062,35474
  ConstantInt *getElementSizeInBytesCst(getElementSizeInBytesCst1066,35587
  uint32_t getElementSizeInBytes(1070,35700
  void setElementSizeInBytes(1074,35803
  static bool classof(1080,36021
  static bool classof(1090,36326
class AtomicMemSetInst 1097,36538
  static bool classof(1099,36611
  static bool classof(1102,36741
class AtomicMemTransferInst 1109,36968
  static bool classof(1111,37051
  static bool classof(1120,37303
class AtomicMemCpyInst 1127,37520
  static bool classof(1129,37584
  static bool classof(1132,37714
class AtomicMemMoveInst 1139,37933
  static bool classof(1141,37998
  static bool classof(1144,38129
class MemIntrinsic 1150,38307
  enum { ARG_VOLATILE 1152,38377
  ConstantInt *getVolatileCst(getVolatileCst1155,38415
  bool isVolatile(1159,38540
  void setVolatile(1161,38607
  static bool classof(1164,38747
  static bool classof(1176,39047
class MemSetInst 1182,39236
  static bool classof(1185,39368
  static bool classof(1194,39576
class MemSetInlineInst 1200,39748
  ConstantInt *getLength(getLength1202,39801
  static bool classof(1206,39966
  static bool classof(1209,40078
class MemTransferInst 1215,40252
  static bool classof(1218,40394
  static bool classof(1228,40631
class MemCpyInst 1234,40796
  static bool classof(1237,40919
  static bool classof(1241,41086
class MemMoveInst 1247,41252
  static bool classof(1250,41376
  static bool classof(1253,41482
class MemCpyInlineInst 1259,41654
  ConstantInt *getLength(getLength1261,41707
  static bool classof(1265,41872
  static bool classof(1268,41984
class AnyMemIntrinsic 1277,42304
  bool isVolatile(1279,42379
  static bool classof(1286,42564
  static bool classof(1301,43024
class AnyMemSetInst 1309,43253
  static bool classof(1311,43320
  static bool classof(1321,43581
class AnyMemTransferInst 1329,43829
  static bool classof(1331,43906
  static bool classof(1343,44250
class AnyMemCpyInst 1351,44481
  static bool classof(1353,44539
  static bool classof(1363,44800
class AnyMemMoveInst 1371,45034
  static bool classof(1373,45093
  static bool classof(1382,45321
class VAStartInst 1388,45487
  static bool classof(1390,45538
  static bool classof(1393,45644
  Value *getArgList(getArgList1397,45758
class VAEndInst 1401,45887
  static bool classof(1403,45936
  static bool classof(1406,46040
  Value *getArgList(getArgList1410,46154
class VACopyInst 1414,46284
  static bool classof(1416,46334
  static bool classof(1419,46439
  Value *getDest(getDest1423,46553
  Value *getSrc(getSrc1424,46628
class InstrProfInstBase 1428,46753
  GlobalVariable *getName(getName1431,46854
  ConstantInt *getHash(getHash1436,47052
class InstrProfCntrInstBase 1442,47217
class InstrProfCoverInst 1451,47534
  static bool classof(1453,47600
  static bool classof(1456,47714
class InstrProfIncrementInst 1462,47891
  static bool classof(1464,47961
  static bool classof(1468,48152
class InstrProfIncrementInstStep 1475,48360
  static bool classof(1477,48435
  static bool classof(1480,48558
class InstrProfTimestampInst 1486,48735
  static bool classof(1488,48805
  static bool classof(1491,48923
class InstrProfValueProfileInst 1497,49104
  static bool classof(1499,49177
  static bool classof(1502,49299
  Value *getTargetValue(getTargetValue1506,49413
  ConstantInt *getValueKind(getValueKind1510,49515
  ConstantInt *getIndex(getIndex1515,49662
class InstrProfMCDCBitmapInstBase 1521,49854
  static bool classof(1523,49925
  static bool classof(1527,50128
  ConstantInt *getNumBitmapBytes(getNumBitmapBytes1533,50339
class InstrProfMCDCBitmapParameters 1539,50525
  static bool classof(1541,50608
  static bool classof(1544,50732
class InstrProfMCDCTVBitmapUpdate 1550,50920
  static bool classof(1552,51001
  static bool classof(1555,51130
  ConstantInt *getBitmapIndex(getBitmapIndex1561,51331
  Value *getMCDCCondBitmapAddr(getMCDCCondBitmapAddr1567,51594
class InstrProfMCDCCondBitmapUpdate 1575,51903
  static bool classof(1577,51976
  static bool classof(1580,52107
  ConstantInt *getCondID(getCondID1585,52270
  Value *getMCDCCondBitmapAddr(getMCDCCondBitmapAddr1590,52444
  Value *getCondBool(getCondBool1596,52703
class PseudoProbeInst 1601,52805
  static bool classof(1603,52860
  static bool classof(1607,52971
  ConstantInt *getFuncGuid(getFuncGuid1611,53085
  ConstantInt *getIndex(getIndex1615,53196
  ConstantInt *getAttributes(getAttributes1619,53304
  ConstantInt *getFactor(getFactor1623,53417
class NoAliasScopeDeclInst 1628,53529
  static bool classof(1630,53589
  static bool classof(1634,53720
  MDNode *getScopeList(getScopeList1638,53834
  void setScopeList(1644,54011
class GCProjectionInst 1652,54327
  static bool classof(1654,54383
  static bool classof(1659,54573
  bool isTiedToInvoke(1665,54819
class GCRelocateInst 1676,55122
  static bool classof(1678,55179
  static bool classof(1682,55303
  unsigned getBasePtrIndex(1689,55583
  unsigned getDerivedPtrIndex(1695,55829
class GCResultInst 1704,56052
  static bool classof(1706,56107
  static bool classof(1710,56229
class AssumeInst 1717,56394
  static bool classof(1719,56444
  static bool classof(1722,56549
static inline bool isConvergenceControlIntrinsic(1728,56733
class ConvergenceControlInst 1740,57106
  static bool classof(1742,57168
  static bool classof(1746,57284

/usr/include/llvm/IR/Intrinsics.td,20839
class IntrinsicProperty<IntrinsicProperty20,805
def IntrNoMem : IntrinsicProperty;30,1196
def IntrReadMem : IntrinsicProperty;36,1489
def IntrWriteMem : IntrinsicProperty;41,1722
def IntrArgMemOnly : IntrinsicProperty;46,1995
def IntrInaccessibleMemOnly : IntrinsicProperty;50,2194
def IntrInaccessibleMemOrArgMemOnly : IntrinsicProperty;55,2470
def Commutative : IntrinsicProperty;58,2594
def Throws : IntrinsicProperty;61,2670
class AttrIndex<AttrIndex64,2773
  int Value 65,2800
def RetIndex : AttrIndex<AttrIndex68,2852
  int ArgNo 73,3070
class NoAlias<NoAlias78,3238
  int ArgNo 79,3289
class NoUndef<NoUndef83,3382
  int ArgNo 84,3433
class NonNull<NonNull88,3510
  int ArgNo 89,3561
class Align<AttrIndex idx, int align> : IntrinsicProperty 92,3589
class Dereferenceable<AttrIndex idx, int bytes> : IntrinsicProperty 97,3698
class Returned<Returned104,3902
  int ArgNo 105,3954
class ImmArg<ImmArg109,4039
  int ArgNo 110,4089
class ReadOnly<ReadOnly115,4221
  int ArgNo 116,4273
class WriteOnly<WriteOnly121,4394
  int ArgNo 122,4447
class ReadNone<ReadNone127,4561
  int ArgNo 128,4613
def IntrNoReturn : IntrinsicProperty;131,4641
def IntrNoCallback : IntrinsicProperty<IntrinsicProperty134,4703
def IntrNoSync : IntrinsicProperty<IntrinsicProperty138,4868
def IntrNoFree : IntrinsicProperty<IntrinsicProperty141,4931
def IntrWillReturn : IntrinsicProperty<IntrinsicProperty144,4994
def IntrCold : IntrinsicProperty;148,5140
def IntrNoDuplicate : IntrinsicProperty;152,5303
def IntrNoMerge : IntrinsicProperty;156,5460
def IntrConvergent : IntrinsicProperty;161,5684
def IntrSpeculatable : IntrinsicProperty;164,5793
def IntrHasSideEffects : IntrinsicProperty;173,6325
def ArgKind 180,6609
class EncAnyType<EncAnyType194,6858
  int ret 196,6910
class EncMatchType<EncMatchType200,6981
  int ret 202,7031
class EncSameWidth<EncSameWidth206,7108
  int ret 208,7158
class EncNextArgA<EncNextArgA212,7196
  int ret 214,7247
class EncNextArgN<EncNextArgN218,7294
  int ret 220,7343
    list<int> ArgCodes,225,7417
    int ACIdx,226,7441
  int ah 228,7470
  int al 229,7499
  int num 230,7528
  int ret 231,7553
class IIT_Base<IIT_Base244,8040
  int Number 245,8066
  list<ValueType> VTs 246,8086
class IIT_VT<ValueType vt, int num> : IIT_Base<IIT_Base249,8116
class IIT_Int<int size, int num> : IIT_Base<IIT_Base253,8191
class IIT_Vec<int nelem, int num> : IIT_Base<IIT_Base258,8329
defset list<IIT_Base> IIT_all 263,8469
defvar IIT_all_FixedTypes 324,10480
defvar IIT_all_VectorTypes 327,10578
defvar IIT_RetNumbers 330,10653
class LLVMType<LLVMType347,11099
  ValueType VT 348,11130
  int isAny 349,11151
  int ArgCode 351,11183
  int Number 352,11202
  list<IIT_Base> IITs 354,11221
  assert !le(!size(size357,11380
  list<IIT_Base> IIT_Vecs 359,11429
  assert !le(!size(size365,11661
  list<int> Sig 367,11714
class LLVMAnyType<LLVMAnyType373,11886
  let ArgCode 374,11935
  let Sig 381,12168
  assert isAny,386,12237
class LLVMQualPointerType<LLVMQualPointerType389,12299
  assert !and(!le(le391,12361
  let Sig 394,12450
class LLVMAnyPointerType 403,12567
  assert isAny,404,12617
  : LLVMMatchType<LLVMMatchType423,13351
  let Sig 443,14225
  list<int> IdxsR 583,20638
  list<int> RIdxsR 588,20766
  list<int> Idxs 592,20898
  list<int> RIdxs 593,20961
  list<LLVMType> AllTypes 599,21108
  list<int> ACIdxs 602,21227
  list<LLVMType> ACTys 607,21396
  list<int> ArgCodes 610,21496
  list<int> MappingRIdxs 613,21589
  bit isOverloaded 617,21718
  list<LLVMType> Types 620,21804
  list<list<int>> TypeSig 623,21924
                list<LLVMType> param_types 650,22956
                list<LLVMType> param_types 676,24026
class ClangBuiltin<ClangBuiltin687,24583
  string ClangBuiltinName 688,24617
class MSBuiltin<MSBuiltin691,24654
  string MSBuiltinName 692,24685
def int_gcroot  : Intrinsic<Intrinsic707,25209
def int_gcread  : Intrinsic<Intrinsic709,25298
def int_gcwrite : Intrinsic<Intrinsic712,25457
def int_objc_autorelease                    : Intrinsic<Intrinsic722,25889
def int_objc_autoreleasePoolPop             : Intrinsic<Intrinsic725,26113
def int_objc_autoreleasePoolPush            : Intrinsic<Intrinsic726,26189
def int_objc_autoreleaseReturnValue         : Intrinsic<Intrinsic727,26265
def int_objc_copyWeak                       : Intrinsic<Intrinsic730,26489
def int_objc_destroyWeak                    : Intrinsic<Intrinsic733,26691
def int_objc_initWeak                       : Intrinsic<Intrinsic734,26767
def int_objc_loadWeak                       : Intrinsic<Intrinsic737,26980
def int_objc_loadWeakRetained               : Intrinsic<Intrinsic739,27123
def int_objc_moveWeak                       : Intrinsic<Intrinsic741,27266
def int_objc_release                        : Intrinsic<Intrinsic744,27468
def int_objc_retain                         : Intrinsic<Intrinsic745,27544
def int_objc_retainAutorelease              : Intrinsic<Intrinsic748,27768
def int_objc_retainAutoreleaseReturnValue   : Intrinsic<Intrinsic751,27992
def int_objc_retainAutoreleasedReturnValue  : Intrinsic<Intrinsic754,28216
def int_objc_retainBlock                    : Intrinsic<Intrinsic756,28359
def int_objc_storeStrong                    : Intrinsic<Intrinsic758,28502
def int_objc_storeWeak                      : Intrinsic<Intrinsic761,28704
def int_objc_clang_arc_use                  : Intrinsic<Intrinsic764,28917
def int_objc_clang_arc_noop_use : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic766,29052
def int_objc_unsafeClaimAutoreleasedReturnValue : Intrinsic<Intrinsic769,29270
def int_objc_retainedObject                 : Intrinsic<Intrinsic771,29421
def int_objc_unretainedObject               : Intrinsic<Intrinsic773,29564
def int_objc_unretainedPointer              : Intrinsic<Intrinsic775,29707
def int_objc_retain_autorelease             : Intrinsic<Intrinsic777,29850
def int_objc_sync_enter                     : Intrinsic<Intrinsic780,30074
def int_objc_sync_exit                      : Intrinsic<Intrinsic782,30217
def int_objc_arc_annotation_topdown_bbstart : Intrinsic<Intrinsic784,30360
def int_objc_arc_annotation_topdown_bbend   : Intrinsic<Intrinsic787,30562
def int_objc_arc_annotation_bottomup_bbstart  : Intrinsic<Intrinsic790,30764
def int_objc_arc_annotation_bottomup_bbend  : Intrinsic<Intrinsic793,30972
def int_swift_async_context_addr : Intrinsic<Intrinsic801,31447
def int_returnaddress : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic805,31601
def int_addressofreturnaddress : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic807,31746
def int_frameaddress : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic808,31837
def int_sponentry  : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic810,31983
def int_localaddress : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic821,32746
def int_localescape : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic824,32890
def int_localrecover : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic828,33088
def int_eh_recoverfp : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic834,33443
def int_seh_try_begin : Intrinsic<Intrinsic843,33911
def int_seh_try_end : Intrinsic<Intrinsic844,33986
def int_seh_scope_begin : Intrinsic<Intrinsic845,34059
def int_seh_scope_end : Intrinsic<Intrinsic846,34117
def int_stacksave     : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic850,34294
def int_stackrestore  : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic852,34421
def int_get_dynamic_area_offset : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic855,34556
def int_thread_pointer : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic857,34632
    : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic865,35073
def int_pcmarker      : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic869,35376
def int_readcyclecounter : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic871,35443
def int_assume : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic875,35622
    : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic885,36103
def int_stackprotector : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic890,36348
def int_stackguard : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic891,36432
def int_instrprof_cover : Intrinsic<Intrinsic894,36548
def int_instrprof_increment : Intrinsic<Intrinsic898,36745
def int_instrprof_increment_step : Intrinsic<Intrinsic903,36996
def int_instrprof_timestamp : Intrinsic<Intrinsic908,37247
def int_instrprof_value_profile : Intrinsic<Intrinsic913,37507
def int_instrprof_mcdc_parameters : Intrinsic<Intrinsic919,37829
def int_instrprof_mcdc_tvbitmap_update : Intrinsic<Intrinsic924,38088
def int_instrprof_mcdc_condbitmap_update : Intrinsic<Intrinsic929,38370
def int_call_preallocated_setup : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic933,38576
def int_call_preallocated_arg : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic934,38665
def int_call_preallocated_teardown : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic935,38765
def int_callbr_landingpad : Intrinsic<Intrinsic939,38979
def int_memcpy  : Intrinsic<Intrinsic945,39192
    : Intrinsic<Intrinsic960,39980
def int_memmove : Intrinsic<Intrinsic968,40347
def int_memset  : Intrinsic<Intrinsic976,40821
    : Intrinsic<Intrinsic989,41469
let IntrProperties 998,41868
def int_minnum : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1055,45490
def int_maxnum : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1059,45653
def int_minimum : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1063,45816
def int_maximum : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1067,45980
def int_objectsize : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1073,46192
let IntrProperties 1084,46732
    : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1099,47441
def IntrStrictFP : IntrinsicProperty;1108,47846
let IntrProperties 1110,47885
def int_expect : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1299,61176
def int_expect_with_probability : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1302,61304
let IntrProperties 1310,61625
let IntrProperties 1320,62180
let IntrProperties 1333,62830
def int_eh_typeid_for : Intrinsic<Intrinsic1358,64106
def int_eh_return_i32 : Intrinsic<Intrinsic1360,64185
def int_eh_return_i64 : Intrinsic<Intrinsic1361,64252
def int_eh_exceptionpointer : Intrinsic<Intrinsic1365,64415
def int_eh_exceptioncode : Intrinsic<Intrinsic1369,64624
def int_eh_unwind_init: Intrinsic<Intrinsic1374,64924
def int_eh_dwarf_cfa  : Intrinsic<Intrinsic1377,65027
def int_eh_sjlj_lsda             : Intrinsic<Intrinsic1379,65093
def int_eh_sjlj_callsite         : Intrinsic<Intrinsic1380,65171
def int_eh_sjlj_functioncontext : Intrinsic<Intrinsic1382,65271
def int_eh_sjlj_setjmp          : Intrinsic<Intrinsic1383,65335
def int_eh_sjlj_longjmp         : Intrinsic<Intrinsic1384,65410
def int_eh_sjlj_setup_dispatch  : Intrinsic<Intrinsic1385,65490
def int_init_trampoline : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1412,66757
def int_adjust_trampoline : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1418,67025
let IntrProperties 1426,67340
def int_sadd_sat : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1450,68932
def int_uadd_sat : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1453,69148
def int_ssub_sat : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1456,69364
def int_usub_sat : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1459,69567
def int_sshl_sat : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1462,69770
def int_ushl_sat : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1465,69973
def int_smul_fix : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1471,70272
def int_umul_fix : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1476,70553
def int_sdiv_fix : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1481,70834
def int_udiv_fix : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1485,71038
def int_smul_fix_sat : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1491,71337
def int_umul_fix_sat : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1495,71633
def int_sdiv_fix_sat : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1500,71930
def int_udiv_fix_sat : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1504,72146
def int_abs : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1510,72446
def int_smax : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1514,72611
def int_smin : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1517,72761
def int_umax : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1520,72911
def int_umin : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1523,73061
def int_lifetime_start  : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1529,73296
def int_lifetime_end    : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1534,73605
def int_invariant_start : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1539,73914
def int_invariant_end   : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1544,74234
def int_launder_invariant_group : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1563,75312
def int_strip_invariant_group : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1568,75558
def int_experimental_stackmap : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1574,75867
def int_experimental_patchpoint_void : Intrinsic<Intrinsic1577,76048
def int_experimental_patchpoint_i64 : Intrinsic<Intrinsic1582,76381
def int_experimental_gc_statepoint : Intrinsic<Intrinsic1592,76851
def int_experimental_gc_result : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1600,77287
def int_experimental_gc_relocate : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1603,77394
def int_experimental_gc_get_pointer_base : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1607,77575
def int_experimental_gc_get_pointer_offset : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1611,77763
def int_coro_id : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1620,78106
def int_coro_id_retcon : Intrinsic<Intrinsic1624,78332
def int_coro_id_retcon_once : Intrinsic<Intrinsic1628,78482
def int_coro_alloc : Intrinsic<Intrinsic1632,78637
def int_coro_id_async : Intrinsic<Intrinsic1633,78704
def int_coro_async_context_alloc : Intrinsic<Intrinsic1636,78818
def int_coro_async_context_dealloc : Intrinsic<Intrinsic1639,78919
def int_coro_async_resume : Intrinsic<Intrinsic1642,78998
def int_coro_async_size_replace : Intrinsic<Intrinsic1645,79079
    : Intrinsic<Intrinsic1647,79187
def int_coro_prepare_async : Intrinsic<Intrinsic1650,79323
def int_coro_begin : Intrinsic<Intrinsic1652,79445
def int_coro_free : Intrinsic<Intrinsic1655,79580
def int_coro_end : Intrinsic<Intrinsic1659,79826
def int_coro_end_results : Intrinsic<Intrinsic1660,79916
    : Intrinsic<Intrinsic1662,80012
def int_coro_frame : Intrinsic<Intrinsic1664,80091
def int_coro_noop : Intrinsic<Intrinsic1665,80155
def int_coro_size : Intrinsic<Intrinsic1666,80218
def int_coro_align : Intrinsic<Intrinsic1667,80284
def int_coro_save : Intrinsic<Intrinsic1669,80352
def int_coro_suspend : Intrinsic<Intrinsic1670,80430
def int_coro_suspend_retcon : Intrinsic<Intrinsic1671,80511
def int_coro_prepare_retcon : Intrinsic<Intrinsic1672,80589
def int_coro_alloca_alloc : Intrinsic<Intrinsic1674,80713
def int_coro_alloca_get : Intrinsic<Intrinsic1676,80842
def int_coro_alloca_free : Intrinsic<Intrinsic1677,80915
def int_coro_resume : Intrinsic<Intrinsic1681,81018
def int_coro_destroy : Intrinsic<Intrinsic1682,81080
def int_coro_done : Intrinsic<Intrinsic1683,81143
def int_coro_promise : Intrinsic<Intrinsic1686,81329
def int_coro_subfn_addr : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1692,81594
def int_trap : Intrinsic<Intrinsic1701,81990
def int_debugtrap : Intrinsic<Intrinsic1703,82136
def int_ubsantrap : Intrinsic<Intrinsic1705,82228
def int_experimental_deoptimize : Intrinsic<Intrinsic1709,82416
def int_experimental_guard : Intrinsic<Intrinsic1713,82591
def int_experimental_widenable_condition : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1717,82793
def int_donothing : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1721,83029
def int_sideeffect : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1727,83401
def int_pseudoprobe : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1733,83769
let IntrProperties 1737,84014
let IntrProperties 1743,84294
def int_ptrmask: DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1761,85173
def int_threadlocal_address : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1765,85385
def int_experimental_stepvector : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1769,85670
def int_vp_store : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1774,85915
def int_vp_load  : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1781,86294
def int_vp_gather: DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1787,86640
def int_vp_scatter: DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1793,86962
def int_experimental_vp_strided_store : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1801,87397
def int_experimental_vp_strided_load  : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1809,87863
let IntrProperties 1817,88308
let IntrProperties 2177,108729
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2191,109405
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2196,109593
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2202,109865
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2207,110060
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2216,110371
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2223,110629
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2233,111111
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2240,111415
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2247,111705
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2253,111975
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2259,112233
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2265,112479
def int_type_test : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2272,112782
def int_type_checked_load : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2276,113035
def int_type_checked_load_relative : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2281,113359
def int_public_type_test : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2288,113761
def int_icall_branch_funnel : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2293,114061
def int_load_relative: DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2295,114141
  Intrinsic<Intrinsic2299,114329
  Intrinsic<Intrinsic2302,114430
  Intrinsic<Intrinsic2305,114570
def int_xray_customevent : Intrinsic<Intrinsic2312,114860
def int_xray_typedevent : Intrinsic<Intrinsic2317,115183
    : Intrinsic<Intrinsic2327,115691
    : Intrinsic<Intrinsic2336,116138
    : Intrinsic<Intrinsic2345,116585
let IntrProperties 2352,116929
  : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2391,119385
  : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2397,119649
  : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2404,119990
  : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2412,120361
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2424,120931
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2429,121133
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2435,121442
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2440,121666
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2446,121900
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2456,122494
def int_ssa_copy : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2461,122688
def int_preserve_array_access_index : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2466,122913
def int_preserve_union_access_index : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2472,123334
def int_preserve_struct_access_index : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2476,123623
def int_preserve_static_offset : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2482,124050
def int_experimental_vector_reverse : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2489,124440
def int_experimental_vector_splice : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2493,124676
def int_vscale : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2500,125162
def int_vector_insert : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2503,125319
def int_vector_extract : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2507,125584
def int_experimental_vector_interleave2   : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2512,125835
def int_experimental_vector_deinterleave2 : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2517,126200
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2529,126855
def int_ptrauth_auth : Intrinsic<Intrinsic2535,127168
def int_ptrauth_resign : Intrinsic<Intrinsic2546,127762
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2557,128292
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2563,128553
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2572,129114
  : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2578,129398
  : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2580,129515
  : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2582,129630

/usr/include/llvm/IR/IntrinsicsAArch64.h,53898
#define LLVM_IR_INTRINSIC_AARCH64_ENUMS_H10,610
enum AARCH64Intrinsics 14,692
    aarch64_addg 16,758
    aarch64_break,17,832
    aarch64_clrex,18,901
    aarch64_cls,19,970
    aarch64_cls64,20,1037
    aarch64_crc32b,21,1106
    aarch64_crc32cb,22,1176
    aarch64_crc32ch,23,1247
    aarch64_crc32cw,24,1318
    aarch64_crc32cx,25,1389
    aarch64_crc32h,26,1460
    aarch64_crc32w,27,1530
    aarch64_crc32x,28,1600
    aarch64_crypto_aesd,29,1670
    aarch64_crypto_aese,30,1745
    aarch64_crypto_aesimc,31,1820
    aarch64_crypto_aesmc,32,1897
    aarch64_crypto_bcaxs,33,1973
    aarch64_crypto_bcaxu,34,2049
    aarch64_crypto_eor3s,35,2125
    aarch64_crypto_eor3u,36,2201
    aarch64_crypto_rax1,37,2277
    aarch64_crypto_sha1c,38,2352
    aarch64_crypto_sha1h,39,2428
    aarch64_crypto_sha1m,40,2504
    aarch64_crypto_sha1p,41,2580
    aarch64_crypto_sha1su0,42,2656
    aarch64_crypto_sha1su1,43,2734
    aarch64_crypto_sha256h,44,2812
    aarch64_crypto_sha256h2,45,2890
    aarch64_crypto_sha256su0,46,2969
    aarch64_crypto_sha256su1,47,3049
    aarch64_crypto_sha512h,48,3129
    aarch64_crypto_sha512h2,49,3207
    aarch64_crypto_sha512su0,50,3286
    aarch64_crypto_sha512su1,51,3366
    aarch64_crypto_sm3partw1,52,3446
    aarch64_crypto_sm3partw2,53,3526
    aarch64_crypto_sm3ss1,54,3606
    aarch64_crypto_sm3tt1a,55,3683
    aarch64_crypto_sm3tt1b,56,3761
    aarch64_crypto_sm3tt2a,57,3839
    aarch64_crypto_sm3tt2b,58,3917
    aarch64_crypto_sm4e,59,3995
    aarch64_crypto_sm4ekey,60,4070
    aarch64_crypto_xar,61,4148
    aarch64_dmb,62,4222
    aarch64_dsb,63,4289
    aarch64_fjcvtzs,64,4356
    aarch64_frint32x,65,4427
    aarch64_frint32z,66,4499
    aarch64_frint64x,67,4571
    aarch64_frint64z,68,4643
    aarch64_get_fpcr,69,4715
    aarch64_gmi,70,4787
    aarch64_hint,71,4854
    aarch64_irg,72,4922
    aarch64_irg_sp,73,4989
    aarch64_isb,74,5059
    aarch64_ld64b,75,5126
    aarch64_ldaxp,76,5195
    aarch64_ldaxr,77,5264
    aarch64_ldg,78,5333
    aarch64_ldxp,79,5400
    aarch64_ldxr,80,5468
    aarch64_mops_memset_tag,81,5536
    aarch64_neon_abs,82,5615
    aarch64_neon_addhn,83,5687
    aarch64_neon_addp,84,5761
    aarch64_neon_bfcvt,85,5834
    aarch64_neon_bfcvtn,86,5908
    aarch64_neon_bfcvtn2,87,5983
    aarch64_neon_bfdot,88,6059
    aarch64_neon_bfmlalb,89,6133
    aarch64_neon_bfmlalt,90,6209
    aarch64_neon_bfmmla,91,6285
    aarch64_neon_cls,92,6360
    aarch64_neon_fabd,93,6432
    aarch64_neon_facge,94,6505
    aarch64_neon_facgt,95,6579
    aarch64_neon_faddp,96,6653
    aarch64_neon_faddv,97,6727
    aarch64_neon_fcvtas,98,6801
    aarch64_neon_fcvtau,99,6876
    aarch64_neon_fcvtms,100,6951
    aarch64_neon_fcvtmu,101,7026
    aarch64_neon_fcvtns,102,7101
    aarch64_neon_fcvtnu,103,7176
    aarch64_neon_fcvtps,104,7251
    aarch64_neon_fcvtpu,105,7326
    aarch64_neon_fcvtxn,106,7401
    aarch64_neon_fcvtzs,107,7476
    aarch64_neon_fcvtzu,108,7551
    aarch64_neon_fmax,109,7626
    aarch64_neon_fmaxnm,110,7699
    aarch64_neon_fmaxnmp,111,7774
    aarch64_neon_fmaxnmv,112,7850
    aarch64_neon_fmaxp,113,7926
    aarch64_neon_fmaxv,114,8000
    aarch64_neon_fmin,115,8074
    aarch64_neon_fminnm,116,8147
    aarch64_neon_fminnmp,117,8222
    aarch64_neon_fminnmv,118,8298
    aarch64_neon_fminp,119,8374
    aarch64_neon_fminv,120,8448
    aarch64_neon_fmlal,121,8522
    aarch64_neon_fmlal2,122,8596
    aarch64_neon_fmlsl,123,8671
    aarch64_neon_fmlsl2,124,8745
    aarch64_neon_fmulx,125,8820
    aarch64_neon_frecpe,126,8894
    aarch64_neon_frecps,127,8969
    aarch64_neon_frecpx,128,9044
    aarch64_neon_frint32x,129,9119
    aarch64_neon_frint32z,130,9196
    aarch64_neon_frint64x,131,9273
    aarch64_neon_frint64z,132,9350
    aarch64_neon_frsqrte,133,9427
    aarch64_neon_frsqrts,134,9503
    aarch64_neon_ld1x2,135,9579
    aarch64_neon_ld1x3,136,9653
    aarch64_neon_ld1x4,137,9727
    aarch64_neon_ld2,138,9801
    aarch64_neon_ld2lane,139,9873
    aarch64_neon_ld2r,140,9949
    aarch64_neon_ld3,141,10022
    aarch64_neon_ld3lane,142,10094
    aarch64_neon_ld3r,143,10170
    aarch64_neon_ld4,144,10243
    aarch64_neon_ld4lane,145,10315
    aarch64_neon_ld4r,146,10391
    aarch64_neon_pmul,147,10464
    aarch64_neon_pmull,148,10537
    aarch64_neon_pmull64,149,10611
    aarch64_neon_raddhn,150,10687
    aarch64_neon_rshrn,151,10762
    aarch64_neon_rsubhn,152,10836
    aarch64_neon_sabd,153,10911
    aarch64_neon_saddlp,154,10984
    aarch64_neon_saddlv,155,11059
    aarch64_neon_saddv,156,11134
    aarch64_neon_scalar_sqxtn,157,11208
    aarch64_neon_scalar_sqxtun,158,11289
    aarch64_neon_scalar_uqxtn,159,11371
    aarch64_neon_sdot,160,11452
    aarch64_neon_shadd,161,11525
    aarch64_neon_shll,162,11599
    aarch64_neon_shsub,163,11672
    aarch64_neon_smax,164,11746
    aarch64_neon_smaxp,165,11819
    aarch64_neon_smaxv,166,11893
    aarch64_neon_smin,167,11967
    aarch64_neon_sminp,168,12040
    aarch64_neon_sminv,169,12114
    aarch64_neon_smmla,170,12188
    aarch64_neon_smull,171,12262
    aarch64_neon_sqabs,172,12336
    aarch64_neon_sqadd,173,12410
    aarch64_neon_sqdmulh,174,12484
    aarch64_neon_sqdmulh_lane,175,12560
    aarch64_neon_sqdmulh_laneq,176,12641
    aarch64_neon_sqdmull,177,12723
    aarch64_neon_sqdmulls_scalar,178,12799
    aarch64_neon_sqneg,179,12883
    aarch64_neon_sqrdmlah,180,12957
    aarch64_neon_sqrdmlsh,181,13034
    aarch64_neon_sqrdmulh,182,13111
    aarch64_neon_sqrdmulh_lane,183,13188
    aarch64_neon_sqrdmulh_laneq,184,13270
    aarch64_neon_sqrshl,185,13353
    aarch64_neon_sqrshrn,186,13428
    aarch64_neon_sqrshrun,187,13504
    aarch64_neon_sqshl,188,13581
    aarch64_neon_sqshlu,189,13655
    aarch64_neon_sqshrn,190,13730
    aarch64_neon_sqshrun,191,13805
    aarch64_neon_sqsub,192,13881
    aarch64_neon_sqxtn,193,13955
    aarch64_neon_sqxtun,194,14029
    aarch64_neon_srhadd,195,14104
    aarch64_neon_srshl,196,14179
    aarch64_neon_sshl,197,14253
    aarch64_neon_sshll,198,14326
    aarch64_neon_st1x2,199,14400
    aarch64_neon_st1x3,200,14474
    aarch64_neon_st1x4,201,14548
    aarch64_neon_st2,202,14622
    aarch64_neon_st2lane,203,14694
    aarch64_neon_st3,204,14770
    aarch64_neon_st3lane,205,14842
    aarch64_neon_st4,206,14918
    aarch64_neon_st4lane,207,14990
    aarch64_neon_subhn,208,15066
    aarch64_neon_suqadd,209,15140
    aarch64_neon_tbl1,210,15215
    aarch64_neon_tbl2,211,15288
    aarch64_neon_tbl3,212,15361
    aarch64_neon_tbl4,213,15434
    aarch64_neon_tbx1,214,15507
    aarch64_neon_tbx2,215,15580
    aarch64_neon_tbx3,216,15653
    aarch64_neon_tbx4,217,15726
    aarch64_neon_uabd,218,15799
    aarch64_neon_uaddlp,219,15872
    aarch64_neon_uaddlv,220,15947
    aarch64_neon_uaddv,221,16022
    aarch64_neon_udot,222,16096
    aarch64_neon_uhadd,223,16169
    aarch64_neon_uhsub,224,16243
    aarch64_neon_umax,225,16317
    aarch64_neon_umaxp,226,16390
    aarch64_neon_umaxv,227,16464
    aarch64_neon_umin,228,16538
    aarch64_neon_uminp,229,16611
    aarch64_neon_uminv,230,16685
    aarch64_neon_ummla,231,16759
    aarch64_neon_umull,232,16833
    aarch64_neon_uqadd,233,16907
    aarch64_neon_uqrshl,234,16981
    aarch64_neon_uqrshrn,235,17056
    aarch64_neon_uqshl,236,17132
    aarch64_neon_uqshrn,237,17206
    aarch64_neon_uqsub,238,17281
    aarch64_neon_uqxtn,239,17355
    aarch64_neon_urecpe,240,17429
    aarch64_neon_urhadd,241,17504
    aarch64_neon_urshl,242,17579
    aarch64_neon_ursqrte,243,17653
    aarch64_neon_usdot,244,17729
    aarch64_neon_ushl,245,17803
    aarch64_neon_ushll,246,17876
    aarch64_neon_usmmla,247,17950
    aarch64_neon_usqadd,248,18025
    aarch64_neon_vcadd_rot270,249,18100
    aarch64_neon_vcadd_rot90,250,18181
    aarch64_neon_vcmla_rot0,251,18261
    aarch64_neon_vcmla_rot180,252,18340
    aarch64_neon_vcmla_rot270,253,18421
    aarch64_neon_vcmla_rot90,254,18502
    aarch64_neon_vcopy_lane,255,18582
    aarch64_neon_vcvtfp2fxs,256,18661
    aarch64_neon_vcvtfp2fxu,257,18740
    aarch64_neon_vcvtfp2hf,258,18819
    aarch64_neon_vcvtfxs2fp,259,18897
    aarch64_neon_vcvtfxu2fp,260,18976
    aarch64_neon_vcvthf2fp,261,19055
    aarch64_neon_vsli,262,19133
    aarch64_neon_vsri,263,19206
    aarch64_prefetch,264,19279
    aarch64_rndr,265,19351
    aarch64_rndrrs,266,19419
    aarch64_sdiv,267,19489
    aarch64_set_fpcr,268,19557
    aarch64_settag,269,19629
    aarch64_settag_zero,270,19699
    aarch64_sisd_fabd,271,19774
    aarch64_sisd_fcvtxn,272,19847
    aarch64_sme_add_write_single_za_vg1x2,273,19922
    aarch64_sme_add_write_single_za_vg1x4,274,20015
    aarch64_sme_add_write_za_vg1x2,275,20108
    aarch64_sme_add_write_za_vg1x4,276,20194
    aarch64_sme_add_za32_vg1x2,277,20280
    aarch64_sme_add_za32_vg1x4,278,20362
    aarch64_sme_add_za64_vg1x2,279,20444
    aarch64_sme_add_za64_vg1x4,280,20526
    aarch64_sme_addha,281,20608
    aarch64_sme_addva,282,20681
    aarch64_sme_bmopa_za32,283,20754
    aarch64_sme_bmops_za32,284,20832
    aarch64_sme_cntsb,285,20910
    aarch64_sme_cntsd,286,20983
    aarch64_sme_cntsh,287,21056
    aarch64_sme_cntsw,288,21129
    aarch64_sme_fdot_lane_za32_vg1x2,289,21202
    aarch64_sme_fdot_lane_za32_vg1x4,290,21290
    aarch64_sme_fdot_single_za32_vg1x2,291,21378
    aarch64_sme_fdot_single_za32_vg1x4,292,21468
    aarch64_sme_fdot_za32_vg1x2,293,21558
    aarch64_sme_fdot_za32_vg1x4,294,21641
    aarch64_sme_fmla_lane_vg1x2,295,21724
    aarch64_sme_fmla_lane_vg1x4,296,21807
    aarch64_sme_fmla_single_vg1x2,297,21890
    aarch64_sme_fmla_single_vg1x4,298,21975
    aarch64_sme_fmla_vg1x2,299,22060
    aarch64_sme_fmla_vg1x4,300,22138
    aarch64_sme_fmlal_lane_vg2x1,301,22216
    aarch64_sme_fmlal_lane_vg2x2,302,22300
    aarch64_sme_fmlal_lane_vg2x4,303,22384
    aarch64_sme_fmlal_single_vg2x1,304,22468
    aarch64_sme_fmlal_single_vg2x2,305,22554
    aarch64_sme_fmlal_single_vg2x4,306,22640
    aarch64_sme_fmlal_vg2x2,307,22726
    aarch64_sme_fmlal_vg2x4,308,22805
    aarch64_sme_fmls_lane_vg1x2,309,22884
    aarch64_sme_fmls_lane_vg1x4,310,22967
    aarch64_sme_fmls_single_vg1x2,311,23050
    aarch64_sme_fmls_single_vg1x4,312,23135
    aarch64_sme_fmls_vg1x2,313,23220
    aarch64_sme_fmls_vg1x4,314,23298
    aarch64_sme_fmlsl_lane_vg2x1,315,23376
    aarch64_sme_fmlsl_lane_vg2x2,316,23460
    aarch64_sme_fmlsl_lane_vg2x4,317,23544
    aarch64_sme_fmlsl_single_vg2x1,318,23628
    aarch64_sme_fmlsl_single_vg2x2,319,23714
    aarch64_sme_fmlsl_single_vg2x4,320,23800
    aarch64_sme_fmlsl_vg2x2,321,23886
    aarch64_sme_fmlsl_vg2x4,322,23965
    aarch64_sme_fvdot_lane_za32_vg1x2,323,24044
    aarch64_sme_get_tpidr2,324,24133
    aarch64_sme_ld1b_horiz,325,24211
    aarch64_sme_ld1b_vert,326,24289
    aarch64_sme_ld1d_horiz,327,24366
    aarch64_sme_ld1d_vert,328,24444
    aarch64_sme_ld1h_horiz,329,24521
    aarch64_sme_ld1h_vert,330,24599
    aarch64_sme_ld1q_horiz,331,24676
    aarch64_sme_ld1q_vert,332,24754
    aarch64_sme_ld1w_horiz,333,24831
    aarch64_sme_ld1w_vert,334,24909
    aarch64_sme_ldr,335,24986
    aarch64_sme_ldr_zt,336,25057
    aarch64_sme_luti2_lane_zt,337,25131
    aarch64_sme_luti2_lane_zt_x2,338,25212
    aarch64_sme_luti2_lane_zt_x4,339,25296
    aarch64_sme_luti4_lane_zt,340,25380
    aarch64_sme_luti4_lane_zt_x2,341,25461
    aarch64_sme_luti4_lane_zt_x4,342,25545
    aarch64_sme_mopa,343,25629
    aarch64_sme_mopa_wide,344,25701
    aarch64_sme_mops,345,25778
    aarch64_sme_mops_wide,346,25850
    aarch64_sme_read_hor_vg2,347,25927
    aarch64_sme_read_hor_vg4,348,26007
    aarch64_sme_read_horiz,349,26087
    aarch64_sme_read_ver_vg2,350,26165
    aarch64_sme_read_ver_vg4,351,26245
    aarch64_sme_read_vert,352,26325
    aarch64_sme_read_vg1x2,353,26402
    aarch64_sme_read_vg1x4,354,26480
    aarch64_sme_readq_horiz,355,26558
    aarch64_sme_readq_vert,356,26637
    aarch64_sme_sdot_lane_za32_vg1x2,357,26715
    aarch64_sme_sdot_lane_za32_vg1x4,358,26803
    aarch64_sme_sdot_lane_za64_vg1x2,359,26891
    aarch64_sme_sdot_lane_za64_vg1x4,360,26979
    aarch64_sme_sdot_single_za32_vg1x2,361,27067
    aarch64_sme_sdot_single_za32_vg1x4,362,27157
    aarch64_sme_sdot_single_za64_vg1x2,363,27247
    aarch64_sme_sdot_single_za64_vg1x4,364,27337
    aarch64_sme_sdot_za32_vg1x2,365,27427
    aarch64_sme_sdot_za32_vg1x4,366,27510
    aarch64_sme_sdot_za64_vg1x2,367,27593
    aarch64_sme_sdot_za64_vg1x4,368,27676
    aarch64_sme_set_tpidr2,369,27759
    aarch64_sme_smla_za32_lane_vg4x1,370,27837
    aarch64_sme_smla_za32_lane_vg4x2,371,27925
    aarch64_sme_smla_za32_lane_vg4x4,372,28013
    aarch64_sme_smla_za32_single_vg4x1,373,28101
    aarch64_sme_smla_za32_single_vg4x2,374,28191
    aarch64_sme_smla_za32_single_vg4x4,375,28281
    aarch64_sme_smla_za32_vg4x2,376,28371
    aarch64_sme_smla_za32_vg4x4,377,28454
    aarch64_sme_smla_za64_lane_vg4x1,378,28537
    aarch64_sme_smla_za64_lane_vg4x2,379,28625
    aarch64_sme_smla_za64_lane_vg4x4,380,28713
    aarch64_sme_smla_za64_single_vg4x1,381,28801
    aarch64_sme_smla_za64_single_vg4x2,382,28891
    aarch64_sme_smla_za64_single_vg4x4,383,28981
    aarch64_sme_smla_za64_vg4x2,384,29071
    aarch64_sme_smla_za64_vg4x4,385,29154
    aarch64_sme_smlal_lane_vg2x1,386,29237
    aarch64_sme_smlal_lane_vg2x2,387,29321
    aarch64_sme_smlal_lane_vg2x4,388,29405
    aarch64_sme_smlal_single_vg2x1,389,29489
    aarch64_sme_smlal_single_vg2x2,390,29575
    aarch64_sme_smlal_single_vg2x4,391,29661
    aarch64_sme_smlal_vg2x2,392,29747
    aarch64_sme_smlal_vg2x4,393,29826
    aarch64_sme_smls_za32_lane_vg4x1,394,29905
    aarch64_sme_smls_za32_lane_vg4x2,395,29993
    aarch64_sme_smls_za32_lane_vg4x4,396,30081
    aarch64_sme_smls_za32_single_vg4x1,397,30169
    aarch64_sme_smls_za32_single_vg4x2,398,30259
    aarch64_sme_smls_za32_single_vg4x4,399,30349
    aarch64_sme_smls_za32_vg4x2,400,30439
    aarch64_sme_smls_za32_vg4x4,401,30522
    aarch64_sme_smls_za64_lane_vg4x1,402,30605
    aarch64_sme_smls_za64_lane_vg4x2,403,30693
    aarch64_sme_smls_za64_lane_vg4x4,404,30781
    aarch64_sme_smls_za64_single_vg4x1,405,30869
    aarch64_sme_smls_za64_single_vg4x2,406,30959
    aarch64_sme_smls_za64_single_vg4x4,407,31049
    aarch64_sme_smls_za64_vg4x2,408,31139
    aarch64_sme_smls_za64_vg4x4,409,31222
    aarch64_sme_smlsl_lane_vg2x1,410,31305
    aarch64_sme_smlsl_lane_vg2x2,411,31389
    aarch64_sme_smlsl_lane_vg2x4,412,31473
    aarch64_sme_smlsl_single_vg2x1,413,31557
    aarch64_sme_smlsl_single_vg2x2,414,31643
    aarch64_sme_smlsl_single_vg2x4,415,31729
    aarch64_sme_smlsl_vg2x2,416,31815
    aarch64_sme_smlsl_vg2x4,417,31894
    aarch64_sme_smopa_wide,418,31973
    aarch64_sme_smopa_za32,419,32051
    aarch64_sme_smops_wide,420,32129
    aarch64_sme_smops_za32,421,32207
    aarch64_sme_st1b_horiz,422,32285
    aarch64_sme_st1b_vert,423,32363
    aarch64_sme_st1d_horiz,424,32440
    aarch64_sme_st1d_vert,425,32518
    aarch64_sme_st1h_horiz,426,32595
    aarch64_sme_st1h_vert,427,32673
    aarch64_sme_st1q_horiz,428,32750
    aarch64_sme_st1q_vert,429,32828
    aarch64_sme_st1w_horiz,430,32905
    aarch64_sme_st1w_vert,431,32983
    aarch64_sme_str,432,33060
    aarch64_sme_str_zt,433,33131
    aarch64_sme_sub_write_single_za_vg1x2,434,33205
    aarch64_sme_sub_write_single_za_vg1x4,435,33298
    aarch64_sme_sub_write_za_vg1x2,436,33391
    aarch64_sme_sub_write_za_vg1x4,437,33477
    aarch64_sme_sub_za32_vg1x2,438,33563
    aarch64_sme_sub_za32_vg1x4,439,33645
    aarch64_sme_sub_za64_vg1x2,440,33727
    aarch64_sme_sub_za64_vg1x4,441,33809
    aarch64_sme_sudot_lane_za32_vg1x2,442,33891
    aarch64_sme_sudot_lane_za32_vg1x4,443,33980
    aarch64_sme_sudot_single_za32_vg1x2,444,34069
    aarch64_sme_sudot_single_za32_vg1x4,445,34160
    aarch64_sme_sumla_za32_lane_vg4x1,446,34251
    aarch64_sme_sumla_za32_lane_vg4x2,447,34340
    aarch64_sme_sumla_za32_lane_vg4x4,448,34429
    aarch64_sme_sumla_za32_single_vg4x2,449,34518
    aarch64_sme_sumla_za32_single_vg4x4,450,34609
    aarch64_sme_sumopa_wide,451,34700
    aarch64_sme_sumops_wide,452,34779
    aarch64_sme_suvdot_lane_za32_vg1x4,453,34858
    aarch64_sme_svdot_lane_za32_vg1x2,454,34948
    aarch64_sme_svdot_lane_za32_vg1x4,455,35037
    aarch64_sme_svdot_lane_za64_vg1x4,456,35126
    aarch64_sme_udot_lane_za32_vg1x2,457,35215
    aarch64_sme_udot_lane_za32_vg1x4,458,35303
    aarch64_sme_udot_lane_za64_vg1x2,459,35391
    aarch64_sme_udot_lane_za64_vg1x4,460,35479
    aarch64_sme_udot_single_za32_vg1x2,461,35567
    aarch64_sme_udot_single_za32_vg1x4,462,35657
    aarch64_sme_udot_single_za64_vg1x2,463,35747
    aarch64_sme_udot_single_za64_vg1x4,464,35837
    aarch64_sme_udot_za32_vg1x2,465,35927
    aarch64_sme_udot_za32_vg1x4,466,36010
    aarch64_sme_udot_za64_vg1x2,467,36093
    aarch64_sme_udot_za64_vg1x4,468,36176
    aarch64_sme_umla_za32_lane_vg4x1,469,36259
    aarch64_sme_umla_za32_lane_vg4x2,470,36347
    aarch64_sme_umla_za32_lane_vg4x4,471,36435
    aarch64_sme_umla_za32_single_vg4x1,472,36523
    aarch64_sme_umla_za32_single_vg4x2,473,36613
    aarch64_sme_umla_za32_single_vg4x4,474,36703
    aarch64_sme_umla_za32_vg4x2,475,36793
    aarch64_sme_umla_za32_vg4x4,476,36876
    aarch64_sme_umla_za64_lane_vg4x1,477,36959
    aarch64_sme_umla_za64_lane_vg4x2,478,37047
    aarch64_sme_umla_za64_lane_vg4x4,479,37135
    aarch64_sme_umla_za64_single_vg4x1,480,37223
    aarch64_sme_umla_za64_single_vg4x2,481,37313
    aarch64_sme_umla_za64_single_vg4x4,482,37403
    aarch64_sme_umla_za64_vg4x2,483,37493
    aarch64_sme_umla_za64_vg4x4,484,37576
    aarch64_sme_umlal_lane_vg2x1,485,37659
    aarch64_sme_umlal_lane_vg2x2,486,37743
    aarch64_sme_umlal_lane_vg2x4,487,37827
    aarch64_sme_umlal_single_vg2x1,488,37911
    aarch64_sme_umlal_single_vg2x2,489,37997
    aarch64_sme_umlal_single_vg2x4,490,38083
    aarch64_sme_umlal_vg2x2,491,38169
    aarch64_sme_umlal_vg2x4,492,38248
    aarch64_sme_umls_za32_lane_vg4x1,493,38327
    aarch64_sme_umls_za32_lane_vg4x2,494,38415
    aarch64_sme_umls_za32_lane_vg4x4,495,38503
    aarch64_sme_umls_za32_single_vg4x1,496,38591
    aarch64_sme_umls_za32_single_vg4x2,497,38681
    aarch64_sme_umls_za32_single_vg4x4,498,38771
    aarch64_sme_umls_za32_vg4x2,499,38861
    aarch64_sme_umls_za32_vg4x4,500,38944
    aarch64_sme_umls_za64_lane_vg4x1,501,39027
    aarch64_sme_umls_za64_lane_vg4x2,502,39115
    aarch64_sme_umls_za64_lane_vg4x4,503,39203
    aarch64_sme_umls_za64_single_vg4x1,504,39291
    aarch64_sme_umls_za64_single_vg4x2,505,39381
    aarch64_sme_umls_za64_single_vg4x4,506,39471
    aarch64_sme_umls_za64_vg4x2,507,39561
    aarch64_sme_umls_za64_vg4x4,508,39644
    aarch64_sme_umlsl_lane_vg2x1,509,39727
    aarch64_sme_umlsl_lane_vg2x2,510,39811
    aarch64_sme_umlsl_lane_vg2x4,511,39895
    aarch64_sme_umlsl_single_vg2x1,512,39979
    aarch64_sme_umlsl_single_vg2x2,513,40065
    aarch64_sme_umlsl_single_vg2x4,514,40151
    aarch64_sme_umlsl_vg2x2,515,40237
    aarch64_sme_umlsl_vg2x4,516,40316
    aarch64_sme_umopa_wide,517,40395
    aarch64_sme_umopa_za32,518,40473
    aarch64_sme_umops_wide,519,40551
    aarch64_sme_umops_za32,520,40629
    aarch64_sme_usdot_lane_za32_vg1x2,521,40707
    aarch64_sme_usdot_lane_za32_vg1x4,522,40796
    aarch64_sme_usdot_single_za32_vg1x2,523,40885
    aarch64_sme_usdot_single_za32_vg1x4,524,40976
    aarch64_sme_usdot_za32_vg1x2,525,41067
    aarch64_sme_usdot_za32_vg1x4,526,41151
    aarch64_sme_usmla_za32_lane_vg4x1,527,41235
    aarch64_sme_usmla_za32_lane_vg4x2,528,41324
    aarch64_sme_usmla_za32_lane_vg4x4,529,41413
    aarch64_sme_usmla_za32_single_vg4x1,530,41502
    aarch64_sme_usmla_za32_single_vg4x2,531,41593
    aarch64_sme_usmla_za32_single_vg4x4,532,41684
    aarch64_sme_usmla_za32_vg4x2,533,41775
    aarch64_sme_usmla_za32_vg4x4,534,41859
    aarch64_sme_usmopa_wide,535,41943
    aarch64_sme_usmops_wide,536,42022
    aarch64_sme_usvdot_lane_za32_vg1x4,537,42101
    aarch64_sme_uvdot_lane_za32_vg1x2,538,42191
    aarch64_sme_uvdot_lane_za32_vg1x4,539,42280
    aarch64_sme_uvdot_lane_za64_vg1x4,540,42369
    aarch64_sme_write_hor_vg2,541,42458
    aarch64_sme_write_hor_vg4,542,42539
    aarch64_sme_write_horiz,543,42620
    aarch64_sme_write_ver_vg2,544,42699
    aarch64_sme_write_ver_vg4,545,42780
    aarch64_sme_write_vert,546,42861
    aarch64_sme_write_vg1x2,547,42939
    aarch64_sme_write_vg1x4,548,43018
    aarch64_sme_writeq_horiz,549,43097
    aarch64_sme_writeq_vert,550,43177
    aarch64_sme_za_disable,551,43256
    aarch64_sme_za_enable,552,43334
    aarch64_sme_zero,553,43411
    aarch64_sme_zero_zt,554,43483
    aarch64_space,555,43558
    aarch64_st64b,556,43627
    aarch64_st64bv,557,43696
    aarch64_st64bv0,558,43766
    aarch64_stg,559,43837
    aarch64_stgp,560,43904
    aarch64_stlxp,561,43972
    aarch64_stlxr,562,44041
    aarch64_stxp,563,44110
    aarch64_stxr,564,44178
    aarch64_subp,565,44246
    aarch64_sve_abs,566,44314
    aarch64_sve_adclb,567,44385
    aarch64_sve_adclt,568,44458
    aarch64_sve_add,569,44531
    aarch64_sve_add_single_x2,570,44602
    aarch64_sve_add_single_x4,571,44683
    aarch64_sve_add_u,572,44764
    aarch64_sve_addhnb,573,44837
    aarch64_sve_addhnt,574,44911
    aarch64_sve_addp,575,44985
    aarch64_sve_addqv,576,45057
    aarch64_sve_adrb,577,45130
    aarch64_sve_adrd,578,45202
    aarch64_sve_adrh,579,45274
    aarch64_sve_adrw,580,45346
    aarch64_sve_aesd,581,45418
    aarch64_sve_aese,582,45490
    aarch64_sve_aesimc,583,45562
    aarch64_sve_aesmc,584,45636
    aarch64_sve_and,585,45709
    aarch64_sve_and_u,586,45780
    aarch64_sve_and_z,587,45853
    aarch64_sve_andqv,588,45926
    aarch64_sve_andv,589,45999
    aarch64_sve_asr,590,46071
    aarch64_sve_asr_u,591,46142
    aarch64_sve_asr_wide,592,46215
    aarch64_sve_asrd,593,46291
    aarch64_sve_bcax,594,46363
    aarch64_sve_bdep_x,595,46435
    aarch64_sve_bext_x,596,46509
    aarch64_sve_bfcvt_x2,597,46583
    aarch64_sve_bfcvtn_x2,598,46659
    aarch64_sve_bfdot,599,46736
    aarch64_sve_bfdot_lane_v2,600,46809
    aarch64_sve_bfmlalb,601,46890
    aarch64_sve_bfmlalb_lane_v2,602,46965
    aarch64_sve_bfmlalt,603,47048
    aarch64_sve_bfmlalt_lane_v2,604,47123
    aarch64_sve_bfmlslb,605,47206
    aarch64_sve_bfmlslb_lane,606,47281
    aarch64_sve_bfmlslt,607,47361
    aarch64_sve_bfmlslt_lane,608,47436
    aarch64_sve_bfmmla,609,47516
    aarch64_sve_bgrp_x,610,47590
    aarch64_sve_bic,611,47664
    aarch64_sve_bic_u,612,47735
    aarch64_sve_bic_z,613,47808
    aarch64_sve_brka,614,47881
    aarch64_sve_brka_z,615,47953
    aarch64_sve_brkb,616,48027
    aarch64_sve_brkb_z,617,48099
    aarch64_sve_brkn_z,618,48173
    aarch64_sve_brkpa_z,619,48247
    aarch64_sve_brkpb_z,620,48322
    aarch64_sve_bsl,621,48397
    aarch64_sve_bsl1n,622,48468
    aarch64_sve_bsl2n,623,48541
    aarch64_sve_cadd_x,624,48614
    aarch64_sve_cdot,625,48688
    aarch64_sve_cdot_lane,626,48760
    aarch64_sve_clasta,627,48837
    aarch64_sve_clasta_n,628,48911
    aarch64_sve_clastb,629,48987
    aarch64_sve_clastb_n,630,49061
    aarch64_sve_cls,631,49137
    aarch64_sve_clz,632,49208
    aarch64_sve_cmla_lane_x,633,49279
    aarch64_sve_cmla_x,634,49358
    aarch64_sve_cmpeq,635,49432
    aarch64_sve_cmpeq_wide,636,49505
    aarch64_sve_cmpge,637,49583
    aarch64_sve_cmpge_wide,638,49656
    aarch64_sve_cmpgt,639,49734
    aarch64_sve_cmpgt_wide,640,49807
    aarch64_sve_cmphi,641,49885
    aarch64_sve_cmphi_wide,642,49958
    aarch64_sve_cmphs,643,50036
    aarch64_sve_cmphs_wide,644,50109
    aarch64_sve_cmple_wide,645,50187
    aarch64_sve_cmplo_wide,646,50265
    aarch64_sve_cmpls_wide,647,50343
    aarch64_sve_cmplt_wide,648,50421
    aarch64_sve_cmpne,649,50499
    aarch64_sve_cmpne_wide,650,50572
    aarch64_sve_cnot,651,50650
    aarch64_sve_cnt,652,50722
    aarch64_sve_cntb,653,50793
    aarch64_sve_cntd,654,50865
    aarch64_sve_cnth,655,50937
    aarch64_sve_cntp,656,51009
    aarch64_sve_cntp_c16,657,51081
    aarch64_sve_cntp_c32,658,51157
    aarch64_sve_cntp_c64,659,51233
    aarch64_sve_cntp_c8,660,51309
    aarch64_sve_cntw,661,51384
    aarch64_sve_compact,662,51456
    aarch64_sve_convert_from_svbool,663,51531
    aarch64_sve_convert_to_svbool,664,51618
    aarch64_sve_dup,665,51703
    aarch64_sve_dup_x,666,51774
    aarch64_sve_dupq_lane,667,51847
    aarch64_sve_eor,668,51924
    aarch64_sve_eor_u,669,51995
    aarch64_sve_eor_z,670,52068
    aarch64_sve_eor3,671,52141
    aarch64_sve_eorbt,672,52213
    aarch64_sve_eorqv,673,52286
    aarch64_sve_eortb,674,52359
    aarch64_sve_eorv,675,52432
    aarch64_sve_ext,676,52504
    aarch64_sve_extq,677,52575
    aarch64_sve_fabd,678,52647
    aarch64_sve_fabd_u,679,52719
    aarch64_sve_fabs,680,52793
    aarch64_sve_facge,681,52865
    aarch64_sve_facgt,682,52938
    aarch64_sve_fadd,683,53011
    aarch64_sve_fadd_u,684,53083
    aarch64_sve_fadda,685,53157
    aarch64_sve_faddp,686,53230
    aarch64_sve_faddv,687,53303
    aarch64_sve_fcadd,688,53376
    aarch64_sve_fclamp,689,53449
    aarch64_sve_fclamp_single_x2,690,53523
    aarch64_sve_fclamp_single_x4,691,53607
    aarch64_sve_fcmla,692,53691
    aarch64_sve_fcmla_lane,693,53764
    aarch64_sve_fcmpeq,694,53842
    aarch64_sve_fcmpge,695,53916
    aarch64_sve_fcmpgt,696,53990
    aarch64_sve_fcmpne,697,54064
    aarch64_sve_fcmpuo,698,54138
    aarch64_sve_fcvt,699,54212
    aarch64_sve_fcvt_bf16f32,700,54284
    aarch64_sve_fcvt_f16f32,701,54364
    aarch64_sve_fcvt_f16f64,702,54443
    aarch64_sve_fcvt_f32f16,703,54522
    aarch64_sve_fcvt_f32f64,704,54601
    aarch64_sve_fcvt_f64f16,705,54680
    aarch64_sve_fcvt_f64f32,706,54759
    aarch64_sve_fcvt_x2,707,54838
    aarch64_sve_fcvtlt_f32f16,708,54913
    aarch64_sve_fcvtlt_f64f32,709,54994
    aarch64_sve_fcvtn_x2,710,55075
    aarch64_sve_fcvtnt_bf16f32,711,55151
    aarch64_sve_fcvtnt_f16f32,712,55233
    aarch64_sve_fcvtnt_f32f64,713,55314
    aarch64_sve_fcvtx_f32f64,714,55395
    aarch64_sve_fcvtxnt_f32f64,715,55475
    aarch64_sve_fcvtzs,716,55557
    aarch64_sve_fcvtzs_i32f16,717,55631
    aarch64_sve_fcvtzs_i32f64,718,55712
    aarch64_sve_fcvtzs_i64f16,719,55793
    aarch64_sve_fcvtzs_i64f32,720,55874
    aarch64_sve_fcvtzs_x2,721,55955
    aarch64_sve_fcvtzs_x4,722,56032
    aarch64_sve_fcvtzu,723,56109
    aarch64_sve_fcvtzu_i32f16,724,56183
    aarch64_sve_fcvtzu_i32f64,725,56264
    aarch64_sve_fcvtzu_i64f16,726,56345
    aarch64_sve_fcvtzu_i64f32,727,56426
    aarch64_sve_fcvtzu_x2,728,56507
    aarch64_sve_fcvtzu_x4,729,56584
    aarch64_sve_fdiv,730,56661
    aarch64_sve_fdiv_u,731,56733
    aarch64_sve_fdivr,732,56807
    aarch64_sve_fdot_lane_x2,733,56880
    aarch64_sve_fdot_x2,734,56960
    aarch64_sve_fexpa_x,735,57035
    aarch64_sve_flogb,736,57110
    aarch64_sve_fmad,737,57183
    aarch64_sve_fmax,738,57255
    aarch64_sve_fmax_single_x2,739,57327
    aarch64_sve_fmax_single_x4,740,57409
    aarch64_sve_fmax_u,741,57491
    aarch64_sve_fmax_x2,742,57565
    aarch64_sve_fmax_x4,743,57640
    aarch64_sve_fmaxnm,744,57715
    aarch64_sve_fmaxnm_single_x2,745,57789
    aarch64_sve_fmaxnm_single_x4,746,57873
    aarch64_sve_fmaxnm_u,747,57957
    aarch64_sve_fmaxnm_x2,748,58033
    aarch64_sve_fmaxnm_x4,749,58110
    aarch64_sve_fmaxnmp,750,58187
    aarch64_sve_fmaxnmqv,751,58262
    aarch64_sve_fmaxnmv,752,58338
    aarch64_sve_fmaxp,753,58413
    aarch64_sve_fmaxqv,754,58486
    aarch64_sve_fmaxv,755,58560
    aarch64_sve_fmin,756,58633
    aarch64_sve_fmin_single_x2,757,58705
    aarch64_sve_fmin_single_x4,758,58787
    aarch64_sve_fmin_u,759,58869
    aarch64_sve_fmin_x2,760,58943
    aarch64_sve_fmin_x4,761,59018
    aarch64_sve_fminnm,762,59093
    aarch64_sve_fminnm_single_x2,763,59167
    aarch64_sve_fminnm_single_x4,764,59251
    aarch64_sve_fminnm_u,765,59335
    aarch64_sve_fminnm_x2,766,59411
    aarch64_sve_fminnm_x4,767,59488
    aarch64_sve_fminnmp,768,59565
    aarch64_sve_fminnmqv,769,59640
    aarch64_sve_fminnmv,770,59716
    aarch64_sve_fminp,771,59791
    aarch64_sve_fminqv,772,59864
    aarch64_sve_fminv,773,59938
    aarch64_sve_fmla,774,60011
    aarch64_sve_fmla_lane,775,60083
    aarch64_sve_fmla_u,776,60160
    aarch64_sve_fmlalb,777,60234
    aarch64_sve_fmlalb_lane,778,60308
    aarch64_sve_fmlalt,779,60387
    aarch64_sve_fmlalt_lane,780,60461
    aarch64_sve_fmls,781,60540
    aarch64_sve_fmls_lane,782,60612
    aarch64_sve_fmls_u,783,60689
    aarch64_sve_fmlslb,784,60763
    aarch64_sve_fmlslb_lane,785,60837
    aarch64_sve_fmlslt,786,60916
    aarch64_sve_fmlslt_lane,787,60990
    aarch64_sve_fmmla,788,61069
    aarch64_sve_fmsb,789,61142
    aarch64_sve_fmul,790,61214
    aarch64_sve_fmul_lane,791,61286
    aarch64_sve_fmul_u,792,61363
    aarch64_sve_fmulx,793,61437
    aarch64_sve_fmulx_u,794,61510
    aarch64_sve_fneg,795,61585
    aarch64_sve_fnmad,796,61657
    aarch64_sve_fnmla,797,61730
    aarch64_sve_fnmla_u,798,61803
    aarch64_sve_fnmls,799,61878
    aarch64_sve_fnmls_u,800,61951
    aarch64_sve_fnmsb,801,62026
    aarch64_sve_frecpe_x,802,62099
    aarch64_sve_frecps_x,803,62175
    aarch64_sve_frecpx,804,62251
    aarch64_sve_frinta,805,62325
    aarch64_sve_frinta_x2,806,62399
    aarch64_sve_frinta_x4,807,62476
    aarch64_sve_frinti,808,62553
    aarch64_sve_frintm,809,62627
    aarch64_sve_frintm_x2,810,62701
    aarch64_sve_frintm_x4,811,62778
    aarch64_sve_frintn,812,62855
    aarch64_sve_frintn_x2,813,62929
    aarch64_sve_frintn_x4,814,63006
    aarch64_sve_frintp,815,63083
    aarch64_sve_frintp_x2,816,63157
    aarch64_sve_frintp_x4,817,63234
    aarch64_sve_frintx,818,63311
    aarch64_sve_frintz,819,63385
    aarch64_sve_frsqrte_x,820,63459
    aarch64_sve_frsqrts_x,821,63536
    aarch64_sve_fscale,822,63613
    aarch64_sve_fsqrt,823,63687
    aarch64_sve_fsub,824,63760
    aarch64_sve_fsub_u,825,63832
    aarch64_sve_fsubr,826,63906
    aarch64_sve_ftmad_x,827,63979
    aarch64_sve_ftsmul_x,828,64054
    aarch64_sve_ftssel_x,829,64130
    aarch64_sve_histcnt,830,64206
    aarch64_sve_histseg,831,64281
    aarch64_sve_index,832,64356
    aarch64_sve_insr,833,64429
    aarch64_sve_lasta,834,64501
    aarch64_sve_lastb,835,64574
    aarch64_sve_ld1,836,64647
    aarch64_sve_ld1_gather,837,64718
    aarch64_sve_ld1_gather_index,838,64796
    aarch64_sve_ld1_gather_scalar_offset,839,64880
    aarch64_sve_ld1_gather_sxtw,840,64972
    aarch64_sve_ld1_gather_sxtw_index,841,65055
    aarch64_sve_ld1_gather_uxtw,842,65144
    aarch64_sve_ld1_gather_uxtw_index,843,65227
    aarch64_sve_ld1_pn_x2,844,65316
    aarch64_sve_ld1_pn_x4,845,65393
    aarch64_sve_ld1q_gather_index,846,65470
    aarch64_sve_ld1q_gather_scalar_offset,847,65555
    aarch64_sve_ld1q_gather_vector_offset,848,65648
    aarch64_sve_ld1ro,849,65741
    aarch64_sve_ld1rq,850,65814
    aarch64_sve_ld1udq,851,65887
    aarch64_sve_ld1uwq,852,65961
    aarch64_sve_ld2_sret,853,66035
    aarch64_sve_ld2q_sret,854,66111
    aarch64_sve_ld3_sret,855,66188
    aarch64_sve_ld3q_sret,856,66264
    aarch64_sve_ld4_sret,857,66341
    aarch64_sve_ld4q_sret,858,66417
    aarch64_sve_ldff1,859,66494
    aarch64_sve_ldff1_gather,860,66567
    aarch64_sve_ldff1_gather_index,861,66647
    aarch64_sve_ldff1_gather_scalar_offset,862,66733
    aarch64_sve_ldff1_gather_sxtw,863,66827
    aarch64_sve_ldff1_gather_sxtw_index,864,66912
    aarch64_sve_ldff1_gather_uxtw,865,67003
    aarch64_sve_ldff1_gather_uxtw_index,866,67088
    aarch64_sve_ldnf1,867,67179
    aarch64_sve_ldnt1,868,67252
    aarch64_sve_ldnt1_gather,869,67325
    aarch64_sve_ldnt1_gather_index,870,67405
    aarch64_sve_ldnt1_gather_scalar_offset,871,67491
    aarch64_sve_ldnt1_gather_uxtw,872,67585
    aarch64_sve_ldnt1_pn_x2,873,67670
    aarch64_sve_ldnt1_pn_x4,874,67749
    aarch64_sve_lsl,875,67828
    aarch64_sve_lsl_u,876,67899
    aarch64_sve_lsl_wide,877,67972
    aarch64_sve_lsr,878,68048
    aarch64_sve_lsr_u,879,68119
    aarch64_sve_lsr_wide,880,68192
    aarch64_sve_mad,881,68268
    aarch64_sve_match,882,68339
    aarch64_sve_mla,883,68412
    aarch64_sve_mla_lane,884,68483
    aarch64_sve_mla_u,885,68559
    aarch64_sve_mls,886,68632
    aarch64_sve_mls_lane,887,68703
    aarch64_sve_mls_u,888,68779
    aarch64_sve_msb,889,68852
    aarch64_sve_mul,890,68923
    aarch64_sve_mul_lane,891,68994
    aarch64_sve_mul_u,892,69070
    aarch64_sve_nand_z,893,69143
    aarch64_sve_nbsl,894,69217
    aarch64_sve_neg,895,69289
    aarch64_sve_nmatch,896,69360
    aarch64_sve_nor_z,897,69434
    aarch64_sve_not,898,69507
    aarch64_sve_orn_z,899,69578
    aarch64_sve_orqv,900,69651
    aarch64_sve_orr,901,69723
    aarch64_sve_orr_u,902,69794
    aarch64_sve_orr_z,903,69867
    aarch64_sve_orv,904,69940
    aarch64_sve_pext,905,70011
    aarch64_sve_pext_x2,906,70083
    aarch64_sve_pfirst,907,70158
    aarch64_sve_pmul,908,70232
    aarch64_sve_pmullb_pair,909,70304
    aarch64_sve_pmullt_pair,910,70383
    aarch64_sve_pnext,911,70462
    aarch64_sve_prf,912,70535
    aarch64_sve_prfb_gather_index,913,70606
    aarch64_sve_prfb_gather_scalar_offset,914,70691
    aarch64_sve_prfb_gather_sxtw_index,915,70784
    aarch64_sve_prfb_gather_uxtw_index,916,70874
    aarch64_sve_prfd_gather_index,917,70964
    aarch64_sve_prfd_gather_scalar_offset,918,71049
    aarch64_sve_prfd_gather_sxtw_index,919,71142
    aarch64_sve_prfd_gather_uxtw_index,920,71232
    aarch64_sve_prfh_gather_index,921,71322
    aarch64_sve_prfh_gather_scalar_offset,922,71407
    aarch64_sve_prfh_gather_sxtw_index,923,71500
    aarch64_sve_prfh_gather_uxtw_index,924,71590
    aarch64_sve_prfw_gather_index,925,71680
    aarch64_sve_prfw_gather_scalar_offset,926,71765
    aarch64_sve_prfw_gather_sxtw_index,927,71858
    aarch64_sve_prfw_gather_uxtw_index,928,71948
    aarch64_sve_psel,929,72038
    aarch64_sve_ptest_any,930,72110
    aarch64_sve_ptest_first,931,72187
    aarch64_sve_ptest_last,932,72266
    aarch64_sve_ptrue,933,72344
    aarch64_sve_ptrue_c16,934,72417
    aarch64_sve_ptrue_c32,935,72494
    aarch64_sve_ptrue_c64,936,72571
    aarch64_sve_ptrue_c8,937,72648
    aarch64_sve_punpkhi,938,72724
    aarch64_sve_punpklo,939,72799
    aarch64_sve_raddhnb,940,72874
    aarch64_sve_raddhnt,941,72949
    aarch64_sve_rax1,942,73024
    aarch64_sve_rbit,943,73096
    aarch64_sve_rdffr,944,73168
    aarch64_sve_rdffr_z,945,73241
    aarch64_sve_rev,946,73316
    aarch64_sve_rev_b16,947,73387
    aarch64_sve_rev_b32,948,73462
    aarch64_sve_rev_b64,949,73537
    aarch64_sve_revb,950,73612
    aarch64_sve_revd,951,73684
    aarch64_sve_revh,952,73756
    aarch64_sve_revw,953,73828
    aarch64_sve_rshrnb,954,73900
    aarch64_sve_rshrnt,955,73974
    aarch64_sve_rsubhnb,956,74048
    aarch64_sve_rsubhnt,957,74123
    aarch64_sve_saba,958,74198
    aarch64_sve_sabalb,959,74270
    aarch64_sve_sabalt,960,74344
    aarch64_sve_sabd,961,74418
    aarch64_sve_sabd_u,962,74490
    aarch64_sve_sabdlb,963,74564
    aarch64_sve_sabdlt,964,74638
    aarch64_sve_sadalp,965,74712
    aarch64_sve_saddlb,966,74786
    aarch64_sve_saddlbt,967,74860
    aarch64_sve_saddlt,968,74935
    aarch64_sve_saddv,969,75009
    aarch64_sve_saddwb,970,75082
    aarch64_sve_saddwt,971,75156
    aarch64_sve_sbclb,972,75230
    aarch64_sve_sbclt,973,75303
    aarch64_sve_sclamp,974,75376
    aarch64_sve_sclamp_single_x2,975,75450
    aarch64_sve_sclamp_single_x4,976,75534
    aarch64_sve_scvtf,977,75618
    aarch64_sve_scvtf_f16i32,978,75691
    aarch64_sve_scvtf_f16i64,979,75771
    aarch64_sve_scvtf_f32i64,980,75851
    aarch64_sve_scvtf_f64i32,981,75931
    aarch64_sve_scvtf_x2,982,76011
    aarch64_sve_scvtf_x4,983,76087
    aarch64_sve_sdiv,984,76163
    aarch64_sve_sdiv_u,985,76235
    aarch64_sve_sdivr,986,76309
    aarch64_sve_sdot,987,76382
    aarch64_sve_sdot_lane,988,76454
    aarch64_sve_sdot_lane_x2,989,76531
    aarch64_sve_sdot_x2,990,76611
    aarch64_sve_sel,991,76686
    aarch64_sve_sel_x2,992,76757
    aarch64_sve_sel_x4,993,76831
    aarch64_sve_setffr,994,76905
    aarch64_sve_shadd,995,76979
    aarch64_sve_shrnb,996,77052
    aarch64_sve_shrnt,997,77125
    aarch64_sve_shsub,998,77198
    aarch64_sve_shsubr,999,77271
    aarch64_sve_sli,1000,77345
    aarch64_sve_sm4e,1001,77416
    aarch64_sve_sm4ekey,1002,77488
    aarch64_sve_smax,1003,77563
    aarch64_sve_smax_single_x2,1004,77635
    aarch64_sve_smax_single_x4,1005,77717
    aarch64_sve_smax_u,1006,77799
    aarch64_sve_smax_x2,1007,77873
    aarch64_sve_smax_x4,1008,77948
    aarch64_sve_smaxp,1009,78023
    aarch64_sve_smaxqv,1010,78096
    aarch64_sve_smaxv,1011,78170
    aarch64_sve_smin,1012,78243
    aarch64_sve_smin_single_x2,1013,78315
    aarch64_sve_smin_single_x4,1014,78397
    aarch64_sve_smin_u,1015,78479
    aarch64_sve_smin_x2,1016,78553
    aarch64_sve_smin_x4,1017,78628
    aarch64_sve_sminp,1018,78703
    aarch64_sve_sminqv,1019,78776
    aarch64_sve_sminv,1020,78850
    aarch64_sve_smlalb,1021,78923
    aarch64_sve_smlalb_lane,1022,78997
    aarch64_sve_smlalt,1023,79076
    aarch64_sve_smlalt_lane,1024,79150
    aarch64_sve_smlslb,1025,79229
    aarch64_sve_smlslb_lane,1026,79303
    aarch64_sve_smlslt,1027,79382
    aarch64_sve_smlslt_lane,1028,79456
    aarch64_sve_smmla,1029,79535
    aarch64_sve_smulh,1030,79608
    aarch64_sve_smulh_u,1031,79681
    aarch64_sve_smullb,1032,79756
    aarch64_sve_smullb_lane,1033,79830
    aarch64_sve_smullt,1034,79909
    aarch64_sve_smullt_lane,1035,79983
    aarch64_sve_splice,1036,80062
    aarch64_sve_sqabs,1037,80136
    aarch64_sve_sqadd,1038,80209
    aarch64_sve_sqadd_x,1039,80282
    aarch64_sve_sqcadd_x,1040,80357
    aarch64_sve_sqcvt_x2,1041,80433
    aarch64_sve_sqcvt_x4,1042,80509
    aarch64_sve_sqcvtn_x2,1043,80585
    aarch64_sve_sqcvtn_x4,1044,80662
    aarch64_sve_sqcvtu_x2,1045,80739
    aarch64_sve_sqcvtu_x4,1046,80816
    aarch64_sve_sqcvtun_x2,1047,80893
    aarch64_sve_sqcvtun_x4,1048,80971
    aarch64_sve_sqdecb_n32,1049,81049
    aarch64_sve_sqdecb_n64,1050,81127
    aarch64_sve_sqdecd,1051,81205
    aarch64_sve_sqdecd_n32,1052,81279
    aarch64_sve_sqdecd_n64,1053,81357
    aarch64_sve_sqdech,1054,81435
    aarch64_sve_sqdech_n32,1055,81509
    aarch64_sve_sqdech_n64,1056,81587
    aarch64_sve_sqdecp,1057,81665
    aarch64_sve_sqdecp_n32,1058,81739
    aarch64_sve_sqdecp_n64,1059,81817
    aarch64_sve_sqdecw,1060,81895
    aarch64_sve_sqdecw_n32,1061,81969
    aarch64_sve_sqdecw_n64,1062,82047
    aarch64_sve_sqdmlalb,1063,82125
    aarch64_sve_sqdmlalb_lane,1064,82201
    aarch64_sve_sqdmlalbt,1065,82282
    aarch64_sve_sqdmlalt,1066,82359
    aarch64_sve_sqdmlalt_lane,1067,82435
    aarch64_sve_sqdmlslb,1068,82516
    aarch64_sve_sqdmlslb_lane,1069,82592
    aarch64_sve_sqdmlslbt,1070,82673
    aarch64_sve_sqdmlslt,1071,82750
    aarch64_sve_sqdmlslt_lane,1072,82826
    aarch64_sve_sqdmulh,1073,82907
    aarch64_sve_sqdmulh_lane,1074,82982
    aarch64_sve_sqdmulh_single_vgx2,1075,83062
    aarch64_sve_sqdmulh_single_vgx4,1076,83149
    aarch64_sve_sqdmulh_vgx2,1077,83236
    aarch64_sve_sqdmulh_vgx4,1078,83316
    aarch64_sve_sqdmullb,1079,83396
    aarch64_sve_sqdmullb_lane,1080,83472
    aarch64_sve_sqdmullt,1081,83553
    aarch64_sve_sqdmullt_lane,1082,83629
    aarch64_sve_sqincb_n32,1083,83710
    aarch64_sve_sqincb_n64,1084,83788
    aarch64_sve_sqincd,1085,83866
    aarch64_sve_sqincd_n32,1086,83940
    aarch64_sve_sqincd_n64,1087,84018
    aarch64_sve_sqinch,1088,84096
    aarch64_sve_sqinch_n32,1089,84170
    aarch64_sve_sqinch_n64,1090,84248
    aarch64_sve_sqincp,1091,84326
    aarch64_sve_sqincp_n32,1092,84400
    aarch64_sve_sqincp_n64,1093,84478
    aarch64_sve_sqincw,1094,84556
    aarch64_sve_sqincw_n32,1095,84630
    aarch64_sve_sqincw_n64,1096,84708
    aarch64_sve_sqneg,1097,84786
    aarch64_sve_sqrdcmlah_lane_x,1098,84859
    aarch64_sve_sqrdcmlah_x,1099,84943
    aarch64_sve_sqrdmlah,1100,85022
    aarch64_sve_sqrdmlah_lane,1101,85098
    aarch64_sve_sqrdmlsh,1102,85179
    aarch64_sve_sqrdmlsh_lane,1103,85255
    aarch64_sve_sqrdmulh,1104,85336
    aarch64_sve_sqrdmulh_lane,1105,85412
    aarch64_sve_sqrshl,1106,85493
    aarch64_sve_sqrshr_x2,1107,85567
    aarch64_sve_sqrshr_x4,1108,85644
    aarch64_sve_sqrshrn_x2,1109,85721
    aarch64_sve_sqrshrn_x4,1110,85799
    aarch64_sve_sqrshrnb,1111,85877
    aarch64_sve_sqrshrnt,1112,85953
    aarch64_sve_sqrshru_x2,1113,86029
    aarch64_sve_sqrshru_x4,1114,86107
    aarch64_sve_sqrshrun_x2,1115,86185
    aarch64_sve_sqrshrun_x4,1116,86264
    aarch64_sve_sqrshrunb,1117,86343
    aarch64_sve_sqrshrunt,1118,86420
    aarch64_sve_sqshl,1119,86497
    aarch64_sve_sqshlu,1120,86570
    aarch64_sve_sqshrnb,1121,86644
    aarch64_sve_sqshrnt,1122,86719
    aarch64_sve_sqshrunb,1123,86794
    aarch64_sve_sqshrunt,1124,86870
    aarch64_sve_sqsub,1125,86946
    aarch64_sve_sqsub_u,1126,87019
    aarch64_sve_sqsub_x,1127,87094
    aarch64_sve_sqsubr,1128,87169
    aarch64_sve_sqxtnb,1129,87243
    aarch64_sve_sqxtnt,1130,87317
    aarch64_sve_sqxtunb,1131,87391
    aarch64_sve_sqxtunt,1132,87466
    aarch64_sve_srhadd,1133,87541
    aarch64_sve_sri,1134,87615
    aarch64_sve_srshl,1135,87686
    aarch64_sve_srshl_single_x2,1136,87759
    aarch64_sve_srshl_single_x4,1137,87842
    aarch64_sve_srshl_x2,1138,87925
    aarch64_sve_srshl_x4,1139,88001
    aarch64_sve_srshr,1140,88077
    aarch64_sve_srsra,1141,88150
    aarch64_sve_sshllb,1142,88223
    aarch64_sve_sshllt,1143,88297
    aarch64_sve_ssra,1144,88371
    aarch64_sve_ssublb,1145,88443
    aarch64_sve_ssublbt,1146,88517
    aarch64_sve_ssublt,1147,88592
    aarch64_sve_ssubltb,1148,88666
    aarch64_sve_ssubwb,1149,88741
    aarch64_sve_ssubwt,1150,88815
    aarch64_sve_st1,1151,88889
    aarch64_sve_st1_pn_x2,1152,88960
    aarch64_sve_st1_pn_x4,1153,89037
    aarch64_sve_st1_scatter,1154,89114
    aarch64_sve_st1_scatter_index,1155,89193
    aarch64_sve_st1_scatter_scalar_offset,1156,89278
    aarch64_sve_st1_scatter_sxtw,1157,89371
    aarch64_sve_st1_scatter_sxtw_index,1158,89455
    aarch64_sve_st1_scatter_uxtw,1159,89545
    aarch64_sve_st1_scatter_uxtw_index,1160,89629
    aarch64_sve_st1dq,1161,89719
    aarch64_sve_st1q_scatter_index,1162,89792
    aarch64_sve_st1q_scatter_scalar_offset,1163,89878
    aarch64_sve_st1q_scatter_vector_offset,1164,89972
    aarch64_sve_st1wq,1165,90066
    aarch64_sve_st2,1166,90139
    aarch64_sve_st2q,1167,90210
    aarch64_sve_st3,1168,90282
    aarch64_sve_st3q,1169,90353
    aarch64_sve_st4,1170,90425
    aarch64_sve_st4q,1171,90496
    aarch64_sve_stnt1,1172,90568
    aarch64_sve_stnt1_pn_x2,1173,90641
    aarch64_sve_stnt1_pn_x4,1174,90720
    aarch64_sve_stnt1_scatter,1175,90799
    aarch64_sve_stnt1_scatter_index,1176,90880
    aarch64_sve_stnt1_scatter_scalar_offset,1177,90967
    aarch64_sve_stnt1_scatter_uxtw,1178,91062
    aarch64_sve_sub,1179,91148
    aarch64_sve_sub_u,1180,91219
    aarch64_sve_subhnb,1181,91292
    aarch64_sve_subhnt,1182,91366
    aarch64_sve_subr,1183,91440
    aarch64_sve_sudot_lane,1184,91512
    aarch64_sve_sunpk_x2,1185,91590
    aarch64_sve_sunpk_x4,1186,91666
    aarch64_sve_sunpkhi,1187,91742
    aarch64_sve_sunpklo,1188,91817
    aarch64_sve_suqadd,1189,91892
    aarch64_sve_sxtb,1190,91966
    aarch64_sve_sxth,1191,92038
    aarch64_sve_sxtw,1192,92110
    aarch64_sve_tbl,1193,92182
    aarch64_sve_tbl2,1194,92253
    aarch64_sve_tblq,1195,92325
    aarch64_sve_tbx,1196,92397
    aarch64_sve_tbxq,1197,92468
    aarch64_sve_trn1,1198,92540
    aarch64_sve_trn1_b16,1199,92612
    aarch64_sve_trn1_b32,1200,92688
    aarch64_sve_trn1_b64,1201,92764
    aarch64_sve_trn1q,1202,92840
    aarch64_sve_trn2,1203,92913
    aarch64_sve_trn2_b16,1204,92985
    aarch64_sve_trn2_b32,1205,93061
    aarch64_sve_trn2_b64,1206,93137
    aarch64_sve_trn2q,1207,93213
    aarch64_sve_uaba,1208,93286
    aarch64_sve_uabalb,1209,93358
    aarch64_sve_uabalt,1210,93432
    aarch64_sve_uabd,1211,93506
    aarch64_sve_uabd_u,1212,93578
    aarch64_sve_uabdlb,1213,93652
    aarch64_sve_uabdlt,1214,93726
    aarch64_sve_uadalp,1215,93800
    aarch64_sve_uaddlb,1216,93874
    aarch64_sve_uaddlt,1217,93948
    aarch64_sve_uaddv,1218,94022
    aarch64_sve_uaddwb,1219,94095
    aarch64_sve_uaddwt,1220,94169
    aarch64_sve_uclamp,1221,94243
    aarch64_sve_uclamp_single_x2,1222,94317
    aarch64_sve_uclamp_single_x4,1223,94401
    aarch64_sve_ucvtf,1224,94485
    aarch64_sve_ucvtf_f16i32,1225,94558
    aarch64_sve_ucvtf_f16i64,1226,94638
    aarch64_sve_ucvtf_f32i64,1227,94718
    aarch64_sve_ucvtf_f64i32,1228,94798
    aarch64_sve_ucvtf_x2,1229,94878
    aarch64_sve_ucvtf_x4,1230,94954
    aarch64_sve_udiv,1231,95030
    aarch64_sve_udiv_u,1232,95102
    aarch64_sve_udivr,1233,95176
    aarch64_sve_udot,1234,95249
    aarch64_sve_udot_lane,1235,95321
    aarch64_sve_udot_lane_x2,1236,95398
    aarch64_sve_udot_x2,1237,95478
    aarch64_sve_uhadd,1238,95553
    aarch64_sve_uhsub,1239,95626
    aarch64_sve_uhsubr,1240,95699
    aarch64_sve_umax,1241,95773
    aarch64_sve_umax_single_x2,1242,95845
    aarch64_sve_umax_single_x4,1243,95927
    aarch64_sve_umax_u,1244,96009
    aarch64_sve_umax_x2,1245,96083
    aarch64_sve_umax_x4,1246,96158
    aarch64_sve_umaxp,1247,96233
    aarch64_sve_umaxqv,1248,96306
    aarch64_sve_umaxv,1249,96380
    aarch64_sve_umin,1250,96453
    aarch64_sve_umin_single_x2,1251,96525
    aarch64_sve_umin_single_x4,1252,96607
    aarch64_sve_umin_u,1253,96689
    aarch64_sve_umin_x2,1254,96763
    aarch64_sve_umin_x4,1255,96838
    aarch64_sve_uminp,1256,96913
    aarch64_sve_uminqv,1257,96986
    aarch64_sve_uminv,1258,97060
    aarch64_sve_umlalb,1259,97133
    aarch64_sve_umlalb_lane,1260,97207
    aarch64_sve_umlalt,1261,97286
    aarch64_sve_umlalt_lane,1262,97360
    aarch64_sve_umlslb,1263,97439
    aarch64_sve_umlslb_lane,1264,97513
    aarch64_sve_umlslt,1265,97592
    aarch64_sve_umlslt_lane,1266,97666
    aarch64_sve_ummla,1267,97745
    aarch64_sve_umulh,1268,97818
    aarch64_sve_umulh_u,1269,97891
    aarch64_sve_umullb,1270,97966
    aarch64_sve_umullb_lane,1271,98040
    aarch64_sve_umullt,1272,98119
    aarch64_sve_umullt_lane,1273,98193
    aarch64_sve_uqadd,1274,98272
    aarch64_sve_uqadd_x,1275,98345
    aarch64_sve_uqcvt_x2,1276,98420
    aarch64_sve_uqcvt_x4,1277,98496
    aarch64_sve_uqcvtn_x2,1278,98572
    aarch64_sve_uqcvtn_x4,1279,98649
    aarch64_sve_uqdecb_n32,1280,98726
    aarch64_sve_uqdecb_n64,1281,98804
    aarch64_sve_uqdecd,1282,98882
    aarch64_sve_uqdecd_n32,1283,98956
    aarch64_sve_uqdecd_n64,1284,99034
    aarch64_sve_uqdech,1285,99112
    aarch64_sve_uqdech_n32,1286,99186
    aarch64_sve_uqdech_n64,1287,99264
    aarch64_sve_uqdecp,1288,99342
    aarch64_sve_uqdecp_n32,1289,99416
    aarch64_sve_uqdecp_n64,1290,99494
    aarch64_sve_uqdecw,1291,99572
    aarch64_sve_uqdecw_n32,1292,99646
    aarch64_sve_uqdecw_n64,1293,99724
    aarch64_sve_uqincb_n32,1294,99802
    aarch64_sve_uqincb_n64,1295,99880
    aarch64_sve_uqincd,1296,99958
    aarch64_sve_uqincd_n32,1297,100032
    aarch64_sve_uqincd_n64,1298,100110
    aarch64_sve_uqinch,1299,100188
    aarch64_sve_uqinch_n32,1300,100262
    aarch64_sve_uqinch_n64,1301,100340
    aarch64_sve_uqincp,1302,100418
    aarch64_sve_uqincp_n32,1303,100492
    aarch64_sve_uqincp_n64,1304,100570
    aarch64_sve_uqincw,1305,100648
    aarch64_sve_uqincw_n32,1306,100722
    aarch64_sve_uqincw_n64,1307,100800
    aarch64_sve_uqrshl,1308,100878
    aarch64_sve_uqrshr_x2,1309,100952
    aarch64_sve_uqrshr_x4,1310,101029
    aarch64_sve_uqrshrn_x2,1311,101106
    aarch64_sve_uqrshrn_x4,1312,101184
    aarch64_sve_uqrshrnb,1313,101262
    aarch64_sve_uqrshrnt,1314,101338
    aarch64_sve_uqshl,1315,101414
    aarch64_sve_uqshrnb,1316,101487
    aarch64_sve_uqshrnt,1317,101562
    aarch64_sve_uqsub,1318,101637
    aarch64_sve_uqsub_u,1319,101710
    aarch64_sve_uqsub_x,1320,101785
    aarch64_sve_uqsubr,1321,101860
    aarch64_sve_uqxtnb,1322,101934
    aarch64_sve_uqxtnt,1323,102008
    aarch64_sve_urecpe,1324,102082
    aarch64_sve_urhadd,1325,102156
    aarch64_sve_urshl,1326,102230
    aarch64_sve_urshl_single_x2,1327,102303
    aarch64_sve_urshl_single_x4,1328,102386
    aarch64_sve_urshl_x2,1329,102469
    aarch64_sve_urshl_x4,1330,102545
    aarch64_sve_urshr,1331,102621
    aarch64_sve_ursqrte,1332,102694
    aarch64_sve_ursra,1333,102769
    aarch64_sve_usdot,1334,102842
    aarch64_sve_usdot_lane,1335,102915
    aarch64_sve_ushllb,1336,102993
    aarch64_sve_ushllt,1337,103067
    aarch64_sve_usmmla,1338,103141
    aarch64_sve_usqadd,1339,103215
    aarch64_sve_usra,1340,103289
    aarch64_sve_usublb,1341,103361
    aarch64_sve_usublt,1342,103435
    aarch64_sve_usubwb,1343,103509
    aarch64_sve_usubwt,1344,103583
    aarch64_sve_uunpk_x2,1345,103657
    aarch64_sve_uunpk_x4,1346,103733
    aarch64_sve_uunpkhi,1347,103809
    aarch64_sve_uunpklo,1348,103884
    aarch64_sve_uxtb,1349,103959
    aarch64_sve_uxth,1350,104031
    aarch64_sve_uxtw,1351,104103
    aarch64_sve_uzp_x2,1352,104175
    aarch64_sve_uzp_x4,1353,104249
    aarch64_sve_uzp1,1354,104323
    aarch64_sve_uzp1_b16,1355,104395
    aarch64_sve_uzp1_b32,1356,104471
    aarch64_sve_uzp1_b64,1357,104547
    aarch64_sve_uzp1q,1358,104623
    aarch64_sve_uzp2,1359,104696
    aarch64_sve_uzp2_b16,1360,104768
    aarch64_sve_uzp2_b32,1361,104844
    aarch64_sve_uzp2_b64,1362,104920
    aarch64_sve_uzp2q,1363,104996
    aarch64_sve_uzpq_x2,1364,105069
    aarch64_sve_uzpq_x4,1365,105144
    aarch64_sve_uzpq1,1366,105219
    aarch64_sve_uzpq2,1367,105292
    aarch64_sve_whilege,1368,105365
    aarch64_sve_whilege_c16,1369,105440
    aarch64_sve_whilege_c32,1370,105519
    aarch64_sve_whilege_c64,1371,105598
    aarch64_sve_whilege_c8,1372,105677
    aarch64_sve_whilege_x2,1373,105755
    aarch64_sve_whilegt,1374,105833
    aarch64_sve_whilegt_c16,1375,105908
    aarch64_sve_whilegt_c32,1376,105987
    aarch64_sve_whilegt_c64,1377,106066
    aarch64_sve_whilegt_c8,1378,106145
    aarch64_sve_whilegt_x2,1379,106223
    aarch64_sve_whilehi,1380,106301
    aarch64_sve_whilehi_c16,1381,106376
    aarch64_sve_whilehi_c32,1382,106455
    aarch64_sve_whilehi_c64,1383,106534
    aarch64_sve_whilehi_c8,1384,106613
    aarch64_sve_whilehi_x2,1385,106691
    aarch64_sve_whilehs,1386,106769
    aarch64_sve_whilehs_c16,1387,106844
    aarch64_sve_whilehs_c32,1388,106923
    aarch64_sve_whilehs_c64,1389,107002
    aarch64_sve_whilehs_c8,1390,107081
    aarch64_sve_whilehs_x2,1391,107159
    aarch64_sve_whilele,1392,107237
    aarch64_sve_whilele_c16,1393,107312
    aarch64_sve_whilele_c32,1394,107391
    aarch64_sve_whilele_c64,1395,107470
    aarch64_sve_whilele_c8,1396,107549
    aarch64_sve_whilele_x2,1397,107627
    aarch64_sve_whilelo,1398,107705
    aarch64_sve_whilelo_c16,1399,107780
    aarch64_sve_whilelo_c32,1400,107859
    aarch64_sve_whilelo_c64,1401,107938
    aarch64_sve_whilelo_c8,1402,108017
    aarch64_sve_whilelo_x2,1403,108095
    aarch64_sve_whilels,1404,108173
    aarch64_sve_whilels_c16,1405,108248
    aarch64_sve_whilels_c32,1406,108327
    aarch64_sve_whilels_c64,1407,108406
    aarch64_sve_whilels_c8,1408,108485
    aarch64_sve_whilels_x2,1409,108563
    aarch64_sve_whilelt,1410,108641
    aarch64_sve_whilelt_c16,1411,108716
    aarch64_sve_whilelt_c32,1412,108795
    aarch64_sve_whilelt_c64,1413,108874
    aarch64_sve_whilelt_c8,1414,108953
    aarch64_sve_whilelt_x2,1415,109031
    aarch64_sve_whilerw_b,1416,109109
    aarch64_sve_whilerw_d,1417,109186
    aarch64_sve_whilerw_h,1418,109263
    aarch64_sve_whilerw_s,1419,109340
    aarch64_sve_whilewr_b,1420,109417
    aarch64_sve_whilewr_d,1421,109494
    aarch64_sve_whilewr_h,1422,109571
    aarch64_sve_whilewr_s,1423,109648
    aarch64_sve_wrffr,1424,109725
    aarch64_sve_xar,1425,109798
    aarch64_sve_zip_x2,1426,109869
    aarch64_sve_zip_x4,1427,109943
    aarch64_sve_zip1,1428,110017
    aarch64_sve_zip1_b16,1429,110089
    aarch64_sve_zip1_b32,1430,110165
    aarch64_sve_zip1_b64,1431,110241
    aarch64_sve_zip1q,1432,110317
    aarch64_sve_zip2,1433,110390
    aarch64_sve_zip2_b16,1434,110462
    aarch64_sve_zip2_b32,1435,110538
    aarch64_sve_zip2_b64,1436,110614
    aarch64_sve_zip2q,1437,110690
    aarch64_sve_zipq_x2,1438,110763
    aarch64_sve_zipq_x4,1439,110838
    aarch64_sve_zipq1,1440,110913
    aarch64_sve_zipq2,1441,110986
    aarch64_tagp,1442,111059
    aarch64_tcancel,1443,111127
    aarch64_tcommit,1444,111198
    aarch64_tstart,1445,111269
    aarch64_ttest,1446,111339
    aarch64_udiv,1447,111408

/usr/include/llvm/IR/IntrinsicsAArch64.td,6260
let TargetPrefix 13,518
let TargetPrefix 97,4603
let TargetPrefix 234,10805
let TargetPrefix 548,24369
def int_aarch64_neon_vcopy_lane: AdvSIMD_2Vector2Index_Intrinsic;556,24688
let TargetPrefix 558,24755
def int_aarch64_neon_ld1x2 : AdvSIMD_2Vec_Load_Intrinsic;629,28152
def int_aarch64_neon_ld1x3 : AdvSIMD_3Vec_Load_Intrinsic;630,28210
def int_aarch64_neon_ld1x4 : AdvSIMD_4Vec_Load_Intrinsic;631,28268
def int_aarch64_neon_st1x2 : AdvSIMD_2Vec_Store_Intrinsic;633,28327
def int_aarch64_neon_st1x3 : AdvSIMD_3Vec_Store_Intrinsic;634,28386
def int_aarch64_neon_st1x4 : AdvSIMD_4Vec_Store_Intrinsic;635,28445
def int_aarch64_neon_ld2 : AdvSIMD_2Vec_Load_Intrinsic;637,28505
def int_aarch64_neon_ld3 : AdvSIMD_3Vec_Load_Intrinsic;638,28561
def int_aarch64_neon_ld4 : AdvSIMD_4Vec_Load_Intrinsic;639,28617
def int_aarch64_neon_ld2lane : AdvSIMD_2Vec_Load_Lane_Intrinsic;641,28674
def int_aarch64_neon_ld3lane : AdvSIMD_3Vec_Load_Lane_Intrinsic;642,28739
def int_aarch64_neon_ld4lane : AdvSIMD_4Vec_Load_Lane_Intrinsic;643,28804
def int_aarch64_neon_ld2r : AdvSIMD_2Vec_Load_Intrinsic;645,28870
def int_aarch64_neon_ld3r : AdvSIMD_3Vec_Load_Intrinsic;646,28927
def int_aarch64_neon_ld4r : AdvSIMD_4Vec_Load_Intrinsic;647,28984
def int_aarch64_neon_st2  : AdvSIMD_2Vec_Store_Intrinsic;649,29042
def int_aarch64_neon_st3  : AdvSIMD_3Vec_Store_Intrinsic;650,29100
def int_aarch64_neon_st4  : AdvSIMD_4Vec_Store_Intrinsic;651,29158
def int_aarch64_neon_st2lane  : AdvSIMD_2Vec_Store_Lane_Intrinsic;653,29217
def int_aarch64_neon_st3lane  : AdvSIMD_3Vec_Store_Lane_Intrinsic;654,29284
def int_aarch64_neon_st4lane  : AdvSIMD_4Vec_Store_Lane_Intrinsic;655,29351
let TargetPrefix 657,29419
def int_aarch64_neon_tbl1 : AdvSIMD_Tbl1_Intrinsic;695,31096
def int_aarch64_neon_tbl2 : AdvSIMD_Tbl2_Intrinsic;696,31148
def int_aarch64_neon_tbl3 : AdvSIMD_Tbl3_Intrinsic;697,31200
def int_aarch64_neon_tbl4 : AdvSIMD_Tbl4_Intrinsic;698,31252
def int_aarch64_neon_tbx1 : AdvSIMD_Tbx1_Intrinsic;700,31305
def int_aarch64_neon_tbx2 : AdvSIMD_Tbx2_Intrinsic;701,31357
def int_aarch64_neon_tbx3 : AdvSIMD_Tbx3_Intrinsic;702,31409
def int_aarch64_neon_tbx4 : AdvSIMD_Tbx4_Intrinsic;703,31461
let TargetPrefix 705,31514
def int_aarch64_get_fpcr : FPCR_Get_Intrinsic;715,31891
def int_aarch64_set_fpcr : FPCR_Set_Intrinsic;716,31938
def int_aarch64_rndr : RNDR_Intrinsic;719,32035
def int_aarch64_rndrrs : RNDR_Intrinsic;720,32074
let TargetPrefix 722,32116
def int_aarch64_crypto_aese   : Crypto_AES_DataKey_Intrinsic;792,34954
def int_aarch64_crypto_aesd   : Crypto_AES_DataKey_Intrinsic;793,35016
def int_aarch64_crypto_aesmc  : Crypto_AES_Data_Intrinsic;794,35078
def int_aarch64_crypto_aesimc : Crypto_AES_Data_Intrinsic;795,35137
def int_aarch64_crypto_sha1c  : Crypto_SHA_5Hash4Schedule_Intrinsic;798,35205
def int_aarch64_crypto_sha1p  : Crypto_SHA_5Hash4Schedule_Intrinsic;799,35274
def int_aarch64_crypto_sha1m  : Crypto_SHA_5Hash4Schedule_Intrinsic;800,35343
def int_aarch64_crypto_sha1h  : Crypto_SHA_1Hash_Intrinsic;801,35412
def int_aarch64_crypto_sha1su0 : Crypto_SHA_12Schedule_Intrinsic;803,35473
def int_aarch64_crypto_sha1su1 : Crypto_SHA_8Schedule_Intrinsic;804,35539
def int_aarch64_crypto_sha256h   : Crypto_SHA_8Hash4Schedule_Intrinsic;807,35615
def int_aarch64_crypto_sha256h2  : Crypto_SHA_8Hash4Schedule_Intrinsic;808,35687
def int_aarch64_crypto_sha256su0 : Crypto_SHA_8Schedule_Intrinsic;809,35759
def int_aarch64_crypto_sha256su1 : Crypto_SHA_12Schedule_Intrinsic;810,35826
def int_aarch64_crypto_eor3s : Crypto_SHA3_3Arg_Intrinsic;813,35902
def int_aarch64_crypto_eor3u : Crypto_SHA3_3Arg_Intrinsic;814,35961
def int_aarch64_crypto_bcaxs : Crypto_SHA3_3Arg_Intrinsic;815,36020
def int_aarch64_crypto_bcaxu : Crypto_SHA3_3Arg_Intrinsic;816,36079
def int_aarch64_crypto_rax1 : Crypto_SHA3_2Arg_Intrinsic;817,36138
def int_aarch64_crypto_xar : Crypto_SHA3_2ArgImm_Intrinsic;818,36196
def int_aarch64_crypto_sha512h : Crypto_SHA512_3Arg_Intrinsic;821,36267
def int_aarch64_crypto_sha512h2 : Crypto_SHA512_3Arg_Intrinsic;822,36330
def int_aarch64_crypto_sha512su0 : Crypto_SHA512_2Arg_Intrinsic;823,36394
def int_aarch64_crypto_sha512su1 : Crypto_SHA512_3Arg_Intrinsic;824,36459
def int_aarch64_crypto_sm3partw1 : Crypto_SM3_3Vector_Intrinsic;827,36537
def int_aarch64_crypto_sm3partw2 : Crypto_SM3_3Vector_Intrinsic;828,36602
def int_aarch64_crypto_sm3ss1    : Crypto_SM3_3Vector_Intrinsic;829,36667
def int_aarch64_crypto_sm3tt1a   : Crypto_SM3_3VectorIndexed_Intrinsic;830,36732
def int_aarch64_crypto_sm3tt1b   : Crypto_SM3_3VectorIndexed_Intrinsic;831,36804
def int_aarch64_crypto_sm3tt2a   : Crypto_SM3_3VectorIndexed_Intrinsic;832,36876
def int_aarch64_crypto_sm3tt2b   : Crypto_SM3_3VectorIndexed_Intrinsic;833,36948
def int_aarch64_crypto_sm4e      : Crypto_SM4_2Vector_Intrinsic;834,37020
def int_aarch64_crypto_sm4ekey   : Crypto_SM4_2Vector_Intrinsic;835,37085
let TargetPrefix 840,37242
let TargetPrefix 862,38279
let TargetPrefix 913,41146
let TargetPrefix 920,41513
let TargetPrefix 955,43045
let TargetPrefix 1386,59334
def int_aarch64_sve_whilerw_b : SVE2_CONFLICT_DETECT_Intrinsic;2748,121505
def int_aarch64_sve_whilerw_h : SVE2_CONFLICT_DETECT_Intrinsic;2749,121569
def int_aarch64_sve_whilerw_s : SVE2_CONFLICT_DETECT_Intrinsic;2750,121633
def int_aarch64_sve_whilerw_d : SVE2_CONFLICT_DETECT_Intrinsic;2751,121697
def int_aarch64_sve_whilewr_b : SVE2_CONFLICT_DETECT_Intrinsic;2752,121761
def int_aarch64_sve_whilewr_h : SVE2_CONFLICT_DETECT_Intrinsic;2753,121825
def int_aarch64_sve_whilewr_s : SVE2_CONFLICT_DETECT_Intrinsic;2754,121889
def int_aarch64_sve_whilewr_d : SVE2_CONFLICT_DETECT_Intrinsic;2755,121953
let TargetPrefix 2758,122064
def int_aarch64_sve_zipq1     : AdvSIMD_2VectorArg_Intrinsic;3595,159403
def int_aarch64_sve_zipq2     : AdvSIMD_2VectorArg_Intrinsic;3596,159465
def int_aarch64_sve_uzpq1     : AdvSIMD_2VectorArg_Intrinsic;3597,159527
def int_aarch64_sve_uzpq2     : AdvSIMD_2VectorArg_Intrinsic;3598,159589
def int_aarch64_sve_tblq : AdvSIMD_SVE_TBL_Intrinsic;3603,159752
def int_aarch64_sve_tbxq : AdvSIMD_SVE2_TBX_Intrinsic;3604,159806
def int_aarch64_sve_extq : AdvSIMD_2VectorArgIndexed_Intrinsic;3608,159937

/usr/include/llvm/IR/IntrinsicsAMDGPU.h,40821
#define LLVM_IR_INTRINSIC_AMDGCN_ENUMS_H10,609
enum AMDGCNIntrinsics 14,690
    amdgcn_alignbyte 16,755
    amdgcn_atomic_cond_sub_u32,17,834
    amdgcn_ballot,18,916
    amdgcn_buffer_atomic_add,19,985
    amdgcn_buffer_atomic_and,20,1065
    amdgcn_buffer_atomic_cmpswap,21,1145
    amdgcn_buffer_atomic_csub,22,1229
    amdgcn_buffer_atomic_fadd,23,1310
    amdgcn_buffer_atomic_or,24,1391
    amdgcn_buffer_atomic_smax,25,1470
    amdgcn_buffer_atomic_smin,26,1551
    amdgcn_buffer_atomic_sub,27,1632
    amdgcn_buffer_atomic_swap,28,1712
    amdgcn_buffer_atomic_umax,29,1793
    amdgcn_buffer_atomic_umin,30,1874
    amdgcn_buffer_atomic_xor,31,1955
    amdgcn_buffer_load,32,2035
    amdgcn_buffer_load_format,33,2109
    amdgcn_buffer_store,34,2190
    amdgcn_buffer_store_format,35,2265
    amdgcn_buffer_wbinvl1,36,2347
    amdgcn_buffer_wbinvl1_sc,37,2424
    amdgcn_buffer_wbinvl1_vol,38,2504
    amdgcn_class,39,2585
    amdgcn_cos,40,2653
    amdgcn_cs_chain,41,2719
    amdgcn_cubeid,42,2790
    amdgcn_cubema,43,2859
    amdgcn_cubesc,44,2928
    amdgcn_cubetc,45,2997
    amdgcn_cvt_f32_bf8,46,3066
    amdgcn_cvt_f32_fp8,47,3140
    amdgcn_cvt_pk_bf8_f32,48,3214
    amdgcn_cvt_pk_f32_bf8,49,3291
    amdgcn_cvt_pk_f32_fp8,50,3368
    amdgcn_cvt_pk_fp8_f32,51,3445
    amdgcn_cvt_pk_i16,52,3522
    amdgcn_cvt_pk_u16,53,3595
    amdgcn_cvt_pk_u8_f32,54,3668
    amdgcn_cvt_pknorm_i16,55,3744
    amdgcn_cvt_pknorm_u16,56,3821
    amdgcn_cvt_pkrtz,57,3898
    amdgcn_cvt_sr_bf8_f32,58,3970
    amdgcn_cvt_sr_fp8_f32,59,4047
    amdgcn_dispatch_id,60,4124
    amdgcn_dispatch_ptr,61,4198
    amdgcn_div_fixup,62,4273
    amdgcn_div_fmas,63,4345
    amdgcn_div_scale,64,4416
    amdgcn_dot4_f32_bf8_bf8,65,4488
    amdgcn_dot4_f32_bf8_fp8,66,4567
    amdgcn_dot4_f32_fp8_bf8,67,4646
    amdgcn_dot4_f32_fp8_fp8,68,4725
    amdgcn_ds_add_gs_reg_rtn,69,4804
    amdgcn_ds_append,70,4884
    amdgcn_ds_bpermute,71,4956
    amdgcn_ds_bvh_stack_rtn,72,5030
    amdgcn_ds_consume,73,5109
    amdgcn_ds_fadd,74,5182
    amdgcn_ds_fadd_v2bf16,75,5252
    amdgcn_ds_fmax,76,5329
    amdgcn_ds_fmin,77,5399
    amdgcn_ds_gws_barrier,78,5469
    amdgcn_ds_gws_init,79,5546
    amdgcn_ds_gws_sema_br,80,5620
    amdgcn_ds_gws_sema_p,81,5697
    amdgcn_ds_gws_sema_release_all,82,5773
    amdgcn_ds_gws_sema_v,83,5859
    amdgcn_ds_ordered_add,84,5935
    amdgcn_ds_ordered_swap,85,6012
    amdgcn_ds_permute,86,6090
    amdgcn_ds_sub_gs_reg_rtn,87,6163
    amdgcn_ds_swizzle,88,6243
    amdgcn_else,89,6316
    amdgcn_end_cf,90,6383
    amdgcn_endpgm,91,6452
    amdgcn_exp,92,6521
    amdgcn_exp_compr,93,6587
    amdgcn_exp_row,94,6659
    amdgcn_exp2,95,6729
    amdgcn_fcmp,96,6796
    amdgcn_fdiv_fast,97,6863
    amdgcn_fdot2,98,6935
    amdgcn_fdot2_bf16_bf16,99,7003
    amdgcn_fdot2_f16_f16,100,7081
    amdgcn_fdot2_f32_bf16,101,7157
    amdgcn_flat_atomic_fadd,102,7234
    amdgcn_flat_atomic_fadd_v2bf16,103,7313
    amdgcn_flat_atomic_fmax,104,7399
    amdgcn_flat_atomic_fmax_num,105,7478
    amdgcn_flat_atomic_fmin,106,7561
    amdgcn_flat_atomic_fmin_num,107,7640
    amdgcn_fma_legacy,108,7723
    amdgcn_fmad_ftz,109,7796
    amdgcn_fmed3,110,7867
    amdgcn_fmul_legacy,111,7935
    amdgcn_fract,112,8009
    amdgcn_frexp_exp,113,8077
    amdgcn_frexp_mant,114,8149
    amdgcn_global_atomic_csub,115,8222
    amdgcn_global_atomic_fadd,116,8303
    amdgcn_global_atomic_fadd_v2bf16,117,8384
    amdgcn_global_atomic_fmax,118,8472
    amdgcn_global_atomic_fmax_num,119,8553
    amdgcn_global_atomic_fmin,120,8638
    amdgcn_global_atomic_fmin_num,121,8719
    amdgcn_global_atomic_ordered_add_b64,122,8804
    amdgcn_global_load_lds,123,8896
    amdgcn_global_load_tr,124,8974
    amdgcn_groupstaticsize,125,9051
    amdgcn_icmp,126,9129
    amdgcn_if,127,9196
    amdgcn_if_break,128,9261
    amdgcn_iglp_opt,129,9332
    amdgcn_image_atomic_add_1d,130,9403
    amdgcn_image_atomic_add_1darray,131,9485
    amdgcn_image_atomic_add_2d,132,9572
    amdgcn_image_atomic_add_2darray,133,9654
    amdgcn_image_atomic_add_2darraymsaa,134,9741
    amdgcn_image_atomic_add_2dmsaa,135,9832
    amdgcn_image_atomic_add_3d,136,9918
    amdgcn_image_atomic_add_cube,137,10000
    amdgcn_image_atomic_add_flt_1d,138,10084
    amdgcn_image_atomic_add_flt_1darray,139,10170
    amdgcn_image_atomic_add_flt_2d,140,10261
    amdgcn_image_atomic_add_flt_2darray,141,10347
    amdgcn_image_atomic_add_flt_2darraymsaa,142,10438
    amdgcn_image_atomic_add_flt_2dmsaa,143,10533
    amdgcn_image_atomic_add_flt_3d,144,10623
    amdgcn_image_atomic_add_flt_cube,145,10709
    amdgcn_image_atomic_and_1d,146,10797
    amdgcn_image_atomic_and_1darray,147,10879
    amdgcn_image_atomic_and_2d,148,10966
    amdgcn_image_atomic_and_2darray,149,11048
    amdgcn_image_atomic_and_2darraymsaa,150,11135
    amdgcn_image_atomic_and_2dmsaa,151,11226
    amdgcn_image_atomic_and_3d,152,11312
    amdgcn_image_atomic_and_cube,153,11394
    amdgcn_image_atomic_cmpswap_1d,154,11478
    amdgcn_image_atomic_cmpswap_1darray,155,11564
    amdgcn_image_atomic_cmpswap_2d,156,11655
    amdgcn_image_atomic_cmpswap_2darray,157,11741
    amdgcn_image_atomic_cmpswap_2darraymsaa,158,11832
    amdgcn_image_atomic_cmpswap_2dmsaa,159,11927
    amdgcn_image_atomic_cmpswap_3d,160,12017
    amdgcn_image_atomic_cmpswap_cube,161,12103
    amdgcn_image_atomic_dec_1d,162,12191
    amdgcn_image_atomic_dec_1darray,163,12273
    amdgcn_image_atomic_dec_2d,164,12360
    amdgcn_image_atomic_dec_2darray,165,12442
    amdgcn_image_atomic_dec_2darraymsaa,166,12529
    amdgcn_image_atomic_dec_2dmsaa,167,12620
    amdgcn_image_atomic_dec_3d,168,12706
    amdgcn_image_atomic_dec_cube,169,12788
    amdgcn_image_atomic_fmax_1d,170,12872
    amdgcn_image_atomic_fmax_1darray,171,12955
    amdgcn_image_atomic_fmax_2d,172,13043
    amdgcn_image_atomic_fmax_2darray,173,13126
    amdgcn_image_atomic_fmax_2darraymsaa,174,13214
    amdgcn_image_atomic_fmax_2dmsaa,175,13306
    amdgcn_image_atomic_fmax_3d,176,13393
    amdgcn_image_atomic_fmax_cube,177,13476
    amdgcn_image_atomic_fmin_1d,178,13561
    amdgcn_image_atomic_fmin_1darray,179,13644
    amdgcn_image_atomic_fmin_2d,180,13732
    amdgcn_image_atomic_fmin_2darray,181,13815
    amdgcn_image_atomic_fmin_2darraymsaa,182,13903
    amdgcn_image_atomic_fmin_2dmsaa,183,13995
    amdgcn_image_atomic_fmin_3d,184,14082
    amdgcn_image_atomic_fmin_cube,185,14165
    amdgcn_image_atomic_inc_1d,186,14250
    amdgcn_image_atomic_inc_1darray,187,14332
    amdgcn_image_atomic_inc_2d,188,14419
    amdgcn_image_atomic_inc_2darray,189,14501
    amdgcn_image_atomic_inc_2darraymsaa,190,14588
    amdgcn_image_atomic_inc_2dmsaa,191,14679
    amdgcn_image_atomic_inc_3d,192,14765
    amdgcn_image_atomic_inc_cube,193,14847
    amdgcn_image_atomic_max_flt_1d,194,14931
    amdgcn_image_atomic_max_flt_1darray,195,15017
    amdgcn_image_atomic_max_flt_2d,196,15108
    amdgcn_image_atomic_max_flt_2darray,197,15194
    amdgcn_image_atomic_max_flt_2darraymsaa,198,15285
    amdgcn_image_atomic_max_flt_2dmsaa,199,15380
    amdgcn_image_atomic_max_flt_3d,200,15470
    amdgcn_image_atomic_max_flt_cube,201,15556
    amdgcn_image_atomic_min_flt_1d,202,15644
    amdgcn_image_atomic_min_flt_1darray,203,15730
    amdgcn_image_atomic_min_flt_2d,204,15821
    amdgcn_image_atomic_min_flt_2darray,205,15907
    amdgcn_image_atomic_min_flt_2darraymsaa,206,15998
    amdgcn_image_atomic_min_flt_2dmsaa,207,16093
    amdgcn_image_atomic_min_flt_3d,208,16183
    amdgcn_image_atomic_min_flt_cube,209,16269
    amdgcn_image_atomic_or_1d,210,16357
    amdgcn_image_atomic_or_1darray,211,16438
    amdgcn_image_atomic_or_2d,212,16524
    amdgcn_image_atomic_or_2darray,213,16605
    amdgcn_image_atomic_or_2darraymsaa,214,16691
    amdgcn_image_atomic_or_2dmsaa,215,16781
    amdgcn_image_atomic_or_3d,216,16866
    amdgcn_image_atomic_or_cube,217,16947
    amdgcn_image_atomic_pk_add_bf16_1d,218,17030
    amdgcn_image_atomic_pk_add_bf16_1darray,219,17120
    amdgcn_image_atomic_pk_add_bf16_2d,220,17215
    amdgcn_image_atomic_pk_add_bf16_2darray,221,17305
    amdgcn_image_atomic_pk_add_bf16_2darraymsaa,222,17400
    amdgcn_image_atomic_pk_add_bf16_2dmsaa,223,17502
    amdgcn_image_atomic_pk_add_bf16_3d,224,17596
    amdgcn_image_atomic_pk_add_bf16_cube,225,17686
    amdgcn_image_atomic_pk_add_f16_1d,226,17778
    amdgcn_image_atomic_pk_add_f16_1darray,227,17867
    amdgcn_image_atomic_pk_add_f16_2d,228,17961
    amdgcn_image_atomic_pk_add_f16_2darray,229,18050
    amdgcn_image_atomic_pk_add_f16_2darraymsaa,230,18144
    amdgcn_image_atomic_pk_add_f16_2dmsaa,231,18244
    amdgcn_image_atomic_pk_add_f16_3d,232,18337
    amdgcn_image_atomic_pk_add_f16_cube,233,18426
    amdgcn_image_atomic_smax_1d,234,18517
    amdgcn_image_atomic_smax_1darray,235,18600
    amdgcn_image_atomic_smax_2d,236,18688
    amdgcn_image_atomic_smax_2darray,237,18771
    amdgcn_image_atomic_smax_2darraymsaa,238,18859
    amdgcn_image_atomic_smax_2dmsaa,239,18951
    amdgcn_image_atomic_smax_3d,240,19038
    amdgcn_image_atomic_smax_cube,241,19121
    amdgcn_image_atomic_smin_1d,242,19206
    amdgcn_image_atomic_smin_1darray,243,19289
    amdgcn_image_atomic_smin_2d,244,19377
    amdgcn_image_atomic_smin_2darray,245,19460
    amdgcn_image_atomic_smin_2darraymsaa,246,19548
    amdgcn_image_atomic_smin_2dmsaa,247,19640
    amdgcn_image_atomic_smin_3d,248,19727
    amdgcn_image_atomic_smin_cube,249,19810
    amdgcn_image_atomic_sub_1d,250,19895
    amdgcn_image_atomic_sub_1darray,251,19977
    amdgcn_image_atomic_sub_2d,252,20064
    amdgcn_image_atomic_sub_2darray,253,20146
    amdgcn_image_atomic_sub_2darraymsaa,254,20233
    amdgcn_image_atomic_sub_2dmsaa,255,20324
    amdgcn_image_atomic_sub_3d,256,20410
    amdgcn_image_atomic_sub_cube,257,20492
    amdgcn_image_atomic_swap_1d,258,20576
    amdgcn_image_atomic_swap_1darray,259,20659
    amdgcn_image_atomic_swap_2d,260,20747
    amdgcn_image_atomic_swap_2darray,261,20830
    amdgcn_image_atomic_swap_2darraymsaa,262,20918
    amdgcn_image_atomic_swap_2dmsaa,263,21010
    amdgcn_image_atomic_swap_3d,264,21097
    amdgcn_image_atomic_swap_cube,265,21180
    amdgcn_image_atomic_umax_1d,266,21265
    amdgcn_image_atomic_umax_1darray,267,21348
    amdgcn_image_atomic_umax_2d,268,21436
    amdgcn_image_atomic_umax_2darray,269,21519
    amdgcn_image_atomic_umax_2darraymsaa,270,21607
    amdgcn_image_atomic_umax_2dmsaa,271,21699
    amdgcn_image_atomic_umax_3d,272,21786
    amdgcn_image_atomic_umax_cube,273,21869
    amdgcn_image_atomic_umin_1d,274,21954
    amdgcn_image_atomic_umin_1darray,275,22037
    amdgcn_image_atomic_umin_2d,276,22125
    amdgcn_image_atomic_umin_2darray,277,22208
    amdgcn_image_atomic_umin_2darraymsaa,278,22296
    amdgcn_image_atomic_umin_2dmsaa,279,22388
    amdgcn_image_atomic_umin_3d,280,22475
    amdgcn_image_atomic_umin_cube,281,22558
    amdgcn_image_atomic_xor_1d,282,22643
    amdgcn_image_atomic_xor_1darray,283,22725
    amdgcn_image_atomic_xor_2d,284,22812
    amdgcn_image_atomic_xor_2darray,285,22894
    amdgcn_image_atomic_xor_2darraymsaa,286,22981
    amdgcn_image_atomic_xor_2dmsaa,287,23072
    amdgcn_image_atomic_xor_3d,288,23158
    amdgcn_image_atomic_xor_cube,289,23240
    amdgcn_image_bvh_intersect_ray,290,23324
    amdgcn_image_gather4_2d,291,23410
    amdgcn_image_gather4_2darray,292,23489
    amdgcn_image_gather4_b_2d,293,23573
    amdgcn_image_gather4_b_2darray,294,23654
    amdgcn_image_gather4_b_cl_2d,295,23740
    amdgcn_image_gather4_b_cl_2darray,296,23824
    amdgcn_image_gather4_b_cl_cube,297,23913
    amdgcn_image_gather4_b_cl_o_2d,298,23999
    amdgcn_image_gather4_b_cl_o_2darray,299,24085
    amdgcn_image_gather4_b_cl_o_cube,300,24176
    amdgcn_image_gather4_b_cube,301,24264
    amdgcn_image_gather4_b_o_2d,302,24347
    amdgcn_image_gather4_b_o_2darray,303,24430
    amdgcn_image_gather4_b_o_cube,304,24518
    amdgcn_image_gather4_c_2d,305,24603
    amdgcn_image_gather4_c_2darray,306,24684
    amdgcn_image_gather4_c_b_2d,307,24770
    amdgcn_image_gather4_c_b_2darray,308,24853
    amdgcn_image_gather4_c_b_cl_2d,309,24941
    amdgcn_image_gather4_c_b_cl_2darray,310,25027
    amdgcn_image_gather4_c_b_cl_cube,311,25118
    amdgcn_image_gather4_c_b_cl_o_2d,312,25206
    amdgcn_image_gather4_c_b_cl_o_2darray,313,25294
    amdgcn_image_gather4_c_b_cl_o_cube,314,25387
    amdgcn_image_gather4_c_b_cube,315,25477
    amdgcn_image_gather4_c_b_o_2d,316,25562
    amdgcn_image_gather4_c_b_o_2darray,317,25647
    amdgcn_image_gather4_c_b_o_cube,318,25737
    amdgcn_image_gather4_c_cl_2d,319,25824
    amdgcn_image_gather4_c_cl_2darray,320,25908
    amdgcn_image_gather4_c_cl_cube,321,25997
    amdgcn_image_gather4_c_cl_o_2d,322,26083
    amdgcn_image_gather4_c_cl_o_2darray,323,26169
    amdgcn_image_gather4_c_cl_o_cube,324,26260
    amdgcn_image_gather4_c_cube,325,26348
    amdgcn_image_gather4_c_l_2d,326,26431
    amdgcn_image_gather4_c_l_2darray,327,26514
    amdgcn_image_gather4_c_l_cube,328,26602
    amdgcn_image_gather4_c_l_o_2d,329,26687
    amdgcn_image_gather4_c_l_o_2darray,330,26772
    amdgcn_image_gather4_c_l_o_cube,331,26862
    amdgcn_image_gather4_c_lz_2d,332,26949
    amdgcn_image_gather4_c_lz_2darray,333,27033
    amdgcn_image_gather4_c_lz_cube,334,27122
    amdgcn_image_gather4_c_lz_o_2d,335,27208
    amdgcn_image_gather4_c_lz_o_2darray,336,27294
    amdgcn_image_gather4_c_lz_o_cube,337,27385
    amdgcn_image_gather4_c_o_2d,338,27473
    amdgcn_image_gather4_c_o_2darray,339,27556
    amdgcn_image_gather4_c_o_cube,340,27644
    amdgcn_image_gather4_cl_2d,341,27729
    amdgcn_image_gather4_cl_2darray,342,27811
    amdgcn_image_gather4_cl_cube,343,27898
    amdgcn_image_gather4_cl_o_2d,344,27982
    amdgcn_image_gather4_cl_o_2darray,345,28066
    amdgcn_image_gather4_cl_o_cube,346,28155
    amdgcn_image_gather4_cube,347,28241
    amdgcn_image_gather4_l_2d,348,28322
    amdgcn_image_gather4_l_2darray,349,28403
    amdgcn_image_gather4_l_cube,350,28489
    amdgcn_image_gather4_l_o_2d,351,28572
    amdgcn_image_gather4_l_o_2darray,352,28655
    amdgcn_image_gather4_l_o_cube,353,28743
    amdgcn_image_gather4_lz_2d,354,28828
    amdgcn_image_gather4_lz_2darray,355,28910
    amdgcn_image_gather4_lz_cube,356,28997
    amdgcn_image_gather4_lz_o_2d,357,29081
    amdgcn_image_gather4_lz_o_2darray,358,29165
    amdgcn_image_gather4_lz_o_cube,359,29254
    amdgcn_image_gather4_o_2d,360,29340
    amdgcn_image_gather4_o_2darray,361,29421
    amdgcn_image_gather4_o_cube,362,29507
    amdgcn_image_getlod_1d,363,29590
    amdgcn_image_getlod_1darray,364,29668
    amdgcn_image_getlod_2d,365,29751
    amdgcn_image_getlod_2darray,366,29829
    amdgcn_image_getlod_3d,367,29912
    amdgcn_image_getlod_cube,368,29990
    amdgcn_image_getresinfo_1d,369,30070
    amdgcn_image_getresinfo_1darray,370,30152
    amdgcn_image_getresinfo_2d,371,30239
    amdgcn_image_getresinfo_2darray,372,30321
    amdgcn_image_getresinfo_2darraymsaa,373,30408
    amdgcn_image_getresinfo_2dmsaa,374,30499
    amdgcn_image_getresinfo_3d,375,30585
    amdgcn_image_getresinfo_cube,376,30667
    amdgcn_image_load_1d,377,30751
    amdgcn_image_load_1darray,378,30827
    amdgcn_image_load_2d,379,30908
    amdgcn_image_load_2darray,380,30984
    amdgcn_image_load_2darraymsaa,381,31065
    amdgcn_image_load_2dmsaa,382,31150
    amdgcn_image_load_3d,383,31230
    amdgcn_image_load_cube,384,31306
    amdgcn_image_load_mip_1d,385,31384
    amdgcn_image_load_mip_1darray,386,31464
    amdgcn_image_load_mip_2d,387,31549
    amdgcn_image_load_mip_2darray,388,31629
    amdgcn_image_load_mip_3d,389,31714
    amdgcn_image_load_mip_cube,390,31794
    amdgcn_image_msaa_load_2darraymsaa,391,31876
    amdgcn_image_msaa_load_2dmsaa,392,31966
    amdgcn_image_msaa_load_x_2darraymsaa,393,32051
    amdgcn_image_msaa_load_x_2dmsaa,394,32143
    amdgcn_image_sample_1d,395,32230
    amdgcn_image_sample_1darray,396,32308
    amdgcn_image_sample_2d,397,32391
    amdgcn_image_sample_2darray,398,32469
    amdgcn_image_sample_3d,399,32552
    amdgcn_image_sample_b_1d,400,32630
    amdgcn_image_sample_b_1darray,401,32710
    amdgcn_image_sample_b_2d,402,32795
    amdgcn_image_sample_b_2darray,403,32875
    amdgcn_image_sample_b_3d,404,32960
    amdgcn_image_sample_b_cl_1d,405,33040
    amdgcn_image_sample_b_cl_1darray,406,33123
    amdgcn_image_sample_b_cl_2d,407,33211
    amdgcn_image_sample_b_cl_2darray,408,33294
    amdgcn_image_sample_b_cl_3d,409,33382
    amdgcn_image_sample_b_cl_cube,410,33465
    amdgcn_image_sample_b_cl_o_1d,411,33550
    amdgcn_image_sample_b_cl_o_1darray,412,33635
    amdgcn_image_sample_b_cl_o_2d,413,33725
    amdgcn_image_sample_b_cl_o_2darray,414,33810
    amdgcn_image_sample_b_cl_o_3d,415,33900
    amdgcn_image_sample_b_cl_o_cube,416,33985
    amdgcn_image_sample_b_cube,417,34072
    amdgcn_image_sample_b_o_1d,418,34154
    amdgcn_image_sample_b_o_1darray,419,34236
    amdgcn_image_sample_b_o_2d,420,34323
    amdgcn_image_sample_b_o_2darray,421,34405
    amdgcn_image_sample_b_o_3d,422,34492
    amdgcn_image_sample_b_o_cube,423,34574
    amdgcn_image_sample_c_1d,424,34658
    amdgcn_image_sample_c_1darray,425,34738
    amdgcn_image_sample_c_2d,426,34823
    amdgcn_image_sample_c_2darray,427,34903
    amdgcn_image_sample_c_3d,428,34988
    amdgcn_image_sample_c_b_1d,429,35068
    amdgcn_image_sample_c_b_1darray,430,35150
    amdgcn_image_sample_c_b_2d,431,35237
    amdgcn_image_sample_c_b_2darray,432,35319
    amdgcn_image_sample_c_b_3d,433,35406
    amdgcn_image_sample_c_b_cl_1d,434,35488
    amdgcn_image_sample_c_b_cl_1darray,435,35573
    amdgcn_image_sample_c_b_cl_2d,436,35663
    amdgcn_image_sample_c_b_cl_2darray,437,35748
    amdgcn_image_sample_c_b_cl_3d,438,35838
    amdgcn_image_sample_c_b_cl_cube,439,35923
    amdgcn_image_sample_c_b_cl_o_1d,440,36010
    amdgcn_image_sample_c_b_cl_o_1darray,441,36097
    amdgcn_image_sample_c_b_cl_o_2d,442,36189
    amdgcn_image_sample_c_b_cl_o_2darray,443,36276
    amdgcn_image_sample_c_b_cl_o_3d,444,36368
    amdgcn_image_sample_c_b_cl_o_cube,445,36455
    amdgcn_image_sample_c_b_cube,446,36544
    amdgcn_image_sample_c_b_o_1d,447,36628
    amdgcn_image_sample_c_b_o_1darray,448,36712
    amdgcn_image_sample_c_b_o_2d,449,36801
    amdgcn_image_sample_c_b_o_2darray,450,36885
    amdgcn_image_sample_c_b_o_3d,451,36974
    amdgcn_image_sample_c_b_o_cube,452,37058
    amdgcn_image_sample_c_cd_1d,453,37144
    amdgcn_image_sample_c_cd_1darray,454,37227
    amdgcn_image_sample_c_cd_2d,455,37315
    amdgcn_image_sample_c_cd_2darray,456,37398
    amdgcn_image_sample_c_cd_3d,457,37486
    amdgcn_image_sample_c_cd_cl_1d,458,37569
    amdgcn_image_sample_c_cd_cl_1darray,459,37655
    amdgcn_image_sample_c_cd_cl_2d,460,37746
    amdgcn_image_sample_c_cd_cl_2darray,461,37832
    amdgcn_image_sample_c_cd_cl_3d,462,37923
    amdgcn_image_sample_c_cd_cl_cube,463,38009
    amdgcn_image_sample_c_cd_cl_o_1d,464,38097
    amdgcn_image_sample_c_cd_cl_o_1darray,465,38185
    amdgcn_image_sample_c_cd_cl_o_2d,466,38278
    amdgcn_image_sample_c_cd_cl_o_2darray,467,38366
    amdgcn_image_sample_c_cd_cl_o_3d,468,38459
    amdgcn_image_sample_c_cd_cl_o_cube,469,38547
    amdgcn_image_sample_c_cd_cube,470,38637
    amdgcn_image_sample_c_cd_o_1d,471,38722
    amdgcn_image_sample_c_cd_o_1darray,472,38807
    amdgcn_image_sample_c_cd_o_2d,473,38897
    amdgcn_image_sample_c_cd_o_2darray,474,38982
    amdgcn_image_sample_c_cd_o_3d,475,39072
    amdgcn_image_sample_c_cd_o_cube,476,39157
    amdgcn_image_sample_c_cl_1d,477,39244
    amdgcn_image_sample_c_cl_1darray,478,39327
    amdgcn_image_sample_c_cl_2d,479,39415
    amdgcn_image_sample_c_cl_2darray,480,39498
    amdgcn_image_sample_c_cl_3d,481,39586
    amdgcn_image_sample_c_cl_cube,482,39669
    amdgcn_image_sample_c_cl_o_1d,483,39754
    amdgcn_image_sample_c_cl_o_1darray,484,39839
    amdgcn_image_sample_c_cl_o_2d,485,39929
    amdgcn_image_sample_c_cl_o_2darray,486,40014
    amdgcn_image_sample_c_cl_o_3d,487,40104
    amdgcn_image_sample_c_cl_o_cube,488,40189
    amdgcn_image_sample_c_cube,489,40276
    amdgcn_image_sample_c_d_1d,490,40358
    amdgcn_image_sample_c_d_1darray,491,40440
    amdgcn_image_sample_c_d_2d,492,40527
    amdgcn_image_sample_c_d_2darray,493,40609
    amdgcn_image_sample_c_d_3d,494,40696
    amdgcn_image_sample_c_d_cl_1d,495,40778
    amdgcn_image_sample_c_d_cl_1darray,496,40863
    amdgcn_image_sample_c_d_cl_2d,497,40953
    amdgcn_image_sample_c_d_cl_2darray,498,41038
    amdgcn_image_sample_c_d_cl_3d,499,41128
    amdgcn_image_sample_c_d_cl_cube,500,41213
    amdgcn_image_sample_c_d_cl_o_1d,501,41300
    amdgcn_image_sample_c_d_cl_o_1darray,502,41387
    amdgcn_image_sample_c_d_cl_o_2d,503,41479
    amdgcn_image_sample_c_d_cl_o_2darray,504,41566
    amdgcn_image_sample_c_d_cl_o_3d,505,41658
    amdgcn_image_sample_c_d_cl_o_cube,506,41745
    amdgcn_image_sample_c_d_cube,507,41834
    amdgcn_image_sample_c_d_o_1d,508,41918
    amdgcn_image_sample_c_d_o_1darray,509,42002
    amdgcn_image_sample_c_d_o_2d,510,42091
    amdgcn_image_sample_c_d_o_2darray,511,42175
    amdgcn_image_sample_c_d_o_3d,512,42264
    amdgcn_image_sample_c_d_o_cube,513,42348
    amdgcn_image_sample_c_l_1d,514,42434
    amdgcn_image_sample_c_l_1darray,515,42516
    amdgcn_image_sample_c_l_2d,516,42603
    amdgcn_image_sample_c_l_2darray,517,42685
    amdgcn_image_sample_c_l_3d,518,42772
    amdgcn_image_sample_c_l_cube,519,42854
    amdgcn_image_sample_c_l_o_1d,520,42938
    amdgcn_image_sample_c_l_o_1darray,521,43022
    amdgcn_image_sample_c_l_o_2d,522,43111
    amdgcn_image_sample_c_l_o_2darray,523,43195
    amdgcn_image_sample_c_l_o_3d,524,43284
    amdgcn_image_sample_c_l_o_cube,525,43368
    amdgcn_image_sample_c_lz_1d,526,43454
    amdgcn_image_sample_c_lz_1darray,527,43537
    amdgcn_image_sample_c_lz_2d,528,43625
    amdgcn_image_sample_c_lz_2darray,529,43708
    amdgcn_image_sample_c_lz_3d,530,43796
    amdgcn_image_sample_c_lz_cube,531,43879
    amdgcn_image_sample_c_lz_o_1d,532,43964
    amdgcn_image_sample_c_lz_o_1darray,533,44049
    amdgcn_image_sample_c_lz_o_2d,534,44139
    amdgcn_image_sample_c_lz_o_2darray,535,44224
    amdgcn_image_sample_c_lz_o_3d,536,44314
    amdgcn_image_sample_c_lz_o_cube,537,44399
    amdgcn_image_sample_c_o_1d,538,44486
    amdgcn_image_sample_c_o_1darray,539,44568
    amdgcn_image_sample_c_o_2d,540,44655
    amdgcn_image_sample_c_o_2darray,541,44737
    amdgcn_image_sample_c_o_3d,542,44824
    amdgcn_image_sample_c_o_cube,543,44906
    amdgcn_image_sample_cd_1d,544,44990
    amdgcn_image_sample_cd_1darray,545,45071
    amdgcn_image_sample_cd_2d,546,45157
    amdgcn_image_sample_cd_2darray,547,45238
    amdgcn_image_sample_cd_3d,548,45324
    amdgcn_image_sample_cd_cl_1d,549,45405
    amdgcn_image_sample_cd_cl_1darray,550,45489
    amdgcn_image_sample_cd_cl_2d,551,45578
    amdgcn_image_sample_cd_cl_2darray,552,45662
    amdgcn_image_sample_cd_cl_3d,553,45751
    amdgcn_image_sample_cd_cl_cube,554,45835
    amdgcn_image_sample_cd_cl_o_1d,555,45921
    amdgcn_image_sample_cd_cl_o_1darray,556,46007
    amdgcn_image_sample_cd_cl_o_2d,557,46098
    amdgcn_image_sample_cd_cl_o_2darray,558,46184
    amdgcn_image_sample_cd_cl_o_3d,559,46275
    amdgcn_image_sample_cd_cl_o_cube,560,46361
    amdgcn_image_sample_cd_cube,561,46449
    amdgcn_image_sample_cd_o_1d,562,46532
    amdgcn_image_sample_cd_o_1darray,563,46615
    amdgcn_image_sample_cd_o_2d,564,46703
    amdgcn_image_sample_cd_o_2darray,565,46786
    amdgcn_image_sample_cd_o_3d,566,46874
    amdgcn_image_sample_cd_o_cube,567,46957
    amdgcn_image_sample_cl_1d,568,47042
    amdgcn_image_sample_cl_1darray,569,47123
    amdgcn_image_sample_cl_2d,570,47209
    amdgcn_image_sample_cl_2darray,571,47290
    amdgcn_image_sample_cl_3d,572,47376
    amdgcn_image_sample_cl_cube,573,47457
    amdgcn_image_sample_cl_o_1d,574,47540
    amdgcn_image_sample_cl_o_1darray,575,47623
    amdgcn_image_sample_cl_o_2d,576,47711
    amdgcn_image_sample_cl_o_2darray,577,47794
    amdgcn_image_sample_cl_o_3d,578,47882
    amdgcn_image_sample_cl_o_cube,579,47965
    amdgcn_image_sample_cube,580,48050
    amdgcn_image_sample_d_1d,581,48130
    amdgcn_image_sample_d_1darray,582,48210
    amdgcn_image_sample_d_2d,583,48295
    amdgcn_image_sample_d_2darray,584,48375
    amdgcn_image_sample_d_3d,585,48460
    amdgcn_image_sample_d_cl_1d,586,48540
    amdgcn_image_sample_d_cl_1darray,587,48623
    amdgcn_image_sample_d_cl_2d,588,48711
    amdgcn_image_sample_d_cl_2darray,589,48794
    amdgcn_image_sample_d_cl_3d,590,48882
    amdgcn_image_sample_d_cl_cube,591,48965
    amdgcn_image_sample_d_cl_o_1d,592,49050
    amdgcn_image_sample_d_cl_o_1darray,593,49135
    amdgcn_image_sample_d_cl_o_2d,594,49225
    amdgcn_image_sample_d_cl_o_2darray,595,49310
    amdgcn_image_sample_d_cl_o_3d,596,49400
    amdgcn_image_sample_d_cl_o_cube,597,49485
    amdgcn_image_sample_d_cube,598,49572
    amdgcn_image_sample_d_o_1d,599,49654
    amdgcn_image_sample_d_o_1darray,600,49736
    amdgcn_image_sample_d_o_2d,601,49823
    amdgcn_image_sample_d_o_2darray,602,49905
    amdgcn_image_sample_d_o_3d,603,49992
    amdgcn_image_sample_d_o_cube,604,50074
    amdgcn_image_sample_l_1d,605,50158
    amdgcn_image_sample_l_1darray,606,50238
    amdgcn_image_sample_l_2d,607,50323
    amdgcn_image_sample_l_2darray,608,50403
    amdgcn_image_sample_l_3d,609,50488
    amdgcn_image_sample_l_cube,610,50568
    amdgcn_image_sample_l_o_1d,611,50650
    amdgcn_image_sample_l_o_1darray,612,50732
    amdgcn_image_sample_l_o_2d,613,50819
    amdgcn_image_sample_l_o_2darray,614,50901
    amdgcn_image_sample_l_o_3d,615,50988
    amdgcn_image_sample_l_o_cube,616,51070
    amdgcn_image_sample_lz_1d,617,51154
    amdgcn_image_sample_lz_1darray,618,51235
    amdgcn_image_sample_lz_2d,619,51321
    amdgcn_image_sample_lz_2darray,620,51402
    amdgcn_image_sample_lz_3d,621,51488
    amdgcn_image_sample_lz_cube,622,51569
    amdgcn_image_sample_lz_o_1d,623,51652
    amdgcn_image_sample_lz_o_1darray,624,51735
    amdgcn_image_sample_lz_o_2d,625,51823
    amdgcn_image_sample_lz_o_2darray,626,51906
    amdgcn_image_sample_lz_o_3d,627,51994
    amdgcn_image_sample_lz_o_cube,628,52077
    amdgcn_image_sample_o_1d,629,52162
    amdgcn_image_sample_o_1darray,630,52242
    amdgcn_image_sample_o_2d,631,52327
    amdgcn_image_sample_o_2darray,632,52407
    amdgcn_image_sample_o_3d,633,52492
    amdgcn_image_sample_o_cube,634,52572
    amdgcn_image_store_1d,635,52654
    amdgcn_image_store_1darray,636,52731
    amdgcn_image_store_2d,637,52813
    amdgcn_image_store_2darray,638,52890
    amdgcn_image_store_2darraymsaa,639,52972
    amdgcn_image_store_2dmsaa,640,53058
    amdgcn_image_store_3d,641,53139
    amdgcn_image_store_cube,642,53216
    amdgcn_image_store_mip_1d,643,53295
    amdgcn_image_store_mip_1darray,644,53376
    amdgcn_image_store_mip_2d,645,53462
    amdgcn_image_store_mip_2darray,646,53543
    amdgcn_image_store_mip_3d,647,53629
    amdgcn_image_store_mip_cube,648,53710
    amdgcn_implicit_buffer_ptr,649,53793
    amdgcn_implicitarg_ptr,650,53875
    amdgcn_init_exec,651,53953
    amdgcn_init_exec_from_input,652,54025
    amdgcn_interp_inreg_p10,653,54108
    amdgcn_interp_inreg_p10_f16,654,54187
    amdgcn_interp_inreg_p2,655,54270
    amdgcn_interp_inreg_p2_f16,656,54348
    amdgcn_interp_mov,657,54430
    amdgcn_interp_p1,658,54503
    amdgcn_interp_p1_f16,659,54575
    amdgcn_interp_p2,660,54651
    amdgcn_interp_p2_f16,661,54723
    amdgcn_inverse_ballot,662,54799
    amdgcn_is_private,663,54876
    amdgcn_is_shared,664,54949
    amdgcn_kernarg_segment_ptr,665,55021
    amdgcn_kill,666,55103
    amdgcn_lds_direct_load,667,55170
    amdgcn_lds_kernel_id,668,55248
    amdgcn_lds_param_load,669,55324
    amdgcn_lerp,670,55401
    amdgcn_live_mask,671,55468
    amdgcn_log,672,55540
    amdgcn_log_clamp,673,55606
    amdgcn_loop,674,55678
    amdgcn_make_buffer_rsrc,675,55745
    amdgcn_mbcnt_hi,676,55824
    amdgcn_mbcnt_lo,677,55895
    amdgcn_mfma_f32_16x16x16bf16_1k,678,55966
    amdgcn_mfma_f32_16x16x16f16,679,56053
    amdgcn_mfma_f32_16x16x1f32,680,56136
    amdgcn_mfma_f32_16x16x2bf16,681,56218
    amdgcn_mfma_f32_16x16x32_bf8_bf8,682,56301
    amdgcn_mfma_f32_16x16x32_bf8_fp8,683,56389
    amdgcn_mfma_f32_16x16x32_fp8_bf8,684,56477
    amdgcn_mfma_f32_16x16x32_fp8_fp8,685,56565
    amdgcn_mfma_f32_16x16x4bf16_1k,686,56653
    amdgcn_mfma_f32_16x16x4f16,687,56739
    amdgcn_mfma_f32_16x16x4f32,688,56821
    amdgcn_mfma_f32_16x16x8_xf32,689,56903
    amdgcn_mfma_f32_16x16x8bf16,690,56987
    amdgcn_mfma_f32_32x32x16_bf8_bf8,691,57070
    amdgcn_mfma_f32_32x32x16_bf8_fp8,692,57158
    amdgcn_mfma_f32_32x32x16_fp8_bf8,693,57246
    amdgcn_mfma_f32_32x32x16_fp8_fp8,694,57334
    amdgcn_mfma_f32_32x32x1f32,695,57422
    amdgcn_mfma_f32_32x32x2bf16,696,57504
    amdgcn_mfma_f32_32x32x2f32,697,57587
    amdgcn_mfma_f32_32x32x4_xf32,698,57669
    amdgcn_mfma_f32_32x32x4bf16,699,57753
    amdgcn_mfma_f32_32x32x4bf16_1k,700,57836
    amdgcn_mfma_f32_32x32x4f16,701,57922
    amdgcn_mfma_f32_32x32x8bf16_1k,702,58004
    amdgcn_mfma_f32_32x32x8f16,703,58090
    amdgcn_mfma_f32_4x4x1f32,704,58172
    amdgcn_mfma_f32_4x4x2bf16,705,58252
    amdgcn_mfma_f32_4x4x4bf16_1k,706,58333
    amdgcn_mfma_f32_4x4x4f16,707,58417
    amdgcn_mfma_f64_16x16x4f64,708,58497
    amdgcn_mfma_f64_4x4x4f64,709,58579
    amdgcn_mfma_i32_16x16x16i8,710,58659
    amdgcn_mfma_i32_16x16x32_i8,711,58741
    amdgcn_mfma_i32_16x16x4i8,712,58824
    amdgcn_mfma_i32_32x32x16_i8,713,58905
    amdgcn_mfma_i32_32x32x4i8,714,58988
    amdgcn_mfma_i32_32x32x8i8,715,59069
    amdgcn_mfma_i32_4x4x4i8,716,59150
    amdgcn_mov_dpp,717,59229
    amdgcn_mov_dpp8,718,59299
    amdgcn_mqsad_pk_u16_u8,719,59370
    amdgcn_mqsad_u32_u8,720,59448
    amdgcn_msad_u8,721,59523
    amdgcn_mul_i24,722,59593
    amdgcn_mul_u24,723,59663
    amdgcn_mulhi_i24,724,59733
    amdgcn_mulhi_u24,725,59805
    amdgcn_perm,726,59877
    amdgcn_permlane16,727,59944
    amdgcn_permlane16_var,728,60017
    amdgcn_permlane64,729,60094
    amdgcn_permlanex16,730,60167
    amdgcn_permlanex16_var,731,60241
    amdgcn_ps_live,732,60319
    amdgcn_qsad_pk_u16_u8,733,60389
    amdgcn_queue_ptr,734,60466
    amdgcn_raw_buffer_atomic_add,735,60538
    amdgcn_raw_buffer_atomic_and,736,60622
    amdgcn_raw_buffer_atomic_cmpswap,737,60706
    amdgcn_raw_buffer_atomic_cond_sub_u32,738,60794
    amdgcn_raw_buffer_atomic_dec,739,60887
    amdgcn_raw_buffer_atomic_fadd,740,60971
    amdgcn_raw_buffer_atomic_fadd_v2bf16,741,61056
    amdgcn_raw_buffer_atomic_fmax,742,61148
    amdgcn_raw_buffer_atomic_fmin,743,61233
    amdgcn_raw_buffer_atomic_inc,744,61318
    amdgcn_raw_buffer_atomic_or,745,61402
    amdgcn_raw_buffer_atomic_smax,746,61485
    amdgcn_raw_buffer_atomic_smin,747,61570
    amdgcn_raw_buffer_atomic_sub,748,61655
    amdgcn_raw_buffer_atomic_swap,749,61739
    amdgcn_raw_buffer_atomic_umax,750,61824
    amdgcn_raw_buffer_atomic_umin,751,61909
    amdgcn_raw_buffer_atomic_xor,752,61994
    amdgcn_raw_buffer_load,753,62078
    amdgcn_raw_buffer_load_format,754,62156
    amdgcn_raw_buffer_load_lds,755,62241
    amdgcn_raw_buffer_store,756,62323
    amdgcn_raw_buffer_store_format,757,62402
    amdgcn_raw_ptr_buffer_atomic_add,758,62488
    amdgcn_raw_ptr_buffer_atomic_and,759,62576
    amdgcn_raw_ptr_buffer_atomic_cmpswap,760,62664
    amdgcn_raw_ptr_buffer_atomic_cond_sub_u32,761,62756
    amdgcn_raw_ptr_buffer_atomic_dec,762,62854
    amdgcn_raw_ptr_buffer_atomic_fadd,763,62942
    amdgcn_raw_ptr_buffer_atomic_fadd_v2bf16,764,63031
    amdgcn_raw_ptr_buffer_atomic_fmax,765,63127
    amdgcn_raw_ptr_buffer_atomic_fmin,766,63216
    amdgcn_raw_ptr_buffer_atomic_inc,767,63305
    amdgcn_raw_ptr_buffer_atomic_or,768,63393
    amdgcn_raw_ptr_buffer_atomic_smax,769,63480
    amdgcn_raw_ptr_buffer_atomic_smin,770,63569
    amdgcn_raw_ptr_buffer_atomic_sub,771,63658
    amdgcn_raw_ptr_buffer_atomic_swap,772,63746
    amdgcn_raw_ptr_buffer_atomic_umax,773,63835
    amdgcn_raw_ptr_buffer_atomic_umin,774,63924
    amdgcn_raw_ptr_buffer_atomic_xor,775,64013
    amdgcn_raw_ptr_buffer_load,776,64101
    amdgcn_raw_ptr_buffer_load_format,777,64183
    amdgcn_raw_ptr_buffer_load_lds,778,64272
    amdgcn_raw_ptr_buffer_store,779,64358
    amdgcn_raw_ptr_buffer_store_format,780,64441
    amdgcn_raw_ptr_tbuffer_load,781,64531
    amdgcn_raw_ptr_tbuffer_store,782,64614
    amdgcn_raw_tbuffer_load,783,64698
    amdgcn_raw_tbuffer_store,784,64777
    amdgcn_rcp,785,64857
    amdgcn_rcp_legacy,786,64923
    amdgcn_readfirstlane,787,64996
    amdgcn_readlane,788,65072
    amdgcn_reloc_constant,789,65143
    amdgcn_rsq,790,65220
    amdgcn_rsq_clamp,791,65286
    amdgcn_rsq_legacy,792,65358
    amdgcn_s_barrier,793,65431
    amdgcn_s_barrier_init,794,65503
    amdgcn_s_barrier_join,795,65580
    amdgcn_s_barrier_leave,796,65657
    amdgcn_s_barrier_signal,797,65735
    amdgcn_s_barrier_signal_isfirst,798,65814
    amdgcn_s_barrier_signal_isfirst_var,799,65901
    amdgcn_s_barrier_signal_var,800,65992
    amdgcn_s_barrier_wait,801,66075
    amdgcn_s_bitreplicate,802,66152
    amdgcn_s_buffer_load,803,66229
    amdgcn_s_dcache_inv,804,66305
    amdgcn_s_dcache_inv_vol,805,66380
    amdgcn_s_dcache_wb,806,66459
    amdgcn_s_dcache_wb_vol,807,66533
    amdgcn_s_decperflevel,808,66611
    amdgcn_s_get_barrier_state,809,66688
    amdgcn_s_get_waveid_in_workgroup,810,66770
    amdgcn_s_getpc,811,66858
    amdgcn_s_getreg,812,66928
    amdgcn_s_incperflevel,813,66999
    amdgcn_s_memrealtime,814,67076
    amdgcn_s_memtime,815,67152
    amdgcn_s_nop,816,67224
    amdgcn_s_quadmask,817,67292
    amdgcn_s_sendmsg,818,67365
    amdgcn_s_sendmsg_rtn,819,67437
    amdgcn_s_sendmsghalt,820,67513
    amdgcn_s_sethalt,821,67589
    amdgcn_s_setprio,822,67661
    amdgcn_s_setreg,823,67733
    amdgcn_s_sleep,824,67804
    amdgcn_s_sleep_var,825,67874
    amdgcn_s_ttracedata,826,67948
    amdgcn_s_ttracedata_imm,827,68023
    amdgcn_s_wait_bvhcnt,828,68102
    amdgcn_s_wait_dscnt,829,68178
    amdgcn_s_wait_event_export_ready,830,68253
    amdgcn_s_wait_expcnt,831,68341
    amdgcn_s_wait_kmcnt,832,68417
    amdgcn_s_wait_loadcnt,833,68492
    amdgcn_s_wait_samplecnt,834,68569
    amdgcn_s_wait_storecnt,835,68648
    amdgcn_s_waitcnt,836,68726
    amdgcn_s_wakeup_barrier,837,68798
    amdgcn_s_wqm,838,68877
    amdgcn_sad_hi_u8,839,68945
    amdgcn_sad_u16,840,69017
    amdgcn_sad_u8,841,69087
    amdgcn_sbfe,842,69156
    amdgcn_sched_barrier,843,69223
    amdgcn_sched_group_barrier,844,69299
    amdgcn_sdot2,845,69381
    amdgcn_sdot4,846,69449
    amdgcn_sdot8,847,69517
    amdgcn_set_inactive,848,69585
    amdgcn_set_inactive_chain_arg,849,69660
    amdgcn_sffbh,850,69745
    amdgcn_sin,851,69813
    amdgcn_smfmac_f32_16x16x32_bf16,852,69879
    amdgcn_smfmac_f32_16x16x32_f16,853,69966
    amdgcn_smfmac_f32_16x16x64_bf8_bf8,854,70052
    amdgcn_smfmac_f32_16x16x64_bf8_fp8,855,70142
    amdgcn_smfmac_f32_16x16x64_fp8_bf8,856,70232
    amdgcn_smfmac_f32_16x16x64_fp8_fp8,857,70322
    amdgcn_smfmac_f32_32x32x16_bf16,858,70412
    amdgcn_smfmac_f32_32x32x16_f16,859,70499
    amdgcn_smfmac_f32_32x32x32_bf8_bf8,860,70585
    amdgcn_smfmac_f32_32x32x32_bf8_fp8,861,70675
    amdgcn_smfmac_f32_32x32x32_fp8_bf8,862,70765
    amdgcn_smfmac_f32_32x32x32_fp8_fp8,863,70855
    amdgcn_smfmac_i32_16x16x64_i8,864,70945
    amdgcn_smfmac_i32_32x32x32_i8,865,71030
    amdgcn_softwqm,866,71115
    amdgcn_sqrt,867,71185
    amdgcn_strict_wqm,868,71252
    amdgcn_strict_wwm,869,71325
    amdgcn_struct_buffer_atomic_add,870,71398
    amdgcn_struct_buffer_atomic_and,871,71485
    amdgcn_struct_buffer_atomic_cmpswap,872,71572
    amdgcn_struct_buffer_atomic_cond_sub_u32,873,71663
    amdgcn_struct_buffer_atomic_dec,874,71759
    amdgcn_struct_buffer_atomic_fadd,875,71846
    amdgcn_struct_buffer_atomic_fadd_v2bf16,876,71934
    amdgcn_struct_buffer_atomic_fmax,877,72029
    amdgcn_struct_buffer_atomic_fmin,878,72117
    amdgcn_struct_buffer_atomic_inc,879,72205
    amdgcn_struct_buffer_atomic_or,880,72292
    amdgcn_struct_buffer_atomic_smax,881,72378
    amdgcn_struct_buffer_atomic_smin,882,72466
    amdgcn_struct_buffer_atomic_sub,883,72554
    amdgcn_struct_buffer_atomic_swap,884,72641
    amdgcn_struct_buffer_atomic_umax,885,72729
    amdgcn_struct_buffer_atomic_umin,886,72817
    amdgcn_struct_buffer_atomic_xor,887,72905
    amdgcn_struct_buffer_load,888,72992
    amdgcn_struct_buffer_load_format,889,73073
    amdgcn_struct_buffer_load_lds,890,73161
    amdgcn_struct_buffer_store,891,73246
    amdgcn_struct_buffer_store_format,892,73328
    amdgcn_struct_ptr_buffer_atomic_add,893,73417
    amdgcn_struct_ptr_buffer_atomic_and,894,73508
    amdgcn_struct_ptr_buffer_atomic_cmpswap,895,73599
    amdgcn_struct_ptr_buffer_atomic_cond_sub_u32,896,73694
    amdgcn_struct_ptr_buffer_atomic_dec,897,73798
    amdgcn_struct_ptr_buffer_atomic_fadd,898,73889
    amdgcn_struct_ptr_buffer_atomic_fadd_v2bf16,899,73981
    amdgcn_struct_ptr_buffer_atomic_fmax,900,74083
    amdgcn_struct_ptr_buffer_atomic_fmin,901,74175
    amdgcn_struct_ptr_buffer_atomic_inc,902,74267
    amdgcn_struct_ptr_buffer_atomic_or,903,74358
    amdgcn_struct_ptr_buffer_atomic_smax,904,74448
    amdgcn_struct_ptr_buffer_atomic_smin,905,74540
    amdgcn_struct_ptr_buffer_atomic_sub,906,74632
    amdgcn_struct_ptr_buffer_atomic_swap,907,74723
    amdgcn_struct_ptr_buffer_atomic_umax,908,74815
    amdgcn_struct_ptr_buffer_atomic_umin,909,74907
    amdgcn_struct_ptr_buffer_atomic_xor,910,74999
    amdgcn_struct_ptr_buffer_load,911,75090
    amdgcn_struct_ptr_buffer_load_format,912,75175
    amdgcn_struct_ptr_buffer_load_lds,913,75267
    amdgcn_struct_ptr_buffer_store,914,75356
    amdgcn_struct_ptr_buffer_store_format,915,75442
    amdgcn_struct_ptr_tbuffer_load,916,75535
    amdgcn_struct_ptr_tbuffer_store,917,75621
    amdgcn_struct_tbuffer_load,918,75708
    amdgcn_struct_tbuffer_store,919,75790
    amdgcn_sudot4,920,75873
    amdgcn_sudot8,921,75942
    amdgcn_swmmac_bf16_16x16x32_bf16,922,76011
    amdgcn_swmmac_f16_16x16x32_f16,923,76099
    amdgcn_swmmac_f32_16x16x32_bf16,924,76185
    amdgcn_swmmac_f32_16x16x32_bf8_bf8,925,76272
    amdgcn_swmmac_f32_16x16x32_bf8_fp8,926,76362
    amdgcn_swmmac_f32_16x16x32_f16,927,76452
    amdgcn_swmmac_f32_16x16x32_fp8_bf8,928,76538
    amdgcn_swmmac_f32_16x16x32_fp8_fp8,929,76628
    amdgcn_swmmac_i32_16x16x32_iu4,930,76718
    amdgcn_swmmac_i32_16x16x32_iu8,931,76804
    amdgcn_swmmac_i32_16x16x64_iu4,932,76890
    amdgcn_tbuffer_load,933,76976
    amdgcn_tbuffer_store,934,77051
    amdgcn_trig_preop,935,77127
    amdgcn_ubfe,936,77200
    amdgcn_udot2,937,77267
    amdgcn_udot4,938,77335
    amdgcn_udot8,939,77403
    amdgcn_unreachable,940,77471
    amdgcn_update_dpp,941,77545
    amdgcn_wave_barrier,942,77618
    amdgcn_wave_id,943,77693
    amdgcn_wave_reduce_umax,944,77763
    amdgcn_wave_reduce_umin,945,77842
    amdgcn_wavefrontsize,946,77921
    amdgcn_wmma_bf16_16x16x16_bf16,947,77997
    amdgcn_wmma_bf16_16x16x16_bf16_tied,948,78083
    amdgcn_wmma_f16_16x16x16_f16,949,78174
    amdgcn_wmma_f16_16x16x16_f16_tied,950,78258
    amdgcn_wmma_f32_16x16x16_bf16,951,78347
    amdgcn_wmma_f32_16x16x16_bf8_bf8,952,78432
    amdgcn_wmma_f32_16x16x16_bf8_fp8,953,78520
    amdgcn_wmma_f32_16x16x16_f16,954,78608
    amdgcn_wmma_f32_16x16x16_fp8_bf8,955,78692
    amdgcn_wmma_f32_16x16x16_fp8_fp8,956,78780
    amdgcn_wmma_i32_16x16x16_iu4,957,78868
    amdgcn_wmma_i32_16x16x16_iu8,958,78952
    amdgcn_wmma_i32_16x16x32_iu4,959,79036
    amdgcn_workgroup_id_x,960,79120
    amdgcn_workgroup_id_y,961,79197
    amdgcn_workgroup_id_z,962,79274
    amdgcn_workitem_id_x,963,79351
    amdgcn_workitem_id_y,964,79427
    amdgcn_workitem_id_z,965,79503
    amdgcn_wqm,966,79579
    amdgcn_wqm_demote,967,79645
    amdgcn_wqm_vote,968,79718
    amdgcn_writelane,969,79789
    amdgcn_wwm,970,79861

/usr/include/llvm/IR/IntrinsicsAMDGPU.td,8919
  bit IsImage 25,1019
let TargetPrefix 28,1047
defm int_r600_read_local_size : AMDGPUReadPreloadRegisterIntrinsic_xyz;49,1997
defm int_r600_read_tidig : AMDGPUReadPreloadRegisterIntrinsic_xyz;50,2069
  Intrinsic<Intrinsic53,2212
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic58,2403
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic65,2610
def int_r600_recipsqrt_ieee :  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic68,2739
def int_r600_recipsqrt_clamped : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic72,2869
def int_r600_cube : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic76,3001
def int_r600_store_stream_output : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic80,3114
let TargetPrefix 135,4908
  LLVMType Type 579,24392
  string Name 580,24414
  list<AMDGPUArg> ret 585,24580
  list<AMDGPUArg> ret 592,24869
                     list<string> coord_names,614,25743
                     list<string> coord_names, list<string> slice_names,614,25743
                     bit msaa 615,25816
let DA 639,26865
let DA 645,27234
def AMDGPUDims 649,27371
  string UpperCaseMod 659,27869
  string LowerCaseMod 660,27900
  list<AMDGPUArg> ExtraAddrArgs 663,27965
  bit Offset 664,28011
  bit Bias 665,28033
  bit ZCompare 666,28053
  bit Gradients 667,28077
  string LodOrClamp 671,28196
defset list<AMDGPUSampleVariant> AMDGPUSampleVariants 676,28361
  AMDGPUDimProps Dim 721,30366
  string OpMod 722,30394
  bit IsSample 725,30529
  bit IsAtomic 726,30553
  list<LLVMType> RetTypes 727,30577
  list<AMDGPUArg> DataArgs 728,30609
  list<AMDGPUArg> ExtraAddrArgs 729,30642
  bit Offset 730,30680
  bit Bias 731,30702
  bit ZCompare 732,30722
  bit Gradients 733,30746
  string LodClampMip 734,30771
  int NumRetAndDataAnyTypes 736,30799
  list<AMDGPUArg> AddrArgs 740,30938
  list<LLVMType> AddrTypes 748,31381
  list<AMDGPUArg> AddrDefaultArgs 749,31445
  list<AMDGPUArg> AddrA16Args 754,31704
class AMDGPUDimProfileCopy<AMDGPUDimProfileCopy761,31961
  let IsSample 762,32054
  let IsAtomic 763,32086
  let RetTypes 764,32118
  let DataArgs 765,32150
  let ExtraAddrArgs 766,32182
  let Offset 767,32224
  let Bias 768,32252
  let ZCompare 769,32276
  let Gradients 770,32308
  let LodClampMip 771,32342
                             AMDGPUSampleVariant sample> : AMDGPUDimProfile<AMDGPUDimProfile776,32475
                               list<LLVMType> retty,789,32928
                               list<AMDGPUArg> dataargs,790,32981
                               bit Mip 791,33038
                             list<AMDGPUArg> dataargs> : AMDGPUDimProfile<AMDGPUDimProfile799,33306
    : AMDGPUDimAtomicProfile<AMDGPUDimAtomicProfile807,33610
class AMDGPUDimGetResInfoProfile<AMDGPUDimGetResInfoProfile811,33703
  let RetTypes 813,33801
  let DataArgs 814,33838
  let AddrArgs 815,33859
  let LodClampMip 816,33912
class AMDGPUImageDimIntrinsicEval<AMDGPUImageDimIntrinsicEval820,34009
  int NumDataArgs 821,34066
  int NumDmaskArgs 822,34106
  int NumOffsetArgs 823,34146
  int NumBiasArgs 824,34190
  int NumZCompareArgs 825,34230
  int NumExtraAddrArgs 826,34278
  int NumVAddrArgs 827,34354
  int NumGradientArgs 828,34395
  int NumCoordArgs 829,34469
  int NumRSrcArgs 830,34571
  int NumSampArgs 831,34594
  int DmaskArgIndex 832,34638
  int VAddrArgIndex 833,34673
  int OffsetArgIndex 834,34730
  int BiasArgIndex 835,34768
  int ZCompareArgIndex 836,34825
  int GradientArgIndex 837,34883
  int CoordArgIndex 838,34947
  int LodArgIndex 839,35010
  int MipArgIndex 840,35069
  int RsrcArgIndex 841,35102
  int SampArgIndex 842,35158
  int UnormArgIndex 843,35212
  int TexFailCtrlArgIndex 844,35257
  int CachePolicyArgIndex 845,35318
                              list<IntrinsicProperty> props,850,35493
  AMDGPUDimProfile P 875,37056
  AMDGPUImageDimIntrinsic Intr 877,37084
  let TargetPrefix 879,37156
defset list<AMDGPUImageDimIntrinsic> AMDGPUImageDimIntrinsics 886,37310
defset list<AMDGPUImageDimIntrinsic> AMDGPUImageDimAtomicIntrinsics 1003,42504
def AMDGPUBufferRsrcTy : LLVMQualPointerType<LLVMQualPointerType1056,45325
let TargetPrefix 1058,45375
def int_amdgcn_exp : DefaultAttrsIntrinsic 1847,91585
def int_amdgcn_exp_row : DefaultAttrsIntrinsic 1862,92088
def int_amdgcn_exp_compr : DefaultAttrsIntrinsic 1876,92555
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1889,93020
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1893,93170
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1897,93316
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1901,93456
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1933,94539
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1938,94743
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1942,94904
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1945,95039
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1951,95305
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1961,95741
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1975,96490
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1982,96797
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic1992,97263
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2000,97612
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2010,98121
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2019,98587
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2028,99034
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2036,99402
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2043,99677
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2049,99902
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2056,100218
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2064,100572
def int_amdgcn_ps_live : DefaultAttrsIntrinsic 2070,100812
def int_amdgcn_live_mask : DefaultAttrsIntrinsic 2077,100988
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2083,101172
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2088,101328
  Intrinsic<Intrinsic2094,101534
def int_amdgcn_ubfe : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2098,101710
def int_amdgcn_sbfe : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2103,101860
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2110,102073
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2116,102256
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2122,102441
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2128,102630
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2134,102815
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2140,103014
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2146,103215
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2152,103410
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2158,103611
  Intrinsic<Intrinsic2163,103751
  Intrinsic<Intrinsic2168,103973
  Intrinsic<Intrinsic2173,104199
  Intrinsic<Intrinsic2177,104362
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2183,104615
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2188,104830
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic2194,105093
  foreach kind 3080,143750
defm int_amdgcn_mfma_f32_16x16x32 : AMDGPUMFp8MfmaIntrinsic<AMDGPUMFp8MfmaIntrinsic3084,143875
defm int_amdgcn_mfma_f32_32x32x16 : AMDGPUMFp8MfmaIntrinsic<AMDGPUMFp8MfmaIntrinsic3085,143951
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic3090,144227
def int_amdgcn_smfmac_f32_16x16x32_f16  : AMDGPUMSmfmacIntrinsic<AMDGPUMSmfmacIntrinsic3096,144445
def int_amdgcn_smfmac_f32_32x32x16_f16  : AMDGPUMSmfmacIntrinsic<AMDGPUMSmfmacIntrinsic3097,144557
def int_amdgcn_smfmac_f32_16x16x32_bf16 : AMDGPUMSmfmacIntrinsic<AMDGPUMSmfmacIntrinsic3098,144669
def int_amdgcn_smfmac_f32_32x32x16_bf16 : AMDGPUMSmfmacIntrinsic<AMDGPUMSmfmacIntrinsic3099,144781
def int_amdgcn_smfmac_i32_16x16x64_i8   : AMDGPUMSmfmacIntrinsic<AMDGPUMSmfmacIntrinsic3100,144893
def int_amdgcn_smfmac_i32_32x32x32_i8   : AMDGPUMSmfmacIntrinsic<AMDGPUMSmfmacIntrinsic3101,145005
  foreach kind 3107,145290
defm int_amdgcn_smfmac_f32_16x16x64 : AMDGPUMFp8SmfmacIntrinsic<AMDGPUMFp8SmfmacIntrinsic3111,145417
defm int_amdgcn_smfmac_f32_32x32x32 : AMDGPUMFp8SmfmacIntrinsic<AMDGPUMFp8SmfmacIntrinsic3112,145497
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic3117,145759
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic3123,146032
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic3130,146369
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic3136,146645
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic3143,147013
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic3149,147336
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic3156,147709
  DefaultAttrsIntrinsic<DefaultAttrsIntrinsic3162,148036
def int_amdgcn_if : Intrinsic<Intrinsic3170,148450
def int_amdgcn_else : Intrinsic<Intrinsic3174,148591
def int_amdgcn_if_break : Intrinsic<Intrinsic3178,148738
def int_amdgcn_loop : Intrinsic<Intrinsic3183,148904
def int_amdgcn_end_cf : Intrinsic<Intrinsic3187,149035
def int_amdgcn_unreachable : Intrinsic<Intrinsic3191,149205
def int_amdgcn_fdiv_fast : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic3195,149401

/usr/include/llvm/IR/IntrinsicsARM.h,15537
#define LLVM_IR_INTRINSIC_ARM_ENUMS_H10,606
enum ARMIntrinsics 14,684
    arm_cde_cx1 16,746
    arm_cde_cx1a,17,820
    arm_cde_cx1d,18,888
    arm_cde_cx1da,19,956
    arm_cde_cx2,20,1025
    arm_cde_cx2a,21,1092
    arm_cde_cx2d,22,1160
    arm_cde_cx2da,23,1228
    arm_cde_cx3,24,1297
    arm_cde_cx3a,25,1364
    arm_cde_cx3d,26,1432
    arm_cde_cx3da,27,1500
    arm_cde_vcx1,28,1569
    arm_cde_vcx1a,29,1637
    arm_cde_vcx1q,30,1706
    arm_cde_vcx1q_predicated,31,1775
    arm_cde_vcx1qa,32,1855
    arm_cde_vcx1qa_predicated,33,1925
    arm_cde_vcx2,34,2006
    arm_cde_vcx2a,35,2074
    arm_cde_vcx2q,36,2143
    arm_cde_vcx2q_predicated,37,2212
    arm_cde_vcx2qa,38,2292
    arm_cde_vcx2qa_predicated,39,2362
    arm_cde_vcx3,40,2443
    arm_cde_vcx3a,41,2511
    arm_cde_vcx3q,42,2580
    arm_cde_vcx3q_predicated,43,2649
    arm_cde_vcx3qa,44,2729
    arm_cde_vcx3qa_predicated,45,2799
    arm_cdp,46,2880
    arm_cdp2,47,2943
    arm_clrex,48,3007
    arm_cls,49,3072
    arm_cls64,50,3135
    arm_cmse_tt,51,3200
    arm_cmse_tta,52,3267
    arm_cmse_ttat,53,3335
    arm_cmse_ttt,54,3404
    arm_crc32b,55,3472
    arm_crc32cb,56,3538
    arm_crc32ch,57,3605
    arm_crc32cw,58,3672
    arm_crc32h,59,3739
    arm_crc32w,60,3805
    arm_dbg,61,3871
    arm_dmb,62,3934
    arm_dsb,63,3997
    arm_get_fpscr,64,4060
    arm_gnu_eabi_mcount,65,4129
    arm_hint,66,4204
    arm_isb,67,4268
    arm_ldaex,68,4331
    arm_ldaexd,69,4396
    arm_ldc,70,4462
    arm_ldc2,71,4525
    arm_ldc2l,72,4589
    arm_ldcl,73,4654
    arm_ldrex,74,4718
    arm_ldrexd,75,4783
    arm_mcr,76,4849
    arm_mcr2,77,4912
    arm_mcrr,78,4976
    arm_mcrr2,79,5040
    arm_mrc,80,5105
    arm_mrc2,81,5168
    arm_mrrc,82,5232
    arm_mrrc2,83,5296
    arm_mve_abd_predicated,84,5361
    arm_mve_abs_predicated,85,5439
    arm_mve_add_predicated,86,5517
    arm_mve_addlv,87,5595
    arm_mve_addlv_predicated,88,5664
    arm_mve_addv,89,5744
    arm_mve_addv_predicated,90,5812
    arm_mve_and_predicated,91,5891
    arm_mve_asrl,92,5969
    arm_mve_bic_predicated,93,6037
    arm_mve_cls_predicated,94,6115
    arm_mve_clz_predicated,95,6193
    arm_mve_eor_predicated,96,6271
    arm_mve_fma_predicated,97,6349
    arm_mve_hadd_predicated,98,6427
    arm_mve_hsub_predicated,99,6506
    arm_mve_lsll,100,6585
    arm_mve_max_predicated,101,6653
    arm_mve_maxav,102,6731
    arm_mve_maxav_predicated,103,6800
    arm_mve_maxnmav,104,6880
    arm_mve_maxnmav_predicated,105,6951
    arm_mve_maxnmv,106,7033
    arm_mve_maxnmv_predicated,107,7103
    arm_mve_maxv,108,7184
    arm_mve_maxv_predicated,109,7252
    arm_mve_min_predicated,110,7331
    arm_mve_minav,111,7409
    arm_mve_minav_predicated,112,7478
    arm_mve_minnmav,113,7558
    arm_mve_minnmav_predicated,114,7629
    arm_mve_minnmv,115,7711
    arm_mve_minnmv_predicated,116,7781
    arm_mve_minv,117,7862
    arm_mve_minv_predicated,118,7930
    arm_mve_mul_predicated,119,8009
    arm_mve_mulh_predicated,120,8087
    arm_mve_mull_int_predicated,121,8166
    arm_mve_mull_poly_predicated,122,8249
    arm_mve_mvn_predicated,123,8333
    arm_mve_neg_predicated,124,8411
    arm_mve_orn_predicated,125,8489
    arm_mve_orr_predicated,126,8567
    arm_mve_pred_i2v,127,8645
    arm_mve_pred_v2i,128,8717
    arm_mve_qabs_predicated,129,8789
    arm_mve_qadd_predicated,130,8868
    arm_mve_qdmulh_predicated,131,8947
    arm_mve_qneg_predicated,132,9028
    arm_mve_qrdmulh_predicated,133,9107
    arm_mve_qsub_predicated,134,9189
    arm_mve_rhadd_predicated,135,9268
    arm_mve_rmulh_predicated,136,9348
    arm_mve_shl_imm_predicated,137,9428
    arm_mve_shr_imm_predicated,138,9510
    arm_mve_sqrshr,139,9592
    arm_mve_sqrshrl,140,9662
    arm_mve_sqshl,141,9733
    arm_mve_sqshll,142,9802
    arm_mve_srshr,143,9872
    arm_mve_srshrl,144,9941
    arm_mve_sub_predicated,145,10011
    arm_mve_uqrshl,146,10089
    arm_mve_uqrshll,147,10159
    arm_mve_uqshl,148,10230
    arm_mve_uqshll,149,10299
    arm_mve_urshr,150,10369
    arm_mve_urshrl,151,10438
    arm_mve_vabav,152,10508
    arm_mve_vabav_predicated,153,10577
    arm_mve_vabd,154,10657
    arm_mve_vadc,155,10725
    arm_mve_vadc_predicated,156,10793
    arm_mve_vbrsr,157,10872
    arm_mve_vbrsr_predicated,158,10941
    arm_mve_vcaddq,159,11021
    arm_mve_vcaddq_predicated,160,11091
    arm_mve_vcls,161,11172
    arm_mve_vcmlaq,162,11240
    arm_mve_vcmlaq_predicated,163,11310
    arm_mve_vcmulq,164,11391
    arm_mve_vcmulq_predicated,165,11461
    arm_mve_vctp16,166,11542
    arm_mve_vctp32,167,11612
    arm_mve_vctp64,168,11682
    arm_mve_vctp8,169,11752
    arm_mve_vcvt_fix,170,11821
    arm_mve_vcvt_fix_predicated,171,11893
    arm_mve_vcvt_fp_int_predicated,172,11976
    arm_mve_vcvt_narrow,173,12062
    arm_mve_vcvt_narrow_predicated,174,12137
    arm_mve_vcvt_widen,175,12223
    arm_mve_vcvt_widen_predicated,176,12297
    arm_mve_vcvta,177,12382
    arm_mve_vcvta_predicated,178,12451
    arm_mve_vcvtm,179,12531
    arm_mve_vcvtm_predicated,180,12600
    arm_mve_vcvtn,181,12680
    arm_mve_vcvtn_predicated,182,12749
    arm_mve_vcvtp,183,12829
    arm_mve_vcvtp_predicated,184,12898
    arm_mve_vddup,185,12978
    arm_mve_vddup_predicated,186,13047
    arm_mve_vdwdup,187,13127
    arm_mve_vdwdup_predicated,188,13197
    arm_mve_vhadd,189,13278
    arm_mve_vhsub,190,13347
    arm_mve_vidup,191,13416
    arm_mve_vidup_predicated,192,13485
    arm_mve_viwdup,193,13565
    arm_mve_viwdup_predicated,194,13635
    arm_mve_vld2q,195,13716
    arm_mve_vld4q,196,13785
    arm_mve_vldr_gather_base,197,13854
    arm_mve_vldr_gather_base_predicated,198,13934
    arm_mve_vldr_gather_base_wb,199,14025
    arm_mve_vldr_gather_base_wb_predicated,200,14108
    arm_mve_vldr_gather_offset,201,14202
    arm_mve_vldr_gather_offset_predicated,202,14284
    arm_mve_vmaxa_predicated,203,14377
    arm_mve_vmaxnma_predicated,204,14457
    arm_mve_vmina_predicated,205,14539
    arm_mve_vminnma_predicated,206,14619
    arm_mve_vmla_n_predicated,207,14701
    arm_mve_vmlas_n_predicated,208,14782
    arm_mve_vmldava,209,14864
    arm_mve_vmldava_predicated,210,14935
    arm_mve_vmlldava,211,15017
    arm_mve_vmlldava_predicated,212,15089
    arm_mve_vmovl_predicated,213,15172
    arm_mve_vmovn_predicated,214,15252
    arm_mve_vmulh,215,15332
    arm_mve_vmull,216,15401
    arm_mve_vmull_poly,217,15470
    arm_mve_vqdmlad,218,15544
    arm_mve_vqdmlad_predicated,219,15615
    arm_mve_vqdmlah,220,15697
    arm_mve_vqdmlah_predicated,221,15768
    arm_mve_vqdmlash,222,15850
    arm_mve_vqdmlash_predicated,223,15922
    arm_mve_vqdmulh,224,16005
    arm_mve_vqdmull,225,16076
    arm_mve_vqdmull_predicated,226,16147
    arm_mve_vqmovn,227,16229
    arm_mve_vqmovn_predicated,228,16299
    arm_mve_vqrdmlah,229,16380
    arm_mve_vqrdmlah_predicated,230,16452
    arm_mve_vqrdmlash,231,16535
    arm_mve_vqrdmlash_predicated,232,16608
    arm_mve_vqrdmulh,233,16692
    arm_mve_vqshl_imm,234,16764
    arm_mve_vqshl_imm_predicated,235,16837
    arm_mve_vqshlu_imm,236,16921
    arm_mve_vqshlu_imm_predicated,237,16995
    arm_mve_vreinterpretq,238,17080
    arm_mve_vrev_predicated,239,17157
    arm_mve_vrhadd,240,17236
    arm_mve_vrinta_predicated,241,17306
    arm_mve_vrintm_predicated,242,17387
    arm_mve_vrintn,243,17468
    arm_mve_vrintn_predicated,244,17538
    arm_mve_vrintp_predicated,245,17619
    arm_mve_vrintx_predicated,246,17700
    arm_mve_vrintz_predicated,247,17781
    arm_mve_vrmlldavha,248,17862
    arm_mve_vrmlldavha_predicated,249,17936
    arm_mve_vrmulh,250,18021
    arm_mve_vrshr_imm,251,18091
    arm_mve_vrshr_imm_predicated,252,18164
    arm_mve_vsbc,253,18248
    arm_mve_vsbc_predicated,254,18316
    arm_mve_vshl_scalar,255,18395
    arm_mve_vshl_scalar_predicated,256,18470
    arm_mve_vshl_vector,257,18556
    arm_mve_vshl_vector_predicated,258,18631
    arm_mve_vshlc,259,18717
    arm_mve_vshlc_predicated,260,18786
    arm_mve_vshll_imm,261,18866
    arm_mve_vshll_imm_predicated,262,18939
    arm_mve_vshrn,263,19023
    arm_mve_vshrn_predicated,264,19092
    arm_mve_vsli,265,19172
    arm_mve_vsli_predicated,266,19240
    arm_mve_vsri,267,19319
    arm_mve_vsri_predicated,268,19387
    arm_mve_vst2q,269,19466
    arm_mve_vst4q,270,19535
    arm_mve_vstr_scatter_base,271,19604
    arm_mve_vstr_scatter_base_predicated,272,19685
    arm_mve_vstr_scatter_base_wb,273,19777
    arm_mve_vstr_scatter_base_wb_predicated,274,19861
    arm_mve_vstr_scatter_offset,275,19956
    arm_mve_vstr_scatter_offset_predicated,276,20039
    arm_neon_aesd,277,20133
    arm_neon_aese,278,20202
    arm_neon_aesimc,279,20271
    arm_neon_aesmc,280,20342
    arm_neon_bfdot,281,20412
    arm_neon_bfmlalb,282,20482
    arm_neon_bfmlalt,283,20554
    arm_neon_bfmmla,284,20626
    arm_neon_sdot,285,20697
    arm_neon_sha1c,286,20766
    arm_neon_sha1h,287,20836
    arm_neon_sha1m,288,20906
    arm_neon_sha1p,289,20976
    arm_neon_sha1su0,290,21046
    arm_neon_sha1su1,291,21118
    arm_neon_sha256h,292,21190
    arm_neon_sha256h2,293,21262
    arm_neon_sha256su0,294,21335
    arm_neon_sha256su1,295,21409
    arm_neon_smmla,296,21483
    arm_neon_udot,297,21553
    arm_neon_ummla,298,21622
    arm_neon_usdot,299,21692
    arm_neon_usmmla,300,21762
    arm_neon_vabds,301,21833
    arm_neon_vabdu,302,21903
    arm_neon_vabs,303,21973
    arm_neon_vacge,304,22042
    arm_neon_vacgt,305,22112
    arm_neon_vbsl,306,22182
    arm_neon_vcadd_rot270,307,22251
    arm_neon_vcadd_rot90,308,22328
    arm_neon_vcls,309,22404
    arm_neon_vcvtas,310,22473
    arm_neon_vcvtau,311,22544
    arm_neon_vcvtbfp2bf,312,22615
    arm_neon_vcvtfp2bf,313,22690
    arm_neon_vcvtfp2fxs,314,22764
    arm_neon_vcvtfp2fxu,315,22839
    arm_neon_vcvtfp2hf,316,22914
    arm_neon_vcvtfxs2fp,317,22988
    arm_neon_vcvtfxu2fp,318,23063
    arm_neon_vcvthf2fp,319,23138
    arm_neon_vcvtms,320,23212
    arm_neon_vcvtmu,321,23283
    arm_neon_vcvtns,322,23354
    arm_neon_vcvtnu,323,23425
    arm_neon_vcvtps,324,23496
    arm_neon_vcvtpu,325,23567
    arm_neon_vhadds,326,23638
    arm_neon_vhaddu,327,23709
    arm_neon_vhsubs,328,23780
    arm_neon_vhsubu,329,23851
    arm_neon_vld1,330,23922
    arm_neon_vld1x2,331,23991
    arm_neon_vld1x3,332,24062
    arm_neon_vld1x4,333,24133
    arm_neon_vld2,334,24204
    arm_neon_vld2dup,335,24273
    arm_neon_vld2lane,336,24345
    arm_neon_vld3,337,24418
    arm_neon_vld3dup,338,24487
    arm_neon_vld3lane,339,24559
    arm_neon_vld4,340,24632
    arm_neon_vld4dup,341,24701
    arm_neon_vld4lane,342,24773
    arm_neon_vmaxnm,343,24846
    arm_neon_vmaxs,344,24917
    arm_neon_vmaxu,345,24987
    arm_neon_vminnm,346,25057
    arm_neon_vmins,347,25128
    arm_neon_vminu,348,25198
    arm_neon_vmullp,349,25268
    arm_neon_vmulls,350,25339
    arm_neon_vmullu,351,25410
    arm_neon_vmulp,352,25481
    arm_neon_vpadals,353,25551
    arm_neon_vpadalu,354,25623
    arm_neon_vpadd,355,25695
    arm_neon_vpaddls,356,25765
    arm_neon_vpaddlu,357,25837
    arm_neon_vpmaxs,358,25909
    arm_neon_vpmaxu,359,25980
    arm_neon_vpmins,360,26051
    arm_neon_vpminu,361,26122
    arm_neon_vqabs,362,26193
    arm_neon_vqdmulh,363,26263
    arm_neon_vqdmull,364,26335
    arm_neon_vqmovns,365,26407
    arm_neon_vqmovnsu,366,26479
    arm_neon_vqmovnu,367,26552
    arm_neon_vqneg,368,26624
    arm_neon_vqrdmlah,369,26694
    arm_neon_vqrdmlsh,370,26767
    arm_neon_vqrdmulh,371,26840
    arm_neon_vqrshiftns,372,26913
    arm_neon_vqrshiftnsu,373,26988
    arm_neon_vqrshiftnu,374,27064
    arm_neon_vqrshifts,375,27139
    arm_neon_vqrshiftu,376,27213
    arm_neon_vqshiftns,377,27287
    arm_neon_vqshiftnsu,378,27361
    arm_neon_vqshiftnu,379,27436
    arm_neon_vqshifts,380,27510
    arm_neon_vqshiftsu,381,27583
    arm_neon_vqshiftu,382,27657
    arm_neon_vraddhn,383,27730
    arm_neon_vrecpe,384,27802
    arm_neon_vrecps,385,27873
    arm_neon_vrhadds,386,27944
    arm_neon_vrhaddu,387,28016
    arm_neon_vrinta,388,28088
    arm_neon_vrintm,389,28159
    arm_neon_vrintn,390,28230
    arm_neon_vrintp,391,28301
    arm_neon_vrintx,392,28372
    arm_neon_vrintz,393,28443
    arm_neon_vrshiftn,394,28514
    arm_neon_vrshifts,395,28587
    arm_neon_vrshiftu,396,28660
    arm_neon_vrsqrte,397,28733
    arm_neon_vrsqrts,398,28805
    arm_neon_vrsubhn,399,28877
    arm_neon_vshiftins,400,28949
    arm_neon_vshifts,401,29023
    arm_neon_vshiftu,402,29095
    arm_neon_vst1,403,29167
    arm_neon_vst1x2,404,29236
    arm_neon_vst1x3,405,29307
    arm_neon_vst1x4,406,29378
    arm_neon_vst2,407,29449
    arm_neon_vst2lane,408,29518
    arm_neon_vst3,409,29591
    arm_neon_vst3lane,410,29660
    arm_neon_vst4,411,29733
    arm_neon_vst4lane,412,29802
    arm_neon_vtbl1,413,29875
    arm_neon_vtbl2,414,29945
    arm_neon_vtbl3,415,30015
    arm_neon_vtbl4,416,30085
    arm_neon_vtbx1,417,30155
    arm_neon_vtbx2,418,30225
    arm_neon_vtbx3,419,30295
    arm_neon_vtbx4,420,30365
    arm_qadd,421,30435
    arm_qadd16,422,30499
    arm_qadd8,423,30565
    arm_qasx,424,30630
    arm_qsax,425,30694
    arm_qsub,426,30758
    arm_qsub16,427,30822
    arm_qsub8,428,30888
    arm_sadd16,429,30953
    arm_sadd8,430,31019
    arm_sasx,431,31084
    arm_sel,432,31148
    arm_set_fpscr,433,31211
    arm_shadd16,434,31280
    arm_shadd8,435,31347
    arm_shasx,436,31413
    arm_shsax,437,31478
    arm_shsub16,438,31543
    arm_shsub8,439,31610
    arm_smlabb,440,31676
    arm_smlabt,441,31742
    arm_smlad,442,31808
    arm_smladx,443,31873
    arm_smlald,444,31939
    arm_smlaldx,445,32005
    arm_smlatb,446,32072
    arm_smlatt,447,32138
    arm_smlawb,448,32204
    arm_smlawt,449,32270
    arm_smlsd,450,32336
    arm_smlsdx,451,32401
    arm_smlsld,452,32467
    arm_smlsldx,453,32533
    arm_smuad,454,32600
    arm_smuadx,455,32665
    arm_smulbb,456,32731
    arm_smulbt,457,32797
    arm_smultb,458,32863
    arm_smultt,459,32929
    arm_smulwb,460,32995
    arm_smulwt,461,33061
    arm_smusd,462,33127
    arm_smusdx,463,33192
    arm_space,464,33258
    arm_ssat,465,33323
    arm_ssat16,466,33387
    arm_ssax,467,33453
    arm_ssub16,468,33517
    arm_ssub8,469,33583
    arm_stc,470,33648
    arm_stc2,471,33711
    arm_stc2l,472,33775
    arm_stcl,473,33840
    arm_stlex,474,33904
    arm_stlexd,475,33969
    arm_strex,476,34035
    arm_strexd,477,34100
    arm_sxtab16,478,34166
    arm_sxtb16,479,34233
    arm_uadd16,480,34299
    arm_uadd8,481,34365
    arm_uasx,482,34430
    arm_uhadd16,483,34494
    arm_uhadd8,484,34561
    arm_uhasx,485,34627
    arm_uhsax,486,34692
    arm_uhsub16,487,34757
    arm_uhsub8,488,34824
    arm_undefined,489,34890
    arm_uqadd16,490,34959
    arm_uqadd8,491,35026
    arm_uqasx,492,35092
    arm_uqsax,493,35157
    arm_uqsub16,494,35222
    arm_uqsub8,495,35289
    arm_usad8,496,35355
    arm_usada8,497,35420
    arm_usat,498,35486
    arm_usat16,499,35550
    arm_usax,500,35616
    arm_usub16,501,35680
    arm_usub8,502,35746
    arm_uxtab16,503,35811
    arm_uxtb16,504,35878
    arm_vcvtr,505,35944
    arm_vcvtru,506,36009

/usr/include/llvm/IR/IntrinsicsBPF.h,447
#define LLVM_IR_INTRINSIC_BPF_ENUMS_H10,606
enum BPFIntrinsics 14,684
    bpf_btf_type_id 16,746
    bpf_compare,17,824
    bpf_getelementptr_and_load,18,891
    bpf_getelementptr_and_store,19,973
    bpf_load_byte,20,1056
    bpf_load_half,21,1125
    bpf_load_word,22,1194
    bpf_passthrough,23,1263
    bpf_preserve_enum_value,24,1334
    bpf_preserve_field_info,25,1413
    bpf_preserve_type_info,26,1492
    bpf_pseudo,27,1570

/usr/include/llvm/IR/IntrinsicsBPF.td,25
let TargetPrefix 14,547

/usr/include/llvm/IR/IntrinsicsDirectX.h,227
#define LLVM_IR_INTRINSIC_DX_ENUMS_H10,605
enum DXIntrinsics 14,682
    dx_create_handle 16,743
    dx_flattened_thread_id_in_group,17,822
    dx_group_id,18,909
    dx_thread_id,19,976
    dx_thread_id_in_group,20,1044

/usr/include/llvm/IR/IntrinsicsHexagon.h,77039
#define LLVM_IR_INTRINSIC_HEXAGON_ENUMS_H10,610
enum HEXAGONIntrinsics 14,692
    hexagon_A2_abs 16,758
    hexagon_A2_absp,17,835
    hexagon_A2_abssat,18,906
    hexagon_A2_add,19,979
    hexagon_A2_addh_h16_hh,20,1049
    hexagon_A2_addh_h16_hl,21,1127
    hexagon_A2_addh_h16_lh,22,1205
    hexagon_A2_addh_h16_ll,23,1283
    hexagon_A2_addh_h16_sat_hh,24,1361
    hexagon_A2_addh_h16_sat_hl,25,1443
    hexagon_A2_addh_h16_sat_lh,26,1525
    hexagon_A2_addh_h16_sat_ll,27,1607
    hexagon_A2_addh_l16_hl,28,1689
    hexagon_A2_addh_l16_ll,29,1767
    hexagon_A2_addh_l16_sat_hl,30,1845
    hexagon_A2_addh_l16_sat_ll,31,1927
    hexagon_A2_addi,32,2009
    hexagon_A2_addp,33,2080
    hexagon_A2_addpsat,34,2151
    hexagon_A2_addsat,35,2225
    hexagon_A2_addsp,36,2298
    hexagon_A2_and,37,2370
    hexagon_A2_andir,38,2440
    hexagon_A2_andp,39,2512
    hexagon_A2_aslh,40,2583
    hexagon_A2_asrh,41,2654
    hexagon_A2_combine_hh,42,2725
    hexagon_A2_combine_hl,43,2802
    hexagon_A2_combine_lh,44,2879
    hexagon_A2_combine_ll,45,2956
    hexagon_A2_combineii,46,3033
    hexagon_A2_combinew,47,3109
    hexagon_A2_max,48,3184
    hexagon_A2_maxp,49,3254
    hexagon_A2_maxu,50,3325
    hexagon_A2_maxup,51,3396
    hexagon_A2_min,52,3468
    hexagon_A2_minp,53,3538
    hexagon_A2_minu,54,3609
    hexagon_A2_minup,55,3680
    hexagon_A2_neg,56,3752
    hexagon_A2_negp,57,3822
    hexagon_A2_negsat,58,3893
    hexagon_A2_not,59,3966
    hexagon_A2_notp,60,4036
    hexagon_A2_or,61,4107
    hexagon_A2_orir,62,4176
    hexagon_A2_orp,63,4247
    hexagon_A2_roundsat,64,4317
    hexagon_A2_sat,65,4392
    hexagon_A2_satb,66,4462
    hexagon_A2_sath,67,4533
    hexagon_A2_satub,68,4604
    hexagon_A2_satuh,69,4676
    hexagon_A2_sub,70,4748
    hexagon_A2_subh_h16_hh,71,4818
    hexagon_A2_subh_h16_hl,72,4896
    hexagon_A2_subh_h16_lh,73,4974
    hexagon_A2_subh_h16_ll,74,5052
    hexagon_A2_subh_h16_sat_hh,75,5130
    hexagon_A2_subh_h16_sat_hl,76,5212
    hexagon_A2_subh_h16_sat_lh,77,5294
    hexagon_A2_subh_h16_sat_ll,78,5376
    hexagon_A2_subh_l16_hl,79,5458
    hexagon_A2_subh_l16_ll,80,5536
    hexagon_A2_subh_l16_sat_hl,81,5614
    hexagon_A2_subh_l16_sat_ll,82,5696
    hexagon_A2_subp,83,5778
    hexagon_A2_subri,84,5849
    hexagon_A2_subsat,85,5921
    hexagon_A2_svaddh,86,5994
    hexagon_A2_svaddhs,87,6067
    hexagon_A2_svadduhs,88,6141
    hexagon_A2_svavgh,89,6216
    hexagon_A2_svavghs,90,6289
    hexagon_A2_svnavgh,91,6363
    hexagon_A2_svsubh,92,6437
    hexagon_A2_svsubhs,93,6510
    hexagon_A2_svsubuhs,94,6584
    hexagon_A2_swiz,95,6659
    hexagon_A2_sxtb,96,6730
    hexagon_A2_sxth,97,6801
    hexagon_A2_sxtw,98,6872
    hexagon_A2_tfr,99,6943
    hexagon_A2_tfrih,100,7013
    hexagon_A2_tfril,101,7085
    hexagon_A2_tfrp,102,7157
    hexagon_A2_tfrpi,103,7228
    hexagon_A2_tfrsi,104,7300
    hexagon_A2_vabsh,105,7372
    hexagon_A2_vabshsat,106,7444
    hexagon_A2_vabsw,107,7519
    hexagon_A2_vabswsat,108,7591
    hexagon_A2_vaddb_map,109,7666
    hexagon_A2_vaddh,110,7742
    hexagon_A2_vaddhs,111,7814
    hexagon_A2_vaddub,112,7887
    hexagon_A2_vaddubs,113,7960
    hexagon_A2_vadduhs,114,8034
    hexagon_A2_vaddw,115,8108
    hexagon_A2_vaddws,116,8180
    hexagon_A2_vavgh,117,8253
    hexagon_A2_vavghcr,118,8325
    hexagon_A2_vavghr,119,8399
    hexagon_A2_vavgub,120,8472
    hexagon_A2_vavgubr,121,8545
    hexagon_A2_vavguh,122,8619
    hexagon_A2_vavguhr,123,8692
    hexagon_A2_vavguw,124,8766
    hexagon_A2_vavguwr,125,8839
    hexagon_A2_vavgw,126,8913
    hexagon_A2_vavgwcr,127,8985
    hexagon_A2_vavgwr,128,9059
    hexagon_A2_vcmpbeq,129,9132
    hexagon_A2_vcmpbgtu,130,9206
    hexagon_A2_vcmpheq,131,9281
    hexagon_A2_vcmphgt,132,9355
    hexagon_A2_vcmphgtu,133,9429
    hexagon_A2_vcmpweq,134,9504
    hexagon_A2_vcmpwgt,135,9578
    hexagon_A2_vcmpwgtu,136,9652
    hexagon_A2_vconj,137,9727
    hexagon_A2_vmaxb,138,9799
    hexagon_A2_vmaxh,139,9871
    hexagon_A2_vmaxub,140,9943
    hexagon_A2_vmaxuh,141,10016
    hexagon_A2_vmaxuw,142,10089
    hexagon_A2_vmaxw,143,10162
    hexagon_A2_vminb,144,10234
    hexagon_A2_vminh,145,10306
    hexagon_A2_vminub,146,10378
    hexagon_A2_vminuh,147,10451
    hexagon_A2_vminuw,148,10524
    hexagon_A2_vminw,149,10597
    hexagon_A2_vnavgh,150,10669
    hexagon_A2_vnavghcr,151,10742
    hexagon_A2_vnavghr,152,10817
    hexagon_A2_vnavgw,153,10891
    hexagon_A2_vnavgwcr,154,10964
    hexagon_A2_vnavgwr,155,11039
    hexagon_A2_vraddub,156,11113
    hexagon_A2_vraddub_acc,157,11187
    hexagon_A2_vrsadub,158,11265
    hexagon_A2_vrsadub_acc,159,11339
    hexagon_A2_vsubb_map,160,11417
    hexagon_A2_vsubh,161,11493
    hexagon_A2_vsubhs,162,11565
    hexagon_A2_vsubub,163,11638
    hexagon_A2_vsububs,164,11711
    hexagon_A2_vsubuhs,165,11785
    hexagon_A2_vsubw,166,11859
    hexagon_A2_vsubws,167,11931
    hexagon_A2_xor,168,12004
    hexagon_A2_xorp,169,12074
    hexagon_A2_zxtb,170,12145
    hexagon_A2_zxth,171,12216
    hexagon_A4_andn,172,12287
    hexagon_A4_andnp,173,12358
    hexagon_A4_bitsplit,174,12430
    hexagon_A4_bitspliti,175,12505
    hexagon_A4_boundscheck,176,12581
    hexagon_A4_cmpbeq,177,12659
    hexagon_A4_cmpbeqi,178,12732
    hexagon_A4_cmpbgt,179,12806
    hexagon_A4_cmpbgti,180,12879
    hexagon_A4_cmpbgtu,181,12953
    hexagon_A4_cmpbgtui,182,13027
    hexagon_A4_cmpheq,183,13102
    hexagon_A4_cmpheqi,184,13175
    hexagon_A4_cmphgt,185,13249
    hexagon_A4_cmphgti,186,13322
    hexagon_A4_cmphgtu,187,13396
    hexagon_A4_cmphgtui,188,13470
    hexagon_A4_combineir,189,13545
    hexagon_A4_combineri,190,13621
    hexagon_A4_cround_ri,191,13697
    hexagon_A4_cround_rr,192,13773
    hexagon_A4_modwrapu,193,13849
    hexagon_A4_orn,194,13924
    hexagon_A4_ornp,195,13994
    hexagon_A4_rcmpeq,196,14065
    hexagon_A4_rcmpeqi,197,14138
    hexagon_A4_rcmpneq,198,14212
    hexagon_A4_rcmpneqi,199,14286
    hexagon_A4_round_ri,200,14361
    hexagon_A4_round_ri_sat,201,14436
    hexagon_A4_round_rr,202,14515
    hexagon_A4_round_rr_sat,203,14590
    hexagon_A4_tlbmatch,204,14669
    hexagon_A4_vcmpbeq_any,205,14744
    hexagon_A4_vcmpbeqi,206,14822
    hexagon_A4_vcmpbgt,207,14897
    hexagon_A4_vcmpbgti,208,14971
    hexagon_A4_vcmpbgtui,209,15046
    hexagon_A4_vcmpheqi,210,15122
    hexagon_A4_vcmphgti,211,15197
    hexagon_A4_vcmphgtui,212,15272
    hexagon_A4_vcmpweqi,213,15348
    hexagon_A4_vcmpwgti,214,15423
    hexagon_A4_vcmpwgtui,215,15498
    hexagon_A4_vrmaxh,216,15574
    hexagon_A4_vrmaxuh,217,15647
    hexagon_A4_vrmaxuw,218,15721
    hexagon_A4_vrmaxw,219,15795
    hexagon_A4_vrminh,220,15868
    hexagon_A4_vrminuh,221,15941
    hexagon_A4_vrminuw,222,16015
    hexagon_A4_vrminw,223,16089
    hexagon_A5_vaddhubs,224,16162
    hexagon_A6_vcmpbeq_notany,225,16237
    hexagon_A7_clip,226,16318
    hexagon_A7_croundd_ri,227,16389
    hexagon_A7_croundd_rr,228,16466
    hexagon_A7_vclip,229,16543
    hexagon_C2_all8,230,16615
    hexagon_C2_and,231,16686
    hexagon_C2_andn,232,16756
    hexagon_C2_any8,233,16827
    hexagon_C2_bitsclr,234,16898
    hexagon_C2_bitsclri,235,16972
    hexagon_C2_bitsset,236,17047
    hexagon_C2_cmpeq,237,17121
    hexagon_C2_cmpeqi,238,17193
    hexagon_C2_cmpeqp,239,17266
    hexagon_C2_cmpgei,240,17339
    hexagon_C2_cmpgeui,241,17412
    hexagon_C2_cmpgt,242,17486
    hexagon_C2_cmpgti,243,17558
    hexagon_C2_cmpgtp,244,17631
    hexagon_C2_cmpgtu,245,17704
    hexagon_C2_cmpgtui,246,17777
    hexagon_C2_cmpgtup,247,17851
    hexagon_C2_cmplt,248,17925
    hexagon_C2_cmpltu,249,17997
    hexagon_C2_mask,250,18070
    hexagon_C2_mux,251,18141
    hexagon_C2_muxii,252,18211
    hexagon_C2_muxir,253,18283
    hexagon_C2_muxri,254,18355
    hexagon_C2_not,255,18427
    hexagon_C2_or,256,18497
    hexagon_C2_orn,257,18566
    hexagon_C2_pxfer_map,258,18636
    hexagon_C2_tfrpr,259,18712
    hexagon_C2_tfrrp,260,18784
    hexagon_C2_vitpack,261,18856
    hexagon_C2_vmux,262,18930
    hexagon_C2_xor,263,19001
    hexagon_C4_and_and,264,19071
    hexagon_C4_and_andn,265,19145
    hexagon_C4_and_or,266,19220
    hexagon_C4_and_orn,267,19293
    hexagon_C4_cmplte,268,19367
    hexagon_C4_cmpltei,269,19440
    hexagon_C4_cmplteu,270,19514
    hexagon_C4_cmplteui,271,19588
    hexagon_C4_cmpneq,272,19663
    hexagon_C4_cmpneqi,273,19736
    hexagon_C4_fastcorner9,274,19810
    hexagon_C4_fastcorner9_not,275,19888
    hexagon_C4_nbitsclr,276,19970
    hexagon_C4_nbitsclri,277,20045
    hexagon_C4_nbitsset,278,20121
    hexagon_C4_or_and,279,20196
    hexagon_C4_or_andn,280,20269
    hexagon_C4_or_or,281,20343
    hexagon_C4_or_orn,282,20415
    hexagon_F2_conv_d2df,283,20488
    hexagon_F2_conv_d2sf,284,20564
    hexagon_F2_conv_df2d,285,20640
    hexagon_F2_conv_df2d_chop,286,20716
    hexagon_F2_conv_df2sf,287,20797
    hexagon_F2_conv_df2ud,288,20874
    hexagon_F2_conv_df2ud_chop,289,20951
    hexagon_F2_conv_df2uw,290,21033
    hexagon_F2_conv_df2uw_chop,291,21110
    hexagon_F2_conv_df2w,292,21192
    hexagon_F2_conv_df2w_chop,293,21268
    hexagon_F2_conv_sf2d,294,21349
    hexagon_F2_conv_sf2d_chop,295,21425
    hexagon_F2_conv_sf2df,296,21506
    hexagon_F2_conv_sf2ud,297,21583
    hexagon_F2_conv_sf2ud_chop,298,21660
    hexagon_F2_conv_sf2uw,299,21742
    hexagon_F2_conv_sf2uw_chop,300,21819
    hexagon_F2_conv_sf2w,301,21901
    hexagon_F2_conv_sf2w_chop,302,21977
    hexagon_F2_conv_ud2df,303,22058
    hexagon_F2_conv_ud2sf,304,22135
    hexagon_F2_conv_uw2df,305,22212
    hexagon_F2_conv_uw2sf,306,22289
    hexagon_F2_conv_w2df,307,22366
    hexagon_F2_conv_w2sf,308,22442
    hexagon_F2_dfadd,309,22518
    hexagon_F2_dfclass,310,22590
    hexagon_F2_dfcmpeq,311,22664
    hexagon_F2_dfcmpge,312,22738
    hexagon_F2_dfcmpgt,313,22812
    hexagon_F2_dfcmpuo,314,22886
    hexagon_F2_dfimm_n,315,22960
    hexagon_F2_dfimm_p,316,23034
    hexagon_F2_dfmax,317,23108
    hexagon_F2_dfmin,318,23180
    hexagon_F2_dfmpyfix,319,23252
    hexagon_F2_dfmpyhh,320,23327
    hexagon_F2_dfmpylh,321,23401
    hexagon_F2_dfmpyll,322,23475
    hexagon_F2_dfsub,323,23549
    hexagon_F2_sfadd,324,23621
    hexagon_F2_sfclass,325,23693
    hexagon_F2_sfcmpeq,326,23767
    hexagon_F2_sfcmpge,327,23841
    hexagon_F2_sfcmpgt,328,23915
    hexagon_F2_sfcmpuo,329,23989
    hexagon_F2_sffixupd,330,24063
    hexagon_F2_sffixupn,331,24138
    hexagon_F2_sffixupr,332,24213
    hexagon_F2_sffma,333,24288
    hexagon_F2_sffma_lib,334,24360
    hexagon_F2_sffma_sc,335,24436
    hexagon_F2_sffms,336,24511
    hexagon_F2_sffms_lib,337,24583
    hexagon_F2_sfimm_n,338,24659
    hexagon_F2_sfimm_p,339,24733
    hexagon_F2_sfmax,340,24807
    hexagon_F2_sfmin,341,24879
    hexagon_F2_sfmpy,342,24951
    hexagon_F2_sfsub,343,25023
    hexagon_L2_loadrb_pbr,344,25095
    hexagon_L2_loadrb_pci,345,25172
    hexagon_L2_loadrb_pcr,346,25249
    hexagon_L2_loadrd_pbr,347,25326
    hexagon_L2_loadrd_pci,348,25403
    hexagon_L2_loadrd_pcr,349,25480
    hexagon_L2_loadrh_pbr,350,25557
    hexagon_L2_loadrh_pci,351,25634
    hexagon_L2_loadrh_pcr,352,25711
    hexagon_L2_loadri_pbr,353,25788
    hexagon_L2_loadri_pci,354,25865
    hexagon_L2_loadri_pcr,355,25942
    hexagon_L2_loadrub_pbr,356,26019
    hexagon_L2_loadrub_pci,357,26097
    hexagon_L2_loadrub_pcr,358,26175
    hexagon_L2_loadruh_pbr,359,26253
    hexagon_L2_loadruh_pci,360,26331
    hexagon_L2_loadruh_pcr,361,26409
    hexagon_L2_loadw_locked,362,26487
    hexagon_L4_loadd_locked,363,26566
    hexagon_M2_acci,364,26645
    hexagon_M2_accii,365,26716
    hexagon_M2_cmaci_s0,366,26788
    hexagon_M2_cmacr_s0,367,26863
    hexagon_M2_cmacs_s0,368,26938
    hexagon_M2_cmacs_s1,369,27013
    hexagon_M2_cmacsc_s0,370,27088
    hexagon_M2_cmacsc_s1,371,27164
    hexagon_M2_cmpyi_s0,372,27240
    hexagon_M2_cmpyr_s0,373,27315
    hexagon_M2_cmpyrs_s0,374,27390
    hexagon_M2_cmpyrs_s1,375,27466
    hexagon_M2_cmpyrsc_s0,376,27542
    hexagon_M2_cmpyrsc_s1,377,27619
    hexagon_M2_cmpys_s0,378,27696
    hexagon_M2_cmpys_s1,379,27771
    hexagon_M2_cmpysc_s0,380,27846
    hexagon_M2_cmpysc_s1,381,27922
    hexagon_M2_cnacs_s0,382,27998
    hexagon_M2_cnacs_s1,383,28073
    hexagon_M2_cnacsc_s0,384,28148
    hexagon_M2_cnacsc_s1,385,28224
    hexagon_M2_dpmpyss_acc_s0,386,28300
    hexagon_M2_dpmpyss_nac_s0,387,28381
    hexagon_M2_dpmpyss_rnd_s0,388,28462
    hexagon_M2_dpmpyss_s0,389,28543
    hexagon_M2_dpmpyuu_acc_s0,390,28620
    hexagon_M2_dpmpyuu_nac_s0,391,28701
    hexagon_M2_dpmpyuu_s0,392,28782
    hexagon_M2_hmmpyh_rs1,393,28859
    hexagon_M2_hmmpyh_s1,394,28936
    hexagon_M2_hmmpyl_rs1,395,29012
    hexagon_M2_hmmpyl_s1,396,29089
    hexagon_M2_maci,397,29165
    hexagon_M2_macsin,398,29236
    hexagon_M2_macsip,399,29309
    hexagon_M2_mmachs_rs0,400,29382
    hexagon_M2_mmachs_rs1,401,29459
    hexagon_M2_mmachs_s0,402,29536
    hexagon_M2_mmachs_s1,403,29612
    hexagon_M2_mmacls_rs0,404,29688
    hexagon_M2_mmacls_rs1,405,29765
    hexagon_M2_mmacls_s0,406,29842
    hexagon_M2_mmacls_s1,407,29918
    hexagon_M2_mmacuhs_rs0,408,29994
    hexagon_M2_mmacuhs_rs1,409,30072
    hexagon_M2_mmacuhs_s0,410,30150
    hexagon_M2_mmacuhs_s1,411,30227
    hexagon_M2_mmaculs_rs0,412,30304
    hexagon_M2_mmaculs_rs1,413,30382
    hexagon_M2_mmaculs_s0,414,30460
    hexagon_M2_mmaculs_s1,415,30537
    hexagon_M2_mmpyh_rs0,416,30614
    hexagon_M2_mmpyh_rs1,417,30690
    hexagon_M2_mmpyh_s0,418,30766
    hexagon_M2_mmpyh_s1,419,30841
    hexagon_M2_mmpyl_rs0,420,30916
    hexagon_M2_mmpyl_rs1,421,30992
    hexagon_M2_mmpyl_s0,422,31068
    hexagon_M2_mmpyl_s1,423,31143
    hexagon_M2_mmpyuh_rs0,424,31218
    hexagon_M2_mmpyuh_rs1,425,31295
    hexagon_M2_mmpyuh_s0,426,31372
    hexagon_M2_mmpyuh_s1,427,31448
    hexagon_M2_mmpyul_rs0,428,31524
    hexagon_M2_mmpyul_rs1,429,31601
    hexagon_M2_mmpyul_s0,430,31678
    hexagon_M2_mmpyul_s1,431,31754
    hexagon_M2_mnaci,432,31830
    hexagon_M2_mpy_acc_hh_s0,433,31902
    hexagon_M2_mpy_acc_hh_s1,434,31982
    hexagon_M2_mpy_acc_hl_s0,435,32062
    hexagon_M2_mpy_acc_hl_s1,436,32142
    hexagon_M2_mpy_acc_lh_s0,437,32222
    hexagon_M2_mpy_acc_lh_s1,438,32302
    hexagon_M2_mpy_acc_ll_s0,439,32382
    hexagon_M2_mpy_acc_ll_s1,440,32462
    hexagon_M2_mpy_acc_sat_hh_s0,441,32542
    hexagon_M2_mpy_acc_sat_hh_s1,442,32626
    hexagon_M2_mpy_acc_sat_hl_s0,443,32710
    hexagon_M2_mpy_acc_sat_hl_s1,444,32794
    hexagon_M2_mpy_acc_sat_lh_s0,445,32878
    hexagon_M2_mpy_acc_sat_lh_s1,446,32962
    hexagon_M2_mpy_acc_sat_ll_s0,447,33046
    hexagon_M2_mpy_acc_sat_ll_s1,448,33130
    hexagon_M2_mpy_hh_s0,449,33214
    hexagon_M2_mpy_hh_s1,450,33290
    hexagon_M2_mpy_hl_s0,451,33366
    hexagon_M2_mpy_hl_s1,452,33442
    hexagon_M2_mpy_lh_s0,453,33518
    hexagon_M2_mpy_lh_s1,454,33594
    hexagon_M2_mpy_ll_s0,455,33670
    hexagon_M2_mpy_ll_s1,456,33746
    hexagon_M2_mpy_nac_hh_s0,457,33822
    hexagon_M2_mpy_nac_hh_s1,458,33902
    hexagon_M2_mpy_nac_hl_s0,459,33982
    hexagon_M2_mpy_nac_hl_s1,460,34062
    hexagon_M2_mpy_nac_lh_s0,461,34142
    hexagon_M2_mpy_nac_lh_s1,462,34222
    hexagon_M2_mpy_nac_ll_s0,463,34302
    hexagon_M2_mpy_nac_ll_s1,464,34382
    hexagon_M2_mpy_nac_sat_hh_s0,465,34462
    hexagon_M2_mpy_nac_sat_hh_s1,466,34546
    hexagon_M2_mpy_nac_sat_hl_s0,467,34630
    hexagon_M2_mpy_nac_sat_hl_s1,468,34714
    hexagon_M2_mpy_nac_sat_lh_s0,469,34798
    hexagon_M2_mpy_nac_sat_lh_s1,470,34882
    hexagon_M2_mpy_nac_sat_ll_s0,471,34966
    hexagon_M2_mpy_nac_sat_ll_s1,472,35050
    hexagon_M2_mpy_rnd_hh_s0,473,35134
    hexagon_M2_mpy_rnd_hh_s1,474,35214
    hexagon_M2_mpy_rnd_hl_s0,475,35294
    hexagon_M2_mpy_rnd_hl_s1,476,35374
    hexagon_M2_mpy_rnd_lh_s0,477,35454
    hexagon_M2_mpy_rnd_lh_s1,478,35534
    hexagon_M2_mpy_rnd_ll_s0,479,35614
    hexagon_M2_mpy_rnd_ll_s1,480,35694
    hexagon_M2_mpy_sat_hh_s0,481,35774
    hexagon_M2_mpy_sat_hh_s1,482,35854
    hexagon_M2_mpy_sat_hl_s0,483,35934
    hexagon_M2_mpy_sat_hl_s1,484,36014
    hexagon_M2_mpy_sat_lh_s0,485,36094
    hexagon_M2_mpy_sat_lh_s1,486,36174
    hexagon_M2_mpy_sat_ll_s0,487,36254
    hexagon_M2_mpy_sat_ll_s1,488,36334
    hexagon_M2_mpy_sat_rnd_hh_s0,489,36414
    hexagon_M2_mpy_sat_rnd_hh_s1,490,36498
    hexagon_M2_mpy_sat_rnd_hl_s0,491,36582
    hexagon_M2_mpy_sat_rnd_hl_s1,492,36666
    hexagon_M2_mpy_sat_rnd_lh_s0,493,36750
    hexagon_M2_mpy_sat_rnd_lh_s1,494,36834
    hexagon_M2_mpy_sat_rnd_ll_s0,495,36918
    hexagon_M2_mpy_sat_rnd_ll_s1,496,37002
    hexagon_M2_mpy_up,497,37086
    hexagon_M2_mpy_up_s1,498,37159
    hexagon_M2_mpy_up_s1_sat,499,37235
    hexagon_M2_mpyd_acc_hh_s0,500,37315
    hexagon_M2_mpyd_acc_hh_s1,501,37396
    hexagon_M2_mpyd_acc_hl_s0,502,37477
    hexagon_M2_mpyd_acc_hl_s1,503,37558
    hexagon_M2_mpyd_acc_lh_s0,504,37639
    hexagon_M2_mpyd_acc_lh_s1,505,37720
    hexagon_M2_mpyd_acc_ll_s0,506,37801
    hexagon_M2_mpyd_acc_ll_s1,507,37882
    hexagon_M2_mpyd_hh_s0,508,37963
    hexagon_M2_mpyd_hh_s1,509,38040
    hexagon_M2_mpyd_hl_s0,510,38117
    hexagon_M2_mpyd_hl_s1,511,38194
    hexagon_M2_mpyd_lh_s0,512,38271
    hexagon_M2_mpyd_lh_s1,513,38348
    hexagon_M2_mpyd_ll_s0,514,38425
    hexagon_M2_mpyd_ll_s1,515,38502
    hexagon_M2_mpyd_nac_hh_s0,516,38579
    hexagon_M2_mpyd_nac_hh_s1,517,38660
    hexagon_M2_mpyd_nac_hl_s0,518,38741
    hexagon_M2_mpyd_nac_hl_s1,519,38822
    hexagon_M2_mpyd_nac_lh_s0,520,38903
    hexagon_M2_mpyd_nac_lh_s1,521,38984
    hexagon_M2_mpyd_nac_ll_s0,522,39065
    hexagon_M2_mpyd_nac_ll_s1,523,39146
    hexagon_M2_mpyd_rnd_hh_s0,524,39227
    hexagon_M2_mpyd_rnd_hh_s1,525,39308
    hexagon_M2_mpyd_rnd_hl_s0,526,39389
    hexagon_M2_mpyd_rnd_hl_s1,527,39470
    hexagon_M2_mpyd_rnd_lh_s0,528,39551
    hexagon_M2_mpyd_rnd_lh_s1,529,39632
    hexagon_M2_mpyd_rnd_ll_s0,530,39713
    hexagon_M2_mpyd_rnd_ll_s1,531,39794
    hexagon_M2_mpyi,532,39875
    hexagon_M2_mpysmi,533,39946
    hexagon_M2_mpysu_up,534,40019
    hexagon_M2_mpyu_acc_hh_s0,535,40094
    hexagon_M2_mpyu_acc_hh_s1,536,40175
    hexagon_M2_mpyu_acc_hl_s0,537,40256
    hexagon_M2_mpyu_acc_hl_s1,538,40337
    hexagon_M2_mpyu_acc_lh_s0,539,40418
    hexagon_M2_mpyu_acc_lh_s1,540,40499
    hexagon_M2_mpyu_acc_ll_s0,541,40580
    hexagon_M2_mpyu_acc_ll_s1,542,40661
    hexagon_M2_mpyu_hh_s0,543,40742
    hexagon_M2_mpyu_hh_s1,544,40819
    hexagon_M2_mpyu_hl_s0,545,40896
    hexagon_M2_mpyu_hl_s1,546,40973
    hexagon_M2_mpyu_lh_s0,547,41050
    hexagon_M2_mpyu_lh_s1,548,41127
    hexagon_M2_mpyu_ll_s0,549,41204
    hexagon_M2_mpyu_ll_s1,550,41281
    hexagon_M2_mpyu_nac_hh_s0,551,41358
    hexagon_M2_mpyu_nac_hh_s1,552,41439
    hexagon_M2_mpyu_nac_hl_s0,553,41520
    hexagon_M2_mpyu_nac_hl_s1,554,41601
    hexagon_M2_mpyu_nac_lh_s0,555,41682
    hexagon_M2_mpyu_nac_lh_s1,556,41763
    hexagon_M2_mpyu_nac_ll_s0,557,41844
    hexagon_M2_mpyu_nac_ll_s1,558,41925
    hexagon_M2_mpyu_up,559,42006
    hexagon_M2_mpyud_acc_hh_s0,560,42080
    hexagon_M2_mpyud_acc_hh_s1,561,42162
    hexagon_M2_mpyud_acc_hl_s0,562,42244
    hexagon_M2_mpyud_acc_hl_s1,563,42326
    hexagon_M2_mpyud_acc_lh_s0,564,42408
    hexagon_M2_mpyud_acc_lh_s1,565,42490
    hexagon_M2_mpyud_acc_ll_s0,566,42572
    hexagon_M2_mpyud_acc_ll_s1,567,42654
    hexagon_M2_mpyud_hh_s0,568,42736
    hexagon_M2_mpyud_hh_s1,569,42814
    hexagon_M2_mpyud_hl_s0,570,42892
    hexagon_M2_mpyud_hl_s1,571,42970
    hexagon_M2_mpyud_lh_s0,572,43048
    hexagon_M2_mpyud_lh_s1,573,43126
    hexagon_M2_mpyud_ll_s0,574,43204
    hexagon_M2_mpyud_ll_s1,575,43282
    hexagon_M2_mpyud_nac_hh_s0,576,43360
    hexagon_M2_mpyud_nac_hh_s1,577,43442
    hexagon_M2_mpyud_nac_hl_s0,578,43524
    hexagon_M2_mpyud_nac_hl_s1,579,43606
    hexagon_M2_mpyud_nac_lh_s0,580,43688
    hexagon_M2_mpyud_nac_lh_s1,581,43770
    hexagon_M2_mpyud_nac_ll_s0,582,43852
    hexagon_M2_mpyud_nac_ll_s1,583,43934
    hexagon_M2_mpyui,584,44016
    hexagon_M2_nacci,585,44088
    hexagon_M2_naccii,586,44160
    hexagon_M2_subacc,587,44233
    hexagon_M2_vabsdiffh,588,44306
    hexagon_M2_vabsdiffw,589,44382
    hexagon_M2_vcmac_s0_sat_i,590,44458
    hexagon_M2_vcmac_s0_sat_r,591,44539
    hexagon_M2_vcmpy_s0_sat_i,592,44620
    hexagon_M2_vcmpy_s0_sat_r,593,44701
    hexagon_M2_vcmpy_s1_sat_i,594,44782
    hexagon_M2_vcmpy_s1_sat_r,595,44863
    hexagon_M2_vdmacs_s0,596,44944
    hexagon_M2_vdmacs_s1,597,45020
    hexagon_M2_vdmpyrs_s0,598,45096
    hexagon_M2_vdmpyrs_s1,599,45173
    hexagon_M2_vdmpys_s0,600,45250
    hexagon_M2_vdmpys_s1,601,45326
    hexagon_M2_vmac2,602,45402
    hexagon_M2_vmac2es,603,45474
    hexagon_M2_vmac2es_s0,604,45548
    hexagon_M2_vmac2es_s1,605,45625
    hexagon_M2_vmac2s_s0,606,45702
    hexagon_M2_vmac2s_s1,607,45778
    hexagon_M2_vmac2su_s0,608,45854
    hexagon_M2_vmac2su_s1,609,45931
    hexagon_M2_vmpy2es_s0,610,46008
    hexagon_M2_vmpy2es_s1,611,46085
    hexagon_M2_vmpy2s_s0,612,46162
    hexagon_M2_vmpy2s_s0pack,613,46238
    hexagon_M2_vmpy2s_s1,614,46318
    hexagon_M2_vmpy2s_s1pack,615,46394
    hexagon_M2_vmpy2su_s0,616,46474
    hexagon_M2_vmpy2su_s1,617,46551
    hexagon_M2_vraddh,618,46628
    hexagon_M2_vradduh,619,46701
    hexagon_M2_vrcmaci_s0,620,46775
    hexagon_M2_vrcmaci_s0c,621,46852
    hexagon_M2_vrcmacr_s0,622,46930
    hexagon_M2_vrcmacr_s0c,623,47007
    hexagon_M2_vrcmpyi_s0,624,47085
    hexagon_M2_vrcmpyi_s0c,625,47162
    hexagon_M2_vrcmpyr_s0,626,47240
    hexagon_M2_vrcmpyr_s0c,627,47317
    hexagon_M2_vrcmpys_acc_s1,628,47395
    hexagon_M2_vrcmpys_s1,629,47476
    hexagon_M2_vrcmpys_s1rp,630,47553
    hexagon_M2_vrmac_s0,631,47632
    hexagon_M2_vrmpy_s0,632,47707
    hexagon_M2_xor_xacc,633,47782
    hexagon_M4_and_and,634,47857
    hexagon_M4_and_andn,635,47931
    hexagon_M4_and_or,636,48006
    hexagon_M4_and_xor,637,48079
    hexagon_M4_cmpyi_wh,638,48153
    hexagon_M4_cmpyi_whc,639,48228
    hexagon_M4_cmpyr_wh,640,48304
    hexagon_M4_cmpyr_whc,641,48379
    hexagon_M4_mac_up_s1_sat,642,48455
    hexagon_M4_mpyri_addi,643,48535
    hexagon_M4_mpyri_addr,644,48612
    hexagon_M4_mpyri_addr_u2,645,48689
    hexagon_M4_mpyrr_addi,646,48769
    hexagon_M4_mpyrr_addr,647,48846
    hexagon_M4_nac_up_s1_sat,648,48923
    hexagon_M4_or_and,649,49003
    hexagon_M4_or_andn,650,49076
    hexagon_M4_or_or,651,49150
    hexagon_M4_or_xor,652,49222
    hexagon_M4_pmpyw,653,49295
    hexagon_M4_pmpyw_acc,654,49367
    hexagon_M4_vpmpyh,655,49443
    hexagon_M4_vpmpyh_acc,656,49516
    hexagon_M4_vrmpyeh_acc_s0,657,49593
    hexagon_M4_vrmpyeh_acc_s1,658,49674
    hexagon_M4_vrmpyeh_s0,659,49755
    hexagon_M4_vrmpyeh_s1,660,49832
    hexagon_M4_vrmpyoh_acc_s0,661,49909
    hexagon_M4_vrmpyoh_acc_s1,662,49990
    hexagon_M4_vrmpyoh_s0,663,50071
    hexagon_M4_vrmpyoh_s1,664,50148
    hexagon_M4_xor_and,665,50225
    hexagon_M4_xor_andn,666,50299
    hexagon_M4_xor_or,667,50374
    hexagon_M4_xor_xacc,668,50447
    hexagon_M5_vdmacbsu,669,50522
    hexagon_M5_vdmpybsu,670,50597
    hexagon_M5_vmacbsu,671,50672
    hexagon_M5_vmacbuu,672,50746
    hexagon_M5_vmpybsu,673,50820
    hexagon_M5_vmpybuu,674,50894
    hexagon_M5_vrmacbsu,675,50968
    hexagon_M5_vrmacbuu,676,51043
    hexagon_M5_vrmpybsu,677,51118
    hexagon_M5_vrmpybuu,678,51193
    hexagon_M6_vabsdiffb,679,51268
    hexagon_M6_vabsdiffub,680,51344
    hexagon_M7_dcmpyiw,681,51421
    hexagon_M7_dcmpyiw_acc,682,51495
    hexagon_M7_dcmpyiwc,683,51573
    hexagon_M7_dcmpyiwc_acc,684,51648
    hexagon_M7_dcmpyrw,685,51727
    hexagon_M7_dcmpyrw_acc,686,51801
    hexagon_M7_dcmpyrwc,687,51879
    hexagon_M7_dcmpyrwc_acc,688,51954
    hexagon_M7_vdmpy,689,52033
    hexagon_M7_vdmpy_acc,690,52105
    hexagon_M7_wcmpyiw,691,52181
    hexagon_M7_wcmpyiw_rnd,692,52255
    hexagon_M7_wcmpyiwc,693,52333
    hexagon_M7_wcmpyiwc_rnd,694,52408
    hexagon_M7_wcmpyrw,695,52487
    hexagon_M7_wcmpyrw_rnd,696,52561
    hexagon_M7_wcmpyrwc,697,52639
    hexagon_M7_wcmpyrwc_rnd,698,52714
    hexagon_S2_addasl_rrri,699,52793
    hexagon_S2_asl_i_p,700,52871
    hexagon_S2_asl_i_p_acc,701,52945
    hexagon_S2_asl_i_p_and,702,53023
    hexagon_S2_asl_i_p_nac,703,53101
    hexagon_S2_asl_i_p_or,704,53179
    hexagon_S2_asl_i_p_xacc,705,53256
    hexagon_S2_asl_i_r,706,53335
    hexagon_S2_asl_i_r_acc,707,53409
    hexagon_S2_asl_i_r_and,708,53487
    hexagon_S2_asl_i_r_nac,709,53565
    hexagon_S2_asl_i_r_or,710,53643
    hexagon_S2_asl_i_r_sat,711,53720
    hexagon_S2_asl_i_r_xacc,712,53798
    hexagon_S2_asl_i_vh,713,53877
    hexagon_S2_asl_i_vw,714,53952
    hexagon_S2_asl_r_p,715,54027
    hexagon_S2_asl_r_p_acc,716,54101
    hexagon_S2_asl_r_p_and,717,54179
    hexagon_S2_asl_r_p_nac,718,54257
    hexagon_S2_asl_r_p_or,719,54335
    hexagon_S2_asl_r_p_xor,720,54412
    hexagon_S2_asl_r_r,721,54490
    hexagon_S2_asl_r_r_acc,722,54564
    hexagon_S2_asl_r_r_and,723,54642
    hexagon_S2_asl_r_r_nac,724,54720
    hexagon_S2_asl_r_r_or,725,54798
    hexagon_S2_asl_r_r_sat,726,54875
    hexagon_S2_asl_r_vh,727,54953
    hexagon_S2_asl_r_vw,728,55028
    hexagon_S2_asr_i_p,729,55103
    hexagon_S2_asr_i_p_acc,730,55177
    hexagon_S2_asr_i_p_and,731,55255
    hexagon_S2_asr_i_p_nac,732,55333
    hexagon_S2_asr_i_p_or,733,55411
    hexagon_S2_asr_i_p_rnd,734,55488
    hexagon_S2_asr_i_p_rnd_goodsyntax,735,55566
    hexagon_S2_asr_i_r,736,55655
    hexagon_S2_asr_i_r_acc,737,55729
    hexagon_S2_asr_i_r_and,738,55807
    hexagon_S2_asr_i_r_nac,739,55885
    hexagon_S2_asr_i_r_or,740,55963
    hexagon_S2_asr_i_r_rnd,741,56040
    hexagon_S2_asr_i_r_rnd_goodsyntax,742,56118
    hexagon_S2_asr_i_svw_trun,743,56207
    hexagon_S2_asr_i_vh,744,56288
    hexagon_S2_asr_i_vw,745,56363
    hexagon_S2_asr_r_p,746,56438
    hexagon_S2_asr_r_p_acc,747,56512
    hexagon_S2_asr_r_p_and,748,56590
    hexagon_S2_asr_r_p_nac,749,56668
    hexagon_S2_asr_r_p_or,750,56746
    hexagon_S2_asr_r_p_xor,751,56823
    hexagon_S2_asr_r_r,752,56901
    hexagon_S2_asr_r_r_acc,753,56975
    hexagon_S2_asr_r_r_and,754,57053
    hexagon_S2_asr_r_r_nac,755,57131
    hexagon_S2_asr_r_r_or,756,57209
    hexagon_S2_asr_r_r_sat,757,57286
    hexagon_S2_asr_r_svw_trun,758,57364
    hexagon_S2_asr_r_vh,759,57445
    hexagon_S2_asr_r_vw,760,57520
    hexagon_S2_brev,761,57595
    hexagon_S2_brevp,762,57666
    hexagon_S2_cl0,763,57738
    hexagon_S2_cl0p,764,57808
    hexagon_S2_cl1,765,57879
    hexagon_S2_cl1p,766,57949
    hexagon_S2_clb,767,58020
    hexagon_S2_clbnorm,768,58090
    hexagon_S2_clbp,769,58164
    hexagon_S2_clrbit_i,770,58235
    hexagon_S2_clrbit_r,771,58310
    hexagon_S2_ct0,772,58385
    hexagon_S2_ct0p,773,58455
    hexagon_S2_ct1,774,58526
    hexagon_S2_ct1p,775,58596
    hexagon_S2_deinterleave,776,58667
    hexagon_S2_extractu,777,58746
    hexagon_S2_extractu_rp,778,58821
    hexagon_S2_extractup,779,58899
    hexagon_S2_extractup_rp,780,58975
    hexagon_S2_insert,781,59054
    hexagon_S2_insert_rp,782,59127
    hexagon_S2_insertp,783,59203
    hexagon_S2_insertp_rp,784,59277
    hexagon_S2_interleave,785,59354
    hexagon_S2_lfsp,786,59431
    hexagon_S2_lsl_r_p,787,59502
    hexagon_S2_lsl_r_p_acc,788,59576
    hexagon_S2_lsl_r_p_and,789,59654
    hexagon_S2_lsl_r_p_nac,790,59732
    hexagon_S2_lsl_r_p_or,791,59810
    hexagon_S2_lsl_r_p_xor,792,59887
    hexagon_S2_lsl_r_r,793,59965
    hexagon_S2_lsl_r_r_acc,794,60039
    hexagon_S2_lsl_r_r_and,795,60117
    hexagon_S2_lsl_r_r_nac,796,60195
    hexagon_S2_lsl_r_r_or,797,60273
    hexagon_S2_lsl_r_vh,798,60350
    hexagon_S2_lsl_r_vw,799,60425
    hexagon_S2_lsr_i_p,800,60500
    hexagon_S2_lsr_i_p_acc,801,60574
    hexagon_S2_lsr_i_p_and,802,60652
    hexagon_S2_lsr_i_p_nac,803,60730
    hexagon_S2_lsr_i_p_or,804,60808
    hexagon_S2_lsr_i_p_xacc,805,60885
    hexagon_S2_lsr_i_r,806,60964
    hexagon_S2_lsr_i_r_acc,807,61038
    hexagon_S2_lsr_i_r_and,808,61116
    hexagon_S2_lsr_i_r_nac,809,61194
    hexagon_S2_lsr_i_r_or,810,61272
    hexagon_S2_lsr_i_r_xacc,811,61349
    hexagon_S2_lsr_i_vh,812,61428
    hexagon_S2_lsr_i_vw,813,61503
    hexagon_S2_lsr_r_p,814,61578
    hexagon_S2_lsr_r_p_acc,815,61652
    hexagon_S2_lsr_r_p_and,816,61730
    hexagon_S2_lsr_r_p_nac,817,61808
    hexagon_S2_lsr_r_p_or,818,61886
    hexagon_S2_lsr_r_p_xor,819,61963
    hexagon_S2_lsr_r_r,820,62041
    hexagon_S2_lsr_r_r_acc,821,62115
    hexagon_S2_lsr_r_r_and,822,62193
    hexagon_S2_lsr_r_r_nac,823,62271
    hexagon_S2_lsr_r_r_or,824,62349
    hexagon_S2_lsr_r_vh,825,62426
    hexagon_S2_lsr_r_vw,826,62501
    hexagon_S2_mask,827,62576
    hexagon_S2_packhl,828,62647
    hexagon_S2_parityp,829,62720
    hexagon_S2_setbit_i,830,62794
    hexagon_S2_setbit_r,831,62869
    hexagon_S2_shuffeb,832,62944
    hexagon_S2_shuffeh,833,63018
    hexagon_S2_shuffob,834,63092
    hexagon_S2_shuffoh,835,63166
    hexagon_S2_storerb_pbr,836,63240
    hexagon_S2_storerb_pci,837,63318
    hexagon_S2_storerb_pcr,838,63396
    hexagon_S2_storerd_pbr,839,63474
    hexagon_S2_storerd_pci,840,63552
    hexagon_S2_storerd_pcr,841,63630
    hexagon_S2_storerf_pbr,842,63708
    hexagon_S2_storerf_pci,843,63786
    hexagon_S2_storerf_pcr,844,63864
    hexagon_S2_storerh_pbr,845,63942
    hexagon_S2_storerh_pci,846,64020
    hexagon_S2_storerh_pcr,847,64098
    hexagon_S2_storeri_pbr,848,64176
    hexagon_S2_storeri_pci,849,64254
    hexagon_S2_storeri_pcr,850,64332
    hexagon_S2_storew_locked,851,64410
    hexagon_S2_svsathb,852,64490
    hexagon_S2_svsathub,853,64564
    hexagon_S2_tableidxb_goodsyntax,854,64639
    hexagon_S2_tableidxd_goodsyntax,855,64726
    hexagon_S2_tableidxh_goodsyntax,856,64813
    hexagon_S2_tableidxw_goodsyntax,857,64900
    hexagon_S2_togglebit_i,858,64987
    hexagon_S2_togglebit_r,859,65065
    hexagon_S2_tstbit_i,860,65143
    hexagon_S2_tstbit_r,861,65218
    hexagon_S2_valignib,862,65293
    hexagon_S2_valignrb,863,65368
    hexagon_S2_vcnegh,864,65443
    hexagon_S2_vcrotate,865,65516
    hexagon_S2_vrcnegh,866,65591
    hexagon_S2_vrndpackwh,867,65665
    hexagon_S2_vrndpackwhs,868,65742
    hexagon_S2_vsathb,869,65820
    hexagon_S2_vsathb_nopack,870,65893
    hexagon_S2_vsathub,871,65973
    hexagon_S2_vsathub_nopack,872,66047
    hexagon_S2_vsatwh,873,66128
    hexagon_S2_vsatwh_nopack,874,66201
    hexagon_S2_vsatwuh,875,66281
    hexagon_S2_vsatwuh_nopack,876,66355
    hexagon_S2_vsplatrb,877,66436
    hexagon_S2_vsplatrh,878,66511
    hexagon_S2_vspliceib,879,66586
    hexagon_S2_vsplicerb,880,66662
    hexagon_S2_vsxtbh,881,66738
    hexagon_S2_vsxthw,882,66811
    hexagon_S2_vtrunehb,883,66884
    hexagon_S2_vtrunewh,884,66959
    hexagon_S2_vtrunohb,885,67034
    hexagon_S2_vtrunowh,886,67109
    hexagon_S2_vzxtbh,887,67184
    hexagon_S2_vzxthw,888,67257
    hexagon_S4_addaddi,889,67330
    hexagon_S4_addi_asl_ri,890,67404
    hexagon_S4_addi_lsr_ri,891,67482
    hexagon_S4_andi_asl_ri,892,67560
    hexagon_S4_andi_lsr_ri,893,67638
    hexagon_S4_clbaddi,894,67716
    hexagon_S4_clbpaddi,895,67790
    hexagon_S4_clbpnorm,896,67865
    hexagon_S4_extract,897,67940
    hexagon_S4_extract_rp,898,68014
    hexagon_S4_extractp,899,68091
    hexagon_S4_extractp_rp,900,68166
    hexagon_S4_lsli,901,68244
    hexagon_S4_ntstbit_i,902,68315
    hexagon_S4_ntstbit_r,903,68391
    hexagon_S4_or_andi,904,68467
    hexagon_S4_or_andix,905,68541
    hexagon_S4_or_ori,906,68616
    hexagon_S4_ori_asl_ri,907,68689
    hexagon_S4_ori_lsr_ri,908,68766
    hexagon_S4_parity,909,68843
    hexagon_S4_stored_locked,910,68916
    hexagon_S4_subaddi,911,68996
    hexagon_S4_subi_asl_ri,912,69070
    hexagon_S4_subi_lsr_ri,913,69148
    hexagon_S4_vrcrotate,914,69226
    hexagon_S4_vrcrotate_acc,915,69302
    hexagon_S4_vxaddsubh,916,69382
    hexagon_S4_vxaddsubhr,917,69458
    hexagon_S4_vxaddsubw,918,69535
    hexagon_S4_vxsubaddh,919,69611
    hexagon_S4_vxsubaddhr,920,69687
    hexagon_S4_vxsubaddw,921,69764
    hexagon_S5_asrhub_rnd_sat_goodsyntax,922,69840
    hexagon_S5_asrhub_sat,923,69932
    hexagon_S5_popcountp,924,70009
    hexagon_S5_vasrhrnd_goodsyntax,925,70085
    hexagon_S6_rol_i_p,926,70171
    hexagon_S6_rol_i_p_acc,927,70245
    hexagon_S6_rol_i_p_and,928,70323
    hexagon_S6_rol_i_p_nac,929,70401
    hexagon_S6_rol_i_p_or,930,70479
    hexagon_S6_rol_i_p_xacc,931,70556
    hexagon_S6_rol_i_r,932,70635
    hexagon_S6_rol_i_r_acc,933,70709
    hexagon_S6_rol_i_r_and,934,70787
    hexagon_S6_rol_i_r_nac,935,70865
    hexagon_S6_rol_i_r_or,936,70943
    hexagon_S6_rol_i_r_xacc,937,71020
    hexagon_S6_vsplatrbp,938,71099
    hexagon_S6_vtrunehb_ppp,939,71175
    hexagon_S6_vtrunohb_ppp,940,71254
    hexagon_V6_extractw,941,71333
    hexagon_V6_extractw_128B,942,71408
    hexagon_V6_hi,943,71488
    hexagon_V6_hi_128B,944,71557
    hexagon_V6_lo,945,71631
    hexagon_V6_lo_128B,946,71700
    hexagon_V6_lvsplatb,947,71774
    hexagon_V6_lvsplatb_128B,948,71849
    hexagon_V6_lvsplath,949,71929
    hexagon_V6_lvsplath_128B,950,72004
    hexagon_V6_lvsplatw,951,72084
    hexagon_V6_lvsplatw_128B,952,72159
    hexagon_V6_pred_and,953,72239
    hexagon_V6_pred_and_128B,954,72314
    hexagon_V6_pred_and_n,955,72394
    hexagon_V6_pred_and_n_128B,956,72471
    hexagon_V6_pred_not,957,72553
    hexagon_V6_pred_not_128B,958,72628
    hexagon_V6_pred_or,959,72708
    hexagon_V6_pred_or_128B,960,72782
    hexagon_V6_pred_or_n,961,72861
    hexagon_V6_pred_or_n_128B,962,72937
    hexagon_V6_pred_scalar2,963,73018
    hexagon_V6_pred_scalar2_128B,964,73097
    hexagon_V6_pred_scalar2v2,965,73181
    hexagon_V6_pred_scalar2v2_128B,966,73262
    hexagon_V6_pred_typecast,967,73348
    hexagon_V6_pred_typecast_128B,968,73428
    hexagon_V6_pred_xor,969,73513
    hexagon_V6_pred_xor_128B,970,73588
    hexagon_V6_shuffeqh,971,73668
    hexagon_V6_shuffeqh_128B,972,73743
    hexagon_V6_shuffeqw,973,73823
    hexagon_V6_shuffeqw_128B,974,73898
    hexagon_V6_v6mpyhubs10,975,73978
    hexagon_V6_v6mpyhubs10_128B,976,74056
    hexagon_V6_v6mpyhubs10_vxx,977,74139
    hexagon_V6_v6mpyhubs10_vxx_128B,978,74221
    hexagon_V6_v6mpyvubs10,979,74308
    hexagon_V6_v6mpyvubs10_128B,980,74386
    hexagon_V6_v6mpyvubs10_vxx,981,74469
    hexagon_V6_v6mpyvubs10_vxx_128B,982,74551
    hexagon_V6_vL32b_npred_ai,983,74638
    hexagon_V6_vL32b_npred_ai_128B,984,74719
    hexagon_V6_vL32b_npred_pi,985,74805
    hexagon_V6_vL32b_npred_pi_128B,986,74886
    hexagon_V6_vL32b_npred_ppu,987,74972
    hexagon_V6_vL32b_npred_ppu_128B,988,75054
    hexagon_V6_vL32b_nt_npred_ai,989,75141
    hexagon_V6_vL32b_nt_npred_ai_128B,990,75225
    hexagon_V6_vL32b_nt_npred_pi,991,75314
    hexagon_V6_vL32b_nt_npred_pi_128B,992,75398
    hexagon_V6_vL32b_nt_npred_ppu,993,75487
    hexagon_V6_vL32b_nt_npred_ppu_128B,994,75572
    hexagon_V6_vL32b_nt_pred_ai,995,75662
    hexagon_V6_vL32b_nt_pred_ai_128B,996,75745
    hexagon_V6_vL32b_nt_pred_pi,997,75833
    hexagon_V6_vL32b_nt_pred_pi_128B,998,75916
    hexagon_V6_vL32b_nt_pred_ppu,999,76004
    hexagon_V6_vL32b_nt_pred_ppu_128B,1000,76088
    hexagon_V6_vL32b_pred_ai,1001,76177
    hexagon_V6_vL32b_pred_ai_128B,1002,76257
    hexagon_V6_vL32b_pred_pi,1003,76342
    hexagon_V6_vL32b_pred_pi_128B,1004,76422
    hexagon_V6_vL32b_pred_ppu,1005,76507
    hexagon_V6_vL32b_pred_ppu_128B,1006,76588
    hexagon_V6_vS32Ub_npred_ai,1007,76674
    hexagon_V6_vS32Ub_npred_ai_128B,1008,76756
    hexagon_V6_vS32Ub_npred_pi,1009,76843
    hexagon_V6_vS32Ub_npred_pi_128B,1010,76925
    hexagon_V6_vS32Ub_npred_ppu,1011,77012
    hexagon_V6_vS32Ub_npred_ppu_128B,1012,77095
    hexagon_V6_vS32Ub_pred_ai,1013,77183
    hexagon_V6_vS32Ub_pred_ai_128B,1014,77264
    hexagon_V6_vS32Ub_pred_pi,1015,77350
    hexagon_V6_vS32Ub_pred_pi_128B,1016,77431
    hexagon_V6_vS32Ub_pred_ppu,1017,77517
    hexagon_V6_vS32Ub_pred_ppu_128B,1018,77599
    hexagon_V6_vS32b_npred_ai,1019,77686
    hexagon_V6_vS32b_npred_ai_128B,1020,77767
    hexagon_V6_vS32b_npred_pi,1021,77853
    hexagon_V6_vS32b_npred_pi_128B,1022,77934
    hexagon_V6_vS32b_npred_ppu,1023,78020
    hexagon_V6_vS32b_npred_ppu_128B,1024,78102
    hexagon_V6_vS32b_nqpred_ai,1025,78189
    hexagon_V6_vS32b_nqpred_ai_128B,1026,78271
    hexagon_V6_vS32b_nt_npred_ai,1027,78358
    hexagon_V6_vS32b_nt_npred_ai_128B,1028,78442
    hexagon_V6_vS32b_nt_npred_pi,1029,78531
    hexagon_V6_vS32b_nt_npred_pi_128B,1030,78615
    hexagon_V6_vS32b_nt_npred_ppu,1031,78704
    hexagon_V6_vS32b_nt_npred_ppu_128B,1032,78789
    hexagon_V6_vS32b_nt_nqpred_ai,1033,78879
    hexagon_V6_vS32b_nt_nqpred_ai_128B,1034,78964
    hexagon_V6_vS32b_nt_pred_ai,1035,79054
    hexagon_V6_vS32b_nt_pred_ai_128B,1036,79137
    hexagon_V6_vS32b_nt_pred_pi,1037,79225
    hexagon_V6_vS32b_nt_pred_pi_128B,1038,79308
    hexagon_V6_vS32b_nt_pred_ppu,1039,79396
    hexagon_V6_vS32b_nt_pred_ppu_128B,1040,79480
    hexagon_V6_vS32b_nt_qpred_ai,1041,79569
    hexagon_V6_vS32b_nt_qpred_ai_128B,1042,79653
    hexagon_V6_vS32b_pred_ai,1043,79742
    hexagon_V6_vS32b_pred_ai_128B,1044,79822
    hexagon_V6_vS32b_pred_pi,1045,79907
    hexagon_V6_vS32b_pred_pi_128B,1046,79987
    hexagon_V6_vS32b_pred_ppu,1047,80072
    hexagon_V6_vS32b_pred_ppu_128B,1048,80153
    hexagon_V6_vS32b_qpred_ai,1049,80239
    hexagon_V6_vS32b_qpred_ai_128B,1050,80320
    hexagon_V6_vabs_hf,1051,80406
    hexagon_V6_vabs_hf_128B,1052,80480
    hexagon_V6_vabs_sf,1053,80559
    hexagon_V6_vabs_sf_128B,1054,80633
    hexagon_V6_vabsb,1055,80712
    hexagon_V6_vabsb_128B,1056,80784
    hexagon_V6_vabsb_sat,1057,80861
    hexagon_V6_vabsb_sat_128B,1058,80937
    hexagon_V6_vabsdiffh,1059,81018
    hexagon_V6_vabsdiffh_128B,1060,81094
    hexagon_V6_vabsdiffub,1061,81175
    hexagon_V6_vabsdiffub_128B,1062,81252
    hexagon_V6_vabsdiffuh,1063,81334
    hexagon_V6_vabsdiffuh_128B,1064,81411
    hexagon_V6_vabsdiffw,1065,81493
    hexagon_V6_vabsdiffw_128B,1066,81569
    hexagon_V6_vabsh,1067,81650
    hexagon_V6_vabsh_128B,1068,81722
    hexagon_V6_vabsh_sat,1069,81799
    hexagon_V6_vabsh_sat_128B,1070,81875
    hexagon_V6_vabsw,1071,81956
    hexagon_V6_vabsw_128B,1072,82028
    hexagon_V6_vabsw_sat,1073,82105
    hexagon_V6_vabsw_sat_128B,1074,82181
    hexagon_V6_vadd_hf,1075,82262
    hexagon_V6_vadd_hf_128B,1076,82336
    hexagon_V6_vadd_hf_hf,1077,82415
    hexagon_V6_vadd_hf_hf_128B,1078,82492
    hexagon_V6_vadd_qf16,1079,82574
    hexagon_V6_vadd_qf16_128B,1080,82650
    hexagon_V6_vadd_qf16_mix,1081,82731
    hexagon_V6_vadd_qf16_mix_128B,1082,82811
    hexagon_V6_vadd_qf32,1083,82896
    hexagon_V6_vadd_qf32_128B,1084,82972
    hexagon_V6_vadd_qf32_mix,1085,83053
    hexagon_V6_vadd_qf32_mix_128B,1086,83133
    hexagon_V6_vadd_sf,1087,83218
    hexagon_V6_vadd_sf_128B,1088,83292
    hexagon_V6_vadd_sf_bf,1089,83371
    hexagon_V6_vadd_sf_bf_128B,1090,83448
    hexagon_V6_vadd_sf_hf,1091,83530
    hexagon_V6_vadd_sf_hf_128B,1092,83607
    hexagon_V6_vadd_sf_sf,1093,83689
    hexagon_V6_vadd_sf_sf_128B,1094,83766
    hexagon_V6_vaddb,1095,83848
    hexagon_V6_vaddb_128B,1096,83920
    hexagon_V6_vaddb_dv,1097,83997
    hexagon_V6_vaddb_dv_128B,1098,84072
    hexagon_V6_vaddbnq,1099,84152
    hexagon_V6_vaddbnq_128B,1100,84226
    hexagon_V6_vaddbq,1101,84305
    hexagon_V6_vaddbq_128B,1102,84378
    hexagon_V6_vaddbsat,1103,84456
    hexagon_V6_vaddbsat_128B,1104,84531
    hexagon_V6_vaddbsat_dv,1105,84611
    hexagon_V6_vaddbsat_dv_128B,1106,84689
    hexagon_V6_vaddcarry,1107,84772
    hexagon_V6_vaddcarry_128B,1108,84848
    hexagon_V6_vaddcarryo,1109,84929
    hexagon_V6_vaddcarryo_128B,1110,85006
    hexagon_V6_vaddcarrysat,1111,85088
    hexagon_V6_vaddcarrysat_128B,1112,85167
    hexagon_V6_vaddclbh,1113,85251
    hexagon_V6_vaddclbh_128B,1114,85326
    hexagon_V6_vaddclbw,1115,85406
    hexagon_V6_vaddclbw_128B,1116,85481
    hexagon_V6_vaddh,1117,85561
    hexagon_V6_vaddh_128B,1118,85633
    hexagon_V6_vaddh_dv,1119,85710
    hexagon_V6_vaddh_dv_128B,1120,85785
    hexagon_V6_vaddhnq,1121,85865
    hexagon_V6_vaddhnq_128B,1122,85939
    hexagon_V6_vaddhq,1123,86018
    hexagon_V6_vaddhq_128B,1124,86091
    hexagon_V6_vaddhsat,1125,86169
    hexagon_V6_vaddhsat_128B,1126,86244
    hexagon_V6_vaddhsat_dv,1127,86324
    hexagon_V6_vaddhsat_dv_128B,1128,86402
    hexagon_V6_vaddhw,1129,86485
    hexagon_V6_vaddhw_128B,1130,86558
    hexagon_V6_vaddhw_acc,1131,86636
    hexagon_V6_vaddhw_acc_128B,1132,86713
    hexagon_V6_vaddubh,1133,86795
    hexagon_V6_vaddubh_128B,1134,86869
    hexagon_V6_vaddubh_acc,1135,86948
    hexagon_V6_vaddubh_acc_128B,1136,87026
    hexagon_V6_vaddubsat,1137,87109
    hexagon_V6_vaddubsat_128B,1138,87185
    hexagon_V6_vaddubsat_dv,1139,87266
    hexagon_V6_vaddubsat_dv_128B,1140,87345
    hexagon_V6_vaddububb_sat,1141,87429
    hexagon_V6_vaddububb_sat_128B,1142,87509
    hexagon_V6_vadduhsat,1143,87594
    hexagon_V6_vadduhsat_128B,1144,87670
    hexagon_V6_vadduhsat_dv,1145,87751
    hexagon_V6_vadduhsat_dv_128B,1146,87830
    hexagon_V6_vadduhw,1147,87914
    hexagon_V6_vadduhw_128B,1148,87988
    hexagon_V6_vadduhw_acc,1149,88067
    hexagon_V6_vadduhw_acc_128B,1150,88145
    hexagon_V6_vadduwsat,1151,88228
    hexagon_V6_vadduwsat_128B,1152,88304
    hexagon_V6_vadduwsat_dv,1153,88385
    hexagon_V6_vadduwsat_dv_128B,1154,88464
    hexagon_V6_vaddw,1155,88548
    hexagon_V6_vaddw_128B,1156,88620
    hexagon_V6_vaddw_dv,1157,88697
    hexagon_V6_vaddw_dv_128B,1158,88772
    hexagon_V6_vaddwnq,1159,88852
    hexagon_V6_vaddwnq_128B,1160,88926
    hexagon_V6_vaddwq,1161,89005
    hexagon_V6_vaddwq_128B,1162,89078
    hexagon_V6_vaddwsat,1163,89156
    hexagon_V6_vaddwsat_128B,1164,89231
    hexagon_V6_vaddwsat_dv,1165,89311
    hexagon_V6_vaddwsat_dv_128B,1166,89389
    hexagon_V6_valignb,1167,89472
    hexagon_V6_valignb_128B,1168,89546
    hexagon_V6_valignbi,1169,89625
    hexagon_V6_valignbi_128B,1170,89700
    hexagon_V6_vand,1171,89780
    hexagon_V6_vand_128B,1172,89851
    hexagon_V6_vandnqrt,1173,89927
    hexagon_V6_vandnqrt_128B,1174,90002
    hexagon_V6_vandnqrt_acc,1175,90082
    hexagon_V6_vandnqrt_acc_128B,1176,90161
    hexagon_V6_vandqrt,1177,90245
    hexagon_V6_vandqrt_128B,1178,90319
    hexagon_V6_vandqrt_acc,1179,90398
    hexagon_V6_vandqrt_acc_128B,1180,90476
    hexagon_V6_vandvnqv,1181,90559
    hexagon_V6_vandvnqv_128B,1182,90634
    hexagon_V6_vandvqv,1183,90714
    hexagon_V6_vandvqv_128B,1184,90788
    hexagon_V6_vandvrt,1185,90867
    hexagon_V6_vandvrt_128B,1186,90941
    hexagon_V6_vandvrt_acc,1187,91020
    hexagon_V6_vandvrt_acc_128B,1188,91098
    hexagon_V6_vaslh,1189,91181
    hexagon_V6_vaslh_128B,1190,91253
    hexagon_V6_vaslh_acc,1191,91330
    hexagon_V6_vaslh_acc_128B,1192,91406
    hexagon_V6_vaslhv,1193,91487
    hexagon_V6_vaslhv_128B,1194,91560
    hexagon_V6_vaslw,1195,91638
    hexagon_V6_vaslw_128B,1196,91710
    hexagon_V6_vaslw_acc,1197,91787
    hexagon_V6_vaslw_acc_128B,1198,91863
    hexagon_V6_vaslwv,1199,91944
    hexagon_V6_vaslwv_128B,1200,92017
    hexagon_V6_vasr_into,1201,92095
    hexagon_V6_vasr_into_128B,1202,92171
    hexagon_V6_vasrh,1203,92252
    hexagon_V6_vasrh_128B,1204,92324
    hexagon_V6_vasrh_acc,1205,92401
    hexagon_V6_vasrh_acc_128B,1206,92477
    hexagon_V6_vasrhbrndsat,1207,92558
    hexagon_V6_vasrhbrndsat_128B,1208,92637
    hexagon_V6_vasrhbsat,1209,92721
    hexagon_V6_vasrhbsat_128B,1210,92797
    hexagon_V6_vasrhubrndsat,1211,92878
    hexagon_V6_vasrhubrndsat_128B,1212,92958
    hexagon_V6_vasrhubsat,1213,93043
    hexagon_V6_vasrhubsat_128B,1214,93120
    hexagon_V6_vasrhv,1215,93202
    hexagon_V6_vasrhv_128B,1216,93275
    hexagon_V6_vasruhubrndsat,1217,93353
    hexagon_V6_vasruhubrndsat_128B,1218,93434
    hexagon_V6_vasruhubsat,1219,93520
    hexagon_V6_vasruhubsat_128B,1220,93598
    hexagon_V6_vasruwuhrndsat,1221,93681
    hexagon_V6_vasruwuhrndsat_128B,1222,93762
    hexagon_V6_vasruwuhsat,1223,93848
    hexagon_V6_vasruwuhsat_128B,1224,93926
    hexagon_V6_vasrvuhubrndsat,1225,94009
    hexagon_V6_vasrvuhubrndsat_128B,1226,94091
    hexagon_V6_vasrvuhubsat,1227,94178
    hexagon_V6_vasrvuhubsat_128B,1228,94257
    hexagon_V6_vasrvwuhrndsat,1229,94341
    hexagon_V6_vasrvwuhrndsat_128B,1230,94422
    hexagon_V6_vasrvwuhsat,1231,94508
    hexagon_V6_vasrvwuhsat_128B,1232,94586
    hexagon_V6_vasrw,1233,94669
    hexagon_V6_vasrw_128B,1234,94741
    hexagon_V6_vasrw_acc,1235,94818
    hexagon_V6_vasrw_acc_128B,1236,94894
    hexagon_V6_vasrwh,1237,94975
    hexagon_V6_vasrwh_128B,1238,95048
    hexagon_V6_vasrwhrndsat,1239,95126
    hexagon_V6_vasrwhrndsat_128B,1240,95205
    hexagon_V6_vasrwhsat,1241,95289
    hexagon_V6_vasrwhsat_128B,1242,95365
    hexagon_V6_vasrwuhrndsat,1243,95446
    hexagon_V6_vasrwuhrndsat_128B,1244,95526
    hexagon_V6_vasrwuhsat,1245,95611
    hexagon_V6_vasrwuhsat_128B,1246,95688
    hexagon_V6_vasrwv,1247,95770
    hexagon_V6_vasrwv_128B,1248,95843
    hexagon_V6_vassign,1249,95921
    hexagon_V6_vassign_128B,1250,95995
    hexagon_V6_vassign_fp,1251,96074
    hexagon_V6_vassign_fp_128B,1252,96151
    hexagon_V6_vassignp,1253,96233
    hexagon_V6_vassignp_128B,1254,96308
    hexagon_V6_vavgb,1255,96388
    hexagon_V6_vavgb_128B,1256,96460
    hexagon_V6_vavgbrnd,1257,96537
    hexagon_V6_vavgbrnd_128B,1258,96612
    hexagon_V6_vavgh,1259,96692
    hexagon_V6_vavgh_128B,1260,96764
    hexagon_V6_vavghrnd,1261,96841
    hexagon_V6_vavghrnd_128B,1262,96916
    hexagon_V6_vavgub,1263,96996
    hexagon_V6_vavgub_128B,1264,97069
    hexagon_V6_vavgubrnd,1265,97147
    hexagon_V6_vavgubrnd_128B,1266,97223
    hexagon_V6_vavguh,1267,97304
    hexagon_V6_vavguh_128B,1268,97377
    hexagon_V6_vavguhrnd,1269,97455
    hexagon_V6_vavguhrnd_128B,1270,97531
    hexagon_V6_vavguw,1271,97612
    hexagon_V6_vavguw_128B,1272,97685
    hexagon_V6_vavguwrnd,1273,97763
    hexagon_V6_vavguwrnd_128B,1274,97839
    hexagon_V6_vavgw,1275,97920
    hexagon_V6_vavgw_128B,1276,97992
    hexagon_V6_vavgwrnd,1277,98069
    hexagon_V6_vavgwrnd_128B,1278,98144
    hexagon_V6_vcl0h,1279,98224
    hexagon_V6_vcl0h_128B,1280,98296
    hexagon_V6_vcl0w,1281,98373
    hexagon_V6_vcl0w_128B,1282,98445
    hexagon_V6_vcombine,1283,98522
    hexagon_V6_vcombine_128B,1284,98597
    hexagon_V6_vconv_h_hf,1285,98677
    hexagon_V6_vconv_h_hf_128B,1286,98754
    hexagon_V6_vconv_hf_h,1287,98836
    hexagon_V6_vconv_hf_h_128B,1288,98913
    hexagon_V6_vconv_hf_qf16,1289,98995
    hexagon_V6_vconv_hf_qf16_128B,1290,99075
    hexagon_V6_vconv_hf_qf32,1291,99160
    hexagon_V6_vconv_hf_qf32_128B,1292,99240
    hexagon_V6_vconv_sf_qf32,1293,99325
    hexagon_V6_vconv_sf_qf32_128B,1294,99405
    hexagon_V6_vconv_sf_w,1295,99490
    hexagon_V6_vconv_sf_w_128B,1296,99567
    hexagon_V6_vconv_w_sf,1297,99649
    hexagon_V6_vconv_w_sf_128B,1298,99726
    hexagon_V6_vcvt_b_hf,1299,99808
    hexagon_V6_vcvt_b_hf_128B,1300,99884
    hexagon_V6_vcvt_bf_sf,1301,99965
    hexagon_V6_vcvt_bf_sf_128B,1302,100042
    hexagon_V6_vcvt_h_hf,1303,100124
    hexagon_V6_vcvt_h_hf_128B,1304,100200
    hexagon_V6_vcvt_hf_b,1305,100281
    hexagon_V6_vcvt_hf_b_128B,1306,100357
    hexagon_V6_vcvt_hf_h,1307,100438
    hexagon_V6_vcvt_hf_h_128B,1308,100514
    hexagon_V6_vcvt_hf_sf,1309,100595
    hexagon_V6_vcvt_hf_sf_128B,1310,100672
    hexagon_V6_vcvt_hf_ub,1311,100754
    hexagon_V6_vcvt_hf_ub_128B,1312,100831
    hexagon_V6_vcvt_hf_uh,1313,100913
    hexagon_V6_vcvt_hf_uh_128B,1314,100990
    hexagon_V6_vcvt_sf_hf,1315,101072
    hexagon_V6_vcvt_sf_hf_128B,1316,101149
    hexagon_V6_vcvt_ub_hf,1317,101231
    hexagon_V6_vcvt_ub_hf_128B,1318,101308
    hexagon_V6_vcvt_uh_hf,1319,101390
    hexagon_V6_vcvt_uh_hf_128B,1320,101467
    hexagon_V6_vd0,1321,101549
    hexagon_V6_vd0_128B,1322,101619
    hexagon_V6_vdd0,1323,101694
    hexagon_V6_vdd0_128B,1324,101765
    hexagon_V6_vdealb,1325,101841
    hexagon_V6_vdealb_128B,1326,101914
    hexagon_V6_vdealb4w,1327,101992
    hexagon_V6_vdealb4w_128B,1328,102067
    hexagon_V6_vdealh,1329,102147
    hexagon_V6_vdealh_128B,1330,102220
    hexagon_V6_vdealvdd,1331,102298
    hexagon_V6_vdealvdd_128B,1332,102373
    hexagon_V6_vdelta,1333,102453
    hexagon_V6_vdelta_128B,1334,102526
    hexagon_V6_vdmpy_sf_hf,1335,102604
    hexagon_V6_vdmpy_sf_hf_128B,1336,102682
    hexagon_V6_vdmpy_sf_hf_acc,1337,102765
    hexagon_V6_vdmpy_sf_hf_acc_128B,1338,102847
    hexagon_V6_vdmpybus,1339,102934
    hexagon_V6_vdmpybus_128B,1340,103009
    hexagon_V6_vdmpybus_acc,1341,103089
    hexagon_V6_vdmpybus_acc_128B,1342,103168
    hexagon_V6_vdmpybus_dv,1343,103252
    hexagon_V6_vdmpybus_dv_128B,1344,103330
    hexagon_V6_vdmpybus_dv_acc,1345,103413
    hexagon_V6_vdmpybus_dv_acc_128B,1346,103495
    hexagon_V6_vdmpyhb,1347,103582
    hexagon_V6_vdmpyhb_128B,1348,103656
    hexagon_V6_vdmpyhb_acc,1349,103735
    hexagon_V6_vdmpyhb_acc_128B,1350,103813
    hexagon_V6_vdmpyhb_dv,1351,103896
    hexagon_V6_vdmpyhb_dv_128B,1352,103973
    hexagon_V6_vdmpyhb_dv_acc,1353,104055
    hexagon_V6_vdmpyhb_dv_acc_128B,1354,104136
    hexagon_V6_vdmpyhisat,1355,104222
    hexagon_V6_vdmpyhisat_128B,1356,104299
    hexagon_V6_vdmpyhisat_acc,1357,104381
    hexagon_V6_vdmpyhisat_acc_128B,1358,104462
    hexagon_V6_vdmpyhsat,1359,104548
    hexagon_V6_vdmpyhsat_128B,1360,104624
    hexagon_V6_vdmpyhsat_acc,1361,104705
    hexagon_V6_vdmpyhsat_acc_128B,1362,104785
    hexagon_V6_vdmpyhsuisat,1363,104870
    hexagon_V6_vdmpyhsuisat_128B,1364,104949
    hexagon_V6_vdmpyhsuisat_acc,1365,105033
    hexagon_V6_vdmpyhsuisat_acc_128B,1366,105116
    hexagon_V6_vdmpyhsusat,1367,105204
    hexagon_V6_vdmpyhsusat_128B,1368,105282
    hexagon_V6_vdmpyhsusat_acc,1369,105365
    hexagon_V6_vdmpyhsusat_acc_128B,1370,105447
    hexagon_V6_vdmpyhvsat,1371,105534
    hexagon_V6_vdmpyhvsat_128B,1372,105611
    hexagon_V6_vdmpyhvsat_acc,1373,105693
    hexagon_V6_vdmpyhvsat_acc_128B,1374,105774
    hexagon_V6_vdsaduh,1375,105860
    hexagon_V6_vdsaduh_128B,1376,105934
    hexagon_V6_vdsaduh_acc,1377,106013
    hexagon_V6_vdsaduh_acc_128B,1378,106091
    hexagon_V6_veqb,1379,106174
    hexagon_V6_veqb_128B,1380,106245
    hexagon_V6_veqb_and,1381,106321
    hexagon_V6_veqb_and_128B,1382,106396
    hexagon_V6_veqb_or,1383,106476
    hexagon_V6_veqb_or_128B,1384,106550
    hexagon_V6_veqb_xor,1385,106629
    hexagon_V6_veqb_xor_128B,1386,106704
    hexagon_V6_veqh,1387,106784
    hexagon_V6_veqh_128B,1388,106855
    hexagon_V6_veqh_and,1389,106931
    hexagon_V6_veqh_and_128B,1390,107006
    hexagon_V6_veqh_or,1391,107086
    hexagon_V6_veqh_or_128B,1392,107160
    hexagon_V6_veqh_xor,1393,107239
    hexagon_V6_veqh_xor_128B,1394,107314
    hexagon_V6_veqw,1395,107394
    hexagon_V6_veqw_128B,1396,107465
    hexagon_V6_veqw_and,1397,107541
    hexagon_V6_veqw_and_128B,1398,107616
    hexagon_V6_veqw_or,1399,107696
    hexagon_V6_veqw_or_128B,1400,107770
    hexagon_V6_veqw_xor,1401,107849
    hexagon_V6_veqw_xor_128B,1402,107924
    hexagon_V6_vfmax_hf,1403,108004
    hexagon_V6_vfmax_hf_128B,1404,108079
    hexagon_V6_vfmax_sf,1405,108159
    hexagon_V6_vfmax_sf_128B,1406,108234
    hexagon_V6_vfmin_hf,1407,108314
    hexagon_V6_vfmin_hf_128B,1408,108389
    hexagon_V6_vfmin_sf,1409,108469
    hexagon_V6_vfmin_sf_128B,1410,108544
    hexagon_V6_vfneg_hf,1411,108624
    hexagon_V6_vfneg_hf_128B,1412,108699
    hexagon_V6_vfneg_sf,1413,108779
    hexagon_V6_vfneg_sf_128B,1414,108854
    hexagon_V6_vgathermh,1415,108934
    hexagon_V6_vgathermh_128B,1416,109010
    hexagon_V6_vgathermhq,1417,109091
    hexagon_V6_vgathermhq_128B,1418,109168
    hexagon_V6_vgathermhw,1419,109250
    hexagon_V6_vgathermhw_128B,1420,109327
    hexagon_V6_vgathermhwq,1421,109409
    hexagon_V6_vgathermhwq_128B,1422,109487
    hexagon_V6_vgathermw,1423,109570
    hexagon_V6_vgathermw_128B,1424,109646
    hexagon_V6_vgathermwq,1425,109727
    hexagon_V6_vgathermwq_128B,1426,109804
    hexagon_V6_vgtb,1427,109886
    hexagon_V6_vgtb_128B,1428,109957
    hexagon_V6_vgtb_and,1429,110033
    hexagon_V6_vgtb_and_128B,1430,110108
    hexagon_V6_vgtb_or,1431,110188
    hexagon_V6_vgtb_or_128B,1432,110262
    hexagon_V6_vgtb_xor,1433,110341
    hexagon_V6_vgtb_xor_128B,1434,110416
    hexagon_V6_vgtbf,1435,110496
    hexagon_V6_vgtbf_128B,1436,110568
    hexagon_V6_vgtbf_and,1437,110645
    hexagon_V6_vgtbf_and_128B,1438,110721
    hexagon_V6_vgtbf_or,1439,110802
    hexagon_V6_vgtbf_or_128B,1440,110877
    hexagon_V6_vgtbf_xor,1441,110957
    hexagon_V6_vgtbf_xor_128B,1442,111033
    hexagon_V6_vgth,1443,111114
    hexagon_V6_vgth_128B,1444,111185
    hexagon_V6_vgth_and,1445,111261
    hexagon_V6_vgth_and_128B,1446,111336
    hexagon_V6_vgth_or,1447,111416
    hexagon_V6_vgth_or_128B,1448,111490
    hexagon_V6_vgth_xor,1449,111569
    hexagon_V6_vgth_xor_128B,1450,111644
    hexagon_V6_vgthf,1451,111724
    hexagon_V6_vgthf_128B,1452,111796
    hexagon_V6_vgthf_and,1453,111873
    hexagon_V6_vgthf_and_128B,1454,111949
    hexagon_V6_vgthf_or,1455,112030
    hexagon_V6_vgthf_or_128B,1456,112105
    hexagon_V6_vgthf_xor,1457,112185
    hexagon_V6_vgthf_xor_128B,1458,112261
    hexagon_V6_vgtsf,1459,112342
    hexagon_V6_vgtsf_128B,1460,112414
    hexagon_V6_vgtsf_and,1461,112491
    hexagon_V6_vgtsf_and_128B,1462,112567
    hexagon_V6_vgtsf_or,1463,112648
    hexagon_V6_vgtsf_or_128B,1464,112723
    hexagon_V6_vgtsf_xor,1465,112803
    hexagon_V6_vgtsf_xor_128B,1466,112879
    hexagon_V6_vgtub,1467,112960
    hexagon_V6_vgtub_128B,1468,113032
    hexagon_V6_vgtub_and,1469,113109
    hexagon_V6_vgtub_and_128B,1470,113185
    hexagon_V6_vgtub_or,1471,113266
    hexagon_V6_vgtub_or_128B,1472,113341
    hexagon_V6_vgtub_xor,1473,113421
    hexagon_V6_vgtub_xor_128B,1474,113497
    hexagon_V6_vgtuh,1475,113578
    hexagon_V6_vgtuh_128B,1476,113650
    hexagon_V6_vgtuh_and,1477,113727
    hexagon_V6_vgtuh_and_128B,1478,113803
    hexagon_V6_vgtuh_or,1479,113884
    hexagon_V6_vgtuh_or_128B,1480,113959
    hexagon_V6_vgtuh_xor,1481,114039
    hexagon_V6_vgtuh_xor_128B,1482,114115
    hexagon_V6_vgtuw,1483,114196
    hexagon_V6_vgtuw_128B,1484,114268
    hexagon_V6_vgtuw_and,1485,114345
    hexagon_V6_vgtuw_and_128B,1486,114421
    hexagon_V6_vgtuw_or,1487,114502
    hexagon_V6_vgtuw_or_128B,1488,114577
    hexagon_V6_vgtuw_xor,1489,114657
    hexagon_V6_vgtuw_xor_128B,1490,114733
    hexagon_V6_vgtw,1491,114814
    hexagon_V6_vgtw_128B,1492,114885
    hexagon_V6_vgtw_and,1493,114961
    hexagon_V6_vgtw_and_128B,1494,115036
    hexagon_V6_vgtw_or,1495,115116
    hexagon_V6_vgtw_or_128B,1496,115190
    hexagon_V6_vgtw_xor,1497,115269
    hexagon_V6_vgtw_xor_128B,1498,115344
    hexagon_V6_vinsertwr,1499,115424
    hexagon_V6_vinsertwr_128B,1500,115500
    hexagon_V6_vlalignb,1501,115581
    hexagon_V6_vlalignb_128B,1502,115656
    hexagon_V6_vlalignbi,1503,115736
    hexagon_V6_vlalignbi_128B,1504,115812
    hexagon_V6_vlsrb,1505,115893
    hexagon_V6_vlsrb_128B,1506,115965
    hexagon_V6_vlsrh,1507,116042
    hexagon_V6_vlsrh_128B,1508,116114
    hexagon_V6_vlsrhv,1509,116191
    hexagon_V6_vlsrhv_128B,1510,116264
    hexagon_V6_vlsrw,1511,116342
    hexagon_V6_vlsrw_128B,1512,116414
    hexagon_V6_vlsrwv,1513,116491
    hexagon_V6_vlsrwv_128B,1514,116564
    hexagon_V6_vlut4,1515,116642
    hexagon_V6_vlut4_128B,1516,116714
    hexagon_V6_vlutvvb,1517,116791
    hexagon_V6_vlutvvb_128B,1518,116865
    hexagon_V6_vlutvvb_nm,1519,116944
    hexagon_V6_vlutvvb_nm_128B,1520,117021
    hexagon_V6_vlutvvb_oracc,1521,117103
    hexagon_V6_vlutvvb_oracc_128B,1522,117183
    hexagon_V6_vlutvvb_oracci,1523,117268
    hexagon_V6_vlutvvb_oracci_128B,1524,117349
    hexagon_V6_vlutvvbi,1525,117435
    hexagon_V6_vlutvvbi_128B,1526,117510
    hexagon_V6_vlutvwh,1527,117590
    hexagon_V6_vlutvwh_128B,1528,117664
    hexagon_V6_vlutvwh_nm,1529,117743
    hexagon_V6_vlutvwh_nm_128B,1530,117820
    hexagon_V6_vlutvwh_oracc,1531,117902
    hexagon_V6_vlutvwh_oracc_128B,1532,117982
    hexagon_V6_vlutvwh_oracci,1533,118067
    hexagon_V6_vlutvwh_oracci_128B,1534,118148
    hexagon_V6_vlutvwhi,1535,118234
    hexagon_V6_vlutvwhi_128B,1536,118309
    hexagon_V6_vmaskedstorenq,1537,118389
    hexagon_V6_vmaskedstorenq_128B,1538,118470
    hexagon_V6_vmaskedstorentnq,1539,118556
    hexagon_V6_vmaskedstorentnq_128B,1540,118639
    hexagon_V6_vmaskedstorentq,1541,118727
    hexagon_V6_vmaskedstorentq_128B,1542,118809
    hexagon_V6_vmaskedstoreq,1543,118896
    hexagon_V6_vmaskedstoreq_128B,1544,118976
    hexagon_V6_vmax_bf,1545,119061
    hexagon_V6_vmax_bf_128B,1546,119135
    hexagon_V6_vmax_hf,1547,119214
    hexagon_V6_vmax_hf_128B,1548,119288
    hexagon_V6_vmax_sf,1549,119367
    hexagon_V6_vmax_sf_128B,1550,119441
    hexagon_V6_vmaxb,1551,119520
    hexagon_V6_vmaxb_128B,1552,119592
    hexagon_V6_vmaxh,1553,119669
    hexagon_V6_vmaxh_128B,1554,119741
    hexagon_V6_vmaxub,1555,119818
    hexagon_V6_vmaxub_128B,1556,119891
    hexagon_V6_vmaxuh,1557,119969
    hexagon_V6_vmaxuh_128B,1558,120042
    hexagon_V6_vmaxw,1559,120120
    hexagon_V6_vmaxw_128B,1560,120192
    hexagon_V6_vmin_bf,1561,120269
    hexagon_V6_vmin_bf_128B,1562,120343
    hexagon_V6_vmin_hf,1563,120422
    hexagon_V6_vmin_hf_128B,1564,120496
    hexagon_V6_vmin_sf,1565,120575
    hexagon_V6_vmin_sf_128B,1566,120649
    hexagon_V6_vminb,1567,120728
    hexagon_V6_vminb_128B,1568,120800
    hexagon_V6_vminh,1569,120877
    hexagon_V6_vminh_128B,1570,120949
    hexagon_V6_vminub,1571,121026
    hexagon_V6_vminub_128B,1572,121099
    hexagon_V6_vminuh,1573,121177
    hexagon_V6_vminuh_128B,1574,121250
    hexagon_V6_vminw,1575,121328
    hexagon_V6_vminw_128B,1576,121400
    hexagon_V6_vmpabus,1577,121477
    hexagon_V6_vmpabus_128B,1578,121551
    hexagon_V6_vmpabus_acc,1579,121630
    hexagon_V6_vmpabus_acc_128B,1580,121708
    hexagon_V6_vmpabusv,1581,121791
    hexagon_V6_vmpabusv_128B,1582,121866
    hexagon_V6_vmpabuu,1583,121946
    hexagon_V6_vmpabuu_128B,1584,122020
    hexagon_V6_vmpabuu_acc,1585,122099
    hexagon_V6_vmpabuu_acc_128B,1586,122177
    hexagon_V6_vmpabuuv,1587,122260
    hexagon_V6_vmpabuuv_128B,1588,122335
    hexagon_V6_vmpahb,1589,122415
    hexagon_V6_vmpahb_128B,1590,122488
    hexagon_V6_vmpahb_acc,1591,122566
    hexagon_V6_vmpahb_acc_128B,1592,122643
    hexagon_V6_vmpahhsat,1593,122725
    hexagon_V6_vmpahhsat_128B,1594,122801
    hexagon_V6_vmpauhb,1595,122882
    hexagon_V6_vmpauhb_128B,1596,122956
    hexagon_V6_vmpauhb_acc,1597,123035
    hexagon_V6_vmpauhb_acc_128B,1598,123113
    hexagon_V6_vmpauhuhsat,1599,123196
    hexagon_V6_vmpauhuhsat_128B,1600,123274
    hexagon_V6_vmpsuhuhsat,1601,123357
    hexagon_V6_vmpsuhuhsat_128B,1602,123435
    hexagon_V6_vmpy_hf_hf,1603,123518
    hexagon_V6_vmpy_hf_hf_128B,1604,123595
    hexagon_V6_vmpy_hf_hf_acc,1605,123677
    hexagon_V6_vmpy_hf_hf_acc_128B,1606,123758
    hexagon_V6_vmpy_qf16,1607,123844
    hexagon_V6_vmpy_qf16_128B,1608,123920
    hexagon_V6_vmpy_qf16_hf,1609,124001
    hexagon_V6_vmpy_qf16_hf_128B,1610,124080
    hexagon_V6_vmpy_qf16_mix_hf,1611,124164
    hexagon_V6_vmpy_qf16_mix_hf_128B,1612,124247
    hexagon_V6_vmpy_qf32,1613,124335
    hexagon_V6_vmpy_qf32_128B,1614,124411
    hexagon_V6_vmpy_qf32_hf,1615,124492
    hexagon_V6_vmpy_qf32_hf_128B,1616,124571
    hexagon_V6_vmpy_qf32_mix_hf,1617,124655
    hexagon_V6_vmpy_qf32_mix_hf_128B,1618,124738
    hexagon_V6_vmpy_qf32_qf16,1619,124826
    hexagon_V6_vmpy_qf32_qf16_128B,1620,124907
    hexagon_V6_vmpy_qf32_sf,1621,124993
    hexagon_V6_vmpy_qf32_sf_128B,1622,125072
    hexagon_V6_vmpy_sf_bf,1623,125156
    hexagon_V6_vmpy_sf_bf_128B,1624,125233
    hexagon_V6_vmpy_sf_bf_acc,1625,125315
    hexagon_V6_vmpy_sf_bf_acc_128B,1626,125396
    hexagon_V6_vmpy_sf_hf,1627,125482
    hexagon_V6_vmpy_sf_hf_128B,1628,125559
    hexagon_V6_vmpy_sf_hf_acc,1629,125641
    hexagon_V6_vmpy_sf_hf_acc_128B,1630,125722
    hexagon_V6_vmpy_sf_sf,1631,125808
    hexagon_V6_vmpy_sf_sf_128B,1632,125885
    hexagon_V6_vmpybus,1633,125967
    hexagon_V6_vmpybus_128B,1634,126041
    hexagon_V6_vmpybus_acc,1635,126120
    hexagon_V6_vmpybus_acc_128B,1636,126198
    hexagon_V6_vmpybusv,1637,126281
    hexagon_V6_vmpybusv_128B,1638,126356
    hexagon_V6_vmpybusv_acc,1639,126436
    hexagon_V6_vmpybusv_acc_128B,1640,126515
    hexagon_V6_vmpybv,1641,126599
    hexagon_V6_vmpybv_128B,1642,126672
    hexagon_V6_vmpybv_acc,1643,126750
    hexagon_V6_vmpybv_acc_128B,1644,126827
    hexagon_V6_vmpyewuh,1645,126909
    hexagon_V6_vmpyewuh_128B,1646,126984
    hexagon_V6_vmpyewuh_64,1647,127064
    hexagon_V6_vmpyewuh_64_128B,1648,127142
    hexagon_V6_vmpyh,1649,127225
    hexagon_V6_vmpyh_128B,1650,127297
    hexagon_V6_vmpyh_acc,1651,127374
    hexagon_V6_vmpyh_acc_128B,1652,127450
    hexagon_V6_vmpyhsat_acc,1653,127531
    hexagon_V6_vmpyhsat_acc_128B,1654,127610
    hexagon_V6_vmpyhsrs,1655,127694
    hexagon_V6_vmpyhsrs_128B,1656,127769
    hexagon_V6_vmpyhss,1657,127849
    hexagon_V6_vmpyhss_128B,1658,127923
    hexagon_V6_vmpyhus,1659,128002
    hexagon_V6_vmpyhus_128B,1660,128076
    hexagon_V6_vmpyhus_acc,1661,128155
    hexagon_V6_vmpyhus_acc_128B,1662,128233
    hexagon_V6_vmpyhv,1663,128316
    hexagon_V6_vmpyhv_128B,1664,128389
    hexagon_V6_vmpyhv_acc,1665,128467
    hexagon_V6_vmpyhv_acc_128B,1666,128544
    hexagon_V6_vmpyhvsrs,1667,128626
    hexagon_V6_vmpyhvsrs_128B,1668,128702
    hexagon_V6_vmpyieoh,1669,128783
    hexagon_V6_vmpyieoh_128B,1670,128858
    hexagon_V6_vmpyiewh_acc,1671,128938
    hexagon_V6_vmpyiewh_acc_128B,1672,129017
    hexagon_V6_vmpyiewuh,1673,129101
    hexagon_V6_vmpyiewuh_128B,1674,129177
    hexagon_V6_vmpyiewuh_acc,1675,129258
    hexagon_V6_vmpyiewuh_acc_128B,1676,129338
    hexagon_V6_vmpyih,1677,129423
    hexagon_V6_vmpyih_128B,1678,129496
    hexagon_V6_vmpyih_acc,1679,129574
    hexagon_V6_vmpyih_acc_128B,1680,129651
    hexagon_V6_vmpyihb,1681,129733
    hexagon_V6_vmpyihb_128B,1682,129807
    hexagon_V6_vmpyihb_acc,1683,129886
    hexagon_V6_vmpyihb_acc_128B,1684,129964
    hexagon_V6_vmpyiowh,1685,130047
    hexagon_V6_vmpyiowh_128B,1686,130122
    hexagon_V6_vmpyiwb,1687,130202
    hexagon_V6_vmpyiwb_128B,1688,130276
    hexagon_V6_vmpyiwb_acc,1689,130355
    hexagon_V6_vmpyiwb_acc_128B,1690,130433
    hexagon_V6_vmpyiwh,1691,130516
    hexagon_V6_vmpyiwh_128B,1692,130590
    hexagon_V6_vmpyiwh_acc,1693,130669
    hexagon_V6_vmpyiwh_acc_128B,1694,130747
    hexagon_V6_vmpyiwub,1695,130830
    hexagon_V6_vmpyiwub_128B,1696,130905
    hexagon_V6_vmpyiwub_acc,1697,130985
    hexagon_V6_vmpyiwub_acc_128B,1698,131064
    hexagon_V6_vmpyowh,1699,131148
    hexagon_V6_vmpyowh_128B,1700,131222
    hexagon_V6_vmpyowh_64_acc,1701,131301
    hexagon_V6_vmpyowh_64_acc_128B,1702,131382
    hexagon_V6_vmpyowh_rnd,1703,131468
    hexagon_V6_vmpyowh_rnd_128B,1704,131546
    hexagon_V6_vmpyowh_rnd_sacc,1705,131629
    hexagon_V6_vmpyowh_rnd_sacc_128B,1706,131712
    hexagon_V6_vmpyowh_sacc,1707,131800
    hexagon_V6_vmpyowh_sacc_128B,1708,131879
    hexagon_V6_vmpyss_parts,1709,131963
    hexagon_V6_vmpyss_parts_128B,1710,132042
    hexagon_V6_vmpyub,1711,132126
    hexagon_V6_vmpyub_128B,1712,132199
    hexagon_V6_vmpyub_acc,1713,132277
    hexagon_V6_vmpyub_acc_128B,1714,132354
    hexagon_V6_vmpyubv,1715,132436
    hexagon_V6_vmpyubv_128B,1716,132510
    hexagon_V6_vmpyubv_acc,1717,132589
    hexagon_V6_vmpyubv_acc_128B,1718,132667
    hexagon_V6_vmpyuh,1719,132750
    hexagon_V6_vmpyuh_128B,1720,132823
    hexagon_V6_vmpyuh_acc,1721,132901
    hexagon_V6_vmpyuh_acc_128B,1722,132978
    hexagon_V6_vmpyuhe,1723,133060
    hexagon_V6_vmpyuhe_128B,1724,133134
    hexagon_V6_vmpyuhe_acc,1725,133213
    hexagon_V6_vmpyuhe_acc_128B,1726,133291
    hexagon_V6_vmpyuhv,1727,133374
    hexagon_V6_vmpyuhv_128B,1728,133448
    hexagon_V6_vmpyuhv_acc,1729,133527
    hexagon_V6_vmpyuhv_acc_128B,1730,133605
    hexagon_V6_vmpyuhvs,1731,133688
    hexagon_V6_vmpyuhvs_128B,1732,133763
    hexagon_V6_vmpyus_parts,1733,133843
    hexagon_V6_vmpyus_parts_128B,1734,133922
    hexagon_V6_vmpyuu_parts,1735,134006
    hexagon_V6_vmpyuu_parts_128B,1736,134085
    hexagon_V6_vmux,1737,134169
    hexagon_V6_vmux_128B,1738,134240
    hexagon_V6_vnavgb,1739,134316
    hexagon_V6_vnavgb_128B,1740,134389
    hexagon_V6_vnavgh,1741,134467
    hexagon_V6_vnavgh_128B,1742,134540
    hexagon_V6_vnavgub,1743,134618
    hexagon_V6_vnavgub_128B,1744,134692
    hexagon_V6_vnavgw,1745,134771
    hexagon_V6_vnavgw_128B,1746,134844
    hexagon_V6_vnormamth,1747,134922
    hexagon_V6_vnormamth_128B,1748,134998
    hexagon_V6_vnormamtw,1749,135079
    hexagon_V6_vnormamtw_128B,1750,135155
    hexagon_V6_vnot,1751,135236
    hexagon_V6_vnot_128B,1752,135307
    hexagon_V6_vor,1753,135383
    hexagon_V6_vor_128B,1754,135453
    hexagon_V6_vpackeb,1755,135528
    hexagon_V6_vpackeb_128B,1756,135602
    hexagon_V6_vpackeh,1757,135681
    hexagon_V6_vpackeh_128B,1758,135755
    hexagon_V6_vpackhb_sat,1759,135834
    hexagon_V6_vpackhb_sat_128B,1760,135912
    hexagon_V6_vpackhub_sat,1761,135995
    hexagon_V6_vpackhub_sat_128B,1762,136074
    hexagon_V6_vpackob,1763,136158
    hexagon_V6_vpackob_128B,1764,136232
    hexagon_V6_vpackoh,1765,136311
    hexagon_V6_vpackoh_128B,1766,136385
    hexagon_V6_vpackwh_sat,1767,136464
    hexagon_V6_vpackwh_sat_128B,1768,136542
    hexagon_V6_vpackwuh_sat,1769,136625
    hexagon_V6_vpackwuh_sat_128B,1770,136704
    hexagon_V6_vpopcounth,1771,136788
    hexagon_V6_vpopcounth_128B,1772,136865
    hexagon_V6_vprefixqb,1773,136947
    hexagon_V6_vprefixqb_128B,1774,137023
    hexagon_V6_vprefixqh,1775,137104
    hexagon_V6_vprefixqh_128B,1776,137180
    hexagon_V6_vprefixqw,1777,137261
    hexagon_V6_vprefixqw_128B,1778,137337
    hexagon_V6_vrdelta,1779,137418
    hexagon_V6_vrdelta_128B,1780,137492
    hexagon_V6_vrmpybub_rtt,1781,137571
    hexagon_V6_vrmpybub_rtt_128B,1782,137650
    hexagon_V6_vrmpybub_rtt_acc,1783,137734
    hexagon_V6_vrmpybub_rtt_acc_128B,1784,137817
    hexagon_V6_vrmpybus,1785,137905
    hexagon_V6_vrmpybus_128B,1786,137980
    hexagon_V6_vrmpybus_acc,1787,138060
    hexagon_V6_vrmpybus_acc_128B,1788,138139
    hexagon_V6_vrmpybusi,1789,138223
    hexagon_V6_vrmpybusi_128B,1790,138299
    hexagon_V6_vrmpybusi_acc,1791,138380
    hexagon_V6_vrmpybusi_acc_128B,1792,138460
    hexagon_V6_vrmpybusv,1793,138545
    hexagon_V6_vrmpybusv_128B,1794,138621
    hexagon_V6_vrmpybusv_acc,1795,138702
    hexagon_V6_vrmpybusv_acc_128B,1796,138782
    hexagon_V6_vrmpybv,1797,138867
    hexagon_V6_vrmpybv_128B,1798,138941
    hexagon_V6_vrmpybv_acc,1799,139020
    hexagon_V6_vrmpybv_acc_128B,1800,139098
    hexagon_V6_vrmpyub,1801,139181
    hexagon_V6_vrmpyub_128B,1802,139255
    hexagon_V6_vrmpyub_acc,1803,139334
    hexagon_V6_vrmpyub_acc_128B,1804,139412
    hexagon_V6_vrmpyub_rtt,1805,139495
    hexagon_V6_vrmpyub_rtt_128B,1806,139573
    hexagon_V6_vrmpyub_rtt_acc,1807,139656
    hexagon_V6_vrmpyub_rtt_acc_128B,1808,139738
    hexagon_V6_vrmpyubi,1809,139825
    hexagon_V6_vrmpyubi_128B,1810,139900
    hexagon_V6_vrmpyubi_acc,1811,139980
    hexagon_V6_vrmpyubi_acc_128B,1812,140059
    hexagon_V6_vrmpyubv,1813,140143
    hexagon_V6_vrmpyubv_128B,1814,140218
    hexagon_V6_vrmpyubv_acc,1815,140298
    hexagon_V6_vrmpyubv_acc_128B,1816,140377
    hexagon_V6_vror,1817,140461
    hexagon_V6_vror_128B,1818,140532
    hexagon_V6_vrotr,1819,140608
    hexagon_V6_vrotr_128B,1820,140680
    hexagon_V6_vroundhb,1821,140757
    hexagon_V6_vroundhb_128B,1822,140832
    hexagon_V6_vroundhub,1823,140912
    hexagon_V6_vroundhub_128B,1824,140988
    hexagon_V6_vrounduhub,1825,141069
    hexagon_V6_vrounduhub_128B,1826,141146
    hexagon_V6_vrounduwuh,1827,141228
    hexagon_V6_vrounduwuh_128B,1828,141305
    hexagon_V6_vroundwh,1829,141387
    hexagon_V6_vroundwh_128B,1830,141462
    hexagon_V6_vroundwuh,1831,141542
    hexagon_V6_vroundwuh_128B,1832,141618
    hexagon_V6_vrsadubi,1833,141699
    hexagon_V6_vrsadubi_128B,1834,141774
    hexagon_V6_vrsadubi_acc,1835,141854
    hexagon_V6_vrsadubi_acc_128B,1836,141933
    hexagon_V6_vsatdw,1837,142017
    hexagon_V6_vsatdw_128B,1838,142090
    hexagon_V6_vsathub,1839,142168
    hexagon_V6_vsathub_128B,1840,142242
    hexagon_V6_vsatuwuh,1841,142321
    hexagon_V6_vsatuwuh_128B,1842,142396
    hexagon_V6_vsatwh,1843,142476
    hexagon_V6_vsatwh_128B,1844,142549
    hexagon_V6_vsb,1845,142627
    hexagon_V6_vsb_128B,1846,142697
    hexagon_V6_vscattermh,1847,142772
    hexagon_V6_vscattermh_128B,1848,142849
    hexagon_V6_vscattermh_add,1849,142931
    hexagon_V6_vscattermh_add_128B,1850,143012
    hexagon_V6_vscattermhq,1851,143098
    hexagon_V6_vscattermhq_128B,1852,143176
    hexagon_V6_vscattermhw,1853,143259
    hexagon_V6_vscattermhw_128B,1854,143337
    hexagon_V6_vscattermhw_add,1855,143420
    hexagon_V6_vscattermhw_add_128B,1856,143502
    hexagon_V6_vscattermhwq,1857,143589
    hexagon_V6_vscattermhwq_128B,1858,143668
    hexagon_V6_vscattermw,1859,143752
    hexagon_V6_vscattermw_128B,1860,143829
    hexagon_V6_vscattermw_add,1861,143911
    hexagon_V6_vscattermw_add_128B,1862,143992
    hexagon_V6_vscattermwq,1863,144078
    hexagon_V6_vscattermwq_128B,1864,144156
    hexagon_V6_vsh,1865,144239
    hexagon_V6_vsh_128B,1866,144309
    hexagon_V6_vshufeh,1867,144384
    hexagon_V6_vshufeh_128B,1868,144458
    hexagon_V6_vshuffb,1869,144537
    hexagon_V6_vshuffb_128B,1870,144611
    hexagon_V6_vshuffeb,1871,144690
    hexagon_V6_vshuffeb_128B,1872,144765
    hexagon_V6_vshuffh,1873,144845
    hexagon_V6_vshuffh_128B,1874,144919
    hexagon_V6_vshuffob,1875,144998
    hexagon_V6_vshuffob_128B,1876,145073
    hexagon_V6_vshuffvdd,1877,145153
    hexagon_V6_vshuffvdd_128B,1878,145229
    hexagon_V6_vshufoeb,1879,145310
    hexagon_V6_vshufoeb_128B,1880,145385
    hexagon_V6_vshufoeh,1881,145465
    hexagon_V6_vshufoeh_128B,1882,145540
    hexagon_V6_vshufoh,1883,145620
    hexagon_V6_vshufoh_128B,1884,145694
    hexagon_V6_vsub_hf,1885,145773
    hexagon_V6_vsub_hf_128B,1886,145847
    hexagon_V6_vsub_hf_hf,1887,145926
    hexagon_V6_vsub_hf_hf_128B,1888,146003
    hexagon_V6_vsub_qf16,1889,146085
    hexagon_V6_vsub_qf16_128B,1890,146161
    hexagon_V6_vsub_qf16_mix,1891,146242
    hexagon_V6_vsub_qf16_mix_128B,1892,146322
    hexagon_V6_vsub_qf32,1893,146407
    hexagon_V6_vsub_qf32_128B,1894,146483
    hexagon_V6_vsub_qf32_mix,1895,146564
    hexagon_V6_vsub_qf32_mix_128B,1896,146644
    hexagon_V6_vsub_sf,1897,146729
    hexagon_V6_vsub_sf_128B,1898,146803
    hexagon_V6_vsub_sf_bf,1899,146882
    hexagon_V6_vsub_sf_bf_128B,1900,146959
    hexagon_V6_vsub_sf_hf,1901,147041
    hexagon_V6_vsub_sf_hf_128B,1902,147118
    hexagon_V6_vsub_sf_sf,1903,147200
    hexagon_V6_vsub_sf_sf_128B,1904,147277
    hexagon_V6_vsubb,1905,147359
    hexagon_V6_vsubb_128B,1906,147431
    hexagon_V6_vsubb_dv,1907,147508
    hexagon_V6_vsubb_dv_128B,1908,147583
    hexagon_V6_vsubbnq,1909,147663
    hexagon_V6_vsubbnq_128B,1910,147737
    hexagon_V6_vsubbq,1911,147816
    hexagon_V6_vsubbq_128B,1912,147889
    hexagon_V6_vsubbsat,1913,147967
    hexagon_V6_vsubbsat_128B,1914,148042
    hexagon_V6_vsubbsat_dv,1915,148122
    hexagon_V6_vsubbsat_dv_128B,1916,148200
    hexagon_V6_vsubcarry,1917,148283
    hexagon_V6_vsubcarry_128B,1918,148359
    hexagon_V6_vsubcarryo,1919,148440
    hexagon_V6_vsubcarryo_128B,1920,148517
    hexagon_V6_vsubh,1921,148599
    hexagon_V6_vsubh_128B,1922,148671
    hexagon_V6_vsubh_dv,1923,148748
    hexagon_V6_vsubh_dv_128B,1924,148823
    hexagon_V6_vsubhnq,1925,148903
    hexagon_V6_vsubhnq_128B,1926,148977
    hexagon_V6_vsubhq,1927,149056
    hexagon_V6_vsubhq_128B,1928,149129
    hexagon_V6_vsubhsat,1929,149207
    hexagon_V6_vsubhsat_128B,1930,149282
    hexagon_V6_vsubhsat_dv,1931,149362
    hexagon_V6_vsubhsat_dv_128B,1932,149440
    hexagon_V6_vsubhw,1933,149523
    hexagon_V6_vsubhw_128B,1934,149596
    hexagon_V6_vsububh,1935,149674
    hexagon_V6_vsububh_128B,1936,149748
    hexagon_V6_vsububsat,1937,149827
    hexagon_V6_vsububsat_128B,1938,149903
    hexagon_V6_vsububsat_dv,1939,149984
    hexagon_V6_vsububsat_dv_128B,1940,150063
    hexagon_V6_vsubububb_sat,1941,150147
    hexagon_V6_vsubububb_sat_128B,1942,150227
    hexagon_V6_vsubuhsat,1943,150312
    hexagon_V6_vsubuhsat_128B,1944,150388
    hexagon_V6_vsubuhsat_dv,1945,150469
    hexagon_V6_vsubuhsat_dv_128B,1946,150548
    hexagon_V6_vsubuhw,1947,150632
    hexagon_V6_vsubuhw_128B,1948,150706
    hexagon_V6_vsubuwsat,1949,150785
    hexagon_V6_vsubuwsat_128B,1950,150861
    hexagon_V6_vsubuwsat_dv,1951,150942
    hexagon_V6_vsubuwsat_dv_128B,1952,151021
    hexagon_V6_vsubw,1953,151105
    hexagon_V6_vsubw_128B,1954,151177
    hexagon_V6_vsubw_dv,1955,151254
    hexagon_V6_vsubw_dv_128B,1956,151329
    hexagon_V6_vsubwnq,1957,151409
    hexagon_V6_vsubwnq_128B,1958,151483
    hexagon_V6_vsubwq,1959,151562
    hexagon_V6_vsubwq_128B,1960,151635
    hexagon_V6_vsubwsat,1961,151713
    hexagon_V6_vsubwsat_128B,1962,151788
    hexagon_V6_vsubwsat_dv,1963,151868
    hexagon_V6_vsubwsat_dv_128B,1964,151946
    hexagon_V6_vswap,1965,152029
    hexagon_V6_vswap_128B,1966,152101
    hexagon_V6_vtmpyb,1967,152178
    hexagon_V6_vtmpyb_128B,1968,152251
    hexagon_V6_vtmpyb_acc,1969,152329
    hexagon_V6_vtmpyb_acc_128B,1970,152406
    hexagon_V6_vtmpybus,1971,152488
    hexagon_V6_vtmpybus_128B,1972,152563
    hexagon_V6_vtmpybus_acc,1973,152643
    hexagon_V6_vtmpybus_acc_128B,1974,152722
    hexagon_V6_vtmpyhb,1975,152806
    hexagon_V6_vtmpyhb_128B,1976,152880
    hexagon_V6_vtmpyhb_acc,1977,152959
    hexagon_V6_vtmpyhb_acc_128B,1978,153037
    hexagon_V6_vunpackb,1979,153120
    hexagon_V6_vunpackb_128B,1980,153195
    hexagon_V6_vunpackh,1981,153275
    hexagon_V6_vunpackh_128B,1982,153350
    hexagon_V6_vunpackob,1983,153430
    hexagon_V6_vunpackob_128B,1984,153506
    hexagon_V6_vunpackoh,1985,153587
    hexagon_V6_vunpackoh_128B,1986,153663
    hexagon_V6_vunpackub,1987,153744
    hexagon_V6_vunpackub_128B,1988,153820
    hexagon_V6_vunpackuh,1989,153901
    hexagon_V6_vunpackuh_128B,1990,153977
    hexagon_V6_vxor,1991,154058
    hexagon_V6_vxor_128B,1992,154129
    hexagon_V6_vzb,1993,154205
    hexagon_V6_vzb_128B,1994,154275
    hexagon_V6_vzh,1995,154350
    hexagon_V6_vzh_128B,1996,154420
    hexagon_Y2_dccleana,1997,154495
    hexagon_Y2_dccleaninva,1998,154570
    hexagon_Y2_dcfetch,1999,154648
    hexagon_Y2_dcinva,2000,154722
    hexagon_Y2_dczeroa,2001,154795
    hexagon_Y4_l2fetch,2002,154869
    hexagon_Y5_l2fetch,2003,154943
    hexagon_Y6_dmlink,2004,155017
    hexagon_Y6_dmpause,2005,155090
    hexagon_Y6_dmpoll,2006,155164
    hexagon_Y6_dmresume,2007,155237
    hexagon_Y6_dmstart,2008,155312
    hexagon_Y6_dmwait,2009,155386
    hexagon_circ_ldb,2010,155459
    hexagon_circ_ldd,2011,155531
    hexagon_circ_ldh,2012,155603
    hexagon_circ_ldub,2013,155675
    hexagon_circ_lduh,2014,155748
    hexagon_circ_ldw,2015,155821
    hexagon_circ_stb,2016,155893
    hexagon_circ_std,2017,155965
    hexagon_circ_sth,2018,156037
    hexagon_circ_sthhi,2019,156109
    hexagon_circ_stw,2020,156183
    hexagon_instrprof_custom,2021,156255
    hexagon_prefetch,2022,156335
    hexagon_vmemcpy,2023,156407
    hexagon_vmemset,2024,156478

/usr/include/llvm/IR/IntrinsicsLoongArch.h,61514
#define LLVM_IR_INTRINSIC_LOONGARCH_ENUMS_H10,612
enum LOONGARCHIntrinsics 14,696
    loongarch_asrtgt_d 16,764
    loongarch_asrtle_d,17,845
    loongarch_break,18,919
    loongarch_cacop_d,19,990
    loongarch_cacop_w,20,1063
    loongarch_cpucfg,21,1136
    loongarch_crc_w_b_w,22,1208
    loongarch_crc_w_d_w,23,1283
    loongarch_crc_w_h_w,24,1358
    loongarch_crc_w_w_w,25,1433
    loongarch_crcc_w_b_w,26,1508
    loongarch_crcc_w_d_w,27,1584
    loongarch_crcc_w_h_w,28,1660
    loongarch_crcc_w_w_w,29,1736
    loongarch_csrrd_d,30,1812
    loongarch_csrrd_w,31,1885
    loongarch_csrwr_d,32,1958
    loongarch_csrwr_w,33,2031
    loongarch_csrxchg_d,34,2104
    loongarch_csrxchg_w,35,2179
    loongarch_dbar,36,2254
    loongarch_frecipe_d,37,2324
    loongarch_frecipe_s,38,2399
    loongarch_frsqrte_d,39,2474
    loongarch_frsqrte_s,40,2549
    loongarch_ibar,41,2624
    loongarch_iocsrrd_b,42,2694
    loongarch_iocsrrd_d,43,2769
    loongarch_iocsrrd_h,44,2844
    loongarch_iocsrrd_w,45,2919
    loongarch_iocsrwr_b,46,2994
    loongarch_iocsrwr_d,47,3069
    loongarch_iocsrwr_h,48,3144
    loongarch_iocsrwr_w,49,3219
    loongarch_lasx_vext2xv_d_b,50,3294
    loongarch_lasx_vext2xv_d_h,51,3376
    loongarch_lasx_vext2xv_d_w,52,3458
    loongarch_lasx_vext2xv_du_bu,53,3540
    loongarch_lasx_vext2xv_du_hu,54,3624
    loongarch_lasx_vext2xv_du_wu,55,3708
    loongarch_lasx_vext2xv_h_b,56,3792
    loongarch_lasx_vext2xv_hu_bu,57,3874
    loongarch_lasx_vext2xv_w_b,58,3958
    loongarch_lasx_vext2xv_w_h,59,4040
    loongarch_lasx_vext2xv_wu_bu,60,4122
    loongarch_lasx_vext2xv_wu_hu,61,4206
    loongarch_lasx_xbnz_b,62,4290
    loongarch_lasx_xbnz_d,63,4367
    loongarch_lasx_xbnz_h,64,4444
    loongarch_lasx_xbnz_v,65,4521
    loongarch_lasx_xbnz_w,66,4598
    loongarch_lasx_xbz_b,67,4675
    loongarch_lasx_xbz_d,68,4751
    loongarch_lasx_xbz_h,69,4827
    loongarch_lasx_xbz_v,70,4903
    loongarch_lasx_xbz_w,71,4979
    loongarch_lasx_xvabsd_b,72,5055
    loongarch_lasx_xvabsd_bu,73,5134
    loongarch_lasx_xvabsd_d,74,5214
    loongarch_lasx_xvabsd_du,75,5293
    loongarch_lasx_xvabsd_h,76,5373
    loongarch_lasx_xvabsd_hu,77,5452
    loongarch_lasx_xvabsd_w,78,5532
    loongarch_lasx_xvabsd_wu,79,5611
    loongarch_lasx_xvadd_b,80,5691
    loongarch_lasx_xvadd_d,81,5769
    loongarch_lasx_xvadd_h,82,5847
    loongarch_lasx_xvadd_q,83,5925
    loongarch_lasx_xvadd_w,84,6003
    loongarch_lasx_xvadda_b,85,6081
    loongarch_lasx_xvadda_d,86,6160
    loongarch_lasx_xvadda_h,87,6239
    loongarch_lasx_xvadda_w,88,6318
    loongarch_lasx_xvaddi_bu,89,6397
    loongarch_lasx_xvaddi_du,90,6477
    loongarch_lasx_xvaddi_hu,91,6557
    loongarch_lasx_xvaddi_wu,92,6637
    loongarch_lasx_xvaddwev_d_w,93,6717
    loongarch_lasx_xvaddwev_d_wu,94,6800
    loongarch_lasx_xvaddwev_d_wu_w,95,6884
    loongarch_lasx_xvaddwev_h_b,96,6970
    loongarch_lasx_xvaddwev_h_bu,97,7053
    loongarch_lasx_xvaddwev_h_bu_b,98,7137
    loongarch_lasx_xvaddwev_q_d,99,7223
    loongarch_lasx_xvaddwev_q_du,100,7306
    loongarch_lasx_xvaddwev_q_du_d,101,7390
    loongarch_lasx_xvaddwev_w_h,102,7476
    loongarch_lasx_xvaddwev_w_hu,103,7559
    loongarch_lasx_xvaddwev_w_hu_h,104,7643
    loongarch_lasx_xvaddwod_d_w,105,7729
    loongarch_lasx_xvaddwod_d_wu,106,7812
    loongarch_lasx_xvaddwod_d_wu_w,107,7896
    loongarch_lasx_xvaddwod_h_b,108,7982
    loongarch_lasx_xvaddwod_h_bu,109,8065
    loongarch_lasx_xvaddwod_h_bu_b,110,8149
    loongarch_lasx_xvaddwod_q_d,111,8235
    loongarch_lasx_xvaddwod_q_du,112,8318
    loongarch_lasx_xvaddwod_q_du_d,113,8402
    loongarch_lasx_xvaddwod_w_h,114,8488
    loongarch_lasx_xvaddwod_w_hu,115,8571
    loongarch_lasx_xvaddwod_w_hu_h,116,8655
    loongarch_lasx_xvand_v,117,8741
    loongarch_lasx_xvandi_b,118,8819
    loongarch_lasx_xvandn_v,119,8898
    loongarch_lasx_xvavg_b,120,8977
    loongarch_lasx_xvavg_bu,121,9055
    loongarch_lasx_xvavg_d,122,9134
    loongarch_lasx_xvavg_du,123,9212
    loongarch_lasx_xvavg_h,124,9291
    loongarch_lasx_xvavg_hu,125,9369
    loongarch_lasx_xvavg_w,126,9448
    loongarch_lasx_xvavg_wu,127,9526
    loongarch_lasx_xvavgr_b,128,9605
    loongarch_lasx_xvavgr_bu,129,9684
    loongarch_lasx_xvavgr_d,130,9764
    loongarch_lasx_xvavgr_du,131,9843
    loongarch_lasx_xvavgr_h,132,9923
    loongarch_lasx_xvavgr_hu,133,10002
    loongarch_lasx_xvavgr_w,134,10082
    loongarch_lasx_xvavgr_wu,135,10161
    loongarch_lasx_xvbitclr_b,136,10241
    loongarch_lasx_xvbitclr_d,137,10322
    loongarch_lasx_xvbitclr_h,138,10403
    loongarch_lasx_xvbitclr_w,139,10484
    loongarch_lasx_xvbitclri_b,140,10565
    loongarch_lasx_xvbitclri_d,141,10647
    loongarch_lasx_xvbitclri_h,142,10729
    loongarch_lasx_xvbitclri_w,143,10811
    loongarch_lasx_xvbitrev_b,144,10893
    loongarch_lasx_xvbitrev_d,145,10974
    loongarch_lasx_xvbitrev_h,146,11055
    loongarch_lasx_xvbitrev_w,147,11136
    loongarch_lasx_xvbitrevi_b,148,11217
    loongarch_lasx_xvbitrevi_d,149,11299
    loongarch_lasx_xvbitrevi_h,150,11381
    loongarch_lasx_xvbitrevi_w,151,11463
    loongarch_lasx_xvbitsel_v,152,11545
    loongarch_lasx_xvbitseli_b,153,11626
    loongarch_lasx_xvbitset_b,154,11708
    loongarch_lasx_xvbitset_d,155,11789
    loongarch_lasx_xvbitset_h,156,11870
    loongarch_lasx_xvbitset_w,157,11951
    loongarch_lasx_xvbitseti_b,158,12032
    loongarch_lasx_xvbitseti_d,159,12114
    loongarch_lasx_xvbitseti_h,160,12196
    loongarch_lasx_xvbitseti_w,161,12278
    loongarch_lasx_xvbsll_v,162,12360
    loongarch_lasx_xvbsrl_v,163,12439
    loongarch_lasx_xvclo_b,164,12518
    loongarch_lasx_xvclo_d,165,12596
    loongarch_lasx_xvclo_h,166,12674
    loongarch_lasx_xvclo_w,167,12752
    loongarch_lasx_xvclz_b,168,12830
    loongarch_lasx_xvclz_d,169,12908
    loongarch_lasx_xvclz_h,170,12986
    loongarch_lasx_xvclz_w,171,13064
    loongarch_lasx_xvdiv_b,172,13142
    loongarch_lasx_xvdiv_bu,173,13220
    loongarch_lasx_xvdiv_d,174,13299
    loongarch_lasx_xvdiv_du,175,13377
    loongarch_lasx_xvdiv_h,176,13456
    loongarch_lasx_xvdiv_hu,177,13534
    loongarch_lasx_xvdiv_w,178,13613
    loongarch_lasx_xvdiv_wu,179,13691
    loongarch_lasx_xvexth_d_w,180,13770
    loongarch_lasx_xvexth_du_wu,181,13851
    loongarch_lasx_xvexth_h_b,182,13934
    loongarch_lasx_xvexth_hu_bu,183,14015
    loongarch_lasx_xvexth_q_d,184,14098
    loongarch_lasx_xvexth_qu_du,185,14179
    loongarch_lasx_xvexth_w_h,186,14262
    loongarch_lasx_xvexth_wu_hu,187,14343
    loongarch_lasx_xvextl_q_d,188,14426
    loongarch_lasx_xvextl_qu_du,189,14507
    loongarch_lasx_xvextrins_b,190,14590
    loongarch_lasx_xvextrins_d,191,14672
    loongarch_lasx_xvextrins_h,192,14754
    loongarch_lasx_xvextrins_w,193,14836
    loongarch_lasx_xvfadd_d,194,14918
    loongarch_lasx_xvfadd_s,195,14997
    loongarch_lasx_xvfclass_d,196,15076
    loongarch_lasx_xvfclass_s,197,15157
    loongarch_lasx_xvfcmp_caf_d,198,15238
    loongarch_lasx_xvfcmp_caf_s,199,15321
    loongarch_lasx_xvfcmp_ceq_d,200,15404
    loongarch_lasx_xvfcmp_ceq_s,201,15487
    loongarch_lasx_xvfcmp_cle_d,202,15570
    loongarch_lasx_xvfcmp_cle_s,203,15653
    loongarch_lasx_xvfcmp_clt_d,204,15736
    loongarch_lasx_xvfcmp_clt_s,205,15819
    loongarch_lasx_xvfcmp_cne_d,206,15902
    loongarch_lasx_xvfcmp_cne_s,207,15985
    loongarch_lasx_xvfcmp_cor_d,208,16068
    loongarch_lasx_xvfcmp_cor_s,209,16151
    loongarch_lasx_xvfcmp_cueq_d,210,16234
    loongarch_lasx_xvfcmp_cueq_s,211,16318
    loongarch_lasx_xvfcmp_cule_d,212,16402
    loongarch_lasx_xvfcmp_cule_s,213,16486
    loongarch_lasx_xvfcmp_cult_d,214,16570
    loongarch_lasx_xvfcmp_cult_s,215,16654
    loongarch_lasx_xvfcmp_cun_d,216,16738
    loongarch_lasx_xvfcmp_cun_s,217,16821
    loongarch_lasx_xvfcmp_cune_d,218,16904
    loongarch_lasx_xvfcmp_cune_s,219,16988
    loongarch_lasx_xvfcmp_saf_d,220,17072
    loongarch_lasx_xvfcmp_saf_s,221,17155
    loongarch_lasx_xvfcmp_seq_d,222,17238
    loongarch_lasx_xvfcmp_seq_s,223,17321
    loongarch_lasx_xvfcmp_sle_d,224,17404
    loongarch_lasx_xvfcmp_sle_s,225,17487
    loongarch_lasx_xvfcmp_slt_d,226,17570
    loongarch_lasx_xvfcmp_slt_s,227,17653
    loongarch_lasx_xvfcmp_sne_d,228,17736
    loongarch_lasx_xvfcmp_sne_s,229,17819
    loongarch_lasx_xvfcmp_sor_d,230,17902
    loongarch_lasx_xvfcmp_sor_s,231,17985
    loongarch_lasx_xvfcmp_sueq_d,232,18068
    loongarch_lasx_xvfcmp_sueq_s,233,18152
    loongarch_lasx_xvfcmp_sule_d,234,18236
    loongarch_lasx_xvfcmp_sule_s,235,18320
    loongarch_lasx_xvfcmp_sult_d,236,18404
    loongarch_lasx_xvfcmp_sult_s,237,18488
    loongarch_lasx_xvfcmp_sun_d,238,18572
    loongarch_lasx_xvfcmp_sun_s,239,18655
    loongarch_lasx_xvfcmp_sune_d,240,18738
    loongarch_lasx_xvfcmp_sune_s,241,18822
    loongarch_lasx_xvfcvt_h_s,242,18906
    loongarch_lasx_xvfcvt_s_d,243,18987
    loongarch_lasx_xvfcvth_d_s,244,19068
    loongarch_lasx_xvfcvth_s_h,245,19150
    loongarch_lasx_xvfcvtl_d_s,246,19232
    loongarch_lasx_xvfcvtl_s_h,247,19314
    loongarch_lasx_xvfdiv_d,248,19396
    loongarch_lasx_xvfdiv_s,249,19475
    loongarch_lasx_xvffint_d_l,250,19554
    loongarch_lasx_xvffint_d_lu,251,19636
    loongarch_lasx_xvffint_s_l,252,19719
    loongarch_lasx_xvffint_s_w,253,19801
    loongarch_lasx_xvffint_s_wu,254,19883
    loongarch_lasx_xvffinth_d_w,255,19966
    loongarch_lasx_xvffintl_d_w,256,20049
    loongarch_lasx_xvflogb_d,257,20132
    loongarch_lasx_xvflogb_s,258,20212
    loongarch_lasx_xvfmadd_d,259,20292
    loongarch_lasx_xvfmadd_s,260,20372
    loongarch_lasx_xvfmax_d,261,20452
    loongarch_lasx_xvfmax_s,262,20531
    loongarch_lasx_xvfmaxa_d,263,20610
    loongarch_lasx_xvfmaxa_s,264,20690
    loongarch_lasx_xvfmin_d,265,20770
    loongarch_lasx_xvfmin_s,266,20849
    loongarch_lasx_xvfmina_d,267,20928
    loongarch_lasx_xvfmina_s,268,21008
    loongarch_lasx_xvfmsub_d,269,21088
    loongarch_lasx_xvfmsub_s,270,21168
    loongarch_lasx_xvfmul_d,271,21248
    loongarch_lasx_xvfmul_s,272,21327
    loongarch_lasx_xvfnmadd_d,273,21406
    loongarch_lasx_xvfnmadd_s,274,21487
    loongarch_lasx_xvfnmsub_d,275,21568
    loongarch_lasx_xvfnmsub_s,276,21649
    loongarch_lasx_xvfrecip_d,277,21730
    loongarch_lasx_xvfrecip_s,278,21811
    loongarch_lasx_xvfrecipe_d,279,21892
    loongarch_lasx_xvfrecipe_s,280,21974
    loongarch_lasx_xvfrint_d,281,22056
    loongarch_lasx_xvfrint_s,282,22136
    loongarch_lasx_xvfrintrm_d,283,22216
    loongarch_lasx_xvfrintrm_s,284,22298
    loongarch_lasx_xvfrintrne_d,285,22380
    loongarch_lasx_xvfrintrne_s,286,22463
    loongarch_lasx_xvfrintrp_d,287,22546
    loongarch_lasx_xvfrintrp_s,288,22628
    loongarch_lasx_xvfrintrz_d,289,22710
    loongarch_lasx_xvfrintrz_s,290,22792
    loongarch_lasx_xvfrsqrt_d,291,22874
    loongarch_lasx_xvfrsqrt_s,292,22955
    loongarch_lasx_xvfrsqrte_d,293,23036
    loongarch_lasx_xvfrsqrte_s,294,23118
    loongarch_lasx_xvfrstp_b,295,23200
    loongarch_lasx_xvfrstp_h,296,23280
    loongarch_lasx_xvfrstpi_b,297,23360
    loongarch_lasx_xvfrstpi_h,298,23441
    loongarch_lasx_xvfsqrt_d,299,23522
    loongarch_lasx_xvfsqrt_s,300,23602
    loongarch_lasx_xvfsub_d,301,23682
    loongarch_lasx_xvfsub_s,302,23761
    loongarch_lasx_xvftint_l_d,303,23840
    loongarch_lasx_xvftint_lu_d,304,23922
    loongarch_lasx_xvftint_w_d,305,24005
    loongarch_lasx_xvftint_w_s,306,24087
    loongarch_lasx_xvftint_wu_s,307,24169
    loongarch_lasx_xvftinth_l_s,308,24252
    loongarch_lasx_xvftintl_l_s,309,24335
    loongarch_lasx_xvftintrm_l_d,310,24418
    loongarch_lasx_xvftintrm_w_d,311,24502
    loongarch_lasx_xvftintrm_w_s,312,24586
    loongarch_lasx_xvftintrmh_l_s,313,24670
    loongarch_lasx_xvftintrml_l_s,314,24755
    loongarch_lasx_xvftintrne_l_d,315,24840
    loongarch_lasx_xvftintrne_w_d,316,24925
    loongarch_lasx_xvftintrne_w_s,317,25010
    loongarch_lasx_xvftintrneh_l_s,318,25095
    loongarch_lasx_xvftintrnel_l_s,319,25181
    loongarch_lasx_xvftintrp_l_d,320,25267
    loongarch_lasx_xvftintrp_w_d,321,25351
    loongarch_lasx_xvftintrp_w_s,322,25435
    loongarch_lasx_xvftintrph_l_s,323,25519
    loongarch_lasx_xvftintrpl_l_s,324,25604
    loongarch_lasx_xvftintrz_l_d,325,25689
    loongarch_lasx_xvftintrz_lu_d,326,25773
    loongarch_lasx_xvftintrz_w_d,327,25858
    loongarch_lasx_xvftintrz_w_s,328,25942
    loongarch_lasx_xvftintrz_wu_s,329,26026
    loongarch_lasx_xvftintrzh_l_s,330,26111
    loongarch_lasx_xvftintrzl_l_s,331,26196
    loongarch_lasx_xvhaddw_d_w,332,26281
    loongarch_lasx_xvhaddw_du_wu,333,26363
    loongarch_lasx_xvhaddw_h_b,334,26447
    loongarch_lasx_xvhaddw_hu_bu,335,26529
    loongarch_lasx_xvhaddw_q_d,336,26613
    loongarch_lasx_xvhaddw_qu_du,337,26695
    loongarch_lasx_xvhaddw_w_h,338,26779
    loongarch_lasx_xvhaddw_wu_hu,339,26861
    loongarch_lasx_xvhsubw_d_w,340,26945
    loongarch_lasx_xvhsubw_du_wu,341,27027
    loongarch_lasx_xvhsubw_h_b,342,27111
    loongarch_lasx_xvhsubw_hu_bu,343,27193
    loongarch_lasx_xvhsubw_q_d,344,27277
    loongarch_lasx_xvhsubw_qu_du,345,27359
    loongarch_lasx_xvhsubw_w_h,346,27443
    loongarch_lasx_xvhsubw_wu_hu,347,27525
    loongarch_lasx_xvilvh_b,348,27609
    loongarch_lasx_xvilvh_d,349,27688
    loongarch_lasx_xvilvh_h,350,27767
    loongarch_lasx_xvilvh_w,351,27846
    loongarch_lasx_xvilvl_b,352,27925
    loongarch_lasx_xvilvl_d,353,28004
    loongarch_lasx_xvilvl_h,354,28083
    loongarch_lasx_xvilvl_w,355,28162
    loongarch_lasx_xvinsgr2vr_d,356,28241
    loongarch_lasx_xvinsgr2vr_w,357,28324
    loongarch_lasx_xvinsve0_d,358,28407
    loongarch_lasx_xvinsve0_w,359,28488
    loongarch_lasx_xvld,360,28569
    loongarch_lasx_xvldi,361,28644
    loongarch_lasx_xvldrepl_b,362,28720
    loongarch_lasx_xvldrepl_d,363,28801
    loongarch_lasx_xvldrepl_h,364,28882
    loongarch_lasx_xvldrepl_w,365,28963
    loongarch_lasx_xvldx,366,29044
    loongarch_lasx_xvmadd_b,367,29120
    loongarch_lasx_xvmadd_d,368,29199
    loongarch_lasx_xvmadd_h,369,29278
    loongarch_lasx_xvmadd_w,370,29357
    loongarch_lasx_xvmaddwev_d_w,371,29436
    loongarch_lasx_xvmaddwev_d_wu,372,29520
    loongarch_lasx_xvmaddwev_d_wu_w,373,29605
    loongarch_lasx_xvmaddwev_h_b,374,29692
    loongarch_lasx_xvmaddwev_h_bu,375,29776
    loongarch_lasx_xvmaddwev_h_bu_b,376,29861
    loongarch_lasx_xvmaddwev_q_d,377,29948
    loongarch_lasx_xvmaddwev_q_du,378,30032
    loongarch_lasx_xvmaddwev_q_du_d,379,30117
    loongarch_lasx_xvmaddwev_w_h,380,30204
    loongarch_lasx_xvmaddwev_w_hu,381,30288
    loongarch_lasx_xvmaddwev_w_hu_h,382,30373
    loongarch_lasx_xvmaddwod_d_w,383,30460
    loongarch_lasx_xvmaddwod_d_wu,384,30544
    loongarch_lasx_xvmaddwod_d_wu_w,385,30629
    loongarch_lasx_xvmaddwod_h_b,386,30716
    loongarch_lasx_xvmaddwod_h_bu,387,30800
    loongarch_lasx_xvmaddwod_h_bu_b,388,30885
    loongarch_lasx_xvmaddwod_q_d,389,30972
    loongarch_lasx_xvmaddwod_q_du,390,31056
    loongarch_lasx_xvmaddwod_q_du_d,391,31141
    loongarch_lasx_xvmaddwod_w_h,392,31228
    loongarch_lasx_xvmaddwod_w_hu,393,31312
    loongarch_lasx_xvmaddwod_w_hu_h,394,31397
    loongarch_lasx_xvmax_b,395,31484
    loongarch_lasx_xvmax_bu,396,31562
    loongarch_lasx_xvmax_d,397,31641
    loongarch_lasx_xvmax_du,398,31719
    loongarch_lasx_xvmax_h,399,31798
    loongarch_lasx_xvmax_hu,400,31876
    loongarch_lasx_xvmax_w,401,31955
    loongarch_lasx_xvmax_wu,402,32033
    loongarch_lasx_xvmaxi_b,403,32112
    loongarch_lasx_xvmaxi_bu,404,32191
    loongarch_lasx_xvmaxi_d,405,32271
    loongarch_lasx_xvmaxi_du,406,32350
    loongarch_lasx_xvmaxi_h,407,32430
    loongarch_lasx_xvmaxi_hu,408,32509
    loongarch_lasx_xvmaxi_w,409,32589
    loongarch_lasx_xvmaxi_wu,410,32668
    loongarch_lasx_xvmin_b,411,32748
    loongarch_lasx_xvmin_bu,412,32826
    loongarch_lasx_xvmin_d,413,32905
    loongarch_lasx_xvmin_du,414,32983
    loongarch_lasx_xvmin_h,415,33062
    loongarch_lasx_xvmin_hu,416,33140
    loongarch_lasx_xvmin_w,417,33219
    loongarch_lasx_xvmin_wu,418,33297
    loongarch_lasx_xvmini_b,419,33376
    loongarch_lasx_xvmini_bu,420,33455
    loongarch_lasx_xvmini_d,421,33535
    loongarch_lasx_xvmini_du,422,33614
    loongarch_lasx_xvmini_h,423,33694
    loongarch_lasx_xvmini_hu,424,33773
    loongarch_lasx_xvmini_w,425,33853
    loongarch_lasx_xvmini_wu,426,33932
    loongarch_lasx_xvmod_b,427,34012
    loongarch_lasx_xvmod_bu,428,34090
    loongarch_lasx_xvmod_d,429,34169
    loongarch_lasx_xvmod_du,430,34247
    loongarch_lasx_xvmod_h,431,34326
    loongarch_lasx_xvmod_hu,432,34404
    loongarch_lasx_xvmod_w,433,34483
    loongarch_lasx_xvmod_wu,434,34561
    loongarch_lasx_xvmskgez_b,435,34640
    loongarch_lasx_xvmskltz_b,436,34721
    loongarch_lasx_xvmskltz_d,437,34802
    loongarch_lasx_xvmskltz_h,438,34883
    loongarch_lasx_xvmskltz_w,439,34964
    loongarch_lasx_xvmsknz_b,440,35045
    loongarch_lasx_xvmsub_b,441,35125
    loongarch_lasx_xvmsub_d,442,35204
    loongarch_lasx_xvmsub_h,443,35283
    loongarch_lasx_xvmsub_w,444,35362
    loongarch_lasx_xvmuh_b,445,35441
    loongarch_lasx_xvmuh_bu,446,35519
    loongarch_lasx_xvmuh_d,447,35598
    loongarch_lasx_xvmuh_du,448,35676
    loongarch_lasx_xvmuh_h,449,35755
    loongarch_lasx_xvmuh_hu,450,35833
    loongarch_lasx_xvmuh_w,451,35912
    loongarch_lasx_xvmuh_wu,452,35990
    loongarch_lasx_xvmul_b,453,36069
    loongarch_lasx_xvmul_d,454,36147
    loongarch_lasx_xvmul_h,455,36225
    loongarch_lasx_xvmul_w,456,36303
    loongarch_lasx_xvmulwev_d_w,457,36381
    loongarch_lasx_xvmulwev_d_wu,458,36464
    loongarch_lasx_xvmulwev_d_wu_w,459,36548
    loongarch_lasx_xvmulwev_h_b,460,36634
    loongarch_lasx_xvmulwev_h_bu,461,36717
    loongarch_lasx_xvmulwev_h_bu_b,462,36801
    loongarch_lasx_xvmulwev_q_d,463,36887
    loongarch_lasx_xvmulwev_q_du,464,36970
    loongarch_lasx_xvmulwev_q_du_d,465,37054
    loongarch_lasx_xvmulwev_w_h,466,37140
    loongarch_lasx_xvmulwev_w_hu,467,37223
    loongarch_lasx_xvmulwev_w_hu_h,468,37307
    loongarch_lasx_xvmulwod_d_w,469,37393
    loongarch_lasx_xvmulwod_d_wu,470,37476
    loongarch_lasx_xvmulwod_d_wu_w,471,37560
    loongarch_lasx_xvmulwod_h_b,472,37646
    loongarch_lasx_xvmulwod_h_bu,473,37729
    loongarch_lasx_xvmulwod_h_bu_b,474,37813
    loongarch_lasx_xvmulwod_q_d,475,37899
    loongarch_lasx_xvmulwod_q_du,476,37982
    loongarch_lasx_xvmulwod_q_du_d,477,38066
    loongarch_lasx_xvmulwod_w_h,478,38152
    loongarch_lasx_xvmulwod_w_hu,479,38235
    loongarch_lasx_xvmulwod_w_hu_h,480,38319
    loongarch_lasx_xvneg_b,481,38405
    loongarch_lasx_xvneg_d,482,38483
    loongarch_lasx_xvneg_h,483,38561
    loongarch_lasx_xvneg_w,484,38639
    loongarch_lasx_xvnor_v,485,38717
    loongarch_lasx_xvnori_b,486,38795
    loongarch_lasx_xvor_v,487,38874
    loongarch_lasx_xvori_b,488,38951
    loongarch_lasx_xvorn_v,489,39029
    loongarch_lasx_xvpackev_b,490,39107
    loongarch_lasx_xvpackev_d,491,39188
    loongarch_lasx_xvpackev_h,492,39269
    loongarch_lasx_xvpackev_w,493,39350
    loongarch_lasx_xvpackod_b,494,39431
    loongarch_lasx_xvpackod_d,495,39512
    loongarch_lasx_xvpackod_h,496,39593
    loongarch_lasx_xvpackod_w,497,39674
    loongarch_lasx_xvpcnt_b,498,39755
    loongarch_lasx_xvpcnt_d,499,39834
    loongarch_lasx_xvpcnt_h,500,39913
    loongarch_lasx_xvpcnt_w,501,39992
    loongarch_lasx_xvperm_w,502,40071
    loongarch_lasx_xvpermi_d,503,40150
    loongarch_lasx_xvpermi_q,504,40230
    loongarch_lasx_xvpermi_w,505,40310
    loongarch_lasx_xvpickev_b,506,40390
    loongarch_lasx_xvpickev_d,507,40471
    loongarch_lasx_xvpickev_h,508,40552
    loongarch_lasx_xvpickev_w,509,40633
    loongarch_lasx_xvpickod_b,510,40714
    loongarch_lasx_xvpickod_d,511,40795
    loongarch_lasx_xvpickod_h,512,40876
    loongarch_lasx_xvpickod_w,513,40957
    loongarch_lasx_xvpickve_d,514,41038
    loongarch_lasx_xvpickve_d_f,515,41119
    loongarch_lasx_xvpickve_w,516,41202
    loongarch_lasx_xvpickve_w_f,517,41283
    loongarch_lasx_xvpickve2gr_d,518,41366
    loongarch_lasx_xvpickve2gr_du,519,41450
    loongarch_lasx_xvpickve2gr_w,520,41535
    loongarch_lasx_xvpickve2gr_wu,521,41619
    loongarch_lasx_xvrepl128vei_b,522,41704
    loongarch_lasx_xvrepl128vei_d,523,41789
    loongarch_lasx_xvrepl128vei_h,524,41874
    loongarch_lasx_xvrepl128vei_w,525,41959
    loongarch_lasx_xvreplgr2vr_b,526,42044
    loongarch_lasx_xvreplgr2vr_d,527,42128
    loongarch_lasx_xvreplgr2vr_h,528,42212
    loongarch_lasx_xvreplgr2vr_w,529,42296
    loongarch_lasx_xvrepli_b,530,42380
    loongarch_lasx_xvrepli_d,531,42460
    loongarch_lasx_xvrepli_h,532,42540
    loongarch_lasx_xvrepli_w,533,42620
    loongarch_lasx_xvreplve_b,534,42700
    loongarch_lasx_xvreplve_d,535,42781
    loongarch_lasx_xvreplve_h,536,42862
    loongarch_lasx_xvreplve_w,537,42943
    loongarch_lasx_xvreplve0_b,538,43024
    loongarch_lasx_xvreplve0_d,539,43106
    loongarch_lasx_xvreplve0_h,540,43188
    loongarch_lasx_xvreplve0_q,541,43270
    loongarch_lasx_xvreplve0_w,542,43352
    loongarch_lasx_xvrotr_b,543,43434
    loongarch_lasx_xvrotr_d,544,43513
    loongarch_lasx_xvrotr_h,545,43592
    loongarch_lasx_xvrotr_w,546,43671
    loongarch_lasx_xvrotri_b,547,43750
    loongarch_lasx_xvrotri_d,548,43830
    loongarch_lasx_xvrotri_h,549,43910
    loongarch_lasx_xvrotri_w,550,43990
    loongarch_lasx_xvsadd_b,551,44070
    loongarch_lasx_xvsadd_bu,552,44149
    loongarch_lasx_xvsadd_d,553,44229
    loongarch_lasx_xvsadd_du,554,44308
    loongarch_lasx_xvsadd_h,555,44388
    loongarch_lasx_xvsadd_hu,556,44467
    loongarch_lasx_xvsadd_w,557,44547
    loongarch_lasx_xvsadd_wu,558,44626
    loongarch_lasx_xvsat_b,559,44706
    loongarch_lasx_xvsat_bu,560,44784
    loongarch_lasx_xvsat_d,561,44863
    loongarch_lasx_xvsat_du,562,44941
    loongarch_lasx_xvsat_h,563,45020
    loongarch_lasx_xvsat_hu,564,45098
    loongarch_lasx_xvsat_w,565,45177
    loongarch_lasx_xvsat_wu,566,45255
    loongarch_lasx_xvseq_b,567,45334
    loongarch_lasx_xvseq_d,568,45412
    loongarch_lasx_xvseq_h,569,45490
    loongarch_lasx_xvseq_w,570,45568
    loongarch_lasx_xvseqi_b,571,45646
    loongarch_lasx_xvseqi_d,572,45725
    loongarch_lasx_xvseqi_h,573,45804
    loongarch_lasx_xvseqi_w,574,45883
    loongarch_lasx_xvshuf_b,575,45962
    loongarch_lasx_xvshuf_d,576,46041
    loongarch_lasx_xvshuf_h,577,46120
    loongarch_lasx_xvshuf_w,578,46199
    loongarch_lasx_xvshuf4i_b,579,46278
    loongarch_lasx_xvshuf4i_d,580,46359
    loongarch_lasx_xvshuf4i_h,581,46440
    loongarch_lasx_xvshuf4i_w,582,46521
    loongarch_lasx_xvsigncov_b,583,46602
    loongarch_lasx_xvsigncov_d,584,46684
    loongarch_lasx_xvsigncov_h,585,46766
    loongarch_lasx_xvsigncov_w,586,46848
    loongarch_lasx_xvsle_b,587,46930
    loongarch_lasx_xvsle_bu,588,47008
    loongarch_lasx_xvsle_d,589,47087
    loongarch_lasx_xvsle_du,590,47165
    loongarch_lasx_xvsle_h,591,47244
    loongarch_lasx_xvsle_hu,592,47322
    loongarch_lasx_xvsle_w,593,47401
    loongarch_lasx_xvsle_wu,594,47479
    loongarch_lasx_xvslei_b,595,47558
    loongarch_lasx_xvslei_bu,596,47637
    loongarch_lasx_xvslei_d,597,47717
    loongarch_lasx_xvslei_du,598,47796
    loongarch_lasx_xvslei_h,599,47876
    loongarch_lasx_xvslei_hu,600,47955
    loongarch_lasx_xvslei_w,601,48035
    loongarch_lasx_xvslei_wu,602,48114
    loongarch_lasx_xvsll_b,603,48194
    loongarch_lasx_xvsll_d,604,48272
    loongarch_lasx_xvsll_h,605,48350
    loongarch_lasx_xvsll_w,606,48428
    loongarch_lasx_xvslli_b,607,48506
    loongarch_lasx_xvslli_d,608,48585
    loongarch_lasx_xvslli_h,609,48664
    loongarch_lasx_xvslli_w,610,48743
    loongarch_lasx_xvsllwil_d_w,611,48822
    loongarch_lasx_xvsllwil_du_wu,612,48905
    loongarch_lasx_xvsllwil_h_b,613,48990
    loongarch_lasx_xvsllwil_hu_bu,614,49073
    loongarch_lasx_xvsllwil_w_h,615,49158
    loongarch_lasx_xvsllwil_wu_hu,616,49241
    loongarch_lasx_xvslt_b,617,49326
    loongarch_lasx_xvslt_bu,618,49404
    loongarch_lasx_xvslt_d,619,49483
    loongarch_lasx_xvslt_du,620,49561
    loongarch_lasx_xvslt_h,621,49640
    loongarch_lasx_xvslt_hu,622,49718
    loongarch_lasx_xvslt_w,623,49797
    loongarch_lasx_xvslt_wu,624,49875
    loongarch_lasx_xvslti_b,625,49954
    loongarch_lasx_xvslti_bu,626,50033
    loongarch_lasx_xvslti_d,627,50113
    loongarch_lasx_xvslti_du,628,50192
    loongarch_lasx_xvslti_h,629,50272
    loongarch_lasx_xvslti_hu,630,50351
    loongarch_lasx_xvslti_w,631,50431
    loongarch_lasx_xvslti_wu,632,50510
    loongarch_lasx_xvsra_b,633,50590
    loongarch_lasx_xvsra_d,634,50668
    loongarch_lasx_xvsra_h,635,50746
    loongarch_lasx_xvsra_w,636,50824
    loongarch_lasx_xvsrai_b,637,50902
    loongarch_lasx_xvsrai_d,638,50981
    loongarch_lasx_xvsrai_h,639,51060
    loongarch_lasx_xvsrai_w,640,51139
    loongarch_lasx_xvsran_b_h,641,51218
    loongarch_lasx_xvsran_h_w,642,51299
    loongarch_lasx_xvsran_w_d,643,51380
    loongarch_lasx_xvsrani_b_h,644,51461
    loongarch_lasx_xvsrani_d_q,645,51543
    loongarch_lasx_xvsrani_h_w,646,51625
    loongarch_lasx_xvsrani_w_d,647,51707
    loongarch_lasx_xvsrar_b,648,51789
    loongarch_lasx_xvsrar_d,649,51868
    loongarch_lasx_xvsrar_h,650,51947
    loongarch_lasx_xvsrar_w,651,52026
    loongarch_lasx_xvsrari_b,652,52105
    loongarch_lasx_xvsrari_d,653,52185
    loongarch_lasx_xvsrari_h,654,52265
    loongarch_lasx_xvsrari_w,655,52345
    loongarch_lasx_xvsrarn_b_h,656,52425
    loongarch_lasx_xvsrarn_h_w,657,52507
    loongarch_lasx_xvsrarn_w_d,658,52589
    loongarch_lasx_xvsrarni_b_h,659,52671
    loongarch_lasx_xvsrarni_d_q,660,52754
    loongarch_lasx_xvsrarni_h_w,661,52837
    loongarch_lasx_xvsrarni_w_d,662,52920
    loongarch_lasx_xvsrl_b,663,53003
    loongarch_lasx_xvsrl_d,664,53081
    loongarch_lasx_xvsrl_h,665,53159
    loongarch_lasx_xvsrl_w,666,53237
    loongarch_lasx_xvsrli_b,667,53315
    loongarch_lasx_xvsrli_d,668,53394
    loongarch_lasx_xvsrli_h,669,53473
    loongarch_lasx_xvsrli_w,670,53552
    loongarch_lasx_xvsrln_b_h,671,53631
    loongarch_lasx_xvsrln_h_w,672,53712
    loongarch_lasx_xvsrln_w_d,673,53793
    loongarch_lasx_xvsrlni_b_h,674,53874
    loongarch_lasx_xvsrlni_d_q,675,53956
    loongarch_lasx_xvsrlni_h_w,676,54038
    loongarch_lasx_xvsrlni_w_d,677,54120
    loongarch_lasx_xvsrlr_b,678,54202
    loongarch_lasx_xvsrlr_d,679,54281
    loongarch_lasx_xvsrlr_h,680,54360
    loongarch_lasx_xvsrlr_w,681,54439
    loongarch_lasx_xvsrlri_b,682,54518
    loongarch_lasx_xvsrlri_d,683,54598
    loongarch_lasx_xvsrlri_h,684,54678
    loongarch_lasx_xvsrlri_w,685,54758
    loongarch_lasx_xvsrlrn_b_h,686,54838
    loongarch_lasx_xvsrlrn_h_w,687,54920
    loongarch_lasx_xvsrlrn_w_d,688,55002
    loongarch_lasx_xvsrlrni_b_h,689,55084
    loongarch_lasx_xvsrlrni_d_q,690,55167
    loongarch_lasx_xvsrlrni_h_w,691,55250
    loongarch_lasx_xvsrlrni_w_d,692,55333
    loongarch_lasx_xvssran_b_h,693,55416
    loongarch_lasx_xvssran_bu_h,694,55498
    loongarch_lasx_xvssran_h_w,695,55581
    loongarch_lasx_xvssran_hu_w,696,55663
    loongarch_lasx_xvssran_w_d,697,55746
    loongarch_lasx_xvssran_wu_d,698,55828
    loongarch_lasx_xvssrani_b_h,699,55911
    loongarch_lasx_xvssrani_bu_h,700,55994
    loongarch_lasx_xvssrani_d_q,701,56078
    loongarch_lasx_xvssrani_du_q,702,56161
    loongarch_lasx_xvssrani_h_w,703,56245
    loongarch_lasx_xvssrani_hu_w,704,56328
    loongarch_lasx_xvssrani_w_d,705,56412
    loongarch_lasx_xvssrani_wu_d,706,56495
    loongarch_lasx_xvssrarn_b_h,707,56579
    loongarch_lasx_xvssrarn_bu_h,708,56662
    loongarch_lasx_xvssrarn_h_w,709,56746
    loongarch_lasx_xvssrarn_hu_w,710,56829
    loongarch_lasx_xvssrarn_w_d,711,56913
    loongarch_lasx_xvssrarn_wu_d,712,56996
    loongarch_lasx_xvssrarni_b_h,713,57080
    loongarch_lasx_xvssrarni_bu_h,714,57164
    loongarch_lasx_xvssrarni_d_q,715,57249
    loongarch_lasx_xvssrarni_du_q,716,57333
    loongarch_lasx_xvssrarni_h_w,717,57418
    loongarch_lasx_xvssrarni_hu_w,718,57502
    loongarch_lasx_xvssrarni_w_d,719,57587
    loongarch_lasx_xvssrarni_wu_d,720,57671
    loongarch_lasx_xvssrln_b_h,721,57756
    loongarch_lasx_xvssrln_bu_h,722,57838
    loongarch_lasx_xvssrln_h_w,723,57921
    loongarch_lasx_xvssrln_hu_w,724,58003
    loongarch_lasx_xvssrln_w_d,725,58086
    loongarch_lasx_xvssrln_wu_d,726,58168
    loongarch_lasx_xvssrlni_b_h,727,58251
    loongarch_lasx_xvssrlni_bu_h,728,58334
    loongarch_lasx_xvssrlni_d_q,729,58418
    loongarch_lasx_xvssrlni_du_q,730,58501
    loongarch_lasx_xvssrlni_h_w,731,58585
    loongarch_lasx_xvssrlni_hu_w,732,58668
    loongarch_lasx_xvssrlni_w_d,733,58752
    loongarch_lasx_xvssrlni_wu_d,734,58835
    loongarch_lasx_xvssrlrn_b_h,735,58919
    loongarch_lasx_xvssrlrn_bu_h,736,59002
    loongarch_lasx_xvssrlrn_h_w,737,59086
    loongarch_lasx_xvssrlrn_hu_w,738,59169
    loongarch_lasx_xvssrlrn_w_d,739,59253
    loongarch_lasx_xvssrlrn_wu_d,740,59336
    loongarch_lasx_xvssrlrni_b_h,741,59420
    loongarch_lasx_xvssrlrni_bu_h,742,59504
    loongarch_lasx_xvssrlrni_d_q,743,59589
    loongarch_lasx_xvssrlrni_du_q,744,59673
    loongarch_lasx_xvssrlrni_h_w,745,59758
    loongarch_lasx_xvssrlrni_hu_w,746,59842
    loongarch_lasx_xvssrlrni_w_d,747,59927
    loongarch_lasx_xvssrlrni_wu_d,748,60011
    loongarch_lasx_xvssub_b,749,60096
    loongarch_lasx_xvssub_bu,750,60175
    loongarch_lasx_xvssub_d,751,60255
    loongarch_lasx_xvssub_du,752,60334
    loongarch_lasx_xvssub_h,753,60414
    loongarch_lasx_xvssub_hu,754,60493
    loongarch_lasx_xvssub_w,755,60573
    loongarch_lasx_xvssub_wu,756,60652
    loongarch_lasx_xvst,757,60732
    loongarch_lasx_xvstelm_b,758,60807
    loongarch_lasx_xvstelm_d,759,60887
    loongarch_lasx_xvstelm_h,760,60967
    loongarch_lasx_xvstelm_w,761,61047
    loongarch_lasx_xvstx,762,61127
    loongarch_lasx_xvsub_b,763,61203
    loongarch_lasx_xvsub_d,764,61281
    loongarch_lasx_xvsub_h,765,61359
    loongarch_lasx_xvsub_q,766,61437
    loongarch_lasx_xvsub_w,767,61515
    loongarch_lasx_xvsubi_bu,768,61593
    loongarch_lasx_xvsubi_du,769,61673
    loongarch_lasx_xvsubi_hu,770,61753
    loongarch_lasx_xvsubi_wu,771,61833
    loongarch_lasx_xvsubwev_d_w,772,61913
    loongarch_lasx_xvsubwev_d_wu,773,61996
    loongarch_lasx_xvsubwev_h_b,774,62080
    loongarch_lasx_xvsubwev_h_bu,775,62163
    loongarch_lasx_xvsubwev_q_d,776,62247
    loongarch_lasx_xvsubwev_q_du,777,62330
    loongarch_lasx_xvsubwev_w_h,778,62414
    loongarch_lasx_xvsubwev_w_hu,779,62497
    loongarch_lasx_xvsubwod_d_w,780,62581
    loongarch_lasx_xvsubwod_d_wu,781,62664
    loongarch_lasx_xvsubwod_h_b,782,62748
    loongarch_lasx_xvsubwod_h_bu,783,62831
    loongarch_lasx_xvsubwod_q_d,784,62915
    loongarch_lasx_xvsubwod_q_du,785,62998
    loongarch_lasx_xvsubwod_w_h,786,63082
    loongarch_lasx_xvsubwod_w_hu,787,63165
    loongarch_lasx_xvxor_v,788,63249
    loongarch_lasx_xvxori_b,789,63327
    loongarch_lddir_d,790,63406
    loongarch_ldpte_d,791,63479
    loongarch_lsx_bnz_b,792,63552
    loongarch_lsx_bnz_d,793,63627
    loongarch_lsx_bnz_h,794,63702
    loongarch_lsx_bnz_v,795,63777
    loongarch_lsx_bnz_w,796,63852
    loongarch_lsx_bz_b,797,63927
    loongarch_lsx_bz_d,798,64001
    loongarch_lsx_bz_h,799,64075
    loongarch_lsx_bz_v,800,64149
    loongarch_lsx_bz_w,801,64223
    loongarch_lsx_vabsd_b,802,64297
    loongarch_lsx_vabsd_bu,803,64374
    loongarch_lsx_vabsd_d,804,64452
    loongarch_lsx_vabsd_du,805,64529
    loongarch_lsx_vabsd_h,806,64607
    loongarch_lsx_vabsd_hu,807,64684
    loongarch_lsx_vabsd_w,808,64762
    loongarch_lsx_vabsd_wu,809,64839
    loongarch_lsx_vadd_b,810,64917
    loongarch_lsx_vadd_d,811,64993
    loongarch_lsx_vadd_h,812,65069
    loongarch_lsx_vadd_q,813,65145
    loongarch_lsx_vadd_w,814,65221
    loongarch_lsx_vadda_b,815,65297
    loongarch_lsx_vadda_d,816,65374
    loongarch_lsx_vadda_h,817,65451
    loongarch_lsx_vadda_w,818,65528
    loongarch_lsx_vaddi_bu,819,65605
    loongarch_lsx_vaddi_du,820,65683
    loongarch_lsx_vaddi_hu,821,65761
    loongarch_lsx_vaddi_wu,822,65839
    loongarch_lsx_vaddwev_d_w,823,65917
    loongarch_lsx_vaddwev_d_wu,824,65998
    loongarch_lsx_vaddwev_d_wu_w,825,66080
    loongarch_lsx_vaddwev_h_b,826,66164
    loongarch_lsx_vaddwev_h_bu,827,66245
    loongarch_lsx_vaddwev_h_bu_b,828,66327
    loongarch_lsx_vaddwev_q_d,829,66411
    loongarch_lsx_vaddwev_q_du,830,66492
    loongarch_lsx_vaddwev_q_du_d,831,66574
    loongarch_lsx_vaddwev_w_h,832,66658
    loongarch_lsx_vaddwev_w_hu,833,66739
    loongarch_lsx_vaddwev_w_hu_h,834,66821
    loongarch_lsx_vaddwod_d_w,835,66905
    loongarch_lsx_vaddwod_d_wu,836,66986
    loongarch_lsx_vaddwod_d_wu_w,837,67068
    loongarch_lsx_vaddwod_h_b,838,67152
    loongarch_lsx_vaddwod_h_bu,839,67233
    loongarch_lsx_vaddwod_h_bu_b,840,67315
    loongarch_lsx_vaddwod_q_d,841,67399
    loongarch_lsx_vaddwod_q_du,842,67480
    loongarch_lsx_vaddwod_q_du_d,843,67562
    loongarch_lsx_vaddwod_w_h,844,67646
    loongarch_lsx_vaddwod_w_hu,845,67727
    loongarch_lsx_vaddwod_w_hu_h,846,67809
    loongarch_lsx_vand_v,847,67893
    loongarch_lsx_vandi_b,848,67969
    loongarch_lsx_vandn_v,849,68046
    loongarch_lsx_vavg_b,850,68123
    loongarch_lsx_vavg_bu,851,68199
    loongarch_lsx_vavg_d,852,68276
    loongarch_lsx_vavg_du,853,68352
    loongarch_lsx_vavg_h,854,68429
    loongarch_lsx_vavg_hu,855,68505
    loongarch_lsx_vavg_w,856,68582
    loongarch_lsx_vavg_wu,857,68658
    loongarch_lsx_vavgr_b,858,68735
    loongarch_lsx_vavgr_bu,859,68812
    loongarch_lsx_vavgr_d,860,68890
    loongarch_lsx_vavgr_du,861,68967
    loongarch_lsx_vavgr_h,862,69045
    loongarch_lsx_vavgr_hu,863,69122
    loongarch_lsx_vavgr_w,864,69200
    loongarch_lsx_vavgr_wu,865,69277
    loongarch_lsx_vbitclr_b,866,69355
    loongarch_lsx_vbitclr_d,867,69434
    loongarch_lsx_vbitclr_h,868,69513
    loongarch_lsx_vbitclr_w,869,69592
    loongarch_lsx_vbitclri_b,870,69671
    loongarch_lsx_vbitclri_d,871,69751
    loongarch_lsx_vbitclri_h,872,69831
    loongarch_lsx_vbitclri_w,873,69911
    loongarch_lsx_vbitrev_b,874,69991
    loongarch_lsx_vbitrev_d,875,70070
    loongarch_lsx_vbitrev_h,876,70149
    loongarch_lsx_vbitrev_w,877,70228
    loongarch_lsx_vbitrevi_b,878,70307
    loongarch_lsx_vbitrevi_d,879,70387
    loongarch_lsx_vbitrevi_h,880,70467
    loongarch_lsx_vbitrevi_w,881,70547
    loongarch_lsx_vbitsel_v,882,70627
    loongarch_lsx_vbitseli_b,883,70706
    loongarch_lsx_vbitset_b,884,70786
    loongarch_lsx_vbitset_d,885,70865
    loongarch_lsx_vbitset_h,886,70944
    loongarch_lsx_vbitset_w,887,71023
    loongarch_lsx_vbitseti_b,888,71102
    loongarch_lsx_vbitseti_d,889,71182
    loongarch_lsx_vbitseti_h,890,71262
    loongarch_lsx_vbitseti_w,891,71342
    loongarch_lsx_vbsll_v,892,71422
    loongarch_lsx_vbsrl_v,893,71499
    loongarch_lsx_vclo_b,894,71576
    loongarch_lsx_vclo_d,895,71652
    loongarch_lsx_vclo_h,896,71728
    loongarch_lsx_vclo_w,897,71804
    loongarch_lsx_vclz_b,898,71880
    loongarch_lsx_vclz_d,899,71956
    loongarch_lsx_vclz_h,900,72032
    loongarch_lsx_vclz_w,901,72108
    loongarch_lsx_vdiv_b,902,72184
    loongarch_lsx_vdiv_bu,903,72260
    loongarch_lsx_vdiv_d,904,72337
    loongarch_lsx_vdiv_du,905,72413
    loongarch_lsx_vdiv_h,906,72490
    loongarch_lsx_vdiv_hu,907,72566
    loongarch_lsx_vdiv_w,908,72643
    loongarch_lsx_vdiv_wu,909,72719
    loongarch_lsx_vexth_d_w,910,72796
    loongarch_lsx_vexth_du_wu,911,72875
    loongarch_lsx_vexth_h_b,912,72956
    loongarch_lsx_vexth_hu_bu,913,73035
    loongarch_lsx_vexth_q_d,914,73116
    loongarch_lsx_vexth_qu_du,915,73195
    loongarch_lsx_vexth_w_h,916,73276
    loongarch_lsx_vexth_wu_hu,917,73355
    loongarch_lsx_vextl_q_d,918,73436
    loongarch_lsx_vextl_qu_du,919,73515
    loongarch_lsx_vextrins_b,920,73596
    loongarch_lsx_vextrins_d,921,73676
    loongarch_lsx_vextrins_h,922,73756
    loongarch_lsx_vextrins_w,923,73836
    loongarch_lsx_vfadd_d,924,73916
    loongarch_lsx_vfadd_s,925,73993
    loongarch_lsx_vfclass_d,926,74070
    loongarch_lsx_vfclass_s,927,74149
    loongarch_lsx_vfcmp_caf_d,928,74228
    loongarch_lsx_vfcmp_caf_s,929,74309
    loongarch_lsx_vfcmp_ceq_d,930,74390
    loongarch_lsx_vfcmp_ceq_s,931,74471
    loongarch_lsx_vfcmp_cle_d,932,74552
    loongarch_lsx_vfcmp_cle_s,933,74633
    loongarch_lsx_vfcmp_clt_d,934,74714
    loongarch_lsx_vfcmp_clt_s,935,74795
    loongarch_lsx_vfcmp_cne_d,936,74876
    loongarch_lsx_vfcmp_cne_s,937,74957
    loongarch_lsx_vfcmp_cor_d,938,75038
    loongarch_lsx_vfcmp_cor_s,939,75119
    loongarch_lsx_vfcmp_cueq_d,940,75200
    loongarch_lsx_vfcmp_cueq_s,941,75282
    loongarch_lsx_vfcmp_cule_d,942,75364
    loongarch_lsx_vfcmp_cule_s,943,75446
    loongarch_lsx_vfcmp_cult_d,944,75528
    loongarch_lsx_vfcmp_cult_s,945,75610
    loongarch_lsx_vfcmp_cun_d,946,75692
    loongarch_lsx_vfcmp_cun_s,947,75773
    loongarch_lsx_vfcmp_cune_d,948,75854
    loongarch_lsx_vfcmp_cune_s,949,75936
    loongarch_lsx_vfcmp_saf_d,950,76018
    loongarch_lsx_vfcmp_saf_s,951,76099
    loongarch_lsx_vfcmp_seq_d,952,76180
    loongarch_lsx_vfcmp_seq_s,953,76261
    loongarch_lsx_vfcmp_sle_d,954,76342
    loongarch_lsx_vfcmp_sle_s,955,76423
    loongarch_lsx_vfcmp_slt_d,956,76504
    loongarch_lsx_vfcmp_slt_s,957,76585
    loongarch_lsx_vfcmp_sne_d,958,76666
    loongarch_lsx_vfcmp_sne_s,959,76747
    loongarch_lsx_vfcmp_sor_d,960,76828
    loongarch_lsx_vfcmp_sor_s,961,76909
    loongarch_lsx_vfcmp_sueq_d,962,76990
    loongarch_lsx_vfcmp_sueq_s,963,77072
    loongarch_lsx_vfcmp_sule_d,964,77154
    loongarch_lsx_vfcmp_sule_s,965,77236
    loongarch_lsx_vfcmp_sult_d,966,77318
    loongarch_lsx_vfcmp_sult_s,967,77400
    loongarch_lsx_vfcmp_sun_d,968,77482
    loongarch_lsx_vfcmp_sun_s,969,77563
    loongarch_lsx_vfcmp_sune_d,970,77644
    loongarch_lsx_vfcmp_sune_s,971,77726
    loongarch_lsx_vfcvt_h_s,972,77808
    loongarch_lsx_vfcvt_s_d,973,77887
    loongarch_lsx_vfcvth_d_s,974,77966
    loongarch_lsx_vfcvth_s_h,975,78046
    loongarch_lsx_vfcvtl_d_s,976,78126
    loongarch_lsx_vfcvtl_s_h,977,78206
    loongarch_lsx_vfdiv_d,978,78286
    loongarch_lsx_vfdiv_s,979,78363
    loongarch_lsx_vffint_d_l,980,78440
    loongarch_lsx_vffint_d_lu,981,78520
    loongarch_lsx_vffint_s_l,982,78601
    loongarch_lsx_vffint_s_w,983,78681
    loongarch_lsx_vffint_s_wu,984,78761
    loongarch_lsx_vffinth_d_w,985,78842
    loongarch_lsx_vffintl_d_w,986,78923
    loongarch_lsx_vflogb_d,987,79004
    loongarch_lsx_vflogb_s,988,79082
    loongarch_lsx_vfmadd_d,989,79160
    loongarch_lsx_vfmadd_s,990,79238
    loongarch_lsx_vfmax_d,991,79316
    loongarch_lsx_vfmax_s,992,79393
    loongarch_lsx_vfmaxa_d,993,79470
    loongarch_lsx_vfmaxa_s,994,79548
    loongarch_lsx_vfmin_d,995,79626
    loongarch_lsx_vfmin_s,996,79703
    loongarch_lsx_vfmina_d,997,79780
    loongarch_lsx_vfmina_s,998,79858
    loongarch_lsx_vfmsub_d,999,79936
    loongarch_lsx_vfmsub_s,1000,80014
    loongarch_lsx_vfmul_d,1001,80092
    loongarch_lsx_vfmul_s,1002,80169
    loongarch_lsx_vfnmadd_d,1003,80246
    loongarch_lsx_vfnmadd_s,1004,80325
    loongarch_lsx_vfnmsub_d,1005,80404
    loongarch_lsx_vfnmsub_s,1006,80483
    loongarch_lsx_vfrecip_d,1007,80562
    loongarch_lsx_vfrecip_s,1008,80641
    loongarch_lsx_vfrecipe_d,1009,80720
    loongarch_lsx_vfrecipe_s,1010,80800
    loongarch_lsx_vfrint_d,1011,80880
    loongarch_lsx_vfrint_s,1012,80958
    loongarch_lsx_vfrintrm_d,1013,81036
    loongarch_lsx_vfrintrm_s,1014,81116
    loongarch_lsx_vfrintrne_d,1015,81196
    loongarch_lsx_vfrintrne_s,1016,81277
    loongarch_lsx_vfrintrp_d,1017,81358
    loongarch_lsx_vfrintrp_s,1018,81438
    loongarch_lsx_vfrintrz_d,1019,81518
    loongarch_lsx_vfrintrz_s,1020,81598
    loongarch_lsx_vfrsqrt_d,1021,81678
    loongarch_lsx_vfrsqrt_s,1022,81757
    loongarch_lsx_vfrsqrte_d,1023,81836
    loongarch_lsx_vfrsqrte_s,1024,81916
    loongarch_lsx_vfrstp_b,1025,81996
    loongarch_lsx_vfrstp_h,1026,82074
    loongarch_lsx_vfrstpi_b,1027,82152
    loongarch_lsx_vfrstpi_h,1028,82231
    loongarch_lsx_vfsqrt_d,1029,82310
    loongarch_lsx_vfsqrt_s,1030,82388
    loongarch_lsx_vfsub_d,1031,82466
    loongarch_lsx_vfsub_s,1032,82543
    loongarch_lsx_vftint_l_d,1033,82620
    loongarch_lsx_vftint_lu_d,1034,82700
    loongarch_lsx_vftint_w_d,1035,82781
    loongarch_lsx_vftint_w_s,1036,82861
    loongarch_lsx_vftint_wu_s,1037,82941
    loongarch_lsx_vftinth_l_s,1038,83022
    loongarch_lsx_vftintl_l_s,1039,83103
    loongarch_lsx_vftintrm_l_d,1040,83184
    loongarch_lsx_vftintrm_w_d,1041,83266
    loongarch_lsx_vftintrm_w_s,1042,83348
    loongarch_lsx_vftintrmh_l_s,1043,83430
    loongarch_lsx_vftintrml_l_s,1044,83513
    loongarch_lsx_vftintrne_l_d,1045,83596
    loongarch_lsx_vftintrne_w_d,1046,83679
    loongarch_lsx_vftintrne_w_s,1047,83762
    loongarch_lsx_vftintrneh_l_s,1048,83845
    loongarch_lsx_vftintrnel_l_s,1049,83929
    loongarch_lsx_vftintrp_l_d,1050,84013
    loongarch_lsx_vftintrp_w_d,1051,84095
    loongarch_lsx_vftintrp_w_s,1052,84177
    loongarch_lsx_vftintrph_l_s,1053,84259
    loongarch_lsx_vftintrpl_l_s,1054,84342
    loongarch_lsx_vftintrz_l_d,1055,84425
    loongarch_lsx_vftintrz_lu_d,1056,84507
    loongarch_lsx_vftintrz_w_d,1057,84590
    loongarch_lsx_vftintrz_w_s,1058,84672
    loongarch_lsx_vftintrz_wu_s,1059,84754
    loongarch_lsx_vftintrzh_l_s,1060,84837
    loongarch_lsx_vftintrzl_l_s,1061,84920
    loongarch_lsx_vhaddw_d_w,1062,85003
    loongarch_lsx_vhaddw_du_wu,1063,85083
    loongarch_lsx_vhaddw_h_b,1064,85165
    loongarch_lsx_vhaddw_hu_bu,1065,85245
    loongarch_lsx_vhaddw_q_d,1066,85327
    loongarch_lsx_vhaddw_qu_du,1067,85407
    loongarch_lsx_vhaddw_w_h,1068,85489
    loongarch_lsx_vhaddw_wu_hu,1069,85569
    loongarch_lsx_vhsubw_d_w,1070,85651
    loongarch_lsx_vhsubw_du_wu,1071,85731
    loongarch_lsx_vhsubw_h_b,1072,85813
    loongarch_lsx_vhsubw_hu_bu,1073,85893
    loongarch_lsx_vhsubw_q_d,1074,85975
    loongarch_lsx_vhsubw_qu_du,1075,86055
    loongarch_lsx_vhsubw_w_h,1076,86137
    loongarch_lsx_vhsubw_wu_hu,1077,86217
    loongarch_lsx_vilvh_b,1078,86299
    loongarch_lsx_vilvh_d,1079,86376
    loongarch_lsx_vilvh_h,1080,86453
    loongarch_lsx_vilvh_w,1081,86530
    loongarch_lsx_vilvl_b,1082,86607
    loongarch_lsx_vilvl_d,1083,86684
    loongarch_lsx_vilvl_h,1084,86761
    loongarch_lsx_vilvl_w,1085,86838
    loongarch_lsx_vinsgr2vr_b,1086,86915
    loongarch_lsx_vinsgr2vr_d,1087,86996
    loongarch_lsx_vinsgr2vr_h,1088,87077
    loongarch_lsx_vinsgr2vr_w,1089,87158
    loongarch_lsx_vld,1090,87239
    loongarch_lsx_vldi,1091,87312
    loongarch_lsx_vldrepl_b,1092,87386
    loongarch_lsx_vldrepl_d,1093,87465
    loongarch_lsx_vldrepl_h,1094,87544
    loongarch_lsx_vldrepl_w,1095,87623
    loongarch_lsx_vldx,1096,87702
    loongarch_lsx_vmadd_b,1097,87776
    loongarch_lsx_vmadd_d,1098,87853
    loongarch_lsx_vmadd_h,1099,87930
    loongarch_lsx_vmadd_w,1100,88007
    loongarch_lsx_vmaddwev_d_w,1101,88084
    loongarch_lsx_vmaddwev_d_wu,1102,88166
    loongarch_lsx_vmaddwev_d_wu_w,1103,88249
    loongarch_lsx_vmaddwev_h_b,1104,88334
    loongarch_lsx_vmaddwev_h_bu,1105,88416
    loongarch_lsx_vmaddwev_h_bu_b,1106,88499
    loongarch_lsx_vmaddwev_q_d,1107,88584
    loongarch_lsx_vmaddwev_q_du,1108,88666
    loongarch_lsx_vmaddwev_q_du_d,1109,88749
    loongarch_lsx_vmaddwev_w_h,1110,88834
    loongarch_lsx_vmaddwev_w_hu,1111,88916
    loongarch_lsx_vmaddwev_w_hu_h,1112,88999
    loongarch_lsx_vmaddwod_d_w,1113,89084
    loongarch_lsx_vmaddwod_d_wu,1114,89166
    loongarch_lsx_vmaddwod_d_wu_w,1115,89249
    loongarch_lsx_vmaddwod_h_b,1116,89334
    loongarch_lsx_vmaddwod_h_bu,1117,89416
    loongarch_lsx_vmaddwod_h_bu_b,1118,89499
    loongarch_lsx_vmaddwod_q_d,1119,89584
    loongarch_lsx_vmaddwod_q_du,1120,89666
    loongarch_lsx_vmaddwod_q_du_d,1121,89749
    loongarch_lsx_vmaddwod_w_h,1122,89834
    loongarch_lsx_vmaddwod_w_hu,1123,89916
    loongarch_lsx_vmaddwod_w_hu_h,1124,89999
    loongarch_lsx_vmax_b,1125,90084
    loongarch_lsx_vmax_bu,1126,90160
    loongarch_lsx_vmax_d,1127,90237
    loongarch_lsx_vmax_du,1128,90313
    loongarch_lsx_vmax_h,1129,90390
    loongarch_lsx_vmax_hu,1130,90466
    loongarch_lsx_vmax_w,1131,90543
    loongarch_lsx_vmax_wu,1132,90619
    loongarch_lsx_vmaxi_b,1133,90696
    loongarch_lsx_vmaxi_bu,1134,90773
    loongarch_lsx_vmaxi_d,1135,90851
    loongarch_lsx_vmaxi_du,1136,90928
    loongarch_lsx_vmaxi_h,1137,91006
    loongarch_lsx_vmaxi_hu,1138,91083
    loongarch_lsx_vmaxi_w,1139,91161
    loongarch_lsx_vmaxi_wu,1140,91238
    loongarch_lsx_vmin_b,1141,91316
    loongarch_lsx_vmin_bu,1142,91392
    loongarch_lsx_vmin_d,1143,91469
    loongarch_lsx_vmin_du,1144,91545
    loongarch_lsx_vmin_h,1145,91622
    loongarch_lsx_vmin_hu,1146,91698
    loongarch_lsx_vmin_w,1147,91775
    loongarch_lsx_vmin_wu,1148,91851
    loongarch_lsx_vmini_b,1149,91928
    loongarch_lsx_vmini_bu,1150,92005
    loongarch_lsx_vmini_d,1151,92083
    loongarch_lsx_vmini_du,1152,92160
    loongarch_lsx_vmini_h,1153,92238
    loongarch_lsx_vmini_hu,1154,92315
    loongarch_lsx_vmini_w,1155,92393
    loongarch_lsx_vmini_wu,1156,92470
    loongarch_lsx_vmod_b,1157,92548
    loongarch_lsx_vmod_bu,1158,92624
    loongarch_lsx_vmod_d,1159,92701
    loongarch_lsx_vmod_du,1160,92777
    loongarch_lsx_vmod_h,1161,92854
    loongarch_lsx_vmod_hu,1162,92930
    loongarch_lsx_vmod_w,1163,93007
    loongarch_lsx_vmod_wu,1164,93083
    loongarch_lsx_vmskgez_b,1165,93160
    loongarch_lsx_vmskltz_b,1166,93239
    loongarch_lsx_vmskltz_d,1167,93318
    loongarch_lsx_vmskltz_h,1168,93397
    loongarch_lsx_vmskltz_w,1169,93476
    loongarch_lsx_vmsknz_b,1170,93555
    loongarch_lsx_vmsub_b,1171,93633
    loongarch_lsx_vmsub_d,1172,93710
    loongarch_lsx_vmsub_h,1173,93787
    loongarch_lsx_vmsub_w,1174,93864
    loongarch_lsx_vmuh_b,1175,93941
    loongarch_lsx_vmuh_bu,1176,94017
    loongarch_lsx_vmuh_d,1177,94094
    loongarch_lsx_vmuh_du,1178,94170
    loongarch_lsx_vmuh_h,1179,94247
    loongarch_lsx_vmuh_hu,1180,94323
    loongarch_lsx_vmuh_w,1181,94400
    loongarch_lsx_vmuh_wu,1182,94476
    loongarch_lsx_vmul_b,1183,94553
    loongarch_lsx_vmul_d,1184,94629
    loongarch_lsx_vmul_h,1185,94705
    loongarch_lsx_vmul_w,1186,94781
    loongarch_lsx_vmulwev_d_w,1187,94857
    loongarch_lsx_vmulwev_d_wu,1188,94938
    loongarch_lsx_vmulwev_d_wu_w,1189,95020
    loongarch_lsx_vmulwev_h_b,1190,95104
    loongarch_lsx_vmulwev_h_bu,1191,95185
    loongarch_lsx_vmulwev_h_bu_b,1192,95267
    loongarch_lsx_vmulwev_q_d,1193,95351
    loongarch_lsx_vmulwev_q_du,1194,95432
    loongarch_lsx_vmulwev_q_du_d,1195,95514
    loongarch_lsx_vmulwev_w_h,1196,95598
    loongarch_lsx_vmulwev_w_hu,1197,95679
    loongarch_lsx_vmulwev_w_hu_h,1198,95761
    loongarch_lsx_vmulwod_d_w,1199,95845
    loongarch_lsx_vmulwod_d_wu,1200,95926
    loongarch_lsx_vmulwod_d_wu_w,1201,96008
    loongarch_lsx_vmulwod_h_b,1202,96092
    loongarch_lsx_vmulwod_h_bu,1203,96173
    loongarch_lsx_vmulwod_h_bu_b,1204,96255
    loongarch_lsx_vmulwod_q_d,1205,96339
    loongarch_lsx_vmulwod_q_du,1206,96420
    loongarch_lsx_vmulwod_q_du_d,1207,96502
    loongarch_lsx_vmulwod_w_h,1208,96586
    loongarch_lsx_vmulwod_w_hu,1209,96667
    loongarch_lsx_vmulwod_w_hu_h,1210,96749
    loongarch_lsx_vneg_b,1211,96833
    loongarch_lsx_vneg_d,1212,96909
    loongarch_lsx_vneg_h,1213,96985
    loongarch_lsx_vneg_w,1214,97061
    loongarch_lsx_vnor_v,1215,97137
    loongarch_lsx_vnori_b,1216,97213
    loongarch_lsx_vor_v,1217,97290
    loongarch_lsx_vori_b,1218,97365
    loongarch_lsx_vorn_v,1219,97441
    loongarch_lsx_vpackev_b,1220,97517
    loongarch_lsx_vpackev_d,1221,97596
    loongarch_lsx_vpackev_h,1222,97675
    loongarch_lsx_vpackev_w,1223,97754
    loongarch_lsx_vpackod_b,1224,97833
    loongarch_lsx_vpackod_d,1225,97912
    loongarch_lsx_vpackod_h,1226,97991
    loongarch_lsx_vpackod_w,1227,98070
    loongarch_lsx_vpcnt_b,1228,98149
    loongarch_lsx_vpcnt_d,1229,98226
    loongarch_lsx_vpcnt_h,1230,98303
    loongarch_lsx_vpcnt_w,1231,98380
    loongarch_lsx_vpermi_w,1232,98457
    loongarch_lsx_vpickev_b,1233,98535
    loongarch_lsx_vpickev_d,1234,98614
    loongarch_lsx_vpickev_h,1235,98693
    loongarch_lsx_vpickev_w,1236,98772
    loongarch_lsx_vpickod_b,1237,98851
    loongarch_lsx_vpickod_d,1238,98930
    loongarch_lsx_vpickod_h,1239,99009
    loongarch_lsx_vpickod_w,1240,99088
    loongarch_lsx_vpickve2gr_b,1241,99167
    loongarch_lsx_vpickve2gr_bu,1242,99249
    loongarch_lsx_vpickve2gr_d,1243,99332
    loongarch_lsx_vpickve2gr_du,1244,99414
    loongarch_lsx_vpickve2gr_h,1245,99497
    loongarch_lsx_vpickve2gr_hu,1246,99579
    loongarch_lsx_vpickve2gr_w,1247,99662
    loongarch_lsx_vpickve2gr_wu,1248,99744
    loongarch_lsx_vreplgr2vr_b,1249,99827
    loongarch_lsx_vreplgr2vr_d,1250,99909
    loongarch_lsx_vreplgr2vr_h,1251,99991
    loongarch_lsx_vreplgr2vr_w,1252,100073
    loongarch_lsx_vrepli_b,1253,100155
    loongarch_lsx_vrepli_d,1254,100233
    loongarch_lsx_vrepli_h,1255,100311
    loongarch_lsx_vrepli_w,1256,100389
    loongarch_lsx_vreplve_b,1257,100467
    loongarch_lsx_vreplve_d,1258,100546
    loongarch_lsx_vreplve_h,1259,100625
    loongarch_lsx_vreplve_w,1260,100704
    loongarch_lsx_vreplvei_b,1261,100783
    loongarch_lsx_vreplvei_d,1262,100863
    loongarch_lsx_vreplvei_h,1263,100943
    loongarch_lsx_vreplvei_w,1264,101023
    loongarch_lsx_vrotr_b,1265,101103
    loongarch_lsx_vrotr_d,1266,101180
    loongarch_lsx_vrotr_h,1267,101257
    loongarch_lsx_vrotr_w,1268,101334
    loongarch_lsx_vrotri_b,1269,101411
    loongarch_lsx_vrotri_d,1270,101489
    loongarch_lsx_vrotri_h,1271,101567
    loongarch_lsx_vrotri_w,1272,101645
    loongarch_lsx_vsadd_b,1273,101723
    loongarch_lsx_vsadd_bu,1274,101800
    loongarch_lsx_vsadd_d,1275,101878
    loongarch_lsx_vsadd_du,1276,101955
    loongarch_lsx_vsadd_h,1277,102033
    loongarch_lsx_vsadd_hu,1278,102110
    loongarch_lsx_vsadd_w,1279,102188
    loongarch_lsx_vsadd_wu,1280,102265
    loongarch_lsx_vsat_b,1281,102343
    loongarch_lsx_vsat_bu,1282,102419
    loongarch_lsx_vsat_d,1283,102496
    loongarch_lsx_vsat_du,1284,102572
    loongarch_lsx_vsat_h,1285,102649
    loongarch_lsx_vsat_hu,1286,102725
    loongarch_lsx_vsat_w,1287,102802
    loongarch_lsx_vsat_wu,1288,102878
    loongarch_lsx_vseq_b,1289,102955
    loongarch_lsx_vseq_d,1290,103031
    loongarch_lsx_vseq_h,1291,103107
    loongarch_lsx_vseq_w,1292,103183
    loongarch_lsx_vseqi_b,1293,103259
    loongarch_lsx_vseqi_d,1294,103336
    loongarch_lsx_vseqi_h,1295,103413
    loongarch_lsx_vseqi_w,1296,103490
    loongarch_lsx_vshuf_b,1297,103567
    loongarch_lsx_vshuf_d,1298,103644
    loongarch_lsx_vshuf_h,1299,103721
    loongarch_lsx_vshuf_w,1300,103798
    loongarch_lsx_vshuf4i_b,1301,103875
    loongarch_lsx_vshuf4i_d,1302,103954
    loongarch_lsx_vshuf4i_h,1303,104033
    loongarch_lsx_vshuf4i_w,1304,104112
    loongarch_lsx_vsigncov_b,1305,104191
    loongarch_lsx_vsigncov_d,1306,104271
    loongarch_lsx_vsigncov_h,1307,104351
    loongarch_lsx_vsigncov_w,1308,104431
    loongarch_lsx_vsle_b,1309,104511
    loongarch_lsx_vsle_bu,1310,104587
    loongarch_lsx_vsle_d,1311,104664
    loongarch_lsx_vsle_du,1312,104740
    loongarch_lsx_vsle_h,1313,104817
    loongarch_lsx_vsle_hu,1314,104893
    loongarch_lsx_vsle_w,1315,104970
    loongarch_lsx_vsle_wu,1316,105046
    loongarch_lsx_vslei_b,1317,105123
    loongarch_lsx_vslei_bu,1318,105200
    loongarch_lsx_vslei_d,1319,105278
    loongarch_lsx_vslei_du,1320,105355
    loongarch_lsx_vslei_h,1321,105433
    loongarch_lsx_vslei_hu,1322,105510
    loongarch_lsx_vslei_w,1323,105588
    loongarch_lsx_vslei_wu,1324,105665
    loongarch_lsx_vsll_b,1325,105743
    loongarch_lsx_vsll_d,1326,105819
    loongarch_lsx_vsll_h,1327,105895
    loongarch_lsx_vsll_w,1328,105971
    loongarch_lsx_vslli_b,1329,106047
    loongarch_lsx_vslli_d,1330,106124
    loongarch_lsx_vslli_h,1331,106201
    loongarch_lsx_vslli_w,1332,106278
    loongarch_lsx_vsllwil_d_w,1333,106355
    loongarch_lsx_vsllwil_du_wu,1334,106436
    loongarch_lsx_vsllwil_h_b,1335,106519
    loongarch_lsx_vsllwil_hu_bu,1336,106600
    loongarch_lsx_vsllwil_w_h,1337,106683
    loongarch_lsx_vsllwil_wu_hu,1338,106764
    loongarch_lsx_vslt_b,1339,106847
    loongarch_lsx_vslt_bu,1340,106923
    loongarch_lsx_vslt_d,1341,107000
    loongarch_lsx_vslt_du,1342,107076
    loongarch_lsx_vslt_h,1343,107153
    loongarch_lsx_vslt_hu,1344,107229
    loongarch_lsx_vslt_w,1345,107306
    loongarch_lsx_vslt_wu,1346,107382
    loongarch_lsx_vslti_b,1347,107459
    loongarch_lsx_vslti_bu,1348,107536
    loongarch_lsx_vslti_d,1349,107614
    loongarch_lsx_vslti_du,1350,107691
    loongarch_lsx_vslti_h,1351,107769
    loongarch_lsx_vslti_hu,1352,107846
    loongarch_lsx_vslti_w,1353,107924
    loongarch_lsx_vslti_wu,1354,108001
    loongarch_lsx_vsra_b,1355,108079
    loongarch_lsx_vsra_d,1356,108155
    loongarch_lsx_vsra_h,1357,108231
    loongarch_lsx_vsra_w,1358,108307
    loongarch_lsx_vsrai_b,1359,108383
    loongarch_lsx_vsrai_d,1360,108460
    loongarch_lsx_vsrai_h,1361,108537
    loongarch_lsx_vsrai_w,1362,108614
    loongarch_lsx_vsran_b_h,1363,108691
    loongarch_lsx_vsran_h_w,1364,108770
    loongarch_lsx_vsran_w_d,1365,108849
    loongarch_lsx_vsrani_b_h,1366,108928
    loongarch_lsx_vsrani_d_q,1367,109008
    loongarch_lsx_vsrani_h_w,1368,109088
    loongarch_lsx_vsrani_w_d,1369,109168
    loongarch_lsx_vsrar_b,1370,109248
    loongarch_lsx_vsrar_d,1371,109325
    loongarch_lsx_vsrar_h,1372,109402
    loongarch_lsx_vsrar_w,1373,109479
    loongarch_lsx_vsrari_b,1374,109556
    loongarch_lsx_vsrari_d,1375,109634
    loongarch_lsx_vsrari_h,1376,109712
    loongarch_lsx_vsrari_w,1377,109790
    loongarch_lsx_vsrarn_b_h,1378,109868
    loongarch_lsx_vsrarn_h_w,1379,109948
    loongarch_lsx_vsrarn_w_d,1380,110028
    loongarch_lsx_vsrarni_b_h,1381,110108
    loongarch_lsx_vsrarni_d_q,1382,110189
    loongarch_lsx_vsrarni_h_w,1383,110270
    loongarch_lsx_vsrarni_w_d,1384,110351
    loongarch_lsx_vsrl_b,1385,110432
    loongarch_lsx_vsrl_d,1386,110508
    loongarch_lsx_vsrl_h,1387,110584
    loongarch_lsx_vsrl_w,1388,110660
    loongarch_lsx_vsrli_b,1389,110736
    loongarch_lsx_vsrli_d,1390,110813
    loongarch_lsx_vsrli_h,1391,110890
    loongarch_lsx_vsrli_w,1392,110967
    loongarch_lsx_vsrln_b_h,1393,111044
    loongarch_lsx_vsrln_h_w,1394,111123
    loongarch_lsx_vsrln_w_d,1395,111202
    loongarch_lsx_vsrlni_b_h,1396,111281
    loongarch_lsx_vsrlni_d_q,1397,111361
    loongarch_lsx_vsrlni_h_w,1398,111441
    loongarch_lsx_vsrlni_w_d,1399,111521
    loongarch_lsx_vsrlr_b,1400,111601
    loongarch_lsx_vsrlr_d,1401,111678
    loongarch_lsx_vsrlr_h,1402,111755
    loongarch_lsx_vsrlr_w,1403,111832
    loongarch_lsx_vsrlri_b,1404,111909
    loongarch_lsx_vsrlri_d,1405,111987
    loongarch_lsx_vsrlri_h,1406,112065
    loongarch_lsx_vsrlri_w,1407,112143
    loongarch_lsx_vsrlrn_b_h,1408,112221
    loongarch_lsx_vsrlrn_h_w,1409,112301
    loongarch_lsx_vsrlrn_w_d,1410,112381
    loongarch_lsx_vsrlrni_b_h,1411,112461
    loongarch_lsx_vsrlrni_d_q,1412,112542
    loongarch_lsx_vsrlrni_h_w,1413,112623
    loongarch_lsx_vsrlrni_w_d,1414,112704
    loongarch_lsx_vssran_b_h,1415,112785
    loongarch_lsx_vssran_bu_h,1416,112865
    loongarch_lsx_vssran_h_w,1417,112946
    loongarch_lsx_vssran_hu_w,1418,113026
    loongarch_lsx_vssran_w_d,1419,113107
    loongarch_lsx_vssran_wu_d,1420,113187
    loongarch_lsx_vssrani_b_h,1421,113268
    loongarch_lsx_vssrani_bu_h,1422,113349
    loongarch_lsx_vssrani_d_q,1423,113431
    loongarch_lsx_vssrani_du_q,1424,113512
    loongarch_lsx_vssrani_h_w,1425,113594
    loongarch_lsx_vssrani_hu_w,1426,113675
    loongarch_lsx_vssrani_w_d,1427,113757
    loongarch_lsx_vssrani_wu_d,1428,113838
    loongarch_lsx_vssrarn_b_h,1429,113920
    loongarch_lsx_vssrarn_bu_h,1430,114001
    loongarch_lsx_vssrarn_h_w,1431,114083
    loongarch_lsx_vssrarn_hu_w,1432,114164
    loongarch_lsx_vssrarn_w_d,1433,114246
    loongarch_lsx_vssrarn_wu_d,1434,114327
    loongarch_lsx_vssrarni_b_h,1435,114409
    loongarch_lsx_vssrarni_bu_h,1436,114491
    loongarch_lsx_vssrarni_d_q,1437,114574
    loongarch_lsx_vssrarni_du_q,1438,114656
    loongarch_lsx_vssrarni_h_w,1439,114739
    loongarch_lsx_vssrarni_hu_w,1440,114821
    loongarch_lsx_vssrarni_w_d,1441,114904
    loongarch_lsx_vssrarni_wu_d,1442,114986
    loongarch_lsx_vssrln_b_h,1443,115069
    loongarch_lsx_vssrln_bu_h,1444,115149
    loongarch_lsx_vssrln_h_w,1445,115230
    loongarch_lsx_vssrln_hu_w,1446,115310
    loongarch_lsx_vssrln_w_d,1447,115391
    loongarch_lsx_vssrln_wu_d,1448,115471
    loongarch_lsx_vssrlni_b_h,1449,115552
    loongarch_lsx_vssrlni_bu_h,1450,115633
    loongarch_lsx_vssrlni_d_q,1451,115715
    loongarch_lsx_vssrlni_du_q,1452,115796
    loongarch_lsx_vssrlni_h_w,1453,115878
    loongarch_lsx_vssrlni_hu_w,1454,115959
    loongarch_lsx_vssrlni_w_d,1455,116041
    loongarch_lsx_vssrlni_wu_d,1456,116122
    loongarch_lsx_vssrlrn_b_h,1457,116204
    loongarch_lsx_vssrlrn_bu_h,1458,116285
    loongarch_lsx_vssrlrn_h_w,1459,116367
    loongarch_lsx_vssrlrn_hu_w,1460,116448
    loongarch_lsx_vssrlrn_w_d,1461,116530
    loongarch_lsx_vssrlrn_wu_d,1462,116611
    loongarch_lsx_vssrlrni_b_h,1463,116693
    loongarch_lsx_vssrlrni_bu_h,1464,116775
    loongarch_lsx_vssrlrni_d_q,1465,116858
    loongarch_lsx_vssrlrni_du_q,1466,116940
    loongarch_lsx_vssrlrni_h_w,1467,117023
    loongarch_lsx_vssrlrni_hu_w,1468,117105
    loongarch_lsx_vssrlrni_w_d,1469,117188
    loongarch_lsx_vssrlrni_wu_d,1470,117270
    loongarch_lsx_vssub_b,1471,117353
    loongarch_lsx_vssub_bu,1472,117430
    loongarch_lsx_vssub_d,1473,117508
    loongarch_lsx_vssub_du,1474,117585
    loongarch_lsx_vssub_h,1475,117663
    loongarch_lsx_vssub_hu,1476,117740
    loongarch_lsx_vssub_w,1477,117818
    loongarch_lsx_vssub_wu,1478,117895
    loongarch_lsx_vst,1479,117973
    loongarch_lsx_vstelm_b,1480,118046
    loongarch_lsx_vstelm_d,1481,118124
    loongarch_lsx_vstelm_h,1482,118202
    loongarch_lsx_vstelm_w,1483,118280
    loongarch_lsx_vstx,1484,118358
    loongarch_lsx_vsub_b,1485,118432
    loongarch_lsx_vsub_d,1486,118508
    loongarch_lsx_vsub_h,1487,118584
    loongarch_lsx_vsub_q,1488,118660
    loongarch_lsx_vsub_w,1489,118736
    loongarch_lsx_vsubi_bu,1490,118812
    loongarch_lsx_vsubi_du,1491,118890
    loongarch_lsx_vsubi_hu,1492,118968
    loongarch_lsx_vsubi_wu,1493,119046
    loongarch_lsx_vsubwev_d_w,1494,119124
    loongarch_lsx_vsubwev_d_wu,1495,119205
    loongarch_lsx_vsubwev_h_b,1496,119287
    loongarch_lsx_vsubwev_h_bu,1497,119368
    loongarch_lsx_vsubwev_q_d,1498,119450
    loongarch_lsx_vsubwev_q_du,1499,119531
    loongarch_lsx_vsubwev_w_h,1500,119613
    loongarch_lsx_vsubwev_w_hu,1501,119694
    loongarch_lsx_vsubwod_d_w,1502,119776
    loongarch_lsx_vsubwod_d_wu,1503,119857
    loongarch_lsx_vsubwod_h_b,1504,119939
    loongarch_lsx_vsubwod_h_bu,1505,120020
    loongarch_lsx_vsubwod_q_d,1506,120102
    loongarch_lsx_vsubwod_q_du,1507,120183
    loongarch_lsx_vsubwod_w_h,1508,120265
    loongarch_lsx_vsubwod_w_hu,1509,120346
    loongarch_lsx_vxor_v,1510,120428
    loongarch_lsx_vxori_b,1511,120504
    loongarch_masked_atomicrmw_add_i32,1512,120581
    loongarch_masked_atomicrmw_add_i64,1513,120671
    loongarch_masked_atomicrmw_max_i64,1514,120761
    loongarch_masked_atomicrmw_min_i64,1515,120851
    loongarch_masked_atomicrmw_nand_i32,1516,120941
    loongarch_masked_atomicrmw_nand_i64,1517,121032
    loongarch_masked_atomicrmw_sub_i32,1518,121123
    loongarch_masked_atomicrmw_sub_i64,1519,121213
    loongarch_masked_atomicrmw_umax_i32,1520,121303
    loongarch_masked_atomicrmw_umax_i64,1521,121394
    loongarch_masked_atomicrmw_umin_i32,1522,121485
    loongarch_masked_atomicrmw_umin_i64,1523,121576
    loongarch_masked_atomicrmw_xchg_i32,1524,121667
    loongarch_masked_atomicrmw_xchg_i64,1525,121758
    loongarch_masked_cmpxchg_i64,1526,121849
    loongarch_movfcsr2gr,1527,121933
    loongarch_movgr2fcsr,1528,122009
    loongarch_syscall,1529,122085

/usr/include/llvm/IR/IntrinsicsLoongArch.td,3199
let TargetPrefix 13,520
defm int_loongarch_masked_atomicrmw_xchg : MaskedAtomicRMWIntrinsics;38,1413
defm int_loongarch_masked_atomicrmw_add : MaskedAtomicRMWIntrinsics;39,1483
defm int_loongarch_masked_atomicrmw_sub : MaskedAtomicRMWIntrinsics;40,1552
defm int_loongarch_masked_atomicrmw_nand : MaskedAtomicRMWIntrinsics;41,1621
defm int_loongarch_masked_atomicrmw_umax : MaskedAtomicRMWIntrinsics;42,1691
defm int_loongarch_masked_atomicrmw_umin : MaskedAtomicRMWIntrinsics;43,1761
defm int_loongarch_masked_atomicrmw_max : MaskedAtomicRMWFiveOpIntrinsics;44,1831
defm int_loongarch_masked_atomicrmw_min : MaskedAtomicRMWFiveOpIntrinsics;45,1906
defm int_loongarch_masked_cmpxchg : MaskedAtomicRMWFiveOpIntrinsics;49,2099
class BaseInt<list<LLVMType> ret_types, list<LLVMType> param_types,54,2269
              list<IntrinsicProperty> intr_properties 55,2337
def int_loongarch_break : BaseInt<BaseInt59,2530
def int_loongarch_cacop_d : BaseInt<BaseInt60,2607
def int_loongarch_cacop_w : BaseInt<BaseInt62,2769
def int_loongarch_dbar : BaseInt<BaseInt64,2931
def int_loongarch_ibar : BaseInt<BaseInt66,3008
def int_loongarch_movfcsr2gr : BaseInt<BaseInt67,3084
def int_loongarch_movgr2fcsr : BaseInt<BaseInt69,3216
def int_loongarch_syscall : BaseInt<BaseInt71,3350
def int_loongarch_crc_w_b_w : BaseInt<BaseInt73,3430
def int_loongarch_crc_w_h_w : BaseInt<BaseInt75,3550
def int_loongarch_crc_w_w_w : BaseInt<BaseInt77,3670
def int_loongarch_crc_w_d_w : BaseInt<BaseInt79,3790
def int_loongarch_crcc_w_b_w : BaseInt<BaseInt82,3911
def int_loongarch_crcc_w_h_w : BaseInt<BaseInt84,4033
def int_loongarch_crcc_w_w_w : BaseInt<BaseInt86,4155
def int_loongarch_crcc_w_d_w : BaseInt<BaseInt88,4277
def int_loongarch_csrrd_w : BaseInt<BaseInt91,4400
def int_loongarch_csrrd_d : BaseInt<BaseInt93,4526
def int_loongarch_csrwr_w : BaseInt<BaseInt95,4652
def int_loongarch_csrwr_d : BaseInt<BaseInt97,4791
def int_loongarch_csrxchg_w : BaseInt<BaseInt99,4930
def int_loongarch_csrxchg_d : BaseInt<BaseInt102,5124
def int_loongarch_iocsrrd_b : BaseInt<BaseInt106,5319
def int_loongarch_iocsrrd_h : BaseInt<BaseInt107,5388
def int_loongarch_iocsrrd_w : BaseInt<BaseInt108,5457
def int_loongarch_iocsrrd_d : BaseInt<BaseInt109,5526
def int_loongarch_iocsrwr_b : BaseInt<BaseInt111,5596
def int_loongarch_iocsrwr_h : BaseInt<BaseInt112,5667
def int_loongarch_iocsrwr_w : BaseInt<BaseInt113,5738
def int_loongarch_iocsrwr_d : BaseInt<BaseInt114,5809
def int_loongarch_cpucfg : BaseInt<BaseInt116,5881
def int_loongarch_asrtle_d : BaseInt<BaseInt118,5948
def int_loongarch_asrtgt_d : BaseInt<BaseInt119,6018
def int_loongarch_lddir_d : BaseInt<BaseInt121,6089
def int_loongarch_ldpte_d : BaseInt<BaseInt123,6228
def int_loongarch_frecipe_s : BaseInt<BaseInt126,6357
def int_loongarch_frecipe_d : BaseInt<BaseInt128,6481
def int_loongarch_frsqrte_s : BaseInt<BaseInt130,6607
def int_loongarch_frsqrte_d : BaseInt<BaseInt132,6731
class VecInt<list<LLVMType> ret_types, list<LLVMType> param_types,138,6912
             list<IntrinsicProperty> intr_properties 139,6979
let TargetPrefix 146,7250
let TargetPrefix 665,35021

/usr/include/llvm/IR/IntrinsicsMips.h,18856
#define LLVM_IR_INTRINSIC_MIPS_ENUMS_H10,607
enum MIPSIntrinsics 14,686
    mips_absq_s_ph 16,749
    mips_absq_s_qb,17,826
    mips_absq_s_w,18,896
    mips_add_a_b,19,965
    mips_add_a_d,20,1033
    mips_add_a_h,21,1101
    mips_add_a_w,22,1169
    mips_addq_ph,23,1237
    mips_addq_s_ph,24,1305
    mips_addq_s_w,25,1375
    mips_addqh_ph,26,1444
    mips_addqh_r_ph,27,1513
    mips_addqh_r_w,28,1584
    mips_addqh_w,29,1654
    mips_adds_a_b,30,1722
    mips_adds_a_d,31,1791
    mips_adds_a_h,32,1860
    mips_adds_a_w,33,1929
    mips_adds_s_b,34,1998
    mips_adds_s_d,35,2067
    mips_adds_s_h,36,2136
    mips_adds_s_w,37,2205
    mips_adds_u_b,38,2274
    mips_adds_u_d,39,2343
    mips_adds_u_h,40,2412
    mips_adds_u_w,41,2481
    mips_addsc,42,2550
    mips_addu_ph,43,2616
    mips_addu_qb,44,2684
    mips_addu_s_ph,45,2752
    mips_addu_s_qb,46,2822
    mips_adduh_qb,47,2892
    mips_adduh_r_qb,48,2961
    mips_addv_b,49,3032
    mips_addv_d,50,3099
    mips_addv_h,51,3166
    mips_addv_w,52,3233
    mips_addvi_b,53,3300
    mips_addvi_d,54,3368
    mips_addvi_h,55,3436
    mips_addvi_w,56,3504
    mips_addwc,57,3572
    mips_and_v,58,3638
    mips_andi_b,59,3704
    mips_append,60,3771
    mips_asub_s_b,61,3838
    mips_asub_s_d,62,3907
    mips_asub_s_h,63,3976
    mips_asub_s_w,64,4045
    mips_asub_u_b,65,4114
    mips_asub_u_d,66,4183
    mips_asub_u_h,67,4252
    mips_asub_u_w,68,4321
    mips_ave_s_b,69,4390
    mips_ave_s_d,70,4458
    mips_ave_s_h,71,4526
    mips_ave_s_w,72,4594
    mips_ave_u_b,73,4662
    mips_ave_u_d,74,4730
    mips_ave_u_h,75,4798
    mips_ave_u_w,76,4866
    mips_aver_s_b,77,4934
    mips_aver_s_d,78,5003
    mips_aver_s_h,79,5072
    mips_aver_s_w,80,5141
    mips_aver_u_b,81,5210
    mips_aver_u_d,82,5279
    mips_aver_u_h,83,5348
    mips_aver_u_w,84,5417
    mips_balign,85,5486
    mips_bclr_b,86,5553
    mips_bclr_d,87,5620
    mips_bclr_h,88,5687
    mips_bclr_w,89,5754
    mips_bclri_b,90,5821
    mips_bclri_d,91,5889
    mips_bclri_h,92,5957
    mips_bclri_w,93,6025
    mips_binsl_b,94,6093
    mips_binsl_d,95,6161
    mips_binsl_h,96,6229
    mips_binsl_w,97,6297
    mips_binsli_b,98,6365
    mips_binsli_d,99,6434
    mips_binsli_h,100,6503
    mips_binsli_w,101,6572
    mips_binsr_b,102,6641
    mips_binsr_d,103,6709
    mips_binsr_h,104,6777
    mips_binsr_w,105,6845
    mips_binsri_b,106,6913
    mips_binsri_d,107,6982
    mips_binsri_h,108,7051
    mips_binsri_w,109,7120
    mips_bitrev,110,7189
    mips_bmnz_v,111,7256
    mips_bmnzi_b,112,7323
    mips_bmz_v,113,7391
    mips_bmzi_b,114,7457
    mips_bneg_b,115,7524
    mips_bneg_d,116,7591
    mips_bneg_h,117,7658
    mips_bneg_w,118,7725
    mips_bnegi_b,119,7792
    mips_bnegi_d,120,7860
    mips_bnegi_h,121,7928
    mips_bnegi_w,122,7996
    mips_bnz_b,123,8064
    mips_bnz_d,124,8130
    mips_bnz_h,125,8196
    mips_bnz_v,126,8262
    mips_bnz_w,127,8328
    mips_bposge32,128,8394
    mips_bsel_v,129,8463
    mips_bseli_b,130,8530
    mips_bset_b,131,8598
    mips_bset_d,132,8665
    mips_bset_h,133,8732
    mips_bset_w,134,8799
    mips_bseti_b,135,8866
    mips_bseti_d,136,8934
    mips_bseti_h,137,9002
    mips_bseti_w,138,9070
    mips_bz_b,139,9138
    mips_bz_d,140,9203
    mips_bz_h,141,9268
    mips_bz_v,142,9333
    mips_bz_w,143,9398
    mips_ceq_b,144,9463
    mips_ceq_d,145,9529
    mips_ceq_h,146,9595
    mips_ceq_w,147,9661
    mips_ceqi_b,148,9727
    mips_ceqi_d,149,9794
    mips_ceqi_h,150,9861
    mips_ceqi_w,151,9928
    mips_cfcmsa,152,9995
    mips_cle_s_b,153,10062
    mips_cle_s_d,154,10130
    mips_cle_s_h,155,10198
    mips_cle_s_w,156,10266
    mips_cle_u_b,157,10334
    mips_cle_u_d,158,10402
    mips_cle_u_h,159,10470
    mips_cle_u_w,160,10538
    mips_clei_s_b,161,10606
    mips_clei_s_d,162,10675
    mips_clei_s_h,163,10744
    mips_clei_s_w,164,10813
    mips_clei_u_b,165,10882
    mips_clei_u_d,166,10951
    mips_clei_u_h,167,11020
    mips_clei_u_w,168,11089
    mips_clt_s_b,169,11158
    mips_clt_s_d,170,11226
    mips_clt_s_h,171,11294
    mips_clt_s_w,172,11362
    mips_clt_u_b,173,11430
    mips_clt_u_d,174,11498
    mips_clt_u_h,175,11566
    mips_clt_u_w,176,11634
    mips_clti_s_b,177,11702
    mips_clti_s_d,178,11771
    mips_clti_s_h,179,11840
    mips_clti_s_w,180,11909
    mips_clti_u_b,181,11978
    mips_clti_u_d,182,12047
    mips_clti_u_h,183,12116
    mips_clti_u_w,184,12185
    mips_cmp_eq_ph,185,12254
    mips_cmp_le_ph,186,12324
    mips_cmp_lt_ph,187,12394
    mips_cmpgdu_eq_qb,188,12464
    mips_cmpgdu_le_qb,189,12537
    mips_cmpgdu_lt_qb,190,12610
    mips_cmpgu_eq_qb,191,12683
    mips_cmpgu_le_qb,192,12755
    mips_cmpgu_lt_qb,193,12827
    mips_cmpu_eq_qb,194,12899
    mips_cmpu_le_qb,195,12970
    mips_cmpu_lt_qb,196,13041
    mips_copy_s_b,197,13112
    mips_copy_s_d,198,13181
    mips_copy_s_h,199,13250
    mips_copy_s_w,200,13319
    mips_copy_u_b,201,13388
    mips_copy_u_d,202,13457
    mips_copy_u_h,203,13526
    mips_copy_u_w,204,13595
    mips_ctcmsa,205,13664
    mips_div_s_b,206,13731
    mips_div_s_d,207,13799
    mips_div_s_h,208,13867
    mips_div_s_w,209,13935
    mips_div_u_b,210,14003
    mips_div_u_d,211,14071
    mips_div_u_h,212,14139
    mips_div_u_w,213,14207
    mips_dlsa,214,14275
    mips_dotp_s_d,215,14340
    mips_dotp_s_h,216,14409
    mips_dotp_s_w,217,14478
    mips_dotp_u_d,218,14547
    mips_dotp_u_h,219,14616
    mips_dotp_u_w,220,14685
    mips_dpa_w_ph,221,14754
    mips_dpadd_s_d,222,14823
    mips_dpadd_s_h,223,14893
    mips_dpadd_s_w,224,14963
    mips_dpadd_u_d,225,15033
    mips_dpadd_u_h,226,15103
    mips_dpadd_u_w,227,15173
    mips_dpaq_s_w_ph,228,15243
    mips_dpaq_sa_l_w,229,15315
    mips_dpaqx_s_w_ph,230,15387
    mips_dpaqx_sa_w_ph,231,15460
    mips_dpau_h_qbl,232,15534
    mips_dpau_h_qbr,233,15605
    mips_dpax_w_ph,234,15676
    mips_dps_w_ph,235,15746
    mips_dpsq_s_w_ph,236,15815
    mips_dpsq_sa_l_w,237,15887
    mips_dpsqx_s_w_ph,238,15959
    mips_dpsqx_sa_w_ph,239,16032
    mips_dpsu_h_qbl,240,16106
    mips_dpsu_h_qbr,241,16177
    mips_dpsub_s_d,242,16248
    mips_dpsub_s_h,243,16318
    mips_dpsub_s_w,244,16388
    mips_dpsub_u_d,245,16458
    mips_dpsub_u_h,246,16528
    mips_dpsub_u_w,247,16598
    mips_dpsx_w_ph,248,16668
    mips_extp,249,16738
    mips_extpdp,250,16803
    mips_extr_r_w,251,16870
    mips_extr_rs_w,252,16939
    mips_extr_s_h,253,17009
    mips_extr_w,254,17078
    mips_fadd_d,255,17145
    mips_fadd_w,256,17212
    mips_fcaf_d,257,17279
    mips_fcaf_w,258,17346
    mips_fceq_d,259,17413
    mips_fceq_w,260,17480
    mips_fclass_d,261,17547
    mips_fclass_w,262,17616
    mips_fcle_d,263,17685
    mips_fcle_w,264,17752
    mips_fclt_d,265,17819
    mips_fclt_w,266,17886
    mips_fcne_d,267,17953
    mips_fcne_w,268,18020
    mips_fcor_d,269,18087
    mips_fcor_w,270,18154
    mips_fcueq_d,271,18221
    mips_fcueq_w,272,18289
    mips_fcule_d,273,18357
    mips_fcule_w,274,18425
    mips_fcult_d,275,18493
    mips_fcult_w,276,18561
    mips_fcun_d,277,18629
    mips_fcun_w,278,18696
    mips_fcune_d,279,18763
    mips_fcune_w,280,18831
    mips_fdiv_d,281,18899
    mips_fdiv_w,282,18966
    mips_fexdo_h,283,19033
    mips_fexdo_w,284,19101
    mips_fexp2_d,285,19169
    mips_fexp2_w,286,19237
    mips_fexupl_d,287,19305
    mips_fexupl_w,288,19374
    mips_fexupr_d,289,19443
    mips_fexupr_w,290,19512
    mips_ffint_s_d,291,19581
    mips_ffint_s_w,292,19651
    mips_ffint_u_d,293,19721
    mips_ffint_u_w,294,19791
    mips_ffql_d,295,19861
    mips_ffql_w,296,19928
    mips_ffqr_d,297,19995
    mips_ffqr_w,298,20062
    mips_fill_b,299,20129
    mips_fill_d,300,20196
    mips_fill_h,301,20263
    mips_fill_w,302,20330
    mips_flog2_d,303,20397
    mips_flog2_w,304,20465
    mips_fmadd_d,305,20533
    mips_fmadd_w,306,20601
    mips_fmax_a_d,307,20669
    mips_fmax_a_w,308,20738
    mips_fmax_d,309,20807
    mips_fmax_w,310,20874
    mips_fmin_a_d,311,20941
    mips_fmin_a_w,312,21010
    mips_fmin_d,313,21079
    mips_fmin_w,314,21146
    mips_fmsub_d,315,21213
    mips_fmsub_w,316,21281
    mips_fmul_d,317,21349
    mips_fmul_w,318,21416
    mips_frcp_d,319,21483
    mips_frcp_w,320,21550
    mips_frint_d,321,21617
    mips_frint_w,322,21685
    mips_frsqrt_d,323,21753
    mips_frsqrt_w,324,21822
    mips_fsaf_d,325,21891
    mips_fsaf_w,326,21958
    mips_fseq_d,327,22025
    mips_fseq_w,328,22092
    mips_fsle_d,329,22159
    mips_fsle_w,330,22226
    mips_fslt_d,331,22293
    mips_fslt_w,332,22360
    mips_fsne_d,333,22427
    mips_fsne_w,334,22494
    mips_fsor_d,335,22561
    mips_fsor_w,336,22628
    mips_fsqrt_d,337,22695
    mips_fsqrt_w,338,22763
    mips_fsub_d,339,22831
    mips_fsub_w,340,22898
    mips_fsueq_d,341,22965
    mips_fsueq_w,342,23033
    mips_fsule_d,343,23101
    mips_fsule_w,344,23169
    mips_fsult_d,345,23237
    mips_fsult_w,346,23305
    mips_fsun_d,347,23373
    mips_fsun_w,348,23440
    mips_fsune_d,349,23507
    mips_fsune_w,350,23575
    mips_ftint_s_d,351,23643
    mips_ftint_s_w,352,23713
    mips_ftint_u_d,353,23783
    mips_ftint_u_w,354,23853
    mips_ftq_h,355,23923
    mips_ftq_w,356,23989
    mips_ftrunc_s_d,357,24055
    mips_ftrunc_s_w,358,24126
    mips_ftrunc_u_d,359,24197
    mips_ftrunc_u_w,360,24268
    mips_hadd_s_d,361,24339
    mips_hadd_s_h,362,24408
    mips_hadd_s_w,363,24477
    mips_hadd_u_d,364,24546
    mips_hadd_u_h,365,24615
    mips_hadd_u_w,366,24684
    mips_hsub_s_d,367,24753
    mips_hsub_s_h,368,24822
    mips_hsub_s_w,369,24891
    mips_hsub_u_d,370,24960
    mips_hsub_u_h,371,25029
    mips_hsub_u_w,372,25098
    mips_ilvev_b,373,25167
    mips_ilvev_d,374,25235
    mips_ilvev_h,375,25303
    mips_ilvev_w,376,25371
    mips_ilvl_b,377,25439
    mips_ilvl_d,378,25506
    mips_ilvl_h,379,25573
    mips_ilvl_w,380,25640
    mips_ilvod_b,381,25707
    mips_ilvod_d,382,25775
    mips_ilvod_h,383,25843
    mips_ilvod_w,384,25911
    mips_ilvr_b,385,25979
    mips_ilvr_d,386,26046
    mips_ilvr_h,387,26113
    mips_ilvr_w,388,26180
    mips_insert_b,389,26247
    mips_insert_d,390,26316
    mips_insert_h,391,26385
    mips_insert_w,392,26454
    mips_insv,393,26523
    mips_insve_b,394,26588
    mips_insve_d,395,26656
    mips_insve_h,396,26724
    mips_insve_w,397,26792
    mips_lbux,398,26860
    mips_ld_b,399,26925
    mips_ld_d,400,26990
    mips_ld_h,401,27055
    mips_ld_w,402,27120
    mips_ldi_b,403,27185
    mips_ldi_d,404,27251
    mips_ldi_h,405,27317
    mips_ldi_w,406,27383
    mips_ldr_d,407,27449
    mips_ldr_w,408,27515
    mips_lhx,409,27581
    mips_lsa,410,27645
    mips_lwx,411,27709
    mips_madd,412,27773
    mips_madd_q_h,413,27838
    mips_madd_q_w,414,27907
    mips_maddr_q_h,415,27976
    mips_maddr_q_w,416,28046
    mips_maddu,417,28116
    mips_maddv_b,418,28182
    mips_maddv_d,419,28250
    mips_maddv_h,420,28318
    mips_maddv_w,421,28386
    mips_maq_s_w_phl,422,28454
    mips_maq_s_w_phr,423,28526
    mips_maq_sa_w_phl,424,28598
    mips_maq_sa_w_phr,425,28671
    mips_max_a_b,426,28744
    mips_max_a_d,427,28812
    mips_max_a_h,428,28880
    mips_max_a_w,429,28948
    mips_max_s_b,430,29016
    mips_max_s_d,431,29084
    mips_max_s_h,432,29152
    mips_max_s_w,433,29220
    mips_max_u_b,434,29288
    mips_max_u_d,435,29356
    mips_max_u_h,436,29424
    mips_max_u_w,437,29492
    mips_maxi_s_b,438,29560
    mips_maxi_s_d,439,29629
    mips_maxi_s_h,440,29698
    mips_maxi_s_w,441,29767
    mips_maxi_u_b,442,29836
    mips_maxi_u_d,443,29905
    mips_maxi_u_h,444,29974
    mips_maxi_u_w,445,30043
    mips_min_a_b,446,30112
    mips_min_a_d,447,30180
    mips_min_a_h,448,30248
    mips_min_a_w,449,30316
    mips_min_s_b,450,30384
    mips_min_s_d,451,30452
    mips_min_s_h,452,30520
    mips_min_s_w,453,30588
    mips_min_u_b,454,30656
    mips_min_u_d,455,30724
    mips_min_u_h,456,30792
    mips_min_u_w,457,30860
    mips_mini_s_b,458,30928
    mips_mini_s_d,459,30997
    mips_mini_s_h,460,31066
    mips_mini_s_w,461,31135
    mips_mini_u_b,462,31204
    mips_mini_u_d,463,31273
    mips_mini_u_h,464,31342
    mips_mini_u_w,465,31411
    mips_mod_s_b,466,31480
    mips_mod_s_d,467,31548
    mips_mod_s_h,468,31616
    mips_mod_s_w,469,31684
    mips_mod_u_b,470,31752
    mips_mod_u_d,471,31820
    mips_mod_u_h,472,31888
    mips_mod_u_w,473,31956
    mips_modsub,474,32024
    mips_move_v,475,32091
    mips_msub,476,32158
    mips_msub_q_h,477,32223
    mips_msub_q_w,478,32292
    mips_msubr_q_h,479,32361
    mips_msubr_q_w,480,32431
    mips_msubu,481,32501
    mips_msubv_b,482,32567
    mips_msubv_d,483,32635
    mips_msubv_h,484,32703
    mips_msubv_w,485,32771
    mips_mthlip,486,32839
    mips_mul_ph,487,32906
    mips_mul_q_h,488,32973
    mips_mul_q_w,489,33041
    mips_mul_s_ph,490,33109
    mips_muleq_s_w_phl,491,33178
    mips_muleq_s_w_phr,492,33252
    mips_muleu_s_ph_qbl,493,33326
    mips_muleu_s_ph_qbr,494,33401
    mips_mulq_rs_ph,495,33476
    mips_mulq_rs_w,496,33547
    mips_mulq_s_ph,497,33617
    mips_mulq_s_w,498,33687
    mips_mulr_q_h,499,33756
    mips_mulr_q_w,500,33825
    mips_mulsa_w_ph,501,33894
    mips_mulsaq_s_w_ph,502,33965
    mips_mult,503,34039
    mips_multu,504,34104
    mips_mulv_b,505,34170
    mips_mulv_d,506,34237
    mips_mulv_h,507,34304
    mips_mulv_w,508,34371
    mips_nloc_b,509,34438
    mips_nloc_d,510,34505
    mips_nloc_h,511,34572
    mips_nloc_w,512,34639
    mips_nlzc_b,513,34706
    mips_nlzc_d,514,34773
    mips_nlzc_h,515,34840
    mips_nlzc_w,516,34907
    mips_nor_v,517,34974
    mips_nori_b,518,35040
    mips_or_v,519,35107
    mips_ori_b,520,35172
    mips_packrl_ph,521,35238
    mips_pckev_b,522,35308
    mips_pckev_d,523,35376
    mips_pckev_h,524,35444
    mips_pckev_w,525,35512
    mips_pckod_b,526,35580
    mips_pckod_d,527,35648
    mips_pckod_h,528,35716
    mips_pckod_w,529,35784
    mips_pcnt_b,530,35852
    mips_pcnt_d,531,35919
    mips_pcnt_h,532,35986
    mips_pcnt_w,533,36053
    mips_pick_ph,534,36120
    mips_pick_qb,535,36188
    mips_preceq_w_phl,536,36256
    mips_preceq_w_phr,537,36329
    mips_precequ_ph_qbl,538,36402
    mips_precequ_ph_qbla,539,36477
    mips_precequ_ph_qbr,540,36553
    mips_precequ_ph_qbra,541,36628
    mips_preceu_ph_qbl,542,36704
    mips_preceu_ph_qbla,543,36778
    mips_preceu_ph_qbr,544,36853
    mips_preceu_ph_qbra,545,36927
    mips_precr_qb_ph,546,37002
    mips_precr_sra_ph_w,547,37074
    mips_precr_sra_r_ph_w,548,37149
    mips_precrq_ph_w,549,37226
    mips_precrq_qb_ph,550,37298
    mips_precrq_rs_ph_w,551,37371
    mips_precrqu_s_qb_ph,552,37446
    mips_prepend,553,37522
    mips_raddu_w_qb,554,37590
    mips_rddsp,555,37661
    mips_repl_ph,556,37727
    mips_repl_qb,557,37795
    mips_sat_s_b,558,37863
    mips_sat_s_d,559,37931
    mips_sat_s_h,560,37999
    mips_sat_s_w,561,38067
    mips_sat_u_b,562,38135
    mips_sat_u_d,563,38203
    mips_sat_u_h,564,38271
    mips_sat_u_w,565,38339
    mips_shf_b,566,38407
    mips_shf_h,567,38473
    mips_shf_w,568,38539
    mips_shilo,569,38605
    mips_shll_ph,570,38671
    mips_shll_qb,571,38739
    mips_shll_s_ph,572,38807
    mips_shll_s_w,573,38877
    mips_shra_ph,574,38946
    mips_shra_qb,575,39014
    mips_shra_r_ph,576,39082
    mips_shra_r_qb,577,39152
    mips_shra_r_w,578,39222
    mips_shrl_ph,579,39291
    mips_shrl_qb,580,39359
    mips_sld_b,581,39427
    mips_sld_d,582,39493
    mips_sld_h,583,39559
    mips_sld_w,584,39625
    mips_sldi_b,585,39691
    mips_sldi_d,586,39758
    mips_sldi_h,587,39825
    mips_sldi_w,588,39892
    mips_sll_b,589,39959
    mips_sll_d,590,40025
    mips_sll_h,591,40091
    mips_sll_w,592,40157
    mips_slli_b,593,40223
    mips_slli_d,594,40290
    mips_slli_h,595,40357
    mips_slli_w,596,40424
    mips_splat_b,597,40491
    mips_splat_d,598,40559
    mips_splat_h,599,40627
    mips_splat_w,600,40695
    mips_splati_b,601,40763
    mips_splati_d,602,40832
    mips_splati_h,603,40901
    mips_splati_w,604,40970
    mips_sra_b,605,41039
    mips_sra_d,606,41105
    mips_sra_h,607,41171
    mips_sra_w,608,41237
    mips_srai_b,609,41303
    mips_srai_d,610,41370
    mips_srai_h,611,41437
    mips_srai_w,612,41504
    mips_srar_b,613,41571
    mips_srar_d,614,41638
    mips_srar_h,615,41705
    mips_srar_w,616,41772
    mips_srari_b,617,41839
    mips_srari_d,618,41907
    mips_srari_h,619,41975
    mips_srari_w,620,42043
    mips_srl_b,621,42111
    mips_srl_d,622,42177
    mips_srl_h,623,42243
    mips_srl_w,624,42309
    mips_srli_b,625,42375
    mips_srli_d,626,42442
    mips_srli_h,627,42509
    mips_srli_w,628,42576
    mips_srlr_b,629,42643
    mips_srlr_d,630,42710
    mips_srlr_h,631,42777
    mips_srlr_w,632,42844
    mips_srlri_b,633,42911
    mips_srlri_d,634,42979
    mips_srlri_h,635,43047
    mips_srlri_w,636,43115
    mips_st_b,637,43183
    mips_st_d,638,43248
    mips_st_h,639,43313
    mips_st_w,640,43378
    mips_str_d,641,43443
    mips_str_w,642,43509
    mips_subq_ph,643,43575
    mips_subq_s_ph,644,43643
    mips_subq_s_w,645,43713
    mips_subqh_ph,646,43782
    mips_subqh_r_ph,647,43851
    mips_subqh_r_w,648,43922
    mips_subqh_w,649,43992
    mips_subs_s_b,650,44060
    mips_subs_s_d,651,44129
    mips_subs_s_h,652,44198
    mips_subs_s_w,653,44267
    mips_subs_u_b,654,44336
    mips_subs_u_d,655,44405
    mips_subs_u_h,656,44474
    mips_subs_u_w,657,44543
    mips_subsus_u_b,658,44612
    mips_subsus_u_d,659,44683
    mips_subsus_u_h,660,44754
    mips_subsus_u_w,661,44825
    mips_subsuu_s_b,662,44896
    mips_subsuu_s_d,663,44967
    mips_subsuu_s_h,664,45038
    mips_subsuu_s_w,665,45109
    mips_subu_ph,666,45180
    mips_subu_qb,667,45248
    mips_subu_s_ph,668,45316
    mips_subu_s_qb,669,45386
    mips_subuh_qb,670,45456
    mips_subuh_r_qb,671,45525
    mips_subv_b,672,45596
    mips_subv_d,673,45663
    mips_subv_h,674,45730
    mips_subv_w,675,45797
    mips_subvi_b,676,45864
    mips_subvi_d,677,45932
    mips_subvi_h,678,46000
    mips_subvi_w,679,46068
    mips_vshf_b,680,46136
    mips_vshf_d,681,46203
    mips_vshf_h,682,46270
    mips_vshf_w,683,46337
    mips_wrdsp,684,46404
    mips_xor_v,685,46470
    mips_xori_b,686,46536

/usr/include/llvm/IR/IntrinsicsNVPTX.h,73737
#define LLVM_IR_INTRINSIC_NVVM_ENUMS_H10,607
enum NVVMIntrinsics 14,686
    nvvm_abs_bf16 16,749
    nvvm_abs_bf16x2,17,825
    nvvm_add_rm_d,18,896
    nvvm_add_rm_f,19,965
    nvvm_add_rm_ftz_f,20,1034
    nvvm_add_rn_d,21,1107
    nvvm_add_rn_f,22,1176
    nvvm_add_rn_ftz_f,23,1245
    nvvm_add_rp_d,24,1318
    nvvm_add_rp_f,25,1387
    nvvm_add_rp_ftz_f,26,1456
    nvvm_add_rz_d,27,1529
    nvvm_add_rz_f,28,1598
    nvvm_add_rz_ftz_f,29,1667
    nvvm_atomic_add_gen_f_cta,30,1740
    nvvm_atomic_add_gen_f_sys,31,1821
    nvvm_atomic_add_gen_i_cta,32,1902
    nvvm_atomic_add_gen_i_sys,33,1983
    nvvm_atomic_and_gen_i_cta,34,2064
    nvvm_atomic_and_gen_i_sys,35,2145
    nvvm_atomic_cas_gen_i_cta,36,2226
    nvvm_atomic_cas_gen_i_sys,37,2307
    nvvm_atomic_dec_gen_i_cta,38,2388
    nvvm_atomic_dec_gen_i_sys,39,2469
    nvvm_atomic_exch_gen_i_cta,40,2550
    nvvm_atomic_exch_gen_i_sys,41,2632
    nvvm_atomic_inc_gen_i_cta,42,2714
    nvvm_atomic_inc_gen_i_sys,43,2795
    nvvm_atomic_load_dec_32,44,2876
    nvvm_atomic_load_inc_32,45,2955
    nvvm_atomic_max_gen_i_cta,46,3034
    nvvm_atomic_max_gen_i_sys,47,3115
    nvvm_atomic_min_gen_i_cta,48,3196
    nvvm_atomic_min_gen_i_sys,49,3277
    nvvm_atomic_or_gen_i_cta,50,3358
    nvvm_atomic_or_gen_i_sys,51,3438
    nvvm_atomic_xor_gen_i_cta,52,3518
    nvvm_atomic_xor_gen_i_sys,53,3599
    nvvm_bar_sync,54,3680
    nvvm_bar_warp_sync,55,3749
    nvvm_barrier,56,3823
    nvvm_barrier_cluster_arrive,57,3891
    nvvm_barrier_cluster_arrive_aligned,58,3974
    nvvm_barrier_cluster_arrive_relaxed,59,4065
    nvvm_barrier_cluster_arrive_relaxed_aligned,60,4156
    nvvm_barrier_cluster_wait,61,4258
    nvvm_barrier_cluster_wait_aligned,62,4339
    nvvm_barrier_n,63,4428
    nvvm_barrier_sync,64,4498
    nvvm_barrier_sync_cnt,65,4571
    nvvm_barrier0,66,4648
    nvvm_barrier0_and,67,4717
    nvvm_barrier0_or,68,4790
    nvvm_barrier0_popc,69,4862
    nvvm_bf2h_rn,70,4936
    nvvm_bf2h_rn_ftz,71,5004
    nvvm_bitcast_d2ll,72,5076
    nvvm_bitcast_f2i,73,5149
    nvvm_bitcast_i2f,74,5221
    nvvm_bitcast_ll2d,75,5293
    nvvm_ceil_d,76,5366
    nvvm_ceil_f,77,5433
    nvvm_ceil_ftz_f,78,5500
    nvvm_compiler_error,79,5571
    nvvm_compiler_warn,80,5646
    nvvm_cos_approx_f,81,5720
    nvvm_cos_approx_ftz_f,82,5793
    nvvm_cp_async_bulk_commit_group,83,5870
    nvvm_cp_async_bulk_wait_group,84,5957
    nvvm_cp_async_bulk_wait_group_read,85,6042
    nvvm_cp_async_ca_shared_global_16,86,6132
    nvvm_cp_async_ca_shared_global_16_s,87,6221
    nvvm_cp_async_ca_shared_global_4,88,6312
    nvvm_cp_async_ca_shared_global_4_s,89,6400
    nvvm_cp_async_ca_shared_global_8,90,6490
    nvvm_cp_async_ca_shared_global_8_s,91,6578
    nvvm_cp_async_cg_shared_global_16,92,6668
    nvvm_cp_async_cg_shared_global_16_s,93,6757
    nvvm_cp_async_commit_group,94,6848
    nvvm_cp_async_mbarrier_arrive,95,6930
    nvvm_cp_async_mbarrier_arrive_noinc,96,7015
    nvvm_cp_async_mbarrier_arrive_noinc_shared,97,7106
    nvvm_cp_async_mbarrier_arrive_shared,98,7206
    nvvm_cp_async_wait_all,99,7298
    nvvm_cp_async_wait_group,100,7376
    nvvm_d2f_rm,101,7456
    nvvm_d2f_rm_ftz,102,7523
    nvvm_d2f_rn,103,7594
    nvvm_d2f_rn_ftz,104,7661
    nvvm_d2f_rp,105,7732
    nvvm_d2f_rp_ftz,106,7799
    nvvm_d2f_rz,107,7870
    nvvm_d2f_rz_ftz,108,7937
    nvvm_d2i_hi,109,8008
    nvvm_d2i_lo,110,8075
    nvvm_d2i_rm,111,8142
    nvvm_d2i_rn,112,8209
    nvvm_d2i_rp,113,8276
    nvvm_d2i_rz,114,8343
    nvvm_d2ll_rm,115,8410
    nvvm_d2ll_rn,116,8478
    nvvm_d2ll_rp,117,8546
    nvvm_d2ll_rz,118,8614
    nvvm_d2ui_rm,119,8682
    nvvm_d2ui_rn,120,8750
    nvvm_d2ui_rp,121,8818
    nvvm_d2ui_rz,122,8886
    nvvm_d2ull_rm,123,8954
    nvvm_d2ull_rn,124,9023
    nvvm_d2ull_rp,125,9092
    nvvm_d2ull_rz,126,9161
    nvvm_div_approx_f,127,9230
    nvvm_div_approx_ftz_f,128,9303
    nvvm_div_rm_d,129,9380
    nvvm_div_rm_f,130,9449
    nvvm_div_rm_ftz_f,131,9518
    nvvm_div_rn_d,132,9591
    nvvm_div_rn_f,133,9660
    nvvm_div_rn_ftz_f,134,9729
    nvvm_div_rp_d,135,9802
    nvvm_div_rp_f,136,9871
    nvvm_div_rp_ftz_f,137,9940
    nvvm_div_rz_d,138,10013
    nvvm_div_rz_f,139,10082
    nvvm_div_rz_ftz_f,140,10151
    nvvm_ex2_approx_d,141,10224
    nvvm_ex2_approx_f,142,10297
    nvvm_ex2_approx_f16,143,10370
    nvvm_ex2_approx_f16x2,144,10445
    nvvm_ex2_approx_ftz_f,145,10522
    nvvm_f2bf16_rn,146,10599
    nvvm_f2bf16_rn_relu,147,10669
    nvvm_f2bf16_rz,148,10744
    nvvm_f2bf16_rz_relu,149,10814
    nvvm_f2h_rn,150,10889
    nvvm_f2h_rn_ftz,151,10956
    nvvm_f2i_rm,152,11027
    nvvm_f2i_rm_ftz,153,11094
    nvvm_f2i_rn,154,11165
    nvvm_f2i_rn_ftz,155,11232
    nvvm_f2i_rp,156,11303
    nvvm_f2i_rp_ftz,157,11370
    nvvm_f2i_rz,158,11441
    nvvm_f2i_rz_ftz,159,11508
    nvvm_f2ll_rm,160,11579
    nvvm_f2ll_rm_ftz,161,11647
    nvvm_f2ll_rn,162,11719
    nvvm_f2ll_rn_ftz,163,11787
    nvvm_f2ll_rp,164,11859
    nvvm_f2ll_rp_ftz,165,11927
    nvvm_f2ll_rz,166,11999
    nvvm_f2ll_rz_ftz,167,12067
    nvvm_f2tf32_rna,168,12139
    nvvm_f2ui_rm,169,12210
    nvvm_f2ui_rm_ftz,170,12278
    nvvm_f2ui_rn,171,12350
    nvvm_f2ui_rn_ftz,172,12418
    nvvm_f2ui_rp,173,12490
    nvvm_f2ui_rp_ftz,174,12558
    nvvm_f2ui_rz,175,12630
    nvvm_f2ui_rz_ftz,176,12698
    nvvm_f2ull_rm,177,12770
    nvvm_f2ull_rm_ftz,178,12839
    nvvm_f2ull_rn,179,12912
    nvvm_f2ull_rn_ftz,180,12981
    nvvm_f2ull_rp,181,13054
    nvvm_f2ull_rp_ftz,182,13123
    nvvm_f2ull_rz,183,13196
    nvvm_f2ull_rz_ftz,184,13265
    nvvm_fabs_d,185,13338
    nvvm_fabs_f,186,13405
    nvvm_fabs_ftz_f,187,13472
    nvvm_fence_sc_cluster,188,13543
    nvvm_ff2bf16x2_rn,189,13620
    nvvm_ff2bf16x2_rn_relu,190,13693
    nvvm_ff2bf16x2_rz,191,13771
    nvvm_ff2bf16x2_rz_relu,192,13844
    nvvm_ff2f16x2_rn,193,13922
    nvvm_ff2f16x2_rn_relu,194,13994
    nvvm_ff2f16x2_rz,195,14071
    nvvm_ff2f16x2_rz_relu,196,14143
    nvvm_floor_d,197,14220
    nvvm_floor_f,198,14288
    nvvm_floor_ftz_f,199,14356
    nvvm_fma_rm_d,200,14428
    nvvm_fma_rm_f,201,14497
    nvvm_fma_rm_ftz_f,202,14566
    nvvm_fma_rn_bf16,203,14639
    nvvm_fma_rn_bf16x2,204,14711
    nvvm_fma_rn_d,205,14785
    nvvm_fma_rn_f,206,14854
    nvvm_fma_rn_f16,207,14923
    nvvm_fma_rn_f16x2,208,14994
    nvvm_fma_rn_ftz_bf16,209,15067
    nvvm_fma_rn_ftz_bf16x2,210,15143
    nvvm_fma_rn_ftz_f,211,15221
    nvvm_fma_rn_ftz_f16,212,15294
    nvvm_fma_rn_ftz_f16x2,213,15369
    nvvm_fma_rn_ftz_relu_bf16,214,15446
    nvvm_fma_rn_ftz_relu_bf16x2,215,15527
    nvvm_fma_rn_ftz_relu_f16,216,15610
    nvvm_fma_rn_ftz_relu_f16x2,217,15690
    nvvm_fma_rn_ftz_sat_bf16,218,15772
    nvvm_fma_rn_ftz_sat_bf16x2,219,15852
    nvvm_fma_rn_ftz_sat_f16,220,15934
    nvvm_fma_rn_ftz_sat_f16x2,221,16013
    nvvm_fma_rn_relu_bf16,222,16094
    nvvm_fma_rn_relu_bf16x2,223,16171
    nvvm_fma_rn_relu_f16,224,16250
    nvvm_fma_rn_relu_f16x2,225,16326
    nvvm_fma_rn_sat_bf16,226,16404
    nvvm_fma_rn_sat_bf16x2,227,16480
    nvvm_fma_rn_sat_f16,228,16558
    nvvm_fma_rn_sat_f16x2,229,16633
    nvvm_fma_rp_d,230,16710
    nvvm_fma_rp_f,231,16779
    nvvm_fma_rp_ftz_f,232,16848
    nvvm_fma_rz_d,233,16921
    nvvm_fma_rz_f,234,16990
    nvvm_fma_rz_ftz_f,235,17059
    nvvm_fmax_bf16,236,17132
    nvvm_fmax_bf16x2,237,17202
    nvvm_fmax_d,238,17274
    nvvm_fmax_f,239,17341
    nvvm_fmax_f16,240,17408
    nvvm_fmax_f16x2,241,17477
    nvvm_fmax_ftz_bf16,242,17548
    nvvm_fmax_ftz_bf16x2,243,17622
    nvvm_fmax_ftz_f,244,17698
    nvvm_fmax_ftz_f16,245,17769
    nvvm_fmax_ftz_f16x2,246,17842
    nvvm_fmax_ftz_nan_bf16,247,17917
    nvvm_fmax_ftz_nan_bf16x2,248,17995
    nvvm_fmax_ftz_nan_f,249,18075
    nvvm_fmax_ftz_nan_f16,250,18150
    nvvm_fmax_ftz_nan_f16x2,251,18227
    nvvm_fmax_ftz_nan_xorsign_abs_bf16,252,18306
    nvvm_fmax_ftz_nan_xorsign_abs_bf16x2,253,18396
    nvvm_fmax_ftz_nan_xorsign_abs_f,254,18488
    nvvm_fmax_ftz_nan_xorsign_abs_f16,255,18575
    nvvm_fmax_ftz_nan_xorsign_abs_f16x2,256,18664
    nvvm_fmax_ftz_xorsign_abs_bf16,257,18755
    nvvm_fmax_ftz_xorsign_abs_bf16x2,258,18841
    nvvm_fmax_ftz_xorsign_abs_f,259,18929
    nvvm_fmax_ftz_xorsign_abs_f16,260,19012
    nvvm_fmax_ftz_xorsign_abs_f16x2,261,19097
    nvvm_fmax_nan_bf16,262,19184
    nvvm_fmax_nan_bf16x2,263,19258
    nvvm_fmax_nan_f,264,19334
    nvvm_fmax_nan_f16,265,19405
    nvvm_fmax_nan_f16x2,266,19478
    nvvm_fmax_nan_xorsign_abs_bf16,267,19553
    nvvm_fmax_nan_xorsign_abs_bf16x2,268,19639
    nvvm_fmax_nan_xorsign_abs_f,269,19727
    nvvm_fmax_nan_xorsign_abs_f16,270,19810
    nvvm_fmax_nan_xorsign_abs_f16x2,271,19895
    nvvm_fmax_xorsign_abs_bf16,272,19982
    nvvm_fmax_xorsign_abs_bf16x2,273,20064
    nvvm_fmax_xorsign_abs_f,274,20148
    nvvm_fmax_xorsign_abs_f16,275,20227
    nvvm_fmax_xorsign_abs_f16x2,276,20308
    nvvm_fmin_bf16,277,20391
    nvvm_fmin_bf16x2,278,20461
    nvvm_fmin_d,279,20533
    nvvm_fmin_f,280,20600
    nvvm_fmin_f16,281,20667
    nvvm_fmin_f16x2,282,20736
    nvvm_fmin_ftz_bf16,283,20807
    nvvm_fmin_ftz_bf16x2,284,20881
    nvvm_fmin_ftz_f,285,20957
    nvvm_fmin_ftz_f16,286,21028
    nvvm_fmin_ftz_f16x2,287,21101
    nvvm_fmin_ftz_nan_bf16,288,21176
    nvvm_fmin_ftz_nan_bf16x2,289,21254
    nvvm_fmin_ftz_nan_f,290,21334
    nvvm_fmin_ftz_nan_f16,291,21409
    nvvm_fmin_ftz_nan_f16x2,292,21486
    nvvm_fmin_ftz_nan_xorsign_abs_bf16,293,21565
    nvvm_fmin_ftz_nan_xorsign_abs_bf16x2,294,21655
    nvvm_fmin_ftz_nan_xorsign_abs_f,295,21747
    nvvm_fmin_ftz_nan_xorsign_abs_f16,296,21834
    nvvm_fmin_ftz_nan_xorsign_abs_f16x2,297,21923
    nvvm_fmin_ftz_xorsign_abs_bf16,298,22014
    nvvm_fmin_ftz_xorsign_abs_bf16x2,299,22100
    nvvm_fmin_ftz_xorsign_abs_f,300,22188
    nvvm_fmin_ftz_xorsign_abs_f16,301,22271
    nvvm_fmin_ftz_xorsign_abs_f16x2,302,22356
    nvvm_fmin_nan_bf16,303,22443
    nvvm_fmin_nan_bf16x2,304,22517
    nvvm_fmin_nan_f,305,22593
    nvvm_fmin_nan_f16,306,22664
    nvvm_fmin_nan_f16x2,307,22737
    nvvm_fmin_nan_xorsign_abs_bf16,308,22812
    nvvm_fmin_nan_xorsign_abs_bf16x2,309,22898
    nvvm_fmin_nan_xorsign_abs_f,310,22986
    nvvm_fmin_nan_xorsign_abs_f16,311,23069
    nvvm_fmin_nan_xorsign_abs_f16x2,312,23154
    nvvm_fmin_xorsign_abs_bf16,313,23241
    nvvm_fmin_xorsign_abs_bf16x2,314,23323
    nvvm_fmin_xorsign_abs_f,315,23407
    nvvm_fmin_xorsign_abs_f16,316,23486
    nvvm_fmin_xorsign_abs_f16x2,317,23567
    nvvm_fns,318,23650
    nvvm_getctarank,319,23714
    nvvm_getctarank_shared_cluster,320,23785
    nvvm_i2d_rm,321,23871
    nvvm_i2d_rn,322,23938
    nvvm_i2d_rp,323,24005
    nvvm_i2d_rz,324,24072
    nvvm_i2f_rm,325,24139
    nvvm_i2f_rn,326,24206
    nvvm_i2f_rp,327,24273
    nvvm_i2f_rz,328,24340
    nvvm_is_explicit_cluster,329,24407
    nvvm_isspacep_const,330,24487
    nvvm_isspacep_global,331,24562
    nvvm_isspacep_local,332,24638
    nvvm_isspacep_shared,333,24713
    nvvm_isspacep_shared_cluster,334,24789
    nvvm_istypep_sampler,335,24873
    nvvm_istypep_surface,336,24949
    nvvm_istypep_texture,337,25025
    nvvm_ldg_global_f,338,25101
    nvvm_ldg_global_i,339,25174
    nvvm_ldg_global_p,340,25247
    nvvm_ldmatrix_sync_aligned_m8n8_x1_b16,341,25320
    nvvm_ldmatrix_sync_aligned_m8n8_x1_trans_b16,342,25414
    nvvm_ldmatrix_sync_aligned_m8n8_x2_b16,343,25518
    nvvm_ldmatrix_sync_aligned_m8n8_x2_trans_b16,344,25612
    nvvm_ldmatrix_sync_aligned_m8n8_x4_b16,345,25716
    nvvm_ldmatrix_sync_aligned_m8n8_x4_trans_b16,346,25810
    nvvm_ldu_global_f,347,25914
    nvvm_ldu_global_i,348,25987
    nvvm_ldu_global_p,349,26060
    nvvm_lg2_approx_d,350,26133
    nvvm_lg2_approx_f,351,26206
    nvvm_lg2_approx_ftz_f,352,26279
    nvvm_ll2d_rm,353,26356
    nvvm_ll2d_rn,354,26424
    nvvm_ll2d_rp,355,26492
    nvvm_ll2d_rz,356,26560
    nvvm_ll2f_rm,357,26628
    nvvm_ll2f_rn,358,26696
    nvvm_ll2f_rp,359,26764
    nvvm_ll2f_rz,360,26832
    nvvm_lohi_i2d,361,26900
    nvvm_mapa,362,26969
    nvvm_mapa_shared_cluster,363,27034
    nvvm_match_all_sync_i32p,364,27114
    nvvm_match_all_sync_i64p,365,27194
    nvvm_match_any_sync_i32,366,27274
    nvvm_match_any_sync_i64,367,27353
    nvvm_mbarrier_arrive,368,27432
    nvvm_mbarrier_arrive_drop,369,27508
    nvvm_mbarrier_arrive_drop_noComplete,370,27589
    nvvm_mbarrier_arrive_drop_noComplete_shared,371,27681
    nvvm_mbarrier_arrive_drop_shared,372,27783
    nvvm_mbarrier_arrive_noComplete,373,27871
    nvvm_mbarrier_arrive_noComplete_shared,374,27958
    nvvm_mbarrier_arrive_shared,375,28052
    nvvm_mbarrier_init,376,28135
    nvvm_mbarrier_init_shared,377,28209
    nvvm_mbarrier_inval,378,28290
    nvvm_mbarrier_inval_shared,379,28365
    nvvm_mbarrier_pending_count,380,28447
    nvvm_mbarrier_test_wait,381,28530
    nvvm_mbarrier_test_wait_shared,382,28609
    nvvm_membar_cta,383,28695
    nvvm_membar_gl,384,28766
    nvvm_membar_sys,385,28836
    nvvm_mma_and_popc_m16n8k128_row_col_b1,386,28907
    nvvm_mma_and_popc_m16n8k256_row_col_b1,387,29001
    nvvm_mma_and_popc_m8n8k128_row_col_b1,388,29095
    nvvm_mma_m16n8k16_row_col_bf16,389,29188
    nvvm_mma_m16n8k16_row_col_f16_f16,390,29274
    nvvm_mma_m16n8k16_row_col_f16_f32,391,29363
    nvvm_mma_m16n8k16_row_col_f32_f16,392,29452
    nvvm_mma_m16n8k16_row_col_f32_f32,393,29541
    nvvm_mma_m16n8k16_row_col_s8,394,29630
    nvvm_mma_m16n8k16_row_col_s8_u8,395,29714
    nvvm_mma_m16n8k16_row_col_satfinite_s8,396,29801
    nvvm_mma_m16n8k16_row_col_satfinite_s8_u8,397,29895
    nvvm_mma_m16n8k16_row_col_satfinite_u8,398,29993
    nvvm_mma_m16n8k16_row_col_satfinite_u8_s8,399,30087
    nvvm_mma_m16n8k16_row_col_u8,400,30185
    nvvm_mma_m16n8k16_row_col_u8_s8,401,30269
    nvvm_mma_m16n8k32_row_col_s4,402,30356
    nvvm_mma_m16n8k32_row_col_s4_u4,403,30440
    nvvm_mma_m16n8k32_row_col_s8,404,30527
    nvvm_mma_m16n8k32_row_col_s8_u8,405,30611
    nvvm_mma_m16n8k32_row_col_satfinite_s4,406,30698
    nvvm_mma_m16n8k32_row_col_satfinite_s4_u4,407,30792
    nvvm_mma_m16n8k32_row_col_satfinite_s8,408,30890
    nvvm_mma_m16n8k32_row_col_satfinite_s8_u8,409,30984
    nvvm_mma_m16n8k32_row_col_satfinite_u4,410,31082
    nvvm_mma_m16n8k32_row_col_satfinite_u4_s4,411,31176
    nvvm_mma_m16n8k32_row_col_satfinite_u8,412,31274
    nvvm_mma_m16n8k32_row_col_satfinite_u8_s8,413,31368
    nvvm_mma_m16n8k32_row_col_u4,414,31466
    nvvm_mma_m16n8k32_row_col_u4_s4,415,31550
    nvvm_mma_m16n8k32_row_col_u8,416,31637
    nvvm_mma_m16n8k32_row_col_u8_s8,417,31721
    nvvm_mma_m16n8k4_row_col_tf32,418,31808
    nvvm_mma_m16n8k64_row_col_s4,419,31893
    nvvm_mma_m16n8k64_row_col_s4_u4,420,31977
    nvvm_mma_m16n8k64_row_col_satfinite_s4,421,32064
    nvvm_mma_m16n8k64_row_col_satfinite_s4_u4,422,32158
    nvvm_mma_m16n8k64_row_col_satfinite_u4,423,32256
    nvvm_mma_m16n8k64_row_col_satfinite_u4_s4,424,32350
    nvvm_mma_m16n8k64_row_col_u4,425,32448
    nvvm_mma_m16n8k64_row_col_u4_s4,426,32532
    nvvm_mma_m16n8k8_row_col_bf16,427,32619
    nvvm_mma_m16n8k8_row_col_f16_f16,428,32704
    nvvm_mma_m16n8k8_row_col_f32_f32,429,32792
    nvvm_mma_m16n8k8_row_col_tf32,430,32880
    nvvm_mma_m8n8k16_row_col_s8,431,32965
    nvvm_mma_m8n8k16_row_col_s8_u8,432,33048
    nvvm_mma_m8n8k16_row_col_satfinite_s8,433,33134
    nvvm_mma_m8n8k16_row_col_satfinite_s8_u8,434,33227
    nvvm_mma_m8n8k16_row_col_satfinite_u8,435,33323
    nvvm_mma_m8n8k16_row_col_satfinite_u8_s8,436,33416
    nvvm_mma_m8n8k16_row_col_u8,437,33512
    nvvm_mma_m8n8k16_row_col_u8_s8,438,33595
    nvvm_mma_m8n8k32_row_col_s4,439,33681
    nvvm_mma_m8n8k32_row_col_s4_u4,440,33764
    nvvm_mma_m8n8k32_row_col_satfinite_s4,441,33850
    nvvm_mma_m8n8k32_row_col_satfinite_s4_u4,442,33943
    nvvm_mma_m8n8k32_row_col_satfinite_u4,443,34039
    nvvm_mma_m8n8k32_row_col_satfinite_u4_s4,444,34132
    nvvm_mma_m8n8k32_row_col_u4,445,34228
    nvvm_mma_m8n8k32_row_col_u4_s4,446,34311
    nvvm_mma_m8n8k4_col_col_f16_f16,447,34397
    nvvm_mma_m8n8k4_col_col_f32_f16,448,34484
    nvvm_mma_m8n8k4_col_col_f32_f32,449,34571
    nvvm_mma_m8n8k4_col_row_f16_f16,450,34658
    nvvm_mma_m8n8k4_col_row_f32_f16,451,34745
    nvvm_mma_m8n8k4_col_row_f32_f32,452,34832
    nvvm_mma_m8n8k4_row_col_f16_f16,453,34919
    nvvm_mma_m8n8k4_row_col_f32_f16,454,35006
    nvvm_mma_m8n8k4_row_col_f32_f32,455,35093
    nvvm_mma_m8n8k4_row_col_f64,456,35180
    nvvm_mma_m8n8k4_row_row_f16_f16,457,35263
    nvvm_mma_m8n8k4_row_row_f32_f16,458,35350
    nvvm_mma_m8n8k4_row_row_f32_f32,459,35437
    nvvm_mma_xor_popc_m16n8k128_row_col_b1,460,35524
    nvvm_mma_xor_popc_m16n8k256_row_col_b1,461,35618
    nvvm_mma_xor_popc_m8n8k128_row_col_b1,462,35712
    nvvm_move_double,463,35805
    nvvm_move_float,464,35877
    nvvm_move_i16,465,35948
    nvvm_move_i32,466,36017
    nvvm_move_i64,467,36086
    nvvm_move_ptr,468,36155
    nvvm_mul_rm_d,469,36224
    nvvm_mul_rm_f,470,36293
    nvvm_mul_rm_ftz_f,471,36362
    nvvm_mul_rn_d,472,36435
    nvvm_mul_rn_f,473,36504
    nvvm_mul_rn_ftz_f,474,36573
    nvvm_mul_rp_d,475,36646
    nvvm_mul_rp_f,476,36715
    nvvm_mul_rp_ftz_f,477,36784
    nvvm_mul_rz_d,478,36857
    nvvm_mul_rz_f,479,36926
    nvvm_mul_rz_ftz_f,480,36995
    nvvm_mul24_i,481,37068
    nvvm_mul24_ui,482,37136
    nvvm_mulhi_i,483,37205
    nvvm_mulhi_ll,484,37273
    nvvm_mulhi_s,485,37342
    nvvm_mulhi_ui,486,37410
    nvvm_mulhi_ull,487,37479
    nvvm_mulhi_us,488,37549
    nvvm_neg_bf16,489,37618
    nvvm_neg_bf16x2,490,37687
    nvvm_prmt,491,37758
    nvvm_ptr_constant_to_gen,492,37823
    nvvm_ptr_gen_to_constant,493,37903
    nvvm_ptr_gen_to_global,494,37983
    nvvm_ptr_gen_to_local,495,38061
    nvvm_ptr_gen_to_param,496,38138
    nvvm_ptr_gen_to_shared,497,38215
    nvvm_ptr_global_to_gen,498,38293
    nvvm_ptr_local_to_gen,499,38371
    nvvm_ptr_shared_to_gen,500,38448
    nvvm_rcp_approx_ftz_d,501,38526
    nvvm_rcp_approx_ftz_f,502,38603
    nvvm_rcp_rm_d,503,38680
    nvvm_rcp_rm_f,504,38749
    nvvm_rcp_rm_ftz_f,505,38818
    nvvm_rcp_rn_d,506,38891
    nvvm_rcp_rn_f,507,38960
    nvvm_rcp_rn_ftz_f,508,39029
    nvvm_rcp_rp_d,509,39102
    nvvm_rcp_rp_f,510,39171
    nvvm_rcp_rp_ftz_f,511,39240
    nvvm_rcp_rz_d,512,39313
    nvvm_rcp_rz_f,513,39382
    nvvm_rcp_rz_ftz_f,514,39451
    nvvm_read_ptx_sreg_clock,515,39524
    nvvm_read_ptx_sreg_clock64,516,39604
    nvvm_read_ptx_sreg_cluster_ctaid_w,517,39686
    nvvm_read_ptx_sreg_cluster_ctaid_x,518,39776
    nvvm_read_ptx_sreg_cluster_ctaid_y,519,39866
    nvvm_read_ptx_sreg_cluster_ctaid_z,520,39956
    nvvm_read_ptx_sreg_cluster_ctarank,521,40046
    nvvm_read_ptx_sreg_cluster_nctaid_w,522,40136
    nvvm_read_ptx_sreg_cluster_nctaid_x,523,40227
    nvvm_read_ptx_sreg_cluster_nctaid_y,524,40318
    nvvm_read_ptx_sreg_cluster_nctaid_z,525,40409
    nvvm_read_ptx_sreg_cluster_nctarank,526,40500
    nvvm_read_ptx_sreg_clusterid_w,527,40591
    nvvm_read_ptx_sreg_clusterid_x,528,40677
    nvvm_read_ptx_sreg_clusterid_y,529,40763
    nvvm_read_ptx_sreg_clusterid_z,530,40849
    nvvm_read_ptx_sreg_ctaid_w,531,40935
    nvvm_read_ptx_sreg_ctaid_x,532,41017
    nvvm_read_ptx_sreg_ctaid_y,533,41099
    nvvm_read_ptx_sreg_ctaid_z,534,41181
    nvvm_read_ptx_sreg_envreg0,535,41263
    nvvm_read_ptx_sreg_envreg1,536,41345
    nvvm_read_ptx_sreg_envreg10,537,41427
    nvvm_read_ptx_sreg_envreg11,538,41510
    nvvm_read_ptx_sreg_envreg12,539,41593
    nvvm_read_ptx_sreg_envreg13,540,41676
    nvvm_read_ptx_sreg_envreg14,541,41759
    nvvm_read_ptx_sreg_envreg15,542,41842
    nvvm_read_ptx_sreg_envreg16,543,41925
    nvvm_read_ptx_sreg_envreg17,544,42008
    nvvm_read_ptx_sreg_envreg18,545,42091
    nvvm_read_ptx_sreg_envreg19,546,42174
    nvvm_read_ptx_sreg_envreg2,547,42257
    nvvm_read_ptx_sreg_envreg20,548,42339
    nvvm_read_ptx_sreg_envreg21,549,42422
    nvvm_read_ptx_sreg_envreg22,550,42505
    nvvm_read_ptx_sreg_envreg23,551,42588
    nvvm_read_ptx_sreg_envreg24,552,42671
    nvvm_read_ptx_sreg_envreg25,553,42754
    nvvm_read_ptx_sreg_envreg26,554,42837
    nvvm_read_ptx_sreg_envreg27,555,42920
    nvvm_read_ptx_sreg_envreg28,556,43003
    nvvm_read_ptx_sreg_envreg29,557,43086
    nvvm_read_ptx_sreg_envreg3,558,43169
    nvvm_read_ptx_sreg_envreg30,559,43251
    nvvm_read_ptx_sreg_envreg31,560,43334
    nvvm_read_ptx_sreg_envreg4,561,43417
    nvvm_read_ptx_sreg_envreg5,562,43499
    nvvm_read_ptx_sreg_envreg6,563,43581
    nvvm_read_ptx_sreg_envreg7,564,43663
    nvvm_read_ptx_sreg_envreg8,565,43745
    nvvm_read_ptx_sreg_envreg9,566,43827
    nvvm_read_ptx_sreg_gridid,567,43909
    nvvm_read_ptx_sreg_laneid,568,43990
    nvvm_read_ptx_sreg_lanemask_eq,569,44071
    nvvm_read_ptx_sreg_lanemask_ge,570,44157
    nvvm_read_ptx_sreg_lanemask_gt,571,44243
    nvvm_read_ptx_sreg_lanemask_le,572,44329
    nvvm_read_ptx_sreg_lanemask_lt,573,44415
    nvvm_read_ptx_sreg_nclusterid_w,574,44501
    nvvm_read_ptx_sreg_nclusterid_x,575,44588
    nvvm_read_ptx_sreg_nclusterid_y,576,44675
    nvvm_read_ptx_sreg_nclusterid_z,577,44762
    nvvm_read_ptx_sreg_nctaid_w,578,44849
    nvvm_read_ptx_sreg_nctaid_x,579,44932
    nvvm_read_ptx_sreg_nctaid_y,580,45015
    nvvm_read_ptx_sreg_nctaid_z,581,45098
    nvvm_read_ptx_sreg_nsmid,582,45181
    nvvm_read_ptx_sreg_ntid_w,583,45261
    nvvm_read_ptx_sreg_ntid_x,584,45342
    nvvm_read_ptx_sreg_ntid_y,585,45423
    nvvm_read_ptx_sreg_ntid_z,586,45504
    nvvm_read_ptx_sreg_nwarpid,587,45585
    nvvm_read_ptx_sreg_pm0,588,45667
    nvvm_read_ptx_sreg_pm1,589,45745
    nvvm_read_ptx_sreg_pm2,590,45823
    nvvm_read_ptx_sreg_pm3,591,45901
    nvvm_read_ptx_sreg_smid,592,45979
    nvvm_read_ptx_sreg_tid_w,593,46058
    nvvm_read_ptx_sreg_tid_x,594,46138
    nvvm_read_ptx_sreg_tid_y,595,46218
    nvvm_read_ptx_sreg_tid_z,596,46298
    nvvm_read_ptx_sreg_warpid,597,46378
    nvvm_read_ptx_sreg_warpsize,598,46459
    nvvm_redux_sync_add,599,46542
    nvvm_redux_sync_and,600,46617
    nvvm_redux_sync_max,601,46692
    nvvm_redux_sync_min,602,46767
    nvvm_redux_sync_or,603,46842
    nvvm_redux_sync_umax,604,46916
    nvvm_redux_sync_umin,605,46992
    nvvm_redux_sync_xor,606,47068
    nvvm_reflect,607,47143
    nvvm_rotate_b32,608,47211
    nvvm_rotate_b64,609,47282
    nvvm_rotate_right_b64,610,47353
    nvvm_round_d,611,47430
    nvvm_round_f,612,47498
    nvvm_round_ftz_f,613,47566
    nvvm_rsqrt_approx_d,614,47638
    nvvm_rsqrt_approx_f,615,47713
    nvvm_rsqrt_approx_ftz_f,616,47788
    nvvm_sad_i,617,47867
    nvvm_sad_ll,618,47933
    nvvm_sad_s,619,48000
    nvvm_sad_ui,620,48066
    nvvm_sad_ull,621,48133
    nvvm_sad_us,622,48201
    nvvm_saturate_d,623,48268
    nvvm_saturate_f,624,48339
    nvvm_saturate_ftz_f,625,48410
    nvvm_setmaxnreg_dec_sync_aligned_u32,626,48485
    nvvm_setmaxnreg_inc_sync_aligned_u32,627,48577
    nvvm_shfl_bfly_f32,628,48669
    nvvm_shfl_bfly_f32p,629,48743
    nvvm_shfl_bfly_i32,630,48818
    nvvm_shfl_bfly_i32p,631,48892
    nvvm_shfl_down_f32,632,48967
    nvvm_shfl_down_f32p,633,49041
    nvvm_shfl_down_i32,634,49116
    nvvm_shfl_down_i32p,635,49190
    nvvm_shfl_idx_f32,636,49265
    nvvm_shfl_idx_f32p,637,49338
    nvvm_shfl_idx_i32,638,49412
    nvvm_shfl_idx_i32p,639,49485
    nvvm_shfl_sync_bfly_f32,640,49559
    nvvm_shfl_sync_bfly_f32p,641,49638
    nvvm_shfl_sync_bfly_i32,642,49718
    nvvm_shfl_sync_bfly_i32p,643,49797
    nvvm_shfl_sync_down_f32,644,49877
    nvvm_shfl_sync_down_f32p,645,49956
    nvvm_shfl_sync_down_i32,646,50036
    nvvm_shfl_sync_down_i32p,647,50115
    nvvm_shfl_sync_idx_f32,648,50195
    nvvm_shfl_sync_idx_f32p,649,50273
    nvvm_shfl_sync_idx_i32,650,50352
    nvvm_shfl_sync_idx_i32p,651,50430
    nvvm_shfl_sync_up_f32,652,50509
    nvvm_shfl_sync_up_f32p,653,50586
    nvvm_shfl_sync_up_i32,654,50664
    nvvm_shfl_sync_up_i32p,655,50741
    nvvm_shfl_up_f32,656,50819
    nvvm_shfl_up_f32p,657,50891
    nvvm_shfl_up_i32,658,50964
    nvvm_shfl_up_i32p,659,51036
    nvvm_sin_approx_f,660,51109
    nvvm_sin_approx_ftz_f,661,51182
    nvvm_sqrt_approx_f,662,51259
    nvvm_sqrt_approx_ftz_f,663,51333
    nvvm_sqrt_f,664,51411
    nvvm_sqrt_rm_d,665,51478
    nvvm_sqrt_rm_f,666,51548
    nvvm_sqrt_rm_ftz_f,667,51618
    nvvm_sqrt_rn_d,668,51692
    nvvm_sqrt_rn_f,669,51762
    nvvm_sqrt_rn_ftz_f,670,51832
    nvvm_sqrt_rp_d,671,51906
    nvvm_sqrt_rp_f,672,51976
    nvvm_sqrt_rp_ftz_f,673,52046
    nvvm_sqrt_rz_d,674,52120
    nvvm_sqrt_rz_f,675,52190
    nvvm_sqrt_rz_ftz_f,676,52260
    nvvm_suld_1d_array_i16_clamp,677,52334
    nvvm_suld_1d_array_i16_trap,678,52418
    nvvm_suld_1d_array_i16_zero,679,52501
    nvvm_suld_1d_array_i32_clamp,680,52584
    nvvm_suld_1d_array_i32_trap,681,52668
    nvvm_suld_1d_array_i32_zero,682,52751
    nvvm_suld_1d_array_i64_clamp,683,52834
    nvvm_suld_1d_array_i64_trap,684,52918
    nvvm_suld_1d_array_i64_zero,685,53001
    nvvm_suld_1d_array_i8_clamp,686,53084
    nvvm_suld_1d_array_i8_trap,687,53167
    nvvm_suld_1d_array_i8_zero,688,53249
    nvvm_suld_1d_array_v2i16_clamp,689,53331
    nvvm_suld_1d_array_v2i16_trap,690,53417
    nvvm_suld_1d_array_v2i16_zero,691,53502
    nvvm_suld_1d_array_v2i32_clamp,692,53587
    nvvm_suld_1d_array_v2i32_trap,693,53673
    nvvm_suld_1d_array_v2i32_zero,694,53758
    nvvm_suld_1d_array_v2i64_clamp,695,53843
    nvvm_suld_1d_array_v2i64_trap,696,53929
    nvvm_suld_1d_array_v2i64_zero,697,54014
    nvvm_suld_1d_array_v2i8_clamp,698,54099
    nvvm_suld_1d_array_v2i8_trap,699,54184
    nvvm_suld_1d_array_v2i8_zero,700,54268
    nvvm_suld_1d_array_v4i16_clamp,701,54352
    nvvm_suld_1d_array_v4i16_trap,702,54438
    nvvm_suld_1d_array_v4i16_zero,703,54523
    nvvm_suld_1d_array_v4i32_clamp,704,54608
    nvvm_suld_1d_array_v4i32_trap,705,54694
    nvvm_suld_1d_array_v4i32_zero,706,54779
    nvvm_suld_1d_array_v4i8_clamp,707,54864
    nvvm_suld_1d_array_v4i8_trap,708,54949
    nvvm_suld_1d_array_v4i8_zero,709,55033
    nvvm_suld_1d_i16_clamp,710,55117
    nvvm_suld_1d_i16_trap,711,55195
    nvvm_suld_1d_i16_zero,712,55272
    nvvm_suld_1d_i32_clamp,713,55349
    nvvm_suld_1d_i32_trap,714,55427
    nvvm_suld_1d_i32_zero,715,55504
    nvvm_suld_1d_i64_clamp,716,55581
    nvvm_suld_1d_i64_trap,717,55659
    nvvm_suld_1d_i64_zero,718,55736
    nvvm_suld_1d_i8_clamp,719,55813
    nvvm_suld_1d_i8_trap,720,55890
    nvvm_suld_1d_i8_zero,721,55966
    nvvm_suld_1d_v2i16_clamp,722,56042
    nvvm_suld_1d_v2i16_trap,723,56122
    nvvm_suld_1d_v2i16_zero,724,56201
    nvvm_suld_1d_v2i32_clamp,725,56280
    nvvm_suld_1d_v2i32_trap,726,56360
    nvvm_suld_1d_v2i32_zero,727,56439
    nvvm_suld_1d_v2i64_clamp,728,56518
    nvvm_suld_1d_v2i64_trap,729,56598
    nvvm_suld_1d_v2i64_zero,730,56677
    nvvm_suld_1d_v2i8_clamp,731,56756
    nvvm_suld_1d_v2i8_trap,732,56835
    nvvm_suld_1d_v2i8_zero,733,56913
    nvvm_suld_1d_v4i16_clamp,734,56991
    nvvm_suld_1d_v4i16_trap,735,57071
    nvvm_suld_1d_v4i16_zero,736,57150
    nvvm_suld_1d_v4i32_clamp,737,57229
    nvvm_suld_1d_v4i32_trap,738,57309
    nvvm_suld_1d_v4i32_zero,739,57388
    nvvm_suld_1d_v4i8_clamp,740,57467
    nvvm_suld_1d_v4i8_trap,741,57546
    nvvm_suld_1d_v4i8_zero,742,57624
    nvvm_suld_2d_array_i16_clamp,743,57702
    nvvm_suld_2d_array_i16_trap,744,57786
    nvvm_suld_2d_array_i16_zero,745,57869
    nvvm_suld_2d_array_i32_clamp,746,57952
    nvvm_suld_2d_array_i32_trap,747,58036
    nvvm_suld_2d_array_i32_zero,748,58119
    nvvm_suld_2d_array_i64_clamp,749,58202
    nvvm_suld_2d_array_i64_trap,750,58286
    nvvm_suld_2d_array_i64_zero,751,58369
    nvvm_suld_2d_array_i8_clamp,752,58452
    nvvm_suld_2d_array_i8_trap,753,58535
    nvvm_suld_2d_array_i8_zero,754,58617
    nvvm_suld_2d_array_v2i16_clamp,755,58699
    nvvm_suld_2d_array_v2i16_trap,756,58785
    nvvm_suld_2d_array_v2i16_zero,757,58870
    nvvm_suld_2d_array_v2i32_clamp,758,58955
    nvvm_suld_2d_array_v2i32_trap,759,59041
    nvvm_suld_2d_array_v2i32_zero,760,59126
    nvvm_suld_2d_array_v2i64_clamp,761,59211
    nvvm_suld_2d_array_v2i64_trap,762,59297
    nvvm_suld_2d_array_v2i64_zero,763,59382
    nvvm_suld_2d_array_v2i8_clamp,764,59467
    nvvm_suld_2d_array_v2i8_trap,765,59552
    nvvm_suld_2d_array_v2i8_zero,766,59636
    nvvm_suld_2d_array_v4i16_clamp,767,59720
    nvvm_suld_2d_array_v4i16_trap,768,59806
    nvvm_suld_2d_array_v4i16_zero,769,59891
    nvvm_suld_2d_array_v4i32_clamp,770,59976
    nvvm_suld_2d_array_v4i32_trap,771,60062
    nvvm_suld_2d_array_v4i32_zero,772,60147
    nvvm_suld_2d_array_v4i8_clamp,773,60232
    nvvm_suld_2d_array_v4i8_trap,774,60317
    nvvm_suld_2d_array_v4i8_zero,775,60401
    nvvm_suld_2d_i16_clamp,776,60485
    nvvm_suld_2d_i16_trap,777,60563
    nvvm_suld_2d_i16_zero,778,60640
    nvvm_suld_2d_i32_clamp,779,60717
    nvvm_suld_2d_i32_trap,780,60795
    nvvm_suld_2d_i32_zero,781,60872
    nvvm_suld_2d_i64_clamp,782,60949
    nvvm_suld_2d_i64_trap,783,61027
    nvvm_suld_2d_i64_zero,784,61104
    nvvm_suld_2d_i8_clamp,785,61181
    nvvm_suld_2d_i8_trap,786,61258
    nvvm_suld_2d_i8_zero,787,61334
    nvvm_suld_2d_v2i16_clamp,788,61410
    nvvm_suld_2d_v2i16_trap,789,61490
    nvvm_suld_2d_v2i16_zero,790,61569
    nvvm_suld_2d_v2i32_clamp,791,61648
    nvvm_suld_2d_v2i32_trap,792,61728
    nvvm_suld_2d_v2i32_zero,793,61807
    nvvm_suld_2d_v2i64_clamp,794,61886
    nvvm_suld_2d_v2i64_trap,795,61966
    nvvm_suld_2d_v2i64_zero,796,62045
    nvvm_suld_2d_v2i8_clamp,797,62124
    nvvm_suld_2d_v2i8_trap,798,62203
    nvvm_suld_2d_v2i8_zero,799,62281
    nvvm_suld_2d_v4i16_clamp,800,62359
    nvvm_suld_2d_v4i16_trap,801,62439
    nvvm_suld_2d_v4i16_zero,802,62518
    nvvm_suld_2d_v4i32_clamp,803,62597
    nvvm_suld_2d_v4i32_trap,804,62677
    nvvm_suld_2d_v4i32_zero,805,62756
    nvvm_suld_2d_v4i8_clamp,806,62835
    nvvm_suld_2d_v4i8_trap,807,62914
    nvvm_suld_2d_v4i8_zero,808,62992
    nvvm_suld_3d_i16_clamp,809,63070
    nvvm_suld_3d_i16_trap,810,63148
    nvvm_suld_3d_i16_zero,811,63225
    nvvm_suld_3d_i32_clamp,812,63302
    nvvm_suld_3d_i32_trap,813,63380
    nvvm_suld_3d_i32_zero,814,63457
    nvvm_suld_3d_i64_clamp,815,63534
    nvvm_suld_3d_i64_trap,816,63612
    nvvm_suld_3d_i64_zero,817,63689
    nvvm_suld_3d_i8_clamp,818,63766
    nvvm_suld_3d_i8_trap,819,63843
    nvvm_suld_3d_i8_zero,820,63919
    nvvm_suld_3d_v2i16_clamp,821,63995
    nvvm_suld_3d_v2i16_trap,822,64075
    nvvm_suld_3d_v2i16_zero,823,64154
    nvvm_suld_3d_v2i32_clamp,824,64233
    nvvm_suld_3d_v2i32_trap,825,64313
    nvvm_suld_3d_v2i32_zero,826,64392
    nvvm_suld_3d_v2i64_clamp,827,64471
    nvvm_suld_3d_v2i64_trap,828,64551
    nvvm_suld_3d_v2i64_zero,829,64630
    nvvm_suld_3d_v2i8_clamp,830,64709
    nvvm_suld_3d_v2i8_trap,831,64788
    nvvm_suld_3d_v2i8_zero,832,64866
    nvvm_suld_3d_v4i16_clamp,833,64944
    nvvm_suld_3d_v4i16_trap,834,65024
    nvvm_suld_3d_v4i16_zero,835,65103
    nvvm_suld_3d_v4i32_clamp,836,65182
    nvvm_suld_3d_v4i32_trap,837,65262
    nvvm_suld_3d_v4i32_zero,838,65341
    nvvm_suld_3d_v4i8_clamp,839,65420
    nvvm_suld_3d_v4i8_trap,840,65499
    nvvm_suld_3d_v4i8_zero,841,65577
    nvvm_suq_array_size,842,65655
    nvvm_suq_channel_data_type,843,65730
    nvvm_suq_channel_order,844,65812
    nvvm_suq_depth,845,65890
    nvvm_suq_height,846,65960
    nvvm_suq_width,847,66031
    nvvm_sust_b_1d_array_i16_clamp,848,66101
    nvvm_sust_b_1d_array_i16_trap,849,66187
    nvvm_sust_b_1d_array_i16_zero,850,66272
    nvvm_sust_b_1d_array_i32_clamp,851,66357
    nvvm_sust_b_1d_array_i32_trap,852,66443
    nvvm_sust_b_1d_array_i32_zero,853,66528
    nvvm_sust_b_1d_array_i64_clamp,854,66613
    nvvm_sust_b_1d_array_i64_trap,855,66699
    nvvm_sust_b_1d_array_i64_zero,856,66784
    nvvm_sust_b_1d_array_i8_clamp,857,66869
    nvvm_sust_b_1d_array_i8_trap,858,66954
    nvvm_sust_b_1d_array_i8_zero,859,67038
    nvvm_sust_b_1d_array_v2i16_clamp,860,67122
    nvvm_sust_b_1d_array_v2i16_trap,861,67210
    nvvm_sust_b_1d_array_v2i16_zero,862,67297
    nvvm_sust_b_1d_array_v2i32_clamp,863,67384
    nvvm_sust_b_1d_array_v2i32_trap,864,67472
    nvvm_sust_b_1d_array_v2i32_zero,865,67559
    nvvm_sust_b_1d_array_v2i64_clamp,866,67646
    nvvm_sust_b_1d_array_v2i64_trap,867,67734
    nvvm_sust_b_1d_array_v2i64_zero,868,67821
    nvvm_sust_b_1d_array_v2i8_clamp,869,67908
    nvvm_sust_b_1d_array_v2i8_trap,870,67995
    nvvm_sust_b_1d_array_v2i8_zero,871,68081
    nvvm_sust_b_1d_array_v4i16_clamp,872,68167
    nvvm_sust_b_1d_array_v4i16_trap,873,68255
    nvvm_sust_b_1d_array_v4i16_zero,874,68342
    nvvm_sust_b_1d_array_v4i32_clamp,875,68429
    nvvm_sust_b_1d_array_v4i32_trap,876,68517
    nvvm_sust_b_1d_array_v4i32_zero,877,68604
    nvvm_sust_b_1d_array_v4i8_clamp,878,68691
    nvvm_sust_b_1d_array_v4i8_trap,879,68778
    nvvm_sust_b_1d_array_v4i8_zero,880,68864
    nvvm_sust_b_1d_i16_clamp,881,68950
    nvvm_sust_b_1d_i16_trap,882,69030
    nvvm_sust_b_1d_i16_zero,883,69109
    nvvm_sust_b_1d_i32_clamp,884,69188
    nvvm_sust_b_1d_i32_trap,885,69268
    nvvm_sust_b_1d_i32_zero,886,69347
    nvvm_sust_b_1d_i64_clamp,887,69426
    nvvm_sust_b_1d_i64_trap,888,69506
    nvvm_sust_b_1d_i64_zero,889,69585
    nvvm_sust_b_1d_i8_clamp,890,69664
    nvvm_sust_b_1d_i8_trap,891,69743
    nvvm_sust_b_1d_i8_zero,892,69821
    nvvm_sust_b_1d_v2i16_clamp,893,69899
    nvvm_sust_b_1d_v2i16_trap,894,69981
    nvvm_sust_b_1d_v2i16_zero,895,70062
    nvvm_sust_b_1d_v2i32_clamp,896,70143
    nvvm_sust_b_1d_v2i32_trap,897,70225
    nvvm_sust_b_1d_v2i32_zero,898,70306
    nvvm_sust_b_1d_v2i64_clamp,899,70387
    nvvm_sust_b_1d_v2i64_trap,900,70469
    nvvm_sust_b_1d_v2i64_zero,901,70550
    nvvm_sust_b_1d_v2i8_clamp,902,70631
    nvvm_sust_b_1d_v2i8_trap,903,70712
    nvvm_sust_b_1d_v2i8_zero,904,70792
    nvvm_sust_b_1d_v4i16_clamp,905,70872
    nvvm_sust_b_1d_v4i16_trap,906,70954
    nvvm_sust_b_1d_v4i16_zero,907,71035
    nvvm_sust_b_1d_v4i32_clamp,908,71116
    nvvm_sust_b_1d_v4i32_trap,909,71198
    nvvm_sust_b_1d_v4i32_zero,910,71279
    nvvm_sust_b_1d_v4i8_clamp,911,71360
    nvvm_sust_b_1d_v4i8_trap,912,71441
    nvvm_sust_b_1d_v4i8_zero,913,71521
    nvvm_sust_b_2d_array_i16_clamp,914,71601
    nvvm_sust_b_2d_array_i16_trap,915,71687
    nvvm_sust_b_2d_array_i16_zero,916,71772
    nvvm_sust_b_2d_array_i32_clamp,917,71857
    nvvm_sust_b_2d_array_i32_trap,918,71943
    nvvm_sust_b_2d_array_i32_zero,919,72028
    nvvm_sust_b_2d_array_i64_clamp,920,72113
    nvvm_sust_b_2d_array_i64_trap,921,72199
    nvvm_sust_b_2d_array_i64_zero,922,72284
    nvvm_sust_b_2d_array_i8_clamp,923,72369
    nvvm_sust_b_2d_array_i8_trap,924,72454
    nvvm_sust_b_2d_array_i8_zero,925,72538
    nvvm_sust_b_2d_array_v2i16_clamp,926,72622
    nvvm_sust_b_2d_array_v2i16_trap,927,72710
    nvvm_sust_b_2d_array_v2i16_zero,928,72797
    nvvm_sust_b_2d_array_v2i32_clamp,929,72884
    nvvm_sust_b_2d_array_v2i32_trap,930,72972
    nvvm_sust_b_2d_array_v2i32_zero,931,73059
    nvvm_sust_b_2d_array_v2i64_clamp,932,73146
    nvvm_sust_b_2d_array_v2i64_trap,933,73234
    nvvm_sust_b_2d_array_v2i64_zero,934,73321
    nvvm_sust_b_2d_array_v2i8_clamp,935,73408
    nvvm_sust_b_2d_array_v2i8_trap,936,73495
    nvvm_sust_b_2d_array_v2i8_zero,937,73581
    nvvm_sust_b_2d_array_v4i16_clamp,938,73667
    nvvm_sust_b_2d_array_v4i16_trap,939,73755
    nvvm_sust_b_2d_array_v4i16_zero,940,73842
    nvvm_sust_b_2d_array_v4i32_clamp,941,73929
    nvvm_sust_b_2d_array_v4i32_trap,942,74017
    nvvm_sust_b_2d_array_v4i32_zero,943,74104
    nvvm_sust_b_2d_array_v4i8_clamp,944,74191
    nvvm_sust_b_2d_array_v4i8_trap,945,74278
    nvvm_sust_b_2d_array_v4i8_zero,946,74364
    nvvm_sust_b_2d_i16_clamp,947,74450
    nvvm_sust_b_2d_i16_trap,948,74530
    nvvm_sust_b_2d_i16_zero,949,74609
    nvvm_sust_b_2d_i32_clamp,950,74688
    nvvm_sust_b_2d_i32_trap,951,74768
    nvvm_sust_b_2d_i32_zero,952,74847
    nvvm_sust_b_2d_i64_clamp,953,74926
    nvvm_sust_b_2d_i64_trap,954,75006
    nvvm_sust_b_2d_i64_zero,955,75085
    nvvm_sust_b_2d_i8_clamp,956,75164
    nvvm_sust_b_2d_i8_trap,957,75243
    nvvm_sust_b_2d_i8_zero,958,75321
    nvvm_sust_b_2d_v2i16_clamp,959,75399
    nvvm_sust_b_2d_v2i16_trap,960,75481
    nvvm_sust_b_2d_v2i16_zero,961,75562
    nvvm_sust_b_2d_v2i32_clamp,962,75643
    nvvm_sust_b_2d_v2i32_trap,963,75725
    nvvm_sust_b_2d_v2i32_zero,964,75806
    nvvm_sust_b_2d_v2i64_clamp,965,75887
    nvvm_sust_b_2d_v2i64_trap,966,75969
    nvvm_sust_b_2d_v2i64_zero,967,76050
    nvvm_sust_b_2d_v2i8_clamp,968,76131
    nvvm_sust_b_2d_v2i8_trap,969,76212
    nvvm_sust_b_2d_v2i8_zero,970,76292
    nvvm_sust_b_2d_v4i16_clamp,971,76372
    nvvm_sust_b_2d_v4i16_trap,972,76454
    nvvm_sust_b_2d_v4i16_zero,973,76535
    nvvm_sust_b_2d_v4i32_clamp,974,76616
    nvvm_sust_b_2d_v4i32_trap,975,76698
    nvvm_sust_b_2d_v4i32_zero,976,76779
    nvvm_sust_b_2d_v4i8_clamp,977,76860
    nvvm_sust_b_2d_v4i8_trap,978,76941
    nvvm_sust_b_2d_v4i8_zero,979,77021
    nvvm_sust_b_3d_i16_clamp,980,77101
    nvvm_sust_b_3d_i16_trap,981,77181
    nvvm_sust_b_3d_i16_zero,982,77260
    nvvm_sust_b_3d_i32_clamp,983,77339
    nvvm_sust_b_3d_i32_trap,984,77419
    nvvm_sust_b_3d_i32_zero,985,77498
    nvvm_sust_b_3d_i64_clamp,986,77577
    nvvm_sust_b_3d_i64_trap,987,77657
    nvvm_sust_b_3d_i64_zero,988,77736
    nvvm_sust_b_3d_i8_clamp,989,77815
    nvvm_sust_b_3d_i8_trap,990,77894
    nvvm_sust_b_3d_i8_zero,991,77972
    nvvm_sust_b_3d_v2i16_clamp,992,78050
    nvvm_sust_b_3d_v2i16_trap,993,78132
    nvvm_sust_b_3d_v2i16_zero,994,78213
    nvvm_sust_b_3d_v2i32_clamp,995,78294
    nvvm_sust_b_3d_v2i32_trap,996,78376
    nvvm_sust_b_3d_v2i32_zero,997,78457
    nvvm_sust_b_3d_v2i64_clamp,998,78538
    nvvm_sust_b_3d_v2i64_trap,999,78620
    nvvm_sust_b_3d_v2i64_zero,1000,78701
    nvvm_sust_b_3d_v2i8_clamp,1001,78782
    nvvm_sust_b_3d_v2i8_trap,1002,78863
    nvvm_sust_b_3d_v2i8_zero,1003,78943
    nvvm_sust_b_3d_v4i16_clamp,1004,79023
    nvvm_sust_b_3d_v4i16_trap,1005,79105
    nvvm_sust_b_3d_v4i16_zero,1006,79186
    nvvm_sust_b_3d_v4i32_clamp,1007,79267
    nvvm_sust_b_3d_v4i32_trap,1008,79349
    nvvm_sust_b_3d_v4i32_zero,1009,79430
    nvvm_sust_b_3d_v4i8_clamp,1010,79511
    nvvm_sust_b_3d_v4i8_trap,1011,79592
    nvvm_sust_b_3d_v4i8_zero,1012,79672
    nvvm_sust_p_1d_array_i16_trap,1013,79752
    nvvm_sust_p_1d_array_i32_trap,1014,79837
    nvvm_sust_p_1d_array_i8_trap,1015,79922
    nvvm_sust_p_1d_array_v2i16_trap,1016,80006
    nvvm_sust_p_1d_array_v2i32_trap,1017,80093
    nvvm_sust_p_1d_array_v2i8_trap,1018,80180
    nvvm_sust_p_1d_array_v4i16_trap,1019,80266
    nvvm_sust_p_1d_array_v4i32_trap,1020,80353
    nvvm_sust_p_1d_array_v4i8_trap,1021,80440
    nvvm_sust_p_1d_i16_trap,1022,80526
    nvvm_sust_p_1d_i32_trap,1023,80605
    nvvm_sust_p_1d_i8_trap,1024,80684
    nvvm_sust_p_1d_v2i16_trap,1025,80762
    nvvm_sust_p_1d_v2i32_trap,1026,80843
    nvvm_sust_p_1d_v2i8_trap,1027,80924
    nvvm_sust_p_1d_v4i16_trap,1028,81004
    nvvm_sust_p_1d_v4i32_trap,1029,81085
    nvvm_sust_p_1d_v4i8_trap,1030,81166
    nvvm_sust_p_2d_array_i16_trap,1031,81246
    nvvm_sust_p_2d_array_i32_trap,1032,81331
    nvvm_sust_p_2d_array_i8_trap,1033,81416
    nvvm_sust_p_2d_array_v2i16_trap,1034,81500
    nvvm_sust_p_2d_array_v2i32_trap,1035,81587
    nvvm_sust_p_2d_array_v2i8_trap,1036,81674
    nvvm_sust_p_2d_array_v4i16_trap,1037,81760
    nvvm_sust_p_2d_array_v4i32_trap,1038,81847
    nvvm_sust_p_2d_array_v4i8_trap,1039,81934
    nvvm_sust_p_2d_i16_trap,1040,82020
    nvvm_sust_p_2d_i32_trap,1041,82099
    nvvm_sust_p_2d_i8_trap,1042,82178
    nvvm_sust_p_2d_v2i16_trap,1043,82256
    nvvm_sust_p_2d_v2i32_trap,1044,82337
    nvvm_sust_p_2d_v2i8_trap,1045,82418
    nvvm_sust_p_2d_v4i16_trap,1046,82498
    nvvm_sust_p_2d_v4i32_trap,1047,82579
    nvvm_sust_p_2d_v4i8_trap,1048,82660
    nvvm_sust_p_3d_i16_trap,1049,82740
    nvvm_sust_p_3d_i32_trap,1050,82819
    nvvm_sust_p_3d_i8_trap,1051,82898
    nvvm_sust_p_3d_v2i16_trap,1052,82976
    nvvm_sust_p_3d_v2i32_trap,1053,83057
    nvvm_sust_p_3d_v2i8_trap,1054,83138
    nvvm_sust_p_3d_v4i16_trap,1055,83218
    nvvm_sust_p_3d_v4i32_trap,1056,83299
    nvvm_sust_p_3d_v4i8_trap,1057,83380
    nvvm_swap_lo_hi_b64,1058,83460
    nvvm_tex_1d_array_grad_v4f32_f32,1059,83535
    nvvm_tex_1d_array_grad_v4s32_f32,1060,83623
    nvvm_tex_1d_array_grad_v4u32_f32,1061,83711
    nvvm_tex_1d_array_level_v4f32_f32,1062,83799
    nvvm_tex_1d_array_level_v4s32_f32,1063,83888
    nvvm_tex_1d_array_level_v4u32_f32,1064,83977
    nvvm_tex_1d_array_v4f32_f32,1065,84066
    nvvm_tex_1d_array_v4f32_s32,1066,84149
    nvvm_tex_1d_array_v4s32_f32,1067,84232
    nvvm_tex_1d_array_v4s32_s32,1068,84315
    nvvm_tex_1d_array_v4u32_f32,1069,84398
    nvvm_tex_1d_array_v4u32_s32,1070,84481
    nvvm_tex_1d_grad_v4f32_f32,1071,84564
    nvvm_tex_1d_grad_v4s32_f32,1072,84646
    nvvm_tex_1d_grad_v4u32_f32,1073,84728
    nvvm_tex_1d_level_v4f32_f32,1074,84810
    nvvm_tex_1d_level_v4s32_f32,1075,84893
    nvvm_tex_1d_level_v4u32_f32,1076,84976
    nvvm_tex_1d_v4f32_f32,1077,85059
    nvvm_tex_1d_v4f32_s32,1078,85136
    nvvm_tex_1d_v4s32_f32,1079,85213
    nvvm_tex_1d_v4s32_s32,1080,85290
    nvvm_tex_1d_v4u32_f32,1081,85367
    nvvm_tex_1d_v4u32_s32,1082,85444
    nvvm_tex_2d_array_grad_v4f32_f32,1083,85521
    nvvm_tex_2d_array_grad_v4s32_f32,1084,85609
    nvvm_tex_2d_array_grad_v4u32_f32,1085,85697
    nvvm_tex_2d_array_level_v4f32_f32,1086,85785
    nvvm_tex_2d_array_level_v4s32_f32,1087,85874
    nvvm_tex_2d_array_level_v4u32_f32,1088,85963
    nvvm_tex_2d_array_v4f32_f32,1089,86052
    nvvm_tex_2d_array_v4f32_s32,1090,86135
    nvvm_tex_2d_array_v4s32_f32,1091,86218
    nvvm_tex_2d_array_v4s32_s32,1092,86301
    nvvm_tex_2d_array_v4u32_f32,1093,86384
    nvvm_tex_2d_array_v4u32_s32,1094,86467
    nvvm_tex_2d_grad_v4f32_f32,1095,86550
    nvvm_tex_2d_grad_v4s32_f32,1096,86632
    nvvm_tex_2d_grad_v4u32_f32,1097,86714
    nvvm_tex_2d_level_v4f32_f32,1098,86796
    nvvm_tex_2d_level_v4s32_f32,1099,86879
    nvvm_tex_2d_level_v4u32_f32,1100,86962
    nvvm_tex_2d_v4f32_f32,1101,87045
    nvvm_tex_2d_v4f32_s32,1102,87122
    nvvm_tex_2d_v4s32_f32,1103,87199
    nvvm_tex_2d_v4s32_s32,1104,87276
    nvvm_tex_2d_v4u32_f32,1105,87353
    nvvm_tex_2d_v4u32_s32,1106,87430
    nvvm_tex_3d_grad_v4f32_f32,1107,87507
    nvvm_tex_3d_grad_v4s32_f32,1108,87589
    nvvm_tex_3d_grad_v4u32_f32,1109,87671
    nvvm_tex_3d_level_v4f32_f32,1110,87753
    nvvm_tex_3d_level_v4s32_f32,1111,87836
    nvvm_tex_3d_level_v4u32_f32,1112,87919
    nvvm_tex_3d_v4f32_f32,1113,88002
    nvvm_tex_3d_v4f32_s32,1114,88079
    nvvm_tex_3d_v4s32_f32,1115,88156
    nvvm_tex_3d_v4s32_s32,1116,88233
    nvvm_tex_3d_v4u32_f32,1117,88310
    nvvm_tex_3d_v4u32_s32,1118,88387
    nvvm_tex_cube_array_level_v4f32_f32,1119,88464
    nvvm_tex_cube_array_level_v4s32_f32,1120,88555
    nvvm_tex_cube_array_level_v4u32_f32,1121,88646
    nvvm_tex_cube_array_v4f32_f32,1122,88737
    nvvm_tex_cube_array_v4s32_f32,1123,88822
    nvvm_tex_cube_array_v4u32_f32,1124,88907
    nvvm_tex_cube_level_v4f32_f32,1125,88992
    nvvm_tex_cube_level_v4s32_f32,1126,89077
    nvvm_tex_cube_level_v4u32_f32,1127,89162
    nvvm_tex_cube_v4f32_f32,1128,89247
    nvvm_tex_cube_v4s32_f32,1129,89326
    nvvm_tex_cube_v4u32_f32,1130,89405
    nvvm_tex_unified_1d_array_grad_v4f32_f32,1131,89484
    nvvm_tex_unified_1d_array_grad_v4s32_f32,1132,89580
    nvvm_tex_unified_1d_array_grad_v4u32_f32,1133,89676
    nvvm_tex_unified_1d_array_level_v4f32_f32,1134,89772
    nvvm_tex_unified_1d_array_level_v4s32_f32,1135,89870
    nvvm_tex_unified_1d_array_level_v4u32_f32,1136,89968
    nvvm_tex_unified_1d_array_v4f32_f32,1137,90066
    nvvm_tex_unified_1d_array_v4f32_s32,1138,90157
    nvvm_tex_unified_1d_array_v4s32_f32,1139,90248
    nvvm_tex_unified_1d_array_v4s32_s32,1140,90339
    nvvm_tex_unified_1d_array_v4u32_f32,1141,90430
    nvvm_tex_unified_1d_array_v4u32_s32,1142,90521
    nvvm_tex_unified_1d_grad_v4f32_f32,1143,90612
    nvvm_tex_unified_1d_grad_v4s32_f32,1144,90702
    nvvm_tex_unified_1d_grad_v4u32_f32,1145,90792
    nvvm_tex_unified_1d_level_v4f32_f32,1146,90882
    nvvm_tex_unified_1d_level_v4s32_f32,1147,90973
    nvvm_tex_unified_1d_level_v4u32_f32,1148,91064
    nvvm_tex_unified_1d_v4f32_f32,1149,91155
    nvvm_tex_unified_1d_v4f32_s32,1150,91240
    nvvm_tex_unified_1d_v4s32_f32,1151,91325
    nvvm_tex_unified_1d_v4s32_s32,1152,91410
    nvvm_tex_unified_1d_v4u32_f32,1153,91495
    nvvm_tex_unified_1d_v4u32_s32,1154,91580
    nvvm_tex_unified_2d_array_grad_v4f32_f32,1155,91665
    nvvm_tex_unified_2d_array_grad_v4s32_f32,1156,91761
    nvvm_tex_unified_2d_array_grad_v4u32_f32,1157,91857
    nvvm_tex_unified_2d_array_level_v4f32_f32,1158,91953
    nvvm_tex_unified_2d_array_level_v4s32_f32,1159,92051
    nvvm_tex_unified_2d_array_level_v4u32_f32,1160,92149
    nvvm_tex_unified_2d_array_v4f32_f32,1161,92247
    nvvm_tex_unified_2d_array_v4f32_s32,1162,92338
    nvvm_tex_unified_2d_array_v4s32_f32,1163,92429
    nvvm_tex_unified_2d_array_v4s32_s32,1164,92520
    nvvm_tex_unified_2d_array_v4u32_f32,1165,92611
    nvvm_tex_unified_2d_array_v4u32_s32,1166,92702
    nvvm_tex_unified_2d_grad_v4f32_f32,1167,92793
    nvvm_tex_unified_2d_grad_v4s32_f32,1168,92883
    nvvm_tex_unified_2d_grad_v4u32_f32,1169,92973
    nvvm_tex_unified_2d_level_v4f32_f32,1170,93063
    nvvm_tex_unified_2d_level_v4s32_f32,1171,93154
    nvvm_tex_unified_2d_level_v4u32_f32,1172,93245
    nvvm_tex_unified_2d_v4f32_f32,1173,93336
    nvvm_tex_unified_2d_v4f32_s32,1174,93421
    nvvm_tex_unified_2d_v4s32_f32,1175,93506
    nvvm_tex_unified_2d_v4s32_s32,1176,93591
    nvvm_tex_unified_2d_v4u32_f32,1177,93676
    nvvm_tex_unified_2d_v4u32_s32,1178,93761
    nvvm_tex_unified_3d_grad_v4f32_f32,1179,93846
    nvvm_tex_unified_3d_grad_v4s32_f32,1180,93936
    nvvm_tex_unified_3d_grad_v4u32_f32,1181,94026
    nvvm_tex_unified_3d_level_v4f32_f32,1182,94116
    nvvm_tex_unified_3d_level_v4s32_f32,1183,94207
    nvvm_tex_unified_3d_level_v4u32_f32,1184,94298
    nvvm_tex_unified_3d_v4f32_f32,1185,94389
    nvvm_tex_unified_3d_v4f32_s32,1186,94474
    nvvm_tex_unified_3d_v4s32_f32,1187,94559
    nvvm_tex_unified_3d_v4s32_s32,1188,94644
    nvvm_tex_unified_3d_v4u32_f32,1189,94729
    nvvm_tex_unified_3d_v4u32_s32,1190,94814
    nvvm_tex_unified_cube_array_grad_v4f32_f32,1191,94899
    nvvm_tex_unified_cube_array_grad_v4s32_f32,1192,94999
    nvvm_tex_unified_cube_array_grad_v4u32_f32,1193,95099
    nvvm_tex_unified_cube_array_level_v4f32_f32,1194,95199
    nvvm_tex_unified_cube_array_level_v4s32_f32,1195,95301
    nvvm_tex_unified_cube_array_level_v4u32_f32,1196,95403
    nvvm_tex_unified_cube_array_v4f32_f32,1197,95505
    nvvm_tex_unified_cube_array_v4s32_f32,1198,95598
    nvvm_tex_unified_cube_array_v4u32_f32,1199,95691
    nvvm_tex_unified_cube_grad_v4f32_f32,1200,95784
    nvvm_tex_unified_cube_grad_v4s32_f32,1201,95876
    nvvm_tex_unified_cube_grad_v4u32_f32,1202,95968
    nvvm_tex_unified_cube_level_v4f32_f32,1203,96060
    nvvm_tex_unified_cube_level_v4s32_f32,1204,96153
    nvvm_tex_unified_cube_level_v4u32_f32,1205,96246
    nvvm_tex_unified_cube_v4f32_f32,1206,96339
    nvvm_tex_unified_cube_v4s32_f32,1207,96426
    nvvm_tex_unified_cube_v4u32_f32,1208,96513
    nvvm_texsurf_handle,1209,96600
    nvvm_texsurf_handle_internal,1210,96675
    nvvm_tld4_a_2d_v4f32_f32,1211,96759
    nvvm_tld4_a_2d_v4s32_f32,1212,96839
    nvvm_tld4_a_2d_v4u32_f32,1213,96919
    nvvm_tld4_b_2d_v4f32_f32,1214,96999
    nvvm_tld4_b_2d_v4s32_f32,1215,97079
    nvvm_tld4_b_2d_v4u32_f32,1216,97159
    nvvm_tld4_g_2d_v4f32_f32,1217,97239
    nvvm_tld4_g_2d_v4s32_f32,1218,97319
    nvvm_tld4_g_2d_v4u32_f32,1219,97399
    nvvm_tld4_r_2d_v4f32_f32,1220,97479
    nvvm_tld4_r_2d_v4s32_f32,1221,97559
    nvvm_tld4_r_2d_v4u32_f32,1222,97639
    nvvm_tld4_unified_a_2d_v4f32_f32,1223,97719
    nvvm_tld4_unified_a_2d_v4s32_f32,1224,97807
    nvvm_tld4_unified_a_2d_v4u32_f32,1225,97895
    nvvm_tld4_unified_b_2d_v4f32_f32,1226,97983
    nvvm_tld4_unified_b_2d_v4s32_f32,1227,98071
    nvvm_tld4_unified_b_2d_v4u32_f32,1228,98159
    nvvm_tld4_unified_g_2d_v4f32_f32,1229,98247
    nvvm_tld4_unified_g_2d_v4s32_f32,1230,98335
    nvvm_tld4_unified_g_2d_v4u32_f32,1231,98423
    nvvm_tld4_unified_r_2d_v4f32_f32,1232,98511
    nvvm_tld4_unified_r_2d_v4s32_f32,1233,98599
    nvvm_tld4_unified_r_2d_v4u32_f32,1234,98687
    nvvm_trunc_d,1235,98775
    nvvm_trunc_f,1236,98843
    nvvm_trunc_ftz_f,1237,98911
    nvvm_txq_array_size,1238,98983
    nvvm_txq_channel_data_type,1239,99058
    nvvm_txq_channel_order,1240,99140
    nvvm_txq_depth,1241,99218
    nvvm_txq_height,1242,99288
    nvvm_txq_num_mipmap_levels,1243,99359
    nvvm_txq_num_samples,1244,99441
    nvvm_txq_width,1245,99517
    nvvm_ui2d_rm,1246,99587
    nvvm_ui2d_rn,1247,99655
    nvvm_ui2d_rp,1248,99723
    nvvm_ui2d_rz,1249,99791
    nvvm_ui2f_rm,1250,99859
    nvvm_ui2f_rn,1251,99927
    nvvm_ui2f_rp,1252,99995
    nvvm_ui2f_rz,1253,100063
    nvvm_ull2d_rm,1254,100131
    nvvm_ull2d_rn,1255,100200
    nvvm_ull2d_rp,1256,100269
    nvvm_ull2d_rz,1257,100338
    nvvm_ull2f_rm,1258,100407
    nvvm_ull2f_rn,1259,100476
    nvvm_ull2f_rp,1260,100545
    nvvm_ull2f_rz,1261,100614
    nvvm_vote_all,1262,100683
    nvvm_vote_all_sync,1263,100752
    nvvm_vote_any,1264,100826
    nvvm_vote_any_sync,1265,100895
    nvvm_vote_ballot,1266,100969
    nvvm_vote_ballot_sync,1267,101041
    nvvm_vote_uni,1268,101118
    nvvm_vote_uni_sync,1269,101187
    nvvm_wmma_m16n16k16_load_a_bf16_col,1270,101261
    nvvm_wmma_m16n16k16_load_a_f16_col,1271,101352
    nvvm_wmma_m16n16k16_load_a_s8_col,1272,101442
    nvvm_wmma_m16n16k16_load_a_bf16_col_stride,1273,101531
    nvvm_wmma_m16n16k16_load_a_f16_col_stride,1274,101631
    nvvm_wmma_m16n16k16_load_a_s8_col_stride,1275,101729
    nvvm_wmma_m16n16k16_load_a_u8_col_stride,1276,101825
    nvvm_wmma_m16n16k16_load_a_u8_col,1277,101921
    nvvm_wmma_m16n16k16_load_a_bf16_row,1278,102010
    nvvm_wmma_m16n16k16_load_a_f16_row,1279,102101
    nvvm_wmma_m16n16k16_load_a_s8_row,1280,102191
    nvvm_wmma_m16n16k16_load_a_bf16_row_stride,1281,102280
    nvvm_wmma_m16n16k16_load_a_f16_row_stride,1282,102380
    nvvm_wmma_m16n16k16_load_a_s8_row_stride,1283,102478
    nvvm_wmma_m16n16k16_load_a_u8_row_stride,1284,102574
    nvvm_wmma_m16n16k16_load_a_u8_row,1285,102670
    nvvm_wmma_m16n16k16_load_b_bf16_col,1286,102759
    nvvm_wmma_m16n16k16_load_b_f16_col,1287,102850
    nvvm_wmma_m16n16k16_load_b_s8_col,1288,102940
    nvvm_wmma_m16n16k16_load_b_bf16_col_stride,1289,103029
    nvvm_wmma_m16n16k16_load_b_f16_col_stride,1290,103129
    nvvm_wmma_m16n16k16_load_b_s8_col_stride,1291,103227
    nvvm_wmma_m16n16k16_load_b_u8_col_stride,1292,103323
    nvvm_wmma_m16n16k16_load_b_u8_col,1293,103419
    nvvm_wmma_m16n16k16_load_b_bf16_row,1294,103508
    nvvm_wmma_m16n16k16_load_b_f16_row,1295,103599
    nvvm_wmma_m16n16k16_load_b_s8_row,1296,103689
    nvvm_wmma_m16n16k16_load_b_bf16_row_stride,1297,103778
    nvvm_wmma_m16n16k16_load_b_f16_row_stride,1298,103878
    nvvm_wmma_m16n16k16_load_b_s8_row_stride,1299,103976
    nvvm_wmma_m16n16k16_load_b_u8_row_stride,1300,104072
    nvvm_wmma_m16n16k16_load_b_u8_row,1301,104168
    nvvm_wmma_m16n16k16_load_c_f16_col,1302,104257
    nvvm_wmma_m16n16k16_load_c_f32_col,1303,104347
    nvvm_wmma_m16n16k16_load_c_s32_col,1304,104437
    nvvm_wmma_m16n16k16_load_c_f16_col_stride,1305,104527
    nvvm_wmma_m16n16k16_load_c_f32_col_stride,1306,104625
    nvvm_wmma_m16n16k16_load_c_s32_col_stride,1307,104723
    nvvm_wmma_m16n16k16_load_c_f16_row,1308,104821
    nvvm_wmma_m16n16k16_load_c_f32_row,1309,104911
    nvvm_wmma_m16n16k16_load_c_s32_row,1310,105001
    nvvm_wmma_m16n16k16_load_c_f16_row_stride,1311,105091
    nvvm_wmma_m16n16k16_load_c_f32_row_stride,1312,105189
    nvvm_wmma_m16n16k16_load_c_s32_row_stride,1313,105287
    nvvm_wmma_m16n16k16_mma_col_col_bf16,1314,105385
    nvvm_wmma_m16n16k16_mma_col_col_f16_f16,1315,105477
    nvvm_wmma_m16n16k16_mma_col_col_f16_f16_satfinite,1316,105572
    nvvm_wmma_m16n16k16_mma_col_col_f16_f32,1317,105686
    nvvm_wmma_m16n16k16_mma_col_col_f16_f32_satfinite,1318,105781
    nvvm_wmma_m16n16k16_mma_col_col_f32_f16,1319,105895
    nvvm_wmma_m16n16k16_mma_col_col_f32_f16_satfinite,1320,105990
    nvvm_wmma_m16n16k16_mma_col_col_f32_f32,1321,106104
    nvvm_wmma_m16n16k16_mma_col_col_f32_f32_satfinite,1322,106199
    nvvm_wmma_m16n16k16_mma_col_col_s8,1323,106313
    nvvm_wmma_m16n16k16_mma_col_col_s8_satfinite,1324,106403
    nvvm_wmma_m16n16k16_mma_col_col_u8,1325,106507
    nvvm_wmma_m16n16k16_mma_col_col_u8_satfinite,1326,106597
    nvvm_wmma_m16n16k16_mma_col_row_bf16,1327,106701
    nvvm_wmma_m16n16k16_mma_col_row_f16_f16,1328,106793
    nvvm_wmma_m16n16k16_mma_col_row_f16_f16_satfinite,1329,106888
    nvvm_wmma_m16n16k16_mma_col_row_f16_f32,1330,107002
    nvvm_wmma_m16n16k16_mma_col_row_f16_f32_satfinite,1331,107097
    nvvm_wmma_m16n16k16_mma_col_row_f32_f16,1332,107211
    nvvm_wmma_m16n16k16_mma_col_row_f32_f16_satfinite,1333,107306
    nvvm_wmma_m16n16k16_mma_col_row_f32_f32,1334,107420
    nvvm_wmma_m16n16k16_mma_col_row_f32_f32_satfinite,1335,107515
    nvvm_wmma_m16n16k16_mma_col_row_s8,1336,107629
    nvvm_wmma_m16n16k16_mma_col_row_s8_satfinite,1337,107719
    nvvm_wmma_m16n16k16_mma_col_row_u8,1338,107823
    nvvm_wmma_m16n16k16_mma_col_row_u8_satfinite,1339,107913
    nvvm_wmma_m16n16k16_mma_row_col_bf16,1340,108017
    nvvm_wmma_m16n16k16_mma_row_col_f16_f16,1341,108109
    nvvm_wmma_m16n16k16_mma_row_col_f16_f16_satfinite,1342,108204
    nvvm_wmma_m16n16k16_mma_row_col_f16_f32,1343,108318
    nvvm_wmma_m16n16k16_mma_row_col_f16_f32_satfinite,1344,108413
    nvvm_wmma_m16n16k16_mma_row_col_f32_f16,1345,108527
    nvvm_wmma_m16n16k16_mma_row_col_f32_f16_satfinite,1346,108622
    nvvm_wmma_m16n16k16_mma_row_col_f32_f32,1347,108736
    nvvm_wmma_m16n16k16_mma_row_col_f32_f32_satfinite,1348,108831
    nvvm_wmma_m16n16k16_mma_row_col_s8,1349,108945
    nvvm_wmma_m16n16k16_mma_row_col_s8_satfinite,1350,109035
    nvvm_wmma_m16n16k16_mma_row_col_u8,1351,109139
    nvvm_wmma_m16n16k16_mma_row_col_u8_satfinite,1352,109229
    nvvm_wmma_m16n16k16_mma_row_row_bf16,1353,109333
    nvvm_wmma_m16n16k16_mma_row_row_f16_f16,1354,109425
    nvvm_wmma_m16n16k16_mma_row_row_f16_f16_satfinite,1355,109520
    nvvm_wmma_m16n16k16_mma_row_row_f16_f32,1356,109634
    nvvm_wmma_m16n16k16_mma_row_row_f16_f32_satfinite,1357,109729
    nvvm_wmma_m16n16k16_mma_row_row_f32_f16,1358,109843
    nvvm_wmma_m16n16k16_mma_row_row_f32_f16_satfinite,1359,109938
    nvvm_wmma_m16n16k16_mma_row_row_f32_f32,1360,110052
    nvvm_wmma_m16n16k16_mma_row_row_f32_f32_satfinite,1361,110147
    nvvm_wmma_m16n16k16_mma_row_row_s8,1362,110261
    nvvm_wmma_m16n16k16_mma_row_row_s8_satfinite,1363,110351
    nvvm_wmma_m16n16k16_mma_row_row_u8,1364,110455
    nvvm_wmma_m16n16k16_mma_row_row_u8_satfinite,1365,110545
    nvvm_wmma_m16n16k16_store_d_f16_col,1366,110649
    nvvm_wmma_m16n16k16_store_d_f32_col,1367,110740
    nvvm_wmma_m16n16k16_store_d_s32_col,1368,110831
    nvvm_wmma_m16n16k16_store_d_f16_col_stride,1369,110922
    nvvm_wmma_m16n16k16_store_d_f32_col_stride,1370,111022
    nvvm_wmma_m16n16k16_store_d_s32_col_stride,1371,111122
    nvvm_wmma_m16n16k16_store_d_f16_row,1372,111222
    nvvm_wmma_m16n16k16_store_d_f32_row,1373,111313
    nvvm_wmma_m16n16k16_store_d_s32_row,1374,111404
    nvvm_wmma_m16n16k16_store_d_f16_row_stride,1375,111495
    nvvm_wmma_m16n16k16_store_d_f32_row_stride,1376,111595
    nvvm_wmma_m16n16k16_store_d_s32_row_stride,1377,111695
    nvvm_wmma_m16n16k8_load_a_tf32_col_stride,1378,111795
    nvvm_wmma_m16n16k8_load_a_tf32_col,1379,111893
    nvvm_wmma_m16n16k8_load_a_tf32_row_stride,1380,111983
    nvvm_wmma_m16n16k8_load_a_tf32_row,1381,112081
    nvvm_wmma_m16n16k8_load_b_tf32_col_stride,1382,112171
    nvvm_wmma_m16n16k8_load_b_tf32_col,1383,112269
    nvvm_wmma_m16n16k8_load_b_tf32_row_stride,1384,112359
    nvvm_wmma_m16n16k8_load_b_tf32_row,1385,112457
    nvvm_wmma_m16n16k8_load_c_f32_col,1386,112547
    nvvm_wmma_m16n16k8_load_c_f32_col_stride,1387,112636
    nvvm_wmma_m16n16k8_load_c_f32_row,1388,112732
    nvvm_wmma_m16n16k8_load_c_f32_row_stride,1389,112821
    nvvm_wmma_m16n16k8_mma_col_col_tf32,1390,112917
    nvvm_wmma_m16n16k8_mma_col_row_tf32,1391,113008
    nvvm_wmma_m16n16k8_mma_row_col_tf32,1392,113099
    nvvm_wmma_m16n16k8_mma_row_row_tf32,1393,113190
    nvvm_wmma_m16n16k8_store_d_f32_col,1394,113281
    nvvm_wmma_m16n16k8_store_d_f32_col_stride,1395,113371
    nvvm_wmma_m16n16k8_store_d_f32_row,1396,113469
    nvvm_wmma_m16n16k8_store_d_f32_row_stride,1397,113559
    nvvm_wmma_m32n8k16_load_a_bf16_col,1398,113657
    nvvm_wmma_m32n8k16_load_a_f16_col,1399,113747
    nvvm_wmma_m32n8k16_load_a_s8_col,1400,113836
    nvvm_wmma_m32n8k16_load_a_bf16_col_stride,1401,113924
    nvvm_wmma_m32n8k16_load_a_f16_col_stride,1402,114022
    nvvm_wmma_m32n8k16_load_a_s8_col_stride,1403,114118
    nvvm_wmma_m32n8k16_load_a_u8_col_stride,1404,114213
    nvvm_wmma_m32n8k16_load_a_u8_col,1405,114308
    nvvm_wmma_m32n8k16_load_a_bf16_row,1406,114396
    nvvm_wmma_m32n8k16_load_a_f16_row,1407,114486
    nvvm_wmma_m32n8k16_load_a_s8_row,1408,114575
    nvvm_wmma_m32n8k16_load_a_bf16_row_stride,1409,114663
    nvvm_wmma_m32n8k16_load_a_f16_row_stride,1410,114761
    nvvm_wmma_m32n8k16_load_a_s8_row_stride,1411,114857
    nvvm_wmma_m32n8k16_load_a_u8_row_stride,1412,114952
    nvvm_wmma_m32n8k16_load_a_u8_row,1413,115047
    nvvm_wmma_m32n8k16_load_b_bf16_col,1414,115135
    nvvm_wmma_m32n8k16_load_b_f16_col,1415,115225
    nvvm_wmma_m32n8k16_load_b_s8_col,1416,115314
    nvvm_wmma_m32n8k16_load_b_bf16_col_stride,1417,115402
    nvvm_wmma_m32n8k16_load_b_f16_col_stride,1418,115500
    nvvm_wmma_m32n8k16_load_b_s8_col_stride,1419,115596
    nvvm_wmma_m32n8k16_load_b_u8_col_stride,1420,115691
    nvvm_wmma_m32n8k16_load_b_u8_col,1421,115786
    nvvm_wmma_m32n8k16_load_b_bf16_row,1422,115874
    nvvm_wmma_m32n8k16_load_b_f16_row,1423,115964
    nvvm_wmma_m32n8k16_load_b_s8_row,1424,116053
    nvvm_wmma_m32n8k16_load_b_bf16_row_stride,1425,116141
    nvvm_wmma_m32n8k16_load_b_f16_row_stride,1426,116239
    nvvm_wmma_m32n8k16_load_b_s8_row_stride,1427,116335
    nvvm_wmma_m32n8k16_load_b_u8_row_stride,1428,116430
    nvvm_wmma_m32n8k16_load_b_u8_row,1429,116525
    nvvm_wmma_m32n8k16_load_c_f16_col,1430,116613
    nvvm_wmma_m32n8k16_load_c_f32_col,1431,116702
    nvvm_wmma_m32n8k16_load_c_s32_col,1432,116791
    nvvm_wmma_m32n8k16_load_c_f16_col_stride,1433,116880
    nvvm_wmma_m32n8k16_load_c_f32_col_stride,1434,116976
    nvvm_wmma_m32n8k16_load_c_s32_col_stride,1435,117072
    nvvm_wmma_m32n8k16_load_c_f16_row,1436,117168
    nvvm_wmma_m32n8k16_load_c_f32_row,1437,117257
    nvvm_wmma_m32n8k16_load_c_s32_row,1438,117346
    nvvm_wmma_m32n8k16_load_c_f16_row_stride,1439,117435
    nvvm_wmma_m32n8k16_load_c_f32_row_stride,1440,117531
    nvvm_wmma_m32n8k16_load_c_s32_row_stride,1441,117627
    nvvm_wmma_m32n8k16_mma_col_col_bf16,1442,117723
    nvvm_wmma_m32n8k16_mma_col_col_f16_f16,1443,117814
    nvvm_wmma_m32n8k16_mma_col_col_f16_f16_satfinite,1444,117908
    nvvm_wmma_m32n8k16_mma_col_col_f16_f32,1445,118020
    nvvm_wmma_m32n8k16_mma_col_col_f16_f32_satfinite,1446,118114
    nvvm_wmma_m32n8k16_mma_col_col_f32_f16,1447,118226
    nvvm_wmma_m32n8k16_mma_col_col_f32_f16_satfinite,1448,118320
    nvvm_wmma_m32n8k16_mma_col_col_f32_f32,1449,118432
    nvvm_wmma_m32n8k16_mma_col_col_f32_f32_satfinite,1450,118526
    nvvm_wmma_m32n8k16_mma_col_col_s8,1451,118638
    nvvm_wmma_m32n8k16_mma_col_col_s8_satfinite,1452,118727
    nvvm_wmma_m32n8k16_mma_col_col_u8,1453,118829
    nvvm_wmma_m32n8k16_mma_col_col_u8_satfinite,1454,118918
    nvvm_wmma_m32n8k16_mma_col_row_bf16,1455,119020
    nvvm_wmma_m32n8k16_mma_col_row_f16_f16,1456,119111
    nvvm_wmma_m32n8k16_mma_col_row_f16_f16_satfinite,1457,119205
    nvvm_wmma_m32n8k16_mma_col_row_f16_f32,1458,119317
    nvvm_wmma_m32n8k16_mma_col_row_f16_f32_satfinite,1459,119411
    nvvm_wmma_m32n8k16_mma_col_row_f32_f16,1460,119523
    nvvm_wmma_m32n8k16_mma_col_row_f32_f16_satfinite,1461,119617
    nvvm_wmma_m32n8k16_mma_col_row_f32_f32,1462,119729
    nvvm_wmma_m32n8k16_mma_col_row_f32_f32_satfinite,1463,119823
    nvvm_wmma_m32n8k16_mma_col_row_s8,1464,119935
    nvvm_wmma_m32n8k16_mma_col_row_s8_satfinite,1465,120024
    nvvm_wmma_m32n8k16_mma_col_row_u8,1466,120126
    nvvm_wmma_m32n8k16_mma_col_row_u8_satfinite,1467,120215
    nvvm_wmma_m32n8k16_mma_row_col_bf16,1468,120317
    nvvm_wmma_m32n8k16_mma_row_col_f16_f16,1469,120408
    nvvm_wmma_m32n8k16_mma_row_col_f16_f16_satfinite,1470,120502
    nvvm_wmma_m32n8k16_mma_row_col_f16_f32,1471,120614
    nvvm_wmma_m32n8k16_mma_row_col_f16_f32_satfinite,1472,120708
    nvvm_wmma_m32n8k16_mma_row_col_f32_f16,1473,120820
    nvvm_wmma_m32n8k16_mma_row_col_f32_f16_satfinite,1474,120914
    nvvm_wmma_m32n8k16_mma_row_col_f32_f32,1475,121026
    nvvm_wmma_m32n8k16_mma_row_col_f32_f32_satfinite,1476,121120
    nvvm_wmma_m32n8k16_mma_row_col_s8,1477,121232
    nvvm_wmma_m32n8k16_mma_row_col_s8_satfinite,1478,121321
    nvvm_wmma_m32n8k16_mma_row_col_u8,1479,121423
    nvvm_wmma_m32n8k16_mma_row_col_u8_satfinite,1480,121512
    nvvm_wmma_m32n8k16_mma_row_row_bf16,1481,121614
    nvvm_wmma_m32n8k16_mma_row_row_f16_f16,1482,121705
    nvvm_wmma_m32n8k16_mma_row_row_f16_f16_satfinite,1483,121799
    nvvm_wmma_m32n8k16_mma_row_row_f16_f32,1484,121911
    nvvm_wmma_m32n8k16_mma_row_row_f16_f32_satfinite,1485,122005
    nvvm_wmma_m32n8k16_mma_row_row_f32_f16,1486,122117
    nvvm_wmma_m32n8k16_mma_row_row_f32_f16_satfinite,1487,122211
    nvvm_wmma_m32n8k16_mma_row_row_f32_f32,1488,122323
    nvvm_wmma_m32n8k16_mma_row_row_f32_f32_satfinite,1489,122417
    nvvm_wmma_m32n8k16_mma_row_row_s8,1490,122529
    nvvm_wmma_m32n8k16_mma_row_row_s8_satfinite,1491,122618
    nvvm_wmma_m32n8k16_mma_row_row_u8,1492,122720
    nvvm_wmma_m32n8k16_mma_row_row_u8_satfinite,1493,122809
    nvvm_wmma_m32n8k16_store_d_f16_col,1494,122911
    nvvm_wmma_m32n8k16_store_d_f32_col,1495,123001
    nvvm_wmma_m32n8k16_store_d_s32_col,1496,123091
    nvvm_wmma_m32n8k16_store_d_f16_col_stride,1497,123181
    nvvm_wmma_m32n8k16_store_d_f32_col_stride,1498,123279
    nvvm_wmma_m32n8k16_store_d_s32_col_stride,1499,123377
    nvvm_wmma_m32n8k16_store_d_f16_row,1500,123475
    nvvm_wmma_m32n8k16_store_d_f32_row,1501,123565
    nvvm_wmma_m32n8k16_store_d_s32_row,1502,123655
    nvvm_wmma_m32n8k16_store_d_f16_row_stride,1503,123745
    nvvm_wmma_m32n8k16_store_d_f32_row_stride,1504,123843
    nvvm_wmma_m32n8k16_store_d_s32_row_stride,1505,123941
    nvvm_wmma_m8n32k16_load_a_bf16_col,1506,124039
    nvvm_wmma_m8n32k16_load_a_f16_col,1507,124129
    nvvm_wmma_m8n32k16_load_a_s8_col,1508,124218
    nvvm_wmma_m8n32k16_load_a_bf16_col_stride,1509,124306
    nvvm_wmma_m8n32k16_load_a_f16_col_stride,1510,124404
    nvvm_wmma_m8n32k16_load_a_s8_col_stride,1511,124500
    nvvm_wmma_m8n32k16_load_a_u8_col_stride,1512,124595
    nvvm_wmma_m8n32k16_load_a_u8_col,1513,124690
    nvvm_wmma_m8n32k16_load_a_bf16_row,1514,124778
    nvvm_wmma_m8n32k16_load_a_f16_row,1515,124868
    nvvm_wmma_m8n32k16_load_a_s8_row,1516,124957
    nvvm_wmma_m8n32k16_load_a_bf16_row_stride,1517,125045
    nvvm_wmma_m8n32k16_load_a_f16_row_stride,1518,125143
    nvvm_wmma_m8n32k16_load_a_s8_row_stride,1519,125239
    nvvm_wmma_m8n32k16_load_a_u8_row_stride,1520,125334
    nvvm_wmma_m8n32k16_load_a_u8_row,1521,125429
    nvvm_wmma_m8n32k16_load_b_bf16_col,1522,125517
    nvvm_wmma_m8n32k16_load_b_f16_col,1523,125607
    nvvm_wmma_m8n32k16_load_b_s8_col,1524,125696
    nvvm_wmma_m8n32k16_load_b_bf16_col_stride,1525,125784
    nvvm_wmma_m8n32k16_load_b_f16_col_stride,1526,125882
    nvvm_wmma_m8n32k16_load_b_s8_col_stride,1527,125978
    nvvm_wmma_m8n32k16_load_b_u8_col_stride,1528,126073
    nvvm_wmma_m8n32k16_load_b_u8_col,1529,126168
    nvvm_wmma_m8n32k16_load_b_bf16_row,1530,126256
    nvvm_wmma_m8n32k16_load_b_f16_row,1531,126346
    nvvm_wmma_m8n32k16_load_b_s8_row,1532,126435
    nvvm_wmma_m8n32k16_load_b_bf16_row_stride,1533,126523
    nvvm_wmma_m8n32k16_load_b_f16_row_stride,1534,126621
    nvvm_wmma_m8n32k16_load_b_s8_row_stride,1535,126717
    nvvm_wmma_m8n32k16_load_b_u8_row_stride,1536,126812
    nvvm_wmma_m8n32k16_load_b_u8_row,1537,126907
    nvvm_wmma_m8n32k16_load_c_f16_col,1538,126995
    nvvm_wmma_m8n32k16_load_c_f32_col,1539,127084
    nvvm_wmma_m8n32k16_load_c_s32_col,1540,127173
    nvvm_wmma_m8n32k16_load_c_f16_col_stride,1541,127262
    nvvm_wmma_m8n32k16_load_c_f32_col_stride,1542,127358
    nvvm_wmma_m8n32k16_load_c_s32_col_stride,1543,127454
    nvvm_wmma_m8n32k16_load_c_f16_row,1544,127550
    nvvm_wmma_m8n32k16_load_c_f32_row,1545,127639
    nvvm_wmma_m8n32k16_load_c_s32_row,1546,127728
    nvvm_wmma_m8n32k16_load_c_f16_row_stride,1547,127817
    nvvm_wmma_m8n32k16_load_c_f32_row_stride,1548,127913
    nvvm_wmma_m8n32k16_load_c_s32_row_stride,1549,128009
    nvvm_wmma_m8n32k16_mma_col_col_bf16,1550,128105
    nvvm_wmma_m8n32k16_mma_col_col_f16_f16,1551,128196
    nvvm_wmma_m8n32k16_mma_col_col_f16_f16_satfinite,1552,128290
    nvvm_wmma_m8n32k16_mma_col_col_f16_f32,1553,128402
    nvvm_wmma_m8n32k16_mma_col_col_f16_f32_satfinite,1554,128496
    nvvm_wmma_m8n32k16_mma_col_col_f32_f16,1555,128608
    nvvm_wmma_m8n32k16_mma_col_col_f32_f16_satfinite,1556,128702
    nvvm_wmma_m8n32k16_mma_col_col_f32_f32,1557,128814
    nvvm_wmma_m8n32k16_mma_col_col_f32_f32_satfinite,1558,128908
    nvvm_wmma_m8n32k16_mma_col_col_s8,1559,129020
    nvvm_wmma_m8n32k16_mma_col_col_s8_satfinite,1560,129109
    nvvm_wmma_m8n32k16_mma_col_col_u8,1561,129211
    nvvm_wmma_m8n32k16_mma_col_col_u8_satfinite,1562,129300
    nvvm_wmma_m8n32k16_mma_col_row_bf16,1563,129402
    nvvm_wmma_m8n32k16_mma_col_row_f16_f16,1564,129493
    nvvm_wmma_m8n32k16_mma_col_row_f16_f16_satfinite,1565,129587
    nvvm_wmma_m8n32k16_mma_col_row_f16_f32,1566,129699
    nvvm_wmma_m8n32k16_mma_col_row_f16_f32_satfinite,1567,129793
    nvvm_wmma_m8n32k16_mma_col_row_f32_f16,1568,129905
    nvvm_wmma_m8n32k16_mma_col_row_f32_f16_satfinite,1569,129999
    nvvm_wmma_m8n32k16_mma_col_row_f32_f32,1570,130111
    nvvm_wmma_m8n32k16_mma_col_row_f32_f32_satfinite,1571,130205
    nvvm_wmma_m8n32k16_mma_col_row_s8,1572,130317
    nvvm_wmma_m8n32k16_mma_col_row_s8_satfinite,1573,130406
    nvvm_wmma_m8n32k16_mma_col_row_u8,1574,130508
    nvvm_wmma_m8n32k16_mma_col_row_u8_satfinite,1575,130597
    nvvm_wmma_m8n32k16_mma_row_col_bf16,1576,130699
    nvvm_wmma_m8n32k16_mma_row_col_f16_f16,1577,130790
    nvvm_wmma_m8n32k16_mma_row_col_f16_f16_satfinite,1578,130884
    nvvm_wmma_m8n32k16_mma_row_col_f16_f32,1579,130996
    nvvm_wmma_m8n32k16_mma_row_col_f16_f32_satfinite,1580,131090
    nvvm_wmma_m8n32k16_mma_row_col_f32_f16,1581,131202
    nvvm_wmma_m8n32k16_mma_row_col_f32_f16_satfinite,1582,131296
    nvvm_wmma_m8n32k16_mma_row_col_f32_f32,1583,131408
    nvvm_wmma_m8n32k16_mma_row_col_f32_f32_satfinite,1584,131502
    nvvm_wmma_m8n32k16_mma_row_col_s8,1585,131614
    nvvm_wmma_m8n32k16_mma_row_col_s8_satfinite,1586,131703
    nvvm_wmma_m8n32k16_mma_row_col_u8,1587,131805
    nvvm_wmma_m8n32k16_mma_row_col_u8_satfinite,1588,131894
    nvvm_wmma_m8n32k16_mma_row_row_bf16,1589,131996
    nvvm_wmma_m8n32k16_mma_row_row_f16_f16,1590,132087
    nvvm_wmma_m8n32k16_mma_row_row_f16_f16_satfinite,1591,132181
    nvvm_wmma_m8n32k16_mma_row_row_f16_f32,1592,132293
    nvvm_wmma_m8n32k16_mma_row_row_f16_f32_satfinite,1593,132387
    nvvm_wmma_m8n32k16_mma_row_row_f32_f16,1594,132499
    nvvm_wmma_m8n32k16_mma_row_row_f32_f16_satfinite,1595,132593
    nvvm_wmma_m8n32k16_mma_row_row_f32_f32,1596,132705
    nvvm_wmma_m8n32k16_mma_row_row_f32_f32_satfinite,1597,132799
    nvvm_wmma_m8n32k16_mma_row_row_s8,1598,132911
    nvvm_wmma_m8n32k16_mma_row_row_s8_satfinite,1599,133000
    nvvm_wmma_m8n32k16_mma_row_row_u8,1600,133102
    nvvm_wmma_m8n32k16_mma_row_row_u8_satfinite,1601,133191
    nvvm_wmma_m8n32k16_store_d_f16_col,1602,133293
    nvvm_wmma_m8n32k16_store_d_f32_col,1603,133383
    nvvm_wmma_m8n32k16_store_d_s32_col,1604,133473
    nvvm_wmma_m8n32k16_store_d_f16_col_stride,1605,133563
    nvvm_wmma_m8n32k16_store_d_f32_col_stride,1606,133661
    nvvm_wmma_m8n32k16_store_d_s32_col_stride,1607,133759
    nvvm_wmma_m8n32k16_store_d_f16_row,1608,133857
    nvvm_wmma_m8n32k16_store_d_f32_row,1609,133947
    nvvm_wmma_m8n32k16_store_d_s32_row,1610,134037
    nvvm_wmma_m8n32k16_store_d_f16_row_stride,1611,134127
    nvvm_wmma_m8n32k16_store_d_f32_row_stride,1612,134225
    nvvm_wmma_m8n32k16_store_d_s32_row_stride,1613,134323
    nvvm_wmma_m8n8k128_load_a_b1_row,1614,134421
    nvvm_wmma_m8n8k128_load_a_b1_row_stride,1615,134509
    nvvm_wmma_m8n8k128_load_b_b1_col,1616,134604
    nvvm_wmma_m8n8k128_load_b_b1_col_stride,1617,134692
    nvvm_wmma_m8n8k128_load_c_s32_col,1618,134787
    nvvm_wmma_m8n8k128_load_c_s32_col_stride,1619,134876
    nvvm_wmma_m8n8k128_load_c_s32_row,1620,134972
    nvvm_wmma_m8n8k128_load_c_s32_row_stride,1621,135061
    nvvm_wmma_m8n8k128_mma_and_popc_row_col_b1,1622,135157
    nvvm_wmma_m8n8k128_mma_xor_popc_row_col_b1,1623,135257
    nvvm_wmma_m8n8k128_store_d_s32_col,1624,135357
    nvvm_wmma_m8n8k128_store_d_s32_col_stride,1625,135447
    nvvm_wmma_m8n8k128_store_d_s32_row,1626,135545
    nvvm_wmma_m8n8k128_store_d_s32_row_stride,1627,135635
    nvvm_wmma_m8n8k32_load_a_s4_row,1628,135733
    nvvm_wmma_m8n8k32_load_a_s4_row_stride,1629,135820
    nvvm_wmma_m8n8k32_load_a_u4_row_stride,1630,135914
    nvvm_wmma_m8n8k32_load_a_u4_row,1631,136008
    nvvm_wmma_m8n8k32_load_b_s4_col,1632,136095
    nvvm_wmma_m8n8k32_load_b_s4_col_stride,1633,136182
    nvvm_wmma_m8n8k32_load_b_u4_col_stride,1634,136276
    nvvm_wmma_m8n8k32_load_b_u4_col,1635,136370
    nvvm_wmma_m8n8k32_load_c_s32_col,1636,136457
    nvvm_wmma_m8n8k32_load_c_s32_col_stride,1637,136545
    nvvm_wmma_m8n8k32_load_c_s32_row,1638,136640
    nvvm_wmma_m8n8k32_load_c_s32_row_stride,1639,136728
    nvvm_wmma_m8n8k32_mma_row_col_s4,1640,136823
    nvvm_wmma_m8n8k32_mma_row_col_s4_satfinite,1641,136911
    nvvm_wmma_m8n8k32_mma_row_col_u4,1642,137011
    nvvm_wmma_m8n8k32_mma_row_col_u4_satfinite,1643,137099
    nvvm_wmma_m8n8k32_store_d_s32_col,1644,137199
    nvvm_wmma_m8n8k32_store_d_s32_col_stride,1645,137288
    nvvm_wmma_m8n8k32_store_d_s32_row,1646,137384
    nvvm_wmma_m8n8k32_store_d_s32_row_stride,1647,137473
    nvvm_wmma_m8n8k4_load_a_f64_col,1648,137569
    nvvm_wmma_m8n8k4_load_a_f64_col_stride,1649,137656
    nvvm_wmma_m8n8k4_load_a_f64_row,1650,137750
    nvvm_wmma_m8n8k4_load_a_f64_row_stride,1651,137837
    nvvm_wmma_m8n8k4_load_b_f64_col,1652,137931
    nvvm_wmma_m8n8k4_load_b_f64_col_stride,1653,138018
    nvvm_wmma_m8n8k4_load_b_f64_row,1654,138112
    nvvm_wmma_m8n8k4_load_b_f64_row_stride,1655,138199
    nvvm_wmma_m8n8k4_load_c_f64_col,1656,138293
    nvvm_wmma_m8n8k4_load_c_f64_col_stride,1657,138380
    nvvm_wmma_m8n8k4_load_c_f64_row,1658,138474
    nvvm_wmma_m8n8k4_load_c_f64_row_stride,1659,138561
    nvvm_wmma_m8n8k4_mma_col_col_f64,1660,138655
    nvvm_wmma_m8n8k4_mma_col_col_rm_f64,1661,138743
    nvvm_wmma_m8n8k4_mma_col_col_rn_f64,1662,138834
    nvvm_wmma_m8n8k4_mma_col_col_rp_f64,1663,138925
    nvvm_wmma_m8n8k4_mma_col_col_rz_f64,1664,139016
    nvvm_wmma_m8n8k4_mma_col_row_f64,1665,139107
    nvvm_wmma_m8n8k4_mma_col_row_rm_f64,1666,139195
    nvvm_wmma_m8n8k4_mma_col_row_rn_f64,1667,139286
    nvvm_wmma_m8n8k4_mma_col_row_rp_f64,1668,139377
    nvvm_wmma_m8n8k4_mma_col_row_rz_f64,1669,139468
    nvvm_wmma_m8n8k4_mma_row_col_f64,1670,139559
    nvvm_wmma_m8n8k4_mma_row_col_rm_f64,1671,139647
    nvvm_wmma_m8n8k4_mma_row_col_rn_f64,1672,139738
    nvvm_wmma_m8n8k4_mma_row_col_rp_f64,1673,139829
    nvvm_wmma_m8n8k4_mma_row_col_rz_f64,1674,139920
    nvvm_wmma_m8n8k4_mma_row_row_f64,1675,140011
    nvvm_wmma_m8n8k4_mma_row_row_rm_f64,1676,140099
    nvvm_wmma_m8n8k4_mma_row_row_rn_f64,1677,140190
    nvvm_wmma_m8n8k4_mma_row_row_rp_f64,1678,140281
    nvvm_wmma_m8n8k4_mma_row_row_rz_f64,1679,140372
    nvvm_wmma_m8n8k4_store_d_f64_col,1680,140463
    nvvm_wmma_m8n8k4_store_d_f64_col_stride,1681,140551
    nvvm_wmma_m8n8k4_store_d_f64_row,1682,140646
    nvvm_wmma_m8n8k4_store_d_f64_row_stride,1683,140734

/usr/include/llvm/IR/IntrinsicsNVVM.td,6024
  string geom 46,1857
  string frag 47,1879
  string ptx_elt_type 48,1901
  string gft 49,1937
  string ft 50,1984
  list<LLVMType> regs 51,2021
  string intr 199,9104
  string record 210,9552
  list<WMMA_REGS> id_frags 220,9876
   string ret 227,10138
  string signature 232,10379
  string llvm 233,10431
  string signature 249,10977
  string llvm 250,11029
  string intr 262,11396
  string record 268,11617
class MMA_OPS<list<string> Geom, list<string> TypeA,276,11955
class MMA_OPS<list<string> Geom, list<string> TypeA, list<string> TypeB,276,11955
            list<string> TypeC,277,12028
  list<list<WMMA_REGS>> ret 278,12082
   list<list<string>> ops 289,12762
class MMA_LDST_OPS<list<string> Geom, list<string> Frags,292,12853
  list<WMMA_REGS> ret 293,12933
   list<string> ops 299,13252
class LDMATRIX_OPS<list<string> Geom, list<string> Frags,302,13302
  list<WMMA_REGS> ret 303,13382
   list<string> ops 309,13701
class NVVM_MMA_OPS 314,13897
  list<list<WMMA_REGS>> tf32_wmma_ops 315,13918
            ["tf32"], [], ["f32"], []>.ret;ret317,13993
  list<list<WMMA_REGS>> bf16_wmma_ops 318,14037
            ["bf16"], [], ["f32"], []>.ret;ret320,14137
  list<list<WMMA_REGS>> f64_wmma_ops 321,14181
            ["f64"], [], ["f64"], []>.ret;ret323,14253
  list<list<WMMA_REGS>> fp_wmma_ops 324,14296
            ["f16"], [], ["f16", "f32"], ["f16", "f32"]>.ret;ret326,14394
  list<list<WMMA_REGS>> int_wmma_ops 327,14456
            ["s8", "u8"], [], ["s32"], []>.ret;ret329,14555
  list<list<WMMA_REGS>> subint_wmma_ops 330,14603
            ["s4", "u4"], [], ["s32"], []>.ret;ret332,14679
  list<list<WMMA_REGS>> bit_wmma_ops 333,14727
            ["b1"], [], ["s32"], []>.ret;ret335,14801
  list<list<WMMA_REGS>> all_wmma_ops 336,14843
  list<list<WMMA_REGS>> tf32_mma_ops 340,15023
            ["tf32"], [], ["f32"], []>.ret;ret342,15107
  list<list<WMMA_REGS>> bf16_mma_ops 343,15151
            ["bf16"], [], ["f32"], []>.ret;ret345,15236
  list<list<WMMA_REGS>> f64_mma_ops 346,15280
            ["f64"], [], ["f64"], []>.ret;ret348,15351
  list<list<WMMA_REGS>> fp_mma_ops 349,15394
            ["f16"], [], ["f16", "f32"], ["f16", "f32"]>.ret;ret351,15487
  list<list<WMMA_REGS>> int_mma_ops 352,15549
            ["s8", "u8"], ["s8", "u8"], ["s32"], []>.ret;ret354,15645
  list<list<WMMA_REGS>> subint_mma_ops 355,15703
            ["s4", "u4"], ["s4", "u4"], ["s32"], []>.ret;ret357,15802
  list<list<WMMA_REGS>> bit_mma_ops 358,15860
            ["b1"], [], ["s32"], []>.ret;ret360,15959
  list<list<WMMA_REGS>> all_mma_ops 361,16001
  list<WMMA_REGS> ldst_ab_ops 365,16173
            ["a", "b"], ["f16", "u8", "s8", "bf16"]>.ret;ret367,16270
  list<WMMA_REGS> ldst_cd_ops 368,16328
            ["c", "d"], ["f16", "f32", "s32"]>.ret;ret370,16425
  list<WMMA_REGS> ldst_tf32_ab_ops 371,16477
            ["a", "b"], ["tf32"]>.ret;ret373,16554
  list<WMMA_REGS> ldst_tf32_cd_ops 374,16593
            ["c", "d"], ["f32"]>.ret;ret376,16670
  list<WMMA_REGS> ldst_f64_abcd_ops 377,16708
            ["a", "b", "c", "d"], ["f64"]>.ret;ret379,16784
  list<WMMA_REGS> ldst_subint_ab_ops 380,16832
            ["m8n8k32"], ["a", "b"], ["s4","u4"]>.ret;ret381,16885
  list<WMMA_REGS> ldst_bit_ab_ops 382,16940
            ["m8n8k128"], ["a", "b"], ["b1"]>.ret;ret383,16990
  list<WMMA_REGS> ldst_subint_cd_ops 384,17041
            ["m8n8k32", "m8n8k128"],  ["c", "d"], ["s32"]>.ret;ret385,17094
  list<WMMA_REGS> all_ldst_ops 386,17158
  list<WMMA_REGS> all_ld_ops 394,17667
  list<WMMA_REGS> all_st_ops 395,17744
  list<WMMA_REGS> ldmatrix_b16_ops 397,17822
    ["m8n8"], ["x1", "x2", "x4"], ["b16"]>.ret;ret398,17873
  list<WMMA_REGS> all_ldmatrix_ops 399,17921
def NVVM_MMA_OPS : NVVM_MMA_OPS;402,17979
  string f 411,18322
  string t 412,18346
  bit ret 414,18379
  string layout 436,19136
  string t 437,19181
  bit ret 439,19218
class NVVM_MMA_B1OPS<NVVM_MMA_B1OPS461,19778
  list<string> ret 462,19824
  string layout 476,20288
  string a_type 477,20333
  string b_type 478,20374
  string c_type 479,20415
  string d_type 480,20456
  string geom 481,20497
  string gcd 485,20622
  bit ret 486,20667
class NVVM_LDMATRIX_SUPPORTED<NVVM_LDMATRIX_SUPPORTED524,21706
  string g 525,21754
  string t 526,21778
  bit ret 528,21811
  string Suffix 536,22015
  string Builtin 542,22203
  string IntrName 543,22247
  bit withGccBuiltin 544,22312
  bit withoutGccBuiltin 545,22354
  LLVMType OpType 546,22393
  list<LLVMType> RetTy 549,22491
  list<LLVMType> ArgsTy 550,22566
let TargetPrefix 555,22699
    def _cta : SCOPED_ATOMIC2_impl<SCOPED_ATOMIC2_impl1332,64696
    def _sys : SCOPED_ATOMIC2_impl<SCOPED_ATOMIC2_impl1333,64738
    Intrinsic<Intrinsic1447,70411
    Intrinsic<Intrinsic1451,70520
    Intrinsic<Intrinsic1455,70655
    Intrinsic<Intrinsic1459,70774
    Intrinsic<Intrinsic1462,70840
    Intrinsic<Intrinsic1465,70941
    Intrinsic<Intrinsic1469,71076
    Intrinsic<Intrinsic1472,71240
    Intrinsic<Intrinsic1475,71396
    Intrinsic<Intrinsic1480,71636
    Intrinsic<Intrinsic1485,71868
    Intrinsic<Intrinsic1488,72034
    Intrinsic<Intrinsic1491,72215
    Intrinsic<Intrinsic1494,72416
    Intrinsic<Intrinsic1499,72603
    Intrinsic<Intrinsic1502,72779
    Intrinsic<Intrinsic1505,72970
    Intrinsic<Intrinsic1508,73181
    Intrinsic<Intrinsic1513,73364
    Intrinsic<Intrinsic1516,73548
    Intrinsic<Intrinsic1520,73734
  foreach suffix 4457,221315
multiclass PTXReadSRegIntrinsicNB_v4i32 4463,221550
  Intrinsic<Intrinsic4634,228717
  Intrinsic<Intrinsic4639,228960
  Intrinsic<Intrinsic4644,229201
  Intrinsic<Intrinsic4649,229442
  Intrinsic<Intrinsic4654,229683
  Intrinsic<Intrinsic4659,229924
  Intrinsic<Intrinsic4664,230165
  Intrinsic<Intrinsic4669,230403
foreach layout 4693,231378
foreach layout_a 4715,232286
foreach layout_a 4742,233352
foreach transposed 4764,234187

/usr/include/llvm/IR/IntrinsicsPowerPC.h,20237
#define LLVM_IR_INTRINSIC_PPC_ENUMS_H10,606
enum PPCIntrinsics 14,684
    ppc_addex 16,746
    ppc_addf128_round_to_odd,17,818
    ppc_altivec_crypto_vcipher,18,898
    ppc_altivec_crypto_vcipherlast,19,980
    ppc_altivec_crypto_vncipher,20,1066
    ppc_altivec_crypto_vncipherlast,21,1149
    ppc_altivec_crypto_vpermxor,22,1236
    ppc_altivec_crypto_vpermxor_be,23,1319
    ppc_altivec_crypto_vpmsumb,24,1405
    ppc_altivec_crypto_vpmsumd,25,1487
    ppc_altivec_crypto_vpmsumh,26,1569
    ppc_altivec_crypto_vpmsumw,27,1651
    ppc_altivec_crypto_vsbox,28,1733
    ppc_altivec_crypto_vshasigmad,29,1813
    ppc_altivec_crypto_vshasigmaw,30,1898
    ppc_altivec_dss,31,1983
    ppc_altivec_dssall,32,2054
    ppc_altivec_dst,33,2128
    ppc_altivec_dstst,34,2199
    ppc_altivec_dststt,35,2272
    ppc_altivec_dstt,36,2346
    ppc_altivec_lvebx,37,2418
    ppc_altivec_lvehx,38,2491
    ppc_altivec_lvewx,39,2564
    ppc_altivec_lvsl,40,2637
    ppc_altivec_lvsr,41,2709
    ppc_altivec_lvx,42,2781
    ppc_altivec_lvxl,43,2852
    ppc_altivec_mfvscr,44,2924
    ppc_altivec_mtvscr,45,2998
    ppc_altivec_mtvsrbm,46,3072
    ppc_altivec_mtvsrdm,47,3147
    ppc_altivec_mtvsrhm,48,3222
    ppc_altivec_mtvsrqm,49,3297
    ppc_altivec_mtvsrwm,50,3372
    ppc_altivec_stvebx,51,3447
    ppc_altivec_stvehx,52,3521
    ppc_altivec_stvewx,53,3595
    ppc_altivec_stvx,54,3669
    ppc_altivec_stvxl,55,3741
    ppc_altivec_vabsdub,56,3814
    ppc_altivec_vabsduh,57,3889
    ppc_altivec_vabsduw,58,3964
    ppc_altivec_vaddcuq,59,4039
    ppc_altivec_vaddcuw,60,4114
    ppc_altivec_vaddecuq,61,4189
    ppc_altivec_vaddeuqm,62,4265
    ppc_altivec_vaddsbs,63,4341
    ppc_altivec_vaddshs,64,4416
    ppc_altivec_vaddsws,65,4491
    ppc_altivec_vaddubs,66,4566
    ppc_altivec_vadduhs,67,4641
    ppc_altivec_vadduws,68,4716
    ppc_altivec_vavgsb,69,4791
    ppc_altivec_vavgsh,70,4865
    ppc_altivec_vavgsw,71,4939
    ppc_altivec_vavgub,72,5013
    ppc_altivec_vavguh,73,5087
    ppc_altivec_vavguw,74,5161
    ppc_altivec_vbpermd,75,5235
    ppc_altivec_vbpermq,76,5310
    ppc_altivec_vcfsx,77,5385
    ppc_altivec_vcfuged,78,5458
    ppc_altivec_vcfux,79,5533
    ppc_altivec_vclrlb,80,5606
    ppc_altivec_vclrrb,81,5680
    ppc_altivec_vclzdm,82,5754
    ppc_altivec_vclzlsbb,83,5828
    ppc_altivec_vcmpbfp,84,5904
    ppc_altivec_vcmpbfp_p,85,5979
    ppc_altivec_vcmpeqfp,86,6056
    ppc_altivec_vcmpeqfp_p,87,6132
    ppc_altivec_vcmpequb,88,6210
    ppc_altivec_vcmpequb_p,89,6286
    ppc_altivec_vcmpequd,90,6364
    ppc_altivec_vcmpequd_p,91,6440
    ppc_altivec_vcmpequh,92,6518
    ppc_altivec_vcmpequh_p,93,6594
    ppc_altivec_vcmpequq,94,6672
    ppc_altivec_vcmpequq_p,95,6748
    ppc_altivec_vcmpequw,96,6826
    ppc_altivec_vcmpequw_p,97,6902
    ppc_altivec_vcmpgefp,98,6980
    ppc_altivec_vcmpgefp_p,99,7056
    ppc_altivec_vcmpgtfp,100,7134
    ppc_altivec_vcmpgtfp_p,101,7210
    ppc_altivec_vcmpgtsb,102,7288
    ppc_altivec_vcmpgtsb_p,103,7364
    ppc_altivec_vcmpgtsd,104,7442
    ppc_altivec_vcmpgtsd_p,105,7518
    ppc_altivec_vcmpgtsh,106,7596
    ppc_altivec_vcmpgtsh_p,107,7672
    ppc_altivec_vcmpgtsq,108,7750
    ppc_altivec_vcmpgtsq_p,109,7826
    ppc_altivec_vcmpgtsw,110,7904
    ppc_altivec_vcmpgtsw_p,111,7980
    ppc_altivec_vcmpgtub,112,8058
    ppc_altivec_vcmpgtub_p,113,8134
    ppc_altivec_vcmpgtud,114,8212
    ppc_altivec_vcmpgtud_p,115,8288
    ppc_altivec_vcmpgtuh,116,8366
    ppc_altivec_vcmpgtuh_p,117,8442
    ppc_altivec_vcmpgtuq,118,8520
    ppc_altivec_vcmpgtuq_p,119,8596
    ppc_altivec_vcmpgtuw,120,8674
    ppc_altivec_vcmpgtuw_p,121,8750
    ppc_altivec_vcmpneb,122,8828
    ppc_altivec_vcmpneb_p,123,8903
    ppc_altivec_vcmpneh,124,8980
    ppc_altivec_vcmpneh_p,125,9055
    ppc_altivec_vcmpnew,126,9132
    ppc_altivec_vcmpnew_p,127,9207
    ppc_altivec_vcmpnezb,128,9284
    ppc_altivec_vcmpnezb_p,129,9360
    ppc_altivec_vcmpnezh,130,9438
    ppc_altivec_vcmpnezh_p,131,9514
    ppc_altivec_vcmpnezw,132,9592
    ppc_altivec_vcmpnezw_p,133,9668
    ppc_altivec_vcntmbb,134,9746
    ppc_altivec_vcntmbd,135,9821
    ppc_altivec_vcntmbh,136,9896
    ppc_altivec_vcntmbw,137,9971
    ppc_altivec_vctsxs,138,10046
    ppc_altivec_vctuxs,139,10120
    ppc_altivec_vctzdm,140,10194
    ppc_altivec_vctzlsbb,141,10268
    ppc_altivec_vdivesd,142,10344
    ppc_altivec_vdivesq,143,10419
    ppc_altivec_vdivesw,144,10494
    ppc_altivec_vdiveud,145,10569
    ppc_altivec_vdiveuq,146,10644
    ppc_altivec_vdiveuw,147,10719
    ppc_altivec_vexpandbm,148,10794
    ppc_altivec_vexpanddm,149,10871
    ppc_altivec_vexpandhm,150,10948
    ppc_altivec_vexpandqm,151,11025
    ppc_altivec_vexpandwm,152,11102
    ppc_altivec_vexptefp,153,11179
    ppc_altivec_vextddvlx,154,11255
    ppc_altivec_vextddvrx,155,11332
    ppc_altivec_vextdubvlx,156,11409
    ppc_altivec_vextdubvrx,157,11487
    ppc_altivec_vextduhvlx,158,11565
    ppc_altivec_vextduhvrx,159,11643
    ppc_altivec_vextduwvlx,160,11721
    ppc_altivec_vextduwvrx,161,11799
    ppc_altivec_vextractbm,162,11877
    ppc_altivec_vextractdm,163,11955
    ppc_altivec_vextracthm,164,12033
    ppc_altivec_vextractqm,165,12111
    ppc_altivec_vextractwm,166,12189
    ppc_altivec_vextsb2d,167,12267
    ppc_altivec_vextsb2w,168,12343
    ppc_altivec_vextsd2q,169,12419
    ppc_altivec_vextsh2d,170,12495
    ppc_altivec_vextsh2w,171,12571
    ppc_altivec_vextsw2d,172,12647
    ppc_altivec_vgbbd,173,12723
    ppc_altivec_vgnb,174,12796
    ppc_altivec_vinsblx,175,12868
    ppc_altivec_vinsbrx,176,12943
    ppc_altivec_vinsbvlx,177,13018
    ppc_altivec_vinsbvrx,178,13094
    ppc_altivec_vinsd,179,13170
    ppc_altivec_vinsdlx,180,13243
    ppc_altivec_vinsdrx,181,13318
    ppc_altivec_vinshlx,182,13393
    ppc_altivec_vinshrx,183,13468
    ppc_altivec_vinshvlx,184,13543
    ppc_altivec_vinshvrx,185,13619
    ppc_altivec_vinsw,186,13695
    ppc_altivec_vinswlx,187,13768
    ppc_altivec_vinswrx,188,13843
    ppc_altivec_vinswvlx,189,13918
    ppc_altivec_vinswvrx,190,13994
    ppc_altivec_vlogefp,191,14070
    ppc_altivec_vmaddfp,192,14145
    ppc_altivec_vmaxfp,193,14220
    ppc_altivec_vmaxsb,194,14294
    ppc_altivec_vmaxsd,195,14368
    ppc_altivec_vmaxsh,196,14442
    ppc_altivec_vmaxsw,197,14516
    ppc_altivec_vmaxub,198,14590
    ppc_altivec_vmaxud,199,14664
    ppc_altivec_vmaxuh,200,14738
    ppc_altivec_vmaxuw,201,14812
    ppc_altivec_vmhaddshs,202,14886
    ppc_altivec_vmhraddshs,203,14963
    ppc_altivec_vminfp,204,15041
    ppc_altivec_vminsb,205,15115
    ppc_altivec_vminsd,206,15189
    ppc_altivec_vminsh,207,15263
    ppc_altivec_vminsw,208,15337
    ppc_altivec_vminub,209,15411
    ppc_altivec_vminud,210,15485
    ppc_altivec_vminuh,211,15559
    ppc_altivec_vminuw,212,15633
    ppc_altivec_vmladduhm,213,15707
    ppc_altivec_vmsumcud,214,15784
    ppc_altivec_vmsummbm,215,15860
    ppc_altivec_vmsumshm,216,15936
    ppc_altivec_vmsumshs,217,16012
    ppc_altivec_vmsumubm,218,16088
    ppc_altivec_vmsumudm,219,16164
    ppc_altivec_vmsumuhm,220,16240
    ppc_altivec_vmsumuhs,221,16316
    ppc_altivec_vmulesb,222,16392
    ppc_altivec_vmulesd,223,16467
    ppc_altivec_vmulesh,224,16542
    ppc_altivec_vmulesw,225,16617
    ppc_altivec_vmuleub,226,16692
    ppc_altivec_vmuleud,227,16767
    ppc_altivec_vmuleuh,228,16842
    ppc_altivec_vmuleuw,229,16917
    ppc_altivec_vmulhsd,230,16992
    ppc_altivec_vmulhsw,231,17067
    ppc_altivec_vmulhud,232,17142
    ppc_altivec_vmulhuw,233,17217
    ppc_altivec_vmulosb,234,17292
    ppc_altivec_vmulosd,235,17367
    ppc_altivec_vmulosh,236,17442
    ppc_altivec_vmulosw,237,17517
    ppc_altivec_vmuloub,238,17592
    ppc_altivec_vmuloud,239,17667
    ppc_altivec_vmulouh,240,17742
    ppc_altivec_vmulouw,241,17817
    ppc_altivec_vnmsubfp,242,17892
    ppc_altivec_vpdepd,243,17968
    ppc_altivec_vperm,244,18042
    ppc_altivec_vpextd,245,18115
    ppc_altivec_vpkpx,246,18189
    ppc_altivec_vpksdss,247,18262
    ppc_altivec_vpksdus,248,18337
    ppc_altivec_vpkshss,249,18412
    ppc_altivec_vpkshus,250,18487
    ppc_altivec_vpkswss,251,18562
    ppc_altivec_vpkswus,252,18637
    ppc_altivec_vpkudus,253,18712
    ppc_altivec_vpkuhus,254,18787
    ppc_altivec_vpkuwus,255,18862
    ppc_altivec_vprtybd,256,18937
    ppc_altivec_vprtybq,257,19012
    ppc_altivec_vprtybw,258,19087
    ppc_altivec_vrefp,259,19162
    ppc_altivec_vrfim,260,19235
    ppc_altivec_vrfin,261,19308
    ppc_altivec_vrfip,262,19381
    ppc_altivec_vrfiz,263,19454
    ppc_altivec_vrlb,264,19527
    ppc_altivec_vrld,265,19599
    ppc_altivec_vrldmi,266,19671
    ppc_altivec_vrldnm,267,19745
    ppc_altivec_vrlh,268,19819
    ppc_altivec_vrlqmi,269,19891
    ppc_altivec_vrlqnm,270,19965
    ppc_altivec_vrlw,271,20039
    ppc_altivec_vrlwmi,272,20111
    ppc_altivec_vrlwnm,273,20185
    ppc_altivec_vrsqrtefp,274,20259
    ppc_altivec_vsel,275,20336
    ppc_altivec_vsl,276,20408
    ppc_altivec_vslb,277,20479
    ppc_altivec_vsldbi,278,20551
    ppc_altivec_vslh,279,20625
    ppc_altivec_vslo,280,20697
    ppc_altivec_vslv,281,20769
    ppc_altivec_vslw,282,20841
    ppc_altivec_vsr,283,20913
    ppc_altivec_vsrab,284,20984
    ppc_altivec_vsrah,285,21057
    ppc_altivec_vsraw,286,21130
    ppc_altivec_vsrb,287,21203
    ppc_altivec_vsrdbi,288,21275
    ppc_altivec_vsrh,289,21349
    ppc_altivec_vsro,290,21421
    ppc_altivec_vsrv,291,21493
    ppc_altivec_vsrw,292,21565
    ppc_altivec_vstribl,293,21637
    ppc_altivec_vstribl_p,294,21712
    ppc_altivec_vstribr,295,21789
    ppc_altivec_vstribr_p,296,21864
    ppc_altivec_vstrihl,297,21941
    ppc_altivec_vstrihl_p,298,22016
    ppc_altivec_vstrihr,299,22093
    ppc_altivec_vstrihr_p,300,22168
    ppc_altivec_vsubcuq,301,22245
    ppc_altivec_vsubcuw,302,22320
    ppc_altivec_vsubecuq,303,22395
    ppc_altivec_vsubeuqm,304,22471
    ppc_altivec_vsubsbs,305,22547
    ppc_altivec_vsubshs,306,22622
    ppc_altivec_vsubsws,307,22697
    ppc_altivec_vsububs,308,22772
    ppc_altivec_vsubuhs,309,22847
    ppc_altivec_vsubuws,310,22922
    ppc_altivec_vsum2sws,311,22997
    ppc_altivec_vsum4sbs,312,23073
    ppc_altivec_vsum4shs,313,23149
    ppc_altivec_vsum4ubs,314,23225
    ppc_altivec_vsumsws,315,23301
    ppc_altivec_vupkhpx,316,23376
    ppc_altivec_vupkhsb,317,23451
    ppc_altivec_vupkhsh,318,23526
    ppc_altivec_vupkhsw,319,23601
    ppc_altivec_vupklpx,320,23676
    ppc_altivec_vupklsb,321,23751
    ppc_altivec_vupklsh,322,23826
    ppc_altivec_vupklsw,323,23901
    ppc_atomic_load_i128,324,23976
    ppc_atomic_store_i128,325,24052
    ppc_atomicrmw_add_i128,326,24129
    ppc_atomicrmw_and_i128,327,24207
    ppc_atomicrmw_nand_i128,328,24285
    ppc_atomicrmw_or_i128,329,24364
    ppc_atomicrmw_sub_i128,330,24441
    ppc_atomicrmw_xchg_i128,331,24519
    ppc_atomicrmw_xor_i128,332,24598
    ppc_bcdadd,333,24676
    ppc_bcdadd_p,334,24742
    ppc_bcdsub,335,24810
    ppc_bcdsub_p,336,24876
    ppc_bpermd,337,24944
    ppc_cfence,338,25010
    ppc_cfuged,339,25076
    ppc_cmpb,340,25142
    ppc_cmpeqb,341,25206
    ppc_cmprb,342,25272
    ppc_cmpxchg_i128,343,25337
    ppc_cntlzdm,344,25409
    ppc_cnttzdm,345,25476
    ppc_compare_exp_eq,346,25543
    ppc_compare_exp_gt,347,25617
    ppc_compare_exp_lt,348,25691
    ppc_compare_exp_uo,349,25765
    ppc_convert_f128_to_ppcf128,350,25839
    ppc_convert_ppcf128_to_f128,351,25922
    ppc_darn,352,26005
    ppc_darn32,353,26069
    ppc_darnraw,354,26135
    ppc_dcba,355,26202
    ppc_dcbf,356,26266
    ppc_dcbfl,357,26330
    ppc_dcbflp,358,26395
    ppc_dcbfps,359,26461
    ppc_dcbi,360,26527
    ppc_dcbst,361,26591
    ppc_dcbstps,362,26656
    ppc_dcbt,363,26723
    ppc_dcbt_with_hint,364,26787
    ppc_dcbtst,365,26861
    ppc_dcbtst_with_hint,366,26927
    ppc_dcbtstt,367,27003
    ppc_dcbtt,368,27070
    ppc_dcbz,369,27135
    ppc_dcbzl,370,27199
    ppc_divde,371,27264
    ppc_divdeu,372,27329
    ppc_divf128_round_to_odd,373,27395
    ppc_divwe,374,27475
    ppc_divweu,375,27540
    ppc_eieio,376,27606
    ppc_extract_exp,377,27671
    ppc_extract_sig,378,27742
    ppc_fcfid,379,27813
    ppc_fcfud,380,27878
    ppc_fctid,381,27943
    ppc_fctidz,382,28008
    ppc_fctiw,383,28074
    ppc_fctiwz,384,28139
    ppc_fctudz,385,28205
    ppc_fctuwz,386,28271
    ppc_fence,387,28337
    ppc_fmaf128_round_to_odd,388,28402
    ppc_fmsub,389,28482
    ppc_fmsubs,390,28547
    ppc_fnabs,391,28613
    ppc_fnabss,392,28678
    ppc_fnmadd,393,28744
    ppc_fnmadds,394,28810
    ppc_fnmsub,395,28877
    ppc_fre,396,28943
    ppc_fres,397,29006
    ppc_frsqrte,398,29070
    ppc_frsqrtes,399,29137
    ppc_fsel,400,29205
    ppc_fsels,401,29269
    ppc_get_texasr,402,29334
    ppc_get_texasru,403,29404
    ppc_get_tfhar,404,29475
    ppc_get_tfiar,405,29544
    ppc_icbt,406,29613
    ppc_insert_exp,407,29677
    ppc_iospace_eieio,408,29747
    ppc_iospace_lwsync,409,29820
    ppc_iospace_sync,410,29894
    ppc_isync,411,29966
    ppc_load2r,412,30031
    ppc_load4r,413,30097
    ppc_load8r,414,30163
    ppc_lwsync,415,30229
    ppc_maddhd,416,30295
    ppc_maddhdu,417,30361
    ppc_maddld,418,30428
    ppc_maxfe,419,30494
    ppc_maxfl,420,30559
    ppc_maxfs,421,30624
    ppc_mffsl,422,30689
    ppc_mfmsr,423,30754
    ppc_mfspr,424,30819
    ppc_mftbu,425,30884
    ppc_minfe,426,30949
    ppc_minfl,427,31014
    ppc_minfs,428,31079
    ppc_mma_assemble_acc,429,31144
    ppc_mma_disassemble_acc,430,31220
    ppc_mma_pmxvbf16ger2,431,31299
    ppc_mma_pmxvbf16ger2nn,432,31375
    ppc_mma_pmxvbf16ger2np,433,31453
    ppc_mma_pmxvbf16ger2pn,434,31531
    ppc_mma_pmxvbf16ger2pp,435,31609
    ppc_mma_pmxvf16ger2,436,31687
    ppc_mma_pmxvf16ger2nn,437,31762
    ppc_mma_pmxvf16ger2np,438,31839
    ppc_mma_pmxvf16ger2pn,439,31916
    ppc_mma_pmxvf16ger2pp,440,31993
    ppc_mma_pmxvf32ger,441,32070
    ppc_mma_pmxvf32gernn,442,32144
    ppc_mma_pmxvf32gernp,443,32220
    ppc_mma_pmxvf32gerpn,444,32296
    ppc_mma_pmxvf32gerpp,445,32372
    ppc_mma_pmxvf64ger,446,32448
    ppc_mma_pmxvf64gernn,447,32522
    ppc_mma_pmxvf64gernp,448,32598
    ppc_mma_pmxvf64gerpn,449,32674
    ppc_mma_pmxvf64gerpp,450,32750
    ppc_mma_pmxvi16ger2,451,32826
    ppc_mma_pmxvi16ger2pp,452,32901
    ppc_mma_pmxvi16ger2s,453,32978
    ppc_mma_pmxvi16ger2spp,454,33054
    ppc_mma_pmxvi4ger8,455,33132
    ppc_mma_pmxvi4ger8pp,456,33206
    ppc_mma_pmxvi8ger4,457,33282
    ppc_mma_pmxvi8ger4pp,458,33356
    ppc_mma_pmxvi8ger4spp,459,33432
    ppc_mma_xvbf16ger2,460,33509
    ppc_mma_xvbf16ger2nn,461,33583
    ppc_mma_xvbf16ger2np,462,33659
    ppc_mma_xvbf16ger2pn,463,33735
    ppc_mma_xvbf16ger2pp,464,33811
    ppc_mma_xvf16ger2,465,33887
    ppc_mma_xvf16ger2nn,466,33960
    ppc_mma_xvf16ger2np,467,34035
    ppc_mma_xvf16ger2pn,468,34110
    ppc_mma_xvf16ger2pp,469,34185
    ppc_mma_xvf32ger,470,34260
    ppc_mma_xvf32gernn,471,34332
    ppc_mma_xvf32gernp,472,34406
    ppc_mma_xvf32gerpn,473,34480
    ppc_mma_xvf32gerpp,474,34554
    ppc_mma_xvf64ger,475,34628
    ppc_mma_xvf64gernn,476,34700
    ppc_mma_xvf64gernp,477,34774
    ppc_mma_xvf64gerpn,478,34848
    ppc_mma_xvf64gerpp,479,34922
    ppc_mma_xvi16ger2,480,34996
    ppc_mma_xvi16ger2pp,481,35069
    ppc_mma_xvi16ger2s,482,35144
    ppc_mma_xvi16ger2spp,483,35218
    ppc_mma_xvi4ger8,484,35294
    ppc_mma_xvi4ger8pp,485,35366
    ppc_mma_xvi8ger4,486,35440
    ppc_mma_xvi8ger4pp,487,35512
    ppc_mma_xvi8ger4spp,488,35586
    ppc_mma_xxmfacc,489,35661
    ppc_mma_xxmtacc,490,35732
    ppc_mma_xxsetaccz,491,35803
    ppc_mtfsb0,492,35876
    ppc_mtfsb1,493,35942
    ppc_mtfsf,494,36008
    ppc_mtfsfi,495,36073
    ppc_mtmsr,496,36139
    ppc_mtspr,497,36204
    ppc_mulf128_round_to_odd,498,36269
    ppc_mulhd,499,36349
    ppc_mulhdu,500,36414
    ppc_mulhw,501,36480
    ppc_mulhwu,502,36545
    ppc_pack_longdouble,503,36611
    ppc_pdepd,504,36686
    ppc_pextd,505,36751
    ppc_popcntb,506,36816
    ppc_readflm,507,36883
    ppc_scalar_extract_expq,508,36950
    ppc_scalar_insert_exp_qp,509,37029
    ppc_set_texasr,510,37109
    ppc_set_texasru,511,37179
    ppc_set_tfhar,512,37250
    ppc_set_tfiar,513,37319
    ppc_setb,514,37388
    ppc_setflm,515,37452
    ppc_setrnd,516,37518
    ppc_sqrtf128_round_to_odd,517,37584
    ppc_stbcx,518,37665
    ppc_stdcx,519,37730
    ppc_stfiw,520,37795
    ppc_sthcx,521,37860
    ppc_store2r,522,37925
    ppc_store4r,523,37992
    ppc_store8r,524,38059
    ppc_stwcx,525,38126
    ppc_subf128_round_to_odd,526,38191
    ppc_sync,527,38271
    ppc_tabort,528,38335
    ppc_tabortdc,529,38401
    ppc_tabortdci,530,38469
    ppc_tabortwc,531,38538
    ppc_tabortwci,532,38606
    ppc_tbegin,533,38675
    ppc_tcheck,534,38741
    ppc_tdw,535,38807
    ppc_tend,536,38870
    ppc_tendall,537,38934
    ppc_test_data_class,538,39001
    ppc_trap,539,39076
    ppc_trapd,540,39140
    ppc_trechkpt,541,39205
    ppc_treclaim,542,39273
    ppc_tresume,543,39341
    ppc_truncf128_round_to_odd,544,39408
    ppc_tsr,545,39490
    ppc_tsuspend,546,39553
    ppc_ttest,547,39621
    ppc_tw,548,39686
    ppc_unpack_longdouble,549,39748
    ppc_vsx_assemble_pair,550,39825
    ppc_vsx_disassemble_pair,551,39902
    ppc_vsx_lxvd2x,552,39982
    ppc_vsx_lxvd2x_be,553,40052
    ppc_vsx_lxvl,554,40125
    ppc_vsx_lxvll,555,40193
    ppc_vsx_lxvp,556,40262
    ppc_vsx_lxvw4x,557,40330
    ppc_vsx_lxvw4x_be,558,40400
    ppc_vsx_stxvd2x,559,40473
    ppc_vsx_stxvd2x_be,560,40544
    ppc_vsx_stxvl,561,40618
    ppc_vsx_stxvll,562,40687
    ppc_vsx_stxvp,563,40757
    ppc_vsx_stxvw4x,564,40826
    ppc_vsx_stxvw4x_be,565,40897
    ppc_vsx_xsmaxdp,566,40971
    ppc_vsx_xsmindp,567,41042
    ppc_vsx_xvcmpeqdp,568,41113
    ppc_vsx_xvcmpeqdp_p,569,41186
    ppc_vsx_xvcmpeqsp,570,41261
    ppc_vsx_xvcmpeqsp_p,571,41334
    ppc_vsx_xvcmpgedp,572,41409
    ppc_vsx_xvcmpgedp_p,573,41482
    ppc_vsx_xvcmpgesp,574,41557
    ppc_vsx_xvcmpgesp_p,575,41630
    ppc_vsx_xvcmpgtdp,576,41705
    ppc_vsx_xvcmpgtdp_p,577,41778
    ppc_vsx_xvcmpgtsp,578,41853
    ppc_vsx_xvcmpgtsp_p,579,41926
    ppc_vsx_xvcvbf16spn,580,42001
    ppc_vsx_xvcvdpsp,581,42076
    ppc_vsx_xvcvdpsxws,582,42148
    ppc_vsx_xvcvdpuxws,583,42222
    ppc_vsx_xvcvhpsp,584,42296
    ppc_vsx_xvcvspbf16,585,42368
    ppc_vsx_xvcvspdp,586,42442
    ppc_vsx_xvcvsphp,587,42514
    ppc_vsx_xvcvspsxds,588,42586
    ppc_vsx_xvcvspuxds,589,42660
    ppc_vsx_xvcvsxdsp,590,42734
    ppc_vsx_xvcvsxwdp,591,42807
    ppc_vsx_xvcvuxdsp,592,42880
    ppc_vsx_xvcvuxwdp,593,42953
    ppc_vsx_xvdivdp,594,43026
    ppc_vsx_xvdivsp,595,43097
    ppc_vsx_xviexpdp,596,43168
    ppc_vsx_xviexpsp,597,43240
    ppc_vsx_xvmaxdp,598,43312
    ppc_vsx_xvmaxsp,599,43383
    ppc_vsx_xvmindp,600,43454
    ppc_vsx_xvminsp,601,43525
    ppc_vsx_xvrdpip,602,43596
    ppc_vsx_xvredp,603,43667
    ppc_vsx_xvresp,604,43737
    ppc_vsx_xvrspip,605,43807
    ppc_vsx_xvrsqrtedp,606,43878
    ppc_vsx_xvrsqrtesp,607,43952
    ppc_vsx_xvtdivdp,608,44026
    ppc_vsx_xvtdivsp,609,44098
    ppc_vsx_xvtlsbb,610,44170
    ppc_vsx_xvtsqrtdp,611,44241
    ppc_vsx_xvtsqrtsp,612,44314
    ppc_vsx_xvtstdcdp,613,44387
    ppc_vsx_xvtstdcsp,614,44460
    ppc_vsx_xvxexpdp,615,44533
    ppc_vsx_xvxexpsp,616,44605
    ppc_vsx_xvxsigdp,617,44677
    ppc_vsx_xvxsigsp,618,44749
    ppc_vsx_xxblendvb,619,44821
    ppc_vsx_xxblendvd,620,44894
    ppc_vsx_xxblendvh,621,44967
    ppc_vsx_xxblendvw,622,45040
    ppc_vsx_xxeval,623,45113
    ppc_vsx_xxextractuw,624,45183
    ppc_vsx_xxgenpcvbm,625,45258
    ppc_vsx_xxgenpcvdm,626,45332
    ppc_vsx_xxgenpcvhm,627,45406
    ppc_vsx_xxgenpcvwm,628,45480
    ppc_vsx_xxinsertw,629,45554
    ppc_vsx_xxleqv,630,45627
    ppc_vsx_xxpermx,631,45697

/usr/include/llvm/IR/IntrinsicsPowerPC.td,8622
let TargetPrefix 18,673
let TargetPrefix 220,10262
  def NAME: DefaultAttrsIntrinsic<[llvm_v512i1_ty], args,241,11336
  def NAME: DefaultAttrsIntrinsic<[llvm_v512i1_ty], args,257,12146
              Intrinsic<Intrinsic353,16791
              Intrinsic<Intrinsic355,16912
              Intrinsic<Intrinsic357,17016
              Intrinsic<Intrinsic361,17207
              Intrinsic<Intrinsic365,17400
              Intrinsic<Intrinsic369,17595
              Intrinsic<Intrinsic375,17809
              Intrinsic<Intrinsic377,17961
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic383,18194
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic386,18343
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic389,18493
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic392,18643
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic395,18793
              DefaultAttrsIntrinsic<DefaultAttrsIntrinsic401,19068
              DefaultAttrsIntrinsic<DefaultAttrsIntrinsic404,19237
              DefaultAttrsIntrinsic<DefaultAttrsIntrinsic407,19407
              DefaultAttrsIntrinsic<DefaultAttrsIntrinsic410,19577
              DefaultAttrsIntrinsic<DefaultAttrsIntrinsic413,19747
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic418,19997
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic421,20193
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic424,20389
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic427,20585
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic431,20782
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic434,20978
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic437,21174
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic441,21371
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic444,21567
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic447,21763
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic450,21957
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic453,22153
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic457,22350
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic460,22546
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic463,22742
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic466,22936
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic469,23132
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic473,23329
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic476,23525
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic479,23721
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic482,23915
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic485,24111
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic489,24308
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic492,24507
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic495,24706
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic498,24909
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic502,25148
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic506,25387
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic512,25705
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic516,25942
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic520,26179
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic524,26416
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic529,26654
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic533,26891
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic537,27128
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic542,27366
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic546,27603
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic550,27840
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic554,28075
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic558,28312
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic563,28550
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic567,28787
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic571,29024
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic575,29259
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic579,29496
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic584,29734
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic588,29971
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic592,30208
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic596,30443
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic600,30680
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic604,30913
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic606,31062
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic608,31209
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic610,31358
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic612,31507
    DefaultAttrsIntrinsic<DefaultAttrsIntrinsic616,31666
    DefaultAttrsIntrinsic<DefaultAttrsIntrinsic620,31863
    DefaultAttrsIntrinsic<DefaultAttrsIntrinsic624,32054
    DefaultAttrsIntrinsic<DefaultAttrsIntrinsic628,32251
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic634,32497
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic636,32652
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic638,32807
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic640,32962
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic642,33117
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic646,33305
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic648,33460
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic650,33615
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic652,33770
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic654,33925
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic658,34123
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic661,34334
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic664,34545
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic667,34756
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic672,35011
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic674,35160
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic676,35309
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic678,35458
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic680,35607
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic684,35823
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic687,36015
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic692,36253
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic694,36404
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic696,36555
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic698,36706
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic701,36939
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic704,37133
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic707,37327
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic710,37521
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic715,37748
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic720,37983
       DefaultAttrsIntrinsic<DefaultAttrsIntrinsic725,38225
       DefaultAttrsIntrinsic<DefaultAttrsIntrinsic728,38419
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic733,38656
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic737,38910
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic743,39191
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic747,39424
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic751,39657
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic755,39890
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic759,40123
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic763,40356
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic767,40589
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic771,40822
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic775,41057
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic779,41294
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic783,41531
     DefaultAttrsIntrinsic<DefaultAttrsIntrinsic787,41767
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic791,42003
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic795,42240
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic800,42469
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic804,42678
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic809,42963
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic813,43204
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic817,43445
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic821,43686
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic825,43927
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic829,44168
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic833,44407
      DefaultAttrsIntrinsic<DefaultAttrsIntrinsic837,44646
let TargetPrefix 892,47583
let TargetPrefix 1148,63051
let TargetPrefix 1178,64620
let TargetPrefix 1266,68942
let TargetPrefix 1520,81543
let TargetPrefix 1587,84674
let TargetPrefix 1674,88588
let TargetPrefix 1923,100966

/usr/include/llvm/IR/IntrinsicsR600.h,1102
#define LLVM_IR_INTRINSIC_R600_ENUMS_H10,607
enum R600Intrinsics 14,686
    r600_cube 16,749
    r600_ddx,17,821
    r600_ddy,18,885
    r600_dot4,19,949
    r600_group_barrier,20,1014
    r600_implicitarg_ptr,21,1088
    r600_kill,22,1164
    r600_rat_store_typed,23,1229
    r600_read_global_size_x,24,1305
    r600_read_global_size_y,25,1384
    r600_read_global_size_z,26,1463
    r600_read_local_size_x,27,1542
    r600_read_local_size_y,28,1620
    r600_read_local_size_z,29,1698
    r600_read_ngroups_x,30,1776
    r600_read_ngroups_y,31,1851
    r600_read_ngroups_z,32,1926
    r600_read_tgid_x,33,2001
    r600_read_tgid_y,34,2073
    r600_read_tgid_z,35,2145
    r600_read_tidig_x,36,2217
    r600_read_tidig_y,37,2290
    r600_read_tidig_z,38,2363
    r600_recipsqrt_clamped,39,2436
    r600_recipsqrt_ieee,40,2514
    r600_store_stream_output,41,2589
    r600_store_swizzle,42,2669
    r600_tex,43,2743
    r600_texc,44,2807
    r600_txb,45,2872
    r600_txbc,46,2936
    r600_txf,47,3001
    r600_txl,48,3065
    r600_txlc,49,3129
    r600_txq,50,3194

/usr/include/llvm/IR/IntrinsicsRISCV.h,23414
#define LLVM_IR_INTRINSIC_RISCV_ENUMS_H10,608
enum RISCVIntrinsics 14,688
    riscv_aes32dsi 16,752
    riscv_aes32dsmi,17,829
    riscv_aes32esi,18,900
    riscv_aes32esmi,19,970
    riscv_aes64ds,20,1041
    riscv_aes64dsm,21,1110
    riscv_aes64es,22,1180
    riscv_aes64esm,23,1249
    riscv_aes64im,24,1319
    riscv_aes64ks1i,25,1388
    riscv_aes64ks2,26,1459
    riscv_brev8,27,1529
    riscv_clmul,28,1596
    riscv_clmulh,29,1663
    riscv_clmulr,30,1731
    riscv_cv_bitmanip_bclr,31,1799
    riscv_cv_bitmanip_bitrev,32,1877
    riscv_cv_bitmanip_bset,33,1957
    riscv_cv_bitmanip_clb,34,2035
    riscv_cv_bitmanip_extract,35,2112
    riscv_cv_bitmanip_extractu,36,2193
    riscv_cv_bitmanip_insert,37,2275
    riscv_masked_atomicrmw_add_i32,38,2355
    riscv_masked_atomicrmw_add_i64,39,2441
    riscv_masked_atomicrmw_max_i32,40,2527
    riscv_masked_atomicrmw_max_i64,41,2613
    riscv_masked_atomicrmw_min_i32,42,2699
    riscv_masked_atomicrmw_min_i64,43,2785
    riscv_masked_atomicrmw_nand_i32,44,2871
    riscv_masked_atomicrmw_nand_i64,45,2958
    riscv_masked_atomicrmw_sub_i32,46,3045
    riscv_masked_atomicrmw_sub_i64,47,3131
    riscv_masked_atomicrmw_umax_i32,48,3217
    riscv_masked_atomicrmw_umax_i64,49,3304
    riscv_masked_atomicrmw_umin_i32,50,3391
    riscv_masked_atomicrmw_umin_i64,51,3478
    riscv_masked_atomicrmw_xchg_i32,52,3565
    riscv_masked_atomicrmw_xchg_i64,53,3652
    riscv_masked_cmpxchg_i32,54,3739
    riscv_masked_cmpxchg_i64,55,3819
    riscv_masked_strided_load,56,3899
    riscv_masked_strided_store,57,3980
    riscv_orc_b,58,4062
    riscv_seg2_load,59,4129
    riscv_seg2_store,60,4200
    riscv_seg3_load,61,4272
    riscv_seg3_store,62,4343
    riscv_seg4_load,63,4415
    riscv_seg4_store,64,4486
    riscv_seg5_load,65,4558
    riscv_seg5_store,66,4629
    riscv_seg6_load,67,4701
    riscv_seg6_store,68,4772
    riscv_seg7_load,69,4844
    riscv_seg7_store,70,4915
    riscv_seg8_load,71,4987
    riscv_seg8_store,72,5058
    riscv_sf_vc_fv_se,73,5130
    riscv_sf_vc_fvv_se,74,5203
    riscv_sf_vc_fvw_se,75,5277
    riscv_sf_vc_i_se_e16m1,76,5351
    riscv_sf_vc_i_se_e16m2,77,5429
    riscv_sf_vc_i_se_e16m4,78,5507
    riscv_sf_vc_i_se_e16m8,79,5585
    riscv_sf_vc_i_se_e16mf2,80,5663
    riscv_sf_vc_i_se_e16mf4,81,5742
    riscv_sf_vc_i_se_e32m1,82,5821
    riscv_sf_vc_i_se_e32m2,83,5899
    riscv_sf_vc_i_se_e32m4,84,5977
    riscv_sf_vc_i_se_e32m8,85,6055
    riscv_sf_vc_i_se_e32mf2,86,6133
    riscv_sf_vc_i_se_e64m1,87,6212
    riscv_sf_vc_i_se_e64m2,88,6290
    riscv_sf_vc_i_se_e64m4,89,6368
    riscv_sf_vc_i_se_e64m8,90,6446
    riscv_sf_vc_i_se_e8m1,91,6524
    riscv_sf_vc_i_se_e8m2,92,6601
    riscv_sf_vc_i_se_e8m4,93,6678
    riscv_sf_vc_i_se_e8m8,94,6755
    riscv_sf_vc_i_se_e8mf2,95,6832
    riscv_sf_vc_i_se_e8mf4,96,6910
    riscv_sf_vc_i_se_e8mf8,97,6988
    riscv_sf_vc_iv_se,98,7066
    riscv_sf_vc_ivv_se,99,7139
    riscv_sf_vc_ivw_se,100,7213
    riscv_sf_vc_v_fv,101,7287
    riscv_sf_vc_v_fv_se,102,7359
    riscv_sf_vc_v_fvv,103,7434
    riscv_sf_vc_v_fvv_se,104,7507
    riscv_sf_vc_v_fvw,105,7583
    riscv_sf_vc_v_fvw_se,106,7656
    riscv_sf_vc_v_i,107,7732
    riscv_sf_vc_v_i_se,108,7803
    riscv_sf_vc_v_iv,109,7877
    riscv_sf_vc_v_iv_se,110,7949
    riscv_sf_vc_v_ivv,111,8024
    riscv_sf_vc_v_ivv_se,112,8097
    riscv_sf_vc_v_ivw,113,8173
    riscv_sf_vc_v_ivw_se,114,8246
    riscv_sf_vc_v_vv,115,8322
    riscv_sf_vc_v_vv_se,116,8394
    riscv_sf_vc_v_vvv,117,8469
    riscv_sf_vc_v_vvv_se,118,8542
    riscv_sf_vc_v_vvw,119,8618
    riscv_sf_vc_v_vvw_se,120,8691
    riscv_sf_vc_v_x,121,8767
    riscv_sf_vc_v_x_se,122,8838
    riscv_sf_vc_v_xv,123,8912
    riscv_sf_vc_v_xv_se,124,8984
    riscv_sf_vc_v_xvv,125,9059
    riscv_sf_vc_v_xvv_se,126,9132
    riscv_sf_vc_v_xvw,127,9208
    riscv_sf_vc_v_xvw_se,128,9281
    riscv_sf_vc_vv_se,129,9357
    riscv_sf_vc_vvv_se,130,9430
    riscv_sf_vc_vvw_se,131,9504
    riscv_sf_vc_x_se_e16m1,132,9578
    riscv_sf_vc_x_se_e16m2,133,9656
    riscv_sf_vc_x_se_e16m4,134,9734
    riscv_sf_vc_x_se_e16m8,135,9812
    riscv_sf_vc_x_se_e16mf2,136,9890
    riscv_sf_vc_x_se_e16mf4,137,9969
    riscv_sf_vc_x_se_e32m1,138,10048
    riscv_sf_vc_x_se_e32m2,139,10126
    riscv_sf_vc_x_se_e32m4,140,10204
    riscv_sf_vc_x_se_e32m8,141,10282
    riscv_sf_vc_x_se_e32mf2,142,10360
    riscv_sf_vc_x_se_e64m1,143,10439
    riscv_sf_vc_x_se_e64m2,144,10517
    riscv_sf_vc_x_se_e64m4,145,10595
    riscv_sf_vc_x_se_e64m8,146,10673
    riscv_sf_vc_x_se_e8m1,147,10751
    riscv_sf_vc_x_se_e8m2,148,10828
    riscv_sf_vc_x_se_e8m4,149,10905
    riscv_sf_vc_x_se_e8m8,150,10982
    riscv_sf_vc_x_se_e8mf2,151,11059
    riscv_sf_vc_x_se_e8mf4,152,11137
    riscv_sf_vc_x_se_e8mf8,153,11215
    riscv_sf_vc_xv_se,154,11293
    riscv_sf_vc_xvv_se,155,11366
    riscv_sf_vc_xvw_se,156,11440
    riscv_sf_vfnrclip_x_f_qf,157,11514
    riscv_sf_vfnrclip_x_f_qf_mask,158,11594
    riscv_sf_vfnrclip_xu_f_qf,159,11679
    riscv_sf_vfnrclip_xu_f_qf_mask,160,11760
    riscv_sf_vfwmacc_4x4x4,161,11846
    riscv_sf_vqmacc_2x8x2,162,11924
    riscv_sf_vqmacc_4x8x4,163,12001
    riscv_sf_vqmaccsu_2x8x2,164,12078
    riscv_sf_vqmaccsu_4x8x4,165,12157
    riscv_sf_vqmaccu_2x8x2,166,12236
    riscv_sf_vqmaccu_4x8x4,167,12314
    riscv_sf_vqmaccus_2x8x2,168,12392
    riscv_sf_vqmaccus_4x8x4,169,12471
    riscv_sha256sig0,170,12550
    riscv_sha256sig1,171,12622
    riscv_sha256sum0,172,12694
    riscv_sha256sum1,173,12766
    riscv_sha512sig0,174,12838
    riscv_sha512sig0h,175,12910
    riscv_sha512sig0l,176,12983
    riscv_sha512sig1,177,13056
    riscv_sha512sig1h,178,13128
    riscv_sha512sig1l,179,13201
    riscv_sha512sum0,180,13274
    riscv_sha512sum0r,181,13346
    riscv_sha512sum1,182,13419
    riscv_sha512sum1r,183,13491
    riscv_sm3p0,184,13564
    riscv_sm3p1,185,13631
    riscv_sm4ed,186,13698
    riscv_sm4ks,187,13765
    riscv_th_vmaqa,188,13832
    riscv_th_vmaqa_mask,189,13902
    riscv_th_vmaqasu,190,13977
    riscv_th_vmaqasu_mask,191,14049
    riscv_th_vmaqau,192,14126
    riscv_th_vmaqau_mask,193,14197
    riscv_th_vmaqaus,194,14273
    riscv_th_vmaqaus_mask,195,14345
    riscv_unzip,196,14422
    riscv_vaadd,197,14489
    riscv_vaadd_mask,198,14556
    riscv_vaaddu,199,14628
    riscv_vaaddu_mask,200,14696
    riscv_vadc,201,14769
    riscv_vadd,202,14835
    riscv_vadd_mask,203,14901
    riscv_vaesdf_vs,204,14972
    riscv_vaesdf_vv,205,15043
    riscv_vaesdm_vs,206,15114
    riscv_vaesdm_vv,207,15185
    riscv_vaesef_vs,208,15256
    riscv_vaesef_vv,209,15327
    riscv_vaesem_vs,210,15398
    riscv_vaesem_vv,211,15469
    riscv_vaeskf1,212,15540
    riscv_vaeskf2,213,15609
    riscv_vaesz_vs,214,15678
    riscv_vand,215,15748
    riscv_vand_mask,216,15814
    riscv_vandn,217,15885
    riscv_vandn_mask,218,15952
    riscv_vasub,219,16024
    riscv_vasub_mask,220,16091
    riscv_vasubu,221,16163
    riscv_vasubu_mask,222,16231
    riscv_vbrev,223,16304
    riscv_vbrev_mask,224,16371
    riscv_vbrev8,225,16443
    riscv_vbrev8_mask,226,16511
    riscv_vclmul,227,16584
    riscv_vclmul_mask,228,16652
    riscv_vclmulh,229,16725
    riscv_vclmulh_mask,230,16794
    riscv_vclz,231,16868
    riscv_vclz_mask,232,16934
    riscv_vcompress,233,17005
    riscv_vcpop,234,17076
    riscv_vcpop_mask,235,17143
    riscv_vcpopv,236,17215
    riscv_vcpopv_mask,237,17283
    riscv_vctz,238,17356
    riscv_vctz_mask,239,17422
    riscv_vdiv,240,17493
    riscv_vdiv_mask,241,17559
    riscv_vdivu,242,17630
    riscv_vdivu_mask,243,17697
    riscv_vfadd,244,17769
    riscv_vfadd_mask,245,17836
    riscv_vfclass,246,17908
    riscv_vfclass_mask,247,17977
    riscv_vfcvt_f_x_v,248,18051
    riscv_vfcvt_f_x_v_mask,249,18124
    riscv_vfcvt_f_xu_v,250,18202
    riscv_vfcvt_f_xu_v_mask,251,18276
    riscv_vfcvt_rtz_x_f_v,252,18355
    riscv_vfcvt_rtz_x_f_v_mask,253,18432
    riscv_vfcvt_rtz_xu_f_v,254,18514
    riscv_vfcvt_rtz_xu_f_v_mask,255,18592
    riscv_vfcvt_x_f_v,256,18675
    riscv_vfcvt_x_f_v_mask,257,18748
    riscv_vfcvt_xu_f_v,258,18826
    riscv_vfcvt_xu_f_v_mask,259,18900
    riscv_vfdiv,260,18979
    riscv_vfdiv_mask,261,19046
    riscv_vfirst,262,19118
    riscv_vfirst_mask,263,19186
    riscv_vfmacc,264,19259
    riscv_vfmacc_mask,265,19327
    riscv_vfmadd,266,19400
    riscv_vfmadd_mask,267,19468
    riscv_vfmax,268,19541
    riscv_vfmax_mask,269,19608
    riscv_vfmerge,270,19680
    riscv_vfmin,271,19749
    riscv_vfmin_mask,272,19816
    riscv_vfmsac,273,19888
    riscv_vfmsac_mask,274,19956
    riscv_vfmsub,275,20029
    riscv_vfmsub_mask,276,20097
    riscv_vfmul,277,20170
    riscv_vfmul_mask,278,20237
    riscv_vfmv_f_s,279,20309
    riscv_vfmv_s_f,280,20379
    riscv_vfmv_v_f,281,20449
    riscv_vfncvt_f_f_w,282,20519
    riscv_vfncvt_f_f_w_mask,283,20593
    riscv_vfncvt_f_x_w,284,20672
    riscv_vfncvt_f_x_w_mask,285,20746
    riscv_vfncvt_f_xu_w,286,20825
    riscv_vfncvt_f_xu_w_mask,287,20900
    riscv_vfncvt_rod_f_f_w,288,20980
    riscv_vfncvt_rod_f_f_w_mask,289,21058
    riscv_vfncvt_rtz_x_f_w,290,21141
    riscv_vfncvt_rtz_x_f_w_mask,291,21219
    riscv_vfncvt_rtz_xu_f_w,292,21302
    riscv_vfncvt_rtz_xu_f_w_mask,293,21381
    riscv_vfncvt_x_f_w,294,21465
    riscv_vfncvt_x_f_w_mask,295,21539
    riscv_vfncvt_xu_f_w,296,21618
    riscv_vfncvt_xu_f_w_mask,297,21693
    riscv_vfncvtbf16_f_f_w,298,21773
    riscv_vfncvtbf16_f_f_w_mask,299,21851
    riscv_vfnmacc,300,21934
    riscv_vfnmacc_mask,301,22003
    riscv_vfnmadd,302,22077
    riscv_vfnmadd_mask,303,22146
    riscv_vfnmsac,304,22220
    riscv_vfnmsac_mask,305,22289
    riscv_vfnmsub,306,22363
    riscv_vfnmsub_mask,307,22432
    riscv_vfrdiv,308,22506
    riscv_vfrdiv_mask,309,22574
    riscv_vfrec7,310,22647
    riscv_vfrec7_mask,311,22715
    riscv_vfredmax,312,22788
    riscv_vfredmax_mask,313,22858
    riscv_vfredmin,314,22933
    riscv_vfredmin_mask,315,23003
    riscv_vfredosum,316,23078
    riscv_vfredosum_mask,317,23149
    riscv_vfredusum,318,23225
    riscv_vfredusum_mask,319,23296
    riscv_vfrsqrt7,320,23372
    riscv_vfrsqrt7_mask,321,23442
    riscv_vfrsub,322,23517
    riscv_vfrsub_mask,323,23585
    riscv_vfsgnj,324,23658
    riscv_vfsgnj_mask,325,23726
    riscv_vfsgnjn,326,23799
    riscv_vfsgnjn_mask,327,23868
    riscv_vfsgnjx,328,23942
    riscv_vfsgnjx_mask,329,24011
    riscv_vfslide1down,330,24085
    riscv_vfslide1down_mask,331,24159
    riscv_vfslide1up,332,24238
    riscv_vfslide1up_mask,333,24310
    riscv_vfsqrt,334,24387
    riscv_vfsqrt_mask,335,24455
    riscv_vfsub,336,24528
    riscv_vfsub_mask,337,24595
    riscv_vfwadd,338,24667
    riscv_vfwadd_mask,339,24735
    riscv_vfwadd_w,340,24808
    riscv_vfwadd_w_mask,341,24878
    riscv_vfwcvt_f_f_v,342,24953
    riscv_vfwcvt_f_f_v_mask,343,25027
    riscv_vfwcvt_f_x_v,344,25106
    riscv_vfwcvt_f_x_v_mask,345,25180
    riscv_vfwcvt_f_xu_v,346,25259
    riscv_vfwcvt_f_xu_v_mask,347,25334
    riscv_vfwcvt_rtz_x_f_v,348,25414
    riscv_vfwcvt_rtz_x_f_v_mask,349,25492
    riscv_vfwcvt_rtz_xu_f_v,350,25575
    riscv_vfwcvt_rtz_xu_f_v_mask,351,25654
    riscv_vfwcvt_x_f_v,352,25738
    riscv_vfwcvt_x_f_v_mask,353,25812
    riscv_vfwcvt_xu_f_v,354,25891
    riscv_vfwcvt_xu_f_v_mask,355,25966
    riscv_vfwcvtbf16_f_f_v,356,26046
    riscv_vfwcvtbf16_f_f_v_mask,357,26124
    riscv_vfwmacc,358,26207
    riscv_vfwmacc_mask,359,26276
    riscv_vfwmaccbf16,360,26350
    riscv_vfwmaccbf16_mask,361,26423
    riscv_vfwmsac,362,26501
    riscv_vfwmsac_mask,363,26570
    riscv_vfwmul,364,26644
    riscv_vfwmul_mask,365,26712
    riscv_vfwnmacc,366,26785
    riscv_vfwnmacc_mask,367,26855
    riscv_vfwnmsac,368,26930
    riscv_vfwnmsac_mask,369,27000
    riscv_vfwredosum,370,27075
    riscv_vfwredosum_mask,371,27147
    riscv_vfwredusum,372,27224
    riscv_vfwredusum_mask,373,27296
    riscv_vfwsub,374,27373
    riscv_vfwsub_mask,375,27441
    riscv_vfwsub_w,376,27514
    riscv_vfwsub_w_mask,377,27584
    riscv_vghsh,378,27659
    riscv_vgmul_vv,379,27726
    riscv_vid,380,27796
    riscv_vid_mask,381,27861
    riscv_viota,382,27931
    riscv_viota_mask,383,27998
    riscv_vle,384,28070
    riscv_vle_mask,385,28135
    riscv_vleff,386,28205
    riscv_vleff_mask,387,28272
    riscv_vlm,388,28344
    riscv_vloxei,389,28409
    riscv_vloxei_mask,390,28477
    riscv_vloxseg2,391,28550
    riscv_vloxseg2_mask,392,28620
    riscv_vloxseg3,393,28695
    riscv_vloxseg3_mask,394,28765
    riscv_vloxseg4,395,28840
    riscv_vloxseg4_mask,396,28910
    riscv_vloxseg5,397,28985
    riscv_vloxseg5_mask,398,29055
    riscv_vloxseg6,399,29130
    riscv_vloxseg6_mask,400,29200
    riscv_vloxseg7,401,29275
    riscv_vloxseg7_mask,402,29345
    riscv_vloxseg8,403,29420
    riscv_vloxseg8_mask,404,29490
    riscv_vlse,405,29565
    riscv_vlse_mask,406,29631
    riscv_vlseg2,407,29702
    riscv_vlseg2_mask,408,29770
    riscv_vlseg2ff,409,29843
    riscv_vlseg2ff_mask,410,29913
    riscv_vlseg3,411,29988
    riscv_vlseg3_mask,412,30056
    riscv_vlseg3ff,413,30129
    riscv_vlseg3ff_mask,414,30199
    riscv_vlseg4,415,30274
    riscv_vlseg4_mask,416,30342
    riscv_vlseg4ff,417,30415
    riscv_vlseg4ff_mask,418,30485
    riscv_vlseg5,419,30560
    riscv_vlseg5_mask,420,30628
    riscv_vlseg5ff,421,30701
    riscv_vlseg5ff_mask,422,30771
    riscv_vlseg6,423,30846
    riscv_vlseg6_mask,424,30914
    riscv_vlseg6ff,425,30987
    riscv_vlseg6ff_mask,426,31057
    riscv_vlseg7,427,31132
    riscv_vlseg7_mask,428,31200
    riscv_vlseg7ff,429,31273
    riscv_vlseg7ff_mask,430,31343
    riscv_vlseg8,431,31418
    riscv_vlseg8_mask,432,31486
    riscv_vlseg8ff,433,31559
    riscv_vlseg8ff_mask,434,31629
    riscv_vlsseg2,435,31704
    riscv_vlsseg2_mask,436,31773
    riscv_vlsseg3,437,31847
    riscv_vlsseg3_mask,438,31916
    riscv_vlsseg4,439,31990
    riscv_vlsseg4_mask,440,32059
    riscv_vlsseg5,441,32133
    riscv_vlsseg5_mask,442,32202
    riscv_vlsseg6,443,32276
    riscv_vlsseg6_mask,444,32345
    riscv_vlsseg7,445,32419
    riscv_vlsseg7_mask,446,32488
    riscv_vlsseg8,447,32562
    riscv_vlsseg8_mask,448,32631
    riscv_vluxei,449,32705
    riscv_vluxei_mask,450,32773
    riscv_vluxseg2,451,32846
    riscv_vluxseg2_mask,452,32916
    riscv_vluxseg3,453,32991
    riscv_vluxseg3_mask,454,33061
    riscv_vluxseg4,455,33136
    riscv_vluxseg4_mask,456,33206
    riscv_vluxseg5,457,33281
    riscv_vluxseg5_mask,458,33351
    riscv_vluxseg6,459,33426
    riscv_vluxseg6_mask,460,33496
    riscv_vluxseg7,461,33571
    riscv_vluxseg7_mask,462,33641
    riscv_vluxseg8,463,33716
    riscv_vluxseg8_mask,464,33786
    riscv_vmacc,465,33861
    riscv_vmacc_mask,466,33928
    riscv_vmadc,467,34000
    riscv_vmadc_carry_in,468,34067
    riscv_vmadd,469,34143
    riscv_vmadd_mask,470,34210
    riscv_vmand,471,34282
    riscv_vmandn,472,34349
    riscv_vmax,473,34417
    riscv_vmax_mask,474,34483
    riscv_vmaxu,475,34554
    riscv_vmaxu_mask,476,34621
    riscv_vmclr,477,34693
    riscv_vmerge,478,34760
    riscv_vmfeq,479,34828
    riscv_vmfeq_mask,480,34895
    riscv_vmfge,481,34967
    riscv_vmfge_mask,482,35034
    riscv_vmfgt,483,35106
    riscv_vmfgt_mask,484,35173
    riscv_vmfle,485,35245
    riscv_vmfle_mask,486,35312
    riscv_vmflt,487,35384
    riscv_vmflt_mask,488,35451
    riscv_vmfne,489,35523
    riscv_vmfne_mask,490,35590
    riscv_vmin,491,35662
    riscv_vmin_mask,492,35728
    riscv_vminu,493,35799
    riscv_vminu_mask,494,35866
    riscv_vmnand,495,35938
    riscv_vmnor,496,36006
    riscv_vmor,497,36073
    riscv_vmorn,498,36139
    riscv_vmsbc,499,36206
    riscv_vmsbc_borrow_in,500,36273
    riscv_vmsbf,501,36350
    riscv_vmsbf_mask,502,36417
    riscv_vmseq,503,36489
    riscv_vmseq_mask,504,36556
    riscv_vmset,505,36628
    riscv_vmsge,506,36695
    riscv_vmsge_mask,507,36762
    riscv_vmsgeu,508,36834
    riscv_vmsgeu_mask,509,36902
    riscv_vmsgt,510,36975
    riscv_vmsgt_mask,511,37042
    riscv_vmsgtu,512,37114
    riscv_vmsgtu_mask,513,37182
    riscv_vmsif,514,37255
    riscv_vmsif_mask,515,37322
    riscv_vmsle,516,37394
    riscv_vmsle_mask,517,37461
    riscv_vmsleu,518,37533
    riscv_vmsleu_mask,519,37601
    riscv_vmslt,520,37674
    riscv_vmslt_mask,521,37741
    riscv_vmsltu,522,37813
    riscv_vmsltu_mask,523,37881
    riscv_vmsne,524,37954
    riscv_vmsne_mask,525,38021
    riscv_vmsof,526,38093
    riscv_vmsof_mask,527,38160
    riscv_vmul,528,38232
    riscv_vmul_mask,529,38298
    riscv_vmulh,530,38369
    riscv_vmulh_mask,531,38436
    riscv_vmulhsu,532,38508
    riscv_vmulhsu_mask,533,38577
    riscv_vmulhu,534,38651
    riscv_vmulhu_mask,535,38719
    riscv_vmv_s_x,536,38792
    riscv_vmv_v_v,537,38861
    riscv_vmv_v_x,538,38930
    riscv_vmv_x_s,539,38999
    riscv_vmxnor,540,39068
    riscv_vmxor,541,39136
    riscv_vnclip,542,39203
    riscv_vnclip_mask,543,39271
    riscv_vnclipu,544,39344
    riscv_vnclipu_mask,545,39413
    riscv_vnmsac,546,39487
    riscv_vnmsac_mask,547,39555
    riscv_vnmsub,548,39628
    riscv_vnmsub_mask,549,39696
    riscv_vnsra,550,39769
    riscv_vnsra_mask,551,39836
    riscv_vnsrl,552,39908
    riscv_vnsrl_mask,553,39975
    riscv_vor,554,40047
    riscv_vor_mask,555,40112
    riscv_vredand,556,40182
    riscv_vredand_mask,557,40251
    riscv_vredmax,558,40325
    riscv_vredmax_mask,559,40394
    riscv_vredmaxu,560,40468
    riscv_vredmaxu_mask,561,40538
    riscv_vredmin,562,40613
    riscv_vredmin_mask,563,40682
    riscv_vredminu,564,40756
    riscv_vredminu_mask,565,40826
    riscv_vredor,566,40901
    riscv_vredor_mask,567,40969
    riscv_vredsum,568,41042
    riscv_vredsum_mask,569,41111
    riscv_vredxor,570,41185
    riscv_vredxor_mask,571,41254
    riscv_vrem,572,41328
    riscv_vrem_mask,573,41394
    riscv_vremu,574,41465
    riscv_vremu_mask,575,41532
    riscv_vrev8,576,41604
    riscv_vrev8_mask,577,41671
    riscv_vrgather_vv,578,41743
    riscv_vrgather_vv_mask,579,41816
    riscv_vrgather_vx,580,41894
    riscv_vrgather_vx_mask,581,41967
    riscv_vrgatherei16_vv,582,42045
    riscv_vrgatherei16_vv_mask,583,42122
    riscv_vrol,584,42204
    riscv_vrol_mask,585,42270
    riscv_vror,586,42341
    riscv_vror_mask,587,42407
    riscv_vrsub,588,42478
    riscv_vrsub_mask,589,42545
    riscv_vsadd,590,42617
    riscv_vsadd_mask,591,42684
    riscv_vsaddu,592,42756
    riscv_vsaddu_mask,593,42824
    riscv_vsbc,594,42897
    riscv_vse,595,42963
    riscv_vse_mask,596,43028
    riscv_vsetvli,597,43098
    riscv_vsetvlimax,598,43167
    riscv_vsext,599,43239
    riscv_vsext_mask,600,43306
    riscv_vsha2ch,601,43378
    riscv_vsha2cl,602,43447
    riscv_vsha2ms,603,43516
    riscv_vslide1down,604,43585
    riscv_vslide1down_mask,605,43658
    riscv_vslide1up,606,43736
    riscv_vslide1up_mask,607,43807
    riscv_vslidedown,608,43883
    riscv_vslidedown_mask,609,43955
    riscv_vslideup,610,44032
    riscv_vslideup_mask,611,44102
    riscv_vsll,612,44177
    riscv_vsll_mask,613,44243
    riscv_vsm,614,44314
    riscv_vsm3c,615,44379
    riscv_vsm3me,616,44446
    riscv_vsm4k,617,44514
    riscv_vsm4r_vs,618,44581
    riscv_vsm4r_vv,619,44651
    riscv_vsmul,620,44721
    riscv_vsmul_mask,621,44788
    riscv_vsoxei,622,44860
    riscv_vsoxei_mask,623,44928
    riscv_vsoxseg2,624,45001
    riscv_vsoxseg2_mask,625,45071
    riscv_vsoxseg3,626,45146
    riscv_vsoxseg3_mask,627,45216
    riscv_vsoxseg4,628,45291
    riscv_vsoxseg4_mask,629,45361
    riscv_vsoxseg5,630,45436
    riscv_vsoxseg5_mask,631,45506
    riscv_vsoxseg6,632,45581
    riscv_vsoxseg6_mask,633,45651
    riscv_vsoxseg7,634,45726
    riscv_vsoxseg7_mask,635,45796
    riscv_vsoxseg8,636,45871
    riscv_vsoxseg8_mask,637,45941
    riscv_vsra,638,46016
    riscv_vsra_mask,639,46082
    riscv_vsrl,640,46153
    riscv_vsrl_mask,641,46219
    riscv_vsse,642,46290
    riscv_vsse_mask,643,46356
    riscv_vsseg2,644,46427
    riscv_vsseg2_mask,645,46495
    riscv_vsseg3,646,46568
    riscv_vsseg3_mask,647,46636
    riscv_vsseg4,648,46709
    riscv_vsseg4_mask,649,46777
    riscv_vsseg5,650,46850
    riscv_vsseg5_mask,651,46918
    riscv_vsseg6,652,46991
    riscv_vsseg6_mask,653,47059
    riscv_vsseg7,654,47132
    riscv_vsseg7_mask,655,47200
    riscv_vsseg8,656,47273
    riscv_vsseg8_mask,657,47341
    riscv_vssra,658,47414
    riscv_vssra_mask,659,47481
    riscv_vssrl,660,47553
    riscv_vssrl_mask,661,47620
    riscv_vssseg2,662,47692
    riscv_vssseg2_mask,663,47761
    riscv_vssseg3,664,47835
    riscv_vssseg3_mask,665,47904
    riscv_vssseg4,666,47978
    riscv_vssseg4_mask,667,48047
    riscv_vssseg5,668,48121
    riscv_vssseg5_mask,669,48190
    riscv_vssseg6,670,48264
    riscv_vssseg6_mask,671,48333
    riscv_vssseg7,672,48407
    riscv_vssseg7_mask,673,48476
    riscv_vssseg8,674,48550
    riscv_vssseg8_mask,675,48619
    riscv_vssub,676,48693
    riscv_vssub_mask,677,48760
    riscv_vssubu,678,48832
    riscv_vssubu_mask,679,48900
    riscv_vsub,680,48973
    riscv_vsub_mask,681,49039
    riscv_vsuxei,682,49110
    riscv_vsuxei_mask,683,49178
    riscv_vsuxseg2,684,49251
    riscv_vsuxseg2_mask,685,49321
    riscv_vsuxseg3,686,49396
    riscv_vsuxseg3_mask,687,49466
    riscv_vsuxseg4,688,49541
    riscv_vsuxseg4_mask,689,49611
    riscv_vsuxseg5,690,49686
    riscv_vsuxseg5_mask,691,49756
    riscv_vsuxseg6,692,49831
    riscv_vsuxseg6_mask,693,49901
    riscv_vsuxseg7,694,49976
    riscv_vsuxseg7_mask,695,50046
    riscv_vsuxseg8,696,50121
    riscv_vsuxseg8_mask,697,50191
    riscv_vwadd,698,50266
    riscv_vwadd_mask,699,50333
    riscv_vwadd_w,700,50405
    riscv_vwadd_w_mask,701,50474
    riscv_vwaddu,702,50548
    riscv_vwaddu_mask,703,50616
    riscv_vwaddu_w,704,50689
    riscv_vwaddu_w_mask,705,50759
    riscv_vwmacc,706,50834
    riscv_vwmacc_mask,707,50902
    riscv_vwmaccsu,708,50975
    riscv_vwmaccsu_mask,709,51045
    riscv_vwmaccu,710,51120
    riscv_vwmaccu_mask,711,51189
    riscv_vwmaccus,712,51263
    riscv_vwmaccus_mask,713,51333
    riscv_vwmul,714,51408
    riscv_vwmul_mask,715,51475
    riscv_vwmulsu,716,51547
    riscv_vwmulsu_mask,717,51616
    riscv_vwmulu,718,51690
    riscv_vwmulu_mask,719,51758
    riscv_vwredsum,720,51831
    riscv_vwredsum_mask,721,51901
    riscv_vwredsumu,722,51976
    riscv_vwredsumu_mask,723,52047
    riscv_vwsll,724,52123
    riscv_vwsll_mask,725,52190
    riscv_vwsub,726,52262
    riscv_vwsub_mask,727,52329
    riscv_vwsub_w,728,52401
    riscv_vwsub_w_mask,729,52470
    riscv_vwsubu,730,52544
    riscv_vwsubu_mask,731,52612
    riscv_vwsubu_w,732,52685
    riscv_vwsubu_w_mask,733,52755
    riscv_vxor,734,52830
    riscv_vxor_mask,735,52896
    riscv_vzext,736,52967
    riscv_vzext_mask,737,53034
    riscv_xperm4,738,53106
    riscv_xperm8,739,53174
    riscv_zip,740,53242

/usr/include/llvm/IR/IntrinsicsRISCV.td,4695
let TargetPrefix 26,1198
let TargetPrefix 80,3852
defvar NoScalarOperand 115,4973
defvar NoVLOperand 119,5093
class RISCVVIntrinsic 121,5121
  Intrinsic IntrinsicID 124,5265
  bits<4> ScalarOperand 125,5315
  bits<5> VLOperand 126,5358
let TargetPrefix 129,5396
  class RISCVUSMLoad147,6282
  class RISCVUSLoad156,6600
  class RISCVUSLoadFF168,7128
  class RISCVUSLoadMasked177,7489
  class RISCVUSLoadFFMasked192,8205
  class RISCVSLoad202,8678
  class RISCVSLoadMasked211,9054
  class RISCVILoad222,9557
  class RISCVILoadMasked231,9933
  class RISCVUSStore242,10414
  class RISCVUSStoreMasked251,10753
  class RISCVSStore262,11172
  class RISCVSStoreMasked271,11526
  class RISCVIStore280,11914
  class RISCVIStoreMasked289,12266
  class RISCVUnaryAAUnMasked298,12689
  class RISCVUnaryAAUnMaskedZvk<RISCVUnaryAAUnMaskedZvk306,13041
  class RISCVUnaryAAMasked323,13799
  class RISCVUnaryAAUnMaskedRoundingMode333,14263
  class RISCVUnaryAAMaskedRoundingMode341,14688
  class RISCVCompress350,15152
  class RISCVBinaryAAAUnMasked359,15564
  class RISCVRGatherVVUnMasked367,15934
  class RISCVRGatherVVMasked376,16364
  class RISCVRGatherEI16VVUnMasked385,16809
  class RISCVRGatherEI16VVMasked395,17281
  class RISCVGatherVXUnMasked407,17864
  class RISCVGatherVXMasked417,18311
  class RISCVBinaryAAXUnMasked<RISCVBinaryAAXUnMasked427,18811
  class RISCVBinaryAAXUnMaskedZvk<RISCVBinaryAAXUnMaskedZvk439,19365
  class RISCVBinaryAAXMasked451,20037
  class RISCVBinaryAAXUnMaskedRoundingMode462,20565
  class RISCVBinaryAAXMaskedRoundingMode472,21074
  class RISCVBinaryAAShiftUnMasked484,21733
  class RISCVBinaryAAShiftMasked494,22248
  class RISCVBinaryABXUnMasked504,22752
  class RISCVBinaryABXMasked514,23210
  class RISCVBinaryABXUnMaskedRoundingMode525,23748
  class RISCVBinaryABXMaskedRoundingMode535,24262
  class RISCVBinaryABShiftUnMasked547,24931
  class RISCVBinaryABShiftMasked557,25451
  class RISCVBinaryWithV0567,25937
  class RISCVBinaryMOutWithV0579,26446
  class RISCVBinaryMOut591,26942
  class RISCVCompareUnMasked601,27364
  class RISCVCompareMasked611,27805
  class RISCVClassifyUnMasked623,28323
  class RISCVClassifyMasked633,28737
  class RISCVSaturatingBinaryAAXUnMasked644,29288
  class RISCVSaturatingBinaryAAXUnMaskedRoundingMode655,29815
  class RISCVSaturatingBinaryAAXMasked666,30354
  class RISCVSaturatingBinaryAAXMaskedRoundingMode678,31007
  class RISCVSaturatingBinaryAAShiftUnMaskedRoundingMode691,31711
  class RISCVSaturatingBinaryAAShiftMaskedRoundingMode703,32367
  class RISCVSaturatingBinaryABShiftUnMaskedRoundingMode716,33103
  class RISCVSaturatingBinaryABShiftMaskedRoundingMode728,33776
  class RVVSlideUnMasked738,34314
  class RVVSlideMasked746,34697
  class RISCVTernaryAAXAUnMasked756,35216
  class RISCVTernaryAAXAMasked766,35705
  class RISCVTernaryAAXAUnMaskedRoundingMode777,36259
  class RISCVTernaryAAXAMaskedRoundingMode788,36824
  class RISCVTernaryWideUnMasked800,37453
  class RISCVTernaryWideMasked810,37957
  class RISCVTernaryWideUnMaskedRoundingMode821,38526
  class RISCVTernaryWideMaskedRoundingMode832,39107
  class RISCVReductionUnMasked845,39755
  class RISCVReductionMasked856,40278
  class RISCVReductionUnMaskedRoundingMode866,40770
  class RISCVReductionMaskedRoundingMode877,41338
  class RISCVMaskedUnarySOutUnMasked888,41847
  class RISCVMaskedUnarySOutMasked897,42193
  class RISCVUnaryABUnMasked905,42539
  class RISCVUnaryABMasked913,42907
  class RISCVUnaryUnMasked924,43388
  class RISCVMaskedUnaryMOutMasked933,43763
  class RISCVNullaryIntrinsic942,44079
  class RISCVID949,44308
  class RISCVConversionUnMasked957,44588
  class RISCVConversionMasked965,44928
  class RISCVConversionUnMaskedRoundingMode975,45371
  class RISCVConversionMaskedRoundingMode984,45788
  class RISCVUSSegLoad<RISCVUSSegLoad995,46272
  class RISCVUSSegLoadMasked<RISCVUSSegLoadMasked1006,46812
  class RISCVUSSegLoadFF<RISCVUSSegLoadFF1024,47707
  class RISCVUSSegLoadFFMasked<RISCVUSSegLoadFFMasked1037,48411
  class RISCVSSegLoad<RISCVSSegLoad1051,49065
  class RISCVSSegLoadMasked<RISCVSSegLoadMasked1061,49587
  class RISCVISegLoad<RISCVISegLoad1076,50315
  class RISCVISegLoadMasked<RISCVISegLoadMasked1086,50838
  class RISCVUSSegStore<RISCVUSSegStore1101,51562
  class RISCVUSSegStoreMasked<RISCVUSSegStoreMasked1112,52050
  class RISCVSSegStore<RISCVSSegStore1126,52642
  class RISCVSSegStoreMasked<RISCVSSegStoreMasked1137,53157
  class RISCVISegStore<RISCVISegStore1150,53741
  class RISCVISegStoreMasked<RISCVISegStoreMasked1161,54258
let TargetPrefix 1737,76234
let TargetPrefix 1841,80942

/usr/include/llvm/IR/IntrinsicsRISCVXCV.td,433
  def int_riscv_cv_bitmanip_extractu : ScalarCoreVBitManipGprGprIntrinsic;23,962
  def int_riscv_cv_bitmanip_bclr : ScalarCoreVBitManipGprGprIntrinsic;24,1037
  def int_riscv_cv_bitmanip_bset : ScalarCoreVBitManipGprGprIntrinsic;25,1108
    : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic28,1215
  def int_riscv_cv_bitmanip_clb : ScalarCoreVBitManipGprIntrinsic;31,1360
    : DefaultAttrsIntrinsic<DefaultAttrsIntrinsic34,1463

/usr/include/llvm/IR/IntrinsicsRISCVXsf.td,219
class VCIXSuffix<VCIXSuffix13,526
  list<string> suffix 14,559
let TargetPrefix 20,956
  class RISCVSFCustomVMACC131,7282
  class RISCVSFCustomVFNRCLIPUnMasked140,7647
  class RISCVSFCustomVFNRCLIPMasked149,8057

/usr/include/llvm/IR/IntrinsicsS390.h,5861
#define LLVM_IR_INTRINSIC_S390_ENUMS_H10,607
enum S390Intrinsics 14,686
    s390_efpc 16,749
    s390_etnd,17,822
    s390_lcbb,18,887
    s390_ntstg,19,952
    s390_ppa_txassist,20,1018
    s390_sfpc,21,1091
    s390_tabort,22,1156
    s390_tbegin,23,1223
    s390_tbegin_nofloat,24,1290
    s390_tbeginc,25,1365
    s390_tdc,26,1433
    s390_tend,27,1497
    s390_vaccb,28,1562
    s390_vacccq,29,1628
    s390_vaccf,30,1695
    s390_vaccg,31,1761
    s390_vacch,32,1827
    s390_vaccq,33,1893
    s390_vacq,34,1959
    s390_vaq,35,2024
    s390_vavgb,36,2088
    s390_vavgf,37,2154
    s390_vavgg,38,2220
    s390_vavgh,39,2286
    s390_vavglb,40,2352
    s390_vavglf,41,2419
    s390_vavglg,42,2486
    s390_vavglh,43,2553
    s390_vbperm,44,2620
    s390_vceqbs,45,2687
    s390_vceqfs,46,2754
    s390_vceqgs,47,2821
    s390_vceqhs,48,2888
    s390_vcfn,49,2955
    s390_vchbs,50,3020
    s390_vchfs,51,3086
    s390_vchgs,52,3152
    s390_vchhs,53,3218
    s390_vchlbs,54,3284
    s390_vchlfs,55,3351
    s390_vchlgs,56,3418
    s390_vchlhs,57,3485
    s390_vcksm,58,3552
    s390_vclfnhs,59,3618
    s390_vclfnls,60,3686
    s390_vcnf,61,3754
    s390_vcrnfs,62,3819
    s390_verimb,63,3886
    s390_verimf,64,3953
    s390_verimg,65,4020
    s390_verimh,66,4087
    s390_vfaeb,67,4154
    s390_vfaebs,68,4220
    s390_vfaef,69,4287
    s390_vfaefs,70,4353
    s390_vfaeh,71,4420
    s390_vfaehs,72,4486
    s390_vfaezb,73,4553
    s390_vfaezbs,74,4620
    s390_vfaezf,75,4688
    s390_vfaezfs,76,4755
    s390_vfaezh,77,4823
    s390_vfaezhs,78,4890
    s390_vfcedbs,79,4958
    s390_vfcesbs,80,5026
    s390_vfchdbs,81,5094
    s390_vfchedbs,82,5162
    s390_vfchesbs,83,5231
    s390_vfchsbs,84,5300
    s390_vfeeb,85,5368
    s390_vfeebs,86,5434
    s390_vfeef,87,5501
    s390_vfeefs,88,5567
    s390_vfeeh,89,5634
    s390_vfeehs,90,5700
    s390_vfeezb,91,5767
    s390_vfeezbs,92,5834
    s390_vfeezf,93,5902
    s390_vfeezfs,94,5969
    s390_vfeezh,95,6037
    s390_vfeezhs,96,6104
    s390_vfeneb,97,6172
    s390_vfenebs,98,6239
    s390_vfenef,99,6307
    s390_vfenefs,100,6374
    s390_vfeneh,101,6442
    s390_vfenehs,102,6509
    s390_vfenezb,103,6577
    s390_vfenezbs,104,6645
    s390_vfenezf,105,6714
    s390_vfenezfs,106,6782
    s390_vfenezh,107,6851
    s390_vfenezhs,108,6919
    s390_vfidb,109,6988
    s390_vfisb,110,7054
    s390_vfmaxdb,111,7120
    s390_vfmaxsb,112,7188
    s390_vfmindb,113,7256
    s390_vfminsb,114,7324
    s390_vftcidb,115,7392
    s390_vftcisb,116,7460
    s390_vgfmab,117,7528
    s390_vgfmaf,118,7595
    s390_vgfmag,119,7662
    s390_vgfmah,120,7729
    s390_vgfmb,121,7796
    s390_vgfmf,122,7862
    s390_vgfmg,123,7928
    s390_vgfmh,124,7994
    s390_vistrb,125,8060
    s390_vistrbs,126,8127
    s390_vistrf,127,8195
    s390_vistrfs,128,8262
    s390_vistrh,129,8330
    s390_vistrhs,130,8397
    s390_vlbb,131,8465
    s390_vll,132,8530
    s390_vlrl,133,8594
    s390_vmaeb,134,8659
    s390_vmaef,135,8725
    s390_vmaeh,136,8791
    s390_vmahb,137,8857
    s390_vmahf,138,8923
    s390_vmahh,139,8989
    s390_vmaleb,140,9055
    s390_vmalef,141,9122
    s390_vmaleh,142,9189
    s390_vmalhb,143,9256
    s390_vmalhf,144,9323
    s390_vmalhh,145,9390
    s390_vmalob,146,9457
    s390_vmalof,147,9524
    s390_vmaloh,148,9591
    s390_vmaob,149,9658
    s390_vmaof,150,9724
    s390_vmaoh,151,9790
    s390_vmeb,152,9856
    s390_vmef,153,9921
    s390_vmeh,154,9986
    s390_vmhb,155,10051
    s390_vmhf,156,10116
    s390_vmhh,157,10181
    s390_vmleb,158,10246
    s390_vmlef,159,10312
    s390_vmleh,160,10378
    s390_vmlhb,161,10444
    s390_vmlhf,162,10510
    s390_vmlhh,163,10576
    s390_vmlob,164,10642
    s390_vmlof,165,10708
    s390_vmloh,166,10774
    s390_vmob,167,10840
    s390_vmof,168,10905
    s390_vmoh,169,10970
    s390_vmslg,170,11035
    s390_vpdi,171,11101
    s390_vperm,172,11166
    s390_vpklsf,173,11232
    s390_vpklsfs,174,11299
    s390_vpklsg,175,11367
    s390_vpklsgs,176,11434
    s390_vpklsh,177,11502
    s390_vpklshs,178,11569
    s390_vpksf,179,11637
    s390_vpksfs,180,11703
    s390_vpksg,181,11770
    s390_vpksgs,182,11836
    s390_vpksh,183,11903
    s390_vpkshs,184,11969
    s390_vsbcbiq,185,12036
    s390_vsbiq,186,12104
    s390_vscbib,187,12170
    s390_vscbif,188,12237
    s390_vscbig,189,12304
    s390_vscbih,190,12371
    s390_vscbiq,191,12438
    s390_vsl,192,12505
    s390_vslb,193,12569
    s390_vsld,194,12634
    s390_vsldb,195,12699
    s390_vsq,196,12765
    s390_vsra,197,12829
    s390_vsrab,198,12894
    s390_vsrd,199,12960
    s390_vsrl,200,13025
    s390_vsrlb,201,13090
    s390_vstl,202,13156
    s390_vstrcb,203,13221
    s390_vstrcbs,204,13288
    s390_vstrcf,205,13356
    s390_vstrcfs,206,13423
    s390_vstrch,207,13491
    s390_vstrchs,208,13558
    s390_vstrczb,209,13626
    s390_vstrczbs,210,13694
    s390_vstrczf,211,13763
    s390_vstrczfs,212,13831
    s390_vstrczh,213,13900
    s390_vstrczhs,214,13968
    s390_vstrl,215,14037
    s390_vstrsb,216,14103
    s390_vstrsf,217,14170
    s390_vstrsh,218,14237
    s390_vstrszb,219,14304
    s390_vstrszf,220,14372
    s390_vstrszh,221,14440
    s390_vsumb,222,14508
    s390_vsumgf,223,14574
    s390_vsumgh,224,14641
    s390_vsumh,225,14708
    s390_vsumqf,226,14774
    s390_vsumqg,227,14841
    s390_vtm,228,14908
    s390_vuphb,229,14972
    s390_vuphf,230,15038
    s390_vuphh,231,15104
    s390_vuplb,232,15170
    s390_vuplf,233,15236
    s390_vuplhb,234,15302
    s390_vuplhf,235,15369
    s390_vuplhh,236,15436
    s390_vuplhw,237,15503
    s390_vupllb,238,15570
    s390_vupllf,239,15637
    s390_vupllh,240,15704

/usr/include/llvm/IR/IntrinsicsSPIRV.h,678
#define LLVM_IR_INTRINSIC_SPV_ENUMS_H10,606
enum SPVIntrinsics 14,684
    spv_alloca 16,746
    spv_assign_name,17,820
    spv_assign_ptr_type,18,891
    spv_assign_type,19,966
    spv_assume,20,1037
    spv_bitcast,21,1103
    spv_cmpxchg,22,1170
    spv_const_composite,23,1237
    spv_expect,24,1312
    spv_extractelt,25,1378
    spv_extractv,26,1448
    spv_gep,27,1516
    spv_init_global,28,1579
    spv_insertelt,29,1650
    spv_insertv,30,1719
    spv_load,31,1786
    spv_ptrcast,32,1850
    spv_store,33,1917
    spv_switch,34,1982
    spv_track_constant,35,2048
    spv_undef,36,2122
    spv_unreachable,37,2187
    spv_unref_global,38,2258

/usr/include/llvm/IR/IntrinsicsSPIRV.td,25
let TargetPrefix 13,516

/usr/include/llvm/IR/IntrinsicsSystemZ.td,192
    Intrinsic<Intrinsic15,629
  : SystemZUnaryConv<SystemZUnaryConv18,722
  : Intrinsic<Intrinsic21,819
let TargetPrefix 194,6977
let TargetPrefix 227,8313
let TargetPrefix 456,19380

/usr/include/llvm/IR/IntrinsicsVE.h,43869
#define LLVM_IR_INTRINSIC_VE_ENUMS_H10,605
enum VEIntrinsics 14,682
    ve_vl_andm_MMM 16,743
    ve_vl_andm_mmm,17,821
    ve_vl_eqvm_MMM,18,891
    ve_vl_eqvm_mmm,19,961
    ve_vl_extract_vm512l,20,1031
    ve_vl_extract_vm512u,21,1107
    ve_vl_fencec_s,22,1183
    ve_vl_fencei,23,1253
    ve_vl_fencem_s,24,1321
    ve_vl_fidcr_sss,25,1391
    ve_vl_insert_vm512l,26,1462
    ve_vl_insert_vm512u,27,1537
    ve_vl_lcr_sss,28,1612
    ve_vl_lsv_vvss,29,1681
    ve_vl_lvm_MMss,30,1751
    ve_vl_lvm_mmss,31,1821
    ve_vl_lvsd_svs,32,1891
    ve_vl_lvsl_svs,33,1961
    ve_vl_lvss_svs,34,2031
    ve_vl_lzvm_sml,35,2101
    ve_vl_negm_MM,36,2171
    ve_vl_negm_mm,37,2240
    ve_vl_nndm_MMM,38,2309
    ve_vl_nndm_mmm,39,2379
    ve_vl_orm_MMM,40,2449
    ve_vl_orm_mmm,41,2518
    ve_vl_pack_f32a,42,2587
    ve_vl_pack_f32p,43,2658
    ve_vl_pcvm_sml,44,2729
    ve_vl_pfchv_ssl,45,2799
    ve_vl_pfchvnc_ssl,46,2870
    ve_vl_pvadds_vsvMvl,47,2943
    ve_vl_pvadds_vsvl,48,3018
    ve_vl_pvadds_vsvvl,49,3091
    ve_vl_pvadds_vvvMvl,50,3165
    ve_vl_pvadds_vvvl,51,3240
    ve_vl_pvadds_vvvvl,52,3313
    ve_vl_pvaddu_vsvMvl,53,3387
    ve_vl_pvaddu_vsvl,54,3462
    ve_vl_pvaddu_vsvvl,55,3535
    ve_vl_pvaddu_vvvMvl,56,3609
    ve_vl_pvaddu_vvvl,57,3684
    ve_vl_pvaddu_vvvvl,58,3757
    ve_vl_pvand_vsvMvl,59,3831
    ve_vl_pvand_vsvl,60,3905
    ve_vl_pvand_vsvvl,61,3977
    ve_vl_pvand_vvvMvl,62,4050
    ve_vl_pvand_vvvl,63,4124
    ve_vl_pvand_vvvvl,64,4196
    ve_vl_pvbrd_vsMvl,65,4269
    ve_vl_pvbrd_vsl,66,4342
    ve_vl_pvbrd_vsvl,67,4413
    ve_vl_pvbrv_vvMvl,68,4485
    ve_vl_pvbrv_vvl,69,4558
    ve_vl_pvbrv_vvvl,70,4629
    ve_vl_pvbrvlo_vvl,71,4701
    ve_vl_pvbrvlo_vvmvl,72,4774
    ve_vl_pvbrvlo_vvvl,73,4849
    ve_vl_pvbrvup_vvl,74,4923
    ve_vl_pvbrvup_vvmvl,75,4996
    ve_vl_pvbrvup_vvvl,76,5071
    ve_vl_pvcmps_vsvMvl,77,5145
    ve_vl_pvcmps_vsvl,78,5220
    ve_vl_pvcmps_vsvvl,79,5293
    ve_vl_pvcmps_vvvMvl,80,5367
    ve_vl_pvcmps_vvvl,81,5442
    ve_vl_pvcmps_vvvvl,82,5515
    ve_vl_pvcmpu_vsvMvl,83,5589
    ve_vl_pvcmpu_vsvl,84,5664
    ve_vl_pvcmpu_vsvvl,85,5737
    ve_vl_pvcmpu_vvvMvl,86,5811
    ve_vl_pvcmpu_vvvl,87,5886
    ve_vl_pvcmpu_vvvvl,88,5959
    ve_vl_pvcvtsw_vvl,89,6033
    ve_vl_pvcvtsw_vvvl,90,6106
    ve_vl_pvcvtws_vvMvl,91,6180
    ve_vl_pvcvtws_vvl,92,6255
    ve_vl_pvcvtws_vvvl,93,6328
    ve_vl_pvcvtwsrz_vvMvl,94,6402
    ve_vl_pvcvtwsrz_vvl,95,6479
    ve_vl_pvcvtwsrz_vvvl,96,6554
    ve_vl_pveqv_vsvMvl,97,6630
    ve_vl_pveqv_vsvl,98,6704
    ve_vl_pveqv_vsvvl,99,6776
    ve_vl_pveqv_vvvMvl,100,6849
    ve_vl_pveqv_vvvl,101,6923
    ve_vl_pveqv_vvvvl,102,6995
    ve_vl_pvfadd_vsvMvl,103,7068
    ve_vl_pvfadd_vsvl,104,7143
    ve_vl_pvfadd_vsvvl,105,7216
    ve_vl_pvfadd_vvvMvl,106,7290
    ve_vl_pvfadd_vvvl,107,7365
    ve_vl_pvfadd_vvvvl,108,7438
    ve_vl_pvfcmp_vsvMvl,109,7512
    ve_vl_pvfcmp_vsvl,110,7587
    ve_vl_pvfcmp_vsvvl,111,7660
    ve_vl_pvfcmp_vvvMvl,112,7734
    ve_vl_pvfcmp_vvvl,113,7809
    ve_vl_pvfcmp_vvvvl,114,7882
    ve_vl_pvfmad_vsvvMvl,115,7956
    ve_vl_pvfmad_vsvvl,116,8032
    ve_vl_pvfmad_vsvvvl,117,8106
    ve_vl_pvfmad_vvsvMvl,118,8181
    ve_vl_pvfmad_vvsvl,119,8257
    ve_vl_pvfmad_vvsvvl,120,8331
    ve_vl_pvfmad_vvvvMvl,121,8406
    ve_vl_pvfmad_vvvvl,122,8482
    ve_vl_pvfmad_vvvvvl,123,8556
    ve_vl_pvfmax_vsvMvl,124,8631
    ve_vl_pvfmax_vsvl,125,8706
    ve_vl_pvfmax_vsvvl,126,8779
    ve_vl_pvfmax_vvvMvl,127,8853
    ve_vl_pvfmax_vvvl,128,8928
    ve_vl_pvfmax_vvvvl,129,9001
    ve_vl_pvfmin_vsvMvl,130,9075
    ve_vl_pvfmin_vsvl,131,9150
    ve_vl_pvfmin_vsvvl,132,9223
    ve_vl_pvfmin_vvvMvl,133,9297
    ve_vl_pvfmin_vvvl,134,9372
    ve_vl_pvfmin_vvvvl,135,9445
    ve_vl_pvfmkaf_Ml,136,9519
    ve_vl_pvfmkat_Ml,137,9591
    ve_vl_pvfmkseq_MvMl,138,9663
    ve_vl_pvfmkseq_Mvl,139,9738
    ve_vl_pvfmkseqnan_MvMl,140,9812
    ve_vl_pvfmkseqnan_Mvl,141,9890
    ve_vl_pvfmksge_MvMl,142,9967
    ve_vl_pvfmksge_Mvl,143,10042
    ve_vl_pvfmksgenan_MvMl,144,10116
    ve_vl_pvfmksgenan_Mvl,145,10194
    ve_vl_pvfmksgt_MvMl,146,10271
    ve_vl_pvfmksgt_Mvl,147,10346
    ve_vl_pvfmksgtnan_MvMl,148,10420
    ve_vl_pvfmksgtnan_Mvl,149,10498
    ve_vl_pvfmksle_MvMl,150,10575
    ve_vl_pvfmksle_Mvl,151,10650
    ve_vl_pvfmkslenan_MvMl,152,10724
    ve_vl_pvfmkslenan_Mvl,153,10802
    ve_vl_pvfmksloeq_mvl,154,10879
    ve_vl_pvfmksloeq_mvml,155,10955
    ve_vl_pvfmksloeqnan_mvl,156,11032
    ve_vl_pvfmksloeqnan_mvml,157,11111
    ve_vl_pvfmksloge_mvl,158,11191
    ve_vl_pvfmksloge_mvml,159,11267
    ve_vl_pvfmkslogenan_mvl,160,11344
    ve_vl_pvfmkslogenan_mvml,161,11423
    ve_vl_pvfmkslogt_mvl,162,11503
    ve_vl_pvfmkslogt_mvml,163,11579
    ve_vl_pvfmkslogtnan_mvl,164,11656
    ve_vl_pvfmkslogtnan_mvml,165,11735
    ve_vl_pvfmkslole_mvl,166,11815
    ve_vl_pvfmkslole_mvml,167,11891
    ve_vl_pvfmkslolenan_mvl,168,11968
    ve_vl_pvfmkslolenan_mvml,169,12047
    ve_vl_pvfmkslolt_mvl,170,12127
    ve_vl_pvfmkslolt_mvml,171,12203
    ve_vl_pvfmksloltnan_mvl,172,12280
    ve_vl_pvfmksloltnan_mvml,173,12359
    ve_vl_pvfmkslonan_mvl,174,12439
    ve_vl_pvfmkslonan_mvml,175,12516
    ve_vl_pvfmkslone_mvl,176,12594
    ve_vl_pvfmkslone_mvml,177,12670
    ve_vl_pvfmkslonenan_mvl,178,12747
    ve_vl_pvfmkslonenan_mvml,179,12826
    ve_vl_pvfmkslonum_mvl,180,12906
    ve_vl_pvfmkslonum_mvml,181,12983
    ve_vl_pvfmkslt_MvMl,182,13061
    ve_vl_pvfmkslt_Mvl,183,13136
    ve_vl_pvfmksltnan_MvMl,184,13210
    ve_vl_pvfmksltnan_Mvl,185,13288
    ve_vl_pvfmksnan_MvMl,186,13365
    ve_vl_pvfmksnan_Mvl,187,13441
    ve_vl_pvfmksne_MvMl,188,13516
    ve_vl_pvfmksne_Mvl,189,13591
    ve_vl_pvfmksnenan_MvMl,190,13665
    ve_vl_pvfmksnenan_Mvl,191,13743
    ve_vl_pvfmksnum_MvMl,192,13820
    ve_vl_pvfmksnum_Mvl,193,13896
    ve_vl_pvfmksupeq_mvl,194,13971
    ve_vl_pvfmksupeq_mvml,195,14047
    ve_vl_pvfmksupeqnan_mvl,196,14124
    ve_vl_pvfmksupeqnan_mvml,197,14203
    ve_vl_pvfmksupge_mvl,198,14283
    ve_vl_pvfmksupge_mvml,199,14359
    ve_vl_pvfmksupgenan_mvl,200,14436
    ve_vl_pvfmksupgenan_mvml,201,14515
    ve_vl_pvfmksupgt_mvl,202,14595
    ve_vl_pvfmksupgt_mvml,203,14671
    ve_vl_pvfmksupgtnan_mvl,204,14748
    ve_vl_pvfmksupgtnan_mvml,205,14827
    ve_vl_pvfmksuple_mvl,206,14907
    ve_vl_pvfmksuple_mvml,207,14983
    ve_vl_pvfmksuplenan_mvl,208,15060
    ve_vl_pvfmksuplenan_mvml,209,15139
    ve_vl_pvfmksuplt_mvl,210,15219
    ve_vl_pvfmksuplt_mvml,211,15295
    ve_vl_pvfmksupltnan_mvl,212,15372
    ve_vl_pvfmksupltnan_mvml,213,15451
    ve_vl_pvfmksupnan_mvl,214,15531
    ve_vl_pvfmksupnan_mvml,215,15608
    ve_vl_pvfmksupne_mvl,216,15686
    ve_vl_pvfmksupne_mvml,217,15762
    ve_vl_pvfmksupnenan_mvl,218,15839
    ve_vl_pvfmksupnenan_mvml,219,15918
    ve_vl_pvfmksupnum_mvl,220,15998
    ve_vl_pvfmksupnum_mvml,221,16075
    ve_vl_pvfmkweq_MvMl,222,16153
    ve_vl_pvfmkweq_Mvl,223,16228
    ve_vl_pvfmkweqnan_MvMl,224,16302
    ve_vl_pvfmkweqnan_Mvl,225,16380
    ve_vl_pvfmkwge_MvMl,226,16457
    ve_vl_pvfmkwge_Mvl,227,16532
    ve_vl_pvfmkwgenan_MvMl,228,16606
    ve_vl_pvfmkwgenan_Mvl,229,16684
    ve_vl_pvfmkwgt_MvMl,230,16761
    ve_vl_pvfmkwgt_Mvl,231,16836
    ve_vl_pvfmkwgtnan_MvMl,232,16910
    ve_vl_pvfmkwgtnan_Mvl,233,16988
    ve_vl_pvfmkwle_MvMl,234,17065
    ve_vl_pvfmkwle_Mvl,235,17140
    ve_vl_pvfmkwlenan_MvMl,236,17214
    ve_vl_pvfmkwlenan_Mvl,237,17292
    ve_vl_pvfmkwloeq_mvl,238,17369
    ve_vl_pvfmkwloeq_mvml,239,17445
    ve_vl_pvfmkwloeqnan_mvl,240,17522
    ve_vl_pvfmkwloeqnan_mvml,241,17601
    ve_vl_pvfmkwloge_mvl,242,17681
    ve_vl_pvfmkwloge_mvml,243,17757
    ve_vl_pvfmkwlogenan_mvl,244,17834
    ve_vl_pvfmkwlogenan_mvml,245,17913
    ve_vl_pvfmkwlogt_mvl,246,17993
    ve_vl_pvfmkwlogt_mvml,247,18069
    ve_vl_pvfmkwlogtnan_mvl,248,18146
    ve_vl_pvfmkwlogtnan_mvml,249,18225
    ve_vl_pvfmkwlole_mvl,250,18305
    ve_vl_pvfmkwlole_mvml,251,18381
    ve_vl_pvfmkwlolenan_mvl,252,18458
    ve_vl_pvfmkwlolenan_mvml,253,18537
    ve_vl_pvfmkwlolt_mvl,254,18617
    ve_vl_pvfmkwlolt_mvml,255,18693
    ve_vl_pvfmkwloltnan_mvl,256,18770
    ve_vl_pvfmkwloltnan_mvml,257,18849
    ve_vl_pvfmkwlonan_mvl,258,18929
    ve_vl_pvfmkwlonan_mvml,259,19006
    ve_vl_pvfmkwlone_mvl,260,19084
    ve_vl_pvfmkwlone_mvml,261,19160
    ve_vl_pvfmkwlonenan_mvl,262,19237
    ve_vl_pvfmkwlonenan_mvml,263,19316
    ve_vl_pvfmkwlonum_mvl,264,19396
    ve_vl_pvfmkwlonum_mvml,265,19473
    ve_vl_pvfmkwlt_MvMl,266,19551
    ve_vl_pvfmkwlt_Mvl,267,19626
    ve_vl_pvfmkwltnan_MvMl,268,19700
    ve_vl_pvfmkwltnan_Mvl,269,19778
    ve_vl_pvfmkwnan_MvMl,270,19855
    ve_vl_pvfmkwnan_Mvl,271,19931
    ve_vl_pvfmkwne_MvMl,272,20006
    ve_vl_pvfmkwne_Mvl,273,20081
    ve_vl_pvfmkwnenan_MvMl,274,20155
    ve_vl_pvfmkwnenan_Mvl,275,20233
    ve_vl_pvfmkwnum_MvMl,276,20310
    ve_vl_pvfmkwnum_Mvl,277,20386
    ve_vl_pvfmkwupeq_mvl,278,20461
    ve_vl_pvfmkwupeq_mvml,279,20537
    ve_vl_pvfmkwupeqnan_mvl,280,20614
    ve_vl_pvfmkwupeqnan_mvml,281,20693
    ve_vl_pvfmkwupge_mvl,282,20773
    ve_vl_pvfmkwupge_mvml,283,20849
    ve_vl_pvfmkwupgenan_mvl,284,20926
    ve_vl_pvfmkwupgenan_mvml,285,21005
    ve_vl_pvfmkwupgt_mvl,286,21085
    ve_vl_pvfmkwupgt_mvml,287,21161
    ve_vl_pvfmkwupgtnan_mvl,288,21238
    ve_vl_pvfmkwupgtnan_mvml,289,21317
    ve_vl_pvfmkwuple_mvl,290,21397
    ve_vl_pvfmkwuple_mvml,291,21473
    ve_vl_pvfmkwuplenan_mvl,292,21550
    ve_vl_pvfmkwuplenan_mvml,293,21629
    ve_vl_pvfmkwuplt_mvl,294,21709
    ve_vl_pvfmkwuplt_mvml,295,21785
    ve_vl_pvfmkwupltnan_mvl,296,21862
    ve_vl_pvfmkwupltnan_mvml,297,21941
    ve_vl_pvfmkwupnan_mvl,298,22021
    ve_vl_pvfmkwupnan_mvml,299,22098
    ve_vl_pvfmkwupne_mvl,300,22176
    ve_vl_pvfmkwupne_mvml,301,22252
    ve_vl_pvfmkwupnenan_mvl,302,22329
    ve_vl_pvfmkwupnenan_mvml,303,22408
    ve_vl_pvfmkwupnum_mvl,304,22488
    ve_vl_pvfmkwupnum_mvml,305,22565
    ve_vl_pvfmsb_vsvvMvl,306,22643
    ve_vl_pvfmsb_vsvvl,307,22719
    ve_vl_pvfmsb_vsvvvl,308,22793
    ve_vl_pvfmsb_vvsvMvl,309,22868
    ve_vl_pvfmsb_vvsvl,310,22944
    ve_vl_pvfmsb_vvsvvl,311,23018
    ve_vl_pvfmsb_vvvvMvl,312,23093
    ve_vl_pvfmsb_vvvvl,313,23169
    ve_vl_pvfmsb_vvvvvl,314,23243
    ve_vl_pvfmul_vsvMvl,315,23318
    ve_vl_pvfmul_vsvl,316,23393
    ve_vl_pvfmul_vsvvl,317,23466
    ve_vl_pvfmul_vvvMvl,318,23540
    ve_vl_pvfmul_vvvl,319,23615
    ve_vl_pvfmul_vvvvl,320,23688
    ve_vl_pvfnmad_vsvvMvl,321,23762
    ve_vl_pvfnmad_vsvvl,322,23839
    ve_vl_pvfnmad_vsvvvl,323,23914
    ve_vl_pvfnmad_vvsvMvl,324,23990
    ve_vl_pvfnmad_vvsvl,325,24067
    ve_vl_pvfnmad_vvsvvl,326,24142
    ve_vl_pvfnmad_vvvvMvl,327,24218
    ve_vl_pvfnmad_vvvvl,328,24295
    ve_vl_pvfnmad_vvvvvl,329,24370
    ve_vl_pvfnmsb_vsvvMvl,330,24446
    ve_vl_pvfnmsb_vsvvl,331,24523
    ve_vl_pvfnmsb_vsvvvl,332,24598
    ve_vl_pvfnmsb_vvsvMvl,333,24674
    ve_vl_pvfnmsb_vvsvl,334,24751
    ve_vl_pvfnmsb_vvsvvl,335,24826
    ve_vl_pvfnmsb_vvvvMvl,336,24902
    ve_vl_pvfnmsb_vvvvl,337,24979
    ve_vl_pvfnmsb_vvvvvl,338,25054
    ve_vl_pvfsub_vsvMvl,339,25130
    ve_vl_pvfsub_vsvl,340,25205
    ve_vl_pvfsub_vsvvl,341,25278
    ve_vl_pvfsub_vvvMvl,342,25352
    ve_vl_pvfsub_vvvl,343,25427
    ve_vl_pvfsub_vvvvl,344,25500
    ve_vl_pvldz_vvMvl,345,25574
    ve_vl_pvldz_vvl,346,25647
    ve_vl_pvldz_vvvl,347,25718
    ve_vl_pvldzlo_vvl,348,25790
    ve_vl_pvldzlo_vvmvl,349,25863
    ve_vl_pvldzlo_vvvl,350,25938
    ve_vl_pvldzup_vvl,351,26012
    ve_vl_pvldzup_vvmvl,352,26085
    ve_vl_pvldzup_vvvl,353,26160
    ve_vl_pvmaxs_vsvMvl,354,26234
    ve_vl_pvmaxs_vsvl,355,26309
    ve_vl_pvmaxs_vsvvl,356,26382
    ve_vl_pvmaxs_vvvMvl,357,26456
    ve_vl_pvmaxs_vvvl,358,26531
    ve_vl_pvmaxs_vvvvl,359,26604
    ve_vl_pvmins_vsvMvl,360,26678
    ve_vl_pvmins_vsvl,361,26753
    ve_vl_pvmins_vsvvl,362,26826
    ve_vl_pvmins_vvvMvl,363,26900
    ve_vl_pvmins_vvvl,364,26975
    ve_vl_pvmins_vvvvl,365,27048
    ve_vl_pvor_vsvMvl,366,27122
    ve_vl_pvor_vsvl,367,27195
    ve_vl_pvor_vsvvl,368,27266
    ve_vl_pvor_vvvMvl,369,27338
    ve_vl_pvor_vvvl,370,27411
    ve_vl_pvor_vvvvl,371,27482
    ve_vl_pvpcnt_vvMvl,372,27554
    ve_vl_pvpcnt_vvl,373,27628
    ve_vl_pvpcnt_vvvl,374,27700
    ve_vl_pvpcntlo_vvl,375,27773
    ve_vl_pvpcntlo_vvmvl,376,27847
    ve_vl_pvpcntlo_vvvl,377,27923
    ve_vl_pvpcntup_vvl,378,27998
    ve_vl_pvpcntup_vvmvl,379,28072
    ve_vl_pvpcntup_vvvl,380,28148
    ve_vl_pvrcp_vvl,381,28223
    ve_vl_pvrcp_vvvl,382,28294
    ve_vl_pvrsqrt_vvl,383,28366
    ve_vl_pvrsqrt_vvvl,384,28439
    ve_vl_pvrsqrtnex_vvl,385,28513
    ve_vl_pvrsqrtnex_vvvl,386,28589
    ve_vl_pvseq_vl,387,28666
    ve_vl_pvseq_vvl,388,28736
    ve_vl_pvseqlo_vl,389,28807
    ve_vl_pvseqlo_vvl,390,28879
    ve_vl_pvsequp_vl,391,28952
    ve_vl_pvsequp_vvl,392,29024
    ve_vl_pvsla_vvsMvl,393,29097
    ve_vl_pvsla_vvsl,394,29171
    ve_vl_pvsla_vvsvl,395,29243
    ve_vl_pvsla_vvvMvl,396,29316
    ve_vl_pvsla_vvvl,397,29390
    ve_vl_pvsla_vvvvl,398,29462
    ve_vl_pvsll_vvsMvl,399,29535
    ve_vl_pvsll_vvsl,400,29609
    ve_vl_pvsll_vvsvl,401,29681
    ve_vl_pvsll_vvvMvl,402,29754
    ve_vl_pvsll_vvvl,403,29828
    ve_vl_pvsll_vvvvl,404,29900
    ve_vl_pvsra_vvsMvl,405,29973
    ve_vl_pvsra_vvsl,406,30047
    ve_vl_pvsra_vvsvl,407,30119
    ve_vl_pvsra_vvvMvl,408,30192
    ve_vl_pvsra_vvvl,409,30266
    ve_vl_pvsra_vvvvl,410,30338
    ve_vl_pvsrl_vvsMvl,411,30411
    ve_vl_pvsrl_vvsl,412,30485
    ve_vl_pvsrl_vvsvl,413,30557
    ve_vl_pvsrl_vvvMvl,414,30630
    ve_vl_pvsrl_vvvl,415,30704
    ve_vl_pvsrl_vvvvl,416,30776
    ve_vl_pvsubs_vsvMvl,417,30849
    ve_vl_pvsubs_vsvl,418,30924
    ve_vl_pvsubs_vsvvl,419,30997
    ve_vl_pvsubs_vvvMvl,420,31071
    ve_vl_pvsubs_vvvl,421,31146
    ve_vl_pvsubs_vvvvl,422,31219
    ve_vl_pvsubu_vsvMvl,423,31293
    ve_vl_pvsubu_vsvl,424,31368
    ve_vl_pvsubu_vsvvl,425,31441
    ve_vl_pvsubu_vvvMvl,426,31515
    ve_vl_pvsubu_vvvl,427,31590
    ve_vl_pvsubu_vvvvl,428,31663
    ve_vl_pvxor_vsvMvl,429,31737
    ve_vl_pvxor_vsvl,430,31811
    ve_vl_pvxor_vsvvl,431,31883
    ve_vl_pvxor_vvvMvl,432,31956
    ve_vl_pvxor_vvvl,433,32030
    ve_vl_pvxor_vvvvl,434,32102
    ve_vl_scr_sss,435,32175
    ve_vl_svm_sMs,436,32244
    ve_vl_svm_sms,437,32313
    ve_vl_svob,438,32382
    ve_vl_tovm_sml,439,32448
    ve_vl_tscr_ssss,440,32518
    ve_vl_vaddsl_vsvl,441,32589
    ve_vl_vaddsl_vsvmvl,442,32662
    ve_vl_vaddsl_vsvvl,443,32737
    ve_vl_vaddsl_vvvl,444,32811
    ve_vl_vaddsl_vvvmvl,445,32884
    ve_vl_vaddsl_vvvvl,446,32959
    ve_vl_vaddswsx_vsvl,447,33033
    ve_vl_vaddswsx_vsvmvl,448,33108
    ve_vl_vaddswsx_vsvvl,449,33185
    ve_vl_vaddswsx_vvvl,450,33261
    ve_vl_vaddswsx_vvvmvl,451,33336
    ve_vl_vaddswsx_vvvvl,452,33413
    ve_vl_vaddswzx_vsvl,453,33489
    ve_vl_vaddswzx_vsvmvl,454,33564
    ve_vl_vaddswzx_vsvvl,455,33641
    ve_vl_vaddswzx_vvvl,456,33717
    ve_vl_vaddswzx_vvvmvl,457,33792
    ve_vl_vaddswzx_vvvvl,458,33869
    ve_vl_vaddul_vsvl,459,33945
    ve_vl_vaddul_vsvmvl,460,34018
    ve_vl_vaddul_vsvvl,461,34093
    ve_vl_vaddul_vvvl,462,34167
    ve_vl_vaddul_vvvmvl,463,34240
    ve_vl_vaddul_vvvvl,464,34315
    ve_vl_vadduw_vsvl,465,34389
    ve_vl_vadduw_vsvmvl,466,34462
    ve_vl_vadduw_vsvvl,467,34537
    ve_vl_vadduw_vvvl,468,34611
    ve_vl_vadduw_vvvmvl,469,34684
    ve_vl_vadduw_vvvvl,470,34759
    ve_vl_vand_vsvl,471,34833
    ve_vl_vand_vsvmvl,472,34904
    ve_vl_vand_vsvvl,473,34977
    ve_vl_vand_vvvl,474,35049
    ve_vl_vand_vvvmvl,475,35120
    ve_vl_vand_vvvvl,476,35193
    ve_vl_vbrdd_vsl,477,35265
    ve_vl_vbrdd_vsmvl,478,35336
    ve_vl_vbrdd_vsvl,479,35409
    ve_vl_vbrdl_vsl,480,35481
    ve_vl_vbrdl_vsmvl,481,35552
    ve_vl_vbrdl_vsvl,482,35625
    ve_vl_vbrds_vsl,483,35697
    ve_vl_vbrds_vsmvl,484,35768
    ve_vl_vbrds_vsvl,485,35841
    ve_vl_vbrdw_vsl,486,35913
    ve_vl_vbrdw_vsmvl,487,35984
    ve_vl_vbrdw_vsvl,488,36057
    ve_vl_vbrv_vvl,489,36129
    ve_vl_vbrv_vvmvl,490,36199
    ve_vl_vbrv_vvvl,491,36271
    ve_vl_vcmpsl_vsvl,492,36342
    ve_vl_vcmpsl_vsvmvl,493,36415
    ve_vl_vcmpsl_vsvvl,494,36490
    ve_vl_vcmpsl_vvvl,495,36564
    ve_vl_vcmpsl_vvvmvl,496,36637
    ve_vl_vcmpsl_vvvvl,497,36712
    ve_vl_vcmpswsx_vsvl,498,36786
    ve_vl_vcmpswsx_vsvmvl,499,36861
    ve_vl_vcmpswsx_vsvvl,500,36938
    ve_vl_vcmpswsx_vvvl,501,37014
    ve_vl_vcmpswsx_vvvmvl,502,37089
    ve_vl_vcmpswsx_vvvvl,503,37166
    ve_vl_vcmpswzx_vsvl,504,37242
    ve_vl_vcmpswzx_vsvmvl,505,37317
    ve_vl_vcmpswzx_vsvvl,506,37394
    ve_vl_vcmpswzx_vvvl,507,37470
    ve_vl_vcmpswzx_vvvmvl,508,37545
    ve_vl_vcmpswzx_vvvvl,509,37622
    ve_vl_vcmpul_vsvl,510,37698
    ve_vl_vcmpul_vsvmvl,511,37771
    ve_vl_vcmpul_vsvvl,512,37846
    ve_vl_vcmpul_vvvl,513,37920
    ve_vl_vcmpul_vvvmvl,514,37993
    ve_vl_vcmpul_vvvvl,515,38068
    ve_vl_vcmpuw_vsvl,516,38142
    ve_vl_vcmpuw_vsvmvl,517,38215
    ve_vl_vcmpuw_vsvvl,518,38290
    ve_vl_vcmpuw_vvvl,519,38364
    ve_vl_vcmpuw_vvvmvl,520,38437
    ve_vl_vcmpuw_vvvvl,521,38512
    ve_vl_vcp_vvmvl,522,38586
    ve_vl_vcvtdl_vvl,523,38657
    ve_vl_vcvtdl_vvvl,524,38729
    ve_vl_vcvtds_vvl,525,38802
    ve_vl_vcvtds_vvvl,526,38874
    ve_vl_vcvtdw_vvl,527,38947
    ve_vl_vcvtdw_vvvl,528,39019
    ve_vl_vcvtld_vvl,529,39092
    ve_vl_vcvtld_vvmvl,530,39164
    ve_vl_vcvtld_vvvl,531,39238
    ve_vl_vcvtldrz_vvl,532,39311
    ve_vl_vcvtldrz_vvmvl,533,39385
    ve_vl_vcvtldrz_vvvl,534,39461
    ve_vl_vcvtsd_vvl,535,39536
    ve_vl_vcvtsd_vvvl,536,39608
    ve_vl_vcvtsw_vvl,537,39681
    ve_vl_vcvtsw_vvvl,538,39753
    ve_vl_vcvtwdsx_vvl,539,39826
    ve_vl_vcvtwdsx_vvmvl,540,39900
    ve_vl_vcvtwdsx_vvvl,541,39976
    ve_vl_vcvtwdsxrz_vvl,542,40051
    ve_vl_vcvtwdsxrz_vvmvl,543,40127
    ve_vl_vcvtwdsxrz_vvvl,544,40205
    ve_vl_vcvtwdzx_vvl,545,40282
    ve_vl_vcvtwdzx_vvmvl,546,40356
    ve_vl_vcvtwdzx_vvvl,547,40432
    ve_vl_vcvtwdzxrz_vvl,548,40507
    ve_vl_vcvtwdzxrz_vvmvl,549,40583
    ve_vl_vcvtwdzxrz_vvvl,550,40661
    ve_vl_vcvtwssx_vvl,551,40738
    ve_vl_vcvtwssx_vvmvl,552,40812
    ve_vl_vcvtwssx_vvvl,553,40888
    ve_vl_vcvtwssxrz_vvl,554,40963
    ve_vl_vcvtwssxrz_vvmvl,555,41039
    ve_vl_vcvtwssxrz_vvvl,556,41117
    ve_vl_vcvtwszx_vvl,557,41194
    ve_vl_vcvtwszx_vvmvl,558,41268
    ve_vl_vcvtwszx_vvvl,559,41344
    ve_vl_vcvtwszxrz_vvl,560,41419
    ve_vl_vcvtwszxrz_vvmvl,561,41495
    ve_vl_vcvtwszxrz_vvvl,562,41573
    ve_vl_vdivsl_vsvl,563,41650
    ve_vl_vdivsl_vsvmvl,564,41723
    ve_vl_vdivsl_vsvvl,565,41798
    ve_vl_vdivsl_vvsl,566,41872
    ve_vl_vdivsl_vvsmvl,567,41945
    ve_vl_vdivsl_vvsvl,568,42020
    ve_vl_vdivsl_vvvl,569,42094
    ve_vl_vdivsl_vvvmvl,570,42167
    ve_vl_vdivsl_vvvvl,571,42242
    ve_vl_vdivswsx_vsvl,572,42316
    ve_vl_vdivswsx_vsvmvl,573,42391
    ve_vl_vdivswsx_vsvvl,574,42468
    ve_vl_vdivswsx_vvsl,575,42544
    ve_vl_vdivswsx_vvsmvl,576,42619
    ve_vl_vdivswsx_vvsvl,577,42696
    ve_vl_vdivswsx_vvvl,578,42772
    ve_vl_vdivswsx_vvvmvl,579,42847
    ve_vl_vdivswsx_vvvvl,580,42924
    ve_vl_vdivswzx_vsvl,581,43000
    ve_vl_vdivswzx_vsvmvl,582,43075
    ve_vl_vdivswzx_vsvvl,583,43152
    ve_vl_vdivswzx_vvsl,584,43228
    ve_vl_vdivswzx_vvsmvl,585,43303
    ve_vl_vdivswzx_vvsvl,586,43380
    ve_vl_vdivswzx_vvvl,587,43456
    ve_vl_vdivswzx_vvvmvl,588,43531
    ve_vl_vdivswzx_vvvvl,589,43608
    ve_vl_vdivul_vsvl,590,43684
    ve_vl_vdivul_vsvmvl,591,43757
    ve_vl_vdivul_vsvvl,592,43832
    ve_vl_vdivul_vvsl,593,43906
    ve_vl_vdivul_vvsmvl,594,43979
    ve_vl_vdivul_vvsvl,595,44054
    ve_vl_vdivul_vvvl,596,44128
    ve_vl_vdivul_vvvmvl,597,44201
    ve_vl_vdivul_vvvvl,598,44276
    ve_vl_vdivuw_vsvl,599,44350
    ve_vl_vdivuw_vsvmvl,600,44423
    ve_vl_vdivuw_vsvvl,601,44498
    ve_vl_vdivuw_vvsl,602,44572
    ve_vl_vdivuw_vvsmvl,603,44645
    ve_vl_vdivuw_vvsvl,604,44720
    ve_vl_vdivuw_vvvl,605,44794
    ve_vl_vdivuw_vvvmvl,606,44867
    ve_vl_vdivuw_vvvvl,607,44942
    ve_vl_veqv_vsvl,608,45016
    ve_vl_veqv_vsvmvl,609,45087
    ve_vl_veqv_vsvvl,610,45160
    ve_vl_veqv_vvvl,611,45232
    ve_vl_veqv_vvvmvl,612,45303
    ve_vl_veqv_vvvvl,613,45376
    ve_vl_vex_vvmvl,614,45448
    ve_vl_vfaddd_vsvl,615,45519
    ve_vl_vfaddd_vsvmvl,616,45592
    ve_vl_vfaddd_vsvvl,617,45667
    ve_vl_vfaddd_vvvl,618,45741
    ve_vl_vfaddd_vvvmvl,619,45814
    ve_vl_vfaddd_vvvvl,620,45889
    ve_vl_vfadds_vsvl,621,45963
    ve_vl_vfadds_vsvmvl,622,46036
    ve_vl_vfadds_vsvvl,623,46111
    ve_vl_vfadds_vvvl,624,46185
    ve_vl_vfadds_vvvmvl,625,46258
    ve_vl_vfadds_vvvvl,626,46333
    ve_vl_vfcmpd_vsvl,627,46407
    ve_vl_vfcmpd_vsvmvl,628,46480
    ve_vl_vfcmpd_vsvvl,629,46555
    ve_vl_vfcmpd_vvvl,630,46629
    ve_vl_vfcmpd_vvvmvl,631,46702
    ve_vl_vfcmpd_vvvvl,632,46777
    ve_vl_vfcmps_vsvl,633,46851
    ve_vl_vfcmps_vsvmvl,634,46924
    ve_vl_vfcmps_vsvvl,635,46999
    ve_vl_vfcmps_vvvl,636,47073
    ve_vl_vfcmps_vvvmvl,637,47146
    ve_vl_vfcmps_vvvvl,638,47221
    ve_vl_vfdivd_vsvl,639,47295
    ve_vl_vfdivd_vsvmvl,640,47368
    ve_vl_vfdivd_vsvvl,641,47443
    ve_vl_vfdivd_vvvl,642,47517
    ve_vl_vfdivd_vvvmvl,643,47590
    ve_vl_vfdivd_vvvvl,644,47665
    ve_vl_vfdivs_vsvl,645,47739
    ve_vl_vfdivs_vsvmvl,646,47812
    ve_vl_vfdivs_vsvvl,647,47887
    ve_vl_vfdivs_vvvl,648,47961
    ve_vl_vfdivs_vvvmvl,649,48034
    ve_vl_vfdivs_vvvvl,650,48109
    ve_vl_vfmadd_vsvvl,651,48183
    ve_vl_vfmadd_vsvvmvl,652,48257
    ve_vl_vfmadd_vsvvvl,653,48333
    ve_vl_vfmadd_vvsvl,654,48408
    ve_vl_vfmadd_vvsvmvl,655,48482
    ve_vl_vfmadd_vvsvvl,656,48558
    ve_vl_vfmadd_vvvvl,657,48633
    ve_vl_vfmadd_vvvvmvl,658,48707
    ve_vl_vfmadd_vvvvvl,659,48783
    ve_vl_vfmads_vsvvl,660,48858
    ve_vl_vfmads_vsvvmvl,661,48932
    ve_vl_vfmads_vsvvvl,662,49008
    ve_vl_vfmads_vvsvl,663,49083
    ve_vl_vfmads_vvsvmvl,664,49157
    ve_vl_vfmads_vvsvvl,665,49233
    ve_vl_vfmads_vvvvl,666,49308
    ve_vl_vfmads_vvvvmvl,667,49382
    ve_vl_vfmads_vvvvvl,668,49458
    ve_vl_vfmaxd_vsvl,669,49533
    ve_vl_vfmaxd_vsvmvl,670,49606
    ve_vl_vfmaxd_vsvvl,671,49681
    ve_vl_vfmaxd_vvvl,672,49755
    ve_vl_vfmaxd_vvvmvl,673,49828
    ve_vl_vfmaxd_vvvvl,674,49903
    ve_vl_vfmaxs_vsvl,675,49977
    ve_vl_vfmaxs_vsvmvl,676,50050
    ve_vl_vfmaxs_vsvvl,677,50125
    ve_vl_vfmaxs_vvvl,678,50199
    ve_vl_vfmaxs_vvvmvl,679,50272
    ve_vl_vfmaxs_vvvvl,680,50347
    ve_vl_vfmind_vsvl,681,50421
    ve_vl_vfmind_vsvmvl,682,50494
    ve_vl_vfmind_vsvvl,683,50569
    ve_vl_vfmind_vvvl,684,50643
    ve_vl_vfmind_vvvmvl,685,50716
    ve_vl_vfmind_vvvvl,686,50791
    ve_vl_vfmins_vsvl,687,50865
    ve_vl_vfmins_vsvmvl,688,50938
    ve_vl_vfmins_vsvvl,689,51013
    ve_vl_vfmins_vvvl,690,51087
    ve_vl_vfmins_vvvmvl,691,51160
    ve_vl_vfmins_vvvvl,692,51235
    ve_vl_vfmkdeq_mvl,693,51309
    ve_vl_vfmkdeq_mvml,694,51382
    ve_vl_vfmkdeqnan_mvl,695,51456
    ve_vl_vfmkdeqnan_mvml,696,51532
    ve_vl_vfmkdge_mvl,697,51609
    ve_vl_vfmkdge_mvml,698,51682
    ve_vl_vfmkdgenan_mvl,699,51756
    ve_vl_vfmkdgenan_mvml,700,51832
    ve_vl_vfmkdgt_mvl,701,51909
    ve_vl_vfmkdgt_mvml,702,51982
    ve_vl_vfmkdgtnan_mvl,703,52056
    ve_vl_vfmkdgtnan_mvml,704,52132
    ve_vl_vfmkdle_mvl,705,52209
    ve_vl_vfmkdle_mvml,706,52282
    ve_vl_vfmkdlenan_mvl,707,52356
    ve_vl_vfmkdlenan_mvml,708,52432
    ve_vl_vfmkdlt_mvl,709,52509
    ve_vl_vfmkdlt_mvml,710,52582
    ve_vl_vfmkdltnan_mvl,711,52656
    ve_vl_vfmkdltnan_mvml,712,52732
    ve_vl_vfmkdnan_mvl,713,52809
    ve_vl_vfmkdnan_mvml,714,52883
    ve_vl_vfmkdne_mvl,715,52958
    ve_vl_vfmkdne_mvml,716,53031
    ve_vl_vfmkdnenan_mvl,717,53105
    ve_vl_vfmkdnenan_mvml,718,53181
    ve_vl_vfmkdnum_mvl,719,53258
    ve_vl_vfmkdnum_mvml,720,53332
    ve_vl_vfmklaf_ml,721,53407
    ve_vl_vfmklat_ml,722,53479
    ve_vl_vfmkleq_mvl,723,53551
    ve_vl_vfmkleq_mvml,724,53624
    ve_vl_vfmkleqnan_mvl,725,53698
    ve_vl_vfmkleqnan_mvml,726,53774
    ve_vl_vfmklge_mvl,727,53851
    ve_vl_vfmklge_mvml,728,53924
    ve_vl_vfmklgenan_mvl,729,53998
    ve_vl_vfmklgenan_mvml,730,54074
    ve_vl_vfmklgt_mvl,731,54151
    ve_vl_vfmklgt_mvml,732,54224
    ve_vl_vfmklgtnan_mvl,733,54298
    ve_vl_vfmklgtnan_mvml,734,54374
    ve_vl_vfmklle_mvl,735,54451
    ve_vl_vfmklle_mvml,736,54524
    ve_vl_vfmkllenan_mvl,737,54598
    ve_vl_vfmkllenan_mvml,738,54674
    ve_vl_vfmkllt_mvl,739,54751
    ve_vl_vfmkllt_mvml,740,54824
    ve_vl_vfmklltnan_mvl,741,54898
    ve_vl_vfmklltnan_mvml,742,54974
    ve_vl_vfmklnan_mvl,743,55051
    ve_vl_vfmklnan_mvml,744,55125
    ve_vl_vfmklne_mvl,745,55200
    ve_vl_vfmklne_mvml,746,55273
    ve_vl_vfmklnenan_mvl,747,55347
    ve_vl_vfmklnenan_mvml,748,55423
    ve_vl_vfmklnum_mvl,749,55500
    ve_vl_vfmklnum_mvml,750,55574
    ve_vl_vfmkseq_mvl,751,55649
    ve_vl_vfmkseq_mvml,752,55722
    ve_vl_vfmkseqnan_mvl,753,55796
    ve_vl_vfmkseqnan_mvml,754,55872
    ve_vl_vfmksge_mvl,755,55949
    ve_vl_vfmksge_mvml,756,56022
    ve_vl_vfmksgenan_mvl,757,56096
    ve_vl_vfmksgenan_mvml,758,56172
    ve_vl_vfmksgt_mvl,759,56249
    ve_vl_vfmksgt_mvml,760,56322
    ve_vl_vfmksgtnan_mvl,761,56396
    ve_vl_vfmksgtnan_mvml,762,56472
    ve_vl_vfmksle_mvl,763,56549
    ve_vl_vfmksle_mvml,764,56622
    ve_vl_vfmkslenan_mvl,765,56696
    ve_vl_vfmkslenan_mvml,766,56772
    ve_vl_vfmkslt_mvl,767,56849
    ve_vl_vfmkslt_mvml,768,56922
    ve_vl_vfmksltnan_mvl,769,56996
    ve_vl_vfmksltnan_mvml,770,57072
    ve_vl_vfmksnan_mvl,771,57149
    ve_vl_vfmksnan_mvml,772,57223
    ve_vl_vfmksne_mvl,773,57298
    ve_vl_vfmksne_mvml,774,57371
    ve_vl_vfmksnenan_mvl,775,57445
    ve_vl_vfmksnenan_mvml,776,57521
    ve_vl_vfmksnum_mvl,777,57598
    ve_vl_vfmksnum_mvml,778,57672
    ve_vl_vfmkweq_mvl,779,57747
    ve_vl_vfmkweq_mvml,780,57820
    ve_vl_vfmkweqnan_mvl,781,57894
    ve_vl_vfmkweqnan_mvml,782,57970
    ve_vl_vfmkwge_mvl,783,58047
    ve_vl_vfmkwge_mvml,784,58120
    ve_vl_vfmkwgenan_mvl,785,58194
    ve_vl_vfmkwgenan_mvml,786,58270
    ve_vl_vfmkwgt_mvl,787,58347
    ve_vl_vfmkwgt_mvml,788,58420
    ve_vl_vfmkwgtnan_mvl,789,58494
    ve_vl_vfmkwgtnan_mvml,790,58570
    ve_vl_vfmkwle_mvl,791,58647
    ve_vl_vfmkwle_mvml,792,58720
    ve_vl_vfmkwlenan_mvl,793,58794
    ve_vl_vfmkwlenan_mvml,794,58870
    ve_vl_vfmkwlt_mvl,795,58947
    ve_vl_vfmkwlt_mvml,796,59020
    ve_vl_vfmkwltnan_mvl,797,59094
    ve_vl_vfmkwltnan_mvml,798,59170
    ve_vl_vfmkwnan_mvl,799,59247
    ve_vl_vfmkwnan_mvml,800,59321
    ve_vl_vfmkwne_mvl,801,59396
    ve_vl_vfmkwne_mvml,802,59469
    ve_vl_vfmkwnenan_mvl,803,59543
    ve_vl_vfmkwnenan_mvml,804,59619
    ve_vl_vfmkwnum_mvl,805,59696
    ve_vl_vfmkwnum_mvml,806,59770
    ve_vl_vfmsbd_vsvvl,807,59845
    ve_vl_vfmsbd_vsvvmvl,808,59919
    ve_vl_vfmsbd_vsvvvl,809,59995
    ve_vl_vfmsbd_vvsvl,810,60070
    ve_vl_vfmsbd_vvsvmvl,811,60144
    ve_vl_vfmsbd_vvsvvl,812,60220
    ve_vl_vfmsbd_vvvvl,813,60295
    ve_vl_vfmsbd_vvvvmvl,814,60369
    ve_vl_vfmsbd_vvvvvl,815,60445
    ve_vl_vfmsbs_vsvvl,816,60520
    ve_vl_vfmsbs_vsvvmvl,817,60594
    ve_vl_vfmsbs_vsvvvl,818,60670
    ve_vl_vfmsbs_vvsvl,819,60745
    ve_vl_vfmsbs_vvsvmvl,820,60819
    ve_vl_vfmsbs_vvsvvl,821,60895
    ve_vl_vfmsbs_vvvvl,822,60970
    ve_vl_vfmsbs_vvvvmvl,823,61044
    ve_vl_vfmsbs_vvvvvl,824,61120
    ve_vl_vfmuld_vsvl,825,61195
    ve_vl_vfmuld_vsvmvl,826,61268
    ve_vl_vfmuld_vsvvl,827,61343
    ve_vl_vfmuld_vvvl,828,61417
    ve_vl_vfmuld_vvvmvl,829,61490
    ve_vl_vfmuld_vvvvl,830,61565
    ve_vl_vfmuls_vsvl,831,61639
    ve_vl_vfmuls_vsvmvl,832,61712
    ve_vl_vfmuls_vsvvl,833,61787
    ve_vl_vfmuls_vvvl,834,61861
    ve_vl_vfmuls_vvvmvl,835,61934
    ve_vl_vfmuls_vvvvl,836,62009
    ve_vl_vfnmadd_vsvvl,837,62083
    ve_vl_vfnmadd_vsvvmvl,838,62158
    ve_vl_vfnmadd_vsvvvl,839,62235
    ve_vl_vfnmadd_vvsvl,840,62311
    ve_vl_vfnmadd_vvsvmvl,841,62386
    ve_vl_vfnmadd_vvsvvl,842,62463
    ve_vl_vfnmadd_vvvvl,843,62539
    ve_vl_vfnmadd_vvvvmvl,844,62614
    ve_vl_vfnmadd_vvvvvl,845,62691
    ve_vl_vfnmads_vsvvl,846,62767
    ve_vl_vfnmads_vsvvmvl,847,62842
    ve_vl_vfnmads_vsvvvl,848,62919
    ve_vl_vfnmads_vvsvl,849,62995
    ve_vl_vfnmads_vvsvmvl,850,63070
    ve_vl_vfnmads_vvsvvl,851,63147
    ve_vl_vfnmads_vvvvl,852,63223
    ve_vl_vfnmads_vvvvmvl,853,63298
    ve_vl_vfnmads_vvvvvl,854,63375
    ve_vl_vfnmsbd_vsvvl,855,63451
    ve_vl_vfnmsbd_vsvvmvl,856,63526
    ve_vl_vfnmsbd_vsvvvl,857,63603
    ve_vl_vfnmsbd_vvsvl,858,63679
    ve_vl_vfnmsbd_vvsvmvl,859,63754
    ve_vl_vfnmsbd_vvsvvl,860,63831
    ve_vl_vfnmsbd_vvvvl,861,63907
    ve_vl_vfnmsbd_vvvvmvl,862,63982
    ve_vl_vfnmsbd_vvvvvl,863,64059
    ve_vl_vfnmsbs_vsvvl,864,64135
    ve_vl_vfnmsbs_vsvvmvl,865,64210
    ve_vl_vfnmsbs_vsvvvl,866,64287
    ve_vl_vfnmsbs_vvsvl,867,64363
    ve_vl_vfnmsbs_vvsvmvl,868,64438
    ve_vl_vfnmsbs_vvsvvl,869,64515
    ve_vl_vfnmsbs_vvvvl,870,64591
    ve_vl_vfnmsbs_vvvvmvl,871,64666
    ve_vl_vfnmsbs_vvvvvl,872,64743
    ve_vl_vfrmaxdfst_vvl,873,64819
    ve_vl_vfrmaxdfst_vvvl,874,64895
    ve_vl_vfrmaxdlst_vvl,875,64972
    ve_vl_vfrmaxdlst_vvvl,876,65048
    ve_vl_vfrmaxsfst_vvl,877,65125
    ve_vl_vfrmaxsfst_vvvl,878,65201
    ve_vl_vfrmaxslst_vvl,879,65278
    ve_vl_vfrmaxslst_vvvl,880,65354
    ve_vl_vfrmindfst_vvl,881,65431
    ve_vl_vfrmindfst_vvvl,882,65507
    ve_vl_vfrmindlst_vvl,883,65584
    ve_vl_vfrmindlst_vvvl,884,65660
    ve_vl_vfrminsfst_vvl,885,65737
    ve_vl_vfrminsfst_vvvl,886,65813
    ve_vl_vfrminslst_vvl,887,65890
    ve_vl_vfrminslst_vvvl,888,65966
    ve_vl_vfsqrtd_vvl,889,66043
    ve_vl_vfsqrtd_vvvl,890,66116
    ve_vl_vfsqrts_vvl,891,66190
    ve_vl_vfsqrts_vvvl,892,66263
    ve_vl_vfsubd_vsvl,893,66337
    ve_vl_vfsubd_vsvmvl,894,66410
    ve_vl_vfsubd_vsvvl,895,66485
    ve_vl_vfsubd_vvvl,896,66559
    ve_vl_vfsubd_vvvmvl,897,66632
    ve_vl_vfsubd_vvvvl,898,66707
    ve_vl_vfsubs_vsvl,899,66781
    ve_vl_vfsubs_vsvmvl,900,66854
    ve_vl_vfsubs_vsvvl,901,66929
    ve_vl_vfsubs_vvvl,902,67003
    ve_vl_vfsubs_vvvmvl,903,67076
    ve_vl_vfsubs_vvvvl,904,67151
    ve_vl_vfsumd_vvl,905,67225
    ve_vl_vfsumd_vvml,906,67297
    ve_vl_vfsums_vvl,907,67370
    ve_vl_vfsums_vvml,908,67442
    ve_vl_vgt_vvssl,909,67515
    ve_vl_vgt_vvssml,910,67586
    ve_vl_vgt_vvssmvl,911,67658
    ve_vl_vgt_vvssvl,912,67731
    ve_vl_vgtlsx_vvssl,913,67803
    ve_vl_vgtlsx_vvssml,914,67877
    ve_vl_vgtlsx_vvssmvl,915,67952
    ve_vl_vgtlsx_vvssvl,916,68028
    ve_vl_vgtlsxnc_vvssl,917,68103
    ve_vl_vgtlsxnc_vvssml,918,68179
    ve_vl_vgtlsxnc_vvssmvl,919,68256
    ve_vl_vgtlsxnc_vvssvl,920,68334
    ve_vl_vgtlzx_vvssl,921,68411
    ve_vl_vgtlzx_vvssml,922,68485
    ve_vl_vgtlzx_vvssmvl,923,68560
    ve_vl_vgtlzx_vvssvl,924,68636
    ve_vl_vgtlzxnc_vvssl,925,68711
    ve_vl_vgtlzxnc_vvssml,926,68787
    ve_vl_vgtlzxnc_vvssmvl,927,68864
    ve_vl_vgtlzxnc_vvssvl,928,68942
    ve_vl_vgtnc_vvssl,929,69019
    ve_vl_vgtnc_vvssml,930,69092
    ve_vl_vgtnc_vvssmvl,931,69166
    ve_vl_vgtnc_vvssvl,932,69241
    ve_vl_vgtu_vvssl,933,69315
    ve_vl_vgtu_vvssml,934,69387
    ve_vl_vgtu_vvssmvl,935,69460
    ve_vl_vgtu_vvssvl,936,69534
    ve_vl_vgtunc_vvssl,937,69607
    ve_vl_vgtunc_vvssml,938,69681
    ve_vl_vgtunc_vvssmvl,939,69756
    ve_vl_vgtunc_vvssvl,940,69832
    ve_vl_vld_vssl,941,69907
    ve_vl_vld_vssvl,942,69977
    ve_vl_vld2d_vssl,943,70048
    ve_vl_vld2d_vssvl,944,70120
    ve_vl_vld2dnc_vssl,945,70193
    ve_vl_vld2dnc_vssvl,946,70267
    ve_vl_vldl2dsx_vssl,947,70342
    ve_vl_vldl2dsx_vssvl,948,70417
    ve_vl_vldl2dsxnc_vssl,949,70493
    ve_vl_vldl2dsxnc_vssvl,950,70570
    ve_vl_vldl2dzx_vssl,951,70648
    ve_vl_vldl2dzx_vssvl,952,70723
    ve_vl_vldl2dzxnc_vssl,953,70799
    ve_vl_vldl2dzxnc_vssvl,954,70876
    ve_vl_vldlsx_vssl,955,70954
    ve_vl_vldlsx_vssvl,956,71027
    ve_vl_vldlsxnc_vssl,957,71101
    ve_vl_vldlsxnc_vssvl,958,71176
    ve_vl_vldlzx_vssl,959,71252
    ve_vl_vldlzx_vssvl,960,71325
    ve_vl_vldlzxnc_vssl,961,71399
    ve_vl_vldlzxnc_vssvl,962,71474
    ve_vl_vldnc_vssl,963,71550
    ve_vl_vldnc_vssvl,964,71622
    ve_vl_vldu_vssl,965,71695
    ve_vl_vldu_vssvl,966,71766
    ve_vl_vldu2d_vssl,967,71838
    ve_vl_vldu2d_vssvl,968,71911
    ve_vl_vldu2dnc_vssl,969,71985
    ve_vl_vldu2dnc_vssvl,970,72060
    ve_vl_vldunc_vssl,971,72136
    ve_vl_vldunc_vssvl,972,72209
    ve_vl_vldz_vvl,973,72283
    ve_vl_vldz_vvmvl,974,72353
    ve_vl_vldz_vvvl,975,72425
    ve_vl_vmaxsl_vsvl,976,72496
    ve_vl_vmaxsl_vsvmvl,977,72569
    ve_vl_vmaxsl_vsvvl,978,72644
    ve_vl_vmaxsl_vvvl,979,72718
    ve_vl_vmaxsl_vvvmvl,980,72791
    ve_vl_vmaxsl_vvvvl,981,72866
    ve_vl_vmaxswsx_vsvl,982,72940
    ve_vl_vmaxswsx_vsvmvl,983,73015
    ve_vl_vmaxswsx_vsvvl,984,73092
    ve_vl_vmaxswsx_vvvl,985,73168
    ve_vl_vmaxswsx_vvvmvl,986,73243
    ve_vl_vmaxswsx_vvvvl,987,73320
    ve_vl_vmaxswzx_vsvl,988,73396
    ve_vl_vmaxswzx_vsvmvl,989,73471
    ve_vl_vmaxswzx_vsvvl,990,73548
    ve_vl_vmaxswzx_vvvl,991,73624
    ve_vl_vmaxswzx_vvvmvl,992,73699
    ve_vl_vmaxswzx_vvvvl,993,73776
    ve_vl_vminsl_vsvl,994,73852
    ve_vl_vminsl_vsvmvl,995,73925
    ve_vl_vminsl_vsvvl,996,74000
    ve_vl_vminsl_vvvl,997,74074
    ve_vl_vminsl_vvvmvl,998,74147
    ve_vl_vminsl_vvvvl,999,74222
    ve_vl_vminswsx_vsvl,1000,74296
    ve_vl_vminswsx_vsvmvl,1001,74371
    ve_vl_vminswsx_vsvvl,1002,74448
    ve_vl_vminswsx_vvvl,1003,74524
    ve_vl_vminswsx_vvvmvl,1004,74599
    ve_vl_vminswsx_vvvvl,1005,74676
    ve_vl_vminswzx_vsvl,1006,74752
    ve_vl_vminswzx_vsvmvl,1007,74827
    ve_vl_vminswzx_vsvvl,1008,74904
    ve_vl_vminswzx_vvvl,1009,74980
    ve_vl_vminswzx_vvvmvl,1010,75055
    ve_vl_vminswzx_vvvvl,1011,75132
    ve_vl_vmrg_vsvml,1012,75208
    ve_vl_vmrg_vsvmvl,1013,75280
    ve_vl_vmrg_vvvml,1014,75353
    ve_vl_vmrg_vvvmvl,1015,75425
    ve_vl_vmrgw_vsvMl,1016,75498
    ve_vl_vmrgw_vsvMvl,1017,75571
    ve_vl_vmrgw_vvvMl,1018,75645
    ve_vl_vmrgw_vvvMvl,1019,75718
    ve_vl_vmulsl_vsvl,1020,75792
    ve_vl_vmulsl_vsvmvl,1021,75865
    ve_vl_vmulsl_vsvvl,1022,75940
    ve_vl_vmulsl_vvvl,1023,76014
    ve_vl_vmulsl_vvvmvl,1024,76087
    ve_vl_vmulsl_vvvvl,1025,76162
    ve_vl_vmulslw_vsvl,1026,76236
    ve_vl_vmulslw_vsvvl,1027,76310
    ve_vl_vmulslw_vvvl,1028,76385
    ve_vl_vmulslw_vvvvl,1029,76459
    ve_vl_vmulswsx_vsvl,1030,76534
    ve_vl_vmulswsx_vsvmvl,1031,76609
    ve_vl_vmulswsx_vsvvl,1032,76686
    ve_vl_vmulswsx_vvvl,1033,76762
    ve_vl_vmulswsx_vvvmvl,1034,76837
    ve_vl_vmulswsx_vvvvl,1035,76914
    ve_vl_vmulswzx_vsvl,1036,76990
    ve_vl_vmulswzx_vsvmvl,1037,77065
    ve_vl_vmulswzx_vsvvl,1038,77142
    ve_vl_vmulswzx_vvvl,1039,77218
    ve_vl_vmulswzx_vvvmvl,1040,77293
    ve_vl_vmulswzx_vvvvl,1041,77370
    ve_vl_vmulul_vsvl,1042,77446
    ve_vl_vmulul_vsvmvl,1043,77519
    ve_vl_vmulul_vsvvl,1044,77594
    ve_vl_vmulul_vvvl,1045,77668
    ve_vl_vmulul_vvvmvl,1046,77741
    ve_vl_vmulul_vvvvl,1047,77816
    ve_vl_vmuluw_vsvl,1048,77890
    ve_vl_vmuluw_vsvmvl,1049,77963
    ve_vl_vmuluw_vsvvl,1050,78038
    ve_vl_vmuluw_vvvl,1051,78112
    ve_vl_vmuluw_vvvmvl,1052,78185
    ve_vl_vmuluw_vvvvl,1053,78260
    ve_vl_vmv_vsvl,1054,78334
    ve_vl_vmv_vsvmvl,1055,78404
    ve_vl_vmv_vsvvl,1056,78476
    ve_vl_vor_vsvl,1057,78547
    ve_vl_vor_vsvmvl,1058,78617
    ve_vl_vor_vsvvl,1059,78689
    ve_vl_vor_vvvl,1060,78760
    ve_vl_vor_vvvmvl,1061,78830
    ve_vl_vor_vvvvl,1062,78902
    ve_vl_vpcnt_vvl,1063,78973
    ve_vl_vpcnt_vvmvl,1064,79044
    ve_vl_vpcnt_vvvl,1065,79117
    ve_vl_vrand_vvl,1066,79189
    ve_vl_vrand_vvml,1067,79260
    ve_vl_vrcpd_vvl,1068,79332
    ve_vl_vrcpd_vvvl,1069,79403
    ve_vl_vrcps_vvl,1070,79475
    ve_vl_vrcps_vvvl,1071,79546
    ve_vl_vrmaxslfst_vvl,1072,79618
    ve_vl_vrmaxslfst_vvvl,1073,79694
    ve_vl_vrmaxsllst_vvl,1074,79771
    ve_vl_vrmaxsllst_vvvl,1075,79847
    ve_vl_vrmaxswfstsx_vvl,1076,79924
    ve_vl_vrmaxswfstsx_vvvl,1077,80002
    ve_vl_vrmaxswfstzx_vvl,1078,80081
    ve_vl_vrmaxswfstzx_vvvl,1079,80159
    ve_vl_vrmaxswlstsx_vvl,1080,80238
    ve_vl_vrmaxswlstsx_vvvl,1081,80316
    ve_vl_vrmaxswlstzx_vvl,1082,80395
    ve_vl_vrmaxswlstzx_vvvl,1083,80473
    ve_vl_vrminslfst_vvl,1084,80552
    ve_vl_vrminslfst_vvvl,1085,80628
    ve_vl_vrminsllst_vvl,1086,80705
    ve_vl_vrminsllst_vvvl,1087,80781
    ve_vl_vrminswfstsx_vvl,1088,80858
    ve_vl_vrminswfstsx_vvvl,1089,80936
    ve_vl_vrminswfstzx_vvl,1090,81015
    ve_vl_vrminswfstzx_vvvl,1091,81093
    ve_vl_vrminswlstsx_vvl,1092,81172
    ve_vl_vrminswlstsx_vvvl,1093,81250
    ve_vl_vrminswlstzx_vvl,1094,81329
    ve_vl_vrminswlstzx_vvvl,1095,81407
    ve_vl_vror_vvl,1096,81486
    ve_vl_vror_vvml,1097,81556
    ve_vl_vrsqrtd_vvl,1098,81627
    ve_vl_vrsqrtd_vvvl,1099,81700
    ve_vl_vrsqrtdnex_vvl,1100,81774
    ve_vl_vrsqrtdnex_vvvl,1101,81850
    ve_vl_vrsqrts_vvl,1102,81927
    ve_vl_vrsqrts_vvvl,1103,82000
    ve_vl_vrsqrtsnex_vvl,1104,82074
    ve_vl_vrsqrtsnex_vvvl,1105,82150
    ve_vl_vrxor_vvl,1106,82227
    ve_vl_vrxor_vvml,1107,82298
    ve_vl_vsc_vvssl,1108,82370
    ve_vl_vsc_vvssml,1109,82441
    ve_vl_vscl_vvssl,1110,82513
    ve_vl_vscl_vvssml,1111,82585
    ve_vl_vsclnc_vvssl,1112,82658
    ve_vl_vsclnc_vvssml,1113,82732
    ve_vl_vsclncot_vvssl,1114,82807
    ve_vl_vsclncot_vvssml,1115,82883
    ve_vl_vsclot_vvssl,1116,82960
    ve_vl_vsclot_vvssml,1117,83034
    ve_vl_vscnc_vvssl,1118,83109
    ve_vl_vscnc_vvssml,1119,83182
    ve_vl_vscncot_vvssl,1120,83256
    ve_vl_vscncot_vvssml,1121,83331
    ve_vl_vscot_vvssl,1122,83407
    ve_vl_vscot_vvssml,1123,83480
    ve_vl_vscu_vvssl,1124,83554
    ve_vl_vscu_vvssml,1125,83626
    ve_vl_vscunc_vvssl,1126,83699
    ve_vl_vscunc_vvssml,1127,83773
    ve_vl_vscuncot_vvssl,1128,83848
    ve_vl_vscuncot_vvssml,1129,83924
    ve_vl_vscuot_vvssl,1130,84001
    ve_vl_vscuot_vvssml,1131,84075
    ve_vl_vseq_vl,1132,84150
    ve_vl_vseq_vvl,1133,84219
    ve_vl_vsfa_vvssl,1134,84289
    ve_vl_vsfa_vvssmvl,1135,84361
    ve_vl_vsfa_vvssvl,1136,84435
    ve_vl_vshf_vvvsl,1137,84508
    ve_vl_vshf_vvvsvl,1138,84580
    ve_vl_vslal_vvsl,1139,84653
    ve_vl_vslal_vvsmvl,1140,84725
    ve_vl_vslal_vvsvl,1141,84799
    ve_vl_vslal_vvvl,1142,84872
    ve_vl_vslal_vvvmvl,1143,84944
    ve_vl_vslal_vvvvl,1144,85018
    ve_vl_vslawsx_vvsl,1145,85091
    ve_vl_vslawsx_vvsmvl,1146,85165
    ve_vl_vslawsx_vvsvl,1147,85241
    ve_vl_vslawsx_vvvl,1148,85316
    ve_vl_vslawsx_vvvmvl,1149,85390
    ve_vl_vslawsx_vvvvl,1150,85466
    ve_vl_vslawzx_vvsl,1151,85541
    ve_vl_vslawzx_vvsmvl,1152,85615
    ve_vl_vslawzx_vvsvl,1153,85691
    ve_vl_vslawzx_vvvl,1154,85766
    ve_vl_vslawzx_vvvmvl,1155,85840
    ve_vl_vslawzx_vvvvl,1156,85916
    ve_vl_vsll_vvsl,1157,85991
    ve_vl_vsll_vvsmvl,1158,86062
    ve_vl_vsll_vvsvl,1159,86135
    ve_vl_vsll_vvvl,1160,86207
    ve_vl_vsll_vvvmvl,1161,86278
    ve_vl_vsll_vvvvl,1162,86351
    ve_vl_vsral_vvsl,1163,86423
    ve_vl_vsral_vvsmvl,1164,86495
    ve_vl_vsral_vvsvl,1165,86569
    ve_vl_vsral_vvvl,1166,86642
    ve_vl_vsral_vvvmvl,1167,86714
    ve_vl_vsral_vvvvl,1168,86788
    ve_vl_vsrawsx_vvsl,1169,86861
    ve_vl_vsrawsx_vvsmvl,1170,86935
    ve_vl_vsrawsx_vvsvl,1171,87011
    ve_vl_vsrawsx_vvvl,1172,87086
    ve_vl_vsrawsx_vvvmvl,1173,87160
    ve_vl_vsrawsx_vvvvl,1174,87236
    ve_vl_vsrawzx_vvsl,1175,87311
    ve_vl_vsrawzx_vvsmvl,1176,87385
    ve_vl_vsrawzx_vvsvl,1177,87461
    ve_vl_vsrawzx_vvvl,1178,87536
    ve_vl_vsrawzx_vvvmvl,1179,87610
    ve_vl_vsrawzx_vvvvl,1180,87686
    ve_vl_vsrl_vvsl,1181,87761
    ve_vl_vsrl_vvsmvl,1182,87832
    ve_vl_vsrl_vvsvl,1183,87905
    ve_vl_vsrl_vvvl,1184,87977
    ve_vl_vsrl_vvvmvl,1185,88048
    ve_vl_vsrl_vvvvl,1186,88121
    ve_vl_vst_vssl,1187,88193
    ve_vl_vst_vssml,1188,88263
    ve_vl_vst2d_vssl,1189,88334
    ve_vl_vst2d_vssml,1190,88406
    ve_vl_vst2dnc_vssl,1191,88479
    ve_vl_vst2dnc_vssml,1192,88553
    ve_vl_vst2dncot_vssl,1193,88628
    ve_vl_vst2dncot_vssml,1194,88704
    ve_vl_vst2dot_vssl,1195,88781
    ve_vl_vst2dot_vssml,1196,88855
    ve_vl_vstl_vssl,1197,88930
    ve_vl_vstl_vssml,1198,89001
    ve_vl_vstl2d_vssl,1199,89073
    ve_vl_vstl2d_vssml,1200,89146
    ve_vl_vstl2dnc_vssl,1201,89220
    ve_vl_vstl2dnc_vssml,1202,89295
    ve_vl_vstl2dncot_vssl,1203,89371
    ve_vl_vstl2dncot_vssml,1204,89448
    ve_vl_vstl2dot_vssl,1205,89526
    ve_vl_vstl2dot_vssml,1206,89601
    ve_vl_vstlnc_vssl,1207,89677
    ve_vl_vstlnc_vssml,1208,89750
    ve_vl_vstlncot_vssl,1209,89824
    ve_vl_vstlncot_vssml,1210,89899
    ve_vl_vstlot_vssl,1211,89975
    ve_vl_vstlot_vssml,1212,90048
    ve_vl_vstnc_vssl,1213,90122
    ve_vl_vstnc_vssml,1214,90194
    ve_vl_vstncot_vssl,1215,90267
    ve_vl_vstncot_vssml,1216,90341
    ve_vl_vstot_vssl,1217,90416
    ve_vl_vstot_vssml,1218,90488
    ve_vl_vstu_vssl,1219,90561
    ve_vl_vstu_vssml,1220,90632
    ve_vl_vstu2d_vssl,1221,90704
    ve_vl_vstu2d_vssml,1222,90777
    ve_vl_vstu2dnc_vssl,1223,90851
    ve_vl_vstu2dnc_vssml,1224,90926
    ve_vl_vstu2dncot_vssl,1225,91002
    ve_vl_vstu2dncot_vssml,1226,91079
    ve_vl_vstu2dot_vssl,1227,91157
    ve_vl_vstu2dot_vssml,1228,91232
    ve_vl_vstunc_vssl,1229,91308
    ve_vl_vstunc_vssml,1230,91381
    ve_vl_vstuncot_vssl,1231,91455
    ve_vl_vstuncot_vssml,1232,91530
    ve_vl_vstuot_vssl,1233,91606
    ve_vl_vstuot_vssml,1234,91679
    ve_vl_vsubsl_vsvl,1235,91753
    ve_vl_vsubsl_vsvmvl,1236,91826
    ve_vl_vsubsl_vsvvl,1237,91901
    ve_vl_vsubsl_vvvl,1238,91975
    ve_vl_vsubsl_vvvmvl,1239,92048
    ve_vl_vsubsl_vvvvl,1240,92123
    ve_vl_vsubswsx_vsvl,1241,92197
    ve_vl_vsubswsx_vsvmvl,1242,92272
    ve_vl_vsubswsx_vsvvl,1243,92349
    ve_vl_vsubswsx_vvvl,1244,92425
    ve_vl_vsubswsx_vvvmvl,1245,92500
    ve_vl_vsubswsx_vvvvl,1246,92577
    ve_vl_vsubswzx_vsvl,1247,92653
    ve_vl_vsubswzx_vsvmvl,1248,92728
    ve_vl_vsubswzx_vsvvl,1249,92805
    ve_vl_vsubswzx_vvvl,1250,92881
    ve_vl_vsubswzx_vvvmvl,1251,92956
    ve_vl_vsubswzx_vvvvl,1252,93033
    ve_vl_vsubul_vsvl,1253,93109
    ve_vl_vsubul_vsvmvl,1254,93182
    ve_vl_vsubul_vsvvl,1255,93257
    ve_vl_vsubul_vvvl,1256,93331
    ve_vl_vsubul_vvvmvl,1257,93404
    ve_vl_vsubul_vvvvl,1258,93479
    ve_vl_vsubuw_vsvl,1259,93553
    ve_vl_vsubuw_vsvmvl,1260,93626
    ve_vl_vsubuw_vsvvl,1261,93701
    ve_vl_vsubuw_vvvl,1262,93775
    ve_vl_vsubuw_vvvmvl,1263,93848
    ve_vl_vsubuw_vvvvl,1264,93923
    ve_vl_vsuml_vvl,1265,93997
    ve_vl_vsuml_vvml,1266,94068
    ve_vl_vsumwsx_vvl,1267,94140
    ve_vl_vsumwsx_vvml,1268,94213
    ve_vl_vsumwzx_vvl,1269,94287
    ve_vl_vsumwzx_vvml,1270,94360
    ve_vl_vxor_vsvl,1271,94434
    ve_vl_vxor_vsvmvl,1272,94505
    ve_vl_vxor_vsvvl,1273,94578
    ve_vl_vxor_vvvl,1274,94650
    ve_vl_vxor_vvvmvl,1275,94721
    ve_vl_vxor_vvvvl,1276,94794
    ve_vl_xorm_MMM,1277,94866
    ve_vl_xorm_mmm,1278,94936

/usr/include/llvm/IR/IntrinsicsWebAssembly.h,2233
#define LLVM_IR_INTRINSIC_WASM_ENUMS_H10,607
enum WASMIntrinsics 14,686
    wasm_alltrue 16,749
    wasm_anytrue,17,825
    wasm_avgr_unsigned,18,893
    wasm_bitmask,19,967
    wasm_bitselect,20,1035
    wasm_catch,21,1105
    wasm_dot,22,1171
    wasm_extadd_pairwise_signed,23,1235
    wasm_extadd_pairwise_unsigned,24,1318
    wasm_get_ehselector,25,1403
    wasm_get_exception,26,1478
    wasm_landingpad_index,27,1552
    wasm_lsda,28,1629
    wasm_memory_atomic_notify,29,1694
    wasm_memory_atomic_wait32,30,1775
    wasm_memory_atomic_wait64,31,1856
    wasm_memory_grow,32,1937
    wasm_memory_size,33,2009
    wasm_narrow_signed,34,2081
    wasm_narrow_unsigned,35,2155
    wasm_pmax,36,2231
    wasm_pmin,37,2296
    wasm_q15mulr_sat_signed,38,2361
    wasm_ref_is_null_extern,39,2440
    wasm_ref_is_null_func,40,2519
    wasm_ref_null_extern,41,2596
    wasm_ref_null_func,42,2672
    wasm_relaxed_dot_bf16x8_add_f32,43,2746
    wasm_relaxed_dot_i8x16_i7x16_add_signed,44,2833
    wasm_relaxed_dot_i8x16_i7x16_signed,45,2928
    wasm_relaxed_laneselect,46,3019
    wasm_relaxed_madd,47,3098
    wasm_relaxed_max,48,3171
    wasm_relaxed_min,49,3243
    wasm_relaxed_nmadd,50,3315
    wasm_relaxed_q15mulr_signed,51,3389
    wasm_relaxed_swizzle,52,3472
    wasm_relaxed_trunc_signed,53,3548
    wasm_relaxed_trunc_signed_zero,54,3629
    wasm_relaxed_trunc_unsigned,55,3715
    wasm_relaxed_trunc_unsigned_zero,56,3798
    wasm_rethrow,57,3886
    wasm_shuffle,58,3954
    wasm_sub_sat_signed,59,4022
    wasm_sub_sat_unsigned,60,4097
    wasm_swizzle,61,4174
    wasm_table_copy,62,4242
    wasm_table_fill_externref,63,4313
    wasm_table_fill_funcref,64,4394
    wasm_table_get_externref,65,4473
    wasm_table_get_funcref,66,4553
    wasm_table_grow_externref,67,4631
    wasm_table_grow_funcref,68,4712
    wasm_table_set_externref,69,4791
    wasm_table_set_funcref,70,4871
    wasm_table_size,71,4949
    wasm_throw,72,5020
    wasm_tls_align,73,5086
    wasm_tls_base,74,5156
    wasm_tls_size,75,5225
    wasm_trunc_saturate_signed,76,5294
    wasm_trunc_saturate_unsigned,77,5376
    wasm_trunc_signed,78,5460
    wasm_trunc_unsigned,79,5533

/usr/include/llvm/IR/IntrinsicsX86.h,55977
#define LLVM_IR_INTRINSIC_X86_ENUMS_H10,606
enum X86Intrinsics 14,684
    x86_3dnow_pavgusb 16,746
    x86_3dnow_pf2id,17,827
    x86_3dnow_pfacc,18,898
    x86_3dnow_pfadd,19,969
    x86_3dnow_pfcmpeq,20,1040
    x86_3dnow_pfcmpge,21,1113
    x86_3dnow_pfcmpgt,22,1186
    x86_3dnow_pfmax,23,1259
    x86_3dnow_pfmin,24,1330
    x86_3dnow_pfmul,25,1401
    x86_3dnow_pfrcp,26,1472
    x86_3dnow_pfrcpit1,27,1543
    x86_3dnow_pfrcpit2,28,1617
    x86_3dnow_pfrsqit1,29,1691
    x86_3dnow_pfrsqrt,30,1765
    x86_3dnow_pfsub,31,1838
    x86_3dnow_pfsubr,32,1909
    x86_3dnow_pi2fd,33,1981
    x86_3dnow_pmulhrw,34,2052
    x86_3dnowa_pf2iw,35,2125
    x86_3dnowa_pfnacc,36,2197
    x86_3dnowa_pfpnacc,37,2270
    x86_3dnowa_pi2fw,38,2344
    x86_3dnowa_pswapd,39,2416
    x86_aadd32,40,2489
    x86_aadd64,41,2555
    x86_aand32,42,2621
    x86_aand64,43,2687
    x86_addcarry_32,44,2753
    x86_addcarry_64,45,2824
    x86_aesdec128kl,46,2895
    x86_aesdec256kl,47,2966
    x86_aesdecwide128kl,48,3037
    x86_aesdecwide256kl,49,3112
    x86_aesenc128kl,50,3187
    x86_aesenc256kl,51,3258
    x86_aesencwide128kl,52,3329
    x86_aesencwide256kl,53,3404
    x86_aesni_aesdec,54,3479
    x86_aesni_aesdec_256,55,3551
    x86_aesni_aesdec_512,56,3627
    x86_aesni_aesdeclast,57,3703
    x86_aesni_aesdeclast_256,58,3779
    x86_aesni_aesdeclast_512,59,3859
    x86_aesni_aesenc,60,3939
    x86_aesni_aesenc_256,61,4011
    x86_aesni_aesenc_512,62,4087
    x86_aesni_aesenclast,63,4163
    x86_aesni_aesenclast_256,64,4239
    x86_aesni_aesenclast_512,65,4319
    x86_aesni_aesimc,66,4399
    x86_aesni_aeskeygenassist,67,4471
    x86_aor32,68,4552
    x86_aor64,69,4617
    x86_atomic_add_cc,70,4682
    x86_atomic_and_cc,71,4755
    x86_atomic_btc,72,4828
    x86_atomic_btc_rm,73,4898
    x86_atomic_btr,74,4971
    x86_atomic_btr_rm,75,5041
    x86_atomic_bts,76,5114
    x86_atomic_bts_rm,77,5184
    x86_atomic_or_cc,78,5257
    x86_atomic_sub_cc,79,5329
    x86_atomic_xor_cc,80,5402
    x86_avx_addsub_pd_256,81,5475
    x86_avx_addsub_ps_256,82,5552
    x86_avx_blendv_pd_256,83,5629
    x86_avx_blendv_ps_256,84,5706
    x86_avx_cmp_pd_256,85,5783
    x86_avx_cmp_ps_256,86,5857
    x86_avx_cvt_pd2_ps_256,87,5931
    x86_avx_cvt_pd2dq_256,88,6009
    x86_avx_cvt_ps2dq_256,89,6086
    x86_avx_cvtt_pd2dq_256,90,6163
    x86_avx_cvtt_ps2dq_256,91,6241
    x86_avx_dp_ps_256,92,6319
    x86_avx_hadd_pd_256,93,6392
    x86_avx_hadd_ps_256,94,6467
    x86_avx_hsub_pd_256,95,6542
    x86_avx_hsub_ps_256,96,6617
    x86_avx_ldu_dq_256,97,6692
    x86_avx_maskload_pd,98,6766
    x86_avx_maskload_pd_256,99,6841
    x86_avx_maskload_ps,100,6920
    x86_avx_maskload_ps_256,101,6995
    x86_avx_maskstore_pd,102,7074
    x86_avx_maskstore_pd_256,103,7150
    x86_avx_maskstore_ps,104,7230
    x86_avx_maskstore_ps_256,105,7306
    x86_avx_max_pd_256,106,7386
    x86_avx_max_ps_256,107,7460
    x86_avx_min_pd_256,108,7534
    x86_avx_min_ps_256,109,7608
    x86_avx_movmsk_pd_256,110,7682
    x86_avx_movmsk_ps_256,111,7759
    x86_avx_ptestc_256,112,7836
    x86_avx_ptestnzc_256,113,7910
    x86_avx_ptestz_256,114,7986
    x86_avx_rcp_ps_256,115,8060
    x86_avx_round_pd_256,116,8134
    x86_avx_round_ps_256,117,8210
    x86_avx_rsqrt_ps_256,118,8286
    x86_avx_vpermilvar_pd,119,8362
    x86_avx_vpermilvar_pd_256,120,8439
    x86_avx_vpermilvar_ps,121,8520
    x86_avx_vpermilvar_ps_256,122,8597
    x86_avx_vtestc_pd,123,8678
    x86_avx_vtestc_pd_256,124,8751
    x86_avx_vtestc_ps,125,8828
    x86_avx_vtestc_ps_256,126,8901
    x86_avx_vtestnzc_pd,127,8978
    x86_avx_vtestnzc_pd_256,128,9053
    x86_avx_vtestnzc_ps,129,9132
    x86_avx_vtestnzc_ps_256,130,9207
    x86_avx_vtestz_pd,131,9286
    x86_avx_vtestz_pd_256,132,9359
    x86_avx_vtestz_ps,133,9436
    x86_avx_vtestz_ps_256,134,9509
    x86_avx_vzeroall,135,9586
    x86_avx_vzeroupper,136,9658
    x86_avx2_gather_d_d,137,9732
    x86_avx2_gather_d_d_256,138,9807
    x86_avx2_gather_d_pd,139,9886
    x86_avx2_gather_d_pd_256,140,9962
    x86_avx2_gather_d_ps,141,10042
    x86_avx2_gather_d_ps_256,142,10118
    x86_avx2_gather_d_q,143,10198
    x86_avx2_gather_d_q_256,144,10273
    x86_avx2_gather_q_d,145,10352
    x86_avx2_gather_q_d_256,146,10427
    x86_avx2_gather_q_pd,147,10506
    x86_avx2_gather_q_pd_256,148,10582
    x86_avx2_gather_q_ps,149,10662
    x86_avx2_gather_q_ps_256,150,10738
    x86_avx2_gather_q_q,151,10818
    x86_avx2_gather_q_q_256,152,10893
    x86_avx2_maskload_d,153,10972
    x86_avx2_maskload_d_256,154,11047
    x86_avx2_maskload_q,155,11126
    x86_avx2_maskload_q_256,156,11201
    x86_avx2_maskstore_d,157,11280
    x86_avx2_maskstore_d_256,158,11356
    x86_avx2_maskstore_q,159,11436
    x86_avx2_maskstore_q_256,160,11512
    x86_avx2_mpsadbw,161,11592
    x86_avx2_packssdw,162,11664
    x86_avx2_packsswb,163,11737
    x86_avx2_packusdw,164,11810
    x86_avx2_packuswb,165,11883
    x86_avx2_pavg_b,166,11956
    x86_avx2_pavg_w,167,12027
    x86_avx2_pblendvb,168,12098
    x86_avx2_permd,169,12171
    x86_avx2_permps,170,12241
    x86_avx2_phadd_d,171,12312
    x86_avx2_phadd_sw,172,12384
    x86_avx2_phadd_w,173,12457
    x86_avx2_phsub_d,174,12529
    x86_avx2_phsub_sw,175,12601
    x86_avx2_phsub_w,176,12674
    x86_avx2_pmadd_ub_sw,177,12746
    x86_avx2_pmadd_wd,178,12822
    x86_avx2_pmovmskb,179,12895
    x86_avx2_pmul_hr_sw,180,12968
    x86_avx2_pmulh_w,181,13043
    x86_avx2_pmulhu_w,182,13115
    x86_avx2_psad_bw,183,13188
    x86_avx2_pshuf_b,184,13260
    x86_avx2_psign_b,185,13332
    x86_avx2_psign_d,186,13404
    x86_avx2_psign_w,187,13476
    x86_avx2_psll_d,188,13548
    x86_avx2_psll_q,189,13619
    x86_avx2_psll_w,190,13690
    x86_avx2_pslli_d,191,13761
    x86_avx2_pslli_q,192,13833
    x86_avx2_pslli_w,193,13905
    x86_avx2_psllv_d,194,13977
    x86_avx2_psllv_d_256,195,14049
    x86_avx2_psllv_q,196,14125
    x86_avx2_psllv_q_256,197,14197
    x86_avx2_psra_d,198,14273
    x86_avx2_psra_w,199,14344
    x86_avx2_psrai_d,200,14415
    x86_avx2_psrai_w,201,14487
    x86_avx2_psrav_d,202,14559
    x86_avx2_psrav_d_256,203,14631
    x86_avx2_psrl_d,204,14707
    x86_avx2_psrl_q,205,14778
    x86_avx2_psrl_w,206,14849
    x86_avx2_psrli_d,207,14920
    x86_avx2_psrli_q,208,14992
    x86_avx2_psrli_w,209,15064
    x86_avx2_psrlv_d,210,15136
    x86_avx2_psrlv_d_256,211,15208
    x86_avx2_psrlv_q,212,15284
    x86_avx2_psrlv_q_256,213,15356
    x86_avx2_vpdpbssd_128,214,15432
    x86_avx2_vpdpbssd_256,215,15509
    x86_avx2_vpdpbssds_128,216,15586
    x86_avx2_vpdpbssds_256,217,15664
    x86_avx2_vpdpbsud_128,218,15742
    x86_avx2_vpdpbsud_256,219,15819
    x86_avx2_vpdpbsuds_128,220,15896
    x86_avx2_vpdpbsuds_256,221,15974
    x86_avx2_vpdpbuud_128,222,16052
    x86_avx2_vpdpbuud_256,223,16129
    x86_avx2_vpdpbuuds_128,224,16206
    x86_avx2_vpdpbuuds_256,225,16284
    x86_avx2_vpdpwsud_128,226,16362
    x86_avx2_vpdpwsud_256,227,16439
    x86_avx2_vpdpwsuds_128,228,16516
    x86_avx2_vpdpwsuds_256,229,16594
    x86_avx2_vpdpwusd_128,230,16672
    x86_avx2_vpdpwusd_256,231,16749
    x86_avx2_vpdpwusds_128,232,16826
    x86_avx2_vpdpwusds_256,233,16904
    x86_avx2_vpdpwuud_128,234,16982
    x86_avx2_vpdpwuud_256,235,17059
    x86_avx2_vpdpwuuds_128,236,17136
    x86_avx2_vpdpwuuds_256,237,17214
    x86_avx512_add_pd_512,238,17292
    x86_avx512_add_ps_512,239,17369
    x86_avx512_broadcastmb_128,240,17446
    x86_avx512_broadcastmb_256,241,17528
    x86_avx512_broadcastmb_512,242,17610
    x86_avx512_broadcastmw_128,243,17692
    x86_avx512_broadcastmw_256,244,17774
    x86_avx512_broadcastmw_512,245,17856
    x86_avx512_conflict_d_128,246,17938
    x86_avx512_conflict_d_256,247,18019
    x86_avx512_conflict_d_512,248,18100
    x86_avx512_conflict_q_128,249,18181
    x86_avx512_conflict_q_256,250,18262
    x86_avx512_conflict_q_512,251,18343
    x86_avx512_cvtsi2sd64,252,18424
    x86_avx512_cvtsi2ss32,253,18501
    x86_avx512_cvtsi2ss64,254,18578
    x86_avx512_cvttsd2si,255,18655
    x86_avx512_cvttsd2si64,256,18731
    x86_avx512_cvttsd2usi,257,18809
    x86_avx512_cvttsd2usi64,258,18886
    x86_avx512_cvttss2si,259,18965
    x86_avx512_cvttss2si64,260,19041
    x86_avx512_cvttss2usi,261,19119
    x86_avx512_cvttss2usi64,262,19196
    x86_avx512_cvtusi2ss,263,19275
    x86_avx512_cvtusi642sd,264,19351
    x86_avx512_cvtusi642ss,265,19429
    x86_avx512_dbpsadbw_128,266,19507
    x86_avx512_dbpsadbw_256,267,19586
    x86_avx512_dbpsadbw_512,268,19665
    x86_avx512_div_pd_512,269,19744
    x86_avx512_div_ps_512,270,19821
    x86_avx512_exp2_pd,271,19898
    x86_avx512_exp2_ps,272,19972
    x86_avx512_fpclass_pd_128,273,20046
    x86_avx512_fpclass_pd_256,274,20127
    x86_avx512_fpclass_pd_512,275,20208
    x86_avx512_fpclass_ps_128,276,20289
    x86_avx512_fpclass_ps_256,277,20370
    x86_avx512_fpclass_ps_512,278,20451
    x86_avx512_gather_dpd_512,279,20532
    x86_avx512_gather_dpi_512,280,20613
    x86_avx512_gather_dpq_512,281,20694
    x86_avx512_gather_dps_512,282,20775
    x86_avx512_gather_qpd_512,283,20856
    x86_avx512_gather_qpi_512,284,20937
    x86_avx512_gather_qpq_512,285,21018
    x86_avx512_gather_qps_512,286,21099
    x86_avx512_gather3div2_df,287,21180
    x86_avx512_gather3div2_di,288,21261
    x86_avx512_gather3div4_df,289,21342
    x86_avx512_gather3div4_di,290,21423
    x86_avx512_gather3div4_sf,291,21504
    x86_avx512_gather3div4_si,292,21585
    x86_avx512_gather3div8_sf,293,21666
    x86_avx512_gather3div8_si,294,21747
    x86_avx512_gather3siv2_df,295,21828
    x86_avx512_gather3siv2_di,296,21909
    x86_avx512_gather3siv4_df,297,21990
    x86_avx512_gather3siv4_di,298,22071
    x86_avx512_gather3siv4_sf,299,22152
    x86_avx512_gather3siv4_si,300,22233
    x86_avx512_gather3siv8_sf,301,22314
    x86_avx512_gather3siv8_si,302,22395
    x86_avx512_gatherpf_dpd_512,303,22476
    x86_avx512_gatherpf_dps_512,304,22559
    x86_avx512_gatherpf_qpd_512,305,22642
    x86_avx512_gatherpf_qps_512,306,22725
    x86_avx512_kadd_b,307,22808
    x86_avx512_kadd_d,308,22881
    x86_avx512_kadd_q,309,22954
    x86_avx512_kadd_w,310,23027
    x86_avx512_ktestc_b,311,23100
    x86_avx512_ktestc_d,312,23175
    x86_avx512_ktestc_q,313,23250
    x86_avx512_ktestc_w,314,23325
    x86_avx512_ktestz_b,315,23400
    x86_avx512_ktestz_d,316,23475
    x86_avx512_ktestz_q,317,23550
    x86_avx512_ktestz_w,318,23625
    x86_avx512_mask_add_sd_round,319,23700
    x86_avx512_mask_add_ss_round,320,23784
    x86_avx512_mask_cmp_pd_128,321,23868
    x86_avx512_mask_cmp_pd_256,322,23950
    x86_avx512_mask_cmp_pd_512,323,24032
    x86_avx512_mask_cmp_ps_128,324,24114
    x86_avx512_mask_cmp_ps_256,325,24196
    x86_avx512_mask_cmp_ps_512,326,24278
    x86_avx512_mask_cmp_sd,327,24360
    x86_avx512_mask_cmp_ss,328,24438
    x86_avx512_mask_compress,329,24516
    x86_avx512_mask_cvtpd2dq_128,330,24596
    x86_avx512_mask_cvtpd2dq_512,331,24680
    x86_avx512_mask_cvtpd2ps,332,24764
    x86_avx512_mask_cvtpd2ps_512,333,24844
    x86_avx512_mask_cvtpd2qq_128,334,24928
    x86_avx512_mask_cvtpd2qq_256,335,25012
    x86_avx512_mask_cvtpd2qq_512,336,25096
    x86_avx512_mask_cvtpd2udq_128,337,25180
    x86_avx512_mask_cvtpd2udq_256,338,25265
    x86_avx512_mask_cvtpd2udq_512,339,25350
    x86_avx512_mask_cvtpd2uqq_128,340,25435
    x86_avx512_mask_cvtpd2uqq_256,341,25520
    x86_avx512_mask_cvtpd2uqq_512,342,25605
    x86_avx512_mask_cvtps2dq_128,343,25690
    x86_avx512_mask_cvtps2dq_256,344,25774
    x86_avx512_mask_cvtps2dq_512,345,25858
    x86_avx512_mask_cvtps2pd_512,346,25942
    x86_avx512_mask_cvtps2qq_128,347,26026
    x86_avx512_mask_cvtps2qq_256,348,26110
    x86_avx512_mask_cvtps2qq_512,349,26194
    x86_avx512_mask_cvtps2udq_128,350,26278
    x86_avx512_mask_cvtps2udq_256,351,26363
    x86_avx512_mask_cvtps2udq_512,352,26448
    x86_avx512_mask_cvtps2uqq_128,353,26533
    x86_avx512_mask_cvtps2uqq_256,354,26618
    x86_avx512_mask_cvtps2uqq_512,355,26703
    x86_avx512_mask_cvtqq2ps_128,356,26788
    x86_avx512_mask_cvtsd2ss_round,357,26872
    x86_avx512_mask_cvtss2sd_round,358,26958
    x86_avx512_mask_cvttpd2dq_128,359,27044
    x86_avx512_mask_cvttpd2dq_512,360,27129
    x86_avx512_mask_cvttpd2qq_128,361,27214
    x86_avx512_mask_cvttpd2qq_256,362,27299
    x86_avx512_mask_cvttpd2qq_512,363,27384
    x86_avx512_mask_cvttpd2udq_128,364,27469
    x86_avx512_mask_cvttpd2udq_256,365,27555
    x86_avx512_mask_cvttpd2udq_512,366,27641
    x86_avx512_mask_cvttpd2uqq_128,367,27727
    x86_avx512_mask_cvttpd2uqq_256,368,27813
    x86_avx512_mask_cvttpd2uqq_512,369,27899
    x86_avx512_mask_cvttps2dq_512,370,27985
    x86_avx512_mask_cvttps2qq_128,371,28070
    x86_avx512_mask_cvttps2qq_256,372,28155
    x86_avx512_mask_cvttps2qq_512,373,28240
    x86_avx512_mask_cvttps2udq_128,374,28325
    x86_avx512_mask_cvttps2udq_256,375,28411
    x86_avx512_mask_cvttps2udq_512,376,28497
    x86_avx512_mask_cvttps2uqq_128,377,28583
    x86_avx512_mask_cvttps2uqq_256,378,28669
    x86_avx512_mask_cvttps2uqq_512,379,28755
    x86_avx512_mask_cvtuqq2ps_128,380,28841
    x86_avx512_mask_div_sd_round,381,28926
    x86_avx512_mask_div_ss_round,382,29010
    x86_avx512_mask_expand,383,29094
    x86_avx512_mask_fixupimm_pd_128,384,29172
    x86_avx512_mask_fixupimm_pd_256,385,29259
    x86_avx512_mask_fixupimm_pd_512,386,29346
    x86_avx512_mask_fixupimm_ps_128,387,29433
    x86_avx512_mask_fixupimm_ps_256,388,29520
    x86_avx512_mask_fixupimm_ps_512,389,29607
    x86_avx512_mask_fixupimm_sd,390,29694
    x86_avx512_mask_fixupimm_ss,391,29777
    x86_avx512_mask_fpclass_sd,392,29860
    x86_avx512_mask_fpclass_ss,393,29942
    x86_avx512_mask_gather_dpd_512,394,30024
    x86_avx512_mask_gather_dpi_512,395,30110
    x86_avx512_mask_gather_dpq_512,396,30196
    x86_avx512_mask_gather_dps_512,397,30282
    x86_avx512_mask_gather_qpd_512,398,30368
    x86_avx512_mask_gather_qpi_512,399,30454
    x86_avx512_mask_gather_qpq_512,400,30540
    x86_avx512_mask_gather_qps_512,401,30626
    x86_avx512_mask_gather3div2_df,402,30712
    x86_avx512_mask_gather3div2_di,403,30798
    x86_avx512_mask_gather3div4_df,404,30884
    x86_avx512_mask_gather3div4_di,405,30970
    x86_avx512_mask_gather3div4_sf,406,31056
    x86_avx512_mask_gather3div4_si,407,31142
    x86_avx512_mask_gather3div8_sf,408,31228
    x86_avx512_mask_gather3div8_si,409,31314
    x86_avx512_mask_gather3siv2_df,410,31400
    x86_avx512_mask_gather3siv2_di,411,31486
    x86_avx512_mask_gather3siv4_df,412,31572
    x86_avx512_mask_gather3siv4_di,413,31658
    x86_avx512_mask_gather3siv4_sf,414,31744
    x86_avx512_mask_gather3siv4_si,415,31830
    x86_avx512_mask_gather3siv8_sf,416,31916
    x86_avx512_mask_gather3siv8_si,417,32002
    x86_avx512_mask_getexp_pd_128,418,32088
    x86_avx512_mask_getexp_pd_256,419,32173
    x86_avx512_mask_getexp_pd_512,420,32258
    x86_avx512_mask_getexp_ps_128,421,32343
    x86_avx512_mask_getexp_ps_256,422,32428
    x86_avx512_mask_getexp_ps_512,423,32513
    x86_avx512_mask_getexp_sd,424,32598
    x86_avx512_mask_getexp_ss,425,32679
    x86_avx512_mask_getmant_pd_128,426,32760
    x86_avx512_mask_getmant_pd_256,427,32846
    x86_avx512_mask_getmant_pd_512,428,32932
    x86_avx512_mask_getmant_ps_128,429,33018
    x86_avx512_mask_getmant_ps_256,430,33104
    x86_avx512_mask_getmant_ps_512,431,33190
    x86_avx512_mask_getmant_sd,432,33276
    x86_avx512_mask_getmant_ss,433,33358
    x86_avx512_mask_max_sd_round,434,33440
    x86_avx512_mask_max_ss_round,435,33524
    x86_avx512_mask_min_sd_round,436,33608
    x86_avx512_mask_min_ss_round,437,33692
    x86_avx512_mask_mul_sd_round,438,33776
    x86_avx512_mask_mul_ss_round,439,33860
    x86_avx512_mask_pmov_db_128,440,33944
    x86_avx512_mask_pmov_db_256,441,34027
    x86_avx512_mask_pmov_db_512,442,34110
    x86_avx512_mask_pmov_db_mem_128,443,34193
    x86_avx512_mask_pmov_db_mem_256,444,34280
    x86_avx512_mask_pmov_db_mem_512,445,34367
    x86_avx512_mask_pmov_dw_128,446,34454
    x86_avx512_mask_pmov_dw_256,447,34537
    x86_avx512_mask_pmov_dw_512,448,34620
    x86_avx512_mask_pmov_dw_mem_128,449,34703
    x86_avx512_mask_pmov_dw_mem_256,450,34790
    x86_avx512_mask_pmov_dw_mem_512,451,34877
    x86_avx512_mask_pmov_qb_128,452,34964
    x86_avx512_mask_pmov_qb_256,453,35047
    x86_avx512_mask_pmov_qb_512,454,35130
    x86_avx512_mask_pmov_qb_mem_128,455,35213
    x86_avx512_mask_pmov_qb_mem_256,456,35300
    x86_avx512_mask_pmov_qb_mem_512,457,35387
    x86_avx512_mask_pmov_qd_128,458,35474
    x86_avx512_mask_pmov_qd_mem_128,459,35557
    x86_avx512_mask_pmov_qd_mem_256,460,35644
    x86_avx512_mask_pmov_qd_mem_512,461,35731
    x86_avx512_mask_pmov_qw_128,462,35818
    x86_avx512_mask_pmov_qw_256,463,35901
    x86_avx512_mask_pmov_qw_512,464,35984
    x86_avx512_mask_pmov_qw_mem_128,465,36067
    x86_avx512_mask_pmov_qw_mem_256,466,36154
    x86_avx512_mask_pmov_qw_mem_512,467,36241
    x86_avx512_mask_pmov_wb_128,468,36328
    x86_avx512_mask_pmov_wb_mem_128,469,36411
    x86_avx512_mask_pmov_wb_mem_256,470,36498
    x86_avx512_mask_pmov_wb_mem_512,471,36585
    x86_avx512_mask_pmovs_db_128,472,36672
    x86_avx512_mask_pmovs_db_256,473,36756
    x86_avx512_mask_pmovs_db_512,474,36840
    x86_avx512_mask_pmovs_db_mem_128,475,36924
    x86_avx512_mask_pmovs_db_mem_256,476,37012
    x86_avx512_mask_pmovs_db_mem_512,477,37100
    x86_avx512_mask_pmovs_dw_128,478,37188
    x86_avx512_mask_pmovs_dw_256,479,37272
    x86_avx512_mask_pmovs_dw_512,480,37356
    x86_avx512_mask_pmovs_dw_mem_128,481,37440
    x86_avx512_mask_pmovs_dw_mem_256,482,37528
    x86_avx512_mask_pmovs_dw_mem_512,483,37616
    x86_avx512_mask_pmovs_qb_128,484,37704
    x86_avx512_mask_pmovs_qb_256,485,37788
    x86_avx512_mask_pmovs_qb_512,486,37872
    x86_avx512_mask_pmovs_qb_mem_128,487,37956
    x86_avx512_mask_pmovs_qb_mem_256,488,38044
    x86_avx512_mask_pmovs_qb_mem_512,489,38132
    x86_avx512_mask_pmovs_qd_128,490,38220
    x86_avx512_mask_pmovs_qd_256,491,38304
    x86_avx512_mask_pmovs_qd_512,492,38388
    x86_avx512_mask_pmovs_qd_mem_128,493,38472
    x86_avx512_mask_pmovs_qd_mem_256,494,38560
    x86_avx512_mask_pmovs_qd_mem_512,495,38648
    x86_avx512_mask_pmovs_qw_128,496,38736
    x86_avx512_mask_pmovs_qw_256,497,38820
    x86_avx512_mask_pmovs_qw_512,498,38904
    x86_avx512_mask_pmovs_qw_mem_128,499,38988
    x86_avx512_mask_pmovs_qw_mem_256,500,39076
    x86_avx512_mask_pmovs_qw_mem_512,501,39164
    x86_avx512_mask_pmovs_wb_128,502,39252
    x86_avx512_mask_pmovs_wb_256,503,39336
    x86_avx512_mask_pmovs_wb_512,504,39420
    x86_avx512_mask_pmovs_wb_mem_128,505,39504
    x86_avx512_mask_pmovs_wb_mem_256,506,39592
    x86_avx512_mask_pmovs_wb_mem_512,507,39680
    x86_avx512_mask_pmovus_db_128,508,39768
    x86_avx512_mask_pmovus_db_256,509,39853
    x86_avx512_mask_pmovus_db_512,510,39938
    x86_avx512_mask_pmovus_db_mem_128,511,40023
    x86_avx512_mask_pmovus_db_mem_256,512,40112
    x86_avx512_mask_pmovus_db_mem_512,513,40201
    x86_avx512_mask_pmovus_dw_128,514,40290
    x86_avx512_mask_pmovus_dw_256,515,40375
    x86_avx512_mask_pmovus_dw_512,516,40460
    x86_avx512_mask_pmovus_dw_mem_128,517,40545
    x86_avx512_mask_pmovus_dw_mem_256,518,40634
    x86_avx512_mask_pmovus_dw_mem_512,519,40723
    x86_avx512_mask_pmovus_qb_128,520,40812
    x86_avx512_mask_pmovus_qb_256,521,40897
    x86_avx512_mask_pmovus_qb_512,522,40982
    x86_avx512_mask_pmovus_qb_mem_128,523,41067
    x86_avx512_mask_pmovus_qb_mem_256,524,41156
    x86_avx512_mask_pmovus_qb_mem_512,525,41245
    x86_avx512_mask_pmovus_qd_128,526,41334
    x86_avx512_mask_pmovus_qd_256,527,41419
    x86_avx512_mask_pmovus_qd_512,528,41504
    x86_avx512_mask_pmovus_qd_mem_128,529,41589
    x86_avx512_mask_pmovus_qd_mem_256,530,41678
    x86_avx512_mask_pmovus_qd_mem_512,531,41767
    x86_avx512_mask_pmovus_qw_128,532,41856
    x86_avx512_mask_pmovus_qw_256,533,41941
    x86_avx512_mask_pmovus_qw_512,534,42026
    x86_avx512_mask_pmovus_qw_mem_128,535,42111
    x86_avx512_mask_pmovus_qw_mem_256,536,42200
    x86_avx512_mask_pmovus_qw_mem_512,537,42289
    x86_avx512_mask_pmovus_wb_128,538,42378
    x86_avx512_mask_pmovus_wb_256,539,42463
    x86_avx512_mask_pmovus_wb_512,540,42548
    x86_avx512_mask_pmovus_wb_mem_128,541,42633
    x86_avx512_mask_pmovus_wb_mem_256,542,42722
    x86_avx512_mask_pmovus_wb_mem_512,543,42811
    x86_avx512_mask_range_pd_128,544,42900
    x86_avx512_mask_range_pd_256,545,42984
    x86_avx512_mask_range_pd_512,546,43068
    x86_avx512_mask_range_ps_128,547,43152
    x86_avx512_mask_range_ps_256,548,43236
    x86_avx512_mask_range_ps_512,549,43320
    x86_avx512_mask_range_sd,550,43404
    x86_avx512_mask_range_ss,551,43484
    x86_avx512_mask_reduce_pd_128,552,43564
    x86_avx512_mask_reduce_pd_256,553,43649
    x86_avx512_mask_reduce_pd_512,554,43734
    x86_avx512_mask_reduce_ps_128,555,43819
    x86_avx512_mask_reduce_ps_256,556,43904
    x86_avx512_mask_reduce_ps_512,557,43989
    x86_avx512_mask_reduce_sd,558,44074
    x86_avx512_mask_reduce_ss,559,44155
    x86_avx512_mask_rndscale_pd_128,560,44236
    x86_avx512_mask_rndscale_pd_256,561,44323
    x86_avx512_mask_rndscale_pd_512,562,44410
    x86_avx512_mask_rndscale_ps_128,563,44497
    x86_avx512_mask_rndscale_ps_256,564,44584
    x86_avx512_mask_rndscale_ps_512,565,44671
    x86_avx512_mask_rndscale_sd,566,44758
    x86_avx512_mask_rndscale_ss,567,44841
    x86_avx512_mask_scalef_pd_128,568,44924
    x86_avx512_mask_scalef_pd_256,569,45009
    x86_avx512_mask_scalef_pd_512,570,45094
    x86_avx512_mask_scalef_ps_128,571,45179
    x86_avx512_mask_scalef_ps_256,572,45264
    x86_avx512_mask_scalef_ps_512,573,45349
    x86_avx512_mask_scalef_sd,574,45434
    x86_avx512_mask_scalef_ss,575,45515
    x86_avx512_mask_scatter_dpd_512,576,45596
    x86_avx512_mask_scatter_dpi_512,577,45683
    x86_avx512_mask_scatter_dpq_512,578,45770
    x86_avx512_mask_scatter_dps_512,579,45857
    x86_avx512_mask_scatter_qpd_512,580,45944
    x86_avx512_mask_scatter_qpi_512,581,46031
    x86_avx512_mask_scatter_qpq_512,582,46118
    x86_avx512_mask_scatter_qps_512,583,46205
    x86_avx512_mask_scatterdiv2_df,584,46292
    x86_avx512_mask_scatterdiv2_di,585,46378
    x86_avx512_mask_scatterdiv4_df,586,46464
    x86_avx512_mask_scatterdiv4_di,587,46550
    x86_avx512_mask_scatterdiv4_sf,588,46636
    x86_avx512_mask_scatterdiv4_si,589,46722
    x86_avx512_mask_scatterdiv8_sf,590,46808
    x86_avx512_mask_scatterdiv8_si,591,46894
    x86_avx512_mask_scattersiv2_df,592,46980
    x86_avx512_mask_scattersiv2_di,593,47066
    x86_avx512_mask_scattersiv4_df,594,47152
    x86_avx512_mask_scattersiv4_di,595,47238
    x86_avx512_mask_scattersiv4_sf,596,47324
    x86_avx512_mask_scattersiv4_si,597,47410
    x86_avx512_mask_scattersiv8_sf,598,47496
    x86_avx512_mask_scattersiv8_si,599,47582
    x86_avx512_mask_sqrt_sd,600,47668
    x86_avx512_mask_sqrt_ss,601,47747
    x86_avx512_mask_sub_sd_round,602,47826
    x86_avx512_mask_sub_ss_round,603,47910
    x86_avx512_mask_vcvtph2ps_512,604,47994
    x86_avx512_mask_vcvtps2ph_128,605,48079
    x86_avx512_mask_vcvtps2ph_256,606,48164
    x86_avx512_mask_vcvtps2ph_512,607,48249
    x86_avx512_maskz_fixupimm_pd_128,608,48334
    x86_avx512_maskz_fixupimm_pd_256,609,48422
    x86_avx512_maskz_fixupimm_pd_512,610,48510
    x86_avx512_maskz_fixupimm_ps_128,611,48598
    x86_avx512_maskz_fixupimm_ps_256,612,48686
    x86_avx512_maskz_fixupimm_ps_512,613,48774
    x86_avx512_maskz_fixupimm_sd,614,48862
    x86_avx512_maskz_fixupimm_ss,615,48946
    x86_avx512_max_pd_512,616,49030
    x86_avx512_max_ps_512,617,49107
    x86_avx512_min_pd_512,618,49184
    x86_avx512_min_ps_512,619,49261
    x86_avx512_mul_pd_512,620,49338
    x86_avx512_mul_ps_512,621,49415
    x86_avx512_packssdw_512,622,49492
    x86_avx512_packsswb_512,623,49571
    x86_avx512_packusdw_512,624,49650
    x86_avx512_packuswb_512,625,49729
    x86_avx512_pavg_b_512,626,49808
    x86_avx512_pavg_w_512,627,49885
    x86_avx512_permvar_df_256,628,49962
    x86_avx512_permvar_df_512,629,50043
    x86_avx512_permvar_di_256,630,50124
    x86_avx512_permvar_di_512,631,50205
    x86_avx512_permvar_hi_128,632,50286
    x86_avx512_permvar_hi_256,633,50367
    x86_avx512_permvar_hi_512,634,50448
    x86_avx512_permvar_qi_128,635,50529
    x86_avx512_permvar_qi_256,636,50610
    x86_avx512_permvar_qi_512,637,50691
    x86_avx512_permvar_sf_512,638,50772
    x86_avx512_permvar_si_512,639,50853
    x86_avx512_pmaddubs_w_512,640,50934
    x86_avx512_pmaddw_d_512,641,51015
    x86_avx512_pmul_hr_sw_512,642,51094
    x86_avx512_pmulh_w_512,643,51175
    x86_avx512_pmulhu_w_512,644,51253
    x86_avx512_pmultishift_qb_128,645,51332
    x86_avx512_pmultishift_qb_256,646,51417
    x86_avx512_pmultishift_qb_512,647,51502
    x86_avx512_psad_bw_512,648,51587
    x86_avx512_pshuf_b_512,649,51665
    x86_avx512_psll_d_512,650,51743
    x86_avx512_psll_q_512,651,51820
    x86_avx512_psll_w_512,652,51897
    x86_avx512_pslli_d_512,653,51974
    x86_avx512_pslli_q_512,654,52052
    x86_avx512_pslli_w_512,655,52130
    x86_avx512_psllv_d_512,656,52208
    x86_avx512_psllv_q_512,657,52286
    x86_avx512_psllv_w_128,658,52364
    x86_avx512_psllv_w_256,659,52442
    x86_avx512_psllv_w_512,660,52520
    x86_avx512_psra_d_512,661,52598
    x86_avx512_psra_q_128,662,52675
    x86_avx512_psra_q_256,663,52752
    x86_avx512_psra_q_512,664,52829
    x86_avx512_psra_w_512,665,52906
    x86_avx512_psrai_d_512,666,52983
    x86_avx512_psrai_q_128,667,53061
    x86_avx512_psrai_q_256,668,53139
    x86_avx512_psrai_q_512,669,53217
    x86_avx512_psrai_w_512,670,53295
    x86_avx512_psrav_d_512,671,53373
    x86_avx512_psrav_q_128,672,53451
    x86_avx512_psrav_q_256,673,53529
    x86_avx512_psrav_q_512,674,53607
    x86_avx512_psrav_w_128,675,53685
    x86_avx512_psrav_w_256,676,53763
    x86_avx512_psrav_w_512,677,53841
    x86_avx512_psrl_d_512,678,53919
    x86_avx512_psrl_q_512,679,53996
    x86_avx512_psrl_w_512,680,54073
    x86_avx512_psrli_d_512,681,54150
    x86_avx512_psrli_q_512,682,54228
    x86_avx512_psrli_w_512,683,54306
    x86_avx512_psrlv_d_512,684,54384
    x86_avx512_psrlv_q_512,685,54462
    x86_avx512_psrlv_w_128,686,54540
    x86_avx512_psrlv_w_256,687,54618
    x86_avx512_psrlv_w_512,688,54696
    x86_avx512_pternlog_d_128,689,54774
    x86_avx512_pternlog_d_256,690,54855
    x86_avx512_pternlog_d_512,691,54936
    x86_avx512_pternlog_q_128,692,55017
    x86_avx512_pternlog_q_256,693,55098
    x86_avx512_pternlog_q_512,694,55179
    x86_avx512_rcp14_pd_128,695,55260
    x86_avx512_rcp14_pd_256,696,55339
    x86_avx512_rcp14_pd_512,697,55418
    x86_avx512_rcp14_ps_128,698,55497
    x86_avx512_rcp14_ps_256,699,55576
    x86_avx512_rcp14_ps_512,700,55655
    x86_avx512_rcp14_sd,701,55734
    x86_avx512_rcp14_ss,702,55809
    x86_avx512_rcp28_pd,703,55884
    x86_avx512_rcp28_ps,704,55959
    x86_avx512_rcp28_sd,705,56034
    x86_avx512_rcp28_ss,706,56109
    x86_avx512_rsqrt14_pd_128,707,56184
    x86_avx512_rsqrt14_pd_256,708,56265
    x86_avx512_rsqrt14_pd_512,709,56346
    x86_avx512_rsqrt14_ps_128,710,56427
    x86_avx512_rsqrt14_ps_256,711,56508
    x86_avx512_rsqrt14_ps_512,712,56589
    x86_avx512_rsqrt14_sd,713,56670
    x86_avx512_rsqrt14_ss,714,56747
    x86_avx512_rsqrt28_pd,715,56824
    x86_avx512_rsqrt28_ps,716,56901
    x86_avx512_rsqrt28_sd,717,56978
    x86_avx512_rsqrt28_ss,718,57055
    x86_avx512_scatter_dpd_512,719,57132
    x86_avx512_scatter_dpi_512,720,57214
    x86_avx512_scatter_dpq_512,721,57296
    x86_avx512_scatter_dps_512,722,57378
    x86_avx512_scatter_qpd_512,723,57460
    x86_avx512_scatter_qpi_512,724,57542
    x86_avx512_scatter_qpq_512,725,57624
    x86_avx512_scatter_qps_512,726,57706
    x86_avx512_scatterdiv2_df,727,57788
    x86_avx512_scatterdiv2_di,728,57869
    x86_avx512_scatterdiv4_df,729,57950
    x86_avx512_scatterdiv4_di,730,58031
    x86_avx512_scatterdiv4_sf,731,58112
    x86_avx512_scatterdiv4_si,732,58193
    x86_avx512_scatterdiv8_sf,733,58274
    x86_avx512_scatterdiv8_si,734,58355
    x86_avx512_scatterpf_dpd_512,735,58436
    x86_avx512_scatterpf_dps_512,736,58520
    x86_avx512_scatterpf_qpd_512,737,58604
    x86_avx512_scatterpf_qps_512,738,58688
    x86_avx512_scattersiv2_df,739,58772
    x86_avx512_scattersiv2_di,740,58853
    x86_avx512_scattersiv4_df,741,58934
    x86_avx512_scattersiv4_di,742,59015
    x86_avx512_scattersiv4_sf,743,59096
    x86_avx512_scattersiv4_si,744,59177
    x86_avx512_scattersiv8_sf,745,59258
    x86_avx512_scattersiv8_si,746,59339
    x86_avx512_sitofp_round,747,59420
    x86_avx512_sqrt_pd_512,748,59499
    x86_avx512_sqrt_ps_512,749,59577
    x86_avx512_sub_pd_512,750,59655
    x86_avx512_sub_ps_512,751,59732
    x86_avx512_uitofp_round,752,59809
    x86_avx512_vcomi_sd,753,59888
    x86_avx512_vcomi_ss,754,59963
    x86_avx512_vcvtsd2si32,755,60038
    x86_avx512_vcvtsd2si64,756,60116
    x86_avx512_vcvtsd2usi32,757,60194
    x86_avx512_vcvtsd2usi64,758,60273
    x86_avx512_vcvtss2si32,759,60352
    x86_avx512_vcvtss2si64,760,60430
    x86_avx512_vcvtss2usi32,761,60508
    x86_avx512_vcvtss2usi64,762,60587
    x86_avx512_vfmadd_f32,763,60666
    x86_avx512_vfmadd_f64,764,60743
    x86_avx512_vfmadd_pd_512,765,60820
    x86_avx512_vfmadd_ps_512,766,60900
    x86_avx512_vfmaddsub_pd_512,767,60980
    x86_avx512_vfmaddsub_ps_512,768,61063
    x86_avx512_vp2intersect_d_128,769,61146
    x86_avx512_vp2intersect_d_256,770,61231
    x86_avx512_vp2intersect_d_512,771,61316
    x86_avx512_vp2intersect_q_128,772,61401
    x86_avx512_vp2intersect_q_256,773,61486
    x86_avx512_vp2intersect_q_512,774,61571
    x86_avx512_vpdpbusd_128,775,61656
    x86_avx512_vpdpbusd_256,776,61735
    x86_avx512_vpdpbusd_512,777,61814
    x86_avx512_vpdpbusds_128,778,61893
    x86_avx512_vpdpbusds_256,779,61973
    x86_avx512_vpdpbusds_512,780,62053
    x86_avx512_vpdpwssd_128,781,62133
    x86_avx512_vpdpwssd_256,782,62212
    x86_avx512_vpdpwssd_512,783,62291
    x86_avx512_vpdpwssds_128,784,62370
    x86_avx512_vpdpwssds_256,785,62450
    x86_avx512_vpdpwssds_512,786,62530
    x86_avx512_vpermi2var_d_128,787,62610
    x86_avx512_vpermi2var_d_256,788,62693
    x86_avx512_vpermi2var_d_512,789,62776
    x86_avx512_vpermi2var_hi_128,790,62859
    x86_avx512_vpermi2var_hi_256,791,62943
    x86_avx512_vpermi2var_hi_512,792,63027
    x86_avx512_vpermi2var_pd_128,793,63111
    x86_avx512_vpermi2var_pd_256,794,63195
    x86_avx512_vpermi2var_pd_512,795,63279
    x86_avx512_vpermi2var_ps_128,796,63363
    x86_avx512_vpermi2var_ps_256,797,63447
    x86_avx512_vpermi2var_ps_512,798,63531
    x86_avx512_vpermi2var_q_128,799,63615
    x86_avx512_vpermi2var_q_256,800,63698
    x86_avx512_vpermi2var_q_512,801,63781
    x86_avx512_vpermi2var_qi_128,802,63864
    x86_avx512_vpermi2var_qi_256,803,63948
    x86_avx512_vpermi2var_qi_512,804,64032
    x86_avx512_vpermilvar_pd_512,805,64116
    x86_avx512_vpermilvar_ps_512,806,64200
    x86_avx512_vpmadd52h_uq_128,807,64284
    x86_avx512_vpmadd52h_uq_256,808,64367
    x86_avx512_vpmadd52h_uq_512,809,64450
    x86_avx512_vpmadd52l_uq_128,810,64533
    x86_avx512_vpmadd52l_uq_256,811,64616
    x86_avx512_vpmadd52l_uq_512,812,64699
    x86_avx512_vpshufbitqmb_128,813,64782
    x86_avx512_vpshufbitqmb_256,814,64865
    x86_avx512_vpshufbitqmb_512,815,64948
    x86_avx512bf16_cvtne2ps2bf16_128,816,65031
    x86_avx512bf16_cvtne2ps2bf16_256,817,65119
    x86_avx512bf16_cvtne2ps2bf16_512,818,65207
    x86_avx512bf16_cvtneps2bf16_256,819,65295
    x86_avx512bf16_cvtneps2bf16_512,820,65382
    x86_avx512bf16_dpbf16ps_128,821,65469
    x86_avx512bf16_dpbf16ps_256,822,65552
    x86_avx512bf16_dpbf16ps_512,823,65635
    x86_avx512bf16_mask_cvtneps2bf16_128,824,65718
    x86_avx512fp16_add_ph_512,825,65810
    x86_avx512fp16_div_ph_512,826,65891
    x86_avx512fp16_fpclass_ph_128,827,65972
    x86_avx512fp16_fpclass_ph_256,828,66057
    x86_avx512fp16_fpclass_ph_512,829,66142
    x86_avx512fp16_mask_add_sh_round,830,66227
    x86_avx512fp16_mask_cmp_ph_128,831,66315
    x86_avx512fp16_mask_cmp_ph_256,832,66401
    x86_avx512fp16_mask_cmp_ph_512,833,66487
    x86_avx512fp16_mask_cmp_sh,834,66573
    x86_avx512fp16_mask_div_sh_round,835,66655
    x86_avx512fp16_mask_fpclass_sh,836,66743
    x86_avx512fp16_mask_getexp_ph_128,837,66829
    x86_avx512fp16_mask_getexp_ph_256,838,66918
    x86_avx512fp16_mask_getexp_ph_512,839,67007
    x86_avx512fp16_mask_getexp_sh,840,67096
    x86_avx512fp16_mask_getmant_ph_128,841,67181
    x86_avx512fp16_mask_getmant_ph_256,842,67271
    x86_avx512fp16_mask_getmant_ph_512,843,67361
    x86_avx512fp16_mask_getmant_sh,844,67451
    x86_avx512fp16_mask_max_sh_round,845,67537
    x86_avx512fp16_mask_min_sh_round,846,67625
    x86_avx512fp16_mask_mul_sh_round,847,67713
    x86_avx512fp16_mask_rcp_ph_128,848,67801
    x86_avx512fp16_mask_rcp_ph_256,849,67887
    x86_avx512fp16_mask_rcp_ph_512,850,67973
    x86_avx512fp16_mask_rcp_sh,851,68059
    x86_avx512fp16_mask_reduce_ph_128,852,68141
    x86_avx512fp16_mask_reduce_ph_256,853,68230
    x86_avx512fp16_mask_reduce_ph_512,854,68319
    x86_avx512fp16_mask_reduce_sh,855,68408
    x86_avx512fp16_mask_rndscale_ph_128,856,68493
    x86_avx512fp16_mask_rndscale_ph_256,857,68584
    x86_avx512fp16_mask_rndscale_ph_512,858,68675
    x86_avx512fp16_mask_rndscale_sh,859,68766
    x86_avx512fp16_mask_rsqrt_ph_128,860,68853
    x86_avx512fp16_mask_rsqrt_ph_256,861,68941
    x86_avx512fp16_mask_rsqrt_ph_512,862,69029
    x86_avx512fp16_mask_rsqrt_sh,863,69117
    x86_avx512fp16_mask_scalef_ph_128,864,69201
    x86_avx512fp16_mask_scalef_ph_256,865,69290
    x86_avx512fp16_mask_scalef_ph_512,866,69379
    x86_avx512fp16_mask_scalef_sh,867,69468
    x86_avx512fp16_mask_sqrt_sh,868,69553
    x86_avx512fp16_mask_sub_sh_round,869,69636
    x86_avx512fp16_mask_vcvtdq2ph_128,870,69724
    x86_avx512fp16_mask_vcvtpd2ph_128,871,69813
    x86_avx512fp16_mask_vcvtpd2ph_256,872,69902
    x86_avx512fp16_mask_vcvtpd2ph_512,873,69991
    x86_avx512fp16_mask_vcvtph2dq_128,874,70080
    x86_avx512fp16_mask_vcvtph2dq_256,875,70169
    x86_avx512fp16_mask_vcvtph2dq_512,876,70258
    x86_avx512fp16_mask_vcvtph2pd_128,877,70347
    x86_avx512fp16_mask_vcvtph2pd_256,878,70436
    x86_avx512fp16_mask_vcvtph2pd_512,879,70525
    x86_avx512fp16_mask_vcvtph2psx_128,880,70614
    x86_avx512fp16_mask_vcvtph2psx_256,881,70704
    x86_avx512fp16_mask_vcvtph2psx_512,882,70794
    x86_avx512fp16_mask_vcvtph2qq_128,883,70884
    x86_avx512fp16_mask_vcvtph2qq_256,884,70973
    x86_avx512fp16_mask_vcvtph2qq_512,885,71062
    x86_avx512fp16_mask_vcvtph2udq_128,886,71151
    x86_avx512fp16_mask_vcvtph2udq_256,887,71241
    x86_avx512fp16_mask_vcvtph2udq_512,888,71331
    x86_avx512fp16_mask_vcvtph2uqq_128,889,71421
    x86_avx512fp16_mask_vcvtph2uqq_256,890,71511
    x86_avx512fp16_mask_vcvtph2uqq_512,891,71601
    x86_avx512fp16_mask_vcvtph2uw_128,892,71691
    x86_avx512fp16_mask_vcvtph2uw_256,893,71780
    x86_avx512fp16_mask_vcvtph2uw_512,894,71869
    x86_avx512fp16_mask_vcvtph2w_128,895,71958
    x86_avx512fp16_mask_vcvtph2w_256,896,72046
    x86_avx512fp16_mask_vcvtph2w_512,897,72134
    x86_avx512fp16_mask_vcvtps2phx_128,898,72222
    x86_avx512fp16_mask_vcvtps2phx_256,899,72312
    x86_avx512fp16_mask_vcvtps2phx_512,900,72402
    x86_avx512fp16_mask_vcvtqq2ph_128,901,72492
    x86_avx512fp16_mask_vcvtqq2ph_256,902,72581
    x86_avx512fp16_mask_vcvtsd2sh_round,903,72670
    x86_avx512fp16_mask_vcvtsh2sd_round,904,72761
    x86_avx512fp16_mask_vcvtsh2ss_round,905,72852
    x86_avx512fp16_mask_vcvtss2sh_round,906,72943
    x86_avx512fp16_mask_vcvttph2dq_128,907,73034
    x86_avx512fp16_mask_vcvttph2dq_256,908,73124
    x86_avx512fp16_mask_vcvttph2dq_512,909,73214
    x86_avx512fp16_mask_vcvttph2qq_128,910,73304
    x86_avx512fp16_mask_vcvttph2qq_256,911,73394
    x86_avx512fp16_mask_vcvttph2qq_512,912,73484
    x86_avx512fp16_mask_vcvttph2udq_128,913,73574
    x86_avx512fp16_mask_vcvttph2udq_256,914,73665
    x86_avx512fp16_mask_vcvttph2udq_512,915,73756
    x86_avx512fp16_mask_vcvttph2uqq_128,916,73847
    x86_avx512fp16_mask_vcvttph2uqq_256,917,73938
    x86_avx512fp16_mask_vcvttph2uqq_512,918,74029
    x86_avx512fp16_mask_vcvttph2uw_128,919,74120
    x86_avx512fp16_mask_vcvttph2uw_256,920,74210
    x86_avx512fp16_mask_vcvttph2uw_512,921,74300
    x86_avx512fp16_mask_vcvttph2w_128,922,74390
    x86_avx512fp16_mask_vcvttph2w_256,923,74479
    x86_avx512fp16_mask_vcvttph2w_512,924,74568
    x86_avx512fp16_mask_vcvtudq2ph_128,925,74657
    x86_avx512fp16_mask_vcvtuqq2ph_128,926,74747
    x86_avx512fp16_mask_vcvtuqq2ph_256,927,74837
    x86_avx512fp16_mask_vfcmadd_cph_128,928,74927
    x86_avx512fp16_mask_vfcmadd_cph_256,929,75018
    x86_avx512fp16_mask_vfcmadd_cph_512,930,75109
    x86_avx512fp16_mask_vfcmadd_csh,931,75200
    x86_avx512fp16_mask_vfcmul_cph_128,932,75287
    x86_avx512fp16_mask_vfcmul_cph_256,933,75377
    x86_avx512fp16_mask_vfcmul_cph_512,934,75467
    x86_avx512fp16_mask_vfcmul_csh,935,75557
    x86_avx512fp16_mask_vfmadd_cph_128,936,75643
    x86_avx512fp16_mask_vfmadd_cph_256,937,75733
    x86_avx512fp16_mask_vfmadd_cph_512,938,75823
    x86_avx512fp16_mask_vfmadd_csh,939,75913
    x86_avx512fp16_mask_vfmul_cph_128,940,75999
    x86_avx512fp16_mask_vfmul_cph_256,941,76088
    x86_avx512fp16_mask_vfmul_cph_512,942,76177
    x86_avx512fp16_mask_vfmul_csh,943,76266
    x86_avx512fp16_maskz_vfcmadd_cph_128,944,76351
    x86_avx512fp16_maskz_vfcmadd_cph_256,945,76443
    x86_avx512fp16_maskz_vfcmadd_cph_512,946,76535
    x86_avx512fp16_maskz_vfcmadd_csh,947,76627
    x86_avx512fp16_maskz_vfmadd_cph_128,948,76715
    x86_avx512fp16_maskz_vfmadd_cph_256,949,76806
    x86_avx512fp16_maskz_vfmadd_cph_512,950,76897
    x86_avx512fp16_maskz_vfmadd_csh,951,76988
    x86_avx512fp16_max_ph_128,952,77075
    x86_avx512fp16_max_ph_256,953,77156
    x86_avx512fp16_max_ph_512,954,77237
    x86_avx512fp16_min_ph_128,955,77318
    x86_avx512fp16_min_ph_256,956,77399
    x86_avx512fp16_min_ph_512,957,77480
    x86_avx512fp16_mul_ph_512,958,77561
    x86_avx512fp16_sqrt_ph_512,959,77642
    x86_avx512fp16_sub_ph_512,960,77724
    x86_avx512fp16_vcomi_sh,961,77805
    x86_avx512fp16_vcvtsh2si32,962,77884
    x86_avx512fp16_vcvtsh2si64,963,77966
    x86_avx512fp16_vcvtsh2usi32,964,78048
    x86_avx512fp16_vcvtsh2usi64,965,78131
    x86_avx512fp16_vcvtsi2sh,966,78214
    x86_avx512fp16_vcvtsi642sh,967,78294
    x86_avx512fp16_vcvttsh2si32,968,78376
    x86_avx512fp16_vcvttsh2si64,969,78459
    x86_avx512fp16_vcvttsh2usi32,970,78542
    x86_avx512fp16_vcvttsh2usi64,971,78626
    x86_avx512fp16_vcvtusi2sh,972,78710
    x86_avx512fp16_vcvtusi642sh,973,78791
    x86_avx512fp16_vfmadd_f16,974,78874
    x86_avx512fp16_vfmadd_ph_512,975,78955
    x86_avx512fp16_vfmaddsub_ph_128,976,79039
    x86_avx512fp16_vfmaddsub_ph_256,977,79126
    x86_avx512fp16_vfmaddsub_ph_512,978,79213
    x86_axor32,979,79300
    x86_axor64,980,79366
    x86_bmi_bextr_32,981,79432
    x86_bmi_bextr_64,982,79504
    x86_bmi_bzhi_32,983,79576
    x86_bmi_bzhi_64,984,79647
    x86_bmi_pdep_32,985,79718
    x86_bmi_pdep_64,986,79789
    x86_bmi_pext_32,987,79860
    x86_bmi_pext_64,988,79931
    x86_cast_tile_to_vector,989,80002
    x86_cast_vector_to_tile,990,80081
    x86_cldemote,991,80160
    x86_clflushopt,992,80228
    x86_clrssbsy,993,80298
    x86_clui,994,80366
    x86_clwb,995,80430
    x86_clzero,996,80494
    x86_cmpccxadd32,997,80560
    x86_cmpccxadd64,998,80631
    x86_directstore32,999,80702
    x86_directstore64,1000,80775
    x86_encodekey128,1001,80848
    x86_encodekey256,1002,80920
    x86_enqcmd,1003,80992
    x86_enqcmds,1004,81058
    x86_flags_read_u32,1005,81125
    x86_flags_read_u64,1006,81199
    x86_flags_write_u32,1007,81273
    x86_flags_write_u64,1008,81348
    x86_fma_vfmaddsub_pd,1009,81423
    x86_fma_vfmaddsub_pd_256,1010,81499
    x86_fma_vfmaddsub_ps,1011,81579
    x86_fma_vfmaddsub_ps_256,1012,81655
    x86_fxrstor,1013,81735
    x86_fxrstor64,1014,81802
    x86_fxsave,1015,81871
    x86_fxsave64,1016,81937
    x86_incsspd,1017,82005
    x86_incsspq,1018,82072
    x86_int,1019,82139
    x86_invpcid,1020,82202
    x86_ldtilecfg,1021,82269
    x86_ldtilecfg_internal,1022,82338
    x86_llwpcb,1023,82416
    x86_loadiwkey,1024,82482
    x86_lwpins32,1025,82551
    x86_lwpins64,1026,82619
    x86_lwpval32,1027,82687
    x86_lwpval64,1028,82755
    x86_mmx_emms,1029,82823
    x86_mmx_femms,1030,82891
    x86_mmx_maskmovq,1031,82960
    x86_mmx_movnt_dq,1032,83032
    x86_mmx_packssdw,1033,83104
    x86_mmx_packsswb,1034,83176
    x86_mmx_packuswb,1035,83248
    x86_mmx_padd_b,1036,83320
    x86_mmx_padd_d,1037,83390
    x86_mmx_padd_q,1038,83460
    x86_mmx_padd_w,1039,83530
    x86_mmx_padds_b,1040,83600
    x86_mmx_padds_w,1041,83671
    x86_mmx_paddus_b,1042,83742
    x86_mmx_paddus_w,1043,83814
    x86_mmx_palignr_b,1044,83886
    x86_mmx_pand,1045,83959
    x86_mmx_pandn,1046,84027
    x86_mmx_pavg_b,1047,84096
    x86_mmx_pavg_w,1048,84166
    x86_mmx_pcmpeq_b,1049,84236
    x86_mmx_pcmpeq_d,1050,84308
    x86_mmx_pcmpeq_w,1051,84380
    x86_mmx_pcmpgt_b,1052,84452
    x86_mmx_pcmpgt_d,1053,84524
    x86_mmx_pcmpgt_w,1054,84596
    x86_mmx_pextr_w,1055,84668
    x86_mmx_pinsr_w,1056,84739
    x86_mmx_pmadd_wd,1057,84810
    x86_mmx_pmaxs_w,1058,84882
    x86_mmx_pmaxu_b,1059,84953
    x86_mmx_pmins_w,1060,85024
    x86_mmx_pminu_b,1061,85095
    x86_mmx_pmovmskb,1062,85166
    x86_mmx_pmulh_w,1063,85238
    x86_mmx_pmulhu_w,1064,85309
    x86_mmx_pmull_w,1065,85381
    x86_mmx_pmulu_dq,1066,85452
    x86_mmx_por,1067,85524
    x86_mmx_psad_bw,1068,85591
    x86_mmx_psll_d,1069,85662
    x86_mmx_psll_q,1070,85732
    x86_mmx_psll_w,1071,85802
    x86_mmx_pslli_d,1072,85872
    x86_mmx_pslli_q,1073,85943
    x86_mmx_pslli_w,1074,86014
    x86_mmx_psra_d,1075,86085
    x86_mmx_psra_w,1076,86155
    x86_mmx_psrai_d,1077,86225
    x86_mmx_psrai_w,1078,86296
    x86_mmx_psrl_d,1079,86367
    x86_mmx_psrl_q,1080,86437
    x86_mmx_psrl_w,1081,86507
    x86_mmx_psrli_d,1082,86577
    x86_mmx_psrli_q,1083,86648
    x86_mmx_psrli_w,1084,86719
    x86_mmx_psub_b,1085,86790
    x86_mmx_psub_d,1086,86860
    x86_mmx_psub_q,1087,86930
    x86_mmx_psub_w,1088,87000
    x86_mmx_psubs_b,1089,87070
    x86_mmx_psubs_w,1090,87141
    x86_mmx_psubus_b,1091,87212
    x86_mmx_psubus_w,1092,87284
    x86_mmx_punpckhbw,1093,87356
    x86_mmx_punpckhdq,1094,87429
    x86_mmx_punpckhwd,1095,87502
    x86_mmx_punpcklbw,1096,87575
    x86_mmx_punpckldq,1097,87648
    x86_mmx_punpcklwd,1098,87721
    x86_mmx_pxor,1099,87794
    x86_monitorx,1100,87862
    x86_movdir64b,1101,87930
    x86_mwaitx,1102,87999
    x86_pclmulqdq,1103,88065
    x86_pclmulqdq_256,1104,88134
    x86_pclmulqdq_512,1105,88207
    x86_ptwrite32,1106,88280
    x86_ptwrite64,1107,88349
    x86_rdfsbase_32,1108,88418
    x86_rdfsbase_64,1109,88489
    x86_rdgsbase_32,1110,88560
    x86_rdgsbase_64,1111,88631
    x86_rdpid,1112,88702
    x86_rdpkru,1113,88767
    x86_rdpmc,1114,88833
    x86_rdpru,1115,88898
    x86_rdrand_16,1116,88963
    x86_rdrand_32,1117,89032
    x86_rdrand_64,1118,89101
    x86_rdseed_16,1119,89170
    x86_rdseed_32,1120,89239
    x86_rdseed_64,1121,89308
    x86_rdsspd,1122,89377
    x86_rdsspq,1123,89443
    x86_rdtsc,1124,89509
    x86_rdtscp,1125,89574
    x86_rstorssp,1126,89640
    x86_saveprevssp,1127,89708
    x86_seh_ehguard,1128,89779
    x86_seh_ehregnode,1129,89850
    x86_seh_lsda,1130,89923
    x86_senduipi,1131,89991
    x86_serialize,1132,90059
    x86_setssbsy,1133,90128
    x86_sha1msg1,1134,90196
    x86_sha1msg2,1135,90264
    x86_sha1nexte,1136,90332
    x86_sha1rnds4,1137,90401
    x86_sha256msg1,1138,90470
    x86_sha256msg2,1139,90540
    x86_sha256rnds2,1140,90610
    x86_slwpcb,1141,90681
    x86_sse_cmp_ps,1142,90747
    x86_sse_cmp_ss,1143,90817
    x86_sse_comieq_ss,1144,90887
    x86_sse_comige_ss,1145,90960
    x86_sse_comigt_ss,1146,91033
    x86_sse_comile_ss,1147,91106
    x86_sse_comilt_ss,1148,91179
    x86_sse_comineq_ss,1149,91252
    x86_sse_cvtpd2pi,1150,91326
    x86_sse_cvtpi2pd,1151,91398
    x86_sse_cvtpi2ps,1152,91470
    x86_sse_cvtps2pi,1153,91542
    x86_sse_cvtss2si,1154,91614
    x86_sse_cvtss2si64,1155,91686
    x86_sse_cvttpd2pi,1156,91760
    x86_sse_cvttps2pi,1157,91833
    x86_sse_cvttss2si,1158,91906
    x86_sse_cvttss2si64,1159,91979
    x86_sse_ldmxcsr,1160,92054
    x86_sse_max_ps,1161,92125
    x86_sse_max_ss,1162,92195
    x86_sse_min_ps,1163,92265
    x86_sse_min_ss,1164,92335
    x86_sse_movmsk_ps,1165,92405
    x86_sse_pshuf_w,1166,92478
    x86_sse_rcp_ps,1167,92549
    x86_sse_rcp_ss,1168,92619
    x86_sse_rsqrt_ps,1169,92689
    x86_sse_rsqrt_ss,1170,92761
    x86_sse_sfence,1171,92833
    x86_sse_stmxcsr,1172,92903
    x86_sse_ucomieq_ss,1173,92974
    x86_sse_ucomige_ss,1174,93048
    x86_sse_ucomigt_ss,1175,93122
    x86_sse_ucomile_ss,1176,93196
    x86_sse_ucomilt_ss,1177,93270
    x86_sse_ucomineq_ss,1178,93344
    x86_sse2_clflush,1179,93419
    x86_sse2_cmp_pd,1180,93491
    x86_sse2_cmp_sd,1181,93562
    x86_sse2_comieq_sd,1182,93633
    x86_sse2_comige_sd,1183,93707
    x86_sse2_comigt_sd,1184,93781
    x86_sse2_comile_sd,1185,93855
    x86_sse2_comilt_sd,1186,93929
    x86_sse2_comineq_sd,1187,94003
    x86_sse2_cvtpd2dq,1188,94078
    x86_sse2_cvtpd2ps,1189,94151
    x86_sse2_cvtps2dq,1190,94224
    x86_sse2_cvtsd2si,1191,94297
    x86_sse2_cvtsd2si64,1192,94370
    x86_sse2_cvtsd2ss,1193,94445
    x86_sse2_cvttpd2dq,1194,94518
    x86_sse2_cvttps2dq,1195,94592
    x86_sse2_cvttsd2si,1196,94666
    x86_sse2_cvttsd2si64,1197,94740
    x86_sse2_lfence,1198,94816
    x86_sse2_maskmov_dqu,1199,94887
    x86_sse2_max_pd,1200,94963
    x86_sse2_max_sd,1201,95034
    x86_sse2_mfence,1202,95105
    x86_sse2_min_pd,1203,95176
    x86_sse2_min_sd,1204,95247
    x86_sse2_movmsk_pd,1205,95318
    x86_sse2_packssdw_128,1206,95392
    x86_sse2_packsswb_128,1207,95469
    x86_sse2_packuswb_128,1208,95546
    x86_sse2_pause,1209,95623
    x86_sse2_pavg_b,1210,95693
    x86_sse2_pavg_w,1211,95764
    x86_sse2_pmadd_wd,1212,95835
    x86_sse2_pmovmskb_128,1213,95908
    x86_sse2_pmulh_w,1214,95985
    x86_sse2_pmulhu_w,1215,96057
    x86_sse2_psad_bw,1216,96130
    x86_sse2_psll_d,1217,96202
    x86_sse2_psll_q,1218,96273
    x86_sse2_psll_w,1219,96344
    x86_sse2_pslli_d,1220,96415
    x86_sse2_pslli_q,1221,96487
    x86_sse2_pslli_w,1222,96559
    x86_sse2_psra_d,1223,96631
    x86_sse2_psra_w,1224,96702
    x86_sse2_psrai_d,1225,96773
    x86_sse2_psrai_w,1226,96845
    x86_sse2_psrl_d,1227,96917
    x86_sse2_psrl_q,1228,96988
    x86_sse2_psrl_w,1229,97059
    x86_sse2_psrli_d,1230,97130
    x86_sse2_psrli_q,1231,97202
    x86_sse2_psrli_w,1232,97274
    x86_sse2_ucomieq_sd,1233,97346
    x86_sse2_ucomige_sd,1234,97421
    x86_sse2_ucomigt_sd,1235,97496
    x86_sse2_ucomile_sd,1236,97571
    x86_sse2_ucomilt_sd,1237,97646
    x86_sse2_ucomineq_sd,1238,97721
    x86_sse3_addsub_pd,1239,97797
    x86_sse3_addsub_ps,1240,97871
    x86_sse3_hadd_pd,1241,97945
    x86_sse3_hadd_ps,1242,98017
    x86_sse3_hsub_pd,1243,98089
    x86_sse3_hsub_ps,1244,98161
    x86_sse3_ldu_dq,1245,98233
    x86_sse3_monitor,1246,98304
    x86_sse3_mwait,1247,98376
    x86_sse41_blendvpd,1248,98446
    x86_sse41_blendvps,1249,98520
    x86_sse41_dppd,1250,98594
    x86_sse41_dpps,1251,98664
    x86_sse41_insertps,1252,98734
    x86_sse41_mpsadbw,1253,98808
    x86_sse41_packusdw,1254,98881
    x86_sse41_pblendvb,1255,98955
    x86_sse41_phminposuw,1256,99029
    x86_sse41_ptestc,1257,99105
    x86_sse41_ptestnzc,1258,99177
    x86_sse41_ptestz,1259,99251
    x86_sse41_round_pd,1260,99323
    x86_sse41_round_ps,1261,99397
    x86_sse41_round_sd,1262,99471
    x86_sse41_round_ss,1263,99545
    x86_sse42_crc32_32_16,1264,99619
    x86_sse42_crc32_32_32,1265,99696
    x86_sse42_crc32_32_8,1266,99773
    x86_sse42_crc32_64_64,1267,99849
    x86_sse42_pcmpestri128,1268,99926
    x86_sse42_pcmpestria128,1269,100004
    x86_sse42_pcmpestric128,1270,100083
    x86_sse42_pcmpestrio128,1271,100162
    x86_sse42_pcmpestris128,1272,100241
    x86_sse42_pcmpestriz128,1273,100320
    x86_sse42_pcmpestrm128,1274,100399
    x86_sse42_pcmpistri128,1275,100477
    x86_sse42_pcmpistria128,1276,100555
    x86_sse42_pcmpistric128,1277,100634
    x86_sse42_pcmpistrio128,1278,100713
    x86_sse42_pcmpistris128,1279,100792
    x86_sse42_pcmpistriz128,1280,100871
    x86_sse42_pcmpistrm128,1281,100950
    x86_sse4a_extrq,1282,101028
    x86_sse4a_extrqi,1283,101099
    x86_sse4a_insertq,1284,101171
    x86_sse4a_insertqi,1285,101244
    x86_ssse3_pabs_b,1286,101318
    x86_ssse3_pabs_d,1287,101390
    x86_ssse3_pabs_w,1288,101462
    x86_ssse3_phadd_d,1289,101534
    x86_ssse3_phadd_d_128,1290,101607
    x86_ssse3_phadd_sw,1291,101684
    x86_ssse3_phadd_sw_128,1292,101758
    x86_ssse3_phadd_w,1293,101836
    x86_ssse3_phadd_w_128,1294,101909
    x86_ssse3_phsub_d,1295,101986
    x86_ssse3_phsub_d_128,1296,102059
    x86_ssse3_phsub_sw,1297,102136
    x86_ssse3_phsub_sw_128,1298,102210
    x86_ssse3_phsub_w,1299,102288
    x86_ssse3_phsub_w_128,1300,102361
    x86_ssse3_pmadd_ub_sw,1301,102438
    x86_ssse3_pmadd_ub_sw_128,1302,102515
    x86_ssse3_pmul_hr_sw,1303,102596
    x86_ssse3_pmul_hr_sw_128,1304,102672
    x86_ssse3_pshuf_b,1305,102752
    x86_ssse3_pshuf_b_128,1306,102825
    x86_ssse3_psign_b,1307,102902
    x86_ssse3_psign_b_128,1308,102975
    x86_ssse3_psign_d,1309,103052
    x86_ssse3_psign_d_128,1310,103125
    x86_ssse3_psign_w,1311,103202
    x86_ssse3_psign_w_128,1312,103275
    x86_sttilecfg,1313,103352
    x86_stui,1314,103421
    x86_subborrow_32,1315,103485
    x86_subborrow_64,1316,103557
    x86_tbm_bextri_u32,1317,103629
    x86_tbm_bextri_u64,1318,103703
    x86_tcmmimfp16ps,1319,103777
    x86_tcmmimfp16ps_internal,1320,103849
    x86_tcmmrlfp16ps,1321,103930
    x86_tcmmrlfp16ps_internal,1322,104002
    x86_tdpbf16ps,1323,104083
    x86_tdpbf16ps_internal,1324,104152
    x86_tdpbssd,1325,104230
    x86_tdpbssd_internal,1326,104297
    x86_tdpbsud,1327,104373
    x86_tdpbsud_internal,1328,104440
    x86_tdpbusd,1329,104516
    x86_tdpbusd_internal,1330,104583
    x86_tdpbuud,1331,104659
    x86_tdpbuud_internal,1332,104726
    x86_tdpfp16ps,1333,104802
    x86_tdpfp16ps_internal,1334,104871
    x86_testui,1335,104949
    x86_tileloadd64,1336,105015
    x86_tileloadd64_internal,1337,105086
    x86_tileloaddt164,1338,105166
    x86_tileloaddt164_internal,1339,105239
    x86_tilerelease,1340,105321
    x86_tilestored64,1341,105392
    x86_tilestored64_internal,1342,105464
    x86_tilezero,1343,105545
    x86_tilezero_internal,1344,105613
    x86_tpause,1345,105690
    x86_umonitor,1346,105756
    x86_umwait,1347,105824
    x86_urdmsr,1348,105890
    x86_uwrmsr,1349,105956
    x86_vbcstnebf162ps128,1350,106022
    x86_vbcstnebf162ps256,1351,106099
    x86_vbcstnesh2ps128,1352,106176
    x86_vbcstnesh2ps256,1353,106251
    x86_vcvtneebf162ps128,1354,106326
    x86_vcvtneebf162ps256,1355,106403
    x86_vcvtneeph2ps128,1356,106480
    x86_vcvtneeph2ps256,1357,106555
    x86_vcvtneobf162ps128,1358,106630
    x86_vcvtneobf162ps256,1359,106707
    x86_vcvtneoph2ps128,1360,106784
    x86_vcvtneoph2ps256,1361,106859
    x86_vcvtneps2bf16128,1362,106934
    x86_vcvtneps2bf16256,1363,107010
    x86_vcvtps2ph_128,1364,107086
    x86_vcvtps2ph_256,1365,107159
    x86_vgf2p8affineinvqb_128,1366,107232
    x86_vgf2p8affineinvqb_256,1367,107313
    x86_vgf2p8affineinvqb_512,1368,107394
    x86_vgf2p8affineqb_128,1369,107475
    x86_vgf2p8affineqb_256,1370,107553
    x86_vgf2p8affineqb_512,1371,107631
    x86_vgf2p8mulb_128,1372,107709
    x86_vgf2p8mulb_256,1373,107783
    x86_vgf2p8mulb_512,1374,107857
    x86_vsha512msg1,1375,107931
    x86_vsha512msg2,1376,108002
    x86_vsha512rnds2,1377,108073
    x86_vsm3msg1,1378,108145
    x86_vsm3msg2,1379,108213
    x86_vsm3rnds2,1380,108281
    x86_vsm4key4128,1381,108350
    x86_vsm4key4256,1382,108421
    x86_vsm4rnds4128,1383,108492
    x86_vsm4rnds4256,1384,108564
    x86_wbinvd,1385,108636
    x86_wbnoinvd,1386,108702
    x86_wrfsbase_32,1387,108770
    x86_wrfsbase_64,1388,108841
    x86_wrgsbase_32,1389,108912
    x86_wrgsbase_64,1390,108983
    x86_wrpkru,1391,109054
    x86_wrssd,1392,109120
    x86_wrssq,1393,109185
    x86_wrussd,1394,109250
    x86_wrussq,1395,109316
    x86_xabort,1396,109382
    x86_xbegin,1397,109448
    x86_xend,1398,109514
    x86_xgetbv,1399,109578
    x86_xop_vfrcz_pd,1400,109644
    x86_xop_vfrcz_pd_256,1401,109716
    x86_xop_vfrcz_ps,1402,109792
    x86_xop_vfrcz_ps_256,1403,109864
    x86_xop_vfrcz_sd,1404,109940
    x86_xop_vfrcz_ss,1405,110012
    x86_xop_vpermil2pd,1406,110084
    x86_xop_vpermil2pd_256,1407,110158
    x86_xop_vpermil2ps,1408,110236
    x86_xop_vpermil2ps_256,1409,110310
    x86_xop_vphaddbd,1410,110388
    x86_xop_vphaddbq,1411,110460
    x86_xop_vphaddbw,1412,110532
    x86_xop_vphadddq,1413,110604
    x86_xop_vphaddubd,1414,110676
    x86_xop_vphaddubq,1415,110749
    x86_xop_vphaddubw,1416,110822
    x86_xop_vphaddudq,1417,110895
    x86_xop_vphadduwd,1418,110968
    x86_xop_vphadduwq,1419,111041
    x86_xop_vphaddwd,1420,111114
    x86_xop_vphaddwq,1421,111186
    x86_xop_vphsubbw,1422,111258
    x86_xop_vphsubdq,1423,111330
    x86_xop_vphsubwd,1424,111402
    x86_xop_vpmacsdd,1425,111474
    x86_xop_vpmacsdqh,1426,111546
    x86_xop_vpmacsdql,1427,111619
    x86_xop_vpmacssdd,1428,111692
    x86_xop_vpmacssdqh,1429,111765
    x86_xop_vpmacssdql,1430,111839
    x86_xop_vpmacsswd,1431,111913
    x86_xop_vpmacssww,1432,111986
    x86_xop_vpmacswd,1433,112059
    x86_xop_vpmacsww,1434,112131
    x86_xop_vpmadcsswd,1435,112203
    x86_xop_vpmadcswd,1436,112277
    x86_xop_vpperm,1437,112350
    x86_xop_vpshab,1438,112420
    x86_xop_vpshad,1439,112490
    x86_xop_vpshaq,1440,112560
    x86_xop_vpshaw,1441,112630
    x86_xop_vpshlb,1442,112700
    x86_xop_vpshld,1443,112770
    x86_xop_vpshlq,1444,112840
    x86_xop_vpshlw,1445,112910
    x86_xresldtrk,1446,112980
    x86_xrstor,1447,113049
    x86_xrstor64,1448,113115
    x86_xrstors,1449,113183
    x86_xrstors64,1450,113250
    x86_xsave,1451,113319
    x86_xsave64,1452,113384
    x86_xsavec,1453,113451
    x86_xsavec64,1454,113517
    x86_xsaveopt,1455,113585
    x86_xsaveopt64,1456,113653
    x86_xsaves,1457,113723
    x86_xsaves64,1458,113789
    x86_xsetbv,1459,113857
    x86_xsusldtrk,1460,113923
    x86_xtest,1461,113992

/usr/include/llvm/IR/IntrinsicsX86.td,3935
let TargetPrefix 15,614
let TargetPrefix 21,873
let TargetPrefix 33,1364
let TargetPrefix 46,1990
let TargetPrefix 54,2255
let TargetPrefix 60,2429
let TargetPrefix 66,2588
let TargetPrefix 84,3478
let TargetPrefix 98,4358
let TargetPrefix 105,4601
let TargetPrefix 135,6120
let TargetPrefix 194,9696
let TargetPrefix 213,10619
let TargetPrefix 241,12137
let TargetPrefix 292,15085
let TargetPrefix 312,16264
let TargetPrefix 318,16464
let TargetPrefix 333,17161
let TargetPrefix 342,17493
let TargetPrefix 358,18334
let TargetPrefix 408,21328
let TargetPrefix 430,22650
let TargetPrefix 484,25847
let TargetPrefix 515,27896
let TargetPrefix 546,29591
let TargetPrefix 556,30070
let TargetPrefix 572,30929
let TargetPrefix 578,31178
let TargetPrefix 591,31693
let TargetPrefix 643,34630
let TargetPrefix 653,35151
let TargetPrefix 666,35856
let TargetPrefix 690,37156
let TargetPrefix 705,37792
let TargetPrefix 721,38788
let TargetPrefix 727,39074
let TargetPrefix 782,41958
let TargetPrefix 798,42833
let TargetPrefix 805,43120
let TargetPrefix 813,43473
let TargetPrefix 829,44291
let TargetPrefix 841,44941
let TargetPrefix 849,45322
let TargetPrefix 866,46118
let TargetPrefix 882,46991
let TargetPrefix 951,50454
let TargetPrefix 975,51617
let TargetPrefix 1010,53600
let TargetPrefix 1026,54470
let TargetPrefix 1169,60841
let TargetPrefix 1217,63323
let TargetPrefix 1229,63901
let TargetPrefix 1237,64258
let TargetPrefix 1249,64774
let TargetPrefix 1263,65644
let TargetPrefix 1341,70223
let TargetPrefix 1349,70618
let TargetPrefix 1357,70975
let TargetPrefix 1363,71223
let TargetPrefix 1379,72178
let TargetPrefix 1397,73031
let TargetPrefix 1413,73689
let TargetPrefix 1435,75022
let TargetPrefix 1574,83367
let TargetPrefix 1590,84254
let TargetPrefix 1615,85703
let TargetPrefix 1628,86400
let TargetPrefix 1638,86922
let TargetPrefix 1646,87230
let TargetPrefix 1656,87713
let TargetPrefix 1672,88664
let TargetPrefix 1690,89516
let TargetPrefix 1783,94877
let TargetPrefix 1854,99047
let TargetPrefix 1868,99787
let TargetPrefix 1944,103421
let TargetPrefix 2122,112342
let TargetPrefix 2303,121658
let TargetPrefix 2332,122902
let TargetPrefix 2340,123206
let TargetPrefix 2459,129791
let TargetPrefix 2517,132968
let TargetPrefix 2556,135492
let TargetPrefix 2569,136162
let TargetPrefix 2591,137428
let TargetPrefix 2614,138699
let TargetPrefix 2642,140013
let TargetPrefix 2672,141639
let TargetPrefix 2693,142724
let TargetPrefix 2706,143342
let TargetPrefix 2739,144881
let TargetPrefix 2749,145289
let TargetPrefix 2758,145692
let TargetPrefix 2786,147443
let TargetPrefix 2800,148189
let TargetPrefix 2814,148881
let TargetPrefix 2836,149858
let TargetPrefix 2851,150479
let TargetPrefix 2893,152313
let TargetPrefix 2969,157398
let TargetPrefix 2985,158295
let TargetPrefix 3399,177238
let TargetPrefix 3421,178344
let TargetPrefix 3903,207406
let TargetPrefix 3943,209505
let TargetPrefix 4215,222011
let TargetPrefix 4453,232510
let TargetPrefix 4477,233652
let TargetPrefix 4492,234348
let TargetPrefix 4506,234925
let TargetPrefix 5027,261128
let TargetPrefix 5071,263042
let TargetPrefix 5099,264300
let TargetPrefix 5145,266785
let TargetPrefix 5171,268283
let TargetPrefix 5185,269011
let TargetPrefix 5196,269424
let TargetPrefix 5204,269672
let TargetPrefix 5217,270056
let TargetPrefix 5224,270307
let TargetPrefix 5236,270856
let TargetPrefix 5248,271404
let TargetPrefix 5258,271802
let TargetPrefix 5263,271960
let TargetPrefix 5307,274191
let TargetPrefix 5317,274631
let TargetPrefix 5325,274899
let TargetPrefix 5334,275237
let TargetPrefix 5387,278073
let TargetPrefix 5520,285274
let TargetPrefix 5592,288670
let TargetPrefix 5611,289425
let TargetPrefix 5635,290312
let TargetPrefix 5665,291551
let TargetPrefix 5676,291997
let TargetPrefix 5686,292421

/usr/include/llvm/IR/IntrinsicsXCore.h,1397
#define LLVM_IR_INTRINSIC_XCORE_ENUMS_H10,608
enum XCOREIntrinsics 14,688
    xcore_bitrev 16,752
    xcore_checkevent,17,828
    xcore_chkct,18,900
    xcore_clre,19,967
    xcore_clrpt,20,1033
    xcore_clrsr,21,1100
    xcore_crc32,22,1167
    xcore_crc8,23,1234
    xcore_edu,24,1300
    xcore_eeu,25,1365
    xcore_endin,26,1430
    xcore_freer,27,1497
    xcore_geted,28,1564
    xcore_getet,29,1631
    xcore_getid,30,1698
    xcore_getps,31,1765
    xcore_getr,32,1832
    xcore_getst,33,1898
    xcore_getts,34,1965
    xcore_in,35,2032
    xcore_inct,36,2096
    xcore_initcp,37,2162
    xcore_initdp,38,2230
    xcore_initlr,39,2298
    xcore_initpc,40,2366
    xcore_initsp,41,2434
    xcore_inshr,42,2502
    xcore_int,43,2569
    xcore_mjoin,44,2634
    xcore_msync,45,2701
    xcore_out,46,2768
    xcore_outct,47,2833
    xcore_outshr,48,2900
    xcore_outt,49,2968
    xcore_peek,50,3034
    xcore_setc,51,3100
    xcore_setclk,52,3166
    xcore_setd,53,3234
    xcore_setev,54,3300
    xcore_setps,55,3367
    xcore_setpsc,56,3434
    xcore_setpt,57,3502
    xcore_setrdy,58,3569
    xcore_setsr,59,3637
    xcore_settw,60,3704
    xcore_setv,61,3771
    xcore_sext,62,3837
    xcore_ssync,63,3903
    xcore_syncr,64,3970
    xcore_testct,65,4037
    xcore_testwct,66,4105
    xcore_waitevent,67,4174
    xcore_zext,68,4245

/usr/include/llvm/IR/LegacyPassManagers.h,3628
#define LLVM_IR_LEGACYPASSMANAGERS_H14,554
enum PassDebuggingString 96,3524
  EXECUTION_MSG,97,3551
  MODIFICATION_MSG,98,3601
  FREEING_MSG,99,3657
  ON_FUNCTION_MSG,100,3704
  ON_MODULE_MSG,101,3770
  ON_REGION_MSG,102,3830
  ON_LOOP_MSG,103,3884
  ON_CG_MSG 104,3934
class PassManagerPrettyStackEntry 109,4144
  Pass *P;P110,4211
  Value *V;V111,4222
  Module *M;M112,4234
  explicit PassManagerPrettyStackEntry(115,4256
  PassManagerPrettyStackEntry(117,4373
  PassManagerPrettyStackEntry(119,4477
class PMStack 136,5135
  typedef std::vector<PMDataManager *>::const_reverse_iterator iterator;138,5159
  iterator begin(139,5232
  iterator end(140,5280
  PMDataManager *top(top143,5339
  bool empty(145,5421
  std::vector<PMDataManager *> S;150,5496
class PMTopLevelManager 158,5745
  unsigned getNumContainedManagers(162,5834
  inline SmallVectorImpl<ImmutablePass *>& getImmutablePasses(200,7096
  void addPassManager(204,7195
  inline void addIndirectPassManager(210,7397
  PMStack activeStack;219,7647
  SmallVector<SmallVector223,7716
  SmallVector<PMDataManager *, 8> PassManagers;223,7716
  SmallVector<SmallVector228,7868
  SmallVector<PMDataManager *, 8> IndirectPassManagers;228,7868
  DenseMap<DenseMap233,8091
  DenseMap<Pass *, Pass *> LastUser;233,8091
  DenseMap<DenseMap237,8233
  DenseMap<Pass *, SmallPtrSet<Pass *, 8> > InversedLastUser;237,8233
  SmallVector<SmallVector240,8353
  SmallVector<ImmutablePass *, 16> ImmutablePasses;240,8353
  SmallDenseMap<SmallDenseMap243,8445
  SmallDenseMap<AnalysisID, ImmutablePass *, 8> ImmutablePassMap;243,8445
  struct AUFoldingSetNode 248,8673
    AnalysisUsage AU;249,8725
    AUFoldingSetNode(250,8747
    void Profile(251,8805
    static void Profile(254,8881
  FoldingSet<AUFoldingSetNode> UniqueAnalysisUsages;273,9701
  SpecificBumpPtrAllocator<AUFoldingSetNode> AUFoldingSetNodeAllocator;277,9879
  DenseMap<DenseMap281,10093
  DenseMap<Pass *, AnalysisUsage*> AnUsageMap;281,10093
  mutable DenseMap<DenseMap287,10396
  mutable DenseMap<AnalysisID, const PassInfo *> AnalysisPassInfos;287,10396
class PMDataManager 295,10666
  explicit PMDataManager(297,10696
  virtual std::tuple<std::tuple329,11803
  void initializeAnalysisInfo(333,11993
  PMTopLevelManager *getTopLevelManager(getTopLevelManager361,13115
  void setTopLevelManager(362,13173
  unsigned getDepth(364,13235
  void setDepth(365,13281
  unsigned getNumContainedPasses(376,13721
  virtual PassManagerType getPassManagerType(380,13809
  DenseMap<DenseMap385,13949
  DenseMap<AnalysisID, Pass*> *getAvailableAnalysis(getAvailableAnalysis385,13949
  void populateInheritedAnalysis(390,14107
  PMTopLevelManager *TPM TPM419,15292
  SmallVector<SmallVector422,15386
  SmallVector<Pass *, 16> PassVector;422,15386
  DenseMap<DenseMap427,15599
  DenseMap<AnalysisID, Pass *> *InheritedAnalysis[InheritedAnalysis427,15599
  DenseMap<DenseMap441,16198
  DenseMap<AnalysisID, Pass*> AvailableAnalysis;441,16198
  SmallVector<SmallVector445,16336
  SmallVector<Pass *, 16> HigherLevelAnalysis;445,16336
  unsigned Depth 447,16384
class FPPassManager 457,16739
  static char ID;459,16811
  explicit FPPassManager(460,16829
  using ModulePass::doInitialization;473,17305
  using ModulePass::doFinalization;482,17575
  PMDataManager *getAsPMDataManager(getAsPMDataManager488,17736
  Pass *getAsPass(getAsPass489,17800
  void getAnalysisUsage(492,17912
  StringRef getPassName(499,18102
  FunctionPass *getContainedPass(getContainedPass501,18180
  PassManagerType getPassManagerType(507,18382

/usr/include/llvm/IR/Metadata.h,11953
#define LLVM_IR_METADATA_H16,631
enum LLVMConstants 51,1495
  DEBUG_METADATA_VERSION 52,1527
const uint64_t NOMORE_ICP_MAGICNUM 57,1737
class Metadata 62,1873
  const unsigned char SubclassID;66,1943
  enum StorageType 70,2019
  enum StorageType { Uniqued,70,2019
  enum StorageType { Uniqued, Distinct,70,2019
  enum StorageType { Uniqued, Distinct, Temporary 70,2019
  unsigned char Storage 73,2138
  unsigned char SubclassData1 75,2168
  unsigned short SubclassData16 76,2203
  unsigned SubclassData32 77,2240
  enum MetadataKind 80,2280
#define HANDLE_METADATA_LEAF(81,2302
  Metadata(86,2400
  void handleChangedOperand(97,2816
  unsigned getMetadataID(102,2939
DEFINE_ISA_CONVERSION_FUNCTIONS(144,4285
#define HANDLE_METADATA(151,4485
#define HANDLE_METADATA_LEAF(156,4685
inline raw_ostream &operator<<(operator<<164,5128
class MetadataAsValue 176,5533
  Metadata *MD;MD180,5645
  void dropUse(185,5752
  Metadata *getMetadata(getMetadata193,5962
  static bool classof(195,6010
class DebugValueUser 212,6594
  std::array<std::array218,6829
  std::array<Metadata *, 3> DebugValues;218,6829
  ArrayRef<Metadata *> getDebugValues(220,6871
  explicit DebugValueUser(233,7468
  DebugValueUser(237,7596
  DebugValueUser(241,7699
  DebugValueUser &operator=(operator=246,7805
  DebugValueUser &operator=(operator=256,8005
  ~DebugValueUser(266,8207
  void resetDebugValues(268,8254
  void resetDebugValue(273,8344
  bool operator==(operator==280,8550
  bool operator!=(operator!=283,8646
class MetadataTracking 304,9209
  static bool track(315,9619
  static bool track(324,9957
  static bool track(333,10302
  static bool track(342,10653
  static void untrack(349,10854
  static bool retrack(360,11276
  using OwnerTy 368,11526
  using OwnerTy = PointerUnion<MetadataAsValue *, Metadata 368,11526
class ReplaceableMetadataImpl 382,12042
  using OwnerTy 386,12116
  LLVMContext &Context;Context389,12171
  uint64_t NextIndex 390,12195
  SmallDenseMap<SmallDenseMap391,12221
  SmallDenseMap<void *, std::pair<OwnerTy, uint64_t>, 4> UseMap;391,12221
  ReplaceableMetadataImpl(394,12295
  ~ReplaceableMetadataImpl(396,12366
  LLVMContext &getContext(getContext400,12478
  unsigned getNumUses(420,13276
class ValueAsMetadata 450,14332
  Value *V;V454,14472
  void dropUsers(457,14534
  ValueAsMetadata(462,14642
  static ConstantAsMetadata *getConstant(getConstant472,14892
  static LocalAsMetadata *getLocal(getLocal476,14995
  static ConstantAsMetadata *getConstantIfExists(getConstantIfExists482,15147
  static LocalAsMetadata *getLocalIfExists(getLocalIfExists486,15274
  Value *getValue(getValue490,15400
  Type *getType(getType491,15440
  LLVMContext &getContext(getContext492,15489
  SmallVector<Metadata *> getAllArgListUsers(494,15552
  SmallVector<DPValue *> getAllDPValueUsers(497,15663
  void replaceAllUsesWith(510,16134
  static bool classof(515,16242
class ConstantAsMetadata 521,16409
  ConstantAsMetadata(524,16494
  static ConstantAsMetadata *get(get528,16591
  static ConstantAsMetadata *getIfExists(getIfExists532,16688
  Constant *getValue(getValue536,16801
  static bool classof(540,16893
class LocalAsMetadata 545,17003
  LocalAsMetadata(548,17085
  static LocalAsMetadata *get(get554,17245
  static LocalAsMetadata *getIfExists(getIfExists558,17341
  static bool classof(562,17453
namespace mdconst 615,19548
namespace detail 617,19569
template <class T, class Result> struct HasDereference 620,19619
  template <size_t N> struct SFINAE 623,19721
template <class V, class M> struct IsValidPointer 632,20031
  static const bool value 633,20083
                            HasDereference<HasDereference634,20150
                            HasDereference<M, const Metadata &>::value;value634,20150
template <class V, class M> struct IsValidReference 636,20225
  static const bool value 637,20279
                            std::is_convertible<std::is_convertible638,20346
                            std::is_convertible<M, const Metadata &>::value;value638,20346
hasa(649,20686
hasa(657,20949
extract(666,21199
extract(671,21377
extract_or_null(681,21687
dyn_extract(694,22173
dyn_extract_or_null(707,22697
class MDString 720,23091
  StringMapEntry<MDString> *Entry Entry723,23175
  MDString(725,23221
  static MDString *get(get733,23476
  unsigned getLength(739,23638
  using iterator 741,23709
  iterator begin(744,23797
  iterator end(747,23909
  const unsigned char *bytes_begin(bytes_begin749,23963
  const unsigned char *bytes_end(bytes_end750,24044
  static bool classof(753,24194
struct AAMDNodes 760,24422
  explicit AAMDNodes(762,24475
  bool operator==(operator==765,24599
  bool operator!=(operator!=770,24762
  explicit operator bool(operator bool772,24833
  MDNode *TBAA TBAA777,24969
  MDNode *TBAAStruct TBAAStruct780,25055
  MDNode *Scope Scope783,25153
  MDNode *NoAlias NoAlias786,25225
  AAMDNodes intersect(803,25982
  AAMDNodes shift(814,26467
  AAMDNodes extendTo(827,26933
struct DenseMapInfo<DenseMapInfo851,27924
  static inline AAMDNodes getEmptyKey(852,27957
  static inline AAMDNodes getTombstoneKey(857,28113
  static unsigned getHashValue(862,28277
  static bool isEqual(869,28586
class MDOperand 881,28970
  Metadata *MD MD882,28988
  MDOperand(887,29089
  MDOperand &operator=(operator=894,29274
  bool equalsStr(903,29499
  ~MDOperand(908,29645
  Metadata *get(get910,29676
  operator Metadata operator Metadata911,29715
  Metadata *operator->(operator->912,29763
  Metadata &operator*(operator*913,29812
  void reset(915,29862
  void reset(919,29916
  void track(926,30028
  void untrack(935,30202
template <> struct simplify_type<simplify_type942,30351
  using SimpleType 943,30397
  static SimpleType getSimplifiedValue(945,30431
template <> struct simplify_type<simplify_type948,30510
  using SimpleType 949,30562
  static SimpleType getSimplifiedValue(951,30596
class ContextAndReplaceableUses 958,30897
  PointerUnion<PointerUnion959,30931
  PointerUnion<LLVMContext *, ReplaceableMetadataImpl *> Ptr;959,30931
  ContextAndReplaceableUses(962,31002
  ContextAndReplaceableUses(963,31071
  ~ContextAndReplaceableUses(974,31630
  operator LLVMContext operator LLVMContext976,31695
  bool hasReplaceableUses(979,31790
  LLVMContext &getContext(getContext983,31879
  ReplaceableMetadataImpl *getReplaceableUses(getReplaceableUses989,32037
  ReplaceableMetadataImpl *getOrCreateReplaceableUses(getOrCreateReplaceableUses996,32260
  makeReplaceable(1007,32615
  std::unique_ptr<ReplaceableMetadataImpl> takeReplaceableUses(1018,33019
struct TempMDNodeDeleter 1027,33329
#define HANDLE_MDNODE_LEAF(1031,33406
#define HANDLE_MDNODE_BRANCH(1033,33552
class MDNode 1059,34785
  struct alignas(alignof(1071,35384
  Header &getHeader(getHeader1164,38457
  const Header &getHeader(getHeader1166,38532
  ContextAndReplaceableUses Context;1170,38631
  void operator delete(operator delete1181,38996
  void operator delete(operator delete1186,39130
  MDOperand *mutable_begin(mutable_begin1192,39258
  MDOperand *mutable_end(mutable_end1193,39330
  using mutable_op_range 1195,39399
  mutable_op_range mutable_operands(1197,39456
  LLVMContext &getContext(getContext1223,40422
  bool isResolved(1239,41098
  bool isUniqued(1241,41175
  bool isDistinct(1242,41231
  bool isTemporary(1243,41289
  bool isReplaceable(1245,41350
  bool isAlwaysReplaceable(1246,41430
  unsigned getNumTemporaryUses(1248,41512
  void replaceAllUsesWith(1256,41741
  static std::enable_if_t<std::enable_if_t1278,42477
  replaceWithPermanent(1279,42543
  static std::enable_if_t<std::enable_if_t1290,42925
  replaceWithUniqued(1291,42991
  static std::enable_if_t<std::enable_if_t1300,43327
  replaceWithDistinct(1301,43393
  unsigned getNumUnresolved(1341,44610
  void setNumUnresolved(1343,44685
  void resize(1353,45099
  static void dispatchRecalculateHash(1389,46081
  static void dispatchRecalculateHash(1393,46204
  static void dispatchResetHash(1395,46298
  static void dispatchResetHash(1399,46408
  using op_iterator 1407,46746
  using op_range 1408,46787
  op_iterator op_begin(1410,46836
  op_iterator op_end(1414,46930
  ArrayRef<MDOperand> operands(1418,47020
  const MDOperand &getOperand(getOperand1420,47095
  unsigned getNumOperands(1426,47280
  static bool classof(1429,47428
#define HANDLE_MDNODE_LEAF(1433,47540
class MDTuple 1462,48769
  MDTuple(1466,48857
  ~MDTuple(1472,49028
  void setHash(1474,49067
  TempMDTuple cloneImpl(1480,49300
  unsigned getHash(1488,49566
  static MDTuple *get(get1490,49621
  static MDTuple *getIfExists(getIfExists1494,49741
  static MDTuple *getDistinct(getDistinct1501,49997
  static TempMDTuple getTemporary(1510,50332
  TempMDTuple clone(1516,50555
  void push_back(1519,50673
  void pop_back(1526,50833
  static bool classof(1528,50886
MDTuple *MDNode::get(get1533,50985
MDTuple *MDNode::getIfExists(getIfExists1537,51096
MDTuple *MDNode::getDistinct(getDistinct1541,51223
TempMDTuple MDNode::getTemporary(getTemporary1545,51350
void TempMDNodeDeleter::operator()(operator()1550,51515
class AliasScopeNode 1557,51786
  const MDNode *Node Node1558,51809
  explicit AliasScopeNode(1562,51880
  const MDNode *getNode(getNode1565,51983
  const MDNode *getDomain(getDomain1568,52088
  StringRef getName(1573,52244
template <class T> class TypedMDOperandIterator 1585,52607
  MDNode::op_iterator I 1586,52657
  using iterator_category 1589,52701
  using value_type 1590,52754
  using difference_type 1591,52780
  using pointer 1592,52822
  using reference 1593,52846
  explicit TypedMDOperandIterator(1596,52910
  T *operator*(operator*1598,52978
  TypedMDOperandIterator &operator++(operator++1600,53034
  TypedMDOperandIterator operator++(1605,53107
  bool operator==(operator==1611,53221
  bool operator!=(operator!=1612,53299
template <class T> class MDTupleTypedArrayWrapper 1619,53538
  const MDTuple *N N1620,53590
  MDTupleTypedArrayWrapper(1624,53669
  MDTupleTypedArrayWrapper(1627,53746
  explicit MDTupleTypedArrayWrapper(1633,53944
  explicit operator bool(operator bool1638,54131
  explicit operator MDTuple operator MDTuple1639,54182
  MDTuple *get(get1641,54239
  MDTuple *operator->(operator->1642,54299
  MDTuple &operator*(operator*1643,54347
  unsigned size(1646,54447
  bool empty(1647,54512
  using iterator 1651,54713
  iterator begin(1653,54760
  iterator end(1654,54838
#define HANDLE_METADATA(1657,54916
class DistinctMDOperandPlaceholder 1676,55891
  Metadata **Use Use1679,55980
  explicit DistinctMDOperandPlaceholder(1682,56017
  ~DistinctMDOperandPlaceholder(1691,56360
  unsigned getID(1696,56436
  void replaceUseWith(1699,56528
class NamedMDNode 1721,57150
  std::string Name;1725,57259
  Module *Parent Parent1726,57279
  void *Operands;Operands1727,57307
  void setParent(1729,57359
  template <class T1, class T2> class op_iterator_impl 1733,57445
    op_iterator_impl(1739,57595
    bool operator==(operator==1750,57922
    bool operator!=(operator!=1751,58000
    op_iterator_impl &operator++(operator++1753,58079
    op_iterator_impl operator++(1758,58156
    op_iterator_impl &operator--(operator--1764,58275
    op_iterator_impl operator--(1769,58352
    T1 operator*(1775,58471
  void dropAllReferences(1786,58746
  inline Module *getParent(getParent1791,58934
  inline const Module *getParent(getParent1792,58982
  using op_iterator 1807,59527
  op_iterator op_begin(1809,59586
  op_iterator op_end(1810,59644
  using const_op_iterator 1812,59718
  const_op_iterator op_begin(1814,59789
  const_op_iterator op_end(1815,59865
  inline iterator_range<op_iterator>  operands(1817,59957
  inline iterator_range<const_op_iterator> operands(1820,60057

/usr/include/llvm/IR/Module.h,951
#define LLVM_IR_MODULE_H15,563
  enum ModFlagBehavior 115,4231
    Error 118,4366
    Warning 122,4524
    Require 131,5051
    Override 136,5263
    Append 139,5355
    AppendUnique 144,5548
    Max 147,5647
    Min 150,5737
    ModFlagBehaviorFirstVal 153,5767
    ModFlagBehaviorLastVal 154,5804
  struct ModuleFlagEntry 166,6320
    ModFlagBehavior Behavior;167,6347
    MDString *Key;Key168,6377
    Metadata *Val;Val169,6396
    ModuleFlagEntry(171,6416
  class debug_compile_units_iterator 801,32894
    NamedMDNode *CUs;CUs802,32933
    unsigned Idx;803,32955
    explicit debug_compile_units_iterator(814,33222
    debug_compile_units_iterator &operator++(operator++819,33358
    debug_compile_units_iterator operator++(825,33471
    bool operator==(operator==831,33603
    bool operator!=(operator!=835,33704
inline raw_ostream &operator<<(operator<<1064,41988
DEFINE_SIMPLE_CONVERSION_FUNCTIONS(1070,42157

/usr/include/llvm/IR/ModuleSummaryIndex.h,16907
#define LLVM_IR_MODULESUMMARYINDEX_H16,645
struct CalleeInfo 58,1662
  enum class HotnessType 59,1682
    Unknown 60,1719
    Cold 61,1736
    None 62,1750
    Hot 63,1764
    Critical 64,1777
  uint32_t Hotness 69,1908
  bool HasTailCall 72,2002
  static constexpr unsigned RelBlockFreqBits 76,2159
  uint32_t RelBlockFreq : RelBlockFreqBits;77,2210
  static constexpr int32_t ScaleShift 78,2254
  static constexpr uint64_t MaxRelBlockFreq 79,2297
  CalleeInfo(81,2373
  explicit CalleeInfo(84,2497
  void updateHotness(88,2669
  bool hasTailCall(92,2799
  void setHasTailCall(94,2851
  HotnessType getHotness(96,2917
  void updateRelBlockFreq(103,3242
inline const char *getHotnessName(getHotnessName117,3671
using GlobalValueSummaryList 135,4121
  union NameOrGV 138,4246
    NameOrGV(139,4265
    const GlobalValue *GV;GV150,4622
    StringRef Name;157,5011
using GlobalValueSummaryMapTy 174,5725
struct ValueInfo 179,5901
  enum Flags 180,5920
  enum Flags { HaveGV 180,5920
  enum Flags { HaveGV = 1, ReadOnly 180,5920
  enum Flags { HaveGV = 1, ReadOnly = 2, WriteOnly 180,5920
  PointerIntPair<PointerIntPair181,5978
      RefAndFlags;182,6048
  ValueInfo(185,6093
  explicit operator bool(operator bool190,6236
  GlobalValue::GUID getGUID(192,6291
  const GlobalValue *getValue(getValue193,6355
  ArrayRef<std::unique_ptr<GlobalValueSummary>> getSummaryList(198,6457
  StringRef name(202,6576
  bool haveGVs(207,6712
  bool isReadOnly(208,6777
  bool isWriteOnly(212,6891
  unsigned getAccessSpecifier(216,7007
  bool isValidAccessSpecifier(220,7147
  void setReadOnly(224,7310
  void setWriteOnly(230,7517
  const GlobalValueSummaryMapTy::value_type *getRef(getRef235,7643
inline raw_ostream &operator<<(operator<<252,8297
inline bool operator==(operator==259,8468
inline bool operator!=(operator!=265,8669
inline bool operator<(271,8870
template <> struct DenseMapInfo<DenseMapInfo277,9073
  static inline ValueInfo getEmptyKey(278,9118
  static inline ValueInfo getTombstoneKey(282,9237
  static inline bool isSpecialKey(286,9361
  static bool isEqual(290,9472
  static unsigned getHashValue(296,9746
struct CallsiteInfo 300,9870
  ValueInfo Callee;302,9921
  SmallVector<unsigned> Clones{Clones312,10483
  SmallVector<unsigned> StackIdIndices;318,10789
  CallsiteInfo(320,10830
  CallsiteInfo(322,10970
inline raw_ostream &operator<<(operator<<328,11194
enum class AllocationType 354,11903
  None 355,11941
  NotCold 356,11953
  Cold 357,11968
  Hot 358,11980
  All 359,11991
struct MIBInfo 363,12125
  AllocationType AllocType;365,12194
  SmallVector<unsigned> StackIdIndices;371,12493
  MIBInfo(373,12534
inline raw_ostream &operator<<(operator<<377,12687
struct AllocInfo 391,13024
  SmallVector<uint8_t> Versions;400,13597
  std::vector<MIBInfo> MIBs;403,13677
  AllocInfo(405,13707
  AllocInfo(408,13803
inline raw_ostream &operator<<(operator<<412,13941
class GlobalValueSummary 430,14364
  enum SummaryKind 433,14454
  enum SummaryKind : unsigned { AliasKind,433,14454
  enum SummaryKind : unsigned { AliasKind, FunctionKind,433,14454
  enum SummaryKind : unsigned { AliasKind, FunctionKind, GlobalVarKind 433,14454
  struct GVFlags 436,14599
    unsigned Linkage 444,15026
    unsigned Visibility 447,15087
    unsigned NotEligibleToImport 451,15256
    unsigned Live 458,15608
    unsigned DSOLocal 462,15745
    unsigned CanAutoHide 473,16414
    explicit GVFlags(476,16478
  SummaryKind Kind;487,16946
  GVFlags Flags;489,16967
  GlobalValue::GUID OriginalName 494,17195
  StringRef ModulePath;503,17595
  std::vector<ValueInfo> RefEdgeList;509,17888
  GlobalValueSummary(512,17938
  GlobalValue::GUID getOriginalName(523,18372
  void setOriginalName(526,18499
  SummaryKind getSummaryKind(529,18618
  void setModulePath(533,18769
  StringRef modulePath(536,18895
  GVFlags flags(539,19016
  GlobalValue::LinkageTypes linkage(542,19117
  void setLinkage(548,19366
  bool notEligibleToImport(553,19513
  bool isLive(555,19587
  void setLive(557,19633
  void setDSOLocal(559,19683
  bool isDSOLocal(561,19743
  void setCanAutoHide(563,19797
  bool canAutoHide(565,19875
  GlobalValue::VisibilityTypes getVisibility(567,19933
  void setVisibility(570,20051
  void setNotEligibleToImport(575,20205
  ArrayRef<ValueInfo> refs(578,20352
GlobalValueSummaryInfo::GlobalValueSummaryInfo(588,20684
class AliasSummary 591,20793
  ValueInfo AliaseeValueInfo;592,20842
  GlobalValueSummary *AliaseeSummary;AliaseeSummary598,21171
  AliasSummary(601,21218
        AliaseeSummary(603,21317
  static bool classof(606,21394
  void setAliasee(610,21501
  bool hasAliasee(615,21641
  const GlobalValueSummary &getAliasee(getAliasee622,21913
  GlobalValueSummary &getAliasee(getAliasee627,22063
  ValueInfo getAliaseeVI(631,22230
  GlobalValue::GUID getAliaseeGUID(635,22360
const inline GlobalValueSummary *GlobalValueSummary::getBaseObject(getBaseObject641,22514
inline GlobalValueSummary *GlobalValueSummary::getBaseObject(getBaseObject647,22686
class FunctionSummary 655,22933
  using EdgeTy 658,23045
  enum ForceSummaryHotnessType 661,23157
    FSHT_None,662,23201
    FSHT_AllNonCritical,663,23216
    FSHT_All664,23241
  struct VFuncId 671,23573
    GlobalValue::GUID GUID;672,23592
    uint64_t Offset;673,23620
  struct ConstVCall 679,23815
    VFuncId VFunc;680,23837
    std::vector<uint64_t> Args;681,23856
  struct TypeIdInfo 686,24038
    std::vector<GlobalValue::GUID> TypeTests;690,24243
    std::vector<VFuncId> TypeTestAssumeVCalls,695,24493
    std::vector<VFuncId> TypeTestAssumeVCalls, TypeCheckedLoadVCalls;695,24493
    std::vector<ConstVCall> TypeTestAssumeConstVCalls,700,24755
        TypeCheckedLoadConstVCalls;701,24810
  struct FFlags 705,24896
    unsigned ReadNone 708,25020
    unsigned ReadOnly 709,25047
    unsigned NoRecurse 710,25074
    unsigned ReturnDoesNotAlias 711,25102
    unsigned NoInline 714,25195
    unsigned AlwaysInline 716,25276
    unsigned NoUnwind 719,25432
    unsigned MayThrow 721,25523
    unsigned HasUnknownCall 724,25612
    unsigned MustBeUnreachable 731,25912
    FFlags &operator&=(operator&=733,25949
    bool anyFlagSet(747,26460
    operator std::string(string754,26742
  struct ParamAccess 774,27489
    struct Call 780,27779
      ValueInfo Callee;782,27825
      ConstantRange Offsets{Offsets783,27849
      Call(786,27948
    ConstantRange Use{Use795,28413
    std::vector<Call> Calls;800,28774
    ParamAccess(803,28833
  makeDummyFunctionSummary(810,29095
  static FunctionSummary ExternalNode;829,30016
  unsigned InstCount;834,30216
  FFlags FunFlags;837,30278
  uint64_t EntryCount 842,30464
  std::vector<EdgeTy> CallGraphEdgeList;845,30572
  std::unique_ptr<TypeIdInfo> TIdInfo;847,30614
  using ParamAccessesTy 850,30703
  std::unique_ptr<ParamAccessesTy> ParamAccesses;851,30755
  using CallsitesTy 859,31269
  std::unique_ptr<CallsitesTy> Callsites;860,31318
  using AllocsTy 869,31844
  std::unique_ptr<AllocsTy> Allocs;870,31887
  FunctionSummary(873,31932
  std::pair<std::pair902,33596
  static bool classof(905,33698
  FFlags fflags(910,33842
  void setNoRecurse(912,33888
  void setNoUnwind(914,33942
  unsigned instCount(917,34054
  uint64_t entryCount(920,34161
  void setEntryCount(923,34270
  ArrayRef<EdgeTy> calls(926,34388
  std::vector<EdgeTy> &mutableCalls(mutableCalls928,34452
  void addCall(930,34521
  ArrayRef<GlobalValue::GUID> type_tests(935,34751
  ArrayRef<VFuncId> type_test_assume_vcalls(944,35040
  ArrayRef<VFuncId> type_checked_load_vcalls(953,35338
  ArrayRef<ConstVCall> type_test_assume_const_vcalls(962,35631
  ArrayRef<ConstVCall> type_checked_load_const_vcalls(970,35925
  ArrayRef<ParamAccess> paramAccesses(977,36136
  void setParamAccesses(984,36313
  void addTypeTest(995,36726
  const TypeIdInfo *getTypeIdInfo(getTypeIdInfo1001,36882
  ArrayRef<CallsiteInfo> callsites(1003,36952
  CallsitesTy &mutableCallsites(mutableCallsites1009,37061
  void addCallsite(1014,37148
  ArrayRef<AllocInfo> allocs(1020,37305
  AllocsTy &mutableAllocs(mutableAllocs1026,37402
template <> struct DenseMapInfo<DenseMapInfo1034,37521
  static FunctionSummary::VFuncId getEmptyKey(1035,37581
  static FunctionSummary::VFuncId getTombstoneKey(1037,37660
  static bool isEqual(1041,37749
  static unsigned getHashValue(1045,37887
template <> struct DenseMapInfo<DenseMapInfo1048,37969
  static FunctionSummary::ConstVCall getEmptyKey(1049,38032
  static FunctionSummary::ConstVCall getTombstoneKey(1053,38126
  static bool isEqual(1057,38224
  static unsigned getHashValue(1063,38446
struct VirtFuncOffset 1070,38637
  VirtFuncOffset(1071,38661
  ValueInfo FuncVI;1074,38754
  uint64_t VTableOffset;1075,38774
using VTableFuncList 1078,38870
class GlobalVarSummary 1089,39414
  std::unique_ptr<VTableFuncList> VTableFuncs;1093,39606
  struct GVarFlags 1096,39662
    GVarFlags(1097,39683
    unsigned MaybeReadOnly 1107,40201
    unsigned MaybeWriteOnly 1111,40420
    unsigned Constant 1120,40925
    unsigned VCallVisibility 1123,41042
  } VarFlags;1124,41076
  GlobalVarSummary(1126,41091
  static bool classof(1132,41341
  GVarFlags varflags(1136,41452
  void setReadOnly(1137,41502
  void setWriteOnly(1138,41563
  bool maybeReadOnly(1139,41626
  bool maybeWriteOnly(1140,41690
  bool isConstant(1141,41756
  void setVCallVisibility(1142,41812
  GlobalObject::VCallVisibility getVCallVisibility(1145,41915
  void setVTableFuncs(1149,42049
  ArrayRef<VirtFuncOffset> vTableFuncs(1154,42196
struct TypeTestResolution 1161,42316
  enum Kind 1166,42605
    Unsat,1167,42619
    ByteArray,1168,42698
    Inline,1169,42752
    Single,1170,42820
    AllOnes,1171,42900
    Unknown,1173,43019
  } TheKind 1174,43085
  unsigned SizeM1BitWidth 1179,43298
  uint64_t AlignLog2 1186,43584
  uint64_t SizeM1 1187,43610
  uint8_t BitMask 1188,43633
  uint64_t InlineBits 1189,43656
struct WholeProgramDevirtResolution 1192,43687
  enum Kind 1193,43725
    Indir,1194,43739
    SingleImpl,1195,43793
    BranchFunnel,1196,43855
  } TheKind 1199,44045
  std::string SingleImplName;1201,44067
  struct ByArg 1203,44098
    enum Kind 1204,44115
      Indir,1205,44131
      UniformRetVal,1206,44191
      UniqueRetVal,1207,44254
      VirtualConstProp,1208,44316
  std::map<std::map1226,44947
  std::map<std::vector<uint64_t>, ByArg> ResByArg;1226,44947
struct TypeIdSummary 1229,45002
  TypeTestResolution TTRes;1230,45025
  std::map<std::map1234,45163
  std::map<uint64_t, WholeProgramDevirtResolution> WPDRes;1234,45163
using ModuleHash 1238,45244
using const_gvsummary_iterator 1241,45355
using gvsummary_iterator 1242,45429
using ModulePathStringTableTy 1246,45636
using GVSummaryMapTy 1250,45844
using TypeIdSummaryMapTy 1254,46019
struct TypeIdOffsetVtableInfo 1267,46787
  TypeIdOffsetVtableInfo(1268,46819
  uint64_t AddressPointOffset;1271,46928
  ValueInfo VTableVI;1272,46959
using TypeIdCompatibleVtableInfo 1278,47261
class ModuleSummaryIndex 1282,47450
  GlobalValueSummaryMapTy GlobalValueMap;1286,47617
  ModulePathStringTableTy ModulePathStringTable;1289,47740
  TypeIdSummaryMapTy TypeIdMap;1293,47908
  std::map<std::map1299,48227
      TypeIdCompatibleVtableMap;1300,48292
  std::map<std::map1304,48438
  std::map<GlobalValue::GUID, GlobalValue::GUID> OidGuidMap;1304,48438
  bool WithGlobalValueDeadStripping 1309,48672
  bool WithAttributePropagation 1314,48880
  bool WithDSOLocalPropagation 1318,49047
  bool WithWholeProgramVisibility 1321,49143
  bool HasSyntheticEntryCounts 1324,49264
  bool WithSupportsHotColdNew 1327,49386
  bool SkipModuleByDistributedBackend 1334,49739
  bool HaveGVs;1340,50033
  bool EnableSplitLTOUnit;1343,50130
  bool UnifiedLTO;1346,50234
  bool PartiallySplitLTOUnits 1350,50408
  bool HasParamAccess 1353,50514
  std::set<std::string> CfiFunctionDefs;1355,50546
  std::set<std::string> CfiFunctionDecls;1356,50587
  BumpPtrAllocator Alloc;1360,50773
  StringSaver Saver;1361,50799
  uint64_t BlockCount;1370,51297
  std::vector<uint64_t> StackIds;1376,51598
  std::map<std::map1380,51752
  std::map<uint64_t, unsigned> StackIdToIndex;1380,51752
  getOrInsertValuePtr(1386,51914
  ModuleSummaryIndex(1393,52110
  static constexpr uint64_t BitcodeSummaryVersion 1403,52671
  static constexpr const char *getRegularLTOModuleName(getRegularLTOModuleName1406,52771
  bool haveGVs(1410,52863
  uint64_t getBlockCount(1415,52970
  void addBlockCount(1416,53026
  void setBlockCount(1417,53080
  gvsummary_iterator begin(1419,53134
  const_gvsummary_iterator begin(1420,53198
  gvsummary_iterator end(1421,53274
  const_gvsummary_iterator end(1422,53334
  size_t size(1423,53406
  const std::vector<uint64_t> &stackIds(stackIds1425,53463
  unsigned addOrGetStackIdIndex(1427,53533
  uint64_t getStackIdAtIndex(1434,53756
  void releaseTemporaryMemory(1444,54234
  static void discoverNodes(1452,54499
  FunctionSummary calculateCallGraphRoot(1484,55450
  bool withGlobalValueDeadStripping(1513,56526
  void setWithGlobalValueDeadStripping(1516,56617
  bool withAttributePropagation(1520,56706
  void setWithAttributePropagation(1521,56783
  bool withDSOLocalPropagation(1525,56864
  void setWithDSOLocalPropagation(1526,56939
  bool withWholeProgramVisibility(1528,57012
  void setWithWholeProgramVisibility(1529,57093
  bool isReadOnly(1531,57172
  bool isWriteOnly(1534,57292
  bool hasSyntheticEntryCounts(1538,57415
  void setHasSyntheticEntryCounts(1539,57490
  bool withSupportsHotColdNew(1541,57563
  void setWithSupportsHotColdNew(1542,57636
  bool skipModuleByDistributedBackend(1544,57707
  void setSkipModuleByDistributedBackend(1547,57802
  bool enableSplitLTOUnit(1551,57895
  void setEnableSplitLTOUnit(1552,57960
  bool hasUnifiedLTO(1554,58023
  void setUnifiedLTO(1555,58075
  bool partiallySplitLTOUnits(1557,58122
  void setPartiallySplitLTOUnits(1558,58195
  bool hasParamAccess(1560,58266
  bool isGlobalValueLive(1562,58324
  ValueInfo getValueInfo(1569,58592
  ValueInfo getValueInfo(1574,58789
  ValueInfo getOrInsertValueInfo(1580,59003
  StringRef saveString(1587,59285
  ValueInfo getOrInsertValueInfo(1590,59418
  ValueInfo getOrInsertValueInfo(1598,59693
  GlobalValue::GUID getGUIDFromOriginalID(1606,59947
  std::set<std::string> &cfiFunctionDefs(cfiFunctionDefs1611,60130
  const std::set<std::string> &cfiFunctionDefs(cfiFunctionDefs1612,60201
  std::set<std::string> &cfiFunctionDecls(cfiFunctionDecls1614,60285
  const std::set<std::string> &cfiFunctionDecls(cfiFunctionDecls1615,60358
  void addGlobalValueSummary(1618,60490
  void addGlobalValueSummary(1624,60761
  void addGlobalValueSummary(1631,61078
  void addOriginalName(1643,61694
  GlobalValueSummary *findSummaryInModule(findSummaryInModule1655,62117
  GlobalValueSummary *findSummaryInModule(findSummaryInModule1669,62659
  GlobalValueSummary *getGlobalValueSummary(getGlobalValueSummary1679,63105
  const StringMap<ModuleHash> &modulePaths(modulePaths1692,63737
  StringMap<ModuleHash> &modulePaths(modulePaths1697,63877
  const ModuleHash &getModuleHash(getModuleHash1700,64018
  static std::string getGlobalNameForLocal(1708,64372
  static std::string getGlobalNameForLocal(1714,64640
  static StringRef getOriginalNameBeforePromote(1725,65150
  typedef ModulePathStringTableTy::value_type ModuleInfo;1730,65310
  ModuleInfo *addModule(addModule1734,65490
  ModuleInfo *getModule(getModule1739,65705
  const ModuleInfo *getModule(getModule1746,65961
  bool hasExportedFunctions(1755,66353
  const TypeIdSummaryMapTy &typeIds(typeIds1759,66476
  TypeIdSummary &getOrInsertTypeIdSummary(getOrInsertTypeIdSummary1764,66713
  const TypeIdSummary *getTypeIdSummary(getTypeIdSummary1776,67285
  TypeIdSummary *getTypeIdSummary(getTypeIdSummary1784,67583
  const auto &typeIdCompatibleVtableMap(typeIdCompatibleVtableMap1790,67777
  getOrInsertTypeIdCompatibleVtableSummary(1798,68083
  getTypeIdCompatibleVtableSummary(1805,68404
  collectDefinedGVSummariesPerModule(1821,68969
template <> struct GraphTraits<GraphTraits1852,70069
  typedef ValueInfo NodeRef;1853,70113
  using EdgeRef 1854,70142
  static NodeRef valueInfoFromEdge(1856,70188
  using ChildIteratorType 1859,70277
  using ChildEdgeIteratorType 1863,70429
  static NodeRef getEntryNode(1865,70510
  static ChildIteratorType child_begin(1867,70568
  static ChildIteratorType child_end(1877,71000
  static ChildEdgeIteratorType child_edge_begin(1887,71426
  static ChildEdgeIteratorType child_edge_end(1896,71769
  static NodeRef edge_dest(1905,72106
struct GraphTraits<GraphTraits1909,72180
  static NodeRef getEntryNode(1910,72255

/usr/include/llvm/IR/NoFolder.h,35
#define LLVM_IR_NOFOLDER_H22,1023

/usr/include/llvm/IR/OperandTraits.h,522
#define LLVM_IR_OPERANDTRAITS_H15,614
struct FixedNumOperandTraits 30,1138
  static Use *op_begin(op_begin31,1169
  static Use *op_end(op_end37,1397
  static unsigned operands(40,1475
template <typename SubClass,52,1918
template <typename SubClass, unsigned ARITY 52,1918
template <typename SubClass,67,2539
template <typename SubClass, unsigned MINARITY 67,2539
template <unsigned MINARITY 94,3527
#define DECLARE_TRANSPARENT_OPERAND_ACCESSORS(110,3980
#define DEFINE_TRANSPARENT_OPERAND_ACCESSORS(125,4536

/usr/include/llvm/IR/Operator.h,3452
#define LLVM_IR_OPERATOR_H15,573
class Operator 31,997
  unsigned getOpcode(41,1288
  static unsigned getOpcode(49,1560
  static bool classof(57,1820
  static bool classof(58,1880
  static bool classof(59,1941
class OverflowingBinaryOperator 75,2588
    AnyWrap 78,2657
    NoUnsignedWrap 79,2681
    NoSignedWrap 80,2712
  void setHasNoUnsignedWrap(87,2815
  void setHasNoSignedWrap(91,2955
  bool hasNoUnsignedWrap(99,3205
  bool hasNoSignedWrap(105,3400
  static bool classof(109,3493
  static bool classof(115,3737
  static bool classof(121,3987
class PossiblyExactOperator 129,4280
    IsExact 132,4345
  void setIsExact(139,4441
  bool isExact(145,4636
  static bool isPossiblyExactOpcode(149,4709
  static bool classof(156,4920
  static bool classof(159,5023
  static bool classof(162,5123
class FPMathOperator 170,5442
  void setFast(175,5558
  void setHasAllowReassoc(185,5768
  void setHasNoNaNs(191,5935
  void setHasNoInfs(197,6088
  void setHasNoSignedZeros(203,6241
  void setHasAllowReciprocal(209,6415
  void setHasAllowContract(215,6595
  void setHasApproxFunc(221,6773
  void setFastMathFlags(229,7047
  void copyFastMathFlags(235,7254
  bool isFast(241,7429
  bool hasAllowReassoc(252,8037
  bool hasNoNaNs(257,8219
  bool hasNoInfs(262,8394
  bool hasNoSignedZeros(267,8548
  bool hasAllowReciprocal(272,8736
  bool hasAllowContract(277,8919
  bool hasApproxFunc(283,9127
  FastMathFlags getFastMathFlags(288,9294
  static bool classof(297,9591
template<typename SuperClass,335,10802
class ConcreteOperator 336,10846
  static bool classof(338,10899
  static bool classof(341,10983
  static bool classof(344,11070
class AddOperator350,11256
class SubOperator353,11352
class MulOperator356,11448
class ShlOperator359,11544
class AShrOperator363,11641
class LShrOperator366,11735
class GEPOperator370,11830
    IsInBounds 376,11989
  void setIsInBounds(380,12052
  bool isInBounds(387,12258
  std::optional<unsigned> getInRangeIndex(393,12434
  inline op_iterator       idx_begin(399,12602
  inline const_op_iterator idx_begin(400,12672
  inline op_iterator       idx_end(401,12742
  inline const_op_iterator idx_end(402,12808
  inline iterator_range<op_iterator> indices(404,12875
  inline iterator_range<const_op_iterator> indices(408,12976
  Value *getPointerOperand(getPointerOperand412,13089
  const Value *getPointerOperand(getPointerOperand415,13150
  static unsigned getPointerOperandIndex(418,13223
  Type *getPointerOperandType(getPointerOperandType423,13413
  unsigned getPointerAddressSpace(431,13643
  unsigned getNumIndices(435,13754
  bool hasIndices(439,13857
  bool hasAllZeroIndices(446,14101
  bool hasAllConstantIndices(459,14528
  unsigned countNonConstantIndices(467,14723
class PtrToIntOperator509,16569
  Value *getPointerOperand(getPointerOperand515,16720
  const Value *getPointerOperand(getPointerOperand518,16781
  static unsigned getPointerOperandIndex(522,16855
  Type *getPointerOperandType(getPointerOperandType527,17045
  unsigned getPointerAddressSpace(532,17198
class BitCastOperator537,17324
  Type *getSrcTy(getSrcTy543,17476
  Type *getDestTy(getDestTy547,17545
class AddrSpaceCastOperator552,17603
  Value *getPointerOperand(getPointerOperand558,17773
  const Value *getPointerOperand(getPointerOperand560,17829
  unsigned getSrcAddressSpace(562,17897
  unsigned getDestAddressSpace(566,18011

/usr/include/llvm/IR/OptBisect.h,301
#define LLVM_IR_OPTBISECT_H15,563
class OptPassGate 24,779
  virtual bool shouldRunPass(30,936
  virtual bool isEnabled(36,1138
class OptBisect 43,1431
  bool isEnabled(68,2557
  void setLimit(72,2745
  static const int Disabled 77,2827
  int BisectLimit 80,2900
  int LastBisectNum 81,2930

/usr/include/llvm/IR/PassManager.h,8272
#define LLVM_IR_PASSMANAGER_H38,1897
namespace llvm 64,2564
template <class IRUnitT> inline bool shouldConvertDbgInfo(68,2715
template <> inline bool shouldConvertDbgInfo(71,2806
template <class IRUnitT> inline void doConvertDbgInfoToNew(74,2923
template <> inline void doConvertDbgInfoToNew(75,2998
template <class IRUnitT> inline void doConvertDebugInfoToOld(78,3090
template <> inline void doConvertDebugInfoToOld(79,3167
struct alignas(8) AnalysisKey 89,3599
struct alignas(8) AnalysisSetKey 99,4108
template <typename IRUnitT> class AllAnalysesOn 110,4610
  static AnalysisSetKey *ID(ID112,4668
  static AnalysisSetKey SetKey;115,4728
template <typename IRUnitT> AnalysisSetKey AllAnalysesOn<IRUnitT>::SetKey;SetKey118,4764
class CFGAnalyses 133,5473
  static AnalysisSetKey *ID(ID135,5501
  static AnalysisSetKey SetKey;138,5561
class PreservedAnalyses 172,7143
  static PreservedAnalyses none(175,7241
  static PreservedAnalyses all(178,7375
  static PreservedAnalyses allInSet(186,7609
  template <typename AnalysisT> void preserve(193,7768
  void preserve(197,7938
  template <typename AnalysisSetT> void preserveSet(208,8293
  void preserveSet(213,8445
  template <typename AnalysisT> void abandon(226,8912
  void abandon(235,9293
  void intersect(244,9594
  void intersect(266,10336
  class PreservedAnalysisChecker 286,10995
    const PreservedAnalyses &PA;PA289,11067
    AnalysisKey *const ID;290,11100
    const bool IsAbandoned;291,11127
    PreservedAnalysisChecker(296,11332
    bool preserved(303,11663
    bool preservedWhenStateless(311,12052
    template <typename AnalysisSetT> bool preservedSet(318,12291
  template <typename AnalysisT> PreservedAnalysisChecker getChecker(330,12784
  PreservedAnalysisChecker getChecker(339,13165
  bool areAllPreserved(347,13480
  template <typename AnalysisSetT> bool allAnalysesInSetPreserved(355,13751
  bool allAnalysesInSetPreserved(362,14029
  static AnalysisSetKey AllAnalysesKey;369,14283
  SmallPtrSet<SmallPtrSet372,14388
  SmallPtrSet<void *, 2> PreservedIDs;372,14388
  SmallPtrSet<SmallPtrSet381,14768
  SmallPtrSet<AnalysisKey *, 2> NotPreservedAnalysisIDs;381,14768
template <typename IRUnitT,385,14879
template <typename DerivedT> struct PassInfoMixin 391,15106
  static StringRef name(393,15209
  void printPipeline(401,15481
struct AnalysisInfoMixin 414,15957
  static AnalysisKey *ID(ID430,16835
namespace detail 437,17045
template <typename PassT,441,17202
template <typename PassT, typename IRUnitT,441,17202
template <typename PassT, typename IRUnitT, typename AnalysisManagerT,441,17202
          typename... ArgTs,442,17273
getAnalysisResultUnpackTuple(444,17339
template <typename PassT,456,17858
template <typename PassT, typename IRUnitT,456,17858
template <typename PassT, typename IRUnitT, typename... AnalysisArgTs,456,17858
getAnalysisResult(459,17985
template <typename IRUnitT,486,19213
          typename AnalysisManagerT 487,19241
  PassManager &operator=(operator=501,19861
using ModulePassManager 611,23983
using FunctionPassManager 616,24136
class PassInstrumentationAnalysis623,24495
  static AnalysisKey Key;626,24648
  PassInstrumentationCallbacks *Callbacks;Callbacks628,24675
  PassInstrumentationAnalysis(633,24830
  using Result 636,24944
  template <typename IRUnitT,638,24983
  template <typename IRUnitT, typename AnalysisManagerT,638,24983
  Result run(639,25064
template <typename IRUnitT,649,25379
template <typename IRUnitT, typename... ExtraArgTs> class AnalysisManager 649,25379
  using ResultConceptT 655,25572
      detail::AnalysisResultConcept<IRUnitT, PreservedAnalyses,656,25597
  using PassConceptT 657,25675
      detail::AnalysisPassConcept<IRUnitT, PreservedAnalyses,658,25698
      detail::AnalysisPassConcept<IRUnitT, PreservedAnalyses, Invalidator,658,25698
  using AnalysisResultListT 667,26142
  using AnalysisResultListMapT 671,26310
  using AnalysisResultMapT 676,26560
  class Invalidator 690,27291
    bool invalidate(708,28247
    bool invalidate(722,28881
    Invalidator(760,30439
    SmallDenseMap<SmallDenseMap764,30639
    SmallDenseMap<AnalysisKey *, bool, 8> &IsResultInvalidated;IsResultInvalidated764,30639
    const AnalysisResultMapT &Results;Results765,30703
  bool empty(774,30973
  void clear(794,31878
  typename PassT::Result &getResult(getResult803,32119
  typename PassT::Result *getCachedResult(getCachedResult822,32850
  void verifyNotInvalidated(839,33503
  bool registerPass(865,34847
  PassConceptT &lookUpPass(lookUpPass889,35693
  const PassConceptT &lookUpPass(lookUpPass897,35995
  ResultConceptT *getCachedResultImpl(getCachedResultImpl909,36506
  using AnalysisPassMapT 916,36816
  AnalysisPassMapT AnalysisPasses;920,36958
  AnalysisResultListMapT AnalysisResultLists;926,37199
  AnalysisResultMapT AnalysisResults;930,37334
using ModuleAnalysisManager 936,37481
using FunctionAnalysisManager 941,37646
template <typename AnalysisManagerT,959,38605
template <typename AnalysisManagerT, typename IRUnitT,959,38605
class InnerAnalysisManagerProxy960,38684
  class Result 964,38822
    explicit Result(966,38849
    Result(968,38920
    ~Result(975,39191
    Result &operator=(operator=985,39504
    AnalysisManagerT &getManager(getManager995,39844
    AnalysisManagerT *InnerAM;InnerAM1012,40643
  explicit InnerAnalysisManagerProxy(1015,40680
  Result run(1023,41050
  static AnalysisKey Key;1032,41284
  AnalysisManagerT *InnerAM;InnerAM1034,41311
template <typename AnalysisManagerT,1037,41344
template <typename AnalysisManagerT, typename IRUnitT,1037,41344
    InnerAnalysisManagerProxy<AnalysisManagerT, IRUnitT, ExtraArgTs...>::Key;Key1039,41435
using FunctionAnalysisManagerModuleProxy 1042,41577
template <typename AnalysisManagerT,1084,43888
template <typename AnalysisManagerT, typename IRUnitT,1084,43888
class OuterAnalysisManagerProxy1085,43967
  class Result 1090,44180
    explicit Result(1092,44207
    template <typename PassT,1096,44377
    typename PassT::Result *getCachedResult(getCachedResult1097,44430
    template <typename PassT,1106,44768
    bool cachedResultExists(1107,44821
    bool invalidate(1114,45080
    template <typename OuterAnalysisT,1139,46103
    void registerOuterAnalysisInvalidation(1140,46173
    const SmallDenseMap<SmallDenseMap1155,46918
    getOuterInvalidations(1156,46992
    const AnalysisManagerT *OuterAM;OuterAM1161,47089
    SmallDenseMap<SmallDenseMap1165,47243
        OuterAnalysisInvalidationMap;1166,47309
  OuterAnalysisManagerProxy(1169,47353
  Result run(1175,47600
      OuterAnalysisManagerProxy<AnalysisManagerT, IRUnitT,1182,47768
  static AnalysisKey Key;1184,47845
  const AnalysisManagerT *OuterAM;OuterAM1186,47872
template <typename AnalysisManagerT,1189,47911
template <typename AnalysisManagerT, typename IRUnitT,1189,47911
    OuterAnalysisManagerProxy<AnalysisManagerT, IRUnitT, ExtraArgTs...>::Key;Key1191,48002
using ModuleAnalysisManagerFunctionProxy 1196,48274
class ModuleToFunctionPassAdaptor1222,49587
  using PassConceptT 1225,49687
  explicit ModuleToFunctionPassAdaptor(1227,49767
  static bool isRequired(1236,50225
  std::unique_ptr<PassConceptT> Pass;1239,50279
  bool EagerlyInvalidate;1240,50317
createModuleToFunctionPassAdaptor(1247,50497
template <typename AnalysisT,1269,51567
template <typename AnalysisT, typename IRUnitT,1269,51567
          typename AnalysisManagerT 1270,51615
struct InvalidateAnalysisPass1300,52881
  template <typename IRUnitT,1308,53264
  template <typename IRUnitT, typename AnalysisManagerT,1308,53264
  PreservedAnalyses run(1309,53345
  void printPipeline(1314,53513
struct InvalidateAllAnalysesPass 1326,53970
  template <typename IRUnitT,1328,54090
  template <typename IRUnitT, typename AnalysisManagerT,1328,54090
  PreservedAnalyses run(1329,54171
class RepeatedPass 1339,54548
  RepeatedPass(1341,54621
  template <typename IRUnitT,1344,54710
  template <typename IRUnitT, typename AnalysisManagerT,1344,54710
  PreservedAnalyses run(1345,54783
  void printPipeline(1369,55752
  int Count;1377,55986
  PassT P;1378,55999
RepeatedPass<PassT> createRepeatedPass(1382,56040

/usr/include/llvm/IR/PassManagerInternal.h,3219
#define LLVM_IR_PASSMANAGERINTERNAL_H18,791
struct PassConcept 38,1392
  virtual StringRef name(54,2099
struct PassModel 70,2821
  explicit PassModel(71,2896
  PassModel(74,3067
  PassModel(75,3121
  PassModel &operator=(operator=82,3291
  PreservedAnalysesT run(87,3376
  void printPipeline(92,3545
  StringRef name(98,3721
  using has_required_t 101,3806
  static std::enable_if_t<std::enable_if_t104,3900
  passIsRequiredImpl(105,3971
  static std::enable_if_t<!is_detected<has_required_t, T>::value,value109,4052
  passIsRequiredImpl(110,4124
  bool isRequired(114,4172
  PassT Pass;116,4248
template <typename IRUnitT,123,4399
template <typename IRUnitT, typename PreservedAnalysesT,123,4399
struct AnalysisResultConcept 124,4479
template <typename IRUnitT,148,5591
template <typename IRUnitT, typename ResultT> class ResultHasInvalidateMethod 148,5591
  using EnabledType 149,5671
  struct DisabledType 150,5699
    char a,151,5723
    char a, b;151,5723
  template <typename T> struct Nonce 157,5935
  template <typename T,167,6476
  struct CheckerBase 168,6555
  struct CheckerBase { int invalidate;168,6555
  template <typename T> struct Checker 169,6597
  enum { Value 179,6946
template <typename IRUnitT,188,7355
template <typename IRUnitT, typename PassT,188,7355
template <typename IRUnitT, typename PassT, typename ResultT,188,7355
          typename PreservedAnalysesT,189,7417
          typename PreservedAnalysesT, typename InvalidatorT,189,7417
          bool HasInvalidateHandler 190,7479
template <typename IRUnitT,196,7714
template <typename IRUnitT, typename PassT,196,7714
template <typename IRUnitT, typename PassT, typename ResultT,196,7714
          typename PreservedAnalysesT,197,7776
    : AnalysisResultConcept<AnalysisResultConcept200,7958
  AnalysisResultModel &operator=(operator=213,8522
template <typename IRUnitT,235,9280
template <typename IRUnitT, typename PassT,235,9280
template <typename IRUnitT, typename PassT, typename ResultT,235,9280
          typename PreservedAnalysesT,236,9342
    : AnalysisResultConcept<AnalysisResultConcept239,9523
  AnalysisResultModel &operator=(operator=252,10087
template <typename IRUnitT,270,10577
template <typename IRUnitT, typename PreservedAnalysesT,270,10577
template <typename IRUnitT, typename PreservedAnalysesT, typename InvalidatorT,270,10577
struct AnalysisPassConcept 272,10691
  virtual std::unique_ptr<std::unique_ptr278,10906
template <typename IRUnitT,292,11487
template <typename IRUnitT, typename PassT,292,11487
template <typename IRUnitT, typename PassT, typename PreservedAnalysesT,292,11487
          typename InvalidatorT,293,11560
struct AnalysisPassModel 294,11617
  explicit AnalysisPassModel(296,11771
  AnalysisPassModel(299,11950
  AnalysisPassModel(300,12020
  AnalysisPassModel &operator=(operator=307,12222
  using ResultModelT 313,12393
      AnalysisResultModel<IRUnitT, PassT,314,12416
      AnalysisResultModel<IRUnitT, PassT, typename PassT::Result,314,12416
                          PreservedAnalysesT,315,12482
  std::unique_ptr<std::unique_ptr320,12663
  run(322,12754
  StringRef name(331,13111
  PassT Pass;333,13172

/usr/include/llvm/IR/PassTimingInfo.h,443
#define LLVM_IR_PASSTIMINGINFO_H16,632
class TimePassesHandler 44,1576
  TimerGroup PassTG;51,1934
  TimerGroup AnalysisTG;52,1955
  StringMap<TimerVector> TimingData;56,2090
  SmallVector<SmallVector60,2208
  SmallVector<Timer *, 8> PassActiveTimerStack;60,2208
  SmallVector<SmallVector63,2348
  SmallVector<Timer *, 8> AnalysisActiveTimerStack;63,2348
  bool Enabled;70,2606
  bool PerRun;71,2622
  ~TimePassesHandler(78,2803

/usr/include/llvm/IR/PatternMatch.h,30463
#define LLVM_IR_PATTERNMATCH_H29,1337
template <typename Pattern> bool match(53,1968
template <typename SubPattern_t> struct OneUse_match 57,2097
  SubPattern_t SubPattern;58,2152
  OneUse_match(60,2180
  template <typename OpTy> bool match(62,2240
template <typename T> inline OneUse_match<T> m_OneUse(67,2347
template <typename Class> struct class_match 71,2448
  template <typename ITy> bool match(72,2495
inline class_match<Value> m_Value(76,2614
inline class_match<UnaryOperator> m_UnOp(79,2738
inline class_match<BinaryOperator> m_BinOp(84,2880
inline class_match<CmpInst> m_Cmp(89,3021
struct undef_match 91,3093
  static bool check(92,3114
  template <typename ITy> bool match(130,4124
inline auto m_Undef(136,4395
inline class_match<PoisonValue> m_Poison(139,4484
inline class_match<Constant> m_Constant(144,4616
inline class_match<ConstantInt> m_ConstantInt(147,4745
inline class_match<ConstantFP> m_ConstantFP(152,4884
struct constantexpr_match 156,4971
  template <typename ITy> bool match(157,4999
inline constantexpr_match m_ConstantExpr(165,5253
inline class_match<BasicBlock> m_BasicBlock(168,5386
template <typename Ty> struct match_unless 173,5495
  Ty M;174,5540
  match_unless(176,5549
  template <typename ITy> bool match(178,5600
template <typename Ty> inline match_unless<Ty> m_Unless(182,5722
template <typename LTy,187,5851
template <typename LTy, typename RTy> struct match_combine_or 187,5851
  LTy L;188,5915
  RTy R;189,5924
  match_combine_or(191,5934
  template <typename ITy> bool match(193,6012
template <typename LTy,202,6163
template <typename LTy, typename RTy> struct match_combine_and 202,6163
  LTy L;203,6228
  RTy R;204,6237
  match_combine_and(206,6247
  template <typename ITy> bool match(208,6326
template <typename LTy,217,6511
inline match_combine_or<LTy, RTy> m_CombineOr(218,6549
template <typename LTy,223,6720
inline match_combine_and<LTy, RTy> m_CombineAnd(224,6758
struct apint_match 228,6883
  const APInt *&Res;Res229,6904
  bool AllowUndef;230,6925
  apint_match(232,6945
  template <typename ITy> bool match(235,7040
struct apfloat_match 253,7627
  const APFloat *&Res;Res254,7650
  bool AllowUndef;255,7673
  apfloat_match(257,7693
  template <typename ITy> bool match(260,7792
inline apint_match m_APInt(278,8333
inline apint_match m_APIntAllowUndef(284,8561
inline apint_match m_APIntForbidUndef(289,8739
inline apfloat_match m_APFloat(295,8963
inline apfloat_match m_APFloatAllowUndef(301,9201
inline apfloat_match m_APFloatForbidUndef(306,9389
template <int64_t Val> struct constantint_match 310,9510
  template <typename ITy> bool match(311,9560
template <int64_t Val> inline constantint_match<Val> m_ConstantInt(326,10072
template <typename Predicate,333,10387
struct cstval_pred_ty 334,10439
  template <typename ITy> bool match(335,10482
using cst_pred_ty 372,11814
using cstfp_pred_ty 376,11957
template <typename Predicate> struct api_pred_ty 380,12153
  const APInt *&Res;Res381,12223
  api_pred_ty(383,12245
  template <typename ITy> bool match(385,12289
template <typename Predicate> struct apf_pred_ty 406,12981
  const APFloat *&Res;Res407,13051
  apf_pred_ty(409,13075
  template <typename ITy> bool match(411,13121
struct is_any_apint 439,14086
  bool isValue(440,14108
inline cst_pred_ty<is_any_apint> m_AnyIntegralConstant(444,14284
struct is_shifted_mask 448,14384
  bool isValue(449,14409
inline cst_pred_ty<is_shifted_mask> m_ShiftedMask(452,14474
struct is_all_ones 456,14572
  bool isValue(457,14593
inline cst_pred_ty<is_all_ones> m_AllOnes(461,14769
struct is_maxsignedvalue 465,14855
  bool isValue(466,14882
inline cst_pred_ty<is_maxsignedvalue> m_MaxSignedValue(471,15117
inline api_pred_ty<is_maxsignedvalue> m_MaxSignedValue(474,15221
struct is_negative 478,15310
  bool isValue(479,15331
inline cst_pred_ty<is_negative> m_Negative(483,15509
inline api_pred_ty<is_negative> m_Negative(486,15595
struct is_nonnegative 488,15670
  bool isValue(489,15694
inline cst_pred_ty<is_nonnegative> m_NonNegative(493,15879
inline api_pred_ty<is_nonnegative> m_NonNegative(496,15974
struct is_strictlypositive 498,16055
  bool isValue(499,16084
inline cst_pred_ty<is_strictlypositive> m_StrictlyPositive(503,16279
inline api_pred_ty<is_strictlypositive> m_StrictlyPositive(506,16389
struct is_nonpositive 510,16482
  bool isValue(511,16506
inline cst_pred_ty<is_nonpositive> m_NonPositive(515,16691
inline api_pred_ty<is_nonpositive> m_NonPositive(518,16786
struct is_one 520,16867
  bool isValue(521,16883
inline cst_pred_ty<is_one> m_One(525,17070
struct is_zero_int 527,17140
  bool isValue(528,17161
inline cst_pred_ty<is_zero_int> m_ZeroInt(532,17349
struct is_zero 536,17435
  template <typename ITy> bool match(537,17452
inline is_zero m_Zero(545,17825
struct is_power2 547,17872
  bool isValue(548,17891
inline cst_pred_ty<is_power2> m_Power2(552,18061
inline api_pred_ty<is_power2> m_Power2(553,18139
struct is_negated_power2 555,18210
  bool isValue(556,18237
inline cst_pred_ty<is_negated_power2> m_NegatedPower2(560,18421
inline api_pred_ty<is_negated_power2> m_NegatedPower2(563,18524
struct is_power2_or_zero 567,18612
  bool isValue(568,18639
inline cst_pred_ty<is_power2_or_zero> m_Power2OrZero(572,18830
inline api_pred_ty<is_power2_or_zero> m_Power2OrZero(575,18932
struct is_sign_mask 579,19019
  bool isValue(580,19041
inline cst_pred_ty<is_sign_mask> m_SignMask(584,19230
struct is_lowbit_mask 588,19319
  bool isValue(589,19343
inline cst_pred_ty<is_lowbit_mask> m_LowBitMask(593,19527
inline api_pred_ty<is_lowbit_mask> m_LowBitMask(596,19621
struct icmp_pred_with_threshold 598,19701
  ICmpInst::Predicate Pred;599,19735
  const APInt *Thr;Thr600,19763
  bool isValue(601,19783
m_SpecificInt_ICMP(606,20066
struct is_nan 613,20244
  bool isValue(614,20260
inline cstfp_pred_ty<is_nan> m_NaN(618,20462
struct is_nonnan 620,20536
  bool isValue(621,20555
inline cstfp_pred_ty<is_nonnan> m_NonNaN(625,20713
struct is_inf 629,20798
  bool isValue(630,20814
inline cstfp_pred_ty<is_inf> m_Inf(634,20998
struct is_noninf 636,21072
  bool isValue(637,21091
inline cstfp_pred_ty<is_noninf> m_NonInf(641,21279
struct is_finite 645,21364
  bool isValue(646,21383
inline cstfp_pred_ty<is_finite> m_Finite(650,21568
inline apf_pred_ty<is_finite> m_Finite(653,21652
struct is_finitenonzero 655,21725
  bool isValue(656,21751
inline cstfp_pred_ty<is_finitenonzero> m_FiniteNonZero(660,21926
inline apf_pred_ty<is_finitenonzero> m_FiniteNonZero(663,22031
struct is_any_zero_fp 667,22120
  bool isValue(668,22144
inline cstfp_pred_ty<is_any_zero_fp> m_AnyZeroFP(672,22328
struct is_pos_zero_fp 676,22426
  bool isValue(677,22450
inline cstfp_pred_ty<is_pos_zero_fp> m_PosZeroFP(681,22620
struct is_neg_zero_fp 685,22718
  bool isValue(686,22742
inline cstfp_pred_ty<is_neg_zero_fp> m_NegZeroFP(690,22912
struct is_non_zero_fp 694,23010
  bool isValue(695,23034
inline cstfp_pred_ty<is_non_zero_fp> m_NonZeroFP(699,23199
template <typename Class> struct bind_ty 705,23378
  Class *&VR;VR706,23421
  bind_ty(708,23436
  template <typename ITy> bool match(710,23469
inline bind_ty<Value> m_Value(720,23668
inline bind_ty<const Value> m_Value(721,23723
inline bind_ty<Instruction> m_Instruction(724,23843
inline bind_ty<UnaryOperator> m_UnOp(726,23970
inline bind_ty<BinaryOperator> m_BinOp(728,24095
inline bind_ty<WithOverflowInst> m_WithOverflowInst(730,24231
m_WithOverflowInst(734,24360
inline bind_ty<Constant> m_Constant(739,24479
inline bind_ty<ConstantInt> m_ConstantInt(742,24602
inline bind_ty<ConstantFP> m_ConstantFP(745,24735
inline bind_ty<ConstantExpr> m_ConstantExpr(748,24865
inline bind_ty<BasicBlock> m_BasicBlock(751,24999
inline bind_ty<const BasicBlock> m_BasicBlock(752,25069
m_ImmConstant(759,25318
m_ImmConstant(766,25573
struct specificval_ty 771,25702
  const Value *Val;Val772,25726
  specificval_ty(774,25747
  template <typename ITy> bool match(776,25793
inline specificval_ty m_Specific(780,25912
template <typename Class> struct deferredval_ty 784,26085
  Class *const &Val;Val785,26135
  deferredval_ty(787,26157
  template <typename ITy> bool match(789,26204
inline deferredval_ty<Value> m_Deferred(798,26650
inline deferredval_ty<const Value> m_Deferred(799,26721
struct specific_fpval 805,26895
  double Val;806,26919
  specific_fpval(808,26934
  template <typename ITy> bool match(810,26974
inline specific_fpval m_SpecificFP(823,27433
inline specific_fpval m_FPOne(826,27573
struct bind_const_intval_ty 828,27636
  uint64_t &VR;VR829,27666
  bind_const_intval_ty(831,27683
  template <typename ITy> bool match(833,27731
template <bool AllowUndefs> struct specific_intval 845,28042
  APInt Val;846,28095
  specific_intval(848,28109
  template <typename ITy> bool match(850,28160
inline specific_intval<false> m_SpecificInt(862,28575
inline specific_intval<false> m_SpecificInt(866,28680
inline specific_intval<true> m_SpecificIntAllowUndef(870,28779
inline specific_intval<true> m_SpecificIntAllowUndef(874,28892
inline bind_const_intval_ty m_ConstantInt(880,29115
struct specific_bbval 883,29226
  BasicBlock *Val;Val884,29250
  specific_bbval(886,29270
  template <typename ITy> bool match(888,29319
inline specific_bbval m_SpecificBB(895,29488
inline deferredval_ty<BasicBlock> m_Deferred(900,29625
m_Deferred(904,29750
template <typename LHS_t,911,29928
template <typename LHS_t, typename RHS_t,911,29928
template <typename LHS_t, typename RHS_t, bool Commutable 911,29928
template <typename LHS,929,30527
inline AnyBinaryOp_match<LHS, RHS> m_BinOp(930,30565
template <typename OP_t> struct AnyUnaryOp_match 938,30858
  OP_t X;939,30909
  AnyUnaryOp_match(941,30920
  template <typename OpTy> bool match(943,30965
template <typename OP_t> inline AnyUnaryOp_match<OP_t> m_UnOp(950,31126
template <typename LHS_t,958,31372
template <typename LHS_t, typename RHS_t,958,31372
template <typename LHS_t, typename RHS_t, unsigned Opcode,958,31372
          bool Commutable 959,31431
template <typename LHS,981,32148
inline BinaryOp_match<LHS, RHS, Instruction::Add> m_Add(982,32186
template <typename LHS,987,32390
inline BinaryOp_match<LHS, RHS, Instruction::FAdd> m_FAdd(988,32428
template <typename LHS,993,32637
inline BinaryOp_match<LHS, RHS, Instruction::Sub> m_Sub(994,32675
template <typename LHS,999,32879
inline BinaryOp_match<LHS, RHS, Instruction::FSub> m_FSub(1000,32917
template <typename Op_t> struct FNeg_match 1005,33126
  Op_t X;1006,33171
  FNeg_match(1008,33182
  template <typename OpTy> bool match(1009,33222
template <typename OpTy> inline FNeg_match<OpTy> m_FNeg(1036,33959
m_FNegNSZ(1043,34205
template <typename LHS,1047,34269
inline BinaryOp_match<LHS, RHS, Instruction::Mul> m_Mul(1048,34307
template <typename LHS,1053,34511
inline BinaryOp_match<LHS, RHS, Instruction::FMul> m_FMul(1054,34549
template <typename LHS,1059,34758
inline BinaryOp_match<LHS, RHS, Instruction::UDiv> m_UDiv(1060,34796
template <typename LHS,1065,35005
inline BinaryOp_match<LHS, RHS, Instruction::SDiv> m_SDiv(1066,35043
template <typename LHS,1071,35252
inline BinaryOp_match<LHS, RHS, Instruction::FDiv> m_FDiv(1072,35290
template <typename LHS,1077,35499
inline BinaryOp_match<LHS, RHS, Instruction::URem> m_URem(1078,35537
template <typename LHS,1083,35746
inline BinaryOp_match<LHS, RHS, Instruction::SRem> m_SRem(1084,35784
template <typename LHS,1089,35993
inline BinaryOp_match<LHS, RHS, Instruction::FRem> m_FRem(1090,36031
template <typename LHS,1095,36240
inline BinaryOp_match<LHS, RHS, Instruction::And> m_And(1096,36278
template <typename LHS,1101,36482
inline BinaryOp_match<LHS, RHS, Instruction::Or> m_Or(1102,36520
template <typename LHS,1107,36719
inline BinaryOp_match<LHS, RHS, Instruction::Xor> m_Xor(1108,36757
template <typename LHS,1113,36961
inline BinaryOp_match<LHS, RHS, Instruction::Shl> m_Shl(1114,36999
template <typename LHS,1119,37203
inline BinaryOp_match<LHS, RHS, Instruction::LShr> m_LShr(1120,37241
template <typename LHS,1125,37450
inline BinaryOp_match<LHS, RHS, Instruction::AShr> m_AShr(1126,37488
template <typename LHS_t,1131,37697
template <typename LHS_t, typename RHS_t,1131,37697
template <typename LHS_t, typename RHS_t, unsigned Opcode,1131,37697
          unsigned WrapFlags 1132,37756
template <typename LHS,1156,38461
m_NSWAdd(1159,38634
template <typename LHS,1164,38897
m_NSWSub(1167,39070
template <typename LHS,1172,39333
m_NSWMul(1175,39506
template <typename LHS,1180,39769
m_NSWShl(1183,39942
template <typename LHS,1189,40206
m_NUWAdd(1192,40381
template <typename LHS,1197,40577
m_NUWSub(1200,40752
template <typename LHS,1205,40948
m_NUWMul(1208,41123
template <typename LHS,1213,41319
m_NUWShl(1216,41494
template <typename LHS_t,1222,41691
template <typename LHS_t, typename RHS_t,1222,41691
template <typename LHS_t, typename RHS_t, bool Commutable 1222,41691
template <typename LHS,1236,42189
inline SpecificBinaryOp_match<LHS, RHS> m_BinOp(1237,42227
template <typename LHS,1242,42430
template <typename LHS, typename RHS,1242,42430
template <typename LHS, typename RHS, bool Commutable 1242,42430
template <typename LHS,1262,43052
inline DisjointOr_match<LHS, RHS> m_DisjointOr(1263,43090
template <typename LHS,1267,43213
inline DisjointOr_match<LHS, RHS, true> m_c_DisjointOr(1268,43251
template <typename LHS,1274,43484
m_AddLike(1277,43642
template <typename LHS_t,1284,43873
template <typename LHS_t, typename RHS_t,1284,43873
struct BinOpPred_match 1285,43935
  LHS_t L;1286,43972
  RHS_t R;1287,43983
  BinOpPred_match(1289,43995
  template <typename OpTy> bool match(1291,44070
struct is_shift_op 1299,44305
  bool isOpType(1300,44326
struct is_right_shift_op 1303,44404
  bool isOpType(1304,44431
struct is_logical_shift_op 1309,44545
  bool isOpType(1310,44574
struct is_bitwiselogic_op 1315,44687
  bool isOpType(1316,44715
struct is_idiv_op 1321,44808
  bool isOpType(1322,44828
struct is_irem_op 1327,44942
  bool isOpType(1328,44962
template <typename LHS,1334,45106
inline BinOpPred_match<LHS, RHS, is_shift_op> m_Shift(1335,45144
template <typename LHS,1341,45378
inline BinOpPred_match<LHS, RHS, is_right_shift_op> m_Shr(1342,45416
template <typename LHS,1348,45664
m_LogicalShift(1350,45756
template <typename LHS,1355,45905
m_BitwiseLogic(1357,45996
template <typename LHS,1362,46147
inline BinOpPred_match<LHS, RHS, is_idiv_op> m_IDiv(1363,46185
template <typename LHS,1369,46418
inline BinOpPred_match<LHS, RHS, is_irem_op> m_IRem(1370,46456
template <typename SubPattern_t> struct Exact_match 1378,46771
  SubPattern_t SubPattern;1379,46825
  Exact_match(1381,46853
  template <typename OpTy> bool match(1383,46912
template <typename T> inline Exact_match<T> m_Exact(1390,47095
template <typename LHS_t,1398,47311
template <typename LHS_t, typename RHS_t,1398,47311
template <typename LHS_t, typename RHS_t, typename Class,1398,47311
template <typename LHS_t, typename RHS_t, typename Class, typename PredicateTy,1398,47311
          bool Commutable 1399,47391
template <typename LHS,1425,48156
m_Cmp(1427,48255
template <typename LHS,1431,48396
m_ICmp(1433,48497
template <typename LHS,1437,48642
m_FCmp(1439,48743
template <typename T0,1448,49103
template <typename T0, unsigned Opcode> struct OneOps_match 1448,49103
  T0 Op1;1449,49165
  OneOps_match(1451,49176
  template <typename OpTy> bool match(1453,49221
template <typename T0,1463,49500
template <typename T0, typename T1,1463,49500
template <typename T0, typename T1, unsigned Opcode> struct TwoOps_match 1463,49500
  T0 Op1;1464,49575
  T1 Op2;1465,49585
  TwoOps_match(1467,49596
  template <typename OpTy> bool match(1469,49666
template <typename T0,1479,49976
template <typename T0, typename T1,1479,49976
template <typename T0, typename T1, typename T2,1479,49976
struct ThreeOps_match 1480,50042
  T0 Op1;1481,50066
  T1 Op2;1482,50076
  T2 Op3;1483,50086
  ThreeOps_match(1485,50097
  template <typename OpTy> bool match(1488,50200
template <unsigned Opcode,1499,50561
template <unsigned Opcode, typename... OperandTypes> struct AnyOps_match 1499,50561
  std::tuple<OperandTypes...> Operands;1500,50636
  AnyOps_match(1502,50677
  template <int Idx,1508,51045
  std::enable_if_t<Idx != Last, bool> match_operands(1509,51076
  template <int Idx,1513,51234
  std::enable_if_t<std::enable_if_t1514,51265
  std::enable_if_t<Idx == Last, bool> match_operands(1514,51265
  template <typename OpTy> bool match(1518,51409
template <typename Cond,1529,51740
template <typename Cond, typename LHS,1529,51740
m_Select(1531,51852
template <int64_t L,1537,52065
template <int64_t L, int64_t R,1537,52065
m_SelectCst(1540,52227
inline OneOps_match<OpTy, Instruction::Freeze> m_Freeze(1546,52370
template <typename Val_t,1551,52532
template <typename Val_t, typename Elt_t,1551,52532
m_InsertElt(1553,52661
template <typename Val_t,1559,52860
m_ExtractElt(1561,52965
template <typename T0,1566,53116
template <typename T0, typename T1,1566,53116
template <typename T0, typename T1, typename T2> struct Shuffle_match 1566,53116
  T0 Op1;1567,53188
  T1 Op2;1568,53198
  T2 Mask;1569,53208
  Shuffle_match(1571,53220
  template <typename OpTy> bool match(1574,53325
struct m_Mask 1583,53579
  ArrayRef<int> &MaskRef;MaskRef1584,53595
  m_Mask(1585,53621
  bool match(1586,53676
struct m_ZeroMask 1592,53756
  bool match(1593,53776
struct m_SpecificMask 1598,53894
  ArrayRef<int> &MaskRef;MaskRef1599,53918
  m_SpecificMask(1600,53944
  bool match(1601,54007
struct m_SplatOrUndefMask 1604,54072
  int &SplatIndex;SplatIndex1605,54100
  m_SplatOrUndefMask(1606,54119
  bool match(1607,54185
template <typename V1_t,1618,54540
m_Shuffle(1620,54640
template <typename V1_t,1624,54758
template <typename V1_t, typename V2_t,1624,54758
m_Shuffle(1626,54856
inline OneOps_match<OpTy, Instruction::Load> m_Load(1632,55028
template <typename ValueOpTy,1637,55176
m_Store(1639,55292
inline auto m_GEP(1646,55581
template <typename Op_t,1654,55826
template <typename Op_t, unsigned Opcode> struct CastOperator_match 1654,55826
  Op_t Op;1655,55896
  CastOperator_match(1657,55908
  template <typename OpTy> bool match(1659,55968
template <typename Op_t,1666,56153
template <typename Op_t, unsigned Opcode> struct CastInst_match 1666,56153
  Op_t Op;1667,56219
  CastInst_match(1669,56231
  template <typename OpTy> bool match(1671,56287
template <typename Op_t> struct PtrToIntSameSize_match 1678,56475
  const DataLayout &DL;DL1679,56532
  Op_t Op;1680,56556
  PtrToIntSameSize_match(1682,56568
  template <typename OpTy> bool match(1685,56668
template <typename Op_t> struct NNegZExt_match 1695,57002
  Op_t Op;1696,57051
  NNegZExt_match(1698,57063
  template <typename OpTy> bool match(1700,57119
m_BitCast(1711,57449
m_PtrToInt(1718,57643
inline PtrToIntSameSize_match<OpTy> m_PtrToIntSameSize(1723,57762
m_IntToPtr(1731,58064
inline CastOperator_match<OpTy, Instruction::Trunc> m_Trunc(1737,58202
m_TruncOrSelf(1743,58443
inline CastInst_match<OpTy, Instruction::SExt> m_SExt(1749,58560
inline CastInst_match<OpTy, Instruction::ZExt> m_ZExt(1755,58732
inline NNegZExt_match<OpTy> m_NNegZExt(1760,58886
m_ZExtOrSelf(1766,59077
m_SExtOrSelf(1772,59245
m_SExtLike(1780,59493
m_ZExtOrSExt(1787,59730
m_ZExtOrSExtOrSelf(1796,59995
inline CastInst_match<OpTy, Instruction::UIToFP> m_UIToFP(1801,60104
inline CastInst_match<OpTy, Instruction::SIToFP> m_SIToFP(1806,60264
inline CastInst_match<OpTy, Instruction::FPToUI> m_FPToUI(1811,60424
inline CastInst_match<OpTy, Instruction::FPToSI> m_FPToSI(1816,60584
m_FPTrunc(1822,60794
inline CastInst_match<OpTy, Instruction::FPExt> m_FPExt(1827,60907
struct br_match 1835,61154
  BasicBlock *&Succ;Succ1836,61172
  br_match(1838,61194
  template <typename OpTy> bool match(1840,61241
inline br_match m_UnconditionalBr(1850,61460
template <typename Cond_t,1852,61541
template <typename Cond_t, typename TrueBlock_t,1852,61541
struct brc_match 1853,61613
  Cond_t Cond;1854,61632
  TrueBlock_t T;1855,61647
  FalseBlock_t F;1856,61664
  brc_match(1858,61683
  template <typename OpTy> bool match(1861,61789
m_Br(1871,62144
template <typename Cond_t,1876,62317
template <typename Cond_t, typename TrueBlock_t,1876,62317
m_Br(1878,62441
template <typename CmpInst_t,1886,62738
template <typename CmpInst_t, typename LHS_t,1886,62738
template <typename CmpInst_t, typename LHS_t, typename RHS_t,1886,62738
template <typename CmpInst_t, typename LHS_t, typename RHS_t, typename Pred_t,1886,62738
          bool Commutable 1887,62817
struct smax_pred_ty 1937,64828
  static bool match(1938,64850
struct smin_pred_ty 1944,65029
  static bool match(1945,65051
struct umax_pred_ty 1951,65232
  static bool match(1952,65254
struct umin_pred_ty 1958,65435
  static bool match(1959,65457
struct ofmax_pred_ty 1965,65637
  static bool match(1966,65660
struct ofmin_pred_ty 1972,65840
  static bool match(1973,65863
struct ufmax_pred_ty 1979,66045
  static bool match(1980,66068
struct ufmin_pred_ty 1986,66250
  static bool match(1987,66273
template <typename LHS,1992,66396
inline MaxMin_match<ICmpInst, LHS, RHS, smax_pred_ty> m_SMax(1993,66434
template <typename LHS,1998,66652
inline MaxMin_match<ICmpInst, LHS, RHS, smin_pred_ty> m_SMin(1999,66690
template <typename LHS,2004,66908
inline MaxMin_match<ICmpInst, LHS, RHS, umax_pred_ty> m_UMax(2005,66946
template <typename LHS,2010,67164
inline MaxMin_match<ICmpInst, LHS, RHS, umin_pred_ty> m_UMin(2011,67202
template <typename LHS,2016,67420
m_MaxOrMin(2022,67761
template <typename LHS,2036,68495
inline MaxMin_match<FCmpInst, LHS, RHS, ofmax_pred_ty> m_OrdFMax(2037,68533
template <typename LHS,2051,69325
inline MaxMin_match<FCmpInst, LHS, RHS, ofmin_pred_ty> m_OrdFMin(2052,69363
template <typename LHS,2066,70157
m_UnordFMax(2068,70250
template <typename LHS,2081,70928
m_UnordFMin(2083,71021
template <typename LHS_t,2092,71357
template <typename LHS_t, typename RHS_t,2092,71357
struct UAddWithOverflow_match 2093,71415
  LHS_t L;2094,71447
  RHS_t R;2095,71458
  Sum_t S;2096,71469
  UAddWithOverflow_match(2098,71481
  template <typename OpTy> bool match(2101,71583
template <typename LHS_t,2155,73534
template <typename LHS_t, typename RHS_t,2155,73534
m_UAddWithOverflow(2157,73636
template <typename Opnd_t> struct Argument_match 2161,73771
  unsigned OpI;2162,73822
  Opnd_t Val;2163,73838
  Argument_match(2165,73853
  template <typename OpTy> bool match(2167,73928
template <unsigned OpI,2176,74181
inline Argument_match<Opnd_t> m_Argument(2177,74222
struct IntrinsicID_match 2182,74352
  unsigned ID;2183,74379
  IntrinsicID_match(2185,74395
  template <typename OpTy> bool match(2187,74454
template <typename T0 2199,74950
template <typename T0> struct m_Intrinsic_Ty<m_Intrinsic_Ty2204,75234
  using Ty 2205,75285
template <typename T0,2207,75359
  using Ty 2208,75427
template <typename T0,2211,75521
template <typename T0, typename T1,2211,75521
  using Ty 2213,75606
template <typename T0,2216,75729
template <typename T0, typename T1,2216,75729
template <typename T0, typename T1, typename T2,2216,75729
  using Ty 2218,75831
template <typename T0,2222,75959
template <typename T0, typename T1,2222,75959
template <typename T0, typename T1, typename T2,2222,75959
template <typename T0, typename T1, typename T2, typename T3,2222,75959
  using Ty 2224,76078
template <typename T0,2228,76210
template <typename T0, typename T1,2228,76210
template <typename T0, typename T1, typename T2,2228,76210
template <typename T0, typename T1, typename T2, typename T3,2228,76210
template <typename T0, typename T1, typename T2, typename T3, typename T4,2228,76210
  using Ty 2231,76356
template <Intrinsic::ID IntrID> inline IntrinsicID_match m_Intrinsic(2237,76574
template <typename Opnd0,2242,76720
template <typename Opnd0, typename Opnd1,2242,76720
template <typename Opnd0, typename Opnd1, typename Opnd2,2242,76720
m_MaskedLoad(2244,76857
template <typename Opnd0,2250,77062
template <typename Opnd0, typename Opnd1,2250,77062
template <typename Opnd0, typename Opnd1, typename Opnd2,2250,77062
m_MaskedGather(2252,77199
template <Intrinsic::ID IntrID,2257,77374
inline typename m_Intrinsic_Ty<T0>::Ty m_Intrinsic(2258,77419
template <Intrinsic::ID IntrID,2262,77556
template <Intrinsic::ID IntrID, typename T0,2262,77556
inline typename m_Intrinsic_Ty<T0, T1>::Ty m_Intrinsic(2263,77614
template <Intrinsic::ID IntrID,2268,77828
template <Intrinsic::ID IntrID, typename T0,2268,77828
template <Intrinsic::ID IntrID, typename T0, typename T1,2268,77828
m_Intrinsic(2270,77946
template <Intrinsic::ID IntrID,2274,78082
template <Intrinsic::ID IntrID, typename T0,2274,78082
template <Intrinsic::ID IntrID, typename T0, typename T1,2274,78082
template <Intrinsic::ID IntrID, typename T0, typename T1, typename T2,2274,78082
m_Intrinsic(2277,78227
template <Intrinsic::ID IntrID,2281,78383
template <Intrinsic::ID IntrID, typename T0,2281,78383
template <Intrinsic::ID IntrID, typename T0, typename T1,2281,78383
template <Intrinsic::ID IntrID, typename T0, typename T1, typename T2,2281,78383
          typename T3,2282,78454
m_Intrinsic(2284,78545
template <Intrinsic::ID IntrID,2290,78755
template <Intrinsic::ID IntrID, typename T0,2290,78755
template <Intrinsic::ID IntrID, typename T0, typename T1,2290,78755
template <Intrinsic::ID IntrID, typename T0, typename T1, typename T2,2290,78755
          typename T3,2291,78826
          typename T3, typename T4,2291,78826
m_Intrinsic(2293,78934
inline typename m_Intrinsic_Ty<Opnd0>::Ty m_BitReverse(2301,79236
inline typename m_Intrinsic_Ty<Opnd0>::Ty m_BSwap(2306,79390
inline typename m_Intrinsic_Ty<Opnd0>::Ty m_FAbs(2311,79534
inline typename m_Intrinsic_Ty<Opnd0>::Ty m_FCanonicalize(2316,79676
template <typename Opnd0,2320,79809
inline typename m_Intrinsic_Ty<Opnd0, Opnd1>::Ty m_FMin(2321,79851
template <typename Opnd0,2326,80055
inline typename m_Intrinsic_Ty<Opnd0, Opnd1>::Ty m_FMax(2327,80097
template <typename Opnd0,2332,80301
template <typename Opnd0, typename Opnd1,2332,80301
m_FShl(2334,80415
template <typename Opnd0,2338,80535
template <typename Opnd0, typename Opnd1,2338,80535
m_FShr(2340,80649
inline typename m_Intrinsic_Ty<Opnd0>::Ty m_Sqrt(2345,80795
template <typename Opnd0,2349,80911
inline typename m_Intrinsic_Ty<Opnd0, Opnd1>::Ty m_CopySign(2350,80953
inline typename m_Intrinsic_Ty<Opnd0>::Ty m_VecReverse(2356,81193
template <typename LHS,2365,81560
inline AnyBinaryOp_match<LHS, RHS, true> m_c_BinOp(2366,81598
template <typename LHS,2372,81853
m_c_ICmp(2374,81960
template <typename LHS,2380,82248
m_c_BinOp(2382,82332
template <typename LHS,2387,82507
inline BinaryOp_match<LHS, RHS, Instruction::Add, true> m_c_Add(2388,82545
template <typename LHS,2394,82823
inline BinaryOp_match<LHS, RHS, Instruction::Mul, true> m_c_Mul(2395,82861
template <typename LHS,2401,83140
inline BinaryOp_match<LHS, RHS, Instruction::And, true> m_c_And(2402,83178
template <typename LHS,2408,83456
inline BinaryOp_match<LHS, RHS, Instruction::Or, true> m_c_Or(2409,83494
template <typename LHS,2415,83768
inline BinaryOp_match<LHS, RHS, Instruction::Xor, true> m_c_Xor(2416,83806
m_Neg(2424,84166
m_NSWNeg(2433,84481
m_Not(2442,84800
template <typename ValTy> struct NotForbidUndef_match 2446,84861
  ValTy Val;2447,84917
  NotForbidUndef_match(2448,84930
  template <typename OpTy> bool match(2450,84982
inline NotForbidUndef_match<ValTy> m_NotForbidUndef(2467,85693
template <typename LHS,2472,85861
m_c_SMin(2474,85959
template <typename LHS,2478,86123
m_c_SMax(2480,86221
template <typename LHS,2484,86384
m_c_UMin(2486,86482
template <typename LHS,2490,86645
m_c_UMax(2492,86743
template <typename LHS,2496,86854
m_c_MaxOrMin(2502,87219
template <Intrinsic::ID IntrID,2507,87398
template <Intrinsic::ID IntrID, typename T0,2507,87398
m_c_Intrinsic(2510,87578
template <typename LHS,2516,87783
m_c_FAdd(2518,87878
template <typename LHS,2523,88037
m_c_FMul(2525,88132
template <typename Opnd_t> struct Signum_match 2529,88240
  Opnd_t Val;2530,88289
  Signum_match(2531,88303
  template <typename OpTy> bool match(2533,88348
template <typename Val_t> inline Signum_match<Val_t> m_Signum(2565,89199
template <int Ind,2569,89315
template <int Ind, typename Opnd_t> struct ExtractValue_match 2569,89315
  Opnd_t Val;2570,89379
  ExtractValue_match(2571,89393
  template <typename OpTy> bool match(2573,89444
template <int Ind,2587,89883
inline ExtractValue_match<Ind, Val_t> m_ExtractValue(2588,89918
inline ExtractValue_match<-1, Val_t> m_ExtractValue(2595,90152
template <int Ind,2600,90324
template <int Ind, typename T0,2600,90324
template <int Ind, typename T0, typename T1> struct InsertValue_match 2600,90324
  T0 Op0;2601,90396
  T1 Op1;2602,90406
  InsertValue_match(2604,90417
  template <typename OpTy> bool match(2606,90492
template <int Ind,2616,90817
template <int Ind, typename Val_t,2616,90817
inline InsertValue_match<Ind, Val_t, Elt_t> m_InsertValue(2617,90868
struct VScaleVal_match 2626,91319
  template <typename ITy> bool match(2627,91344
inline VScaleVal_match m_VScale(2648,91960
template <typename LHS,2652,92027
template <typename LHS, typename RHS,2652,92027
template <typename LHS, typename RHS, unsigned Opcode,2652,92027
template <typename LHS, typename RHS, unsigned Opcode, bool Commutable 2652,92027
template <typename LHS,2701,93615
inline LogicalOp_match<LHS, RHS, Instruction::And> m_LogicalAnd(2702,93653
inline auto m_LogicalAnd(2708,93929
template <typename LHS,2711,94057
m_c_LogicalAnd(2713,94152
template <typename LHS,2719,94380
inline LogicalOp_match<LHS, RHS, Instruction::Or> m_LogicalOr(2720,94418
inline auto m_LogicalOr(2726,94689
template <typename LHS,2729,94815
m_c_LogicalOr(2731,94909
template <typename LHS,2738,95167
template <typename LHS, typename RHS,2738,95167
template <typename LHS, typename RHS, bool Commutable 2738,95167
inline auto m_LogicalOp(2746,95519
template <typename LHS,2749,95662
inline auto m_c_LogicalOp(2750,95700

/usr/include/llvm/IR/ProfDataUtils.h,39
#define LLVM_IR_PROFDATAUTILS_H16,585

/usr/include/llvm/IR/ProfileSummary.h,1412
#define LLVM_IR_PROFILESUMMARY_H14,547
struct ProfileSummaryEntry 33,1124
  const uint32_t Cutoff;34,1153
  const uint64_t MinCount;35,1221
  const uint64_t NumCounts;36,1293
  ProfileSummaryEntry(38,1366
using SummaryEntryVector 43,1556
class ProfileSummary 45,1618
  enum Kind 47,1649
  enum Kind { PSK_Instr,47,1649
  enum Kind { PSK_Instr, PSK_CSInstr,47,1649
  enum Kind { PSK_Instr, PSK_CSInstr, PSK_Sample 47,1649
  const Kind PSK;50,1711
  const SummaryEntryVector DetailedSummary;51,1729
  const uint64_t TotalCount,52,1773
  const uint64_t TotalCount, MaxCount,52,1773
  const uint64_t TotalCount, MaxCount, MaxInternalCount,52,1773
  const uint64_t TotalCount, MaxCount, MaxInternalCount, MaxFunctionCount;52,1773
  const uint32_t NumCounts,53,1848
  const uint32_t NumCounts, NumFunctions;53,1848
  bool Partial 59,2190
  double PartialProfileRatio 64,2500
  static const int Scale 69,2644
  ProfileSummary(71,2681
  Kind getKind(82,3319
  const SummaryEntryVector &getDetailedSummary(getDetailedSummary88,3629
  uint32_t getNumFunctions(89,3706
  uint64_t getMaxFunctionCount(90,3766
  uint32_t getNumCounts(91,3834
  uint64_t getTotalCount(92,3888
  uint64_t getMaxCount(93,3944
  uint64_t getMaxInternalCount(94,3996
  void setPartialProfile(95,4064
  bool isPartialProfile(96,4116
  double getPartialProfileRatio(97,4168
  void setPartialProfileRatio(98,4240

/usr/include/llvm/IR/ReplaceConstant.h,41
#define LLVM_IR_REPLACECONSTANT_H15,594

/usr/include/llvm/IR/SSAContext.h,282
#define LLVM_IR_SSACONTEXT_H16,598
template <> struct GenericSSATraits<GenericSSATraits31,880
  using BlockT 32,928
  using FunctionT 33,957
  using InstructionT 34,987
  using ValueRefT 35,1023
  using ConstValueRefT 36,1052
  using UseT 37,1092
using SSAContext 40,1116

/usr/include/llvm/IR/SafepointIRVerifier.h,151
#define LLVM_IR_SAFEPOINTIRVERIFIER_H19,889
class SafepointIRVerifierPass 37,1431
  PreservedAnalyses run(42,1569
  static bool isRequired(44,1637

/usr/include/llvm/IR/StructuralHash.h,40
#define LLVM_IR_STRUCTURALHASH_H15,596

/usr/include/llvm/IR/SymbolTableListTraits.h,625
#define LLVM_IR_SYMBOLTABLELISTTRAITS_H25,1193
template <typename NodeTy> struct SymbolTableListParentType 47,1711
#define DEFINE_SYMBOL_TABLE_PARENT_TYPE(49,1776
#undef DEFINE_SYMBOL_TABLE_PARENT_TYPE58,2311
class SymbolTableListTraits 67,2675
  using iterator = typename simple_ilist<ValueSubClass, Args...>::iterator;iterator69,2806
  ItemParentClass *getListOwner(getListOwner79,3171
  static ListTy &getList(getList89,3649
  static ValueSymbolTable *getSymTab(getSymTab93,3770
  static ValueSymbolTable *toPtr(toPtr105,4186
  static ValueSymbolTable *toPtr(toPtr106,4254
class SymbolTableList 115,4616

/usr/include/llvm/IR/Type.h,2707
#define LLVM_IR_TYPE_H15,588
class Type 45,1551
  enum TypeID 54,2017
    HalfTyID 56,2055
    BFloatTyID,57,2106
    FloatTyID,58,2177
    DoubleTyID,59,2228
    X86_FP80TyID,60,2279
    FP128TyID,61,2336
    PPC_FP128TyID,62,2410
    VoidTyID,63,2485
    LabelTyID,64,2527
    MetadataTyID,65,2558
    X86_MMXTyID,66,2591
    X86_AMXTyID,67,2651
    TokenTyID,68,2713
    IntegerTyID,71,2794
    FunctionTyID,72,2852
    PointerTyID,73,2891
    StructTyID,74,2929
    ArrayTyID,75,2969
    FixedVectorTyID,76,3005
    ScalableVectorTyID,77,3063
    TypedPointerTyID,78,3118
    TargetExtTyID,79,3186
  LLVMContext &Context;Context84,3321
  TypeID   ID 86,3346
  unsigned SubclassData 87,3415
  explicit Type(94,3679
  unsigned getSubclassData(98,3791
  void setSubclassData(100,3852
  void print(123,4829
  TypeID getTypeID(137,5301
  bool isVoidTy(140,5381
  bool isHalfTy(143,5502
  bool isBFloatTy(146,5624
  bool is16bitFPTy(149,5739
  bool isFloatTy(154,5899
  bool isDoubleTy(157,6024
  bool isX86_FP80Ty(160,6135
  bool isFP128Ty(163,6242
  bool isPPC_FP128Ty(166,6355
  bool isIEEELikeFPTy(171,6637
  bool isFloatingPointTy(185,6921
  bool isMultiUnitFPType(194,7304
  const fltSemantics &getFltSemantics(getFltSemantics198,7385
  bool isX86_AMXTy(204,7576
  bool isTargetExtTy(207,7697
  bool isScalableTargetExtTy(210,7845
  bool isLabelTy(219,8170
  bool isMetadataTy(222,8274
  bool isTokenTy(225,8381
  bool isIntegerTy(228,8494
  bool isIntegerTy(231,8625
  bool isIntOrIntVectorTy(238,8924
  bool isIntOrPtrTy(243,9097
  bool isFunctionTy(246,9220
  bool isStructTy(249,9338
  bool isArrayTy(252,9451
  bool isPointerTy(255,9564
  LLVM_DEPRECATED(258,9691
  bool isPtrOrPtrVectorTy(262,9888
  inline bool isVectorTy(265,10015
  bool canLosslesslyBitCastTo(273,10423
  bool isSingleValueType(287,10953
  bool isAggregateType(295,11367
  bool isSized(302,11659
  TypeSize getPrimitiveSizeInBits(330,12987
  subtype_iterator subtype_begin(359,14021
  subtype_iterator subtype_end(360,14087
  ArrayRef<Type*> subtypes(361,14168
  subtype_reverse_iterator subtype_rbegin(367,14340
  subtype_reverse_iterator subtype_rend(370,14448
  Type *getContainedType(getContainedType377,14735
  unsigned getNumContainedTypes(383,14925
  Type *getArrayElementType(getArrayElementType404,15815
  Type *getNonOpaquePointerElementType(getNonOpaquePointerElementType415,16213
  template <typename ScalarTy> static Type *getScalarTy(getScalarTy466,18405
inline raw_ostream &operator<<(operator<<501,19761
  static inline bool doit(508,19976
DEFINE_ISA_CONVERSION_FUNCTIONS(514,20141
inline LLVMTypeRef *wrap(wrap522,20321

/usr/include/llvm/IR/VFABIDemangler.h,1438
#define LLVM_IR_VFABIDEMANGLER_H14,541
enum class VFParamKind 25,804
  Vector,26,829
  OMP_Linear,27,878
  OMP_LinearRef,28,925
  OMP_LinearVal,29,977
  OMP_LinearUVal,30,1029
  OMP_LinearPos,31,1082
  OMP_LinearValPos,32,1142
  OMP_LinearRefPos,33,1207
  OMP_LinearUValPos,34,1272
  OMP_Uniform,35,1338
  GlobalPredicate,36,1386
  Unknown40,1658
enum class VFISAKind 44,1727
  AdvancedSIMD,45,1750
  SVE,46,1798
  SSE,47,1851
  AVX,48,1878
  AVX2,49,1905
  AVX512,50,1933
  LLVM,51,1963
  Unknown 53,2079
struct VFParameter 62,2405
  unsigned ParamPos;63,2426
  VFParamKind ParamKind;64,2497
  int LinearStepOrPos 65,2548
  Align Alignment 66,2615
  bool operator=69,2719
struct VFShape 82,3198
  ElementCount VF;83,3215
  SmallVector<SmallVector84,3282
  SmallVector<VFParameter, 8> Parameters;84,3282
  bool operator==(operator==86,3384
  void updateParam(91,3570
  static VFShape getScalarShape(99,3884
  static VFShape get(107,4291
struct VFInfo 123,4896
  VFShape Shape;124,4912
  std::string ScalarName;125,4981
  std::string VectorName;126,5033
  VFISAKind ISA;127,5111
  std::optional<unsigned> getParamIndexForOptionalMask(131,5272
  bool isMasked(142,5672
namespace VFABI 145,5755
static constexpr char const *_LLVM_ _LLVM_147,5829
static constexpr char const *_LLVM_Scalarize_ _LLVM_Scalarize_154,6227
static constexpr char const *MappingsAttrName MappingsAttrName189,7809

/usr/include/llvm/IR/Value.h,5638
#define LLVM_IR_VALUE_H14,520
class Value 74,2345
  const unsigned char SubclassID;75,2359
  unsigned char HasValueHandle 76,2437
  unsigned char SubclassOptionalData 84,2791
  unsigned short SubclassData;92,3082
  enum : unsigned 107,3640
  enum : unsigned { NumUserOperandsBits 107,3640
  unsigned NumUserOperands : NumUserOperandsBits;108,3688
  unsigned IsUsedByMD 111,3813
  unsigned HasName 112,3840
  unsigned HasMetadata 113,3864
  unsigned HasHungOffUses 114,3926
  unsigned HasDescriptor 115,3957
  Type *VTy;VTy118,3997
  Use *UseList;UseList119,4010
  class use_iterator_impl 125,4217
    UseT *U;U128,4270
    explicit use_iterator_impl(130,4284
    use_iterator_impl(139,4548
    bool operator==(operator==141,4582
    bool operator!=(operator!=142,4657
    use_iterator_impl &operator++(operator++144,4739
    use_iterator_impl operator++(150,4897
    UseT &operator*(operator*156,5018
    UseT *operator->(operator->161,5127
    operator use_iterator_impl<const operator use_iterator_impl<const163,5182
  class user_iterator_impl 169,5359
    use_iterator_impl<Use> UI;170,5388
    explicit user_iterator_impl(171,5419
    bool operator==(operator==183,5747
    bool operator!=(operator!=184,5825
    bool atEnd(187,5983
    user_iterator_impl &operator++(operator++189,6049
    user_iterator_impl operator++(194,6143
    UserTy *operator*(operator*201,6312
    UserTy *operator->(operator->205,6379
    operator user_iterator_impl<const operator user_iterator_impl<const207,6435
    Use &getUse(getUse211,6550
  Type *getType(getType255,8106
  bool hasName(261,8277
  enum class ReplaceMetadataUses 267,8428
  enum class ReplaceMetadataUses { No,267,8428
  enum class ReplaceMetadataUses { No, Yes 267,8428
  void assertModuleIsMaterialized(338,11425
  bool use_empty(344,11534
  bool materialized_use_empty(349,11631
  use_iterator materialized_use_begin(356,11814
  const_use_iterator materialized_use_begin(357,11888
  use_iterator use_begin(360,11986
  const_use_iterator use_begin(364,12090
  use_iterator use_end(368,12206
  const_use_iterator use_end(369,12258
  iterator_range<use_iterator> materialized_uses(370,12328
  iterator_range<const_use_iterator> materialized_uses(373,12445
  iterator_range<use_iterator> uses(376,12574
  iterator_range<const_use_iterator> uses(380,12684
  bool user_empty(385,12807
  user_iterator materialized_user_begin(393,13018
  const_user_iterator materialized_user_begin(394,13095
  user_iterator user_begin(397,13196
  const_user_iterator user_begin(401,13303
  user_iterator user_end(405,13422
  const_user_iterator user_end(406,13477
  User *user_back(user_back407,13550
  const User *user_back(user_back411,13649
  iterator_range<user_iterator> materialized_users(415,13760
  iterator_range<const_user_iterator> materialized_users(418,13881
  iterator_range<user_iterator> users(421,14014
  iterator_range<const_user_iterator> users(425,14127
  bool hasOneUse(434,14435
  const Use *getSingleUndroppableUse(getSingleUndroppableUse457,15315
  const User *getUniqueUndroppableUser(getUniqueUndroppableUser464,15615
  void addUse(505,17157
  enum ValueTy 513,17491
#define HANDLE_VALUE(514,17508
#define HANDLE_CONSTANT_MARKER(518,17592
  unsigned getValueID(532,18291
  unsigned getRawSubclassOptionalData(539,18496
  void clearSubclassOptionalData(544,18638
  bool hasSameSubclassOptionalData(549,18755
  bool hasValueHandle(554,18952
  bool isUsedByMetadata(557,19073
  MDNode *getMetadata(getMetadata565,19385
  bool hasMetadata(589,20324
  bool hasMetadata(593,20464
  bool hasMetadata(596,20555
  Value *stripPointerCasts(stripPointerCasts644,22112
  Value *stripPointerCastsAndAliases(stripPointerCastsAndAliases654,22493
  Value *stripPointerCastsSameRepresentation(stripPointerCastsSameRepresentation665,22986
  Value *stripPointerCastsForAliasAnalysis(stripPointerCastsForAliasAnalysis677,23519
  Value *stripInBoundsConstantOffsets(stripInBoundsConstantOffsets687,23941
  Value *stripAndAccumulateConstantOffsets(stripAndAccumulateConstantOffsets726,25875
  const Value *stripAndAccumulateInBoundsConstantOffsets(stripAndAccumulateInBoundsConstantOffsets736,26395
  Value *stripAndAccumulateInBoundsConstantOffsets(stripAndAccumulateInBoundsConstantOffsets741,26691
  inline Value *stripInBoundsOffsets(stripInBoundsOffsets753,27281
  Value *DoPHITranslation(DoPHITranslation797,29468
  void mutateType(815,30280
  static Use *mergeUseLists(mergeUseLists838,30931
  unsigned short getSubclassDataFromValue(866,31389
  void setValueSubclassData(867,31464
struct ValueDeleter 870,31536
struct ValueDeleter { void operator()(operator()870,31536
using unique_value 875,31829
inline raw_ostream &operator<<(operator<<877,31889
void Use::set(set882,31986
Value *Use::operator=(operator=888,32082
const Use &Use::operator=(operator=893,32147
template <class Compare> void Value::sortUseList(sortUseList898,32226
  static inline bool doit(969,34444
  static inline bool doit(976,34700
  static inline bool doit(983,34931
  static inline bool doit 990,35163
  static inline bool doit(996,35317
  static inline bool doit(1002,35473
  static inline bool doit(1008,35630
  static inline bool doit(1014,35784
  static inline bool doit(1020,35942
  static inline bool doit(1026,36103
  static inline bool doit(1032,36261
  static inline bool doit(1038,36419
  static inline bool doit(1044,36584
DEFINE_ISA_CONVERSION_FUNCTIONS(1051,36798
inline T **unwrap(unwrap1059,37003
inline LLVMValueRef *wrap(wrap1068,37277

/usr/include/llvm/IR/ValueSymbolTable.h,462
#define LLVM_IR_VALUESYMBOLTABLE_H14,554
class ValueSymbolTable 38,1254
  friend class SymbolTableListTraits<Instruction,Instruction45,1581
  ValueSymbolTable(64,1993
  Value *lookup(lookup75,2307
  inline bool empty(84,2609
  inline unsigned size(87,2712
  inline iterator begin(99,3057
  inline const_iterator begin(102,3181
  inline iterator end(105,3299
  inline const_iterator end(108,3406
  ValueMap vmap;136,4391
  int MaxNameSize;137,4469

/usr/include/llvm/IRPrinter/IRPrintingPasses.h,377
#define LLVM_IRPRINTER_IRPRINTINGPASSES_H19,829
class PrintModulePass 32,1093
  raw_ostream &OS;OS33,1157
  std::string Banner;34,1176
  bool ShouldPreserveUseListOrder;35,1198
  bool EmitSummaryIndex;36,1233
  static bool isRequired(45,1528
class PrintFunctionPass 50,1668
  raw_ostream &OS;OS51,1736
  std::string Banner;52,1755
  static bool isRequired(59,1947

/usr/include/llvm/IRReader/IRReader.h,40
#define LLVM_IRREADER_IRREADER_H15,627

/usr/include/llvm/InterfaceStub/ELFObjHandler.h,50
#define LLVM_INTERFACESTUB_ELFOBJHANDLER_H14,577

/usr/include/llvm/InterfaceStub/IFSHandler.h,47
#define LLVM_INTERFACESTUB_IFSHANDLER_H16,613

/usr/include/llvm/InterfaceStub/IFSStub.h,1294
#define LLVM_INTERFACESTUB_IFSSTUB_H15,577
typedef uint16_t IFSArch;24,727
enum class IFSSymbolType 26,754
  NoType,27,781
  Object,28,791
  Func,29,801
  TLS,30,809
  Unknown 33,880
enum class IFSEndiannessType 36,900
  Little,37,931
  Big,38,941
  Unknown 41,1010
enum class IFSBitWidthType 44,1031
  IFS32,45,1060
  IFS64,46,1069
  Unknown 49,1139
struct IFSSymbol 52,1160
  explicit IFSSymbol(54,1204
  std::string Name;55,1282
  std::optional<uint64_t> Size;56,1302
  IFSSymbolType Type 57,1334
  bool Undefined 58,1380
  bool Weak 59,1406
  std::optional<std::string> Warning;60,1427
  bool operator<(61,1465
struct IFSTarget 64,1542
  std::optional<std::string> Triple;65,1561
  std::optional<std::string> ObjectFormat;66,1598
  std::optional<IFSArch> Arch;67,1641
  std::optional<std::string> ArchString;68,1672
  std::optional<IFSEndiannessType> Endianness;69,1713
  std::optional<IFSBitWidthType> BitWidth;70,1760
inline bool operator==(operator==75,1824
inline bool operator!=(operator!=83,2105
struct IFSStub 89,2328
  VersionTuple IfsVersion;91,2391
  std::optional<std::string> SoName;92,2418
  IFSTarget Target;93,2455
  std::vector<std::string> NeededLibs;94,2475
  std::vector<IFSSymbol> Symbols;95,2514
struct IFSStubTriple 108,2970

/usr/include/llvm/LTO/legacy/LTOModule.h,1117
#define LLVM_LTO_LEGACY_LTOMODULE_H14,536
struct LTOModule 38,1174
  struct NameAndAttributes 40,1202
    StringRef name;41,1231
  std::unique_ptr<LLVMContext> OwnedContext;47,1380
  std::string LinkerOpts;49,1426
  std::unique_ptr<Module> Mod;51,1453
  MemoryBufferRef MBRef;52,1484
  ModuleSymbolTable SymTab;53,1509
  std::unique_ptr<TargetMachine> _target;54,1537
  std::vector<NameAndAttributes> _symbols;55,1579
  StringSet<>                             _defines;58,1702
  StringMap<NameAndAttributes> _undefines;59,1754
  std::vector<StringRef> _asm_undefines;60,1797
  const Module &getModule(getModule115,4116
  Module &getModule(getModule116,4167
  std::unique_ptr<Module> takeModule(118,4207
  const std::string &getTargetTriple(getTargetTriple121,4315
  void setTargetTriple(126,4441
  uint32_t getSymbolCount(131,4562
  lto_symbol_attributes getSymbolAttributes(136,4687
  StringRef getSymbolName(143,4945
  const GlobalValue *getSymbolGV(getSymbolGV149,5086
  StringRef getLinkerOpts(155,5232
  const std::vector<StringRef> &getAsmUndefinedRefs(getAsmUndefinedRefs157,5284

/usr/include/llvm/LTO/legacy/UpdateCompilerUsed.h,52
#define LLVM_LTO_LEGACY_UPDATECOMPILERUSED_H14,578

/usr/include/llvm/LTO/legacy/LTOCodeGenerator.h,1226
#define LLVM_LTO_LEGACY_LTOCODEGENERATOR_H36,1722
struct LTOCodeGenerator 72,2725
  void setCodePICModel(91,3253
  void setFileType(97,3464
  void setCpu(99,3532
  void setAttrs(100,3598
  void setShouldInternalize(103,3715
  void setShouldEmbedUselists(104,3786
  void setSaveIRBeforeOptPath(105,3861
  void setShouldRestoreGlobalsLinkage(121,4571
  void addMustPreserveSymbol(125,4669
  void setFreestanding(186,7452
  void setDisableVerify(188,7525
  void setDebugPassManager(190,7596
  LLVMContext &getContext(getContext194,7741
  void resetMergedModule(196,7790
  LLVMContext &Context;Context224,8637
  std::unique_ptr<Module> MergedModule;225,8661
  std::unique_ptr<Linker> TheLinker;226,8701
  std::unique_ptr<TargetMachine> TargetMach;227,8738
  StringSet<> MustPreserveSymbols;231,8889
  StringSet<> AsmUndefinedRefs;232,8924
  StringMap<GlobalValue::LinkageTypes> ExternalSymbols;233,8956
  std::vector<std::string> CodegenOptions;234,9012
  std::string FeatureStr;235,9055
  std::string NativeObjectPath;236,9081
  std::string TripleStr;238,9146
  std::unique_ptr<ToolOutputFile> DiagnosticOutputFile;244,9385
  std::string SaveIRBeforeOptPath;246,9496
  lto::Config Config;248,9532

/usr/include/llvm/LTO/legacy/ThinLTOCodeGenerator.h,1837
#define LLVM_LTO_LEGACY_THINLTOCODEGENERATOR_H16,668
struct TargetMachineBuilder 35,1172
  Triple TheTriple;36,1202
  std::string MCpu;37,1222
  std::string MAttr;38,1242
  TargetOptions Options;39,1263
  std::optional<Reloc::Model> RelocModel;40,1288
class ThinLTOCodeGenerator 52,1802
  std::vector<std::unique_ptr<MemoryBuffer>> &getProducedBinaries(getProducedBinaries87,3075
  std::vector<std::string> &getProducedBinaryFiles(getProducedBinaryFiles96,3415
  struct CachingOptions 125,4554
    std::string Path;126,4580
    CachePruningPolicy Policy;127,4661
  void setCacheDir(132,4795
  void setCachePruningInterval(137,5044
  void setCacheEntryExpiration(146,5333
  void setMaxCacheSizeRelativeToAvailableSpace(164,5978
  void setCacheMaxSizeBytes(172,6365
  void setCacheMaxSizeFiles(179,6608
  void setSaveTempsDir(188,6857
  void setGeneratedObjectsDirectory(194,7213
  void setCpu(199,7372
  void setAttr(202,7468
  void setTargetOptions(205,7571
  void setFreestanding(211,7793
  void setCodePICModel(214,7875
  void setCodeGenOptLevel(219,8007
  void setOptLevel(224,8149
  void setDebugPassManager(229,8312
  void disableCodeGen(233,8490
  void setCodeGenOnly(236,8611
  TargetMachineBuilder TMBuilder;303,10676
  std::vector<std::unique_ptr<MemoryBuffer>> ProducedBinaries;307,10835
  std::vector<std::string> ProducedBinaryFiles;310,10979
  std::vector<std::unique_ptr<lto::InputFile>> Modules;314,11116
  StringSet<> PreservedSymbols;318,11263
  StringSet<> CrossReferencedSymbols;321,11366
  CachingOptions CacheOptions;324,11441
  std::string SaveTempsDir;327,11536
  std::string SavedObjectsDirectoryPath;330,11627
  bool DisableCodeGen 334,11796
  bool CodeGenOnly 338,11941
  bool Freestanding 342,12072
  unsigned OptLevel 345,12137
  bool DebugPassManager 349,12257

/usr/include/llvm/LTO/LTOBackend.h,37
#define LLVM_LTO_LTOBACKEND_H17,758

/usr/include/llvm/LTO/SummaryBasedOptimizations.h,52
#define LLVM_LTO_SUMMARYBASEDOPTIMIZATIONS_H10,415

/usr/include/llvm/LTO/Config.h,1782
#define LLVM_LTO_CONFIG_H15,578
struct Config 41,1221
  enum VisScheme 42,1237
    FromPrevailing,43,1256
    ELF,44,1276
  std::string CPU;48,1404
  TargetOptions Options;49,1423
  std::vector<std::string> MAttrs;50,1448
  std::vector<std::string> MllvmArgs;51,1483
  std::vector<std::string> PassPlugins;52,1521
  std::function<void(legacy::PassManager &)> PreCodeGenPassesHook;54,1616
  std::optional<CodeModel::Model> CodeModel;56,1739
  std::string OptPipeline;103,3700
  std::string AAPipeline;108,3909
  std::string OverrideTriple;112,4028
  std::string DefaultTriple;116,4163
  std::string CSIRProfile;119,4235
  std::string SampleProfile;122,4294
  std::string ProfileRemapping;125,4368
  std::string DwoDir;128,4442
  std::string SplitDwarfFile;134,4770
  std::string SplitDwarfOutput;139,5038
  std::string RemarksFilename;142,5109
  std::string RemarksPasses;145,5181
  std::string RemarksFormat;166,6169
  std::string StatsFile;172,6332
  std::vector<std::string> ThinLTOModulesToCompile;175,6401
  DiagnosticHandlerFunction DiagHandler;184,6623
  std::unique_ptr<raw_ostream> ResolutionFile;193,6979
  PipelineTuningOptions PTO;196,7089
  ModuleHookFn PreOptModuleHook;226,8719
  ModuleHookFn PostPromoteModuleHook;230,8844
  ModuleHookFn PostInternalizeModuleHook;233,8941
  ModuleHookFn PostImportModuleHook;236,9065
  ModuleHookFn PostOptModuleHook;239,9168
  ModuleHookFn PreCodeGenModuleHook;244,9386
  CombinedIndexHookFn CombinedIndexHook;258,10004
struct LTOLLVMDiagnosticHandler 283,11287
  DiagnosticHandlerFunction *Fn;Fn284,11348
  LTOLLVMDiagnosticHandler(285,11381
  bool handleDiagnostics(287,11479
struct LTOLLVMContext 297,11910
  LTOLLVMContext(299,11949
  DiagnosticHandlerFunction DiagHandler;305,12204

/usr/include/llvm/LTO/LTO.h,3932
#define LLVM_LTO_LTO_H16,687
namespace lto 76,3049
class InputFile 109,4520
  std::vector<BitcodeModule> Mods;118,4688
  SmallVector<SmallVector119,4723
  SmallVector<char, 0> Strtab;119,4723
  std::vector<Symbol> Symbols;120,4754
  std::vector<std::vector123,4820
  std::vector<std::pair<size_t, size_t>> ModuleSymIndices;123,4820
  StringRef TargetTriple,125,4880
  StringRef TargetTriple, SourceFileName,125,4880
  StringRef TargetTriple, SourceFileName, COFFLinkerOpts;125,4880
  std::vector<StringRef> DependentLibraries;126,4938
  std::vector<std::vector127,4983
  std::vector<std::pair<StringRef, Comdat::SelectionKind>> ComdatTable;127,4983
  class Symbol 137,5331
    Symbol(141,5394
    using irsymtab::Symbol::isUndefined;143,5458
    using irsymtab::Symbol::isCommon;144,5499
    using irsymtab::Symbol::isWeak;145,5537
    using irsymtab::Symbol::isIndirect;146,5573
    using irsymtab::Symbol::getName;147,5613
    using irsymtab::Symbol::getIRName;148,5650
    using irsymtab::Symbol::getVisibility;149,5689
    using irsymtab::Symbol::canBeOmittedFromSymbolTable;150,5732
    using irsymtab::Symbol::isTLS;151,5789
    using irsymtab::Symbol::getComdatIndex;152,5824
    using irsymtab::Symbol::getCommonSize;153,5868
    using irsymtab::Symbol::getCommonAlignment;154,5911
    using irsymtab::Symbol::getCOFFWeakExternalFallback;155,5959
    using irsymtab::Symbol::getSectionName;156,6016
    using irsymtab::Symbol::isExecutable;157,6060
    using irsymtab::Symbol::isUsed;158,6102
  ArrayRef<Symbol> symbols(162,6194
  StringRef getCOFFLinkerOpts(165,6308
  ArrayRef<StringRef> getDependentLibraries(168,6438
  StringRef getTargetTriple(174,6639
  StringRef getSourceFileName(177,6763
  ArrayRef<ArrayRef180,6890
  ArrayRef<std::pair<StringRef, Comdat::SelectionKind>> getComdatTable(180,6890
  ArrayRef<Symbol> module_symbols(188,7105
using ThinBackend 197,7528
using IndexWriteCallback 210,8346
class LTO 254,11277
  enum LTOKind 259,11342
    LTOK_Default,261,11419
    LTOK_UnifiedRegular,264,11485
    LTOK_UnifiedThin,267,11554
  Config Conf;305,13218
  struct RegularLTOState 307,13234
    struct CommonResolution 310,13364
      Align Alignment;312,13419
    std::map<std::map316,13561
    std::map<std::string, CommonResolution> Commons;316,13561
    unsigned ParallelCodeGenParallelismLevel;318,13615
    LTOLLVMContext Ctx;319,13661
    std::unique_ptr<Module> CombinedModule;320,13685
    std::unique_ptr<IRMover> Mover;321,13729
    struct AddedModule 327,14018
      std::unique_ptr<Module> M;328,14043
      std::vector<GlobalValue *> Keep;329,14076
    std::vector<AddedModule> ModsWithSummaries;331,14122
  } RegularLTO;333,14207
  using ModuleMapType 335,14224
  struct ThinLTOState 337,14286
    ThinBackend Backend;340,14350
    ModuleSummaryIndex CombinedIndex;341,14375
    ModuleMapType ModuleMap;343,14468
    std::optional<ModuleMapType> ModulesToCompile;345,14568
    DenseMap<DenseMap346,14619
    DenseMap<GlobalValue::GUID, StringRef> PrevailingModuleForGUID;346,14619
  } ThinLTO;347,14687
  struct GlobalResolution 356,15208
    std::string IRName;358,15278
    bool isPrevailingIRSymbol(377,16024
    enum : unsigned 393,16787
      Unknown 395,16880
      External 399,17044
      RegularLTO 402,17102
  std::optional<StringMap<GlobalResolution>> GlobalResolutions;409,17327
  mutable bool CalledGetMaxTasks 437,18659
  LTOKind LTOMode;440,18740
  std::optional<bool> EnableSplitLTOUnit;443,18825
  DenseSet<GlobalValue::GUID> DynamicExportSymbols;447,19003
  std::unique_ptr<ToolOutputFile> DiagnosticOutputFile;450,19098
struct SymbolResolution 455,19310
  SymbolResolution(456,19336
  unsigned Prevailing 461,19545
  unsigned FinalDefinitionInLinkageUnit 465,19684
  unsigned VisibleToRegularObj 468,19802
  unsigned ExportDynamic 472,19969
  unsigned LinkerRedefined 476,20101

/usr/include/llvm/LineEditor/LineEditor.h,1177
#define LLVM_LINEEDITOR_LINEEDITOR_H10,407
class LineEditor 22,607
  LineEditor(33,1021
  ~LineEditor(35,1154
  struct CompletionAction 48,1475
    enum ActionKind 49,1503
      AK_Insert,51,1571
      AK_ShowCompletions53,1646
    ActionKind Kind;56,1679
    std::string Text;59,1729
    std::vector<std::string> Completions;62,1793
  struct Completion 66,1897
    Completion(68,1947
    std::string TypedText;73,2222
    std::string DisplayText;77,2380
  template <typename T> void setCompleter(84,2669
  template <typename T> void setListCompleter(92,3070
  const std::string &getPrompt(getPrompt105,3676
  void setPrompt(106,3734
  std::string Prompt;112,3878
  std::string HistoryPath;113,3900
  std::unique_ptr<InternalData> Data;114,3927
  struct CompleterConcept 116,3966
  struct ListCompleterConcept 121,4112
  struct CompleterModel 130,4528
    CompleterModel(131,4573
    CompletionAction complete(132,4619
    T Value;135,4735
  struct ListCompleterModel 139,4778
    ListCompleterModel(140,4831
    std::vector<Completion> getCompletions(141,4892
    T Value;145,5064
  std::unique_ptr<const CompleterConcept> Completer;148,5083

/usr/include/llvm/Linker/IRMover.h,1241
#define LLVM_LINKER_IRMOVER_H10,400
class IRMover 26,684
  struct StructTypeKeyInfo 27,700
    struct KeyTy 28,729
      ArrayRef<Type *> ETypes;29,748
      bool IsPacked;30,779
      KeyTy(31,800
      KeyTy(32,841
    static StructType *getEmptyKey(getEmptyKey36,979
    static StructType *getTombstoneKey(getTombstoneKey37,1017
    static unsigned getHashValue(38,1059
    static unsigned getHashValue(39,1111
    static bool isEqual(40,1167
    static bool isEqual(41,1233
  typedef DenseMap<const Metadata 45,1366
  typedef DenseMap<const Metadata *, TrackingMDRef> MDMapT;45,1366
  class IdentifiedStructTypeSet 48,1435
    DenseSet<StructType *> OpaqueStructTypes;50,1525
    DenseSet<StructType StructType53,1652
    DenseSet<StructType *, StructTypeKeyInfo> NonOpaqueStructTypes;53,1652
    void addNonOpaque(56,1731
    void switchToNonOpaque(57,1770
    void addOpaque(58,1814
    StructType *findNonOpaque(findNonOpaque59,1850
    bool hasType(60,1921
  IRMover(63,1961
  typedef std::function<void(GlobalValue &)> ValueAdder;65,1984
  Module &getModule(getModule81,2921
  Module &Composite;Composite84,2975
  IdentifiedStructTypeSet IdentifiedStructTypes;85,2996
  MDMapT SharedMDs;86,3045

/usr/include/llvm/Linker/Linker.h,255
#define LLVM_LINKER_LINKER_H10,399
class Linker 22,795
  IRMover Mover;23,810
  enum Flags 26,836
    None 27,851
    OverrideFromSrc 28,865
    LinkOnlyNeeded 29,897
  Linker(32,934
  bool linkInModule(44,1312
  static bool linkModules(48,1514

/usr/include/llvm/MC/MCDisassembler/MCExternalSymbolizer.h,250
#define LLVM_MC_MCDISASSEMBLER_MCEXTERNALSYMBOLIZER_H16,695
class MCExternalSymbolizer 27,962
  LLVMOpInfoCallback GetOpInfo;32,1171
  LLVMSymbolLookupCallback SymbolLookUp;34,1247
  void *DisInfo;DisInfo36,1364
  MCExternalSymbolizer(40,1399

/usr/include/llvm/MC/MCDisassembler/MCRelocationInfo.h,272
#define LLVM_MC_MCDISASSEMBLER_MCRELOCATIONINFO_H16,716
class MCRelocationInfo 24,878
  MCContext &Ctx;Ctx26,914
  MCRelocationInfo(29,941
  virtual ~MCRelocationInfo(32,1098
  virtual const MCExpr *createExprForCAPIVariantKind(createExprForCAPIVariantKind38,1366

/usr/include/llvm/MC/MCDisassembler/MCSymbolizer.h,249
#define LLVM_MC_MCDISASSEMBLER_MCSYMBOLIZER_H16,694
class MCSymbolizer 39,1497
  MCContext &Ctx;Ctx41,1529
  std::unique_ptr<MCRelocationInfo> RelInfo;42,1547
  MCSymbolizer(46,1666
  virtual ArrayRef<uint64_t> getReferencedAddresses(90,4153

/usr/include/llvm/MC/MCDisassembler/MCDisassembler.h,1207
#define LLVM_MC_MCDISASSEMBLER_MCDISASSEMBLER_H10,418
struct XCOFFSymbolInfoTy 21,659
  std::optional<XCOFF::StorageMappingClass> StorageMappingClass;22,686
  std::optional<uint32_t> Index;23,751
struct SymbolInfoTy 28,870
  uint64_t Addr;29,892
  StringRef Name;30,909
  XCOFFSymbolInfoTy XCOFFSymInfo;32,981
  uint8_t Type;33,1015
  bool IsMappingSymbol;35,1108
  bool IsXCOFF;38,1142
  bool HasType;39,1158
  SymbolInfoTy(42,1183
      : Addr(Addr), Name(Name), XCOFFSymInfo{Smc, Idx, Label}, Type(44,1332
        IsMappingSymbol(45,1404
        IsMappingSymbol(false), IsXCOFF(45,1404
        IsMappingSymbol(false), IsXCOFF(true), HasType(45,1404
  SymbolInfoTy(46,1469
  bool isXCOFF(50,1717
  friend bool operator<(53,1770
using SectionSymbolsTy 73,2533
class MCDisassembler 83,2813
  enum DecodeStatus 107,3920
    Fail 108,3942
    SoftFail 109,3956
    Success 110,3974
  MCDisassembler(113,3996
  MCContext &Ctx;Ctx197,8660
  const MCSubtargetInfo &STI;STI201,8767
  std::unique_ptr<MCSymbolizer> Symbolizer;202,8797
  MCContext& getContext(216,9367
  const MCSubtargetInfo& getSubtargetInfo(218,9416
  mutable raw_ostream *CommentStream CommentStream222,9641

/usr/include/llvm/MC/MCParser/AsmCond.h,185
#define LLVM_MC_MCPARSER_ASMCOND_H10,405
class AsmCond 21,795
  enum ConditionalAssemblyType 23,819
    NoCond,24,852
    IfCond,25,905
    ElseIfCond,26,946
    ElseCond 27,991

/usr/include/llvm/MC/MCParser/AsmLexer.h,637
#define LLVM_MC_MCPARSER_ASMLEXER_H14,546
class AsmLexer 25,758
  const MCAsmInfo &MAI;MAI26,795
  StringRef CurBuf;29,852
  AsmToken LexToken(37,1068
  bool isAtStartOfComment(56,1585
  bool isAtStatementSeparator(57,1629
  [[nodiscard]] int getNextChar(58,1677
  int peekNextChar(59,1712
  AsmToken ReturnError(60,1734
  AsmToken LexIdentifier(62,1800
  AsmToken LexSlash(63,1828
  AsmToken LexLineComment(64,1851
  AsmToken LexDigit(65,1880
  AsmToken LexSingleQuote(66,1903
  AsmToken LexQuote(67,1932
  AsmToken LexFloatLiteral(68,1955
  AsmToken LexHexFloatLiteral(69,1985
  StringRef LexUntilEndOfLine(71,2035

/usr/include/llvm/MC/MCParser/MCAsmLexer.h,1616
#define LLVM_MC_MCPARSER_MCASMLEXER_H10,408
class AsmCommentConsumer 23,714
class MCAsmLexer 37,1226
  SmallVector<SmallVector39,1314
  SmallVector<AsmToken, 1> CurTok;39,1314
  SMLoc ErrLoc;42,1406
  std::string Err;43,1422
  const char *TokStart TokStart46,1484
  bool SkipSpace 47,1518
  bool AllowAtInIdentifier 48,1543
  bool AllowHashInIdentifier 49,1579
  bool IsAtStartOfStatement 50,1617
  bool LexMasmHexFloats 51,1653
  bool LexMasmIntegers 52,1686
  bool LexMasmStrings 53,1718
  bool LexMotorolaIntegers 54,1749
  bool UseMasmDefaultRadix 55,1785
  unsigned DefaultRadix 56,1821
  bool LexHLASMIntegers 57,1851
  bool LexHLASMStrings 58,1884
  AsmCommentConsumer *CommentConsumer CommentConsumer59,1916
  void SetError(65,2019
  const AsmToken &Lex(Lex79,2442
  void UnLex(93,2942
  bool isAtStartOfStatement(98,3061
  const AsmToken &getTok(getTok106,3282
  const AsmToken peekTok(111,3392
  SMLoc getErrLoc(128,3843
  const std::string &getErr(getErr133,3924
  AsmToken::TokenKind getKind(138,4014
  bool is(141,4132
  bool isNot(144,4247
  void setSkipSpace(147,4376
  bool getAllowAtInIdentifier(149,4428
  void setAllowAtInIdentifier(150,4492
  void setAllowHashInIdentifier(152,4560
  void setCommentConsumer(154,4632
  void setLexMasmIntegers(160,4906
  void useMasmDefaultRadix(164,5117
  unsigned getMasmDefaultRadix(166,5182
  void setMasmDefaultRadix(167,5246
  void setLexMasmHexFloats(170,5391
  void setLexMasmStrings(174,5571
  void setLexMotorolaIntegers(178,5725
  void setLexHLASMIntegers(181,5870
  void setLexHLASMStrings(186,6109

/usr/include/llvm/MC/MCParser/MCAsmParser.h,2076
#define LLVM_MC_MCPARSER_MCASMPARSER_H10,409
struct InlineAsmIdentifierInfo 36,953
  enum IdKind 37,986
    IK_Invalid,38,1002
    IK_Label,39,1076
    IK_EnumVal,40,1122
    IK_Var 41,1169
  struct EnumIdentifier 44,1234
    int64_t EnumVal;45,1260
  struct LabelIdentifier 48,1329
    void *Decl;Decl49,1356
  struct VariableIdentifier 52,1404
    void *Decl;Decl53,1434
    bool IsGlobalLV;54,1450
    unsigned Length;55,1471
    unsigned Size;56,1492
    unsigned Type;57,1511
    EnumIdentifier Enum;61,1599
    LabelIdentifier Label;62,1624
    VariableIdentifier Var;63,1651
  bool isKind(65,1684
  void setEnum(67,1760
  void setLabel(72,1918
  void setVar(77,2065
struct AsmTypeInfo 95,2565
  StringRef Name;96,2586
  unsigned Size 97,2604
  unsigned ElementSize 98,2625
  unsigned Length 99,2653
struct AsmFieldInfo 102,2680
  AsmTypeInfo Type;103,2702
  unsigned Offset 104,2722
class MCAsmParserSemaCallback 108,2796
class MCAsmParser 123,3456
  using DirectiveHandler 125,3484
  using ExtensionDirectiveHandler 126,3562
  struct MCPendingError 129,3657
    SMLoc Loc;130,3683
    SmallString<64> Msg;131,3698
    SMRange Range;132,3723
  MCTargetAsmParser *TargetParser TargetParser136,3757
  SmallVector<SmallVector141,3863
  SmallVector<MCPendingError, 0> PendingErrors;141,3863
  bool HadError 144,3974
  bool ShowParsedOperands 146,4000
  const MCAsmLexer &getLexer(getLexer161,4468
  MCTargetAsmParser &getTargetParser(getTargetParser170,4701
  virtual unsigned getAssemblerDialect(173,4819
  virtual void setAssemblerDialect(174,4873
  bool getShowParsedOperands(176,4925
  void setShowParsedOperands(177,4993
  virtual bool discardLTOSymbol(185,5287
  virtual bool isParsingMasm(187,5355
  virtual bool defineMacro(189,5411
  virtual bool lookUpField(191,5489
  virtual bool lookUpField(194,5581
  virtual bool lookUpType(199,5719
  bool hasPendingError(235,7180
  bool printPendingErrors(237,7241
  void clearPendingErrors(246,7454
  bool parseComma(266,8125
  bool parseRParen(267,8203

/usr/include/llvm/MC/MCParser/MCAsmParserExtension.h,1034
#define LLVM_MC_MCPARSER_MCASMPARSEREXTENSION_H10,418
class MCAsmParserExtension 24,789
  MCAsmParserExtension(28,863
  template<typename T,31,955
  static bool HandleDirective(32,1016
  virtual ~MCAsmParserExtension(44,1465
  virtual void Initialize(49,1667
  MCContext &getContext(getContext54,1767
  MCAsmLexer &getLexer(getLexer56,1831
  const MCAsmLexer &getLexer(getLexer57,1891
  MCAsmParser &getParser(getParser61,2000
  const MCAsmParser &getParser(getParser62,2047
  SourceMgr &getSourceManager(getSourceManager66,2158
  MCStreamer &getStreamer(getStreamer67,2233
  bool Warning(69,2300
  bool Error(73,2389
  void Note(77,2508
  bool TokError(81,2584
  const AsmToken &Lex(Lex85,2663
  const AsmToken &getTok(getTok86,2717
  bool parseToken(87,2777
  bool parseEOL(91,2924
  bool parseMany(93,2978
  bool parseOptionalToken(97,3109
  bool ParseDirectiveCGProfile(101,3211
  bool check(103,3262
  bool check(107,3346
  bool addErrorSuffix(111,3446
  bool HasBracketExpressions(115,3543

/usr/include/llvm/MC/MCParser/MCAsmParserUtils.h,51
#define LLVM_MC_MCPARSER_MCASMPARSERUTILS_H10,414

/usr/include/llvm/MC/MCParser/MCParsedAsmOperand.h,535
#define LLVM_MC_MCPARSER_MCPARSEDASMOPERAND_H10,416
class MCParsedAsmOperand 24,878
  std::string Constraint;31,1164
  void setConstraint(45,1718
  StringRef getConstraint(46,1778
  void setMCOperandNum 48,1830
  unsigned getMCOperandNum(49,1896
  virtual StringRef getSymName(51,1951
  virtual void *getOpDecl(getOpDecl52,2008
  virtual bool isMemUseUpRegs(70,2737
  virtual bool needAddressOf(79,3164
  virtual bool isOffsetOfLocal(84,3396
  virtual SMLoc getOffsetOfLoc(87,3518
inline raw_ostream& operator<<(99,3883

/usr/include/llvm/MC/MCParser/MCTargetAsmParser.h,5399
#define LLVM_MC_MCPARSER_MCTARGETASMPARSER_H10,415
enum AsmRewriteKind 35,1042
  AOK_Align,36,1064
  AOK_EVEN,37,1114
  AOK_Emit,38,1162
  AOK_CallInput,39,1211
  AOK_Input,40,1264
  AOK_Output,41,1313
  AOK_SizeDirective,42,1362
  AOK_Label,43,1429
  AOK_EndOfStatement,44,1476
  AOK_Skip,45,1536
  AOK_IntelExpr 46,1606
const char AsmRewritePrecedence 49,1696
struct IntelExpr 65,2074
  bool NeedBracs 66,2093
  int64_t Imm 67,2119
  StringRef BaseReg;68,2138
  StringRef IndexReg;69,2159
  StringRef OffsetName;70,2181
  unsigned Scale 71,2205
  IntelExpr(75,2333
  bool hasBaseReg(82,2624
  bool hasIndexReg(83,2679
  bool hasRegs(84,2736
  bool hasOffset(85,2801
  bool emitImm(88,2956
  bool isValid(89,3019
struct AsmRewrite 95,3151
  AsmRewriteKind Kind;96,3171
  SMLoc Loc;97,3194
  unsigned Len;98,3207
  bool Done;99,3223
  int64_t Val;100,3236
  StringRef Label;101,3251
  IntelExpr IntelExp;102,3270
  bool IntelExpRestricted;103,3292
  AsmRewrite(106,3328
  AsmRewrite(111,3551
  AsmRewrite(113,3679
struct ParseInstructionInfo 117,3798
  SmallVectorImpl<AsmRewrite> *AsmRewrites AsmRewrites118,3828
  ParseInstructionInfo(121,3919
enum OperandMatchResultTy 125,4016
  MatchOperand_Success,126,4044
  MatchOperand_NoMatch,127,4101
  MatchOperand_ParseFail 128,4151
class ParseStatus 132,4275
  enum class StatusTy 133,4295
  enum class StatusTy { Success,133,4295
  enum class StatusTy { Success, Failure,133,4295
  enum class StatusTy { Success, Failure, NoMatch 133,4295
  enum class StatusTy { Success, Failure, NoMatch } Status;133,4295
  static constexpr StatusTy Success 139,4420
  static constexpr StatusTy Failure 140,4477
  static constexpr StatusTy NoMatch 141,4534
  constexpr ParseStatus(144,4599
  constexpr ParseStatus(146,4647
  constexpr ParseStatus(148,4709
  constexpr bool isSuccess(152,4845
  constexpr bool isFailure(153,4920
  constexpr bool isNoMatch(154,4995
  LLVM_DEPRECATED(157,5135
  constexpr operator OperandMatchResultTy(operator OperandMatchResultTy163,5448
enum class DiagnosticPredicateTy 170,5655
  Match,171,5690
  NearMatch,172,5699
  NoMatch,173,5712
struct DiagnosticPredicate 202,6962
  DiagnosticPredicateTy Type;203,6991
  explicit DiagnosticPredicate(205,7022
  DiagnosticPredicate(208,7173
  operator bool(operator bool212,7369
  bool isMatch(213,7442
  bool isNearMatch(214,7514
  bool isNoMatch(215,7594
class NearMissInfo 223,8054
  enum NearMissKind 225,8083
    NoNearMiss,226,8105
    NearMissOperand,227,8121
    NearMissFeature,228,8142
    NearMissPredicate,229,8163
    NearMissTooFewOperands,230,8186
  static NearMissInfo getSuccess(235,8354
  static NearMissInfo getMissedFeature(240,8640
  static NearMissInfo getMissedPredicate(250,9039
  static NearMissInfo getMissedOperand(262,9595
  static NearMissInfo getTooFewOperands(277,10280
  operator bool(operator bool286,10584
  NearMissKind getKind(288,10640
  const FeatureBitset& getFeatures(292,10781
  unsigned getPredicateError(298,10985
  unsigned getOperandClass(303,11154
  unsigned getOpcode(308,11351
  unsigned getOperandError(313,11544
  unsigned getOperandIndex(319,11748
  NearMissKind Kind;325,11868
  struct MissedOpInfo 329,12007
    unsigned Class;330,12031
    unsigned Opcode;331,12051
    unsigned Error;332,12072
    unsigned Index;333,12092
  struct TooFewOperandsInfo 336,12118
    unsigned Class;337,12148
    unsigned Opcode;338,12168
    FeatureBitset Features;342,12205
    unsigned PredicateError;343,12233
    MissedOpInfo MissedOperand;344,12262
    TooFewOperandsInfo TooFewOperands;345,12294
  NearMissInfo(348,12339
class MCTargetAsmParser 352,12461
  enum MatchResultTy 354,12525
    Match_InvalidOperand,355,12548
    Match_InvalidTiedOperand,356,12574
    Match_MissingFeature,357,12604
    Match_MnemonicFail,358,12630
    Match_Success,359,12654
    Match_NearMisses,360,12673
    FIRST_TARGET_MATCH_RESULT_TY361,12695
  FeatureBitset AvailableFeatures;372,13058
  bool ParsingMSInlineAsm 375,13162
  MCAsmParserSemaCallback *SemaCallback SemaCallback379,13311
  MCTargetOptions MCOptions;382,13434
  const MCSubtargetInfo *STI;STI385,13483
  const MCInstrInfo &MII;MII387,13514
  const FeatureBitset& getAvailableFeatures(397,13751
  void setAvailableFeatures(400,13839
  bool isParsingMSInlineAsm 404,13933
  void setParsingMSInlineAsm 405,13995
  MCTargetOptions getTargetOptions(407,14070
  void setSemaCallback(409,14136
  virtual bool parsePrimaryExpr(414,14274
  virtual bool ParseInstruction(444,15755
  virtual bool ParseDirective(460,16606
  virtual bool OmitRegisterFromClobberLists(486,18040
  virtual unsigned validateTargetOperandClass(492,18376
  checkEarlyTargetMatchPredicate(500,18684
  virtual unsigned checkTargetMatchPredicate(506,18939
  virtual bool areEqualRegs(516,19393
  virtual bool equalIsAsmAssignment(522,19673
  virtual bool isLabel(524,19795
  virtual bool starIsStartOfStatement(526,19919
  virtual const MCExpr *applyModifierToExpr(applyModifierToExpr528,19979
  virtual void doBeforeLabelEmit(535,20270
  virtual void onLabelParsed(537,20340
  virtual void flushPendingInstructions(541,20538
  virtual const MCExpr *createTargetUnaryExpr(createTargetUnaryExpr543,20599
  virtual void onBeginOfFile(550,20889
  virtual void onEndOfFile(553,20979

/usr/include/llvm/MC/ConstantPools.h,635
#define LLVM_MC_CONSTANTPOOLS_H14,564
struct ConstantPoolEntry 31,854
  ConstantPoolEntry(32,881
  MCSymbol *Label;Label35,1010
  const MCExpr *Value;Value36,1029
  unsigned Size;37,1052
  SMLoc Loc;38,1069
class ConstantPool 43,1194
  using EntryVecTy 44,1215
  EntryVecTy Entries;45,1271
  std::map<std::map46,1293
  std::map<int64_t, const MCSymbolRefExpr *> CachedConstantEntries;46,1293
  DenseMap<DenseMap47,1361
  DenseMap<const MCSymbol *, const MCSymbolRefExpr *> CachedSymbolEntries;47,1361
class AssemblerConstantPools 70,2084
  using ConstantPoolMapTy 85,2949
  ConstantPoolMapTy ConstantPools;86,3015

/usr/include/llvm/MC/LaneBitmask.h,539
#define LLVM_MC_LANEBITMASK_H30,1094
  struct LaneBitmask 40,1323
    enum : unsigned 43,1449
    enum : unsigned { BitWidth 43,1449
    explicit constexpr LaneBitmask(47,1602
    constexpr bool none(52,1895
    constexpr bool any(53,1949
    constexpr bool all(54,2003
    constexpr Type getAsInteger(74,2543
    unsigned getNumLanes(76,2601
    unsigned getHighestLane(77,2667
    static constexpr LaneBitmask getNone(81,2740
    static constexpr LaneBitmask getAll(82,2810
    static constexpr LaneBitmask getLane(83,2880

/usr/include/llvm/MC/MCAsmInfoCOFF.h,194
#define LLVM_MC_MCASMINFOCOFF_H10,402
class MCAsmInfoCOFF 16,485
  virtual void anchor(17,526
  explicit MCAsmInfoCOFF(20,563
class MCAsmInfoMicrosoft 23,595
class MCAsmInfoGNUCOFF 30,720

/usr/include/llvm/MC/MCAsmInfoDarwin.h,150
#define LLVM_MC_MCASMINFODARWIN_H15,617
class MCAsmInfoDarwin 21,702
  explicit MCAsmInfoDarwin(23,753
  bool isSectionAtomizableBySymbols(25,784

/usr/include/llvm/MC/MCAsmInfoELF.h,174
#define LLVM_MC_MCASMINFOELF_H10,401
class MCAsmInfoELF 16,483
  virtual void anchor(17,523
  MCSection *getNonexecutableStackSection(getNonexecutableStackSection18,548

/usr/include/llvm/MC/MCAsmInfoGOFF.h,121
#define LLVM_MC_MCASMINFOGOFF_H16,597
class MCAsmInfoGOFF 21,679
  virtual void anchor(22,720
  MCAsmInfoGOFF(25,757

/usr/include/llvm/MC/MCAsmInfoWasm.h,121
#define LLVM_MC_MCASMINFOWASM_H10,402
class MCAsmInfoWasm 15,484
  virtual void anchor(16,525
  MCAsmInfoWasm(19,562

/usr/include/llvm/MC/MCAsmInfoXCOFF.h,156
#define LLVM_MC_MCASMINFOXCOFF_H10,403
class MCAsmInfoXCOFF 16,487
  virtual void anchor(17,529
  MCAsmInfoXCOFF(20,566
  bool isAcceptableChar(25,680

/usr/include/llvm/MC/MCAsmLayout.h,544
#define LLVM_MC_MCASMLAYOUT_H10,400
class MCAsmLayout 28,1017
  MCAssembler &Assembler;Assembler29,1037
  llvm::SmallVector<llvm::SmallVector32,1104
  llvm::SmallVector<MCSection *, 16> SectionOrder;32,1104
  mutable DenseMap<DenseMap37,1340
  mutable DenseMap<const MCSection *, MCFragment *> LastValidFragment;37,1340
  MCAssembler &getAssembler(getAssembler50,1763
  llvm::SmallVectorImpl<MCSection *> &getSectionOrder(getSectionOrder69,2483
  const llvm::SmallVectorImpl<MCSection *> &getSectionOrder(getSectionOrder70,2564

/usr/include/llvm/MC/MCAsmMacro.h,3814
#define LLVM_MC_MCASMMACRO_H10,399
class AsmToken 21,652
  enum TokenKind 23,677
    Eof,25,711
    Eof, Error,25,711
    Identifier,28,750
    String,29,766
    Integer,32,802
    BigNum,33,815
    Real,36,871
    Comment,39,898
    HashDirective,40,911
    EndOfStatement,42,947
    Colon,43,967
    Space,44,978
    Plus,45,989
    Plus, Minus,45,989
    Plus, Minus, Tilde,45,989
    Slash,46,1013
    BackSlash,47,1035
    LParen,48,1057
    LParen, RParen,48,1057
    LParen, RParen, LBrac,48,1057
    LParen, RParen, LBrac, RBrac,48,1057
    LParen, RParen, LBrac, RBrac, LCurly,48,1057
    LParen, RParen, LBrac, RBrac, LCurly, RCurly,48,1057
    Question,49,1107
    Question, Star,49,1107
    Question, Star, Dot,49,1107
    Question, Star, Dot, Comma,49,1107
    Question, Star, Dot, Comma, Dollar,49,1107
    Question, Star, Dot, Comma, Dollar, Equal,49,1107
    Question, Star, Dot, Comma, Dollar, Equal, EqualEqual,49,1107
    Pipe,51,1167
    Pipe, PipePipe,51,1167
    Pipe, PipePipe, Caret,51,1167
    Amp,52,1194
    Amp, AmpAmp,52,1194
    Amp, AmpAmp, Exclaim,52,1194
    Amp, AmpAmp, Exclaim, ExclaimEqual,52,1194
    Amp, AmpAmp, Exclaim, ExclaimEqual, Percent,52,1194
    Amp, AmpAmp, Exclaim, ExclaimEqual, Percent, Hash,52,1194
    Less,53,1249
    Less, LessEqual,53,1249
    Less, LessEqual, LessLess,53,1249
    Less, LessEqual, LessLess, LessGreater,53,1249
    Greater,54,1293
    Greater, GreaterEqual,54,1293
    Greater, GreaterEqual, GreaterGreater,54,1293
    Greater, GreaterEqual, GreaterGreater, At,54,1293
    Greater, GreaterEqual, GreaterGreater, At, MinusGreater,54,1293
    PercentCall16,57,1408
    PercentCall16, PercentCall_Hi,57,1408
    PercentCall16, PercentCall_Hi, PercentCall_Lo,57,1408
    PercentCall16, PercentCall_Hi, PercentCall_Lo, PercentDtprel_Hi,57,1408
    PercentDtprel_Lo,58,1477
    PercentDtprel_Lo, PercentGot,58,1477
    PercentDtprel_Lo, PercentGot, PercentGot_Disp,58,1477
    PercentDtprel_Lo, PercentGot, PercentGot_Disp, PercentGot_Hi,58,1477
    PercentDtprel_Lo, PercentGot, PercentGot_Disp, PercentGot_Hi, PercentGot_Lo,58,1477
    PercentGot_Ofst,59,1558
    PercentGot_Ofst, PercentGot_Page,59,1558
    PercentGot_Ofst, PercentGot_Page, PercentGottprel,59,1558
    PercentGot_Ofst, PercentGot_Page, PercentGottprel, PercentGp_Rel,59,1558
    PercentGot_Ofst, PercentGot_Page, PercentGottprel, PercentGp_Rel, PercentHi,59,1558
    PercentHigher,60,1639
    PercentHigher, PercentHighest,60,1639
    PercentHigher, PercentHighest, PercentLo,60,1639
    PercentHigher, PercentHighest, PercentLo, PercentNeg,60,1639
    PercentHigher, PercentHighest, PercentLo, PercentNeg, PercentPcrel_Hi,60,1639
    PercentPcrel_Lo,61,1714
    PercentPcrel_Lo, PercentTlsgd,61,1714
    PercentPcrel_Lo, PercentTlsgd, PercentTlsldm,61,1714
    PercentPcrel_Lo, PercentTlsgd, PercentTlsldm, PercentTprel_Hi,61,1714
    PercentTprel_Lo62,1781
  StringRef Str;70,1981
  APInt IntVal;72,1999
  AsmToken(76,2048
  AsmToken(78,2163
  TokenKind getKind(81,2284
  bool is(82,2329
  bool isNot(83,2380
  StringRef getStringContents(90,2577
  StringRef getIdentifier(99,2964
  StringRef getString(110,3354
  int64_t getIntVal(115,3622
  APInt getAPIntVal(120,3754
struct MCAsmMacroParameter 129,3942
  StringRef Name;130,3971
  std::vector<AsmToken> Value;131,3989
  bool Required 132,4020
  bool Vararg 133,4045
  void dump(136,4119
typedef std::vector<MCAsmMacroParameter> MCAsmMacroParameters;141,4221
struct MCAsmMacro 142,4284
  StringRef Name;143,4304
  StringRef Body;144,4322
  MCAsmMacroParameters Parameters;145,4340
  std::vector<std::string> Locals;146,4375
  bool IsFunction 147,4410
  MCAsmMacro(150,4446
  MCAsmMacro(152,4563
  void dump(158,4825

/usr/include/llvm/MC/MCContext.h,8327
#define LLVM_MC_MCCONTEXT_H10,398
class MCContext 76,1946
  enum Environment 82,2191
    IsMachO,83,2212
    IsELF,84,2225
    IsGOFF,85,2236
    IsCOFF,86,2248
    IsSPIRV,87,2260
    IsWasm,88,2273
    IsXCOFF,89,2285
    IsDXContainer90,2298
  Environment Env;94,2331
  StringRef Swift5ReflectionSegmentName;98,2442
  Triple TT;101,2518
  std::unique_ptr<SourceMgr> InlineSrcMgr;107,2664
  std::vector<const MDNode *> LocInfos;108,2707
  DiagHandlerTy DiagHandler;110,2748
  std::unique_ptr<CodeViewContext> CVContext;124,3104
  BumpPtrAllocator Allocator;130,3314
  SpecificBumpPtrAllocator<MCSectionCOFF> COFFAllocator;132,3345
  SpecificBumpPtrAllocator<MCSectionDXContainer> DXCAllocator;133,3402
  SpecificBumpPtrAllocator<MCSectionELF> ELFAllocator;134,3465
  SpecificBumpPtrAllocator<MCSectionMachO> MachOAllocator;135,3520
  SpecificBumpPtrAllocator<MCSectionGOFF> GOFFAllocator;136,3579
  SpecificBumpPtrAllocator<MCSectionSPIRV> SPIRVAllocator;137,3636
  SpecificBumpPtrAllocator<MCSectionWasm> WasmAllocator;138,3695
  SpecificBumpPtrAllocator<MCSectionXCOFF> XCOFFAllocator;139,3752
  SpecificBumpPtrAllocator<MCInst> MCInstAllocator;140,3811
  SymbolTable Symbols;143,3900
  DenseMap<DenseMap151,4153
  DenseMap<std::pair<unsigned, unsigned>, MCSymbol *> LocalSymbols;151,4153
  StringMap<StringMap157,4502
  StringMap<bool, BumpPtrAllocator &> UsedNames;157,4502
  SymbolTable InlineAsmUsedLabelNames;160,4614
  StringMap<unsigned> NextID;164,4752
  DenseMap<DenseMap167,4828
  DenseMap<unsigned, MCLabel *> Instances;167,4828
  std::string SecureLogFile;181,5505
  std::unique_ptr<raw_fd_ostream> SecureLog;183,5610
  SmallString<128> CompilationDir;190,5933
  SmallVector<SmallVector193,6027
  SmallVector<std::pair<std::string, std::string>, 0> DebugPrefixMap;193,6027
  std::string MainFileName;196,6148
  std::map<std::map202,6432
  std::map<unsigned, MCDwarfLineTable> MCDwarfLineTablesCUMap;202,6432
  MCDwarfLoc CurrentDwarfLoc;205,6573
  SetVector<MCSection *> SectionsForRanges;216,6950
  std::vector<MCGenDwarfLabelEntry> MCGenDwarfLabelEntries;220,7124
  StringRef DwarfDebugFlags;224,7278
  StringRef DwarfDebugProducer;228,7404
  MCPseudoProbeTable PseudoProbeTable;246,8001
  struct ELFSectionKey 251,8228
    std::string SectionName;252,8253
    StringRef GroupName;253,8282
    StringRef LinkedToName;254,8307
    unsigned UniqueID;255,8335
    ELFSectionKey(257,8359
    bool operator<(262,8601
  struct COFFSectionKey 273,8966
    std::string SectionName;274,8992
    StringRef GroupName;275,9021
    int SelectionKey;276,9046
    unsigned UniqueID;277,9068
    COFFSectionKey(279,9092
    bool operator<(284,9330
  struct WasmSectionKey 295,9710
    std::string SectionName;296,9736
    StringRef GroupName;297,9765
    unsigned UniqueID;298,9790
    WasmSectionKey(300,9814
    bool operator<(304,9996
  struct XCOFFSectionKey 313,10280
    std::string SectionName;315,10328
      XCOFF::StorageMappingClass MappingClass;320,10501
      XCOFF::DwarfSectionSubtypeFlags DwarfSubtypeFlags;321,10548
    bool IsCsect;323,10612
    XCOFFSectionKey(325,10631
    XCOFFSectionKey(329,10817
    bool operator<(334,11034
  StringMap<MCSectionMachO *> MachOUniquingMap;345,11439
  std::map<std::map346,11487
  std::map<ELFSectionKey, MCSectionELF *> ELFUniquingMap;346,11487
  std::map<std::map347,11545
  std::map<COFFSectionKey, MCSectionCOFF *> COFFUniquingMap;347,11545
  std::map<std::map348,11606
  std::map<std::string, MCSectionGOFF *> GOFFUniquingMap;348,11606
  std::map<std::map349,11664
  std::map<WasmSectionKey, MCSectionWasm *> WasmUniquingMap;349,11664
  std::map<std::map350,11725
  std::map<XCOFFSectionKey, MCSectionXCOFF *> XCOFFUniquingMap;350,11725
  StringMap<MCSectionDXContainer *> DXCUniquingMap;351,11789
  StringMap<bool> RelSecNames;352,11841
  SpecificBumpPtrAllocator<MCSubtargetInfo> MCSubtargetAllocator;354,11873
  bool AutoReset;357,11979
  MCTargetOptions const *TargetOptions;TargetOptions359,11998
  StringMap<MCAsmMacro> MacroMap;385,13103
  struct ELFEntrySizeKey 387,13138
    std::string SectionName;388,13165
    unsigned Flags;389,13194
    unsigned EntrySize;390,13214
    ELFEntrySizeKey(392,13239
    bool operator<(395,13393
  std::map<std::map409,14024
  std::map<ELFEntrySizeKey, unsigned> ELFEntrySizeMap;409,14024
  DenseSet<StringRef> ELFSeenGenericMergeableSections;416,14446
  Environment getObjectFileType(429,14990
  const StringRef &getSwift5ReflectionSegmentName(getSwift5ReflectionSegmentName431,15047
  const Triple &getTargetTriple(getTargetTriple434,15151
  const SourceMgr *getSourceManager(getSourceManager435,15206
  SourceMgr *getInlineSourceManager(getInlineSourceManager438,15304
  std::vector<const MDNode *> &getLocInfos(getLocInfos439,15373
  void setDiagnosticHandler(440,15439
  void setObjectFileInfo(444,15538
  const MCAsmInfo *getAsmInfo(getAsmInfo446,15611
  const MCRegisterInfo *getRegisterInfo(getRegisterInfo448,15666
  const MCObjectFileInfo *getObjectFileInfo(getObjectFileInfo450,15731
  const MCSubtargetInfo *getSubtargetInfo(getSubtargetInfo452,15801
  void setAllowTemporaryLabels(456,15905
  void setUseNamesOnTempLabels(457,15982
  const SymbolTable &getSymbols(getSymbols527,18745
  MCSymbol *getInlineAsmLabel(getInlineAsmLabel531,18903
  enum : unsigned 544,19210
    GenericSectionID 548,19424
  MCSectionMachO *getMachOSection(getMachOSection558,19840
  MCSectionELF *getELFSection(getELFSection565,20178
  MCSectionELF *getELFSection(getELFSection570,20360
  MCSectionELF *getELFSection(getELFSection576,20628
  MCSectionWasm *getWasmSection(getWasmSection646,24169
  MCSectionWasm *getWasmSection(getWasmSection651,24352
  MCSectionWasm *getWasmSection(getWasmSection656,24570
  uint8_t getBBAddrMapVersion(686,25974
  StringRef getCompilationDir(696,26304
  void setCompilationDir(699,26425
  const std::string &getMainFileName(getMainFileName713,27014
  void setMainFileName(716,27140
  const std::map<std::map727,27669
  const std::map<unsigned, MCDwarfLineTable> &getMCDwarfLineTables(getMCDwarfLineTables727,27669
  MCDwarfLineTable &getMCDwarfLineTable(getMCDwarfLineTable731,27786
  const MCDwarfLineTable &getMCDwarfLineTable(getMCDwarfLineTable735,27889
  const SmallVectorImpl<MCDwarfFile> &getMCDwarfFiles(getMCDwarfFiles741,28080
  const SmallVectorImpl<std::string> &getMCDwarfDirs(getMCDwarfDirs745,28216
  unsigned getDwarfCompileUnitID(749,28350
  void setDwarfCompileUnitID(751,28417
  void setMCLineTableRootFile(755,28626
  bool isDwarfMD5UsageConsistent(764,29086
  void setCurrentDwarfLoc(772,29472
  void clearDwarfLocSeen(784,29924
  bool getDwarfLocSeen(786,29978
  const MCDwarfLoc &getCurrentDwarfLoc(getCurrentDwarfLoc787,30028
  bool getGenDwarfForAssembly(789,30098
  void setGenDwarfForAssembly(790,30162
  unsigned getGenDwarfFileNumber(791,30237
  void setGenDwarfFileNumber(795,30401
  const SetVector<MCSection *> &getGenDwarfSectionSyms(getGenDwarfSectionSyms803,30704
  bool addGenDwarfSection(807,30798
  const std::vector<MCGenDwarfLabelEntry> &getMCGenDwarfLabelEntries(getMCGenDwarfLabelEntries813,30938
  void addMCGenDwarfLabelEntry(817,31057
  void setDwarfDebugFlags(821,31167
  StringRef getDwarfDebugFlags(822,31231
  void setDwarfDebugProducer(824,31293
  StringRef getDwarfDebugProducer(825,31363
  void setDwarfFormat(827,31431
  dwarf::DwarfFormat getDwarfFormat(828,31496
  void setDwarfVersion(830,31565
  uint16_t getDwarfVersion(831,31622
  StringRef getSecureLogFile(835,31693
  raw_fd_ostream *getSecureLog(getSecureLog836,31750
  void setSecureLog(838,31812
  bool getSecureLogUsed(842,31912
  void setSecureLogUsed(843,31964
  void *allocate(allocate845,32028
  void deallocate(849,32131
  bool hadError(851,32164
  const MCAsmMacro *lookupMacro(lookupMacro856,32342
  void defineMacro(861,32519
  void undefineMacro(865,32640
  MCPseudoProbeTable &getMCPseudoProbeTable(getMCPseudoProbeTable867,32704
inline void *operator new(operator new896,34051
inline void operator delete(operator delete906,34547
inline void *operator new[](operator new[]929,35538
inline void operator delete[](operator delete[]940,36049

/usr/include/llvm/MC/MCDXContainerStreamer.h,215
#define LLVM_MC_MCDXCONTAINERSTREAMER_H17,774
class MCDXContainerStreamer 28,1010
  MCDXContainerStreamer(30,1074
  bool emitSymbolAttribute(36,1391
  void emitCommonSymbol(37,1471
  void emitZerofill(38,1536

/usr/include/llvm/MC/MCDXContainerWriter.h,241
#define LLVM_MC_MCDXCONTAINERWRITER_H10,408
class MCDXContainerTargetWriter 19,566
  MCDXContainerTargetWriter(21,641
  virtual ~MCDXContainerTargetWriter(24,683
  Triple::ObjectFormatType getFormat(26,724
  static bool classof(29,816

/usr/include/llvm/MC/MCDecoderOps.h,260
#define LLVM_MC_MCDECODEROPS_H11,527
enum DecoderOps 17,632
  OPC_ExtractField 18,650
  OPC_FilterValue,19,722
  OPC_CheckField,20,798
  OPC_CheckPredicate,22,943
  OPC_Decode,23,1023
  OPC_TryDecode,24,1091
  OPC_SoftFail,26,1223
  OPC_Fail 27,1293

/usr/include/llvm/MC/MCDirectives.h,1396
#define LLVM_MC_MCDIRECTIVES_H14,566
enum MCSymbolAttr 18,616
  MCSA_Invalid 19,636
  MCSA_Cold,22,732
  MCSA_ELF_TypeFunction,23,783
  MCSA_ELF_TypeIndFunction,24,858
  MCSA_ELF_TypeObject,25,921
  MCSA_ELF_TypeTLS,26,996
  MCSA_ELF_TypeCommon,27,1075
  MCSA_ELF_TypeNoType,28,1150
  MCSA_ELF_TypeGnuUniqueObject,29,1225
  MCSA_Global,30,1292
  MCSA_LGlobal,31,1336
  MCSA_Extern,32,1389
  MCSA_Hidden,33,1442
  MCSA_Exported,34,1493
  MCSA_IndirectSymbol,35,1560
  MCSA_Internal,36,1622
  MCSA_LazyReference,37,1675
  MCSA_Local,38,1736
  MCSA_NoDeadStrip,39,1786
  MCSA_SymbolResolver,40,1846
  MCSA_AltEntry,41,1908
  MCSA_PrivateExtern,42,1964
  MCSA_Protected,43,2025
  MCSA_Reference,44,2079
  MCSA_Weak,45,2135
  MCSA_WeakDefinition,46,2178
  MCSA_WeakReference,47,2240
  MCSA_WeakDefAutoPrivate,48,2301
  MCSA_WeakAntiDep,49,2370
  MCSA_Memtag,50,2429
enum MCAssemblerFlag 53,2484
  MCAF_SyntaxUnified,54,2507
  MCAF_SubsectionsViaSymbols,55,2560
  MCAF_Code16,56,2628
  MCAF_Code32,57,2694
  MCAF_Code64 58,2760
enum MCDataRegionType 61,2813
  MCDR_DataRegion,62,2837
  MCDR_DataRegionJT8,63,2885
  MCDR_DataRegionJT16,64,2937
  MCDR_DataRegionJT32,65,2990
  MCDR_DataRegionEnd 66,3043
enum MCVersionMinType 69,3099
  MCVM_IOSVersionMin,70,3123
  MCVM_OSXVersionMin,71,3175
  MCVM_TvOSVersionMin,72,3230
  MCVM_WatchOSVersionMin,73,3283

/usr/include/llvm/MC/MCELFStreamer.h,746
#define LLVM_MC_MCELFSTREAMER_H10,402
class MCELFStreamer 31,788
  MCELFStreamer(33,844
  ~MCELFStreamer(37,1025
  struct AttributeItem 91,3269
      HiddenAttribute 96,3488
      NumericAttribute,97,3515
      TextAttribute,98,3539
      NumericAndTextAttributes99,3560
    } Type;100,3591
    unsigned Tag;101,3603
    unsigned IntValue;102,3621
    std::string StringValue;103,3644
  SmallVector<SmallVector107,3742
  SmallVector<AttributeItem, 64> Contents;107,3742
  void emitAttributesSection(114,4141
  SmallVector<SmallVector127,4800
  SmallVector<AttributeItem, 64> GNUAttributes;127,4800
  void emitGNUAttribute(130,4857
  SmallVector<SmallVector152,5688
  SmallVector<MCDataFragment *, 4> BundleGroups;152,5688

/usr/include/llvm/MC/MCFixupKindInfo.h,338
#define LLVM_MC_MCFIXUPKINDINFO_H10,404
struct MCFixupKindInfo 15,509
  enum FixupKindFlags 16,534
    FKF_IsPCRel 19,714
    FKF_IsAlignedDownTo32Bits 22,817
    FKF_IsTarget 25,929
    FKF_Constant 30,1152
  const char *Name;Name35,1305
  unsigned TargetOffset;38,1377
  unsigned TargetSize;42,1496
  unsigned Flags;45,1586

/usr/include/llvm/MC/MCInst.h,2117
#define LLVM_MC_MCINST_H16,652
class MCOperand 36,1079
  enum MachineOperandType 37,1097
    kInvalid,38,1141
    kRegister,39,1180
    kImmediate,40,1222
    kSFPImmediate,41,1265
    kDFPImmediate,42,1330
    kExpr,43,1395
    kInst 44,1450
    unsigned RegVal;49,1553
    int64_t ImmVal;50,1574
    uint32_t SFPImmVal;51,1594
    uint64_t FPImmVal;52,1618
    const MCExpr *ExprVal;ExprVal53,1641
    const MCInst *InstVal;InstVal54,1668
  MCOperand(58,1709
  bool isValid(60,1741
  bool isReg(61,1793
  bool isImm(62,1844
  bool isSFPImm(63,1896
  bool isDFPImm(64,1954
  bool isExpr(65,2012
  bool isInst(66,2060
  unsigned getReg(69,2144
  void setReg(75,2285
  int64_t getImm(80,2396
  void setImm(85,2498
  uint32_t getSFPImm(90,2601
  void setSFPImm(95,2717
  uint64_t getDFPImm(100,2834
  void setDFPImm(105,2948
  void setFPImm(109,3062
  const MCExpr *getExpr(getExpr114,3194
  void setExpr(119,3306
  const MCInst *getInst(getInst124,3419
  void setInst(129,3535
  static MCOperand createReg(134,3652
  static MCOperand createImm(141,3781
  static MCOperand createSFPImm(148,3910
  static MCOperand createDFPImm(155,4049
  static MCOperand createExpr(162,4187
  static MCOperand createInst(169,4319
  void print(176,4451
class MCInst 184,4718
  unsigned Opcode 185,4733
  unsigned Flags 189,4987
  SMLoc Loc;191,5010
  SmallVector<MCOperand,MCOperand192,5023
  SmallVector<MCOperand, 10> Operands;192,5023
  void setOpcode(197,5094
  unsigned getOpcode(198,5141
  void setFlags(200,5190
  unsigned getFlags(201,5233
  void setLoc(203,5280
  SMLoc getLoc(204,5320
  const MCOperand &getOperand(getOperand206,5360
  MCOperand &getOperand(getOperand207,5432
  unsigned getNumOperands(208,5492
  void addOperand(210,5555
  using iterator 212,5622
  using const_iterator 213,5679
  void clear(215,5749
  void erase(216,5786
  void erase(217,5834
  size_t size(218,5911
  iterator begin(219,5961
  const_iterator begin(220,6009
  iterator end(221,6069
  const_iterator end(222,6113
  iterator insert(224,6170
  void print(228,6263

/usr/include/llvm/MC/MCInstBuilder.h,461
#define LLVM_MC_MCINSTBUILDER_H15,574
class MCInstBuilder 21,654
  MCInst Inst;22,676
  MCInstBuilder(26,771
  MCInstBuilder &addReg(addReg31,873
  MCInstBuilder &addImm(addImm37,1027
  MCInstBuilder &addSFPImm(addSFPImm43,1194
  MCInstBuilder &addDFPImm(addDFPImm49,1361
  MCInstBuilder &addExpr(addExpr55,1510
  MCInstBuilder &addInst(addInst61,1660
  MCInstBuilder &addOperand(addOperand67,1800
  operator MCInst&(operator MCInst&72,1899

/usr/include/llvm/MC/MCInstrInfo.h,545
#define LLVM_MC_MCINSTRINFO_H14,546
class MCInstrInfo 26,839
  const MCInstrDesc *LastDesc;LastDesc33,1069
  const unsigned *InstrNameIndices;InstrNameIndices34,1141
  const char *InstrNameData;InstrNameData35,1220
  const uint8_t *DeprecatedFeatures;DeprecatedFeatures39,1484
  const ComplexDeprecationPredicate *ComplexDeprecationInfos;ComplexDeprecationInfos42,1647
  unsigned NumOpcodes;43,1709
  void InitMCInstrInfo(48,1887
  unsigned getNumOpcodes(59,2256
  const MCInstrDesc &get(get63,2421
  StringRef getName(70,2689

/usr/include/llvm/MC/MCLabel.h,187
#define LLVM_MC_MCLABEL_H14,543
class MCLabel 23,819
  unsigned Instance;25,893
  MCLabel(30,991
  unsigned getInstance(37,1203
  unsigned incInstance(40,1326
  void print(43,1418

/usr/include/llvm/MC/MCLinkerOptimizationHint.h,1341
#define LLVM_MC_MCLINKEROPTIMIZATIONHINT_H17,657
enum MCLOHType 33,973
  MCLOH_AdrpAdrp 34,990
  MCLOH_AdrpLdr 35,1065
  MCLOH_AdrpAddLdr 36,1132
  MCLOH_AdrpLdrGotLdr 37,1206
  MCLOH_AdrpAddStr 38,1286
  MCLOH_AdrpLdrGotStr 39,1360
  MCLOH_AdrpAdd 40,1440
  MCLOH_AdrpLdrGot 41,1507
static inline StringRef MCLOHDirectiveName(44,1584
static inline bool isValidMCLOHType(48,1662
static inline int MCLOHNameToId(52,1779
#define MCLOHCaseNameToId(53,1829
#undef MCLOHCaseNameToId64,2215
static inline StringRef MCLOHIdToName(67,2243
#define MCLOHCaseIdToName(68,2299
#undef MCLOHCaseIdToName80,2704
static inline int MCLOHIdToNbArgs(83,2732
class MCLOHDirective 102,3164
  MCLOHType Kind;103,3187
  SmallVector<SmallVector106,3256
  SmallVector<MCSymbol *, 3> Args;106,3256
  using LOHArgs 115,3614
  MCLOHDirective(117,3662
  MCLOHType getKind(122,3843
  const LOHArgs &getArgs(getArgs124,3889
class MCLOHContainer 136,4311
  mutable uint64_t EmitSize 138,4385
  SmallVector<SmallVector141,4459
  SmallVector<MCLOHDirective, 32> Directives;141,4459
  using LOHDirectives 144,4514
  const LOHDirectives &getDirectives(getDirectives149,4643
  void addDirective(155,4825
  uint64_t getEmitSize(160,5008
  void emit(171,5401
  void reset(176,5562
using MCLOHArgs 183,5683
using MCLOHDirectives 184,5726

/usr/include/llvm/MC/MCObjectStreamer.h,1048
#define LLVM_MC_MCOBJECTSTREAMER_H10,405
class MCObjectStreamer 42,1305
  std::unique_ptr<MCAssembler> Assembler;43,1350
  MCSection::iterator CurInsertionPoint;44,1392
  bool EmitEHFrame;45,1433
  bool EmitDebugFrame;46,1453
  SmallVector<SmallVector47,1476
  SmallVector<MCSymbol *, 2> PendingLabels;47,1476
  SmallSetVector<SmallSetVector48,1520
  SmallSetVector<MCSection *, 4> PendingLabelSections;48,1520
  struct PendingMCFixup 50,1608
    const MCSymbol *Sym;Sym51,1634
    MCFixup Fixup;52,1659
    MCDataFragment *DF;DF53,1678
    PendingMCFixup(54,1702
  SmallVector<SmallVector57,1832
  SmallVector<PendingMCFixup, 2> PendingFixups;57,1832
  struct PendingAssignment 59,1881
    MCSymbol *Symbol;Symbol60,1910
    const MCExpr *Value;Value61,1932
  DenseMap<DenseMap66,2068
      pendingAssignments;67,2132
  bool isIntegratedAssemblerRequired(87,2845
  void insert(94,3053
  MCAssembler &getAssembler(getAssembler128,4410
  std::optional<std::optional194,8176
  using MCStreamer::emitFill;197,8371

/usr/include/llvm/MC/MCRegister.h,706
#define LLVM_MC_MCREGISTER_H10,399
namespace llvm 17,532
class MCRegister 33,1225
  friend hash_code hash_value(34,1244
  unsigned Reg;35,1295
  constexpr MCRegister(38,1320
  static_assert(50,1903
  static constexpr bool isStackSlot(61,2461
  static constexpr bool isPhysicalRegister(67,2672
  constexpr operator unsigned(71,2796
  static MCRegister from(74,2914
  constexpr unsigned id(79,3046
  constexpr bool isValid(81,3095
template <> struct DenseMapInfo<DenseMapInfo109,4122
  static inline unsigned getEmptyKey(110,4168
  static inline unsigned getTombstoneKey(113,4263
  static unsigned getHashValue(116,4366
  static bool isEqual(119,4485
inline hash_code hash_value(124,4627

/usr/include/llvm/MC/MCRegisterInfo.h,6061
#define LLVM_MC_MCREGISTERINFO_H16,689
class MCRegisterClass 35,1116
  const iterator RegsBegin;40,1229
  const uint8_t *const RegSet;41,1257
  const uint32_t NameIdx;42,1288
  const uint16_t RegsSize;43,1314
  const uint16_t RegSetSize;44,1341
  const uint16_t ID;45,1370
  const uint16_t RegSizeInBits;46,1391
  const int8_t CopyCost;47,1423
  const bool Allocatable;48,1448
  unsigned getID(52,1534
  iterator       begin(56,1642
  iterator         end(57,1695
  unsigned getNumRegs(61,1831
  unsigned getRegister(65,1953
  bool contains(72,2230
  bool contains(82,2537
  unsigned getSizeInBits(90,2935
  int getCopyCost(95,3203
  bool isAllocatable(99,3355
struct MCRegisterDesc 109,3817
  uint32_t Name;110,3841
  uint32_t SubRegs;111,3909
  uint32_t SuperRegs;112,3968
  uint32_t SubRegIndices;116,4140
  uint32_t RegUnits;120,4327
  uint16_t RegUnitLaneMasks;124,4461
class MCRegisterInfo 139,5148
  using regclass_iterator 141,5179
  struct DwarfLLVMRegPair 145,5352
    unsigned FromReg;146,5380
    unsigned ToReg;147,5402
    bool operator<(149,5423
  struct SubRegCoveredBits 154,5625
    uint16_t Offset;155,5654
    uint16_t Size;156,5675
  const MCRegisterDesc *Desc;Desc160,5709
  unsigned NumRegs;161,5790
  MCRegister RAReg;162,5870
  MCRegister PCReg;163,5943
  const MCRegisterClass *Classes;Classes164,6017
  unsigned NumClasses;165,6096
  unsigned NumRegUnits;166,6176
  const MCPhysReg (*RegUnitRoots)RegUnitRoots167,6245
  const int16_t *DiffLists;DiffLists168,6325
  const LaneBitmask *RegUnitMaskSequences;RegUnitMaskSequences169,6405
  const char *RegStrings;RegStrings171,6554
  const char *RegClassStrings;RegClassStrings172,6632
  const uint16_t *SubRegIndices;SubRegIndices173,6711
  const SubRegCoveredBits *SubRegIdxRanges;SubRegIdxRanges175,6845
  unsigned NumSubRegIndices;177,6991
  const uint16_t *RegEncodingTable;RegEncodingTable178,7066
  unsigned L2DwarfRegsSize;181,7205
  unsigned EHL2DwarfRegsSize;182,7233
  unsigned Dwarf2LRegsSize;183,7263
  unsigned EHDwarf2LRegsSize;184,7291
  const DwarfLLVMRegPair *L2DwarfRegs;L2DwarfRegs185,7321
  const DwarfLLVMRegPair *EHL2DwarfRegs;EHL2DwarfRegs186,7397
  const DwarfLLVMRegPair *Dwarf2LRegs;Dwarf2LRegs187,7476
  const DwarfLLVMRegPair *EHDwarf2LRegs;EHDwarf2LRegs188,7552
  DenseMap<DenseMap189,7631
  DenseMap<MCRegister, int> L2SEHRegs;189,7631
  DenseMap<DenseMap190,7705
  DenseMap<MCRegister, int> L2CVRegs;190,7705
  class DiffListIterator194,7934
    void init(206,8394
    bool isValid(212,8565
    const unsigned &operator*(operator*215,8683
    DiffListIterator &operator++(operator++219,8852
    bool operator==(operator==229,9125
  detail::concat_range<detail::concat_range253,9993
  void InitMCRegisterInfo(271,10728
  void mapLLVMRegsToDwarfRegs(310,12101
  void mapDwarfRegsToLLVMRegs(324,12515
  void mapLLVMRegToSEHReg(340,13075
  void mapLLVMRegToCVReg(344,13173
  MCRegister getRARegister(350,13357
  MCRegister getProgramCounter(355,13473
  const MCRegisterDesc &get(get367,13828
  const char *getName(getName398,15253
  unsigned getNumRegs(404,15466
  unsigned getNumSubRegIndices(411,15724
  unsigned getNumRegUnits(418,15999
  regclass_iterator regclass_begin(444,16988
  regclass_iterator regclass_end(445,17051
  iterator_range<regclass_iterator> regclasses(446,17123
  unsigned getNumRegClasses(450,17242
  const MCRegisterClass& getRegClass(456,17445
  const char *getRegClassName(getRegClassName461,17602
  uint16_t getEncodingValue(466,17758
  bool isSubRegister(473,18008
  bool isSubRegisterEq(481,18310
  bool isSuperRegisterEq(487,18503
  bool isSuperOrSubRegisterEq(493,18728
class MCSubRegIterator510,19493
  MCPhysReg Val;515,19790
  MCSubRegIterator(521,19883
  const MCPhysReg &operator*(operator*531,20231
  MCSubRegIterator &operator++(operator++534,20328
  bool isValid(540,20472
class MCSubRegIndexIterator 545,20624
  MCSubRegIterator SRIter;546,20654
  const uint16_t *SRIndex;SRIndex547,20681
  MCSubRegIndexIterator(552,20822
  MCRegister getSubReg(558,21023
  unsigned getSubRegIndex(563,21143
  bool isValid(568,21264
  void operator++(571,21351
class MCSuperRegIterator579,21535
  MCPhysReg Val;584,21836
  MCSuperRegIterator(590,21931
  const MCPhysReg &operator*(operator*600,22285
  MCSuperRegIterator &operator++(operator++603,22382
  bool isValid(609,22528
inline bool MCRegisterInfo::isSuperRegister(isSuperRegister614,22724
class MCRegUnitIterator624,23180
  static constexpr unsigned RegUnitBits 629,23474
  MCRegUnit Val;631,23591
  MCRegUnitIterator(637,23685
  const MCRegUnit &operator*(operator*648,24122
  MCRegUnitIterator &operator++(operator++651,24219
  bool isValid(657,24364
class MCRegUnitMaskIterator 663,24579
  MCRegUnitIterator RUIter;664,24609
  const LaneBitmask *MaskListIter;MaskListIter665,24637
  MCRegUnitMaskIterator(672,24827
  std::pair<std::pair679,25077
  std::pair<unsigned,LaneBitmask> operator*(679,25077
  bool isValid(684,25246
  void operator++(687,25333
class MCRegUnitRootIterator 703,25871
  uint16_t Reg0 704,25901
  uint16_t Reg1 705,25922
  MCRegUnitRootIterator(710,25990
  unsigned operator*(717,26278
  bool isValid(722,26386
  void operator++(727,26487
class MCRegAliasIterator 737,26818
  MCRegister Reg;739,26854
  const MCRegisterInfo *MCRI;MCRI740,26872
  bool IncludeSelf;741,26902
  MCRegUnitIterator RI;743,26923
  MCRegUnitRootIterator RRI;744,26947
  MCSuperRegIterator SI;745,26976
  MCRegAliasIterator(748,27010
  bool isValid(762,27515
  MCRegister operator*(764,27564
  void advance(769,27689
  void operator++(787,28024
MCRegisterInfo::subregs(subregs795,28230
MCRegisterInfo::subregs_inclusive(subregs_inclusive800,28398
MCRegisterInfo::superregs(superregs805,28577
MCRegisterInfo::superregs_inclusive(superregs_inclusive810,28751
MCRegisterInfo::sub_and_superregs_inclusive(sub_and_superregs_inclusive816,29035
MCRegisterInfo::regunits(regunits821,29221

/usr/include/llvm/MC/MCSPIRVObjectWriter.h,205
#define LLVM_MC_MCSPIRVOBJECTWRITER_H10,408
class MCSPIRVObjectTargetWriter 18,558
  explicit MCSPIRVObjectTargetWriter(20,633
  Triple::ObjectFormatType getFormat(23,684
  static bool classof(24,764

/usr/include/llvm/MC/MCSPIRVStreamer.h,195
#define LLVM_MC_MCSPIRVSTREAMER_H14,569
class MCSPIRVStreamer 25,799
  MCSPIRVStreamer(27,857
  bool emitSymbolAttribute(33,1156
  void emitCommonSymbol(36,1258
  void emitZerofill(38,1372

/usr/include/llvm/MC/MCSection.h,2707
#define LLVM_MC_MCSECTION_H14,528
class MCSection 39,1130
  static constexpr unsigned NonUniqueID 41,1156
  enum SectionVariant 43,1204
    SV_COFF 44,1228
    SV_ELF,45,1245
    SV_GOFF,46,1257
    SV_MachO,47,1270
    SV_Wasm,48,1284
    SV_XCOFF,49,1297
    SV_SPIRV,50,1311
    SV_DXContainer,51,1325
  enum BundleLockStateType 55,1420
    NotBundleLocked,56,1449
    BundleLocked,57,1470
    BundleLockedAlignToEnd58,1488
  using FragmentListType 61,1521
  using const_iterator 63,1569
  using iterator 64,1628
  using const_reverse_iterator 66,1676
  using reverse_iterator 67,1751
  MCSymbol *Begin;Begin70,1824
  MCSymbol *End End71,1843
  Align Alignment;73,1919
  unsigned Ordinal 75,1994
  unsigned LayoutOrder 77,2071
  BundleLockStateType BundleLockState 80,2144
  unsigned BundleLockNestingDepth 83,2257
  bool BundleGroupBeforeFirstInst 87,2379
  bool HasInstructions 90,2484
  bool IsRegistered 92,2513
  MCDummyFragment DummyFragment;94,2539
  FragmentListType Fragments;96,2573
  SmallVector<SmallVector100,2708
  SmallVector<std::pair<unsigned, MCFragment *>, 1> SubsectionFragmentMap;100,2708
  struct PendingLabel 103,2846
    MCSymbol* Sym;104,2870
    unsigned Subsection;105,2889
    PendingLabel(106,2914
  SmallVector<SmallVector109,3020
  SmallVector<PendingLabel, 2> PendingLabels;109,3020
  StringRef Name;113,3121
  SectionVariant Variant;114,3139
  SectionKind Kind;115,3165
  StringRef getName(124,3384
  SectionKind getKind(125,3429
  SectionVariant getVariant(127,3477
  MCSymbol *getBeginSymbol(getBeginSymbol129,3534
  const MCSymbol *getBeginSymbol(getBeginSymbol130,3581
  void setBeginSymbol(133,3688
  Align getAlign(140,3836
  void setAlignment(141,3883
  void ensureMinAlignment(144,3998
  unsigned getOrdinal(149,4117
  void setOrdinal(150,4167
  unsigned getLayoutOrder(152,4223
  void setLayoutOrder(153,4281
  BundleLockStateType getBundleLockState(155,4345
  bool isBundleLocked(157,4479
  bool isBundleGroupBeforeFirstInst(159,4557
  void setBundleGroupBeforeFirstInst(162,4646
  bool hasInstructions(166,4746
  void setHasInstructions(167,4805
  bool isRegistered(169,4873
  void setIsRegistered(170,4926
  MCSection::FragmentListType &getFragmentList(getFragmentList172,4988
  const MCSection::FragmentListType &getFragmentList(getFragmentList173,5059
  static FragmentListType MCSection::*getSublistAccess(getSublistAccess178,5233
  const MCDummyFragment &getDummyFragment(getDummyFragment182,5343
  MCDummyFragment &getDummyFragment(getDummyFragment183,5419
  iterator begin(185,5484
  const_iterator begin(186,5533
  iterator end(188,5595
  const_iterator end(189,5640

/usr/include/llvm/MC/MCSectionDXContainer.h,46
#define LLVM_MC_MCSECTIONDXCONTAINER_H14,550

/usr/include/llvm/MC/MCSectionELF.h,38
#define LLVM_MC_MCSECTIONELF_H14,534

/usr/include/llvm/MC/MCSectionGOFF.h,39
#define LLVM_MC_MCSECTIONGOFF_H16,637

/usr/include/llvm/MC/MCSectionMachO.h,40
#define LLVM_MC_MCSECTIONMACHO_H14,538

/usr/include/llvm/MC/MCSectionSPIRV.h,40
#define LLVM_MC_MCSECTIONSPIRV_H14,538

/usr/include/llvm/MC/MCSymbolCOFF.h,633
#define LLVM_MC_MCSYMBOLCOFF_H10,401
class MCSymbolCOFF 18,537
  enum SymbolFlags 22,669
    SF_ClassMask 23,701
    SF_ClassShift 24,728
    SF_SafeSEH 26,752
    SF_WeakExternalCharacteristicsMask 27,777
    SF_WeakExternalCharacteristicsShift 28,826
  MCSymbolCOFF(32,885
  uint16_t getType(35,1008
  void setType(38,1058
  uint16_t getClass(42,1114
  void setClass(45,1205
  COFF::WeakExternalCharacteristics getWeakExternalCharacteristics(49,1319
  void setWeakExternalCharacteristics(53,1560
  void setIsWeakExternal(57,1786
  bool isSafeSEH(61,1868
  void setIsSafeSEH(64,1935
  static bool classof(68,2011

/usr/include/llvm/MC/MCSymbolELF.h,241
#define LLVM_MC_MCSYMBOLELF_H9,399
class MCSymbolELF 14,478
  MCSymbolELF(20,688
  void setSize(22,808
  const MCExpr *getSize(getSize24,863
  void setVisibility(26,919
  unsigned getVisibility(27,962
  void setIsBindingSet(52,1500

/usr/include/llvm/MC/MCSymbolGOFF.h,118
#define LLVM_MC_MCSYMBOLGOFF_H14,545
class MCSymbolGOFF 20,626
  MCSymbolGOFF(22,673
  static bool classof(24,795

/usr/include/llvm/MC/MCSymbolMachO.h,1288
#define LLVM_MC_MCSYMBOLMACHO_H9,401
class MCSymbolMachO 15,510
  enum MachOSymbolFlags 18,668
    SF_DescFlagsMask 19,730
    SF_ReferenceTypeMask 22,814
    SF_ReferenceTypeUndefinedNonLazy 23,868
    SF_ReferenceTypeUndefinedLazy 24,922
    SF_ReferenceTypeDefined 25,976
    SF_ReferenceTypePrivateDefined 26,1030
    SF_ReferenceTypePrivateUndefinedNonLazy 27,1084
    SF_ReferenceTypePrivateUndefinedLazy 28,1138
    SF_ThumbFunc 31,1220
    SF_NoDeadStrip 32,1274
    SF_WeakReference 33,1328
    SF_WeakDefinition 34,1382
    SF_SymbolResolver 35,1436
    SF_AltEntry 36,1490
    SF_Cold 37,1544
    SF_CommonAlignmentMask 40,1623
    SF_CommonAlignmentShift 41,1677
  MCSymbolMachO(45,1739
  void clearReferenceType(50,1894
  void setReferenceTypeUndefinedLazy(54,1977
  void setThumbFunc(61,2174
  bool isNoDeadStrip(65,2254
  void setNoDeadStrip(68,2329
  bool isWeakReference(72,2415
  void setWeakReference(75,2494
  bool isWeakDefinition(79,2586
  void setWeakDefinition(82,2667
  bool isSymbolResolver(86,2762
  void setSymbolResolver(89,2843
  void setAltEntry(93,2938
  bool isAltEntry(97,3015
  void setCold(101,3085
  bool isCold(103,3144
  void setDesc(105,3200
  uint16_t getEncodedFlags(113,3464
  static bool classof(137,4231

/usr/include/llvm/MC/MCTargetOptionsCommandFlags.h,98
#define LLVM_MC_MCTARGETOPTIONSCOMMANDFLAGS_H15,609
struct RegisterMCTargetOptionsFlags 56,1293

/usr/include/llvm/MC/MCValue.h,327
#define LLVM_MC_MCVALUE_H14,543
class MCValue 36,1312
  int64_t getConstant(43,1461
  const MCSymbolRefExpr *getSymA(getSymA44,1507
  const MCSymbolRefExpr *getSymB(getSymB45,1565
  uint32_t getRefKind(46,1623
  bool isAbsolute(49,1735
  void print(52,1832
  static MCValue get(59,1983
  static MCValue get(70,2269

/usr/include/llvm/MC/MCWasmObjectWriter.h,370
#define LLVM_MC_MCWASMOBJECTWRITER_H10,407
class MCWasmObjectTargetWriter 22,595
  const unsigned Is64Bit 23,658
  const unsigned IsEmscripten 24,688
  explicit MCWasmObjectTargetWriter(27,735
  virtual ~MCWasmObjectTargetWriter(30,815
  Triple::ObjectFormatType getFormat(32,855
  static bool classof(33,934
  bool is64Bit(43,1271
  bool isEmscripten(44,1314

/usr/include/llvm/MC/MCWasmStreamer.h,142
#define LLVM_MC_MCWASMSTREAMER_H10,403
class MCWasmStreamer 23,681
  MCWasmStreamer(25,738
  void reset(35,1114
  bool SeenIdent;79,2895

/usr/include/llvm/MC/MCWin64EH.h,436
#define LLVM_MC_MCWIN64EH_H15,577
struct Instruction 25,742
  static WinEH::Instruction PushNonVol(26,763
  static WinEH::Instruction Alloc(29,903
  static WinEH::Instruction PushMachFrame(33,1091
  static WinEH::Instruction SaveNonVol(36,1234
  static WinEH::Instruction SaveXMM(42,1555
  static WinEH::Instruction SetFPReg(48,1870
class UnwindEmitter 53,2016
class ARMUnwindEmitter 60,2252
class ARM64UnwindEmitter 67,2491

/usr/include/llvm/MC/MCWinCOFFObjectWriter.h,337
#define LLVM_MC_MCWINCOFFOBJECTWRITER_H10,410
class MCWinCOFFObjectTargetWriter 23,617
  virtual void anchor(24,683
  const unsigned Machine;26,709
  MCWinCOFFObjectTargetWriter(29,747
  Triple::ObjectFormatType getFormat(34,859
  static bool classof(35,938
  unsigned getMachine(39,1041
  virtual bool recordRelocation(43,1305

/usr/include/llvm/MC/MCWinCOFFStreamer.h,171
#define LLVM_MC_MCWINCOFFSTREAMER_H10,406
class MCWinCOFFStreamer 27,705
  MCWinCOFFStreamer(29,765
  void reset(34,976
  const MCSymbol *CurSymbol;CurSymbol75,2902

/usr/include/llvm/MC/MCWinEH.h,1495
#define LLVM_MC_MCWINEH_H10,396
struct Instruction 21,561
  const MCSymbol *Label;Label22,582
  unsigned Offset;23,607
  unsigned Register;24,626
  unsigned Operation;25,647
  Instruction(27,670
struct FrameInfo 39,1163
  const MCSymbol *Begin Begin40,1182
  const MCSymbol *End End41,1217
  const MCSymbol *FuncletOrFuncEnd FuncletOrFuncEnd42,1250
  const MCSymbol *ExceptionHandler ExceptionHandler43,1296
  const MCSymbol *Function Function44,1342
  const MCSymbol *PrologEnd PrologEnd45,1380
  const MCSymbol *Symbol Symbol46,1419
  MCSection *TextSection TextSection47,1455
  uint32_t PackedInfo 48,1491
  uint32_t PrologCodeBytes 49,1518
  bool HandlesUnwind 51,1551
  bool HandlesExceptions 52,1581
  bool EmitAttempted 53,1615
  bool Fragment 54,1645
  int LastFrameInst 56,1671
  const FrameInfo *ChainedParent ChainedParent57,1697
  std::vector<Instruction> Instructions;58,1741
  struct Epilog 59,1782
    std::vector<Instruction> Instructions;60,1800
    unsigned Condition;61,1843
    MCSymbol *End;End62,1867
  MapVector<MapVector64,1891
  MapVector<MCSymbol *, Epilog> EpilogMap;64,1891
  struct Segment 67,1985
    int64_t Offset;68,2004
    int64_t Length;69,2024
    bool HasProlog;70,2044
    MapVector<MapVector73,2161
    MapVector<MCSymbol *, int64_t> Epilogs;73,2161
    Segment(75,2206
  std::vector<Segment> Segments;79,2346
  FrameInfo(82,2405
  FrameInfo(84,2532
  bool empty(89,2742
class UnwindEmitter 99,2941

/usr/include/llvm/MC/MCXCOFFObjectWriter.h,274
#define LLVM_MC_MCXCOFFOBJECTWRITER_H10,408
class MCXCOFFObjectTargetWriter 18,528
  MCXCOFFObjectTargetWriter(20,603
  ~MCXCOFFObjectTargetWriter(23,655
  static bool classof(26,777
  bool is64Bit(29,880
  virtual std::pair<std::pair34,1072
  bool Is64Bit;39,1242

/usr/include/llvm/MC/MachineLocation.h,291
#define LLVM_MC_MACHINELOCATION_H15,778
class MachineLocation 22,870
  enum : uint32_t 28,1059
    VirtualFP 31,1235
  explicit MachineLocation(36,1333
  bool isIndirect(45,1653
  bool isReg(46,1708
  unsigned getReg(47,1762
  void setIsRegister(48,1814
  void setRegister(49,1866

/usr/include/llvm/MC/SectionKind.h,2609
#define LLVM_MC_SECTIONKIND_H10,400
class SectionKind 22,839
  enum Kind 23,859
    Metadata,25,931
    Exclude,29,1082
    Text,32,1171
           ExecuteOnly,35,1245
    ReadOnly,40,1457
           Mergeable1ByteCString,48,1853
           Mergeable2ByteCString,51,1969
           Mergeable4ByteCString,54,2085
            MergeableConst4,62,2421
            MergeableConst8,66,2567
            MergeableConst16,70,2715
            MergeableConst32,74,2864
           ThreadBSS,84,3250
           ThreadData,87,3331
           ThreadBSSLocal,90,3441
           BSS,96,3618
               BSSLocal,100,3758
               BSSExtern,103,3862
           Common,108,4079
           Data,111,4170
           ReadOnlyWithRel119,4621
  } K 120,4648
  bool isMetadata(123,4668
  bool isExclude(125,4721
  bool isText(127,4772
  bool isExecuteOnly(129,4837
  bool isReadOnly(131,4896
  bool isMergeableCString(136,5012
  bool isMergeable1ByteCString(140,5162
  bool isMergeable2ByteCString(141,5240
  bool isMergeable4ByteCString(142,5318
  bool isMergeableConst(144,5397
  bool isMergeableConst4(148,5553
  bool isMergeableConst8(149,5619
  bool isMergeableConst16(150,5685
  bool isMergeableConst32(151,5753
  bool isWriteable(153,5822
  bool isThreadLocal(157,5911
  bool isThreadBSS(161,6016
  bool isThreadData(162,6093
  bool isThreadBSSLocal(163,6149
  bool isGlobalWriteableData(165,6214
  bool isBSS(169,6327
  bool isBSSLocal(170,6404
  bool isBSSExtern(171,6456
  bool isCommon(173,6511
  bool isData(175,6560
  bool isReadOnlyWithRel(177,6605
  static SectionKind get(181,6686
  static SectionKind getMetadata(188,6786
  static SectionKind getExclude(189,6847
  static SectionKind getText(190,6906
  static SectionKind getExecuteOnly(191,6959
  static SectionKind getReadOnly(192,7026
  static SectionKind getMergeable1ByteCString(193,7087
  static SectionKind getMergeable2ByteCString(196,7180
  static SectionKind getMergeable4ByteCString(199,7273
  static SectionKind getMergeableConst4(202,7366
  static SectionKind getMergeableConst8(203,7441
  static SectionKind getMergeableConst16(204,7516
  static SectionKind getMergeableConst32(205,7593
  static SectionKind getThreadBSS(206,7670
  static SectionKind getThreadData(207,7733
  static SectionKind getThreadBSSLocal(208,7798
  static SectionKind getBSS(209,7871
  static SectionKind getBSSLocal(210,7922
  static SectionKind getBSSExtern(211,7983
  static SectionKind getCommon(212,8046
  static SectionKind getData(213,8103
  static SectionKind getReadOnlyWithRel(214,8156

/usr/include/llvm/MC/DXContainerPSVInfo.h,1579
#define LLVM_MC_DXCONTAINERPSVINFO_H10,407
struct PSVSignatureElement 27,708
  StringRef Name;28,737
  SmallVector<uint32_t> Indices;29,755
  uint8_t StartRow;30,788
  uint8_t Cols;31,808
  uint8_t StartCol;32,824
  bool Allocated;33,844
  dxbc::PSV::SemanticKind Kind;34,862
  dxbc::PSV::ComponentType Type;35,894
  dxbc::PSV::InterpolationMode Mode;36,927
  uint8_t DynamicMask;37,964
  uint8_t Stream;38,987
struct PSVRuntimeInfo 47,1380
  bool IsFinalized 48,1404
  dxbc::PSV::v2::RuntimeInfo BaseData;49,1432
  SmallVector<dxbc::PSV::v2::ResourceBindInfo> Resources;50,1471
  SmallVector<PSVSignatureElement> InputElements;51,1529
  SmallVector<PSVSignatureElement> OutputElements;52,1579
  SmallVector<PSVSignatureElement> PatchOrPrimElements;53,1630
  std::array<std::array62,2141
  std::array<SmallVector<uint32_t>, 4> OutputVectorMasks;62,2141
  SmallVector<uint32_t> PatchOrPrimMasks;63,2199
  std::array<std::array64,2241
  std::array<SmallVector<uint32_t>, 4> InputOutputMap;64,2241
  SmallVector<uint32_t> InputPatchMap;65,2296
  SmallVector<uint32_t> PatchOutputMap;66,2335
  void finalize(74,2672
class Signature 89,3163
  struct Parameter 90,3181
    uint32_t Stream;91,3202
    StringRef Name;92,3223
    uint32_t Index;93,3243
    dxbc::D3DSystemValue SystemValue;94,3263
    dxbc::SigComponentType CompType;95,3301
    uint32_t Register;96,3338
    uint8_t Mask;97,3361
    uint8_t ExclusiveMask;98,3379
    dxbc::SigMinPrecision MinPrecision;99,3406
  SmallVector<Parameter> Params;102,3452
  void addParam(105,3494

/usr/include/llvm/MC/MCAsmBackend.h,1176
#define LLVM_MC_MCASMBACKEND_H10,401
class MCAsmBackend 43,1119
  MCAsmBackend(45,1182
  virtual ~MCAsmBackend(50,1377
  const llvm::endianness Endian;52,1405
  const unsigned RelaxFixupKind;55,1515
  virtual bool allowAutoPadding(59,1704
  virtual bool allowEnhancedRelaxation(63,1946
  virtual void emitInstructionBegin(68,2225
  virtual void emitInstructionEnd(70,2370
  virtual void reset(73,2476
  virtual bool shouldForceRelocation(102,3599
  virtual bool shouldInsertExtraNopBytesForCodeAlign(112,4092
  virtual bool shouldInsertFixupForCodeAlign(119,4404
  virtual bool evaluateTargetFixup(125,4630
  virtual bool handleAddSubRelocations(134,5103
  virtual bool mayNeedRelaxation(163,6368
  virtual void relaxInstruction(186,7542
  virtual bool relaxDwarfLineAddr(189,7659
  virtual bool relaxDwarfCFA(194,7826
  virtual std::pair<std::pair201,8108
  relaxLEB128(202,8140
  virtual unsigned getMinimumNopSize(212,8511
  virtual unsigned getMaximumNopSize(216,8642
  virtual void finishLayout(228,9124
  virtual void handleAssemblerFlag(232,9309
  virtual uint32_t generateCompactUnwindEncoding(235,9439
  virtual bool isMicroMips(241,9688

/usr/include/llvm/MC/MCAsmInfo.h,12073
#define LLVM_MC_MCASMINFO_H16,697
enum class EncodingType 35,1015
  Invalid,36,1041
  Alpha,37,1064
  Alpha64,38,1093
  ARM,39,1122
  CE,40,1165
  Itanium,41,1214
  X86,42,1266
  MIPS 43,1322
enum LCOMMType 50,1387
enum LCOMMType { NoAlignment,50,1387
enum LCOMMType { NoAlignment, ByteAlignment,50,1387
enum LCOMMType { NoAlignment, ByteAlignment, Log2Alignment 50,1387
class MCAsmInfo 56,1590
  enum AsmCharLiteralSyntax 59,1663
    ACLS_Unknown,60,1693
    ACLS_SingleQuotePrefix,62,1799
  unsigned CodePointerSize 72,2158
  unsigned CalleeSaveStackSlotSize 76,2306
  bool IsLittleEndian 79,2404
  bool StackGrowsUp 82,2490
  bool HasSubsectionsViaSymbols 86,2620
  bool HasMachoZeroFillDirective 90,2803
  bool HasMachoTBSSDirective 94,2996
  bool HasCOFFAssociativeComdats 99,3202
  bool HasCOFFComdatConstants 103,3363
  bool HasVisibilityOnlyWithLinkage 107,3548
  unsigned MaxInstLength 111,3731
  unsigned MinInstAlignment 115,3900
  bool DollarIsPC 119,4055
  bool DotIsPC 123,4206
  bool StarIsPC 127,4326
  const char *SeparatorString;SeparatorString131,4480
  StringRef CommentString;135,4598
  bool RestrictCommentStringToStartOfStatement 139,4761
  bool AllowAdditionalComments 147,5177
  bool EmitGNUAsmStartIndentationMarker 151,5337
  const char *LabelSuffix;LabelSuffix154,5445
  bool EmitLabelsInUpperCase 157,5532
  bool UseAssignmentForEHBegin 160,5641
  bool NeedsLocalForSize 163,5734
  StringRef PrivateGlobalPrefix;168,5948
  StringRef PrivateLabelPrefix;172,6088
  StringRef LinkerPrivateGlobalPrefix;178,6416
  const char *InlineAsmStart;InlineAsmStart182,6606
  const char *InlineAsmEnd;InlineAsmEnd183,6636
  const char *Code16Directive;Code16Directive188,6837
  const char *Code32Directive;Code32Directive189,6868
  const char *Code64Directive;Code64Directive190,6899
  unsigned AssemblerDialect 193,6998
  bool AllowAtInName 197,7130
  bool AllowQuestionAtStartOfIdentifier 204,7483
  bool AllowDollarAtStartOfIdentifier 211,7855
  bool AllowAtAtStartOfIdentifier 218,8222
  bool AllowHashAtStartOfIdentifier 225,8585
  bool SupportsQuotedNames 229,8724
  bool UseDataRegionDirectives 234,8917
  bool UseDotAlignForAlignment 238,9056
  bool HasLEB128Directives 241,9150
  bool PPCUseFullRegisterNames 244,9233
  const char *ZeroDirective;ZeroDirective252,9600
  bool ZeroDirectiveSupportsNonZeroValue 257,9841
  const char *AsciiDirective;AsciiDirective262,10098
  const char *AscizDirective;AscizDirective267,10361
  const char *ByteListDirective ByteListDirective272,10583
  const char *PlainStringDirective PlainStringDirective277,10845
  AsmCharLiteralSyntax CharacterLiteralSyntax 282,11115
  const char *Data8bitsDirective;Data8bitsDirective288,11452
  const char *Data16bitsDirective;Data16bitsDirective289,11486
  const char *Data32bitsDirective;Data32bitsDirective290,11521
  const char *Data64bitsDirective;Data64bitsDirective291,11556
  bool SupportsSignedData 294,11644
  const char *GPRel64Directive GPRel64Directive299,11853
  const char *GPRel32Directive GPRel32Directive304,12090
  const char *DTPRel32Directive DTPRel32Directive309,12338
  const char *DTPRel64Directive DTPRel64Directive310,12381
  const char *TPRel32Directive TPRel32Directive311,12424
  const char *TPRel64Directive TPRel64Directive312,12466
  bool SunStyleELFSectionSwitchSyntax 317,12709
  bool UsesELFSectionDirectiveForBSS 322,12949
  bool NeedsDwarfSectionOffsetDirective 324,12996
  bool AlignmentIsInBytes 332,13370
  unsigned TextAlignFillValue 336,13535
  const char *GlobalDirective;GlobalDirective342,13740
  bool SetDirectiveSuppressesReloc 349,13915
  bool HasAggressiveSymbolFolding 364,14178
  bool COMMDirectiveAlignmentIsInBytes 368,14347
  LCOMM::LCOMMType LCOMMDirectiveAlignmentType 372,14540
  bool HasBasenameOnlyForFileDirective 376,14768
  bool HasPairedDoubleQuoteStringConstants 382,15073
  bool HasFunctionAlignment 386,15246
  bool HasDotTypeDotSizeDirective 390,15400
  bool HasSingleParameterDotFile 394,15563
  bool HasFourStringsDotFile 398,15719
  bool HasIdentDirective 402,15862
  bool HasNoDeadStrip 406,15994
  bool HasAltEntry 410,16119
  const char *WeakDirective;WeakDirective413,16224
  const char *WeakRefDirective WeakRefDirective417,16379
  bool HasWeakDefDirective 421,16534
  bool HasWeakDefCanBeHiddenDirective 425,16715
  bool AvoidWeakIfComdat 430,16907
  MCSymbolAttr HiddenVisibilityAttr 434,17074
  MCSymbolAttr ExportedVisibilityAttr 438,17262
  MCSymbolAttr HiddenDeclarationVisibilityAttr 442,17460
  MCSymbolAttr ProtectedVisibilityAttr 446,17660
  MCSymbolAttr MemtagAttr 448,17718
  bool SupportsDebugInformation 454,17930
  ExceptionHandling ExceptionsType 457,18039
  bool UsesCFIWithoutEH 461,18259
  WinEH::EncodingType WinEHEncodingType 464,18372
  bool DwarfUsesRelocationsAcrossSections 468,18549
  bool DwarfFDESymbolsUseAbsDiff 472,18705
  bool UsesDwarfFileAndLocDirectives 476,18879
  bool EnableDwarfFileDirectoryDefault 480,19006
  bool DwarfSectionSizeRequired 484,19200
  bool DwarfRegNumForCFI 488,19373
  bool UseParensForSymbolVariant 492,19554
  bool UseParensForDollarSignNames 496,19726
  bool SupportsExtendedDwarfLocDirective 500,19872
  std::vector<MCCFIInstruction> InitialFrameState;504,20001
  std::pair<std::pair512,20386
  std::pair<int, int> BinutilsVersion 512,20386
  bool UseIntegratedAssembler;519,20758
  bool ParseInlineAsmUsingAsmParser;522,20869
  bool PreserveAsmComments;525,20943
  DebugCompressionType CompressDebugSections 528,21037
  bool UseLogicalShr 532,21240
  bool RelaxELFRelocations 536,21354
  bool HasMipsExpressions 540,21503
  bool UseMotorolaIntegers 543,21605
  bool NeedsFunctionDescriptors 546,21696
  unsigned getCodePointerSize(553,21837
  unsigned getCalleeSaveStackSlotSize(557,21972
  bool isLittleEndian(562,22104
  bool isStackGrowthDirectionUp(565,22198
  bool hasSubsectionsViaSymbols(567,22264
  const char *getData8bitsDirective(getData8bitsDirective571,22374
  const char *getData16bitsDirective(getData16bitsDirective572,22449
  const char *getData32bitsDirective(getData32bitsDirective573,22526
  const char *getData64bitsDirective(getData64bitsDirective574,22603
  bool supportsSignedData(575,22680
  const char *getGPRel64Directive(getGPRel64Directive576,22745
  const char *getGPRel32Directive(getGPRel32Directive577,22816
  const char *getDTPRel64Directive(getDTPRel64Directive578,22887
  const char *getDTPRel32Directive(getDTPRel32Directive579,22960
  const char *getTPRel64Directive(getTPRel64Directive580,23033
  const char *getTPRel32Directive(getTPRel32Directive581,23104
  virtual MCSection *getNonexecutableStackSection(getNonexecutableStackSection586,23349
  bool usesSunStyleELFSectionSwitchSyntax(620,24792
  bool usesELFSectionDirectiveForBSS(624,24892
  bool needsDwarfSectionOffsetDirective(628,24986
  bool hasMachoZeroFillDirective(634,25103
  bool hasMachoTBSSDirective(635,25182
  bool hasCOFFAssociativeComdats(636,25253
  bool hasCOFFComdatConstants(637,25332
  bool hasVisibilityOnlyWithLinkage(638,25405
  virtual unsigned getMaxInstLength(644,25643
  unsigned getMinInstAlignment(648,25756
  bool getDollarIsPC(649,25824
  bool getDotIsPC(650,25876
  bool getStarIsPC(651,25922
  const char *getSeparatorString(getSeparatorString652,25970
  unsigned getCommentColumn(656,26132
  StringRef getCommentString(658,26184
  bool getRestrictCommentStringToStartOfStatement(659,26247
  bool shouldAllowAdditionalComments(662,26363
  bool getEmitGNUAsmStartIndentationMarker(663,26444
  const char *getLabelSuffix(getLabelSuffix666,26546
  bool shouldEmitLabelsInUpperCase(667,26607
  bool useAssignmentForEHBegin(669,26685
  bool needsLocalForSize(670,26760
  StringRef getPrivateGlobalPrefix(671,26823
  StringRef getPrivateLabelPrefix(672,26898
  bool hasLinkerPrivateGlobalPrefix(674,26972
  StringRef getLinkerPrivateGlobalPrefix(678,27070
  const char *getInlineAsmStart(getInlineAsmStart684,27243
  const char *getInlineAsmEnd(getInlineAsmEnd685,27310
  const char *getCode16Directive(getCode16Directive686,27373
  const char *getCode32Directive(getCode32Directive687,27442
  const char *getCode64Directive(getCode64Directive688,27511
  unsigned getAssemblerDialect(689,27580
  bool doesAllowAtInName(690,27648
  void setAllowAtInName(691,27707
  bool doesAllowQuestionAtStartOfIdentifier(692,27762
  bool doesAllowAtAtStartOfIdentifier(695,27865
  bool doesAllowDollarAtStartOfIdentifier(698,27956
  bool doesAllowHashAtStartOfIdentifier(701,28055
  bool supportsNameQuoting(704,28150
  bool doesSupportDataRegionDirectives(706,28218
  bool useDotAlignForAlignment(710,28308
  bool hasLEB128Directives(714,28390
  bool useFullRegisterNames(716,28458
  void setFullRegisterNames(717,28530
  const char *getZeroDirective(getZeroDirective719,28600
  bool doesZeroDirectiveSupportNonZeroValue(720,28665
  const char *getAsciiDirective(getAsciiDirective723,28769
  const char *getAscizDirective(getAscizDirective724,28836
  const char *getByteListDirective(getByteListDirective725,28903
  const char *getPlainStringDirective(getPlainStringDirective726,28976
  AsmCharLiteralSyntax characterLiteralSyntax(727,29055
  bool getAlignmentIsInBytes(730,29150
  unsigned getTextAlignFillValue(731,29218
  const char *getGlobalDirective(getGlobalDirective732,29290
  bool doesSetDirectiveSuppressReloc(734,29360
  bool hasAggressiveSymbolFolding(738,29452
  bool getCOMMDirectiveAlignmentIsInBytes(740,29534
  LCOMM::LCOMMType getLCOMMDirectiveAlignmentType(744,29635
  bool hasBasenameOnlyForFileDirective(748,29740
  bool hasPairedDoubleQuoteStringConstants(751,29837
  bool hasFunctionAlignment(754,29942
  bool hasDotTypeDotSizeDirective(755,30011
  bool hasSingleParameterDotFile(756,30092
  bool hasFourStringsDotFile(757,30171
  bool hasIdentDirective(758,30242
  bool hasNoDeadStrip(759,30305
  bool hasAltEntry(760,30362
  const char *getWeakDirective(getWeakDirective761,30413
  const char *getWeakRefDirective(getWeakRefDirective762,30478
  bool hasWeakDefDirective(763,30549
  bool hasWeakDefCanBeHiddenDirective(765,30617
  bool avoidWeakIfComdat(769,30713
  MCSymbolAttr getHiddenVisibilityAttr(771,30777
  MCSymbolAttr getExportedVisibilityAttr(773,30858
  MCSymbolAttr getHiddenDeclarationVisibilityAttr(775,30943
  MCSymbolAttr getProtectedVisibilityAttr(779,31052
  MCSymbolAttr getMemtagAttr(783,31145
  bool doesSupportDebugInformation(785,31206
  ExceptionHandling getExceptionHandlingType(787,31287
  WinEH::EncodingType getWinEHEncodingType(788,31367
  void setExceptionsType(790,31449
  bool usesCFIWithoutEH(794,31528
  bool usesCFIForEH(800,31755
  bool usesWindowsCFI(806,31982
  bool doesDwarfUseRelocationsAcrossSections(812,32201
  bool doDwarfFDESymbolsUseAbsDiff(816,32308
  bool useDwarfRegNumForCFI(817,32389
  bool useParensForSymbolVariant(818,32455
  bool useParensForDollarSignNames(819,32534
  bool supportsExtendedDwarfLocDirective(822,32623
  bool usesDwarfFileAndLocDirectives(826,32725
  bool needsDwarfSectionSizeInHeader(830,32819
  bool enableDwarfFileDirectoryDefault(834,32908
  const std::vector<MCCFIInstruction> &getInitialFrameState(getInitialFrameState840,33066
  void setBinutilsVersion(844,33171
  bool useIntegratedAssembler(849,33330
  bool parseInlineAsmUsingAsmParser(852,33474
  bool binutilsIsAtLeast(856,33566
  virtual void setUseIntegratedAssembler(861,33753
  virtual void setParseInlineAsmUsingAsmParser(866,33916
  bool preserveAsmComments(871,34094
  virtual void setPreserveAsmComments(874,34229
  DebugCompressionType compressDebugSections(878,34319
  void setCompressDebugSections(882,34413
  bool shouldUseLogicalShr(886,34553
  bool canRelaxRelocations(888,34615
  void setRelaxELFRelocations(889,34682
  bool hasMipsExpressions(890,34749
  bool needsFunctionDescriptors(891,34814
  bool shouldUseMotorolaIntegers(892,34891

/usr/include/llvm/MC/MCAssembler.h,5290
#define LLVM_MC_MCASSEMBLER_H10,400
struct IndirectSymbolData 58,1563
  MCSymbol *Symbol;Symbol59,1591
  MCSection *Section;Section60,1611
struct DataRegionData 65,1731
  enum KindTy 68,1853
  enum KindTy { Data 68,1853
  enum KindTy { Data = 1, JumpTable8,68,1853
  enum KindTy { Data = 1, JumpTable8, JumpTable16,68,1853
  enum KindTy { Data = 1, JumpTable8, JumpTable16, JumpTable32 68,1853
  enum KindTy { Data = 1, JumpTable8, JumpTable16, JumpTable32 } Kind;68,1853
  MCSymbol *Start;Start69,1924
  MCSymbol *End;End70,1943
class MCAssembler 73,1964
  using SectionListType 77,2021
  using SymbolDataListType 78,2073
  using const_iterator 80,2134
  using iterator 81,2210
  using const_symbol_iterator 83,2275
  using symbol_iterator 85,2367
  using symbol_range 87,2442
  using const_symbol_range 88,2498
  using const_indirect_symbol_iterator 90,2567
  using indirect_symbol_iterator 92,2663
  using const_data_region_iterator 94,2742
  using data_region_iterator 96,2830
  using VersionInfoType 101,3097
      MCVersionMinType Type;104,3171
      MachO::PlatformType Platform;105,3249
  MCContext &Context;Context115,3527
  std::unique_ptr<MCAsmBackend> Backend;117,3550
  std::unique_ptr<MCCodeEmitter> Emitter;119,3592
  std::unique_ptr<MCObjectWriter> Writer;121,3635
  SectionListType Sections;123,3678
  SymbolDataListType Symbols;125,3707
  std::vector<IndirectSymbolData> IndirectSymbols;127,3738
  std::vector<DataRegionData> DataRegions;129,3790
  std::vector<std::vector<std::string>> LinkerOptions;132,3902
  std::vector<std::vector135,3992
  std::vector<std::pair<std::string, size_t>> FileNames;135,3992
  MCDwarfLineTableParams LTParams;137,4050
  mutable SmallPtrSet<SmallPtrSet146,4416
  mutable SmallPtrSet<const MCSymbol *, 32> ThumbFuncs;146,4416
  unsigned BundleAlignSize;151,4602
  bool RelaxAll 153,4631
  bool SubsectionsViaSymbols 154,4652
  bool IncrementalLinkerCompatible 155,4686
  unsigned ELFHeaderEFlags;162,5025
  MCLOHContainer LOHContainer;166,5162
  VersionInfoType VersionInfo;168,5194
  VersionInfoType DarwinTargetVariantVersionInfo;169,5225
  std::tuple<std::tuple225,8018
  struct Symver 231,8320
    SMLoc Loc;232,8338
    const MCSymbol *Sym;Sym233,8353
    StringRef Name;234,8378
    bool KeepOriginalSym;236,8455
  std::vector<Symver> Symvers;238,8486
  void setIsThumbFunc(276,10237
  unsigned getELFHeaderEFlags(279,10336
  void setELFHeaderEFlags(280,10402
  const VersionInfoType &getVersionInfo(getVersionInfo283,10525
  void setVersionMin(284,10597
  void setBuildVersion(294,11002
  const VersionInfoType &getDarwinTargetVariantVersionInfo(getDarwinTargetVariantVersionInfo305,11428
  void setDarwinTargetVariantBuildVersion(308,11544
  MCContext &getContext(getContext324,12223
  MCAsmBackend *getBackendPtr(getBackendPtr326,12276
  MCCodeEmitter *getEmitterPtr(getEmitterPtr328,12341
  MCObjectWriter *getWriterPtr(getWriterPtr330,12407
  MCAsmBackend &getBackend(getBackend332,12472
  MCCodeEmitter &getEmitter(getEmitter334,12529
  MCObjectWriter &getWriter(getWriter336,12587
  MCDwarfLineTableParams getDWARFLinetableParams(338,12644
  void setDWARFLinetableParams(339,12722
  bool getSubsectionsViaSymbols(350,13160
  void setSubsectionsViaSymbols(351,13234
  bool isIncrementalLinkerCompatible(353,13314
  void setIncrementalLinkerCompatible(356,13405
  bool getRelaxAll(360,13503
  void setRelaxAll(361,13551
  bool isBundlingEnabled(363,13605
  unsigned getBundleAlignSize(365,13672
  void setBundleAlignSize(367,13739
  iterator begin(376,13962
  const_iterator begin(377,14010
  iterator end(379,14071
  const_iterator end(380,14115
  size_t size(382,14172
  symbol_iterator symbol_begin(387,14272
  const_symbol_iterator symbol_begin(388,14333
  symbol_iterator symbol_end(390,14407
  const_symbol_iterator symbol_end(391,14464
  symbol_range symbols(393,14534
  const_symbol_range symbols(394,14612
  size_t symbol_size(398,14709
  std::vector<IndirectSymbolData> &getIndirectSymbols(getIndirectSymbols407,14994
  indirect_symbol_iterator indirect_symbol_begin(411,15085
  const_indirect_symbol_iterator indirect_symbol_begin(414,15178
  indirect_symbol_iterator indirect_symbol_end(418,15284
  const_indirect_symbol_iterator indirect_symbol_end(421,15373
  size_t indirect_symbol_size(425,15475
  std::vector<std::vector<std::string>> &getLinkerOptions(getLinkerOptions431,15606
  std::vector<DataRegionData> &getDataRegions(getDataRegions442,15923
  data_region_iterator data_region_begin(444,15996
  const_data_region_iterator data_region_begin(445,16071
  data_region_iterator data_region_end(449,16165
  const_data_region_iterator data_region_end(450,16236
  size_t data_region_size(454,16326
  MCLOHContainer &getLOHContainer(getLOHContainer463,16616
  const MCLOHContainer &getLOHContainer(getLOHContainer464,16677
  struct CGProfileEntry 468,16795
    const MCSymbolRefExpr *From;From469,16821
    const MCSymbolRefExpr *To;To470,16854
    uint64_t Count;471,16885
  std::vector<CGProfileEntry> CGProfile;473,16910
  MutableArrayRef<MutableArrayRef481,17094
  MutableArrayRef<std::pair<std::string, size_t>> getFileNames(481,17094
  void addFileName(485,17188

/usr/include/llvm/MC/MCCodeEmitter.h,230
#define LLVM_MC_MCCODEEMITTER_H10,402
class MCCodeEmitter 21,629
  MCCodeEmitter(23,693
  virtual ~MCCodeEmitter(28,830
  virtual void reset(31,885
  virtual void emitPrefix(37,1071
  virtual void encodeInstruction(40,1268

/usr/include/llvm/MC/MCCodeView.h,1996
#define LLVM_MC_MCCODEVIEW_H14,558
class MCCVLoc 38,1098
  uint32_t FunctionId;40,1149
  uint32_t FileNum;41,1172
  uint32_t Line;42,1192
  uint16_t Column;43,1209
  uint16_t PrologueEnd 44,1228
  uint16_t IsStmt 45,1256
  MCCVLoc(49,1354
  const MCSymbol *getLabel(getLabel58,1756
  unsigned getFunctionId(60,1810
  unsigned getFileNum(63,1906
  unsigned getLine(66,1993
  unsigned getColumn(69,2076
  bool isPrologueEnd(71,2125
  bool isStmt(72,2178
  void setLabel(74,2220
  void setFunctionId(76,2271
  void setFileNum(79,2368
  void setLine(82,2464
  void setColumn(85,2550
  void setPrologueEnd(90,2646
  void setIsStmt(91,2699
struct MCCVFunctionInfo 98,3020
  unsigned ParentFuncIdPlusOne 104,3402
  enum : unsigned 106,3439
  enum : unsigned { FunctionSentinel 106,3439
  struct LineInfo 108,3486
    unsigned File;109,3506
    unsigned Line;110,3525
    unsigned Col;111,3544
  LineInfo InlinedAt;114,3568
  MCSection *Section Section118,3705
  DenseMap<unsigned,unsigned124,4023
  DenseMap<unsigned, LineInfo> InlinedAtMap;124,4023
  bool isUnallocatedFunctionInfo(128,4191
  bool isInlinedCallSite(132,4389
  unsigned getParentFuncId(137,4524
class CodeViewContext 144,4711
  std::pair<std::pair184,6468
  std::pair<std::pair185,6528
  std::pair<std::pair223,8126
  StringMap<unsigned> StringTable;227,8246
  MCDataFragment *StrTabFragment StrTabFragment230,8336
  bool InsertedStrTabFragment 231,8380
  struct FileInfo 238,8545
    unsigned StringTableOffset;239,8565
    uint8_t ChecksumKind;245,8722
    ArrayRef<uint8_t> Checksum;247,8749
    MCSymbol *ChecksumTableOffset;ChecksumTableOffset251,8918
  SmallVector<SmallVector255,9003
  SmallVector<FileInfo, 4> Files;255,9003
  std::map<std::map259,9126
  std::map<unsigned, std::pair<size_t, size_t>> MCCVLineStartStop;259,9126
  std::vector<MCCVLoc> MCCVLines;262,9242
  std::vector<MCCVFunctionInfo> Functions;265,9351
  bool ChecksumOffsetsAssigned 269,9486

/usr/include/llvm/MC/MCDwarf.h,6825
#define LLVM_MC_MCDWARF_H15,604
class MCDwarfLineStr 51,1486
  BumpPtrAllocator Alloc;52,1509
  StringSaver Saver{Saver53,1535
  MCSymbol *LineStrLabel LineStrLabel54,1563
  StringTableBuilder LineStrings{LineStrings55,1599
  bool UseRelocs 56,1660
  StringSaver &getSaver(getSaver63,1840
struct MCDwarfFile 87,2831
  std::string Name;89,2911
  unsigned DirIndex 92,3000
  std::optional<MD5::MD5Result> Checksum;96,3124
  std::optional<StringRef> Source;100,3261
class MCDwarfLoc 105,3387
  uint32_t FileNum;106,3406
  uint32_t Line;107,3426
  uint16_t Column;108,3443
  uint8_t Flags;110,3495
  uint8_t Isa;111,3512
  uint32_t Discriminator;112,3527
#define DWARF2_LINE_DEFAULT_IS_STMT 115,3622
#define DWARF2_FLAG_IS_STMT 117,3661
#define DWARF2_FLAG_BASIC_BLOCK 118,3698
#define DWARF2_FLAG_PROLOGUE_END 119,3739
#define DWARF2_FLAG_EPILOGUE_BEGIN 120,3781
  MCDwarfLoc(126,3922
  unsigned getFileNum(136,4328
  unsigned getLine(139,4418
  unsigned getColumn(142,4504
  unsigned getFlags(145,4593
  unsigned getIsa(148,4678
  unsigned getDiscriminator(151,4769
  void setFileNum(154,4874
  void setLine(157,4973
  void setColumn(160,5062
  void setFlags(166,5198
  void setIsa(172,5326
  void setDiscriminator(178,5454
class MCDwarfLineEntry 188,5885
  MCSymbol *Label;Label189,5930
  MCDwarfLineEntry(197,6161
  MCSymbol *getLabel(getLabel200,6261
  bool IsEndEntry 203,6377
  void setEndLabel(206,6454
class MCLineSection 221,7051
  void addLineEntry(224,7137
  using MCDwarfLineEntryCollection 232,7460
  using iterator 233,7528
  using const_iterator 234,7585
  using MCLineDivisionMap 235,7654
  MCLineDivisionMap MCLineDivisions;239,7800
  const MCLineDivisionMap &getMCLineEntries(getMCLineEntries243,7923
struct MCDwarfLineTableParams 248,8013
  uint8_t DWARF2LineOpcodeBase 253,8254
  int8_t DWARF2LineBase 256,8418
  uint8_t DWARF2LineRange 258,8508
struct MCDwarfLineTableHeader 261,8544
  MCSymbol *Label Label262,8576
  SmallVector<SmallVector263,8605
  SmallVector<std::string, 3> MCDwarfDirs;263,8605
  SmallVector<SmallVector264,8648
  SmallVector<MCDwarfFile, 3> MCDwarfFiles;264,8648
  StringMap<unsigned> SourceIdMap;265,8692
  std::string CompilationDir;266,8727
  MCDwarfFile RootFile;267,8757
  bool HasAnySource 268,8781
  bool HasAllMD5 271,8820
  bool HasAnyMD5 272,8845
  std::pair<std::pair281,9212
  std::pair<std::pair284,9358
  void resetMD5Usage(288,9548
  void trackMD5Usage(292,9622
  bool isMD5UsageConsistent(296,9715
  void setRootFile(300,9819
  void resetFileTable(312,10257
class MCDwarfDwoLineTable 326,10597
  MCDwarfLineTableHeader Header;327,10625
  bool HasSplitLineTable 328,10658
  void maybeSetRootFile(331,10701
  unsigned getFile(339,11010
class MCDwarfLineTable 351,11476
  MCDwarfLineTableHeader Header;352,11501
  MCLineSection MCLineSections;353,11534
  unsigned getFile(372,12419
  void setRootFile(380,12795
  void resetFileTable(392,13282
  bool hasRootFile(394,13336
  MCDwarfFile &getRootFile(getRootFile396,13406
  const MCDwarfFile &getRootFile(getRootFile397,13463
  bool isMD5UsageConsistent(400,13598
  MCSymbol *getLabel(getLabel402,13677
  void setLabel(406,13738
  const SmallVectorImpl<std::string> &getMCDwarfDirs(getMCDwarfDirs410,13804
  SmallVectorImpl<std::string> &getMCDwarfDirs(getMCDwarfDirs414,13903
  const SmallVectorImpl<MCDwarfFile> &getMCDwarfFiles(getMCDwarfFiles418,13990
  SmallVectorImpl<MCDwarfFile> &getMCDwarfFiles(getMCDwarfFiles422,14091
  const MCLineSection &getMCLineSections(getMCLineSections426,14180
  MCLineSection &getMCLineSections(getMCLineSections429,14262
class MCDwarfLineAddr 434,14336
class MCGenDwarfInfo 445,14794
class MCGenDwarfLabelEntry 456,15113
  StringRef Name;459,15211
  unsigned FileNumber;461,15275
  unsigned LineNumber;463,15338
  MCSymbol *Label;Label465,15424
  MCGenDwarfLabelEntry(468,15452
  StringRef getName(473,15666
  unsigned getFileNumber(474,15711
  unsigned getLineNumber(475,15767
  MCSymbol *getLabel(getLabel476,15823
class MCCFIInstruction 484,16084
  enum OpType 486,16117
    OpSameValue,487,16133
    OpRememberState,488,16150
    OpRestoreState,489,16171
    OpOffset,490,16191
    OpLLVMDefAspaceCfa,491,16205
    OpDefCfaRegister,492,16229
    OpDefCfaOffset,493,16251
    OpDefCfa,494,16271
    OpRelOffset,495,16285
    OpAdjustCfaOffset,496,16302
    OpEscape,497,16325
    OpRestore,498,16339
    OpUndefined,499,16354
    OpRegister,500,16371
    OpWindowSave,501,16387
    OpNegateRAState,502,16405
    OpGnuArgsSize503,16426
  OpType Operation;507,16459
  MCSymbol *Label;Label508,16479
  unsigned Register;509,16498
    int Offset;511,16529
    unsigned Register2;512,16545
  unsigned AddressSpace 514,16574
  SMLoc Loc;515,16605
  std::vector<char> Values;516,16618
  std::string Comment;517,16646
  MCCFIInstruction(519,16670
  MCCFIInstruction(526,16989
  MCCFIInstruction(531,17177
  static MCCFIInstruction cfiDefCfa(541,17538
  static MCCFIInstruction createDefCfaRegister(548,17894
  static MCCFIInstruction cfiDefCfaOffset(556,18335
  static MCCFIInstruction createAdjustCfaOffset(564,18683
  static MCCFIInstruction createLLVMDefAspaceCfa(573,19187
  static MCCFIInstruction createOffset(583,19672
  static MCCFIInstruction createRelOffset(591,20098
  static MCCFIInstruction createRegister(598,20403
  static MCCFIInstruction createWindowSave(604,20687
  static MCCFIInstruction createNegateRAState(609,20875
  static MCCFIInstruction createRestore(616,21210
  static MCCFIInstruction createUndefined(623,21503
  static MCCFIInstruction createSameValue(630,21829
  static MCCFIInstruction createRememberState(636,22099
  static MCCFIInstruction createRestoreState(641,22302
  static MCCFIInstruction createEscape(647,22525
  static MCCFIInstruction createGnuArgsSize(653,22816
  OpType getOperation(658,23011
  MCSymbol *getLabel(getLabel659,23063
  unsigned getRegister(661,23111
  unsigned getRegister2(670,23479
  unsigned getAddressSpace(675,23577
  int getOffset(680,23689
  StringRef getValues(688,23990
  StringRef getComment(693,24111
  SMLoc getLoc(694,24162
struct MCDwarfFrameInfo 697,24205
  MCSymbol *Begin Begin700,24264
  MCSymbol *End End701,24293
  const MCSymbol *Personality Personality702,24320
  const MCSymbol *Lsda Lsda703,24361
  std::vector<MCCFIInstruction> Instructions;704,24395
  unsigned CurrentCfaRegister 705,24441
  unsigned PersonalityEncoding 706,24476
  unsigned LsdaEncoding 707,24512
  uint32_t CompactUnwindEncoding 708,24541
  bool IsSignalFrame 709,24579
  bool IsSimple 710,24609
  unsigned RAReg 711,24634
  bool IsBKeyFrame 712,24685
  bool IsMTETaggedFrame 713,24713
class MCDwarfFrameEmitter 716,24750

/usr/include/llvm/MC/MCELFObjectWriter.h,1386
#define LLVM_MC_MCELFOBJECTWRITER_H10,406
struct ELFRelocationEntry 30,816
  uint64_t Offset;31,844
  const MCSymbolELF *Symbol;Symbol32,891
  unsigned Type;33,952
  uint64_t Addend;34,1002
  const MCSymbolELF *OriginalSymbol;OriginalSymbol35,1043
  uint64_t OriginalAddend;36,1130
  ELFRelocationEntry(38,1191
  void print(44,1533
  LLVM_DUMP_METHOD void dump(50,1772
class MCELFObjectTargetWriter 53,1832
  const uint8_t OSABI;54,1894
  const uint8_t ABIVersion;55,1917
  const uint16_t EMachine;56,1945
  const unsigned HasRelocationAddend 57,1972
  const unsigned Is64Bit 58,2014
  Triple::ObjectFormatType getFormat(67,2270
  static bool classof(68,2348
  static uint8_t getOSABI(72,2450
  uint8_t getOSABI(99,3329
  uint8_t getABIVersion(100,3374
  uint16_t getEMachine(101,3429
  bool hasRelocationAddend(102,3481
  bool is64Bit(103,3548
#define R_TYPE_SHIFT 108,3714
#define R_TYPE_MASK 109,3737
#define R_TYPE2_SHIFT 110,3768
#define R_TYPE2_MASK 111,3792
#define R_TYPE3_SHIFT 112,3824
#define R_TYPE3_MASK 113,3849
#define R_SSYM_SHIFT 114,3881
#define R_SSYM_MASK 115,3905
  uint8_t getRType(118,3972
  uint8_t getRType2(121,4072
  uint8_t getRType3(124,4174
  uint8_t getRSsym(127,4276
  static unsigned setRTypes(132,4410
  unsigned setRSsym(137,4637
  virtual MCSectionELF *getMemtagRelocsSection(getMemtagRelocsSection145,5028

/usr/include/llvm/MC/MCExpr.h,8537
#define LLVM_MC_MCEXPR_H10,395
class MCExpr 35,886
  enum ExprKind 37,909
    Binary,38,937
    Constant,39,977
    SymbolRef,40,1019
    Unary,41,1086
    Target 42,1125
  static_assert(47,1238
  ExprKind Kind;51,1404
  unsigned SubclassData : NumSubclassDataBits;53,1472
  SMLoc Loc;54,1519
  bool evaluateAsAbsolute(56,1533
  bool evaluateAsRelocatableImpl(67,1966
  ExprKind getKind(81,2417
  SMLoc getLoc(82,2461
  void print(88,2548
class MCConstantExpr 144,4794
  int64_t Value;145,4833
  static const unsigned SizeInBytesBits 148,4927
  static const unsigned SizeInBytesMask 149,4972
  static const unsigned PrintInHexBit 150,5042
  static unsigned encodeSubclassData(152,5105
  MCConstantExpr(157,5311
  int64_t getValue(173,5784
  unsigned getSizeInBytes(174,5829
  bool useHexFormat(178,5918
  static bool classof(182,6010
class MCSymbolRefExpr 192,6362
  enum VariantKind 194,6410
    VK_None,195,6442
    VK_Invalid,196,6455
    VK_GOT,198,6472
    VK_GOTOFF,199,6484
    VK_GOTREL,200,6499
    VK_PCREL,201,6514
    VK_GOTPCREL,202,6528
    VK_GOTPCREL_NORELAX,203,6545
    VK_GOTTPOFF,204,6570
    VK_INDNTPOFF,205,6587
    VK_NTPOFF,206,6605
    VK_GOTNTPOFF,207,6620
    VK_PLT,208,6638
    VK_TLSGD,209,6650
    VK_TLSLD,210,6664
    VK_TLSLDM,211,6678
    VK_TPOFF,212,6693
    VK_DTPOFF,213,6707
    VK_TLSCALL,214,6722
    VK_TLSDESC,215,6757
    VK_TLVP,216,6792
    VK_TLVPPAGE,217,6852
    VK_TLVPPAGEOFF,218,6869
    VK_PAGE,219,6889
    VK_PAGEOFF,220,6902
    VK_GOTPAGE,221,6918
    VK_GOTPAGEOFF,222,6934
    VK_SECREL,223,6953
    VK_SIZE,224,6968
    VK_WEAKREF,225,6999
    VK_X86_ABS8,227,7069
    VK_X86_PLTOFF,228,7086
    VK_ARM_NONE,230,7106
    VK_ARM_GOT_PREL,231,7123
    VK_ARM_TARGET1,232,7144
    VK_ARM_TARGET2,233,7164
    VK_ARM_PREL31,234,7184
    VK_ARM_SBREL,235,7203
    VK_ARM_TLSLDO,236,7239
    VK_ARM_TLSDESCSEQ,237,7276
    VK_AVR_NONE,239,7300
    VK_AVR_LO8,240,7317
    VK_AVR_HI8,241,7333
    VK_AVR_HLO8,242,7349
    VK_AVR_DIFF8,243,7366
    VK_AVR_DIFF16,244,7384
    VK_AVR_DIFF32,245,7403
    VK_AVR_PM,246,7422
    VK_PPC_LO,248,7438
    VK_PPC_HI,249,7478
    VK_PPC_HA,250,7518
    VK_PPC_HIGH,251,7559
    VK_PPC_HIGHA,252,7602
    VK_PPC_HIGHER,253,7646
    VK_PPC_HIGHERA,254,7691
    VK_PPC_HIGHEST,255,7737
    VK_PPC_HIGHESTA,256,7783
    VK_PPC_GOT_LO,257,7830
    VK_PPC_GOT_HI,258,7874
    VK_PPC_GOT_HA,259,7918
    VK_PPC_TOCBASE,260,7963
    VK_PPC_TOC,261,8009
    VK_PPC_TOC_LO,262,8051
    VK_PPC_TOC_HI,263,8095
    VK_PPC_TOC_HA,264,8139
    VK_PPC_U,265,8184
    VK_PPC_L,266,8224
    VK_PPC_DTPMOD,267,8264
    VK_PPC_TPREL_LO,268,8309
    VK_PPC_TPREL_HI,269,8355
    VK_PPC_TPREL_HA,270,8401
    VK_PPC_TPREL_HIGH,271,8448
    VK_PPC_TPREL_HIGHA,272,8497
    VK_PPC_TPREL_HIGHER,273,8547
    VK_PPC_TPREL_HIGHERA,274,8598
    VK_PPC_TPREL_HIGHEST,275,8650
    VK_PPC_TPREL_HIGHESTA,276,8702
    VK_PPC_DTPREL_LO,277,8755
    VK_PPC_DTPREL_HI,278,8802
    VK_PPC_DTPREL_HA,279,8849
    VK_PPC_DTPREL_HIGH,280,8897
    VK_PPC_DTPREL_HIGHA,281,8947
    VK_PPC_DTPREL_HIGHER,282,8998
    VK_PPC_DTPREL_HIGHERA,283,9050
    VK_PPC_DTPREL_HIGHEST,284,9103
    VK_PPC_DTPREL_HIGHESTA,285,9156
    VK_PPC_GOT_TPREL,286,9210
    VK_PPC_GOT_TPREL_LO,287,9258
    VK_PPC_GOT_TPREL_HI,288,9308
    VK_PPC_GOT_TPREL_HA,289,9358
    VK_PPC_GOT_DTPREL,290,9409
    VK_PPC_GOT_DTPREL_LO,291,9458
    VK_PPC_GOT_DTPREL_HI,292,9509
    VK_PPC_GOT_DTPREL_HA,293,9560
    VK_PPC_TLS,294,9612
    VK_PPC_GOT_TLSGD,295,9654
    VK_PPC_GOT_TLSGD_LO,296,9702
    VK_PPC_GOT_TLSGD_HI,297,9752
    VK_PPC_GOT_TLSGD_HA,298,9802
    VK_PPC_TLSGD,299,9853
    VK_PPC_AIX_TLSGD,300,9897
    VK_PPC_AIX_TLSGDM,301,9938
    VK_PPC_AIX_TLSIE,302,9978
    VK_PPC_AIX_TLSLE,303,10019
    VK_PPC_GOT_TLSLD,304,10060
    VK_PPC_GOT_TLSLD_LO,305,10108
    VK_PPC_GOT_TLSLD_HI,306,10158
    VK_PPC_GOT_TLSLD_HA,307,10208
    VK_PPC_GOT_PCREL,308,10259
    VK_PPC_GOT_TLSGD_PCREL,309,10307
    VK_PPC_GOT_TLSLD_PCREL,310,10361
    VK_PPC_GOT_TPREL_PCREL,311,10415
    VK_PPC_TLS_PCREL,312,10469
    VK_PPC_TLSLD,313,10517
    VK_PPC_LOCAL,314,10561
    VK_PPC_NOTOC,315,10605
    VK_PPC_PCREL_OPT,316,10649
    VK_COFF_IMGREL32,318,10718
    VK_Hexagon_LO16,320,10775
    VK_Hexagon_HI16,321,10796
    VK_Hexagon_GPREL,322,10817
    VK_Hexagon_GD_GOT,323,10839
    VK_Hexagon_LD_GOT,324,10862
    VK_Hexagon_GD_PLT,325,10885
    VK_Hexagon_LD_PLT,326,10908
    VK_Hexagon_IE,327,10931
    VK_Hexagon_IE_GOT,328,10950
    VK_WASM_TYPEINDEX,330,10974
    VK_WASM_TLSREL,331,11041
    VK_WASM_MBREL,332,11105
    VK_WASM_TBREL,333,11172
    VK_WASM_GOT_TLS,334,11235
    VK_WASM_FUNCINDEX,335,11294
    VK_AMDGPU_GOTPCREL32_LO,337,11342
    VK_AMDGPU_GOTPCREL32_HI,338,11395
    VK_AMDGPU_REL32_LO,339,11448
    VK_AMDGPU_REL32_HI,340,11496
    VK_AMDGPU_REL64,341,11544
    VK_AMDGPU_ABS32_LO,342,11589
    VK_AMDGPU_ABS32_HI,343,11637
    VK_VE_HI32,345,11686
    VK_VE_LO32,346,11722
    VK_VE_PC_HI32,347,11758
    VK_VE_PC_LO32,348,11797
    VK_VE_GOT_HI32,349,11836
    VK_VE_GOT_LO32,350,11876
    VK_VE_GOTOFF_HI32,351,11916
    VK_VE_GOTOFF_LO32,352,11959
    VK_VE_PLT_HI32,353,12002
    VK_VE_PLT_LO32,354,12042
    VK_VE_TLS_GD_HI32,355,12082
    VK_VE_TLS_GD_LO32,356,12125
    VK_VE_TPOFF_HI32,357,12168
    VK_VE_TPOFF_LO32,358,12210
    VK_TPREL,360,12253
    VK_DTPREL361,12267
  const MCSymbol *Symbol;Symbol366,12331
  static const unsigned VariantKindBits 370,12455
  static const unsigned VariantKindMask 371,12501
  static const unsigned HasSubsectionsViaSymbolsBit 374,12601
  static unsigned encodeSubclassData(376,12678
  static const MCSymbolRefExpr *create(create389,13093
  const MCSymbol &getSymbol(getSymbol402,13566
  VariantKind getKind(404,13623
  bool hasSubsectionsViaSymbols(408,13723
  static bool classof(422,14022
class MCUnaryExpr 428,14150
  enum Opcode 430,14194
    LNot,431,14210
    Minus,432,14244
    Not,433,14273
    Plus 434,14307
  const MCExpr *Expr;Expr438,14350
  MCUnaryExpr(440,14373
  static const MCUnaryExpr *createLNot(createLNot450,14667
  static const MCUnaryExpr *createMinus(createMinus454,14811
  static const MCUnaryExpr *createNot(createNot458,14957
  static const MCUnaryExpr *createPlus(createPlus462,15099
  Opcode getOpcode(471,15329
  const MCExpr *getSubExpr(getSubExpr474,15441
  static bool classof(478,15504
class MCBinaryExpr 484,15629
  enum Opcode 486,15674
    Add,487,15690
    And,488,15715
    Div,489,15743
    EQ,490,15775
    GT,491,15811
    GTE,493,15932
    LAnd,495,16063
    LOr,496,16091
    LT,497,16118
    LTE,499,16237
    Mod,501,16365
    Mul,502,16398
    NE,503,16429
    Or,504,16467
    OrNot,505,16494
    Shl,506,16526
    AShr,507,16553
    LShr,508,16592
    Sub,509,16628
    Xor 510,16656
  const MCExpr *LHS,LHS514,16708
  const MCExpr *LHS, *RHS;RHS514,16708
  MCBinaryExpr(516,16736
  static const MCBinaryExpr *createAdd(createAdd528,17139
  static const MCBinaryExpr *createAnd(createAnd533,17317
  static const MCBinaryExpr *createDiv(createDiv538,17495
  static const MCBinaryExpr *createEQ(createEQ543,17673
  static const MCBinaryExpr *createGT(createGT548,17848
  static const MCBinaryExpr *createGTE(createGTE553,18023
  static const MCBinaryExpr *createLAnd(createLAnd558,18201
  static const MCBinaryExpr *createLOr(createLOr563,18382
  static const MCBinaryExpr *createLT(createLT568,18560
  static const MCBinaryExpr *createLTE(createLTE573,18735
  static const MCBinaryExpr *createMod(createMod578,18913
  static const MCBinaryExpr *createMul(createMul583,19091
  static const MCBinaryExpr *createNE(createNE588,19269
  static const MCBinaryExpr *createOr(createOr593,19444
  static const MCBinaryExpr *createShl(createShl598,19619
  static const MCBinaryExpr *createAShr(createAShr603,19797
  static const MCBinaryExpr *createLShr(createLShr608,19977
  static const MCBinaryExpr *createSub(createSub613,20157
  static const MCBinaryExpr *createXor(createXor618,20335
  Opcode getOpcode(628,20600
  const MCExpr *getLHS(getLHS631,20730
  const MCExpr *getRHS(getRHS634,20843
  static bool classof(638,20901
class MCTargetExpr 648,21217
  MCTargetExpr(652,21291
  virtual bool isEqualTo(661,21712
  virtual bool inlineAssignedExpr(664,21904
  static bool classof(670,22152

/usr/include/llvm/MC/MCFixup.h,1039
#define LLVM_MC_MCFIXUP_H10,396
enum MCFixupKind 21,644
  FK_NONE 22,663
  FK_Data_1,23,701
  FK_Data_2,24,742
  FK_Data_4,25,783
  FK_Data_8,26,825
  FK_Data_leb128,27,868
  FK_PCRel_1,28,907
  FK_PCRel_2,29,960
  FK_PCRel_4,30,1013
  FK_PCRel_8,31,1067
  FK_GPRel_1,32,1122
  FK_GPRel_2,33,1175
  FK_GPRel_4,34,1228
  FK_GPRel_8,35,1282
  FK_DTPRel_4,36,1337
  FK_DTPRel_8,37,1392
  FK_TPRel_4,38,1448
  FK_TPRel_8,39,1502
  FK_SecRel_1,40,1557
  FK_SecRel_2,41,1615
  FK_SecRel_4,42,1673
  FK_SecRel_8,43,1732
  FirstTargetFixupKind 45,1793
  FirstLiteralRelocationKind 50,2041
  MaxFixupKind 54,2231
class MCFixup 71,3045
  const MCExpr *Value Value75,3269
  uint32_t Offset 78,3374
  MCFixupKind Kind 82,3551
  SMLoc Loc;85,3646
  static MCFixup create(87,3667
  MCFixupKind getKind(98,3972
  unsigned getTargetKind(100,4020
  uint32_t getOffset(102,4071
  void setOffset(103,4119
  const MCExpr *getValue(getValue105,4173
  static MCFixupKind getKindForSize(109,4344
  SMLoc getLoc(123,4740

/usr/include/llvm/MC/MCFragment.h,7255
#define LLVM_MC_MCFRAGMENT_H10,399
class MCFragment 30,832
  enum FragmentType 34,943
    FT_Align,35,975
    FT_Data,36,989
    FT_CompactEncodedInst,37,1002
    FT_Fill,38,1029
    FT_Nops,39,1042
    FT_Relaxable,40,1055
    FT_Org,41,1073
    FT_Dwarf,42,1085
    FT_DwarfFrame,43,1099
    FT_LEB,44,1118
    FT_BoundaryAlign,45,1130
    FT_SymbolId,46,1152
    FT_CVInlineLines,47,1169
    FT_CVDefRange,48,1191
    FT_PseudoProbe,49,1210
    FT_Dummy50,1230
  MCSection *Parent;Parent55,1310
  const MCSymbol *Atom;Atom58,1407
  uint64_t Offset;62,1518
  unsigned LayoutOrder;65,1579
  FragmentType Kind;71,1742
  bool IsBeingLaidOut;74,1806
  bool HasInstructions;77,1841
  MCFragment(80,1898
  void destroy(92,2303
  FragmentType getKind(94,2322
  MCSection *getParent(getParent96,2371
  void setParent(97,2421
  const MCSymbol *getAtom(getAtom99,2477
  void setAtom(100,2528
  unsigned getLayoutOrder(102,2585
  void setLayoutOrder(103,2643
  bool hasInstructions(107,2847
  void dump(109,2907
  unsigned getSubsectionNumber(112,3002
class MCDummyFragment 115,3074
  explicit MCDummyFragment(117,3126
  static bool classof(119,3208
class MCEncodedFragment 125,3386
  bool AlignToBundleEnd 127,3494
  uint8_t BundlePadding 129,3528
  MCEncodedFragment(132,3569
  const MCSubtargetInfo *STI STI138,3845
  static bool classof(141,3894
  bool alignToBundleEnd(157,4355
  void setAlignToBundleEnd(158,4416
  uint8_t getBundlePadding(165,4808
  void setBundlePadding(169,5005
  const MCSubtargetInfo *getSubtargetInfo(getSubtargetInfo173,5204
  void setHasInstructions(177,5399
class MCEncodedFragmentWithContents 187,5639
  SmallVector<SmallVector188,5704
  SmallVector<char, ContentsSize> Contents;188,5704
  MCEncodedFragmentWithContents(191,5760
  SmallVectorImpl<char> &getContents(getContents197,5993
  const SmallVectorImpl<char> &getContents(getContents198,6053
template<unsigned ContentsSize,204,6255
class MCEncodedFragmentWithFixups 205,6308
  SmallVector<SmallVector209,6443
  SmallVector<MCFixup, FixupsSize> Fixups;209,6443
  MCEncodedFragmentWithFixups(212,6498
  using const_fixup_iterator 220,6804
  using fixup_iterator 221,6877
  SmallVectorImpl<MCFixup> &getFixups(getFixups223,6939
  const SmallVectorImpl<MCFixup> &getFixups(getFixups224,6998
  fixup_iterator fixup_begin(226,7070
  const_fixup_iterator fixup_begin(227,7128
  fixup_iterator fixup_end(229,7199
  const_fixup_iterator fixup_end(230,7253
  static bool classof(232,7320
class MCDataFragment 242,7679
  MCDataFragment(244,7754
  static bool classof(247,7865
  bool isLinkerRelaxable(251,7963
  void setLinkerRelaxable(252,8024
class MCCompactEncodedInstFragment 260,8328
  MCCompactEncodedInstFragment(262,8415
  static bool classof(266,8551
class MCRelaxableFragment 274,8805
  MCInst Inst;277,8923
  bool AllowAutoPadding 279,8977
  MCRelaxableFragment(282,9019
  const MCInst &getInst(getInst287,9241
  void setInst(288,9290
  bool getAllowAutoPadding(290,9345
  void setAllowAutoPadding(291,9409
  static bool classof(293,9471
class MCAlignFragment 298,9577
  Align Alignment;300,9662
  bool EmitNops 305,9851
  int64_t Value;308,9919
  unsigned ValueSize;311,9991
  unsigned MaxBytesToEmit;315,10145
  const MCSubtargetInfo *STI STI318,10243
  MCAlignFragment(321,10292
  Align getAlignment(326,10591
  int64_t getValue(328,10643
  unsigned getValueSize(330,10689
  unsigned getMaxBytesToEmit(332,10744
  bool hasEmitNops(334,10809
  void setEmitNops(335,10857
  const MCSubtargetInfo *getSubtargetInfo(getSubtargetInfo340,10966
  static bool classof(342,11033
class MCFillFragment 347,11135
  uint8_t ValueSize;348,11178
  uint64_t Value;350,11237
  const MCExpr &NumValues;NumValues352,11292
  SMLoc Loc;355,11395
  MCFillFragment(358,11417
  uint64_t getValue(363,11660
  uint8_t getValueSize(364,11706
  const MCExpr &getNumValues(getNumValues365,11759
  SMLoc getLoc(367,11819
  static bool classof(369,11859
class MCNopsFragment 374,11960
  int64_t Size;376,12040
  int64_t ControlledNopLength;378,12119
  SMLoc Loc;381,12226
  const MCSubtargetInfo &STI;STI384,12310
  MCNopsFragment(387,12349
  int64_t getNumBytes(392,12621
  int64_t getControlledNopLength(393,12668
  SMLoc getLoc(395,12742
  const MCSubtargetInfo *getSubtargetInfo(getSubtargetInfo397,12782
  static bool classof(399,12850
class MCOrgFragment 404,12951
  int8_t Value;406,13031
  const MCExpr *Offset;Offset409,13096
  SMLoc Loc;412,13196
  MCOrgFragment(415,13218
  const MCExpr &getOffset(getOffset420,13415
  uint8_t getValue(422,13470
  SMLoc getLoc(424,13516
  static bool classof(426,13556
class MCDwarfLineAddrFragment 457,14359
  int64_t LineDelta;460,14538
  const MCExpr *AddrDelta;AddrDelta464,14691
  MCDwarfLineAddrFragment(467,14727
  int64_t getLineDelta(472,14970
  const MCExpr &getAddrDelta(getAddrDelta474,15024
  static bool classof(476,15085
class MCDwarfCallFrameFragment 481,15187
  const MCExpr *AddrDelta;AddrDelta484,15396
  MCDwarfCallFrameFragment(487,15432
  const MCExpr &getAddrDelta(getAddrDelta491,15614
  void setAddrDelta(492,15674
  static bool classof(494,15731
class MCSymbolIdFragment 500,15884
  const MCSymbol *Sym;Sym501,15931
  MCSymbolIdFragment(504,15963
  const MCSymbol *getSymbol(getSymbol507,16089
  const MCSymbol *getSymbol(getSymbol508,16135
  static bool classof(510,16188
class MCCVInlineLineTableFragment 517,16394
  unsigned SiteFuncId;518,16450
  unsigned StartFileId;519,16473
  unsigned StartLineNum;520,16497
  const MCSymbol *FnStartSym;FnStartSym521,16522
  const MCSymbol *FnEndSym;FnEndSym522,16552
  SmallString<8> Contents;523,16580
  MCCVInlineLineTableFragment(530,16749
  const MCSymbol *getFnStartSym(getFnStartSym538,17206
  const MCSymbol *getFnEndSym(getFnEndSym539,17269
  SmallString<8> &getContents(getContents541,17329
  const SmallString<8> &getContents(getContents542,17382
  static bool classof(544,17448
class MCCVDefRangeFragment 550,17613
  SmallVector<SmallVector551,17686
  SmallVector<std::pair<const MCSymbol *, const MCSymbol *>, 2> Ranges;551,17686
  SmallString<32> FixedSizePortion;552,17758
  MCCVDefRangeFragment(559,17936
  ArrayRef<ArrayRef566,18254
  ArrayRef<std::pair<const MCSymbol *, const MCSymbol *>> getRanges(566,18254
  StringRef getFixedSizePortion(570,18356
  static bool classof(572,18432
class MCBoundaryAlignFragment 580,18742
  Align AlignBoundary;582,18855
  const MCFragment *LastFragment LastFragment584,18941
  uint64_t Size 587,19101
  const MCSubtargetInfo &STI;STI590,19193
  MCBoundaryAlignFragment(593,19232
  uint64_t getSize(598,19460
  void setSize(599,19504
  Align getAlignment(601,19554
  void setAlignment(602,19609
  const MCFragment *getLastFragment(getLastFragment604,19670
  void setLastFragment(605,19739
  const MCSubtargetInfo *getSubtargetInfo(getSubtargetInfo610,19861
  static bool classof(612,19929
class MCPseudoProbeAddrFragment 617,20039
  const MCExpr *AddrDelta;AddrDelta620,20249
  MCPseudoProbeAddrFragment(623,20285
  const MCExpr &getAddrDelta(getAddrDelta627,20468
  static bool classof(629,20529

/usr/include/llvm/MC/MCGOFFObjectWriter.h,158
#define LLVM_MC_MCGOFFOBJECTWRITER_H10,407
class MCGOFFObjectTargetWriter 18,547
  Triple::ObjectFormatType getFormat(25,720
  static bool classof(27,800

/usr/include/llvm/MC/MCGOFFStreamer.h,222
#define LLVM_MC_MCGOFFSTREAMER_H10,403
class MCGOFFStreamer 17,530
  MCGOFFStreamer(19,587
  bool emitSymbolAttribute(27,914
  void emitCommonSymbol(30,1016
  void emitInstToData(32,1130
  void emitZerofill(33,1209

/usr/include/llvm/MC/MCInstPrinter.h,2346
#define LLVM_MC_MCINSTPRINTER_H10,402
enum Style 34,867
  C,35,880
  Asm 36,896
class MCInstPrinter 45,1095
  raw_ostream *CommentStream CommentStream50,1299
  const MCAsmInfo &MAI;MAI51,1339
  const MCInstrInfo &MII;MII52,1363
  const MCRegisterInfo &MRI;MRI53,1389
  const MCInstrAnalysis *MIA MIA54,1418
  bool UseMarkup 57,1509
  bool UseColor 60,1584
  bool PrintAliases 63,1671
  bool PrintImmHex 66,1749
  HexStyle::Style PrintHexStyle 69,1836
  bool PrintBranchImmAsAddress 74,2062
  bool SymbolizeOperands 77,2173
  MCInstPrinter(87,2546
  enum class Markup 92,2715
    Immediate,93,2737
    Register,94,2752
    Target,95,2766
    Memory,96,2778
  class WithMarkup 99,2796
    template <typename T> WithMarkup &operator<<(operator<<105,2982
    template <typename T> WithMarkup &operator<<(operator<<110,3081
    raw_ostream &OS;OS116,3197
    bool EnableMarkup;117,3218
    bool EnableColor;118,3241
  virtual bool applyTargetSpecificCLOption(123,3393
  void setCommentStream(126,3514
  virtual std::pair<std::pair130,3738
  bool getUseMarkup(149,4696
  void setUseMarkup(150,4746
  bool getUseColor(152,4802
  void setUseColor(153,4850
  bool getPrintImmHex(157,4959
  void setPrintImmHex(158,5013
  void setPrintHexStyle(160,5073
  void setPrintBranchImmAsAddress(162,5148
  void setSymbolizeOperands(166,5238
  void setMCInstrAnalysis(167,5309
  format_object<int64_t> formatImm(170,5445
struct PatternsForOpcode 181,5862
  uint32_t Opcode;182,5889
  uint16_t PatternStart;183,5908
  uint16_t NumPatterns;184,5933
struct AliasPattern 189,6093
  uint32_t AsmStrOffset;190,6115
  uint32_t AliasCondStart;191,6140
  uint8_t NumOperands;192,6167
  uint8_t NumConds;193,6190
struct AliasPatternCond 196,6214
  enum CondKind 197,6240
    K_Feature,198,6268
    K_NegFeature,199,6328
    K_OrFeature,200,6389
    K_OrNegFeature,201,6464
    K_EndOrFeatures,202,6540
    K_Ignore,203,6604
    K_Reg,204,6647
    K_TiedReg,205,6698
    K_Imm,206,6762
    K_RegClass,207,6814
    K_Custom,208,6866
  CondKind Kind;211,6926
  uint32_t Value;212,6943
struct AliasMatchingData 216,7032
  ArrayRef<PatternsForOpcode> OpToPatterns;217,7059
  ArrayRef<AliasPattern> Patterns;218,7103
  ArrayRef<AliasPatternCond> PatternConds;219,7138
  StringRef AsmStrings;220,7181

/usr/include/llvm/MC/MCInstrAnalysis.h,759
#define LLVM_MC_MCINSTRANALYSIS_H15,619
class MCInstrAnalysis 30,908
  const MCInstrInfo *Info;Info34,967
  MCInstrAnalysis(37,1003
  virtual void resetState(41,1173
  virtual void updateState(53,1872
  virtual bool isBranch(55,1938
  virtual bool isConditionalBranch(59,2046
  virtual bool isUnconditionalBranch(63,2176
  virtual bool isIndirectBranch(67,2310
  virtual bool isCall(71,2434
  virtual bool isReturn(75,2538
  virtual bool isTerminator(79,2646
  virtual bool mayAffectControlFlow(83,2762
  virtual bool clearsSuperRegisters(115,4362
  virtual bool isDependencyBreaking(162,6678
  virtual bool isOptimizableRegisterMove(173,7163
  evaluateBranch(181,7458
  virtual std::vector<std::vector196,8201
  findPltEntries(197,8254

/usr/include/llvm/MC/MCInstrDesc.h,4535
#define LLVM_MC_MCINSTRDESC_H15,613
enum OperandConstraint 35,1280
  TIED_TO 36,1305
  EARLY_CLOBBER 37,1380
#define MCOI_TIED_TO(41,1505
#define MCOI_EARLY_CLOBBER 44,1594
enum OperandFlags 50,1845
  LookupPtrRegClass 51,1865
  Predicate,52,1890
  OptionalDef,53,1903
  BranchTarget54,1918
enum OperandType 58,1998
  OPERAND_UNKNOWN 59,2017
  OPERAND_IMMEDIATE 60,2040
  OPERAND_REGISTER 61,2065
  OPERAND_MEMORY 62,2089
  OPERAND_PCREL 63,2111
  OPERAND_FIRST_GENERIC 65,2133
  OPERAND_GENERIC_0 66,2162
  OPERAND_GENERIC_1 67,2187
  OPERAND_GENERIC_2 68,2212
  OPERAND_GENERIC_3 69,2237
  OPERAND_GENERIC_4 70,2262
  OPERAND_GENERIC_5 71,2288
  OPERAND_LAST_GENERIC 72,2314
  OPERAND_FIRST_GENERIC_IMM 74,2344
  OPERAND_GENERIC_IMM_0 75,2378
  OPERAND_LAST_GENERIC_IMM 76,2408
  OPERAND_FIRST_TARGET 78,2442
class MCOperandInfo 85,2629
  int16_t RegClass;91,2921
  uint8_t Flags;94,2998
  uint8_t OperandType;97,3065
  uint16_t Constraints;100,3145
  bool isLookupPtrRegClass(104,3279
  bool isPredicate(110,3502
  bool isOptionalDef(113,3618
  bool isBranchTarget(116,3739
  bool isGenericType(118,3816
  unsigned getGenericTypeIndex(123,3963
  bool isGenericImm(128,4135
  unsigned getGenericImmIndex(133,4289
namespace MCID 143,4679
enum Flag 148,4945
  PreISelOpcode 149,4957
  Variadic,150,4978
  HasOptionalDef,151,4990
  Pseudo,152,5008
  Meta,153,5018
  Return,154,5026
  EHScopeReturn,155,5036
  Call,156,5053
  Barrier,157,5061
  Terminator,158,5072
  Branch,159,5086
  IndirectBranch,160,5096
  Compare,161,5114
  MoveImm,162,5125
  MoveReg,163,5136
  Bitcast,164,5147
  Select,165,5158
  DelaySlot,166,5168
  FoldableAsLoad,167,5181
  MayLoad,168,5199
  MayStore,169,5210
  MayRaiseFPException,170,5222
  Predicable,171,5245
  NotDuplicable,172,5259
  UnmodeledSideEffects,173,5276
  Commutable,174,5300
  ConvertibleTo3Addr,175,5314
  UsesCustomInserter,176,5336
  HasPostISelHook,177,5358
  Rematerializable,178,5377
  CheapAsAMove,179,5397
  ExtraSrcRegAllocReq,180,5413
  ExtraDefRegAllocReq,181,5436
  RegSequence,182,5459
  ExtractSubreg,183,5474
  InsertSubreg,184,5491
  Convergent,185,5507
  Add,186,5521
  Trap,187,5528
  VariadicOpsAreDefs,188,5536
  Authenticated,189,5558
class MCInstrDesc 198,5939
  unsigned short Opcode;205,6222
  unsigned short NumOperands;206,6276
  unsigned char NumDefs;207,6354
  unsigned char Size;208,6423
  unsigned short SchedClass;209,6488
  unsigned char NumImplicitUses;210,6559
  unsigned char NumImplicitDefs;211,6623
  unsigned short ImplicitOffset;212,6690
  unsigned short OpInfoOffset;213,6762
  uint64_t Flags;214,6828
  uint64_t TSFlags;215,6902
  int getOperandConstraint(219,7084
  unsigned getOpcode(230,7486
  unsigned getNumOperands(237,7840
  ArrayRef<MCOperandInfo> operands(239,7899
  unsigned getNumDefs(248,8336
  uint64_t getFlags(251,8427
  bool isPreISelOpcode(255,8610
  bool isVariadic(261,8926
  bool hasOptionalDef(265,9132
  bool isPseudo(269,9325
  bool isMetaInstruction(273,9519
  bool isReturn(276,9644
  bool isAdd(279,9772
  bool isTrap(282,9883
  bool isMoveReg(285,10016
  bool isCall(288,10135
  bool isBarrier(293,10401
  bool isTerminator(301,10750
  bool isBranch(307,11074
  bool isIndirectBranch(311,11234
  bool isConditionalBranch(317,11569
  bool isUnconditionalBranch(325,11884
  bool isPredicable(338,12570
  bool isCompare(341,12701
  bool isMoveImmediate(345,12878
  bool isBitcast(348,13018
  bool isSelect(351,13139
  bool isNotDuplicable(356,13410
  bool hasDelaySlot(360,13607
  bool canFoldAsLoad(369,14210
  bool isRegSequenceLike(381,14687
  bool isExtractSubregLike(394,15215
  bool isInsertSubregLike(408,15742
  bool isConvergent(415,15982
  bool variadicOpsAreDefs(418,16134
  bool isAuthenticated(427,16506
  bool mayLoad(438,16989
  bool mayStore(444,17329
  bool mayRaiseFPException(447,17475
  bool hasUnmodeledSideEffects(463,18187
  bool isCommutable(481,19077
  bool isConvertibleTo3Addr(497,20010
  bool usesCustomInsertionHook(509,20609
  bool hasPostISelHook(517,20968
  bool isRematerializable(524,21351
  bool isAsCheapAsAMove(537,22022
  bool hasExtraSrcRegAllocReq(545,22524
  bool hasExtraDefRegAllocReq(555,23043
  ArrayRef<MCPhysReg> implicit_uses(565,23596
  ArrayRef<MCPhysReg> implicit_defs(579,24350
  bool hasImplicitUseOfPhysReg(587,24659
  unsigned getSchedClass(600,25208
  unsigned getSize(604,25403
  int findFirstPredOperandIdx(609,25595

/usr/include/llvm/MC/MCInstrItineraries.h,1327
#define LLVM_MC_MCINSTRITINERARIES_H16,681
struct InstrStage 59,2549
  enum ReservationKinds 60,2569
    Required 61,2595
    Reserved 62,2613
  typedef uint64_t FuncUnits;66,2690
  unsigned Cycles_;68,2721
  FuncUnits Units_;69,2781
  int NextCycles_;70,2834
  ReservationKinds Kind_;71,2899
  unsigned getCycles(74,3016
  FuncUnits getUnits(79,3105
  ReservationKinds getReservationKind(83,3160
  unsigned getNextCycles(89,3349
struct InstrItinerary 99,3746
  int16_t  NumMicroOps;100,3770
  uint16_t FirstStage;101,3845
  uint16_t LastStage;102,3915
  uint16_t FirstOperandCycle;103,3988
  uint16_t LastOperandCycle;104,4053
class InstrItineraryData 110,4277
  MCSchedModel SchedModel 112,4312
  const InstrStage *Stages Stages114,4414
  const unsigned *OperandCycles OperandCycles115,4487
  const unsigned *Forwardings Forwardings116,4568
  const InstrItinerary *Itineraries Itineraries117,4649
  InstrItineraryData(121,4772
  bool isEmpty(127,5065
  bool isEndMarker(130,5189
  const InstrStage *beginStage(beginStage136,5428
  const InstrStage *endStage(endStage142,5637
  unsigned getStageLatency(150,5987
  std::optional<unsigned> getOperandCycle(168,6698
  bool hasPipelineForwarding(186,7479
  std::optional<unsigned> getOperandLatency(208,8465
  int getNumMicroOps(232,9411

/usr/include/llvm/MC/MCMachObjectWriter.h,1671
#define LLVM_MC_MCMACHOBJECTWRITER_H10,407
class MCMachObjectTargetWriter 29,836
  const unsigned Is64Bit 30,899
  const uint32_t CPUType;31,929
  uint32_t CPUSubtype;33,966
  MCMachObjectTargetWriter(38,1045
  void setLocalDifferenceRelocationType(41,1157
  virtual ~MCMachObjectTargetWriter(46,1259
  Triple::ObjectFormatType getFormat(48,1299
  static bool classof(49,1379
  virtual void reset(56,1525
  bool is64Bit(63,1594
  uint32_t getCPUType(64,1637
  uint32_t getCPUSubtype(65,1687
  unsigned getLocalDifferenceRelocationType(66,1743
class MachObjectWriter 84,2208
  struct MachSymbolData 86,2333
    const MCSymbol *Symbol;Symbol87,2359
    uint64_t StringIndex;88,2387
    uint8_t SectionIndex;89,2413
  std::unique_ptr<MCMachObjectTargetWriter> TargetObjectWriter;96,2587
  struct RelAndSymbol 101,2690
    const MCSymbol *Sym;Sym102,2714
    MachO::any_relocation_info MRE;103,2739
    RelAndSymbol(104,2775
  DenseMap<DenseMap108,2890
  DenseMap<const MCSection *, std::vector<RelAndSymbol>> Relocations;108,2890
  DenseMap<DenseMap109,2960
  DenseMap<const MCSection *, unsigned> IndirectSymBase;109,2960
  SectionAddrMap SectionAddress;111,3018
  StringTableBuilder StringTable;117,3101
  std::vector<MachSymbolData> LocalSymbolData;118,3135
  std::vector<MachSymbolData> ExternalSymbolData;119,3182
  std::vector<MachSymbolData> UndefinedSymbolData;120,3232
  MachObjectWriter(129,3414
  support::endian::Writer W;137,3844
  SectionAddrMap &getSectionAddressMap(getSectionAddressMap153,4128
  uint64_t getSectionAddress(155,4197
  bool is64Bit(172,4710
  bool isX86_64(173,4775
  void addRelocation(233,7465

/usr/include/llvm/MC/MCObjectFileInfo.h,7488
#define LLVM_MC_MCOBJECTFILEINFO_H14,543
class MCObjectFileInfo 28,815
  std::array<std::array240,8797
  MCContext &getContext(getContext247,9063
  bool getSupportsWeakOmittedEHFrame(249,9113
  bool getSupportsCompactUnwindWithoutEHFrame(252,9203
  bool getOmitDwarfIfHaveCompactUnwind(255,9311
  unsigned getFDEEncoding(259,9406
  unsigned getCompactUnwindDwarfEHFrameOnly(261,9468
  virtual unsigned getTextSectionAlignment(265,9569
  MCSection *getTextSection(getTextSection266,9634
  MCSection *getDataSection(getDataSection267,9694
  MCSection *getBSSSection(getBSSSection268,9754
  MCSection *getReadOnlySection(getReadOnlySection269,9812
  MCSection *getLSDASection(getLSDASection270,9880
  MCSection *getCompactUnwindSection(getCompactUnwindSection271,9940
  MCSection *getDwarfAbbrevSection(getDwarfAbbrevSection272,10018
  MCSection *getDwarfInfoSection(getDwarfInfoSection273,10092
  MCSection *getDwarfInfoSection(getDwarfInfoSection274,10162
  MCSection *getDwarfLineSection(getDwarfLineSection277,10277
  MCSection *getDwarfLineStrSection(getDwarfLineStrSection278,10347
  MCSection *getDwarfFrameSection(getDwarfFrameSection279,10423
  MCSection *getDwarfPubNamesSection(getDwarfPubNamesSection280,10495
  MCSection *getDwarfPubTypesSection(getDwarfPubTypesSection281,10573
  MCSection *getDwarfGnuPubNamesSection(getDwarfGnuPubNamesSection282,10651
  MCSection *getDwarfGnuPubTypesSection(getDwarfGnuPubTypesSection285,10741
  const MCSection *getDwarfDebugInlineSection(getDwarfDebugInlineSection288,10831
  MCSection *getDwarfStrSection(getDwarfStrSection291,10927
  MCSection *getDwarfLocSection(getDwarfLocSection292,10995
  MCSection *getDwarfARangesSection(getDwarfARangesSection293,11063
  MCSection *getDwarfRangesSection(getDwarfRangesSection294,11139
  MCSection *getDwarfRnglistsSection(getDwarfRnglistsSection295,11213
  MCSection *getDwarfLoclistsSection(getDwarfLoclistsSection296,11291
  MCSection *getDwarfMacinfoSection(getDwarfMacinfoSection297,11369
  MCSection *getDwarfMacroSection(getDwarfMacroSection298,11445
  MCSection *getDwarfDebugNamesSection(getDwarfDebugNamesSection300,11518
  MCSection *getDwarfAccelNamesSection(getDwarfAccelNamesSection303,11606
  MCSection *getDwarfAccelObjCSection(getDwarfAccelObjCSection306,11694
  MCSection *getDwarfAccelNamespaceSection(getDwarfAccelNamespaceSection307,11774
  MCSection *getDwarfAccelTypesSection(getDwarfAccelTypesSection310,11870
  MCSection *getDwarfInfoDWOSection(getDwarfInfoDWOSection313,11958
  MCSection *getDwarfTypesSection(getDwarfTypesSection314,12034
  MCSection *getDwarfTypesDWOSection(getDwarfTypesDWOSection317,12151
  MCSection *getDwarfAbbrevDWOSection(getDwarfAbbrevDWOSection318,12229
  MCSection *getDwarfStrDWOSection(getDwarfStrDWOSection319,12309
  MCSection *getDwarfLineDWOSection(getDwarfLineDWOSection320,12383
  MCSection *getDwarfLocDWOSection(getDwarfLocDWOSection321,12459
  MCSection *getDwarfStrOffDWOSection(getDwarfStrOffDWOSection322,12533
  MCSection *getDwarfStrOffSection(getDwarfStrOffSection323,12613
  MCSection *getDwarfAddrSection(getDwarfAddrSection324,12687
  MCSection *getDwarfRnglistsDWOSection(getDwarfRnglistsDWOSection325,12757
  MCSection *getDwarfLoclistsDWOSection(getDwarfLoclistsDWOSection328,12847
  MCSection *getDwarfMacroDWOSection(getDwarfMacroDWOSection331,12937
  MCSection *getDwarfMacinfoDWOSection(getDwarfMacinfoDWOSection332,13015
  MCSection *getDwarfCUIndexSection(getDwarfCUIndexSection335,13103
  MCSection *getDwarfTUIndexSection(getDwarfTUIndexSection336,13179
  MCSection *getDwarfSwiftASTSection(getDwarfSwiftASTSection337,13255
  MCSection *getCOFFDebugSymbolsSection(getCOFFDebugSymbolsSection339,13334
  MCSection *getCOFFDebugTypesSection(getCOFFDebugTypesSection342,13424
  MCSection *getCOFFGlobalTypeHashesSection(getCOFFGlobalTypeHashesSection345,13510
  MCSection *getTLSExtraDataSection(getTLSExtraDataSection349,13609
  const MCSection *getTLSDataSection(getTLSDataSection350,13685
  MCSection *getTLSBSSSection(getTLSBSSSection351,13757
  MCSection *getStackMapSection(getStackMapSection353,13822
  MCSection *getFaultMapSection(getFaultMapSection354,13890
  MCSection *getRemarksSection(getRemarksSection355,13958
  MCSection *getDataRelROSection(getDataRelROSection372,14509
  const MCSection *getMergeableConst4Section(getMergeableConst4Section373,14579
  const MCSection *getMergeableConst8Section(getMergeableConst8Section376,14673
  const MCSection *getMergeableConst16Section(getMergeableConst16Section379,14767
  const MCSection *getMergeableConst32Section(getMergeableConst32Section382,14863
  const MCSection *getTLSTLVSection(getTLSTLVSection387,14990
  const MCSection *getTLSThreadInitSection(getTLSThreadInitSection388,15060
  const MCSection *getCStringSection(getCStringSection391,15150
  const MCSection *getUStringSection(getUStringSection392,15222
  MCSection *getTextCoalSection(getTextCoalSection393,15294
  const MCSection *getConstTextCoalSection(getConstTextCoalSection394,15362
  const MCSection *getConstDataSection(getConstDataSection397,15452
  const MCSection *getDataCoalSection(getDataCoalSection398,15528
  const MCSection *getConstDataCoalSection(getConstDataCoalSection399,15602
  const MCSection *getDataCommonSection(getDataCommonSection402,15692
  MCSection *getDataBSSSection(getDataBSSSection403,15770
  const MCSection *getFourByteConstantSection(getFourByteConstantSection404,15836
  const MCSection *getEightByteConstantSection(getEightByteConstantSection407,15932
  const MCSection *getSixteenByteConstantSection(getSixteenByteConstantSection410,16030
  MCSection *getLazySymbolPointerSection(getLazySymbolPointerSection413,16132
  MCSection *getNonLazySymbolPointerSection(getNonLazySymbolPointerSection416,16224
  MCSection *getThreadLocalPointerSection(getThreadLocalPointerSection419,16322
  MCSection *getAddrSigSection(getAddrSigSection422,16416
  MCSection *getDrectveSection(getDrectveSection425,16512
  MCSection *getPDataSection(getPDataSection426,16578
  MCSection *getXDataSection(getXDataSection427,16640
  MCSection *getSXDataSection(getSXDataSection428,16702
  MCSection *getGEHContSection(getGEHContSection429,16766
  MCSection *getGFIDsSection(getGFIDsSection430,16832
  MCSection *getGIATsSection(getGIATsSection431,16894
  MCSection *getGLJMPSection(getGLJMPSection432,16956
  MCSection *getPPA1Section(getPPA1Section435,17048
  MCSection *getPPA2Section(getPPA2Section436,17108
  MCSection *getADASection(getADASection437,17168
  MCSection *getIDRLSection(getIDRLSection438,17226
  MCSection *getTOCBaseSection(getTOCBaseSection441,17316
  MCSection *getEHFrameSection(getEHFrameSection443,17383
  bool isPositionIndependent(445,17450
  MCSection *getSwift5ReflectionSection(getSwift5ReflectionSection448,17557
  VersionTuple SDKVersion;459,17940
  std::optional<Triple> DarwinTargetVariantTriple;460,17967
  VersionTuple DarwinTargetVariantSDKVersion;461,18018
  void setSDKVersion(474,18568
  const VersionTuple &getSDKVersion(getSDKVersion478,18663
  void setDarwinTargetVariantTriple(480,18731
  const Triple *getDarwinTargetVariantTriple(getDarwinTargetVariantTriple484,18826
  void setDarwinTargetVariantSDKVersion(488,18964
  const VersionTuple &getDarwinTargetVariantSDKVersion(getDarwinTargetVariantSDKVersion492,19097

/usr/include/llvm/MC/MCObjectWriter.h,538
#define LLVM_MC_MCOBJECTWRITER_H10,403
class MCObjectWriter 34,1163
  std::vector<const MCSymbol *> AddrsigSyms;36,1197
  virtual void reset(47,1486
  virtual void markGnuAbi(93,3706
  virtual void setOverrideABIVersion(96,3805
  void emitAddrsigSection(101,4047
  bool getEmitAddrsigSection(103,4107
  void addAddrsigSymbol(107,4276
  std::vector<const MCSymbol *> &getAddrsigSyms(getAddrsigSyms109,4354
  virtual void addExceptionEntry(111,4429
  virtual void addCInfoSymEntry(116,4742
class MCObjectTargetWriter 131,5343

/usr/include/llvm/MC/MCPseudoProbe.h,3764
#define LLVM_MC_MCPSEUDOPROBE_H55,2564
enum class MCPseudoProbeFlag 78,3031
  AddressDelta 81,3168
struct MCPseudoProbeFuncDesc 85,3257
  uint64_t FuncGUID 86,3288
  uint64_t FuncHash 87,3313
  std::string FuncName;88,3338
  MCPseudoProbeFuncDesc(90,3363
using InlineSite 99,3610
using MCPseudoProbeInlineStack 100,3661
using GUIDProbeFunctionMap 102,3757
using AddressProbesMap 105,3876
class MCPseudoProbeBase 110,4008
  uint64_t Guid;112,4045
  uint64_t Index;113,4062
  uint32_t Discriminator;114,4080
  uint8_t Attributes;115,4106
  uint8_t Type;116,4128
  const static uint32_t PseudoProbeFirstId 120,4340
  MCPseudoProbeBase(123,4397
  bool isEntry(126,4550
  uint64_t getGuid(128,4614
  uint64_t getIndex(130,4659
  uint32_t getDiscriminator(132,4706
  uint8_t getAttributes(134,4769
  uint8_t getType(136,4825
  bool isBlock(138,4869
  bool isIndirectCall(142,4964
  bool isDirectCall(146,5073
  bool isCall(150,5178
  void setAttributes(152,5248
class MCPseudoProbe 159,5573
  MCSymbol *Label;Label160,5622
  MCPseudoProbe(163,5650
  MCSymbol *getLabel(getLabel172,6065
using MCPseduoProbeFrameLocation 177,6255
class MCDecodedPseudoProbe 179,6323
  uint64_t Address;180,6379
  MCDecodedPseudoProbeInlineTree *InlineTree;InlineTree181,6399
  MCDecodedPseudoProbe(184,6454
  uint64_t getAddress(190,6748
  void setAddress(192,6799
  MCDecodedPseudoProbeInlineTree *getInlineTreeNode(getInlineTreeNode194,6853
template <typename ProbeType,214,7596
class MCPseudoProbeInlineTreeBase 215,7663
  struct InlineSiteHash 216,7699
    uint64_t operator()(operator()217,7725
  using InlinedProbeTreeMap 224,7911
      InlineSite, std::unique_ptr<std::unique_ptr225,7961
  InlinedProbeTreeMap Children;226,8041
  std::vector<ProbeType> Probes;228,8121
  MCPseudoProbeInlineTreeBase(229,8154
  uint64_t Guid 237,8452
  bool isRoot(240,8503
  InlinedProbeTreeMap &getChildren(getChildren241,8547
  const InlinedProbeTreeMap &getChildren(getChildren242,8605
  std::vector<ProbeType> &getProbes(getProbes243,8675
  void addProbes(244,8732
  MCPseudoProbeInlineTreeBase<MCPseudoProbeInlineTreeBase246,8831
  MCPseudoProbeInlineTreeBase<ProbeType, DerivedProbeInlineTreeType> *Parent Parent246,8831
  DerivedProbeInlineTreeType *getOrAddNode(getOrAddNode248,8925
class MCPseudoProbeInlineTree261,9504
  MCPseudoProbeInlineTree(266,9705
  MCPseudoProbeInlineTree(267,9769
class MCDecodedPseudoProbeInlineTree278,10157
  InlineSite ISite;282,10342
  uint32_t ChildrenToProcess 284,10385
  MCDecodedPseudoProbeInlineTree(287,10466
  bool hasInlineSite(290,10587
class MCPseudoProbeSections 295,10753
  void addPseudoProbe(297,10791
  using MCProbeDivisionMap 304,11105
  MCProbeDivisionMap MCProbeDivisions;310,11387
  const MCProbeDivisionMap &getMCProbes(getMCProbes313,11435
  bool empty(315,11513
class MCPseudoProbeTable 320,11613
  MCPseudoProbeSections MCProbeSections;327,12085
  MCPseudoProbeSections &getProbeSections(getProbeSections332,12180
  static int DdgPrintIndent;335,12268
class MCPseudoProbeDecoder 339,12308
  GUIDProbeFunctionMap GUID2FuncDescMap;341,12375
  AddressProbesMap Address2ProbesMap;344,12445
  MCDecodedPseudoProbeInlineTree DummyInlineRoot;350,12769
  const uint8_t *Data Data353,12872
  const uint8_t *End End356,12945
  bool EncodingIsAddrBased 359,13058
  using Uint64Set 368,13352
  using Uint64Map 369,13392
  const AddressProbesMap &getAddress2ProbesMap(getAddress2ProbesMap410,15150
  AddressProbesMap &getAddress2ProbesMap(getAddress2ProbesMap414,15242
  const GUIDProbeFunctionMap &getGUID2FuncDescMap(getGUID2FuncDescMap416,15316
  const MCDecodedPseudoProbeInlineTree &getDummyInlineRoot(getDummyInlineRoot423,15510

/usr/include/llvm/MC/MCSchedule.h,3748
#define LLVM_MC_MCSCHEDULE_H15,621
struct MCProcResourceDesc 31,985
  const char *Name;Name32,1013
  unsigned NumUnits;33,1033
  unsigned SuperIdx;34,1089
  int BufferSize;48,1808
  const unsigned *SubUnitsIdxBegin;SubUnitsIdxBegin53,2037
struct MCWriteProcResEntry 63,2381
  uint16_t ProcResourceIdx;64,2410
  uint16_t ReleaseAtCycle;68,2611
  uint16_t AcquireAtCycle;72,2810
  bool operator=74,2838
struct MCWriteLatencyEntry 86,3439
  int16_t Cycles;87,3468
  uint16_t WriteResourceID;88,3486
  bool operator=90,3515
struct MCReadAdvanceEntry 103,4106
  unsigned UseIdx;104,4134
  unsigned WriteResourceID;105,4153
  int Cycles;106,4181
  bool operator=108,4196
struct MCSchedClassDesc 118,4562
  static const unsigned short InvalidNumMicroOps 119,4588
  static const unsigned short VariantNumMicroOps 120,4655
  const char* Name;123,4781
  uint16_t NumMicroOps 125,4808
  uint16_t BeginGroup 126,4837
  uint16_t EndGroup 127,4864
  uint16_t RetireOOO 128,4889
  uint16_t WriteProcResIdx;129,4915
  uint16_t NumWriteProcResEntries;130,4982
  uint16_t WriteLatencyIdx;131,5017
  uint16_t NumWriteLatencyEntries;132,5084
  uint16_t ReadAdvanceIdx;133,5119
  uint16_t NumReadAdvanceEntries;134,5184
  bool isValid(136,5219
  bool isVariant(139,5294
struct MCRegisterCostEntry 151,5891
  unsigned RegisterClassID;152,5920
  unsigned Cost;153,5948
  bool AllowMoveElimination;154,5965
struct MCRegisterFileDesc 166,6494
  const char *Name;Name167,6522
  uint16_t NumPhysRegs;168,6542
  uint16_t NumRegisterCostEntries;169,6566
  uint16_t RegisterCostEntryIdx;171,6680
  uint16_t MaxMovesEliminatedPerCycle;174,6823
  bool AllowZeroMoveEliminationOnly;177,6968
struct MCExtraProcessorInfo 186,7307
  unsigned ReorderBufferSize;188,7389
  unsigned MaxRetirePerCycle;190,7466
  const MCRegisterFileDesc *RegisterFiles;RegisterFiles191,7496
  unsigned NumRegisterFiles;192,7539
  const MCRegisterCostEntry *RegisterCostTable;RegisterCostTable193,7568
  unsigned NumRegisterCostEntries;194,7616
  unsigned LoadQueueID;195,7651
  unsigned StoreQueueID;196,7675
struct MCSchedModel 253,11209
  unsigned IssueWidth;265,11951
  static const unsigned DefaultIssueWidth 266,11974
  unsigned MicroOpBufferSize;282,12790
  static const unsigned DefaultMicroOpBufferSize 283,12820
  unsigned LoopMicroOpBufferSize;290,13194
  static const unsigned DefaultLoopMicroOpBufferSize 291,13228
  unsigned LoadLatency;294,13350
  static const unsigned DefaultLoadLatency 295,13374
  unsigned HighLatency;301,13672
  static const unsigned DefaultHighLatency 302,13696
  unsigned MispredictPenalty;306,13872
  static const unsigned DefaultMispredictPenalty 307,13902
  bool PostRAScheduler;309,13958
  bool CompleteModel;311,14009
  bool EnableIntervals;316,14202
  unsigned ProcID;318,14227
  const MCProcResourceDesc *ProcResourceTable;ProcResourceTable319,14246
  const MCSchedClassDesc *SchedClassTable;SchedClassTable320,14293
  unsigned NumProcResourceKinds;321,14336
  unsigned NumSchedClasses;322,14369
  const InstrItinerary *InstrItineraries;InstrItineraries325,14494
  const MCExtraProcessorInfo *ExtraProcessorInfo;ExtraProcessorInfo327,14537
  bool hasExtraProcessorInfo(329,14588
  unsigned getProcessorID(331,14657
  bool hasInstrSchedModel(334,14779
  const MCExtraProcessorInfo &getExtraProcessorInfo(getExtraProcessorInfo336,14842
  bool isComplete(344,15171
  bool isOutOfOrder(347,15286
  unsigned getNumProcResourceKinds(349,15349
  const MCProcResourceDesc *getProcResource(getProcResource353,15432
  const MCSchedClassDesc *getSchedClassDesc(getSchedClassDesc360,15710
  static int computeInstrLatency(368,16036
  int computeInstrLatency(371,16164

/usr/include/llvm/MC/MCSectionCOFF.h,39
#define LLVM_MC_MCSECTIONCOFF_H14,536

/usr/include/llvm/MC/MCSectionWasm.h,39
#define LLVM_MC_MCSECTIONWASM_H14,536

/usr/include/llvm/MC/MCSectionXCOFF.h,40
#define LLVM_MC_MCSECTIONXCOFF_H14,538

/usr/include/llvm/MC/MCStreamer.h,3587
#define LLVM_MC_MCSTREAMER_H14,530
using MCSectionSubPair 66,1685
class MCTargetStreamer 93,2991
  MCStreamer &Streamer;Streamer95,3027
  MCStreamer &getStreamer(getStreamer101,3127
class ARMTargetStreamer 135,4379
  std::unique_ptr<AssemblerConstantPools> ConstantPools;199,7158
class MCStreamer 212,7736
  MCContext &Context;Context213,7755
  std::unique_ptr<MCTargetStreamer> TargetStreamer;214,7777
  std::vector<MCDwarfFrameInfo> DwarfFrameInfos;216,7830
  SmallVector<SmallVector220,8077
  SmallVector<std::pair<size_t, MCSection *>, 1> FrameInfoStack;220,8077
  std::vector<std::unique_ptr<WinEH::FrameInfo>> WinFrameInfos;225,8349
  WinEH::FrameInfo *CurrentWinFrameInfo;CurrentWinFrameInfo227,8414
  size_t CurrentProcWinFrameInfoStartIndex;228,8455
  DenseMap<DenseMap232,8616
  DenseMap<const MCSymbol *, unsigned> SymbolOrdering;232,8616
  SmallVector<SmallVector236,8759
  SmallVector<std::pair<MCSectionSubPair, MCSectionSubPair>, 4> SectionStack;236,8759
  const SMLoc *StartTokLocPtr StartTokLocPtr240,8945
  unsigned NextWinCFIID 246,9230
  bool UseAssemblerInfoForParsing;248,9260
  bool AllowAutoPadding 255,9625
  WinEH::FrameInfo *getCurrentWinFrameInfo(getCurrentWinFrameInfo263,9827
  void setTargetStreamer(284,10439
  void setStartTokLocPtr(288,10523
  SMLoc getStartTokLoc(289,10592
  MCContext &getContext(getContext297,10739
  virtual MCAssembler *getAssemblerPtr(getAssemblerPtr299,10792
  void setUseAssemblerInfoForParsing(301,10854
  bool getUseAssemblerInfoForParsing(302,10935
  MCTargetStreamer *getTargetStreamer(getTargetStreamer304,11014
  void setAllowAutoPadding(308,11094
  bool getAllowAutoPadding(309,11155
  unsigned getNumWinFrameInfos(324,11733
  ArrayRef<std::unique_ptr<WinEH::FrameInfo>> getWinFrameInfos(325,11799
  virtual bool isVerboseAsm(336,12099
  virtual bool hasRawTextSupport(340,12267
  virtual bool isIntegratedAssemblerRequired(344,12417
  virtual void AddComment(359,13179
  virtual void addBlankLine(380,14125
  MCSectionSubPair getCurrentSection(388,14291
  MCSection *getCurrentSectionOnly(getCurrentSectionOnly393,14444
  MCSectionSubPair getPreviousSection(396,14599
  unsigned getSymbolOrder(404,14870
  void pushSection(415,15241
  bool popSection(424,15523
  bool subSection(439,15902
  void switchSectionNoChange(457,16566
  virtual StringRef getMnemonic(479,17505
  virtual void emitLinkerOptions(500,18349
  virtual void emitDataRegion(503,18469
  virtual void emitVersionMin(506,18586
  virtual void emitBuildVersion(512,18882
  virtual void emitDarwinTargetVariantBuildVersion(516,19075
  virtual void emitLOHDirective(671,25725
  virtual void emitGNUAttribute(674,25839
  virtual void emitIntValueInHex(748,28977
  void emitInt8(752,29079
  void emitInt16(753,29139
  void emitInt32(754,29200
  void emitInt64(755,29261
  virtual void emitIntValueInHexWithPadding(760,29529
  virtual void emitIdent(911,35989
  unsigned emitDwarfFileDirective(915,36179
  virtual void emitCVStringTableDirective(1008,40837
  virtual void emitCVFileChecksumsDirective(1011,40961
  virtual void emitCVFileChecksumOffsetDirective(1015,41098
  virtual void emitCVFPOData(1018,41239
  virtual std::optional<std::optional1096,45684
  emitRelocDirective(1097,45738
  virtual void emitAddrsig(1102,45909
  virtual void emitAddrsigSym(1103,45941
  virtual bool mayHaveInstructions(1137,47352
  virtual void emitDwarfLineEndEntry(1156,48177
  virtual void emitDwarfAdvanceLineAddr(1161,48451
  virtual void doFinalizationAtSectionEnd(1167,48770

/usr/include/llvm/MC/MCSubtargetInfo.h,2070
#define LLVM_MC_MCSUBTARGETINFO_H14,557
struct SubtargetFeatureKV 35,1104
  const char *Key;Key36,1132
  const char *Desc;Desc37,1192
  unsigned Value;38,1253
  FeatureBitArray Implies;39,1316
struct SubtargetSubTypeKV 55,1799
  const char *Key;Key56,1827
  FeatureBitArray Implies;57,1887
  FeatureBitArray TuneImplies;58,1945
  const MCSchedModel *SchedModel;SchedModel59,2003
class MCSubtargetInfo 76,2452
  Triple TargetTriple;77,2476
  std::string CPU;78,2499
  std::string TuneCPU;79,2541
  ArrayRef<SubtargetFeatureKV> ProcFeatures;80,2588
  ArrayRef<SubtargetSubTypeKV> ProcDesc;81,2660
  const MCWriteProcResEntry *WriteProcResTable;WriteProcResTable84,2758
  const MCWriteLatencyEntry *WriteLatencyTable;WriteLatencyTable85,2806
  const MCReadAdvanceEntry *ReadAdvanceTable;ReadAdvanceTable86,2854
  const MCSchedModel *CPUSchedModel;CPUSchedModel87,2900
  const InstrStage *Stages;Stages89,2938
  const unsigned *OperandCycles;OperandCycles90,3009
  const unsigned *ForwardingPaths;ForwardingPaths91,3076
  FeatureBitset FeatureBits;92,3111
  std::string FeatureString;93,3187
  const Triple &getTargetTriple(getTargetTriple108,3897
  StringRef getCPU(109,3962
  StringRef getTuneCPU(110,4005
  const FeatureBitset& getFeatureBits(112,4057
  void setFeatureBits(113,4127
  StringRef getFeatureString(117,4223
  bool hasFeature(119,4287
  const MCSchedModel &getSchedModel(getSchedModel163,6055
  const MCWriteProcResEntry *getWriteProcResBegin(getWriteProcResBegin167,6228
  const MCWriteProcResEntry *getWriteProcResEnd(getWriteProcResEnd171,6375
  const MCWriteLatencyEntry *getWriteLatencyEntry(getWriteLatencyEntry176,6535
  int getReadAdvanceCycles(184,6877
  getReadAdvanceEntries(206,7800
  virtual unsigned resolveVariantSchedClass(220,8381
  bool isCPUStringValid(228,8709
  ArrayRef<SubtargetSubTypeKV> getAllProcessorDescriptions(234,8917
  ArrayRef<SubtargetFeatureKV> getAllProcessorFeatures(239,9045
  virtual unsigned getHwMode(243,9140
  virtual unsigned getCacheLineSize(267,10106

/usr/include/llvm/MC/MCSymbol.h,3041
#define LLVM_MC_MCSYMBOL_H14,545
class MCSymbol 40,1378
  enum SymbolKind 44,1554
    SymbolKindUnset,45,1574
    SymbolKindCOFF,46,1595
    SymbolKindELF,47,1615
    SymbolKindGOFF,48,1634
    SymbolKindMachO,49,1654
    SymbolKindWasm,50,1675
    SymbolKindXCOFF,51,1695
  enum Contents 56,1824
    SymContentsUnset,57,1852
    SymContentsOffset,58,1874
    SymContentsVariable,59,1897
    SymContentsCommon,60,1922
    SymContentsTargetCommon,61,1945
  static MCFragment *AbsolutePseudoFragment;AbsolutePseudoFragment65,2076
  unsigned HasName 82,2883
  unsigned IsTemporary 87,3077
  unsigned IsRedefinable 90,3150
  mutable unsigned IsUsed 93,3231
  mutable unsigned IsRegistered 95,3263
  mutable unsigned IsExternal 99,3419
  mutable unsigned IsPrivateExtern 102,3492
  mutable unsigned IsWeakExternal 105,3569
  unsigned Kind 109,3769
  mutable unsigned IsUsedInReloc 112,3857
  unsigned SymbolContents 116,4029
  enum : unsigned 128,4417
  enum : unsigned { NumCommonAlignmentBits 128,4417
  unsigned CommonAlignLog2 : NumCommonAlignmentBits;129,4467
  enum : unsigned 133,4663
  enum : unsigned { NumFlagsBits 133,4663
  mutable uint32_t Flags : NumFlagsBits;134,4704
    uint64_t Offset;141,4930
    uint64_t CommonSize;144,5003
    const MCExpr *Value;Value147,5083
  MCSymbol(163,5555
  void *operator new(176,6099
  void operator delete(180,6212
  void operator delete(182,6304
  void operator delete(186,6455
  const StringMapEntry<bool> *&getNameEntryPtr(getNameEntryPtr191,6624
  const StringMapEntry<bool> *&getNameEntryPtr(getNameEntryPtr196,6835
  StringRef getName(205,7091
  bool isRegistered(212,7210
  void setIsRegistered(213,7263
  void setUsedInReloc(215,7331
  bool isUsedInReloc(216,7387
  bool isTemporary(222,7543
  bool isUsed(225,7633
  bool isRedefinable(228,7718
  void setRedefinable(230,7812
  void redefineIfPossible(232,7916
  bool isDefined(250,8356
  bool isInSection(254,8523
  bool isUndefined(259,8677
  bool isAbsolute(264,8830
  MCSection &getSection(getSection269,8985
  void setFragment(275,9169
  void setUndefined(281,9334
  bool isELF(283,9381
  bool isCOFF(285,9437
  bool isGOFF(287,9495
  bool isMachO(289,9553
  bool isWasm(291,9613
  bool isXCOFF(293,9671
  bool isVariable(300,9834
  const MCExpr *getVariableValue(getVariableValue305,9978
  void setVariableValue(311,10135
  uint32_t getIndex(316,10238
  void setIndex(321,10337
  bool isUnset(325,10401
  uint64_t getOffset(327,10472
  void setOffset(333,10690
  uint64_t getCommonSize(342,10998
  void setCommon(352,11333
  MaybeAlign getCommonAlignment(364,11761
  bool declareCommon(375,12199
  bool isCommon(387,12577
  bool isTargetCommon(393,12764
  MCFragment *getFragment(getFragment397,12855
  bool isExternal(406,13203
  void setExternal(407,13252
  bool isPrivateExtern(409,13314
  void setPrivateExtern(410,13373
  bool isWeakExternal(412,13439
  void print(415,13548
  void setFlags(425,13834
  void modifyFlags(431,13998

/usr/include/llvm/MC/MCSymbolWasm.h,1940
#define LLVM_MC_MCSYMBOLWASM_H9,400
class MCSymbolWasm 16,517
  std::optional<wasm::WasmSymbolType> Type;17,556
  std::optional<StringRef> ImportModule;24,790
  std::optional<StringRef> ImportName;25,831
  std::optional<StringRef> ExportName;26,870
  std::optional<wasm::WasmGlobalType> GlobalType;28,953
  std::optional<wasm::WasmTableType> TableType;29,1003
  MCSymbolWasm(36,1224
  static bool classof(38,1346
  const MCExpr *getSize(getSize40,1412
  void setSize(41,1467
  bool isFunction(43,1522
  bool isData(45,1643
  bool isGlobal(46,1722
  bool isTable(47,1796
  bool isSection(48,1868
  bool isTag(49,1944
  std::optional<wasm::WasmSymbolType> getType(51,2013
  void setType(53,2085
  bool isExported(55,2145
  void setExported(58,2229
  bool isNoStrip(62,2336
  void setNoStrip(65,2419
  bool isTLS(69,2525
  void setTLS(70,2593
  bool isWeak(74,2685
  void setWeak(75,2726
  bool isHidden(77,2776
  void setHidden(78,2821
  bool isComdat(80,2879
  void setComdat(81,2924
  bool omitFromLinkingSection(86,3199
  void setOmitFromLinkingSection(87,3272
  bool hasImportModule(89,3343
  StringRef getImportModule(90,3411
  void setImportModule(99,3747
  bool hasImportName(101,3812
  StringRef getImportName(102,3876
  void setImportName(107,3984
  bool hasExportName(109,4045
  StringRef getExportName(110,4109
  void setExportName(111,4167
  bool isFunctionTable(113,4228
  void setFunctionTable(117,4369
  void setUsedInGOT(122,4487
  bool isUsedInGOT(123,4539
  void setUsedInInitArray(125,4591
  bool isUsedInInitArray(126,4655
  const wasm::WasmSignature *getSignature(getSignature128,4719
  void setSignature(129,4791
  const wasm::WasmGlobalType &getGlobalType(getGlobalType131,4859
  void setGlobalType(135,4965
  bool hasTableType(137,5033
  const wasm::WasmTableType &getTableType(getTableType138,5095
  void setTableType(142,5202
  void setTableType(143,5266

/usr/include/llvm/MC/MCSymbolXCOFF.h,705
#define LLVM_MC_MCSYMBOLXCOFF_H9,402
class MCSymbolXCOFF 19,576
  enum XCOFFSymbolFlags 21,617
  enum XCOFFSymbolFlags : uint16_t { SF_EHInfo 21,617
  MCSymbolXCOFF(24,685
  static bool classof(27,810
  static StringRef getUnqualifiedName(29,877
  void setStorageClass(39,1149
  XCOFF::StorageClass getStorageClass(43,1227
  StringRef getUnqualifiedName(48,1377
  void setVisibilityType(54,1555
  XCOFF::VisibilityType getVisibilityType(56,1635
  bool hasRename(58,1713
  void setSymbolTableName(60,1761
  StringRef getSymbolTableName(65,1858
  bool isEHInfo(71,1988
  void setEHInfo(73,2048
  std::optional<XCOFF::StorageClass> StorageClass;76,2122
  StringRef SymbolTableName;79,2286

/usr/include/llvm/MC/MCTargetOptions.h,1471
#define LLVM_MC_MCTARGETOPTIONS_H10,404
enum class ExceptionHandling 19,563
  None,20,594
  DwarfCFI,21,632
  SjLj,22,689
  ARM,23,738
  WinEH,24,765
  Wasm,25,809
  AIX,26,857
  ZOS,27,897
enum class EmitDwarfUnwindType 31,1044
  Always,32,1077
  NoCompactUnwind,33,1124
  Default,34,1190
class MCTargetOptions 39,1274
  enum AsmInstrumentation 41,1306
    AsmInstrumentationNone,42,1334
    AsmInstrumentationAddress43,1362
  bool MCRelaxAll 46,1398
  bool MCNoExecStack 47,1421
  bool MCFatalWarnings 48,1447
  bool MCNoWarn 49,1475
  bool MCNoDeprecatedWarn 50,1496
  bool MCNoTypeCheck 51,1527
  bool MCSaveTempLabels 52,1553
  bool MCIncrementalLinkerCompatible 53,1582
  bool ShowMCEncoding 54,1624
  bool ShowMCInst 55,1651
  bool AsmVerbose 56,1674
  bool PreserveAsmComments 59,1735
  bool Dwarf64 61,1768
  EmitDwarfUnwindType EmitDwarfUnwind;63,1789
  int DwarfVersion 65,1829
  enum DwarfDirectory 67,1854
    DisableDwarfDirectory,69,1899
    EnableDwarfDirectory,72,2023
    DefaultDwarfDirectory74,2087
  DwarfDirectory MCUseDwarfDirectory;76,2118
  std::string ABIName;78,2157
  std::string AssemblyLanguage;79,2180
  std::string SplitDwarfFile;80,2212
  std::string AsSecureLogFile;81,2242
  const char *Argv0 Argv083,2274
  ArrayRef<std::string> CommandLineArgs;84,2305
  std::vector<std::string> IASSearchPaths;88,2449
  bool EmitCompactUnwindNonCanonical 92,2586
  bool PPCUseFullRegisterNames 95,2688

/usr/include/llvm/MC/MCXCOFFStreamer.h,132
#define LLVM_MC_MCXCOFFSTREAMER_H10,404
class MCXCOFFStreamer 16,496
  MCXCOFFStreamer(18,554
  bool emitSymbolAttribute(22,741

/usr/include/llvm/MC/StringTableBuilder.h,833
#define LLVM_MC_STRINGTABLEBUILDER_H10,407
class StringTableBuilder 24,727
  enum Kind 26,762
    ELF,27,776
    WinCOFF,28,785
    MachO,29,798
    MachO64,30,809
    MachOLinked,31,822
    MachO64Linked,32,839
    RAW,33,858
    DWARF,34,867
    XCOFF,35,878
    DXContainer36,889
  DenseMap<CachedHashStringRef,CachedHashStringRef40,920
  DenseMap<CachedHashStringRef, size_t> StringIndexMap;40,920
  Kind K;42,995
  Align Alignment;43,1005
  void finalizeStringTable(46,1051
  void initSize(47,1094
  StringTableBuilder(50,1122
  ~StringTableBuilder(51,1180
  size_t add(56,1391
  size_t add(57,1428
  void finalize(61,1601
  void finalizeInOrder(65,1739
  size_t getOffset(69,1873
  bool contains(77,2224
  bool contains(80,2310
  size_t getSize(84,2398
  void clear(85,2440
  void write(87,2457

/usr/include/llvm/MC/TargetRegistry.h,8997
#define LLVM_MC_TARGETREGISTRY_H19,802
class Target 154,6483
  using ArchMatchFnTy 158,6539
  using MCAsmInfoCtorFnTy 160,6597
  using MCObjectFileInfoCtorFnTy 163,6804
  using MCInstrInfoCtorFnTy 166,7023
  using MCInstrAnalysisCtorFnTy 167,7073
  using MCRegInfoCtorFnTy 168,7154
  using MCSubtargetInfoCtorFnTy 169,7221
  using TargetMachineCtorTy 172,7440
  using AsmPrinterCtorTy 179,7887
  using MCAsmBackendCtorTy 181,7997
  using MCAsmParserCtorTy 185,8290
  using MCDisassemblerCtorTy 188,8455
  using MCInstPrinterCtorTy 191,8670
  using MCCodeEmitterCtorTy 196,9030
  using ELFStreamerCtorTy 198,9168
  using GOFFStreamerCtorTy 203,9450
  using MachOStreamerCtorTy 207,9694
  using COFFStreamerCtorTy 212,9987
  using WasmStreamerCtorTy 217,10287
  using XCOFFStreamerCtorTy 222,10570
  using SPIRVStreamerCtorTy 227,10854
  using DXContainerStreamerCtorTy 233,11141
  using NullTargetStreamerCtorTy 239,11432
  using AsmTargetStreamerCtorTy 240,11505
  using ObjectTargetStreamerCtorTy 243,11662
  using MCRelocationInfoCtorTy 245,11772
  using MCSymbolizerCtorTy 247,11917
  using CustomBehaviourCtorTy 252,12148
  using InstrPostProcessCtorTy 257,12361
  using InstrumentManagerCtorTy 261,12515
  Target *Next;Next268,12781
  ArchMatchFnTy ArchMatchFn;271,12870
  const char *Name;Name274,12930
  const char *ShortDesc;ShortDesc277,13004
  const char *BackendName;BackendName281,13162
  bool HasJIT;284,13243
  MCAsmInfoCtorFnTy MCAsmInfoCtorFn;288,13354
  MCObjectFileInfoCtorFnTy MCObjectFileInfoCtorFn;291,13470
  MCInstrInfoCtorFnTy MCInstrInfoCtorFn;295,13621
  MCInstrAnalysisCtorFnTy MCInstrAnalysisCtorFn;299,13770
  MCRegInfoCtorFnTy MCRegInfoCtorFn;303,13920
  MCSubtargetInfoCtorFnTy MCSubtargetInfoCtorFn;307,14065
  TargetMachineCtorTy TargetMachineCtorFn;311,14219
  MCAsmBackendCtorTy MCAsmBackendCtorFn;315,14365
  MCAsmParserCtorTy MCAsmParserCtorFn;319,14513
  AsmPrinterCtorTy AsmPrinterCtorFn;323,14651
  MCDisassemblerCtorTy MCDisassemblerCtorFn;327,14795
  MCInstPrinterCtorTy MCInstPrinterCtorFn;331,14945
  MCCodeEmitterCtorTy MCCodeEmitterCtorFn;335,15091
  COFFStreamerCtorTy COFFStreamerCtorFn 338,15210
  GOFFStreamerCtorTy GOFFStreamerCtorFn 339,15261
  MachOStreamerCtorTy MachOStreamerCtorFn 340,15312
  ELFStreamerCtorTy ELFStreamerCtorFn 341,15365
  WasmStreamerCtorTy WasmStreamerCtorFn 342,15414
  XCOFFStreamerCtorTy XCOFFStreamerCtorFn 343,15465
  SPIRVStreamerCtorTy SPIRVStreamerCtorFn 344,15518
  DXContainerStreamerCtorTy DXContainerStreamerCtorFn 345,15571
  NullTargetStreamerCtorTy NullTargetStreamerCtorFn 349,15745
  AsmTargetStreamerCtorTy AsmTargetStreamerCtorFn 353,15916
  ObjectTargetStreamerCtorTy ObjectTargetStreamerCtorFn 357,16085
  MCRelocationInfoCtorTy MCRelocationInfoCtorFn 361,16303
  MCSymbolizerCtorTy MCSymbolizerCtorFn 365,16501
  CustomBehaviourCtorTy CustomBehaviourCtorFn 369,16681
  InstrPostProcessCtorTy InstrPostProcessCtorFn 373,16869
  InstrumentManagerCtorTy InstrumentManagerCtorFn 377,17061
  const Target *getNext(getNext386,17245
  const char *getName(getName389,17332
  const char *getShortDescription(getShortDescription392,17447
  const char *getBackendName(getBackendName395,17557
  bool hasJIT(402,17745
  bool hasTargetMachine(405,17859
  bool hasMCAsmBackend(408,18004
  bool hasMCAsmParser(411,18149
  MCAsmInfo *createMCAsmInfo(createMCAsmInfo424,18638
  MCObjectFileInfo *createMCObjectFileInfo(createMCObjectFileInfo434,18990
  MCInstrInfo *createMCInstrInfo(createMCInstrInfo446,19449
  MCInstrAnalysis *createMCInstrAnalysis(createMCInstrAnalysis454,19656
  MCRegisterInfo *createMCRegInfo(createMCRegInfo462,19899
  MCSubtargetInfo *createMCSubtargetInfo(createMCSubtargetInfo477,20551
  TargetMachine *createTargetMachine(createTargetMachine491,21196
  MCAsmBackend *createMCAsmBackend(createMCAsmBackend503,21742
  MCTargetAsmParser *createMCAsmParser(createMCAsmParser515,22231
  AsmPrinter *createAsmPrinter(createAsmPrinter526,22739
  MCDisassembler *createMCDisassembler(createMCDisassembler533,22976
  MCInstPrinter *createMCInstPrinter(createMCInstPrinter540,23214
  MCCodeEmitter *createMCCodeEmitter(createMCCodeEmitter550,23673
  MCStreamer *createMCObjectStreamer(createMCObjectStreamer565,24236
  MCStreamer *createAsmStreamer(createAsmStreamer647,27848
  MCTargetStreamer *createAsmTargetStreamer(createAsmTargetStreamer662,28588
  MCStreamer *createNullStreamer(createNullStreamer671,28987
  MCTargetStreamer *createNullTargetStreamer(createNullTargetStreamer677,29148
  MCRelocationInfo *createMCRelocationInfo(createMCRelocationInfo687,29469
  createMCSymbolizer(707,30275
  mca::CustomBehaviour *createCustomBehaviour(createCustomBehaviour719,30880
  mca::InstrPostProcess *createInstrPostProcess(createInstrPostProcess729,31367
  createInstrumentManager(740,31811
struct TargetRegistry 751,32112
  class iterator 758,32401
    explicit iterator(763,32493
    bool operator==(operator==774,32783
    bool operator!=(operator!=775,32861
    iterator &operator++(operator++778,32984
    iterator operator++(783,33150
    const Target &operator*(operator*789,33266
    const Target *operator->(operator->794,33395
  static void RegisterMCAsmInfo(863,36442
  static void RegisterMCObjectFileInfo(875,36973
  static void RegisterMCInstrInfo(889,37582
  static void RegisterMCInstrAnalysis(895,37798
  static void RegisterMCRegInfo(909,38407
  static void RegisterMCSubtargetInfo(922,38968
  static void RegisterTargetMachine(936,39579
  static void RegisterMCAsmBackend(949,40140
  static void RegisterMCAsmParser(962,40709
  static void RegisterAsmPrinter(975,41261
  static void RegisterMCDisassembler(988,41821
  static void RegisterMCInstPrinter(1002,42427
  static void RegisterMCCodeEmitter(1015,42993
  static void RegisterCOFFStreamer(1019,43111
  static void RegisterGOFFStreamer(1023,43226
  static void RegisterMachOStreamer(1027,43341
  static void RegisterELFStreamer(1031,43459
  static void RegisterSPIRVStreamer(1035,43571
  static void RegisterDXContainerStreamer(1039,43689
  static void RegisterWasmStreamer(1043,43825
  static void RegisterXCOFFStreamer(1047,43940
  static void RegisterNullTargetStreamer(1051,44058
  static void RegisterAsmTargetStreamer(1056,44232
  RegisterObjectTargetStreamer(1062,44416
  static void RegisterMCRelocationInfo(1076,45032
  static void RegisterMCSymbolizer(1090,45644
  static void RegisterCustomBehaviour(1103,46212
  static void RegisterInstrPostProcess(1117,46832
  static void RegisterInstrumentManager(1132,47465
template <Triple::ArchType TargetArchType 1154,48161
template <class MCAsmInfoImpl> struct RegisterMCAsmInfo 1176,48956
  RegisterMCAsmInfo(1177,49014
  static MCAsmInfo *Allocator(Allocator1182,49115
struct RegisterMCAsmInfoFn 1196,49632
  RegisterMCAsmInfoFn(1197,49661
template <class MCObjectFileInfoImpl> struct RegisterMCObjectFileInfo 1210,50121
  RegisterMCObjectFileInfo(1211,50193
  static MCObjectFileInfo *Allocator(Allocator1216,50308
struct RegisterMCObjectFileInfoFn 1229,50815
  RegisterMCObjectFileInfoFn(1230,50851
template <class MCInstrInfoImpl> struct RegisterMCInstrInfo 1243,51345
  RegisterMCInstrInfo(1244,51407
  static MCInstrInfo *Allocator(Allocator1249,51512
struct RegisterMCInstrInfoFn 1260,51913
  RegisterMCInstrInfoFn(1261,51944
template <class MCInstrAnalysisImpl> struct RegisterMCInstrAnalysis 1274,52439
  RegisterMCInstrAnalysis(1275,52509
  static MCInstrAnalysis *Allocator(Allocator1280,52622
struct RegisterMCInstrAnalysisFn 1293,53076
  RegisterMCInstrAnalysisFn(1294,53111
template <class MCRegisterInfoImpl> struct RegisterMCRegInfo 1307,53593
  RegisterMCRegInfo(1308,53656
  static MCRegisterInfo *Allocator(Allocator1313,53757
struct RegisterMCRegInfoFn 1326,54184
  RegisterMCRegInfoFn(1327,54213
template <class MCSubtargetInfoImpl> struct RegisterMCSubtargetInfo 1340,54696
  RegisterMCSubtargetInfo(1341,54766
  static MCSubtargetInfo *Allocator(Allocator1346,54879
struct RegisterMCSubtargetInfoFn 1360,55394
  RegisterMCSubtargetInfoFn(1361,55429
template <class TargetMachineImpl> struct RegisterTargetMachine 1374,55884
  RegisterTargetMachine(1375,55950
  Allocator(1381,56084
template <class MCAsmBackendImpl> struct RegisterMCAsmBackend 1395,56660
  RegisterMCAsmBackend(1396,56724
  static MCAsmBackend *Allocator(Allocator1401,56831
template <class MCAsmParserImpl> struct RegisterMCAsmParser 1416,57407
  RegisterMCAsmParser(1417,57469
  static MCTargetAsmParser *Allocator(Allocator1422,57574
template <class AsmPrinterImpl> struct RegisterAsmPrinter 1437,58168
  RegisterAsmPrinter(1438,58228
  static AsmPrinter *Allocator(Allocator1443,58331
template <class MCCodeEmitterImpl> struct RegisterMCCodeEmitter 1457,58840
  RegisterMCCodeEmitter(1458,58906
  static MCCodeEmitter *Allocator(Allocator1463,59015

/usr/include/llvm/MCA/HardwareUnits/HardwareUnit.h,112
#define LLVM_MCA_HARDWAREUNITS_HARDWAREUNIT_H16,652
class HardwareUnit 21,733
  virtual ~HardwareUnit(27,898

/usr/include/llvm/MCA/HardwareUnits/LSUnit.h,2606
#define LLVM_MCA_HARDWAREUNITS_LSUNIT_H16,631
class MemoryGroup 35,1376
  SmallVector<MemoryGroup MemoryGroup44,1663
  SmallVector<MemoryGroup *, 4> OrderSucc;44,1663
  SmallVector<MemoryGroup MemoryGroup46,1769
  SmallVector<MemoryGroup *, 4> DataSucc;46,1769
  CriticalDependency CriticalPredecessor;48,1812
  InstRef CriticalMemoryInstruction;49,1854
  size_t getNumSuccessors(58,2071
  unsigned getNumPredecessors(61,2158
  unsigned getNumExecutingPredecessors(62,2224
  unsigned getNumExecutedPredecessors(65,2314
  unsigned getNumInstructions(68,2402
  unsigned getNumExecuting(69,2468
  unsigned getNumExecuted(70,2528
  const InstRef &getCriticalMemoryInstruction(getCriticalMemoryInstruction72,2587
  const CriticalDependency &getCriticalPredecessor(getCriticalPredecessor75,2685
  void addSuccessor(79,2783
  bool isWaiting(97,3348
  bool isPending(101,3473
  bool isReady(106,3641
  bool isExecuting(107,3719
  bool isExecuted(110,3830
  void onGroupIssued(112,3900
  void onGroupExecuted(126,4327
  void onInstructionIssued(132,4477
  void onInstructionExecuted(160,5353
  void addInstruction(178,5868
  void cycleEvent(183,5999
class LSUnitBase 190,6183
  unsigned LQSize;197,6498
  unsigned SQSize;205,6795
  unsigned UsedLQEntries;207,6815
  unsigned UsedSQEntries;208,6841
  const bool NoAlias;215,7102
  DenseMap<DenseMap218,7178
  DenseMap<unsigned, std::unique_ptr<MemoryGroup>> Groups;218,7178
  unsigned NextGroupID;219,7237
  unsigned getLoadQueueSize(228,7478
  unsigned getStoreQueueSize(231,7596
  unsigned getUsedLQEntries(233,7653
  unsigned getUsedSQEntries(234,7715
  void acquireLQSlot(235,7777
  void acquireSQSlot(236,7821
  void releaseLQSlot(237,7865
  void releaseSQSlot(238,7909
  bool assumeNoAlias(240,7954
  enum Status 242,8004
    LSU_AVAILABLE 243,8020
    LSU_LQUEUE_FULL,244,8043
    LSU_SQUEUE_FULL 245,8090
  bool isSQEmpty(263,8847
  bool isLQEmpty(264,8899
  bool isSQFull(265,8951
  bool isLQFull(266,9021
  bool isValidGroupID(268,9092
  bool isReady(273,9268
  bool isPending(281,9556
  bool isWaiting(289,9857
  bool hasDependentUsers(295,10047
  const MemoryGroup &getGroup(getGroup301,10275
  MemoryGroup &getGroup(getGroup306,10435
  unsigned createMemoryGroup(311,10583
  virtual void onInstructionIssued(325,11141
class LSUnit 398,14634
  unsigned CurrentLoadGroupID;437,16906
  unsigned CurrentLoadBarrierGroupID;438,16937
  unsigned CurrentStoreGroupID;439,16975
  unsigned CurrentStoreBarrierGroupID;440,17007
  LSUnit(443,17055
  LSUnit(445,17163
  LSUnit(447,17273

/usr/include/llvm/MCA/HardwareUnits/RegisterFile.h,1626
#define LLVM_MCA_HARDWAREUNITS_REGISTERFILE_H17,697
class WriteRef 38,1261
  unsigned IID;39,1278
  unsigned WriteBackCycle;40,1294
  unsigned WriteResID;41,1321
  MCPhysReg RegisterID;42,1344
  WriteState *Write;Write43,1368
  static const unsigned INVALID_IID;45,1390
  WriteRef(48,1436
  WriteRef(51,1540
  unsigned getSourceIndex(53,1591
  unsigned getWriteBackCycle(54,1641
  WriteState *getWriteState(getWriteState57,1740
  unsigned getWriteResourceID(58,1788
  bool isAvailable(70,2182
  void dump(77,2373
class RegisterFile 83,2510
  const MCRegisterInfo &MRI;MRI84,2553
  struct RegisterMappingTracker 93,2949
    const unsigned NumPhysRegs;98,3229
    unsigned NumUsedPhysRegs;100,3324
    const unsigned MaxMoveEliminatedPerCycle;105,3562
    unsigned NumMoveEliminated;113,3957
    bool AllowZeroMoveEliminationOnly;116,4065
    RegisterMappingTracker(118,4105
  SmallVector<RegisterMappingTracker,RegisterMappingTracker135,5062
  SmallVector<RegisterMappingTracker, 4> RegisterFiles;135,5062
  using IndexPlusCostPairTy 144,5520
  struct RegisterRenamingInfo 165,6512
    IndexPlusCostPairTy IndexPlusCost;166,6544
    MCPhysReg RenameAs;167,6583
    MCPhysReg AliasRegID;168,6607
    bool AllowMoveElimination;169,6633
    RegisterRenamingInfo(170,6664
  using RegisterMapping 187,7512
  std::vector<RegisterMapping> RegisterMappings;190,7647
  APInt ZeroRegisters;194,7849
  unsigned CurrentCycle;196,7873
  struct RAWHazard 239,9973
    bool isValid(244,10076
    bool hasUnknownCycles(245,10124
  unsigned getNumRegisterFiles(293,12641
  void cycleEnd(302,12905

/usr/include/llvm/MCA/HardwareUnits/RetireControlUnit.h,565
#define LLVM_MCA_HARDWAREUNITS_RETIRECONTROLUNIT_H15,596
struct RetireControlUnit 36,1356
  struct RUToken 51,2139
    InstRef IR;52,2158
    unsigned NumSlots;53,2174
    bool Executed;54,2236
  unsigned NextAvailableSlotIdx;58,2323
  unsigned CurrentInstructionSlotIdx;59,2356
  unsigned NumROBEntries;60,2394
  unsigned AvailableEntries;61,2420
  unsigned MaxRetirePerCycle;62,2449
  std::vector<RUToken> Queue;63,2500
  unsigned normalizeQuantity(65,2531
  bool isEmpty(82,3131
  bool isAvailable(84,3201
  unsigned getMaxRetirePerCycle(88,3316

/usr/include/llvm/MCA/HardwareUnits/ResourceManager.h,2236
#define LLVM_MCA_HARDWAREUNITS_RESOURCEMANAGER_H16,654
enum ResourceStateEvent 40,1556
  RS_BUFFER_AVAILABLE,41,1582
  RS_BUFFER_UNAVAILABLE,42,1605
  RS_RESERVED43,1630
class ResourceStrategy 47,1719
  virtual void used(62,2275
class ResourceState 135,5610
  const unsigned ProcResourceDescIndex;137,5703
  const uint64_t ResourceMask;163,7135
  uint64_t ResourceSizeMask;175,7706
  uint64_t ReadyMask;178,7765
  const int BufferSize;193,8513
  unsigned AvailableSlots;196,8618
  bool Unavailable;204,8995
  const bool IsAGroup;206,9016
  bool isSubResourceReady(209,9109
  unsigned getProcResourceID(216,9293
  uint64_t getResourceMask(217,9364
  uint64_t getReadyMask(218,9424
  int getBufferSize(219,9478
  bool isBuffered(221,9530
  bool isInOrder(222,9583
  bool isADispatchHazard(225,9704
  bool isReserved(226,9765
  void setReserved(228,9816
  void clearReserved(229,9861
  bool isAResourceGroup(235,10068
  bool containsResource(237,10122
  void markSubResourceAsUsed(239,10196
  void releaseSubResource(244,10302
  unsigned getNumUnits(249,10406
  bool reserveBuffer(268,11067
  void releaseBuffer(278,11293
typedef std::pair<uint64_t,uint64_t297,11808
typedef std::pair<uint64_t, uint64_t> ResourceRef;297,11808
typedef std::pair<unsigned,unsigned301,11993
typedef std::pair<unsigned, unsigned> BufferUsageEntry;301,11993
class ResourceManager 311,12476
  std::vector<std::unique_ptr<ResourceState>> Resources;339,13677
  std::vector<std::unique_ptr<ResourceStrategy>> Strategies;340,13734
  std::vector<uint64_t> Resource2Groups;343,13870
  SmallVector<SmallVector346,13987
  SmallVector<uint64_t, 8> ProcResID2Mask;346,13987
  SmallVector<SmallVector350,14134
  SmallVector<unsigned, 8> ResIndex2ProcResID;350,14134
  SmallDenseMap<SmallDenseMap354,14296
  SmallDenseMap<ResourceRef, unsigned> BusyResources;354,14296
  uint64_t ProcResUnitMask;357,14413
  uint64_t AvailableProcResUnits;360,14517
  uint64_t ReservedResourceGroups;363,14613
  uint64_t AvailableBuffers;367,14770
  uint64_t ReservedBuffers;370,14877
  void setCustomStrategy(391,15554
  uint64_t getProcResUnitMask(428,17343
  uint64_t getAvailableProcResUnits(429,17409
  void dump(438,17696

/usr/include/llvm/MCA/HardwareUnits/Scheduler.h,1164
#define LLVM_MCA_HARDWAREUNITS_SCHEDULER_H15,586
class SchedulerStrategy 27,905
  virtual ~SchedulerStrategy(30,972
  virtual bool compare(36,1196
class DefaultSchedulerStrategy 40,1342
  int computeRank(43,1534
  virtual ~DefaultSchedulerStrategy(49,1704
  bool compare(51,1744
class Scheduler 70,2451
  LSUnitBase &LSU;LSU71,2491
  std::unique_ptr<SchedulerStrategy> Strategy;74,2567
  std::unique_ptr<ResourceManager> Resources;77,2675
  std::vector<InstRef> WaitSet;111,4484
  std::vector<InstRef> PendingSet;112,4516
  std::vector<InstRef> ReadySet;113,4551
  std::vector<InstRef> IssuedSet;114,4584
  uint64_t BusyResourceUnits;121,4959
  unsigned NumDispatchedToThePendingSet;125,5093
  bool HadTokenStall;129,5287
  Scheduler(157,6477
  Scheduler(160,6576
  Scheduler(165,6809
  enum Status 173,7164
    SC_AVAILABLE,174,7180
    SC_LOAD_QUEUE_FULL,175,7198
    SC_STORE_QUEUE_FULL,176,7222
    SC_BUFFERS_FULL,177,7247
    SC_DISPATCH_GROUP_STALL,178,7268
  unsigned getResourceID(234,10002
  bool isReadySetEmpty(243,10321
  bool isWaitSetEmpty(244,10381
  bool hadTokenStall(261,11336
  void instructionCheck(270,11628

/usr/include/llvm/MCA/Stages/DispatchStage.h,47
#define LLVM_MCA_STAGES_DISPATCHSTAGE_H19,785

/usr/include/llvm/MCA/Stages/EntryStage.h,44
#define LLVM_MCA_STAGES_ENTRYSTAGE_H17,684

/usr/include/llvm/MCA/Stages/ExecuteStage.h,46
#define LLVM_MCA_STAGES_EXECUTESTAGE_H18,730

/usr/include/llvm/MCA/Stages/InOrderIssueStage.h,458
#define LLVM_MCA_STAGES_INORDERISSUESTAGE_H15,578
struct StallInfo 27,849
  enum class StallKind 28,868
    DEFAULT,29,893
    REGISTER_DEPS,30,906
    DISPATCH,31,925
    DELAY,32,939
    LOAD_STORE,33,950
    CUSTOM_STALL34,966
  InstRef IR;37,989
  StallKind getStallKind(43,1096
  unsigned getCyclesLeft(44,1146
  const InstRef &getInstruction(getInstruction45,1202
  InstRef &getInstruction(getInstruction46,1257
  bool isValid(48,1301

/usr/include/llvm/MCA/Stages/InstructionTables.h,51
#define LLVM_MCA_STAGES_INSTRUCTIONTABLES_H17,687

/usr/include/llvm/MCA/Stages/MicroOpQueueStage.h,487
#define LLVM_MCA_STAGES_MICROOPQUEUESTAGE_H17,695
class MicroOpQueueStage 26,903
  SmallVector<InstRef,InstRef27,944
  SmallVector<InstRef, 8> Buffer;27,944
  unsigned NextAvailableSlotIdx;28,978
  unsigned CurrentInstructionSlotIdx;29,1011
  const unsigned MaxIPC;34,1232
  unsigned CurrentIPC;35,1257
  unsigned AvailableEntries;38,1342
  bool IsZeroLatencyStage;43,1578
  unsigned getNormalizedOpcodes(54,2173
  bool isAvailable(67,2584
  bool hasWorkToComplete(76,2846

/usr/include/llvm/MCA/Stages/RetireStage.h,45
#define LLVM_MCA_STAGES_RETIRESTAGE_H17,695

/usr/include/llvm/MCA/Stages/Stage.h,601
#define LLVM_MCA_STAGES_STAGE_H16,587
class Stage 27,756
  std::set<HWEventListener *> Listeners;29,805
  const std::set<HWEventListener *> &getListeners(getListeners35,946
  virtual bool isAvailable(42,1136
  virtual Error cycleStart(49,1460
  virtual Error cycleResume(52,1580
  virtual Error cycleEnd(55,1682
  void setNextInSequence(60,1849
  bool checkNextStage(65,2006
  Error moveToTheNextStage(73,2299
  template <typename EventT> void notifyEvent(82,2629
struct InstStreamPause 90,2894
  static char ID;91,2955
  std::error_code convertToErrorCode(93,2974
  void log(96,3077

/usr/include/llvm/MCA/CodeEmitter.h,398
#define LLVM_MCA_CODEEMITTER_H17,675
class CodeEmitter 34,1192
  const MCSubtargetInfo &STI;STI35,1212
  const MCAsmBackend &MAB;MAB36,1242
  const MCCodeEmitter &MCE;MCE37,1269
  SmallString<256> Code;39,1298
  ArrayRef<MCInst> Sequence;40,1323
  SmallVector<SmallVector47,1590
  SmallVector<EncodingInfo, 16> Encodings;47,1590
  CodeEmitter(52,1698
  StringRef getEncoding(56,1894

/usr/include/llvm/MCA/Context.h,779
#define LLVM_MCA_CONTEXT_H18,739
struct PipelineOptions 33,1173
  PipelineOptions(34,1198
  unsigned MicroOpQueueSize;41,1657
  unsigned DecodersThroughput;42,1686
  unsigned DispatchWidth;43,1744
  unsigned RegisterFileSize;44,1770
  unsigned LoadQueueSize;45,1799
  unsigned StoreQueueSize;46,1825
  bool AssumeNoAlias;47,1852
  bool EnableBottleneckAnalysis;48,1874
class Context 51,1911
  SmallVector<SmallVector52,1927
  SmallVector<std::unique_ptr<HardwareUnit>, 4> Hardware;52,1927
  const MCRegisterInfo &MRI;MRI53,1985
  const MCSubtargetInfo &STI;STI54,2014
  Context(57,2053
  const MCRegisterInfo &getMCRegisterInfo(getMCRegisterInfo61,2222
  const MCSubtargetInfo &getMCSubtargetInfo(getMCSubtargetInfo62,2288
  void addHardwareUnit(64,2357

/usr/include/llvm/MCA/CustomBehaviour.h,930
#define LLVM_MCA_CUSTOMBEHAVIOUR_H19,864
class InstrPostProcess 36,1420
  const MCSubtargetInfo &STI;STI38,1456
  const MCInstrInfo &MCII;MCII39,1486
  InstrPostProcess(42,1522
  virtual void postProcessInstruction(51,1897
  virtual void resetState(57,2236
class CustomBehaviour 66,2620
  const MCSubtargetInfo &STI;STI68,2655
  const mca::SourceMgr &SrcMgr;SrcMgr69,2685
  const MCInstrInfo &MCII;MCII70,2717
  CustomBehaviour(73,2753
class Instrument 118,5403
  const StringRef Desc;120,5463
  const StringRef Data;123,5519
  Instrument(126,5552
  Instrument(128,5626
  StringRef getDesc(132,5702
  StringRef getData(133,5747
using UniqueInstrument 136,5796
class InstrumentManager 141,6061
  const MCSubtargetInfo &STI;STI143,6098
  const MCInstrInfo &MCII;MCII144,6128
  InstrumentManager(147,6164
  virtual bool shouldIgnoreInstruments(153,6371
  virtual bool supportsInstrumentType(157,6533

/usr/include/llvm/MCA/IncrementalSourceMgr.h,461
#define LLVM_MCA_INCREMENTALSOURCEMGR_H15,656
class IncrementalSourceMgr 26,967
  std::deque<UniqueInst> InstStorage;31,1287
  std::deque<Instruction *> Staging;35,1444
  InstFreedCallback InstFreedCB;45,1716
  void setOnInstFreedCallback(55,1958
  ArrayRef<UniqueInst> getInstructions(57,2033
  bool hasNext(61,2136
  bool isEnd(62,2197
  SourceRef peekNext(64,2244
  void addInst(70,2395
  void addRecycledInst(76,2566
  void endOfStream(81,2711

/usr/include/llvm/MCA/InstrBuilder.h,939
#define LLVM_MCA_INSTRBUILDER_H15,579
class RecycledInstErr 30,956
  Instruction *RecycledInst;RecycledInst31,1016
  static char ID;34,1054
  explicit RecycledInstErr(36,1073
  Instruction *getInst(getInst40,1215
  void log(42,1272
  std::error_code convertToErrorCode(46,1361
class InstrBuilder 61,2024
  const MCSubtargetInfo &STI;STI62,2045
  const MCInstrInfo &MCII;MCII63,2075
  const MCRegisterInfo &MRI;MRI64,2102
  const MCInstrAnalysis *MCIA;MCIA65,2131
  const InstrumentManager &IM;IM66,2162
  SmallVector<SmallVector67,2193
  SmallVector<uint64_t, 8> ProcResourceMasks;67,2193
  DenseMap<DenseMap70,2317
      Descriptors;72,2410
  DenseMap<DenseMap75,2504
      VariantDescriptors;77,2597
  bool FirstCallInst;79,2624
  bool FirstReturnInst;80,2646
  using InstRecycleCallback 82,2671
  InstRecycleCallback InstRecycleCB;84,2761
  void clear(104,3573
  void setInstRecycleCallback(113,3818

/usr/include/llvm/MCA/Instruction.h,8891
#define LLVM_MCA_INSTRUCTION_H16,619
class MCAOperand 38,1088
  enum MCAOperandType 42,1249
    kInvalid,43,1289
    kRegister,44,1368
    kImmediate,45,1407
    kSFPImmediate,46,1447
    kDFPImmediate,47,1512
  MCAOperandType Kind;49,1582
    unsigned RegVal;52,1616
    int64_t ImmVal;53,1637
    uint32_t SFPImmVal;54,1657
    uint64_t FPImmVal;55,1681
  unsigned Index;62,1953
  MCAOperand(65,1980
  bool isValid(67,2037
  bool isReg(68,2089
  bool isImm(69,2140
  bool isSFPImm(70,2192
  bool isDFPImm(71,2250
  unsigned getReg(74,2344
  int64_t getImm(79,2454
  uint32_t getSFPImm(84,2556
  uint64_t getDFPImm(89,2672
  void setIndex(94,2786
  unsigned getIndex(96,2840
  static MCAOperand createReg(98,2887
  static MCAOperand createImm(105,3018
  static MCAOperand createSFPImm(112,3149
  static MCAOperand createDFPImm(119,3290
  static MCAOperand createInvalid(126,3430
struct WriteDescriptor 135,3588
  int OpIndex;139,3790
  unsigned Latency;141,3867
  MCPhysReg RegisterID;144,3986
  unsigned SClassOrWriteResourceID;153,4522
  bool IsOptionalDef;157,4719
  bool isImplicitWrite(159,4742
struct ReadDescriptor 163,4834
  int OpIndex;167,5075
  unsigned UseIndex;170,5223
  MCPhysReg RegisterID;172,5301
  unsigned SchedClassID;175,5433
  bool isImplicitRead(177,5459
struct CriticalDependency 185,5655
  unsigned IID;186,5683
  MCPhysReg RegID;187,5699
  unsigned Cycles;188,5718
class WriteState 197,6046
  const WriteDescriptor *WD;WD198,6065
  int CyclesLeft;202,6295
  MCPhysReg RegisterID;208,6524
  unsigned PRFID;211,6610
  bool ClearsSuperRegs;215,6727
  bool WritesZero;218,6830
  bool IsEliminated;224,7109
  const WriteState *DependentWrite;DependentWrite230,7445
  WriteState *PartialWrite;PartialWrite233,7550
  unsigned DependentWriteCyclesLeft;234,7578
  CriticalDependency CRD;237,7666
  SmallVector<SmallVector245,8016
  SmallVector<std::pair<ReadState *, int>, 4> Users;245,8016
  WriteState(248,8078
  int getCyclesLeft(258,8581
  unsigned getWriteResourceID(259,8632
  MCPhysReg getRegisterID(260,8710
  void setRegisterID(261,8767
  unsigned getRegisterFileID(262,8835
  unsigned getLatency(263,8890
  unsigned getDependentWriteCyclesLeft(264,8944
  const WriteState *getDependentWrite(getDependentWrite267,9034
  const CriticalDependency &getCriticalRegDep(getCriticalRegDep268,9107
  unsigned getNumUsers(280,9714
  bool clearsSuperRegisters(287,9851
  bool isWriteZero(288,9915
  bool isEliminated(289,9965
  bool isReady(291,10019
  bool isExecuted(298,10203
  void setDependentWrite(302,10296
  void setWriteZero(304,10446
  void setEliminated(305,10491
  void setPRF(311,10633
class ReadState 326,11053
  const ReadDescriptor *RD;RD327,11071
  MCPhysReg RegisterID;329,11158
  unsigned PRFID;331,11243
  unsigned DependentWrites;335,11441
  int CyclesLeft;340,11744
  unsigned TotalCycles;344,11946
  CriticalDependency CRD;346,12004
  bool IsReady;349,12144
  bool IsZero;351,12216
  bool IndependentFromDef;353,12306
  ReadState(356,12342
  const ReadDescriptor &getDescriptor(getDescriptor361,12594
  unsigned getSchedClass(362,12656
  MCPhysReg getRegisterID(363,12718
  unsigned getRegisterFileID(364,12775
  const CriticalDependency &getCriticalRegDep(getCriticalRegDep365,12830
  bool isPending(367,12901
  bool isReady(368,12976
  bool isImplicitRead(369,13019
  bool isIndependentFromDef(371,13083
  void setIndependentFromDef(372,13150
  void setDependentWrites(376,13306
  bool isReadZero(381,13409
  void setReadZero(382,13454
  void setPRF(383,13494
class CycleSegment 389,13649
  unsigned Begin;390,13670
  unsigned End;391,13702
  bool Reserved;392,13734
  CycleSegment(395,13819
  bool contains(398,13966
  bool startsAfter(399,14046
  bool endsBefore(400,14123
  bool overlaps(401,14199
  bool isExecuting(404,14299
  bool isExecuted(405,14361
  bool operator<(406,14408
  CycleSegment &operator--(operator--409,14496
  bool isValid(417,14606
  unsigned size(418,14654
  void subtract(419,14703
  unsigned begin(424,14789
  unsigned end(425,14832
  void setEnd(426,14871
  bool isReserved(427,14920
  void setReserved(428,14967
struct ResourceUsage 436,15234
  CycleSegment CS;437,15257
  unsigned NumUnits;438,15276
  ResourceUsage(439,15297
  unsigned size(441,15393
  bool isReserved(442,15439
  void setReserved(443,15493
struct InstrDesc 447,15570
  SmallVector<SmallVector448,15589
  SmallVector<WriteDescriptor, 2> Writes;448,15589
  SmallVector<SmallVector449,15666
  SmallVector<ReadDescriptor, 4> Reads;449,15666
  SmallVector<SmallVector453,15862
  SmallVector<std::pair<uint64_t, ResourceUsage>, 4> Resources;453,15862
  uint64_t UsedBuffers;456,15968
  uint64_t UsedProcResUnits;459,16042
  uint64_t UsedProcResGroups;462,16122
  unsigned MaxLatency;464,16153
  unsigned NumMicroOps;466,16222
  unsigned SchedClassID;470,16430
  unsigned MustIssueImmediately 474,16589
  unsigned IsRecyclable 479,16794
  unsigned HasPartiallyOverlappingGroups 482,16901
  bool isZeroLatency(485,17021
class InstructionBase 496,17395
  const InstrDesc &Desc;Desc497,17419
  bool IsOptimizableMove;502,17645
  SmallVector<SmallVector506,17765
  SmallVector<WriteState, 2> Defs;506,17765
  SmallVector<SmallVector510,17886
  SmallVector<ReadState, 4> Uses;510,17886
  std::vector<MCAOperand> Operands;513,17985
  unsigned Opcode;516,18088
  bool IsALoadBarrier 519,18139
  bool IsAStoreBarrier 520,18166
  bool MayLoad 523,18315
  bool MayStore 524,18335
  bool HasSideEffects 525,18356
  bool BeginGroup 526,18383
  bool EndGroup 527,18406
  bool RetireOOO 528,18427
  InstructionBase(531,18458
  SmallVectorImpl<WriteState> &getDefs(getDefs535,18649
  ArrayRef<WriteState> getDefs(536,18707
  SmallVectorImpl<ReadState> &getUses(getUses537,18763
  ArrayRef<ReadState> getUses(538,18820
  const InstrDesc &getDesc(getDesc539,18875
  unsigned getLatency(541,18928
  unsigned getNumMicroOps(542,18986
  unsigned getOpcode(543,19049
  bool isALoadBarrier(544,19097
  bool isAStoreBarrier(545,19154
  void setLoadBarrier(546,19213
  void setStoreBarrier(547,19283
  const MCAOperand *getOperand(getOperand551,19449
  unsigned getNumOperands(559,19695
  void addOperand(560,19757
  bool hasDependentUsers(562,19825
  unsigned getNumUsers(567,19969
  bool isOptimizableMove(575,20206
  void setOptimizableMove(576,20269
  void clearOptimizableMove(577,20327
  bool isMemOp(578,20388
  void setMayLoad(581,20500
  void setMayStore(582,20553
  void setHasSideEffects(583,20608
  void setBeginGroup(584,20675
  void setEndGroup(585,20734
  void setRetireOOO(586,20789
  bool getMayLoad(588,20847
  bool getMayStore(589,20893
  bool getHasSideEffects(590,20941
  bool getBeginGroup(591,21001
  bool getEndGroup(592,21053
  bool getRetireOOO(593,21101
class Instruction 600,21393
  enum InstrStage 601,21438
    IS_INVALID,602,21458
    IS_DISPATCHED,603,21513
    IS_PENDING,604,21586
    IS_READY,605,21664
    IS_EXECUTING,606,21729
    IS_EXECUTED,607,21771
    IS_RETIRED 608,21840
  enum InstrStage Stage;612,21925
  int CyclesLeft;616,22085
  unsigned RCUTokenID;619,22152
  unsigned LSUTokenID;624,22304
  uint64_t UsedBuffers;630,22605
  CriticalDependency CriticalRegDep;633,22665
  CriticalDependency CriticalMemDep;636,22736
  uint64_t CriticalResourceMask;641,22953
  bool IsEliminated;644,23064
  Instruction(647,23094
  unsigned getRCUTokenID(655,23418
  unsigned getLSUTokenID(656,23474
  void setLSUTokenID(657,23530
  uint64_t getUsedBuffers(659,23594
  void setUsedBuffers(660,23652
  void clearUsedBuffers(661,23713
  int getCyclesLeft(663,23764
  bool isInvalid(684,24661
  bool isDispatched(685,24718
  bool isPending(686,24781
  bool isReady(687,24838
  bool isExecuting(688,24891
  bool isExecuted(689,24952
  bool isRetired(690,25011
  bool isEliminated(691,25068
  void setEliminated(695,25218
  void retire(697,25267
  const CriticalDependency &getCriticalRegDep(getCriticalRegDep702,25381
  const CriticalDependency &getCriticalMemDep(getCriticalMemDep703,25462
  void setCriticalMemDep(705,25596
  uint64_t getCriticalResourceMask(709,25691
  void setCriticalResourceMask(710,25767
class InstRef 720,26092
  std::pair<std::pair721,26108
  std::pair<unsigned, Instruction *> Data;721,26108
  InstRef(724,26160
  InstRef(725,26210
  bool operator==(operator==727,26289
  bool operator!=(operator!=728,26366
  bool operator<(729,26443
  unsigned getSourceIndex(733,26537
  Instruction *getInstruction(getInstruction734,26594
  const Instruction *getInstruction(getInstruction735,26650
  explicit operator bool(operator bool738,26778
  void invalidate(741,26880
  void print(744,26943
inline raw_ostream &operator<<(operator<<749,27033

/usr/include/llvm/MCA/Pipeline.h,315
#define LLVM_MCA_PIPELINE_H16,607
class Pipeline 50,1904
  enum class State 54,2013
    Created,55,2034
    Started,56,2096
    Paused 57,2142
  SmallVector<SmallVector62,2294
  SmallVector<std::unique_ptr<Stage>, 8> Stages;62,2294
  std::set<HWEventListener *> Listeners;63,2343
  bool isPaused(81,2777

/usr/include/llvm/MCA/SourceMgr.h,597
#define LLVM_MCA_SOURCEMGR_H15,597
typedef std::pair<unsigned, const Instruction &> SourceRef;25,882
struct SourceMgr 29,1081
  virtual size_t size(37,1367
  virtual ~SourceMgr(53,1861
class CircularSourceMgr 59,2070
  ArrayRef<UniqueInst> Sequence;60,2115
  unsigned Current;61,2148
  const unsigned Iterations;62,2168
  static const unsigned DefaultIterations 63,2197
  CircularSourceMgr(66,2255
  ArrayRef<UniqueInst> getInstructions(69,2396
  unsigned getNumIterations(71,2474
  bool hasNext(72,2533
  bool isEnd(75,2624
  SourceRef peekNext(77,2678
  void updateNext(82,2848

/usr/include/llvm/MCA/View.h,122
#define LLVM_MCA_VIEW_H16,624
class View 26,826
  virtual void printView(30,902
  virtual bool isSerializable(34,1078

/usr/include/llvm/MCA/HWEventListener.h,1925
#define LLVM_MCA_HWEVENTLISTENER_H15,575
class HWInstructionEvent 27,921
  enum GenericEventType 37,1472
    Invalid 38,1498
    Retired,40,1567
    Pending,42,1622
    Ready,43,1635
    Issued,44,1646
    Executed,45,1658
    Dispatched,47,1719
    LastGenericEventType,49,1736
  HWInstructionEvent(52,1768
  const unsigned Type;56,1923
  const InstRef &IR;IR59,1998
using ResourceRef 64,2166
using ResourceUse 66,2218
class HWInstructionIssuedEvent 68,2280
  HWInstructionIssuedEvent(70,2349
  ArrayRef<ResourceUse> UsedResources;73,2503
class HWInstructionDispatchedEvent 76,2546
  HWInstructionDispatchedEvent(78,2619
  ArrayRef<unsigned> UsedPhysRegs;84,2962
  unsigned MicroOpcodes;94,3578
class HWInstructionRetiredEvent 97,3607
  HWInstructionRetiredEvent(99,3677
  ArrayRef<unsigned> FreedPhysRegs;104,3957
class HWStallEvent 109,4088
  enum GenericEventType 111,4117
    Invalid 112,4143
    RegisterFileStall,114,4220
    RetireControlUnitStall,115,4243
    DispatchGroupStall,117,4327
    SchedulerQueueFull,118,4351
    LoadQueueFull,119,4375
    StoreQueueFull,120,4394
    CustomBehaviourStall,121,4414
    LastGenericEvent122,4440
  HWStallEvent(125,4467
  const unsigned Type;128,4618
  const InstRef &IR;IR131,4693
class HWPressureEvent 136,4869
  enum GenericReason 138,4901
    INVALID 139,4924
    RESOURCES,142,5062
    REGISTER_DEPS,144,5156
    MEMORY_DEPS146,5247
  HWPressureEvent(149,5269
  GenericReason Reason;154,5498
  ArrayRef<InstRef> AffectedInstructions;157,5603
  const uint64_t ResourceMask;160,5694
class HWEventListener 163,5729
  virtual void onCycleBegin(166,5808
  virtual void onCycleEnd(167,5841
  virtual void onEvent(169,5873
  virtual void onEvent(170,5932
  virtual void onEvent(171,5985
  virtual void onResourceAvailable(173,6042
  virtual void onReservedBuffers(177,6213
  virtual void onReleasedBuffers(179,6331

/usr/include/llvm/MCA/Support.h,622
#define LLVM_MCA_SUPPORT_H15,554
class InstructionError 27,805
  static char ID;29,878
  std::string Message;30,896
  const T &Inst;Inst31,919
  InstructionError(33,937
  void log(36,1030
  std::error_code convertToErrorCode(38,1093
template <typename T> char InstructionError<T>::ID;ID43,1194
class ReleaseAtCycles 51,1634
  unsigned Numerator,52,1658
  unsigned Numerator, Denominator;52,1658
  ReleaseAtCycles(55,1702
  ReleaseAtCycles(56,1756
  operator double(operator double59,1877
  unsigned getNumerator(64,2057
  unsigned getDenominator(65,2111
inline unsigned getResourceStateIndex(100,3764

/usr/include/llvm/ObjCopy/COFF/COFFConfig.h,228
#define LLVM_OBJCOPY_COFF_COFFCONFIG_H10,409
struct COFFConfig 18,576
  std::optional<unsigned> Subsystem;19,596
  std::optional<unsigned> MajorSubsystemVersion;20,633
  std::optional<unsigned> MinorSubsystemVersion;21,682

/usr/include/llvm/ObjCopy/COFF/COFFObjcopy.h,47
#define LLVM_OBJCOPY_COFF_COFFOBJCOPY_H10,410

/usr/include/llvm/ObjCopy/ELF/ELFObjcopy.h,45
#define LLVM_OBJCOPY_ELF_ELFOBJCOPY_H10,408

/usr/include/llvm/ObjCopy/ELF/ELFConfig.h,69
#define LLVM_OBJCOPY_ELF_ELFCONFIG_H10,407
struct ELFConfig 18,585

/usr/include/llvm/ObjCopy/MachO/MachOConfig.h,486
#define LLVM_OBJCOPY_MACHO_MACHOCONFIG_H10,411
struct MachOConfig 22,694
  std::vector<StringRef> RPathToAdd;24,737
  std::vector<StringRef> RPathToPrepend;25,774
  DenseMap<DenseMap26,815
  DenseMap<StringRef, StringRef> RPathsToUpdate;26,815
  DenseMap<DenseMap27,864
  DenseMap<StringRef, StringRef> InstallNamesToUpdate;27,864
  DenseSet<StringRef> RPathsToRemove;28,919
  std::optional<StringRef> SharedLibId;31,993
  DenseSet<StringRef> EmptySegmentsToRemove;34,1076

/usr/include/llvm/ObjCopy/MachO/MachOObjcopy.h,49
#define LLVM_OBJCOPY_MACHO_MACHOOBJCOPY_H10,412

/usr/include/llvm/ObjCopy/XCOFF/XCOFFConfig.h,75
#define LLVM_OBJCOPY_XCOFF_XCOFFCONFIG_H10,411
struct XCOFFConfig 16,560

/usr/include/llvm/ObjCopy/XCOFF/XCOFFObjcopy.h,49
#define LLVM_OBJCOPY_XCOFF_XCOFFOBJCOPY_H10,412

/usr/include/llvm/ObjCopy/wasm/WasmConfig.h,72
#define LLVM_OBJCOPY_WASM_WASMCONFIG_H10,409
struct WasmConfig 16,555

/usr/include/llvm/ObjCopy/wasm/WasmObjcopy.h,47
#define LLVM_OBJCOPY_WASM_WASMOBJCOPY_H10,409

/usr/include/llvm/ObjCopy/ConfigManager.h,273
#define LLVM_OBJCOPY_CONFIGMANAGER_H10,407
struct ConfigManager 23,779
  virtual ~ConfigManager(24,829
  const CommonConfig &getCommonConfig(getCommonConfig26,860
  Expected<const ELFConfig &> getELFConfig(28,935
  Expected<const COFFConfig &> getCOFFConfig(30,1012

/usr/include/llvm/ObjCopy/MultiFormatConfig.h,187
#define LLVM_OBJCOPY_MULTIFORMATCONFIG_H10,411
class MultiFormatConfig 24,642
  virtual ~MultiFormatConfig(26,676
  virtual const CommonConfig &getCommonConfig(getCommonConfig28,711

/usr/include/llvm/ObjCopy/ObjCopy.h,38
#define LLVM_OBJCOPY_OBJCOPY_H10,401

/usr/include/llvm/ObjCopy/CommonConfig.h,4495
#define LLVM_OBJCOPY_COMMONCONFIG_H10,406
enum class FileFormat 30,951
  Unspecified,31,975
  ELF,32,990
  Binary,33,997
  IHex,34,1007
struct MachineInfo 40,1187
  MachineInfo(41,1208
  MachineInfo(44,1413
  MachineInfo(47,1572
  uint16_t EMachine;48,1625
  uint8_t OSABI;49,1646
  bool Is64Bit;50,1663
  bool IsLittleEndian;51,1679
enum SectionFlag 57,1924
  SecNone 58,1943
  SecAlloc 59,1958
  SecLoad 60,1979
  SecNoload 61,1999
  SecReadonly 62,2021
  SecDebug 63,2045
  SecCode 64,2066
  SecData 65,2086
  SecRom 66,2106
  SecMerge 67,2125
  SecStrings 68,2146
  SecContents 69,2169
  SecShare 70,2194
  SecExclude 71,2216
  SecLarge 72,2240
  LLVM_MARK_AS_BITMASK_ENUM(73,2262
  LLVM_MARK_AS_BITMASK_ENUM(/*LargestValue=*/SecLarge)SecLarge73,2262
struct SectionRename 76,2321
  StringRef OriginalName;77,2344
  StringRef NewName;78,2370
  std::optional<SectionFlag> NewFlags;79,2391
struct SectionFlagsUpdate 82,2434
  StringRef Name;83,2462
  SectionFlag NewFlags;84,2480
enum class DiscardType 87,2508
  None,88,2533
  All,89,2554
  Locals,90,2586
enum class MatchStyle 93,2625
  Literal,94,2649
  Wildcard,95,2685
  Regex,96,2755
class NameOrPattern 99,2796
  StringRef Name;100,2818
  std::shared_ptr<Regex> R;102,2898
  std::shared_ptr<GlobPattern> G;103,2926
  bool IsPositiveMatch 104,2960
  NameOrPattern(106,2992
  NameOrPattern(107,3034
  NameOrPattern(108,3086
  bool isPositiveMatch(118,3504
  std::optional<StringRef> getName(119,3563
  bool operator==(operator==124,3674
  bool operator!=(operator!=127,3775
class NameMatcher 132,3950
  DenseSet<CachedHashStringRef> PosNames;133,3970
  std::vector<NameOrPattern> PosPatterns;134,4012
  std::vector<NameOrPattern> NegMatchers;135,4054
  Error addMatcher(138,4105
  bool matches(151,4539
  bool empty(156,4723
enum class SymbolFlag 161,4829
  Global,162,4853
  Local,163,4863
  Weak,164,4872
  Default,165,4880
  Hidden,166,4891
  Protected,167,4901
  File,168,4914
  Section,169,4922
  Object,170,4933
  Function,171,4943
  IndirectFunction,172,4955
  Debug,173,4975
  Constructor,174,4984
  Warning,175,4999
  Indirect,176,5010
  Synthetic,177,5022
  UniqueObject,178,5035
struct NewSymbolInfo 183,5174
  StringRef SymbolName;184,5197
  StringRef SectionName;185,5221
  uint64_t Value 186,5246
  std::vector<SymbolFlag> Flags;187,5268
  std::vector<StringRef> BeforeSyms;188,5301
struct NewSectionInfo 192,5419
  NewSectionInfo(194,5473
  StringRef SectionName;197,5608
  std::shared_ptr<MemoryBuffer> SectionData;198,5633
struct CommonConfig 202,5736
  StringRef InputFilename;204,5789
  FileFormat InputFormat 205,5816
  StringRef OutputFilename;206,5868
  FileFormat OutputFormat 207,5896
  std::optional<MachineInfo> OutputArch;210,6021
  StringRef AddGnuDebugLink;213,6085
  uint32_t GnuDebugLinkCRC32;215,6153
  std::optional<StringRef> ExtractPartition;216,6183
  uint8_t GapFill 217,6228
  uint64_t PadTo 218,6251
  StringRef SplitDWO;219,6273
  StringRef SymbolsPrefix;220,6295
  StringRef AllocSectionsPrefix;221,6322
  DiscardType DiscardMode 222,6355
  std::vector<NewSectionInfo> AddSection;225,6425
  std::vector<StringRef> DumpSection;226,6467
  std::vector<NewSectionInfo> UpdateSection;227,6505
  NameMatcher KeepSection;230,6573
  NameMatcher OnlySection;231,6600
  NameMatcher ToRemove;232,6627
  NameMatcher SymbolsToGlobalize;235,6673
  NameMatcher SymbolsToKeep;236,6707
  NameMatcher SymbolsToLocalize;237,6736
  NameMatcher SymbolsToRemove;238,6769
  NameMatcher UnneededSymbolsToRemove;239,6800
  NameMatcher SymbolsToWeaken;240,6839
  NameMatcher SymbolsToKeepGlobal;241,6870
  StringMap<SectionRename> SectionsToRename;244,6923
  StringMap<uint64_t> SetSectionAlignment;245,6968
  StringMap<SectionFlagsUpdate> SetSectionFlags;246,7011
  StringMap<uint64_t> SetSectionType;247,7060
  StringMap<StringRef> SymbolsToRename;248,7098
  std::vector<NewSymbolInfo> SymbolsToAdd;251,7190
  bool DeterministicArchives 254,7255
  bool ExtractDWO 255,7292
  bool ExtractMainPartition 256,7319
  bool OnlyKeepDebug 257,7356
  bool PreserveDates 258,7386
  bool StripAll 259,7416
  bool StripAllGNU 260,7441
  bool StripDWO 261,7469
  bool StripDebug 262,7494
  bool StripNonAlloc 263,7521
  bool StripSections 264,7551
  bool StripUnneeded 265,7581
  bool Weaken 266,7611
  bool DecompressDebugSections 267,7634
  DebugCompressionType CompressionType 269,7675

/usr/include/llvm/Object/Binary.h,2050
#define LLVM_OBJECT_BINARY_H14,526
class Binary 32,878
  unsigned int TypeID;34,902
  MemoryBufferRef Data;37,937
  Binary(39,962
    ID_Archive,42,1025
    ID_MachOUniversalBinary,43,1041
    ID_COFFImportFile,44,1070
    ID_IR,45,1093
    ID_TapiUniversal,46,1126
    ID_TapiFile,47,1189
    ID_Minidump,49,1253
    ID_WinRes,51,1271
    ID_Offload,53,1320
    ID_StartObjects,56,1392
    ID_COFF,57,1413
    ID_XCOFF32,59,1427
    ID_XCOFF64,60,1463
    ID_ELF32L,62,1500
    ID_ELF32B,63,1544
    ID_ELF64L,64,1585
    ID_ELF64B,65,1629
    ID_MachO32L,67,1671
    ID_MachO32B,68,1719
    ID_MachO64L,69,1764
    ID_MachO64B,70,1812
    ID_GOFF,72,1858
    ID_Wasm,73,1871
    ID_EndObjects75,1885
  static inline unsigned int getELFType(78,1909
  static unsigned int getMachOType(85,2099
  virtual ~Binary(95,2361
  virtual Error initContent(97,2383
  unsigned int getType(104,2572
  bool isObject(107,2648
  bool isSymbolic(111,2742
  bool isArchive(115,2846
  bool isMachOUniversalBinary(117,2905
  bool isTapiUniversal(121,2996
  bool isELF(123,3067
  bool isMachO(127,3150
  bool isCOFF(131,3239
  bool isXCOFF(135,3298
  bool isWasm(137,3379
  bool isOffloadFile(139,3432
  bool isCOFFImportFile(141,3495
  bool isIR(145,3574
  bool isGOFF(149,3629
  bool isMinidump(151,3682
  bool isTapiFile(153,3743
  bool isLittleEndian(155,3804
  bool isWinRes(161,4023
  Triple::ObjectFormatType getTripleObjectFormat(163,4080
  static Error checkOffset(175,4364
template <typename T> class OwningBinary 196,5234
  std::unique_ptr<T> Bin;197,5277
  std::unique_ptr<MemoryBuffer> Buf;198,5303
  std::pair<std::pair206,5539
OwningBinary<T>::OwningBinary(OwningBinary213,5691
OwningBinary<T>::OwningBinary(OwningBinary220,5949
OwningBinary<T> &OwningBinary<T>::operator=(operator=224,6086
OwningBinary<T>::takeBinary(takeBinary232,6316
template <typename T> T* OwningBinary<T>::getBinary(getBinary236,6408
template <typename T> const T* OwningBinary<T>::getBinary(getBinary240,6487

/usr/include/llvm/Object/BuildID.h,260
#define LLVM_DEBUGINFO_OBJECT_BUILDID_H16,604
typedef SmallVector<uint8_t, 10> BuildID;25,779
typedef ArrayRef<uint8_t> BuildIDRef;28,867
class BuildIDFetcher 39,1189
  BuildIDFetcher(41,1220
  const std::vector<std::string> DebugFileDirectories;49,1535

/usr/include/llvm/Object/COFFModuleDefinition.h,201
#define LLVM_OBJECT_COFFMODULEDEFINITION_H19,777
struct COFFModuleDefinition 27,935
  std::vector<COFFShortExport> Exports;28,965
  std::string OutputFile;29,1005
  std::string ImportName;30,1031

/usr/include/llvm/Object/CVDebugRecord.h,745
#define LLVM_OBJECT_CVDEBUGRECORD_H10,406
struct Signature 16,510
  enum ID 17,529
    PDB70 18,552
    PDB20 19,584
    CV50 20,616
    CV41 21,648
  support::ulittle32_t CVSignature;24,686
  support::ulittle32_t Offset;25,722
namespace codeview 29,759
struct PDB70DebugInfo 30,780
  support::ulittle32_t CVSignature;31,804
  uint8_t Signature[Signature32,840
  support::ulittle32_t Age;33,865
struct PDB20DebugInfo 37,922
  support::ulittle32_t CVSignature;38,946
  support::ulittle32_t Offset;39,982
  support::ulittle32_t Signature;40,1013
  support::ulittle32_t Age;41,1047
union DebugInfo 45,1104
  struct OMF::Signature Signature;46,1122
  struct PDB20DebugInfo PDB20;47,1157
  struct PDB70DebugInfo PDB70;48,1188

/usr/include/llvm/Object/Decompressor.h,375
#define LLVM_OBJECT_DECOMPRESSOR_H10,404
class Decompressor 21,682
  static Expected<Decompressor> create(28,963
  template <class T> Error resizeAndDecompress(33,1206
  Error decompress(39,1430
  uint64_t getDecompressedSize(42,1544
  Decompressor(45,1616
  Error consumeCompressedHeader(47,1649
  StringRef SectionData;49,1718
  uint64_t DecompressedSize;50,1743

/usr/include/llvm/Object/Error.h,705
#define LLVM_OBJECT_ERROR_H14,547
enum class object_error 27,732
  arch_not_found 29,818
  invalid_file_type,30,840
  parse_failed,31,861
  unexpected_eof,32,877
  string_table_non_null_end,33,895
  invalid_section_index,34,924
  bitcode_section_not_found,35,949
  invalid_symbol_index,36,978
  section_stripped,37,1002
inline std::error_code make_error_code(40,1026
class BinaryError 52,1553
  static char ID;55,1648
  BinaryError(56,1666
class GenericBinaryError 66,2002
  static char ID;68,2089
  const std::string &getMessage(getMessage71,2212
  std::string Msg;74,2321
inline Error createError(84,2773
namespace std 92,2942
struct is_error_code_enum<is_error_code_enum94,2970

/usr/include/llvm/Object/IRObjectFile.h,571
#define LLVM_OBJECT_IROBJECTFILE_H14,547
class IRObjectFile 27,809
  std::vector<std::unique_ptr<Module>> Mods;28,852
  ModuleSymbolTable SymTab;29,897
  bool is64Bit(40,1370
  static bool classof(45,1498
  module_iterator module_begin(53,1708
  module_iterator module_end(54,1789
  iterator_range<module_iterator> modules(56,1867
struct IRSymtabFile 76,2722
  std::vector<BitcodeModule> Mods;77,2744
  SmallVector<SmallVector78,2779
  SmallVector<char, 0> Symtab,78,2779
  SmallVector<char, 0> Symtab, Strtab;78,2779
  irsymtab::Reader TheReader;79,2818

/usr/include/llvm/Object/IRSymtab.h,3853
#define LLVM_OBJECT_IRSYMTAB_H24,1102
struct Str 55,1868
  Word Offset,56,1881
  Word Offset, Size;56,1881
  StringRef get(58,1903
template <typename T> struct Range 64,2055
  Word Offset,65,2092
  Word Offset, Size;65,2092
  ArrayRef<T> get(67,2114
struct Module 74,2324
  Word Begin,75,2340
  Word Begin, End;75,2340
  Word UncBegin;78,2415
struct Comdat 82,2476
  Str Name;83,2492
  Word SelectionKind;86,2538
struct Symbol 91,2683
  Str Name;93,2730
  Str IRName;97,2831
  Word ComdatIndex;100,2914
  Word Flags;102,2935
  enum FlagBits 103,2949
    FB_visibility,104,2967
    FB_has_uncommon 105,2996
    FB_undefined,106,3037
    FB_weak,107,3055
    FB_common,108,3068
    FB_indirect,109,3083
    FB_used,110,3100
    FB_tls,111,3113
    FB_may_omit,112,3125
    FB_global,113,3142
    FB_format_specific,114,3157
    FB_unnamed_addr,115,3181
    FB_executable,116,3202
struct Uncommon 122,3335
  Word CommonSize,123,3353
  Word CommonSize, CommonAlign;123,3353
  Str COFFWeakExternFallbackName;127,3485
  Str SectionName;130,3558
struct Header 134,3582
  Word Version;138,3822
  enum { kCurrentVersion 139,3838
  Str Producer;145,4169
  Range<Module> Modules;147,4186
  Range<Comdat> Comdats;148,4211
  Range<Symbol> Symbols;149,4236
  Range<Uncommon> Uncommons;150,4261
  Str TargetTriple,152,4291
  Str TargetTriple, SourceFileName;152,4291
  Str COFFLinkerOpts;155,4368
  Range<Str> DependentLibraries;158,4426
struct Symbol 170,4830
  StringRef Name,172,4880
  StringRef Name, IRName;172,4880
  int ComdatIndex;173,4906
  uint32_t Flags;174,4925
  uint32_t CommonSize,177,4980
  uint32_t CommonSize, CommonAlign;177,4980
  StringRef COFFWeakExternFallbackName;178,5016
  StringRef SectionName;179,5056
  StringRef getName(182,5121
  StringRef getIRName(186,5263
  int getComdatIndex(190,5427
  using S 192,5481
  GlobalValue::VisibilityTypes getVisibility(194,5511
  bool isUndefined(198,5645
  bool isWeak(199,5715
  bool isCommon(200,5775
  bool isIndirect(201,5839
  bool isUsed(202,5907
  bool isTLS(203,5967
  bool canBeOmittedFromSymbolTable(205,6026
  bool isGlobal(209,6118
  bool isFormatSpecific(210,6182
  bool isUnnamedAddr(211,6263
  bool isExecutable(212,6338
  uint64_t getCommonSize(214,6411
  uint32_t getCommonAlignment(219,6498
  StringRef getCOFFWeakExternalFallback(226,6736
  StringRef getSectionName(231,6868
class Reader 236,7019
  StringRef Symtab,237,7034
  StringRef Symtab, Strtab;237,7034
  ArrayRef<storage::Module> Modules;239,7063
  ArrayRef<storage::Comdat> Comdats;240,7100
  ArrayRef<storage::Symbol> Symbols;241,7137
  ArrayRef<storage::Uncommon> Uncommons;242,7174
  ArrayRef<storage::Str> DependentLibraries;243,7215
  StringRef str(245,7261
  template <typename T> ArrayRef<T> range(247,7326
  const storage::Header &header(header251,7428
  Reader(259,7595
  using symbol_range 267,7901
  size_t getNumModules(274,8192
  StringRef getTargetTriple(281,8497
  StringRef getSourceFileName(284,8635
  std::vector<std::vector287,8777
  getComdatTable(288,8842
  StringRef getCOFFLinkerOpts(298,9266
  std::vector<StringRef> getDependentLibraries(301,9389
class Reader::SymbolRef 313,9735
  const storage::Symbol *SymI,SymI314,9777
  const storage::Symbol *SymI, *SymE;SymE314,9777
  const storage::Uncommon *UncI;UncI315,9815
  const Reader *R;R316,9848
  void read(318,9868
  SymbolRef(338,10437
  void moveNext(344,10635
  bool operator==(operator==351,10755
inline Reader::symbol_range Reader::symbols(symbols354,10838
inline Reader::symbol_range Reader::module_symbols(module_symbols359,11040
struct FileContents 369,11520
  SmallVector<SmallVector370,11542
  SmallVector<char, 0> Symtab,370,11542
  SmallVector<char, 0> Symtab, Strtab;370,11542
  Reader TheReader;371,11581

/usr/include/llvm/Object/MachOUniversal.h,1294
#define LLVM_OBJECT_MACHOUNIVERSAL_H14,547
class MachOUniversalBinary 30,870
  virtual void anchor(31,915
  uint32_t Magic;33,941
  uint32_t NumberOfObjects;34,959
  class ObjectForArch 38,1072
    const MachOUniversalBinary *Parent;Parent39,1096
    uint32_t Index;41,1185
    MachO::fat_arch Header;43,1239
    MachO::fat_arch_64 Header64;44,1267
    void clear(49,1383
    bool operator==(operator==54,1450
    ObjectForArch getNext(58,1578
    uint32_t getCPUType(59,1657
    uint32_t getCPUSubType(65,1867
    uint64_t getOffset(71,2086
    uint64_t getSize(77,2293
    uint32_t getAlign(83,2494
    uint32_t getReserved(89,2698
    Triple getTriple(95,2897
    std::string getArchFlagName(98,3010
  class object_iterator 112,3509
    ObjectForArch Obj;113,3535
    object_iterator(115,3568
    const ObjectForArch *operator->(operator->116,3628
    const ObjectForArch &operator*(operator*117,3689
    bool operator==(operator==119,3749
    bool operator!=(operator!=122,3844
    object_iterator& operator++(126,3941
  object_iterator begin_objects(136,4204
  object_iterator end_objects(139,4285
  iterator_range<object_iterator> objects(143,4368
  uint32_t getMagic(147,4480
  uint32_t getNumberOfObjects(148,4526
  static bool classof(151,4612

/usr/include/llvm/Object/Minidump.h,1365
#define LLVM_OBJECT_MINIDUMP_H10,401
class MinidumpFile 23,737
  static bool classof(30,1102
  const minidump::Header &header(header33,1221
  ArrayRef<minidump::Directory> streams(36,1357
  ArrayRef<uint8_t> getRawStream(39,1501
  getRawData(51,2069
  Expected<const minidump::SystemInfo &> getSystemInfo(63,2692
  Expected<ArrayRef<minidump::Module>> getModuleList(72,3169
  Expected<ArrayRef<minidump::Thread>> getThreadList(81,3644
  Expected<const minidump::ExceptionStream &> getExceptionStream(89,4064
  Expected<ArrayRef<minidump::MemoryDescriptor>> getMemoryList(101,4710
  class MemoryInfoIterator106,4885
    MemoryInfoIterator(111,5101
    bool operator==(operator==116,5262
    const minidump::MemoryInfo &operator*(operator*120,5375
    MemoryInfoIterator &operator++(operator++125,5574
    ArrayRef<uint8_t> Storage;131,5695
    size_t Stride;132,5726
  static Error createError(145,6330
  static Error createEOFError(149,6455
  MinidumpFile(165,7238
  ArrayRef<uint8_t> getData(171,7548
  const minidump::Header &Header;Header185,8099
  ArrayRef<minidump::Directory> Streams;186,8133
  DenseMap<DenseMap187,8174
  DenseMap<minidump::StreamType, std::size_t> StreamMap;187,8174
Expected<const T &> MinidumpFile::getStream(getStream191,8257
Expected<ArrayRef<T>> MinidumpFile::getDataSliceAs(getDataSliceAs201,8600

/usr/include/llvm/Object/ModuleSymbolTable.h,236
#define LLVM_OBJECT_MODULESYMBOLTABLE_H16,688
class ModuleSymbolTable 33,1025
  SpecificBumpPtrAllocator<AsmSymbol> AsmSymbols;41,1213
  std::vector<Symbol> SymTab;42,1263
  Mangler Mang;43,1293
  ArrayRef<Symbol> symbols(46,1318

/usr/include/llvm/Object/RelocationResolver.h,48
#define LLVM_OBJECT_RELOCATIONRESOLVER_H16,716

/usr/include/llvm/Object/SymbolSize.h,174
#define LLVM_OBJECT_SYMBOLSIZE_H11,406
struct SymEntry 18,514
  symbol_iterator I;19,532
  uint64_t Address;20,553
  unsigned Number;21,573
  unsigned SectionID;22,592

/usr/include/llvm/Object/SymbolicFile.h,2031
#define LLVM_OBJECT_SYMBOLICFILE_H14,542
union DataRefImpl 35,966
    uint32_t a,39,1108
    uint32_t a, b;39,1108
  } d;40,1127
  uintptr_t p;41,1134
  DataRefImpl(43,1150
OStream& operator<<(47,1245
inline bool operator==(operator==53,1446
inline bool operator!=(operator!=59,1691
inline bool operator<(63,1791
template <class content_type> class content_iterator 69,2034
  content_type Current;70,2089
  using iterator_category 73,2122
  using value_type 74,2177
  using difference_type 75,2212
  using pointer 76,2254
  using reference 77,2286
  content_iterator(79,2321
  const content_type *operator->(operator->81,2390
  const content_type &operator*(operator*83,2453
  bool operator==(operator==85,2514
  bool operator!=(operator!=89,2613
  content_iterator &operator++(operator++93,2705
class BasicSymbolRef 103,2937
  DataRefImpl SymbolPimpl;104,2960
  const SymbolicFile *OwningObject OwningObject105,2987
  enum Flags 108,3042
    SF_None 109,3068
    SF_Undefined 110,3085
    SF_Global 111,3162
    SF_Weak 112,3212
    SF_Absolute 113,3260
    SF_Common 114,3312
    SF_Indirect 115,3374
    SF_Exported 116,3447
    SF_FormatSpecific 117,3515
    SF_Thumb 119,3645
    SF_Hidden 120,3717
    SF_Const 121,3782
    SF_Executable 122,3843
using basic_symbol_iterator 143,4420
class SymbolicFile 145,4485
  using basic_symbol_iterator_range 164,5036
  basic_symbol_iterator_range symbols(165,5113
  createSymbolicFile(175,5495
  static bool classof(179,5622
inline BasicSymbolRef::BasicSymbolRef(186,5775
inline bool BasicSymbolRef::operator==(operator==190,5951
inline bool BasicSymbolRef::operator<(operator<194,6073
inline void BasicSymbolRef::moveNext(moveNext198,6193
inline Error BasicSymbolRef::printName(printName202,6289
inline Expected<uint32_t> BasicSymbolRef::getFlags(getFlags206,6413
inline DataRefImpl BasicSymbolRef::getRawDataRefImpl(getRawDataRefImpl210,6529
inline const SymbolicFile *BasicSymbolRef::getObject(getObject214,6617

/usr/include/llvm/Object/TapiUniversal.h,1230
#define LLVM_OBJECT_TAPIUNIVERSAL_H14,544
class TapiUniversal 28,853
  class ObjectForArch 30,899
    const TapiUniversal *Parent;Parent31,923
    int Index;32,956
    ObjectForArch(35,982
    ObjectForArch getNext(38,1083
    uint32_t getCPUType(44,1291
    uint32_t getCPUSubType(50,1455
    StringRef getArchFlagName(56,1623
    std::string getInstallName(60,1742
    bool isTopLevelLib(64,1854
  class object_iterator 71,2036
    ObjectForArch Obj;72,2062
    object_iterator(75,2096
    const ObjectForArch *operator->(operator->76,2156
    const ObjectForArch &operator*(operator*77,2217
    bool operator==(operator==79,2277
    bool operator!=(operator!=82,2372
    object_iterator &operator++(operator++86,2469
  object_iterator begin_objects(97,2747
  object_iterator end_objects(98,2822
  iterator_range<object_iterator> objects(102,2917
  const MachO::InterfaceFile &getInterfaceFile(getInterfaceFile106,3029
  uint32_t getNumberOfObjects(108,3103
  static bool classof(110,3171
  struct Library 113,3253
    StringRef InstallName;114,3272
    MachO::Architecture Arch;115,3299
  std::unique_ptr<MachO::InterfaceFile> ParsedFile;118,3335
  std::vector<Library> Libraries;119,3387

/usr/include/llvm/Object/WindowsMachineFlag.h,48
#define LLVM_OBJECT_WINDOWSMACHINEFLAG_H14,548

/usr/include/llvm/Object/WindowsResource.h,2771
#define LLVM_OBJECT_WINDOWSRESOURCE_H29,1183
struct WinResHeaderPrefix 60,1937
  support::ulittle32_t DataSize;61,1965
  support::ulittle32_t HeaderSize;62,1998
struct WinResIDs 67,2166
  uint16_t TypeFlag;68,2185
  support::ulittle16_t TypeID;69,2206
  uint16_t NameFlag;70,2237
  support::ulittle16_t NameID;71,2258
  void setType(73,2290
  void setName(78,2365
struct WinResHeaderSuffix 84,2443
  support::ulittle32_t DataVersion;85,2471
  support::ulittle16_t MemoryFlags;86,2507
  support::ulittle16_t Language;87,2543
  support::ulittle32_t Version;88,2576
  support::ulittle32_t Characteristics;89,2608
class EmptyResError 92,2652
  EmptyResError(94,2710
class ResourceEntryRef 98,2813
  bool checkTypeString(101,2875
  ArrayRef<UTF16> getTypeString(102,2931
  uint16_t getTypeID(103,2988
  bool checkNameString(104,3036
  ArrayRef<UTF16> getNameString(105,3092
  uint16_t getNameID(106,3149
  uint16_t getDataVersion(107,3197
  uint16_t getLanguage(108,3263
  uint16_t getMemoryFlags(109,3323
  uint16_t getMajorVersion(110,3389
  uint16_t getMinorVersion(111,3458
  uint32_t getCharacteristics(112,3521
  ArrayRef<uint8_t> getData(113,3595
  BinaryStreamReader Reader;124,3922
  const WindowsResource *Owner;Owner125,3951
  bool IsStringType;126,3983
  ArrayRef<UTF16> Type;127,4004
  uint16_t TypeID;128,4028
  bool IsStringName;129,4047
  ArrayRef<UTF16> Name;130,4068
  uint16_t NameID;131,4092
  const WinResHeaderSuffix *Suffix Suffix132,4111
  ArrayRef<uint8_t> Data;133,4157
class WindowsResource 136,4187
  static bool classof(140,4281
  BinaryByteStream BBS;150,4536
class WindowsResourceParser 153,4564
  const TreeNode &getTree(getTree162,4955
  ArrayRef<std::vector<uint8_t>> getData(163,5006
  ArrayRef<std::vector<UTF16>> getStringTable(164,5072
  class TreeNode 166,5151
    uint32_t getStringIndex(173,5363
    uint32_t getDataIndex(174,5423
    uint16_t getMajorVersion(175,5479
    uint16_t getMinorVersion(176,5541
    uint32_t getCharacteristics(177,5603
    bool checkIsDataNode(178,5671
    const Children<uint32_t> &getIDChildren(getIDChildren179,5727
    const Children<std::string> &getStringChildren(getStringChildren180,5802
    uint32_t StringIndex;221,7886
    uint32_t DataIndex;222,7912
    Children<uint32_t> IDChildren;223,7936
    Children<std::string> StringChildren;224,7971
    uint32_t Origin;231,8210
  struct StringOrID 234,8237
    bool IsString;235,8259
    ArrayRef<UTF16> String;236,8278
    StringOrID(239,8330
    StringOrID(240,8387
  TreeNode Root;251,8870
  std::vector<std::vector<uint8_t>> Data;252,8887
  std::vector<std::vector<UTF16>> StringTable;253,8929
  std::vector<std::string> InputFilenames;255,8977
  bool MinGW;257,9021

/usr/include/llvm/Object/Archive.h,4836
#define LLVM_OBJECT_ARCHIVE_H14,543
class AbstractArchiveMemberHeader 39,1133
  AbstractArchiveMemberHeader(41,1180
  const Archive *Parent;Parent73,2396
class CommonArchiveMemberHeader 77,2447
  CommonArchiveMemberHeader(79,2526
  uint64_t getSizeOf(87,2887
  T const *ArMemHdr;ArMemHdr89,2948
struct UnixArMemHdrType 92,2973
  char Name[Name93,2999
  char LastModified[LastModified94,3016
  char UID[UID95,3041
  char GID[GID96,3056
  char AccessMode[AccessMode97,3071
  char Size[Size98,3093
  char Terminator[Terminator99,3162
class ArchiveMemberHeader 102,3188
  std::unique_ptr<AbstractArchiveMemberHeader> clone(107,3399
struct BigArMemHdrType 120,3820
  char Size[Size121,3845
  char NextOffset[NextOffset122,3899
  char PrevOffset[PrevOffset123,3955
  char LastModified[LastModified124,4015
  char UID[UID125,4040
  char GID[GID126,4056
  char AccessMode[AccessMode127,4072
  char NameLen[NameLen128,4095
    char Name[Name130,4162
    char Terminator[Terminator131,4204
class BigArchiveMemberHeader136,4286
  std::unique_ptr<AbstractArchiveMemberHeader> clone(142,4509
  Expected<bool> isThin(153,4954
class Archive 156,5017
  class Child 160,5083
    const Archive *Parent;Parent164,5160
    std::unique_ptr<AbstractArchiveMemberHeader> Header;165,5187
    StringRef Data;167,5290
    uint16_t StartOfFile;169,5361
    Child(177,5578
    Child(183,5738
    Child &operator=(operator=190,5896
    Child &operator=(operator=202,6140
    bool operator==(operator==215,6389
    const Archive *getParent(getParent220,6559
    Expected<StringRef> getRawName(225,6741
    Expected<sys::TimePoint<std::chrono::seconds>> getLastModified(227,6818
    StringRef getRawLastModified(231,6942
    Expected<unsigned> getUID(235,7035
    Expected<unsigned> getGID(236,7102
    Expected<sys::fs::perms> getAccessMode(238,7170
    uint64_t getDataOffset(249,7574
  class ChildFallibleIterator 257,7811
    Child C;258,7843
    ChildFallibleIterator(261,7867
    ChildFallibleIterator(262,7936
    const Child *operator->(operator->264,7989
    const Child &operator*(operator*265,8040
    bool operator==(operator==267,8090
    bool operator!=(operator!=274,8377
    Error inc(278,8480
  using child_iterator 287,8670
  class Symbol 289,8738
    const Archive *Parent;Parent290,8755
    uint32_t SymbolIndex;291,8782
    uint32_t StringIndex;292,8808
    Symbol(295,8875
    bool operator==(operator==298,8996
  class symbol_iterator 308,9262
    Symbol symbol;309,9288
    symbol_iterator(312,9318
    const Symbol *operator->(operator->314,9371
    const Symbol &operator*(operator*315,9428
    bool operator==(operator==317,9484
    bool operator!=(operator!=321,9586
    symbol_iterator &operator++(operator++325,9683
  static const uint64_t MaxMemberSize 335,9967
  enum Kind 337,10020
  enum Kind { K_GNU,337,10020
  enum Kind { K_GNU, K_GNU64,337,10020
  enum Kind { K_GNU, K_GNU64, K_BSD,337,10020
  enum Kind { K_GNU, K_GNU64, K_BSD, K_DARWIN,337,10020
  enum Kind { K_GNU, K_GNU64, K_BSD, K_DARWIN, K_DARWIN64,337,10020
  enum Kind { K_GNU, K_GNU64, K_BSD, K_DARWIN, K_DARWIN64, K_COFF,337,10020
  enum Kind { K_GNU, K_GNU64, K_BSD, K_DARWIN, K_DARWIN64, K_COFF, K_AIXBIG 337,10020
  Kind kind(339,10100
  bool isThin(340,10145
  iterator_range<child_iterator> children(345,10353
  iterator_range<symbol_iterator> symbols(352,10634
  static bool classof(358,10809
  StringRef getSymbolTable(365,11045
  StringRef getStringTable(366,11104
  virtual uint64_t getFirstChildOffset(369,11243
  std::vector<std::unique_ptr<MemoryBuffer>> takeThinBuffers(371,11324
  StringRef SymbolTable;383,11684
  StringRef ECSymbolTable;384,11709
  StringRef StringTable;385,11736
  StringRef FirstRegularData;388,11771
  uint16_t FirstRegularStartOfFile 389,11801
  unsigned Format 391,11843
  unsigned IsThin 392,11866
  mutable std::vector<std::unique_ptr<MemoryBuffer>> ThinBuffers;393,11889
class BigArchive 396,11959
  struct FixLenHdr 399,12030
    char Magic[Magic400,12051
    char MemOffset[MemOffset401,12127
    char GlobSymOffset[GlobSymOffset402,12201
        GlobSym64Offset[GlobSym64Offset404,12291
    char FirstChildOffset[FirstChildOffset405,12372
    char LastChildOffset[LastChildOffset406,12440
    char FreeOffset[FreeOffset407,12507
  const FixLenHdr *ArFixLenHdr;ArFixLenHdr410,12583
  uint64_t FirstChildOffset 411,12615
  uint64_t LastChildOffset 412,12648
  std::string MergedGlobalSymtabBuf;413,12680
  bool Has32BitGlobalSymtab 414,12717
  bool Has64BitGlobalSymtab 415,12754
  uint64_t getFirstChildOffset(419,12850
  uint64_t getLastChildOffset(420,12927
  bool isEmpty(421,12993
  bool has32BitGlobalSymtab(423,13065
  bool has64BitGlobalSymtab(424,13128

/usr/include/llvm/Object/ArchiveWriter.h,335
#define LLVM_OBJECT_ARCHIVEWRITER_H14,560
struct NewArchiveMember 20,649
  std::unique_ptr<MemoryBuffer> Buf;21,675
  StringRef MemberName;22,712
  sys::TimePoint<std::chrono::seconds> ModTime;23,736
enum class SymtabWritingMode 43,1471
  NoSymtab,44,1502
  NormalSymtab,45,1548
  BigArchive32,47,1678
  BigArchive64 48,1733

/usr/include/llvm/Object/COFF.h,26847
#define LLVM_OBJECT_COFF_H14,532
struct dos_header 53,1749
  char                 Magic[Magic54,1769
  support::ulittle16_t UsedBytesInTheLastPage;55,1802
  support::ulittle16_t FileSizeInPages;56,1849
  support::ulittle16_t NumberOfRelocationItems;57,1889
  support::ulittle16_t HeaderSizeInParagraphs;58,1937
  support::ulittle16_t MinimumExtraParagraphs;59,1984
  support::ulittle16_t MaximumExtraParagraphs;60,2031
  support::ulittle16_t InitialRelativeSS;61,2078
  support::ulittle16_t InitialSP;62,2120
  support::ulittle16_t Checksum;63,2154
  support::ulittle16_t InitialIP;64,2187
  support::ulittle16_t InitialRelativeCS;65,2221
  support::ulittle16_t AddressOfRelocationTable;66,2263
  support::ulittle16_t OverlayNumber;67,2312
  support::ulittle16_t Reserved[Reserved68,2350
  support::ulittle16_t OEMid;69,2386
  support::ulittle16_t OEMinfo;70,2416
  support::ulittle16_t Reserved2[Reserved271,2448
  support::ulittle32_t AddressOfNewExeHeader;72,2486
struct coff_file_header 75,2536
  support::ulittle16_t Machine;76,2562
  support::ulittle16_t NumberOfSections;77,2594
  support::ulittle32_t TimeDateStamp;78,2635
  support::ulittle32_t PointerToSymbolTable;79,2673
  support::ulittle32_t NumberOfSymbols;80,2718
  support::ulittle16_t SizeOfOptionalHeader;81,2758
  support::ulittle16_t Characteristics;82,2803
  bool isImportLibrary(84,2844
struct coff_bigobj_file_header 87,2918
  support::ulittle16_t Sig1;88,2951
  support::ulittle16_t Sig2;89,2980
  support::ulittle16_t Version;90,3009
  support::ulittle16_t Machine;91,3041
  support::ulittle32_t TimeDateStamp;92,3073
  uint8_t              UUID[UUID93,3111
  support::ulittle32_t unused1;94,3144
  support::ulittle32_t unused2;95,3176
  support::ulittle32_t unused3;96,3208
  support::ulittle32_t unused4;97,3240
  support::ulittle32_t NumberOfSections;98,3272
  support::ulittle32_t PointerToSymbolTable;99,3313
  support::ulittle32_t NumberOfSymbols;100,3358
struct pe32_header 104,3457
  support::ulittle16_t Magic;105,3478
  uint8_t MajorLinkerVersion;106,3508
  uint8_t MinorLinkerVersion;107,3538
  support::ulittle32_t SizeOfCode;108,3568
  support::ulittle32_t SizeOfInitializedData;109,3603
  support::ulittle32_t SizeOfUninitializedData;110,3649
  support::ulittle32_t AddressOfEntryPoint;111,3697
  support::ulittle32_t BaseOfCode;112,3741
  support::ulittle32_t BaseOfData;113,3776
  support::ulittle32_t ImageBase;114,3811
  support::ulittle32_t SectionAlignment;115,3845
  support::ulittle32_t FileAlignment;116,3886
  support::ulittle16_t MajorOperatingSystemVersion;117,3924
  support::ulittle16_t MinorOperatingSystemVersion;118,3976
  support::ulittle16_t MajorImageVersion;119,4028
  support::ulittle16_t MinorImageVersion;120,4070
  support::ulittle16_t MajorSubsystemVersion;121,4112
  support::ulittle16_t MinorSubsystemVersion;122,4158
  support::ulittle32_t Win32VersionValue;123,4204
  support::ulittle32_t SizeOfImage;124,4246
  support::ulittle32_t SizeOfHeaders;125,4282
  support::ulittle32_t CheckSum;126,4320
  support::ulittle16_t Subsystem;127,4353
  support::ulittle16_t DLLCharacteristics;129,4434
  support::ulittle32_t SizeOfStackReserve;130,4477
  support::ulittle32_t SizeOfStackCommit;131,4520
  support::ulittle32_t SizeOfHeapReserve;132,4562
  support::ulittle32_t SizeOfHeapCommit;133,4604
  support::ulittle32_t LoaderFlags;134,4645
  support::ulittle32_t NumberOfRvaAndSize;136,4729
struct pe32plus_header 140,4831
  support::ulittle16_t Magic;141,4856
  uint8_t MajorLinkerVersion;142,4886
  uint8_t MinorLinkerVersion;143,4916
  support::ulittle32_t SizeOfCode;144,4946
  support::ulittle32_t SizeOfInitializedData;145,4981
  support::ulittle32_t SizeOfUninitializedData;146,5027
  support::ulittle32_t AddressOfEntryPoint;147,5075
  support::ulittle32_t BaseOfCode;148,5119
  support::ulittle64_t ImageBase;149,5154
  support::ulittle32_t SectionAlignment;150,5188
  support::ulittle32_t FileAlignment;151,5229
  support::ulittle16_t MajorOperatingSystemVersion;152,5267
  support::ulittle16_t MinorOperatingSystemVersion;153,5319
  support::ulittle16_t MajorImageVersion;154,5371
  support::ulittle16_t MinorImageVersion;155,5413
  support::ulittle16_t MajorSubsystemVersion;156,5455
  support::ulittle16_t MinorSubsystemVersion;157,5501
  support::ulittle32_t Win32VersionValue;158,5547
  support::ulittle32_t SizeOfImage;159,5589
  support::ulittle32_t SizeOfHeaders;160,5625
  support::ulittle32_t CheckSum;161,5663
  support::ulittle16_t Subsystem;162,5696
  support::ulittle16_t DLLCharacteristics;163,5730
  support::ulittle64_t SizeOfStackReserve;164,5773
  support::ulittle64_t SizeOfStackCommit;165,5816
  support::ulittle64_t SizeOfHeapReserve;166,5858
  support::ulittle64_t SizeOfHeapCommit;167,5900
  support::ulittle32_t LoaderFlags;168,5941
  support::ulittle32_t NumberOfRvaAndSize;169,5977
struct data_directory 172,6024
  support::ulittle32_t RelativeVirtualAddress;173,6048
  support::ulittle32_t Size;174,6095
struct debug_directory 177,6128
  support::ulittle32_t Characteristics;178,6153
  support::ulittle32_t TimeDateStamp;179,6193
  support::ulittle16_t MajorVersion;180,6231
  support::ulittle16_t MinorVersion;181,6268
  support::ulittle32_t Type;182,6305
  support::ulittle32_t SizeOfData;183,6334
  support::ulittle32_t AddressOfRawData;184,6369
  support::ulittle32_t PointerToRawData;185,6410
struct import_lookup_table_entry 189,6481
  IntTy Data;190,6516
  bool isOrdinal(192,6531
  uint16_t getOrdinal(194,6578
  uint32_t getHintNameRVA(199,6700
using import_lookup_table_entry32 205,6839
using import_lookup_table_entry64 207,6927
struct delay_import_directory_table_entry 210,7016
  support::ulittle32_t Attributes;212,7138
  support::ulittle32_t Name;213,7173
  support::ulittle32_t ModuleHandle;214,7202
  support::ulittle32_t DelayImportAddressTable;215,7239
  support::ulittle32_t DelayImportNameTable;216,7287
  support::ulittle32_t BoundDelayImportTable;217,7332
  support::ulittle32_t UnloadDelayImportTable;218,7378
  support::ulittle32_t TimeStamp;219,7425
struct export_directory_table_entry 222,7463
  support::ulittle32_t ExportFlags;223,7501
  support::ulittle32_t TimeDateStamp;224,7537
  support::ulittle16_t MajorVersion;225,7575
  support::ulittle16_t MinorVersion;226,7612
  support::ulittle32_t NameRVA;227,7649
  support::ulittle32_t OrdinalBase;228,7681
  support::ulittle32_t AddressTableEntries;229,7717
  support::ulittle32_t NumberOfNamePointers;230,7761
  support::ulittle32_t ExportAddressTableRVA;231,7806
  support::ulittle32_t NamePointerRVA;232,7852
  support::ulittle32_t OrdinalTableRVA;233,7891
union export_address_table_entry 236,7935
  support::ulittle32_t ExportRVA;237,7970
  support::ulittle32_t ForwarderRVA;238,8004
using export_name_pointer_table_entry 241,8045
using export_ordinal_table_entry 242,8107
struct StringTableOffset 244,8165
  support::ulittle32_t Zeroes;245,8192
  support::ulittle32_t Offset;246,8223
struct coff_symbol 250,8296
    char ShortName[ShortName252,8327
    StringTableOffset Offset;253,8363
  } Name;254,8393
  support::ulittle32_t Value;256,8404
  SectionNumberType SectionNumber;257,8434
  support::ulittle16_t Type;259,8470
  uint8_t StorageClass;261,8500
  uint8_t NumberOfAuxSymbols;262,8524
using coff_symbol16 265,8558
using coff_symbol32 266,8615
struct coff_symbol_generic 269,8739
    char ShortName[ShortName271,8778
    StringTableOffset Offset;272,8814
  } Name;273,8844
  support::ulittle32_t Value;274,8854
class COFFSymbolRef 280,8956
  COFFSymbolRef(283,9015
  COFFSymbolRef(284,9070
  const void *getRawPtr(getRawPtr286,9126
  const coff_symbol_generic *getGeneric(getGeneric290,9223
  friend bool operator<(296,9422
  bool isBigObj(300,9529
  const char *getShortName(getShortName308,9685
  const StringTableOffset &getStringTableOffset(getStringTableOffset312,9790
  uint32_t getValue(317,9969
  int32_t getSectionNumber(322,10108
  uint16_t getType(333,10500
  uint8_t getStorageClass(338,10636
  uint8_t getNumberOfAuxSymbols(343,10795
  uint8_t getBaseType(348,10972
  uint8_t getComplexType(350,11032
  template <typename T> const T *getAux(getAux354,11135
  const coff_aux_section_definition *getSectionDefinition(getSectionDefinition359,11303
  const coff_aux_weak_external *getWeakExternal(getWeakExternal366,11543
  bool isAbsolute(373,11775
  bool isExternal(377,11845
  bool isCommon(381,11942
  bool isUndefined(386,12096
  bool isWeakExternal(391,12236
  bool isFunctionDefinition(395,12342
  bool isFunctionLineInfo(401,12586
  bool isAnyUndefined(405,12691
  bool isFileRecord(409,12774
  bool isSection(413,12869
  bool isSectionDefinition(417,12964
  bool isCLRToken(429,13483
  bool isSet(434,13590
  const coff_symbol16 *CS16 CS16436,13637
  const coff_symbol32 *CS32 CS32437,13676
struct coff_section 440,13719
  char Name[Name441,13741
  support::ulittle32_t VirtualSize;442,13770
  support::ulittle32_t VirtualAddress;443,13806
  support::ulittle32_t SizeOfRawData;444,13845
  support::ulittle32_t PointerToRawData;445,13883
  support::ulittle32_t PointerToRelocations;446,13924
  support::ulittle32_t PointerToLinenumbers;447,13969
  support::ulittle16_t NumberOfRelocations;448,14014
  support::ulittle16_t NumberOfLinenumbers;449,14058
  support::ulittle32_t Characteristics;450,14102
  bool hasExtendedRelocations(454,14273
  uint32_t getAlignment(459,14430
struct coff_relocation 474,14853
  support::ulittle32_t VirtualAddress;475,14878
  support::ulittle32_t SymbolTableIndex;476,14917
  support::ulittle16_t Type;477,14958
struct coff_aux_function_definition 480,14991
  support::ulittle32_t TagIndex;481,15029
  support::ulittle32_t TotalSize;482,15062
  support::ulittle32_t PointerToLinenumber;483,15096
  support::ulittle32_t PointerToNextFunction;484,15140
  char Unused1[Unused1485,15186
struct coff_aux_bf_and_ef_symbol 491,15319
  char Unused1[Unused1492,15354
  support::ulittle16_t Linenumber;493,15373
  char Unused2[Unused2494,15408
  support::ulittle32_t PointerToNextFunction;495,15427
  char Unused3[Unused3496,15473
struct coff_aux_weak_external 502,15603
  support::ulittle32_t TagIndex;503,15635
  support::ulittle32_t Characteristics;504,15668
  char Unused1[Unused1505,15708
struct coff_aux_section_definition 511,15836
  support::ulittle32_t Length;512,15873
  support::ulittle16_t NumberOfRelocations;513,15904
  support::ulittle16_t NumberOfLinenumbers;514,15948
  support::ulittle32_t CheckSum;515,15992
  support::ulittle16_t NumberLowPart;516,16025
  uint8_t              Selection;517,16063
  uint8_t              Unused;518,16097
  support::ulittle16_t NumberHighPart;519,16128
  int32_t getNumber(520,16167
struct coff_aux_clr_token 531,16507
  uint8_t              AuxType;532,16535
  uint8_t              Reserved;533,16567
  support::ulittle32_t SymbolTableIndex;534,16600
  char                 MBZ[MBZ535,16641
struct coff_import_header 541,16777
  support::ulittle16_t Sig1;542,16805
  support::ulittle16_t Sig2;543,16834
  support::ulittle16_t Version;544,16863
  support::ulittle16_t Machine;545,16895
  support::ulittle32_t TimeDateStamp;546,16927
  support::ulittle32_t SizeOfData;547,16965
  support::ulittle16_t OrdinalHint;548,17000
  support::ulittle16_t TypeInfo;549,17036
  int getType(551,17070
  int getNameType(552,17119
struct coff_import_directory_table_entry 555,17183
  support::ulittle32_t ImportLookupTableRVA;556,17226
  support::ulittle32_t TimeDateStamp;557,17271
  support::ulittle32_t ForwarderChain;558,17309
  support::ulittle32_t NameRVA;559,17348
  support::ulittle32_t ImportAddressTableRVA;560,17380
  bool isNull(562,17427
struct coff_tls_directory 569,17625
  IntTy StartAddressOfRawData;570,17653
  IntTy EndAddressOfRawData;571,17684
  IntTy AddressOfIndex;572,17713
  IntTy AddressOfCallBacks;573,17737
  support::ulittle32_t SizeOfZeroFill;574,17765
  support::ulittle32_t Characteristics;575,17804
  uint32_t getAlignment(577,17845
  void setAlignment(585,18071
using coff_tls_directory32 597,18468
using coff_tls_directory64 598,18538
enum class frame_type 600,18609
enum class frame_type : uint16_t { Fpo 600,18609
enum class frame_type : uint16_t { Fpo = 0, Trap 600,18609
enum class frame_type : uint16_t { Fpo = 0, Trap = 1, Tss 600,18609
enum class frame_type : uint16_t { Fpo = 0, Trap = 1, Tss = 2, NonFpo 600,18609
struct coff_load_config_code_integrity 602,18687
  support::ulittle16_t Flags;603,18728
  support::ulittle16_t Catalog;604,18758
  support::ulittle32_t CatalogOffset;605,18790
  support::ulittle32_t Reserved;606,18828
struct coff_load_configuration32 610,18920
  support::ulittle32_t Size;611,18955
  support::ulittle32_t TimeDateStamp;612,18984
  support::ulittle16_t MajorVersion;613,19022
  support::ulittle16_t MinorVersion;614,19059
  support::ulittle32_t GlobalFlagsClear;615,19096
  support::ulittle32_t GlobalFlagsSet;616,19137
  support::ulittle32_t CriticalSectionDefaultTimeout;617,19176
  support::ulittle32_t DeCommitFreeBlockThreshold;618,19230
  support::ulittle32_t DeCommitTotalFreeThreshold;619,19281
  support::ulittle32_t LockPrefixTable;620,19332
  support::ulittle32_t MaximumAllocationSize;621,19372
  support::ulittle32_t VirtualMemoryThreshold;622,19418
  support::ulittle32_t ProcessAffinityMask;623,19465
  support::ulittle32_t ProcessHeapFlags;624,19509
  support::ulittle16_t CSDVersion;625,19550
  support::ulittle16_t DependentLoadFlags;626,19585
  support::ulittle32_t EditList;627,19628
  support::ulittle32_t SecurityCookie;628,19661
  support::ulittle32_t SEHandlerTable;629,19700
  support::ulittle32_t SEHandlerCount;630,19739
  support::ulittle32_t GuardCFCheckFunction;633,19818
  support::ulittle32_t GuardCFCheckDispatch;634,19863
  support::ulittle32_t GuardCFFunctionTable;635,19908
  support::ulittle32_t GuardCFFunctionCount;636,19953
  support::ulittle32_t GuardFlags;637,19998
  coff_load_config_code_integrity CodeIntegrity;640,20078
  support::ulittle32_t GuardAddressTakenIatEntryTable;641,20127
  support::ulittle32_t GuardAddressTakenIatEntryCount;642,20182
  support::ulittle32_t GuardLongJumpTargetTable;643,20237
  support::ulittle32_t GuardLongJumpTargetCount;644,20286
  support::ulittle32_t DynamicValueRelocTable;645,20335
  support::ulittle32_t CHPEMetadataPointer;646,20382
  support::ulittle32_t GuardRFFailureRoutine;647,20426
  support::ulittle32_t GuardRFFailureRoutineFunctionPointer;648,20472
  support::ulittle32_t DynamicValueRelocTableOffset;649,20533
  support::ulittle16_t DynamicValueRelocTableSection;650,20586
  support::ulittle16_t Reserved2;651,20640
  support::ulittle32_t GuardRFVerifyStackPointerFunctionPointer;652,20674
  support::ulittle32_t HotPatchTableOffset;653,20739
  support::ulittle32_t Reserved3;656,20808
  support::ulittle32_t EnclaveConfigurationPointer;657,20842
  support::ulittle32_t VolatileMetadataPointer;658,20894
  support::ulittle32_t GuardEHContinuationTable;659,20942
  support::ulittle32_t GuardEHContinuationCount;660,20991
  support::ulittle32_t GuardXFGCheckFunctionPointer;661,21040
  support::ulittle32_t GuardXFGDispatchFunctionPointer;662,21093
  support::ulittle32_t GuardXFGTableDispatchFunctionPointer;663,21149
  support::ulittle32_t CastGuardOsDeterminedFailureMode;664,21210
struct coff_load_configuration64 668,21326
  support::ulittle32_t Size;669,21361
  support::ulittle32_t TimeDateStamp;670,21390
  support::ulittle16_t MajorVersion;671,21428
  support::ulittle16_t MinorVersion;672,21465
  support::ulittle32_t GlobalFlagsClear;673,21502
  support::ulittle32_t GlobalFlagsSet;674,21543
  support::ulittle32_t CriticalSectionDefaultTimeout;675,21582
  support::ulittle64_t DeCommitFreeBlockThreshold;676,21636
  support::ulittle64_t DeCommitTotalFreeThreshold;677,21687
  support::ulittle64_t LockPrefixTable;678,21738
  support::ulittle64_t MaximumAllocationSize;679,21778
  support::ulittle64_t VirtualMemoryThreshold;680,21824
  support::ulittle64_t ProcessAffinityMask;681,21871
  support::ulittle32_t ProcessHeapFlags;682,21915
  support::ulittle16_t CSDVersion;683,21956
  support::ulittle16_t DependentLoadFlags;684,21991
  support::ulittle64_t EditList;685,22034
  support::ulittle64_t SecurityCookie;686,22067
  support::ulittle64_t SEHandlerTable;687,22106
  support::ulittle64_t SEHandlerCount;688,22145
  support::ulittle64_t GuardCFCheckFunction;691,22224
  support::ulittle64_t GuardCFCheckDispatch;692,22269
  support::ulittle64_t GuardCFFunctionTable;693,22314
  support::ulittle64_t GuardCFFunctionCount;694,22359
  support::ulittle32_t GuardFlags;695,22404
  coff_load_config_code_integrity CodeIntegrity;698,22464
  support::ulittle64_t GuardAddressTakenIatEntryTable;699,22513
  support::ulittle64_t GuardAddressTakenIatEntryCount;700,22568
  support::ulittle64_t GuardLongJumpTargetTable;701,22623
  support::ulittle64_t GuardLongJumpTargetCount;702,22672
  support::ulittle64_t DynamicValueRelocTable;703,22721
  support::ulittle64_t CHPEMetadataPointer;704,22768
  support::ulittle64_t GuardRFFailureRoutine;705,22812
  support::ulittle64_t GuardRFFailureRoutineFunctionPointer;706,22858
  support::ulittle32_t DynamicValueRelocTableOffset;707,22919
  support::ulittle16_t DynamicValueRelocTableSection;708,22972
  support::ulittle16_t Reserved2;709,23026
  support::ulittle64_t GuardRFVerifyStackPointerFunctionPointer;710,23060
  support::ulittle32_t HotPatchTableOffset;711,23125
  support::ulittle32_t Reserved3;714,23194
  support::ulittle64_t EnclaveConfigurationPointer;715,23228
  support::ulittle64_t VolatileMetadataPointer;716,23280
  support::ulittle64_t GuardEHContinuationTable;717,23328
  support::ulittle64_t GuardEHContinuationCount;718,23377
  support::ulittle64_t GuardXFGCheckFunctionPointer;719,23426
  support::ulittle64_t GuardXFGDispatchFunctionPointer;720,23479
  support::ulittle64_t GuardXFGTableDispatchFunctionPointer;721,23535
  support::ulittle64_t CastGuardOsDeterminedFailureMode;722,23596
struct chpe_metadata 725,23657
  support::ulittle32_t Version;726,23680
  support::ulittle32_t CodeMap;727,23712
  support::ulittle32_t CodeMapCount;728,23744
  support::ulittle32_t CodeRangesToEntryPoints;729,23781
  support::ulittle32_t RedirectionMetadata;730,23829
  support::ulittle32_t __os_arm64x_dispatch_call_no_redirect;731,23873
  support::ulittle32_t __os_arm64x_dispatch_ret;732,23935
  support::ulittle32_t __os_arm64x_dispatch_call;733,23984
  support::ulittle32_t __os_arm64x_dispatch_icall;734,24034
  support::ulittle32_t __os_arm64x_dispatch_icall_cfg;735,24085
  support::ulittle32_t AlternateEntryPoint;736,24140
  support::ulittle32_t AuxiliaryIAT;737,24184
  support::ulittle32_t CodeRangesToEntryPointsCount;738,24221
  support::ulittle32_t RedirectionMetadataCount;739,24274
  support::ulittle32_t GetX64InformationFunctionPointer;740,24323
  support::ulittle32_t SetX64InformationFunctionPointer;741,24380
  support::ulittle32_t ExtraRFETable;742,24437
  support::ulittle32_t ExtraRFETableSize;743,24475
  support::ulittle32_t __os_arm64x_dispatch_fptr;744,24517
  support::ulittle32_t AuxiliaryIATCopy;745,24567
enum chpe_range_type 748,24612
enum chpe_range_type { Arm64 748,24612
enum chpe_range_type { Arm64 = 0, Arm64EC 748,24612
enum chpe_range_type { Arm64 = 0, Arm64EC = 1, Amd64 748,24612
struct chpe_range_entry 750,24673
  support::ulittle32_t StartOffset;751,24699
  support::ulittle32_t Length;752,24735
  static constexpr uint32_t TypeMask 755,24826
  uint32_t getStart(757,24869
  uint16_t getType(758,24933
struct chpe_code_range_entry 761,24999
  support::ulittle32_t StartRva;762,25030
  support::ulittle32_t EndRva;763,25063
  support::ulittle32_t EntryPoint;764,25094
struct chpe_redirection_entry 767,25133
  support::ulittle32_t Source;768,25165
  support::ulittle32_t Destination;769,25196
struct coff_runtime_function_x64 772,25236
  support::ulittle32_t BeginAddress;773,25271
  support::ulittle32_t EndAddress;774,25308
  support::ulittle32_t UnwindInformation;775,25343
struct coff_base_reloc_block_header 778,25389
  support::ulittle32_t PageRVA;779,25427
  support::ulittle32_t BlockSize;780,25459
struct coff_base_reloc_block_entry 783,25497
  support::ulittle16_t Data;784,25534
  int getType(786,25564
  int getOffset(787,25609
struct coff_resource_dir_entry 790,25672
    support::ulittle32_t NameOffset;792,25715
    support::ulittle32_t ID;793,25752
    uint32_t getNameOffset(794,25781
    void setNameOffset(799,25985
  } Identifier;800,26062
    support::ulittle32_t DataEntryOffset;802,26088
    support::ulittle32_t SubdirOffset;803,26130
    bool isSubDir(805,26170
    uint32_t value(806,26227
  } Offset;810,26323
struct coff_resource_data_entry 813,26339
  support::ulittle32_t DataRVA;814,26373
  support::ulittle32_t DataSize;815,26405
  support::ulittle32_t Codepage;816,26438
  support::ulittle32_t Reserved;817,26471
struct coff_resource_dir_table 820,26508
  support::ulittle32_t Characteristics;821,26541
  support::ulittle32_t TimeDateStamp;822,26581
  support::ulittle16_t MajorVersion;823,26619
  support::ulittle16_t MinorVersion;824,26656
  support::ulittle16_t NumberOfNameEntries;825,26693
  support::ulittle16_t NumberOfIDEntries;826,26737
struct debug_h_header 829,26783
  support::ulittle32_t Magic;830,26807
  support::ulittle16_t Version;831,26837
  support::ulittle16_t HashAlgorithm;832,26869
class COFFObjectFile 835,26911
  const coff_file_header *COFFHeader;COFFHeader841,27086
  const coff_bigobj_file_header *COFFBigObjHeader;COFFBigObjHeader842,27124
  const pe32_header *PE32Header;PE32Header843,27175
  const pe32plus_header *PE32PlusHeader;PE32PlusHeader844,27208
  const data_directory *DataDirectory;DataDirectory845,27249
  const coff_section *SectionTable;SectionTable846,27288
  const coff_symbol16 *SymbolTable16;SymbolTable16847,27324
  const coff_symbol32 *SymbolTable32;SymbolTable32848,27362
  const char *StringTable;StringTable849,27400
  uint32_t StringTableSize;850,27427
  const coff_import_directory_table_entry *ImportDirectory;ImportDirectory851,27455
  const delay_import_directory_table_entry *DelayImportDirectory;DelayImportDirectory852,27515
  uint32_t NumberOfDelayImportDirectory;853,27581
  const export_directory_table_entry *ExportDirectory;ExportDirectory854,27622
  const coff_base_reloc_block_header *BaseRelocHeader;BaseRelocHeader855,27677
  const coff_base_reloc_block_header *BaseRelocEnd;BaseRelocEnd856,27732
  const debug_directory *DebugDirectoryBegin;DebugDirectoryBegin857,27784
  const debug_directory *DebugDirectoryEnd;DebugDirectoryEnd858,27830
  const coff_tls_directory32 *TLSDirectory32;TLSDirectory32859,27874
  const coff_tls_directory64 *TLSDirectory64;TLSDirectory64860,27920
  const void *LoadConfig LoadConfig862,28034
  const chpe_metadata *CHPEMetadata CHPEMetadata863,28070
  uintptr_t getSymbolTable(888,28812
  uint16_t getMachine(896,29039
  uint16_t getSizeOfOptionalHeader(913,29519
  uint16_t getCharacteristics(923,29837
  uint32_t getTimeDateStamp(933,30186
  uint32_t getNumberOfSections(941,30402
  uint32_t getPointerToSymbolTable(949,30663
  uint32_t getRawNumberOfSymbols(958,30979
  uint32_t getNumberOfSymbols(966,31240
  uint32_t getStringTableSize(972,31379
  const export_directory_table_entry *getExportTable(getExportTable974,31446
  const coff_load_configuration32 *getLoadConfig32(getLoadConfig32978,31542
  const coff_load_configuration64 *getLoadConfig64(getLoadConfig64983,31705
  const chpe_metadata *getCHPEMetadata(getCHPEMetadata988,31867
  bool is64Bit(1032,34161
  Expected<SubtargetFeatures> getFeatures(1045,34778
  const debug_directory *debug_directory_begin(debug_directory_begin1057,35348
  const debug_directory *debug_directory_end(debug_directory_end1060,35441
  iterator_range<const debug_directory *> debug_directories(1069,35824
  const coff_tls_directory32 *getTLSDirectory32(getTLSDirectory321073,35970
  const coff_tls_directory64 *getTLSDirectory64(getTLSDirectory641076,36059
  const dos_header *getDOSHeader(getDOSHeader1080,36149
  const coff_file_header *getCOFFHeader(getCOFFHeader1086,36316
  const coff_bigobj_file_header *getCOFFBigObjHeader(getCOFFBigObjHeader1087,36387
  const pe32_header *getPE32Header(getPE32Header1090,36483
  const pe32plus_header *getPE32PlusHeader(getPE32PlusHeader1091,36549
  Expected<COFFSymbolRef> getSymbol(1096,36759
  Error getAuxSymbol(1107,37151
  size_t getSymbolTableEntrySize(1122,37666
  bool is64(1165,39543
  static bool classof(1169,39656
class ImportDirectoryEntryRef 1173,39771
  ImportDirectoryEntryRef(1176,39850
  const coff_import_directory_table_entry *ImportTable;ImportTable1199,40757
  uint32_t Index;1200,40813
  const COFFObjectFile *OwningObject OwningObject1201,40831
class DelayImportDirectoryEntryRef 1204,40883
  DelayImportDirectoryEntryRef(1207,40972
  const delay_import_directory_table_entry *Table;Table1224,41654
  uint32_t Index;1225,41705
  const COFFObjectFile *OwningObject OwningObject1226,41723
class ExportDirectoryEntryRef 1230,41829
  ExportDirectoryEntryRef(1233,41908
  const export_directory_table_entry *ExportTable;ExportTable1250,42519
  uint32_t Index;1251,42570
  const COFFObjectFile *OwningObject OwningObject1252,42588
class ImportedSymbolRef 1255,42640
  ImportedSymbolRef(1258,42707
  ImportedSymbolRef(1261,42905
  const import_lookup_table_entry32 *Entry32;Entry321274,43370
  const import_lookup_table_entry64 *Entry64;Entry641275,43416
  uint32_t Index;1276,43462
  const COFFObjectFile *OwningObject OwningObject1277,43480
class BaseRelocRef 1280,43532
  BaseRelocRef(1283,43589
  const coff_base_reloc_block_header *Header;Header1294,43889
  uint32_t Index;1295,43935
class ResourceSectionRef 1298,43957
  explicit ResourceSectionRef(1301,44026
  BinaryByteStream BBS;1320,44765
  SectionRef Section;1322,44790
  const COFFObjectFile *Obj Obj1323,44812
  std::vector<const coff_relocation *> Relocs;1325,44852
struct FpoData 1336,45283
  support::ulittle32_t Offset;1337,45300
  support::ulittle32_t Size;1338,45379
  support::ulittle32_t NumLocals;1339,45445
  support::ulittle16_t NumParams;1340,45513
  support::ulittle16_t Attributes;1341,45581
  int getPrologSize(1344,45650
  int getNumSavedRegs(1347,45734
  bool hasSEH(1350,45835
  bool useBP(1353,45936
  frame_type getFP(1356,46021
class SectionStrippedError1359,46106
  SectionStrippedError(1362,46201

/usr/include/llvm/Object/COFFImportFile.h,858
#define LLVM_OBJECT_COFFIMPORTFILE_H17,725
class COFFImportFile 29,1016
  COFFImportFile(31,1069
  static bool classof(34,1162
  void moveSymbolNext(36,1236
  Error printSymbolName(38,1307
  Expected<uint32_t> getSymbolFlags(45,1533
  basic_symbol_iterator symbol_begin(49,1642
  basic_symbol_iterator symbol_end(53,1751
  bool is64Bit(59,1902
  const coff_import_header *getCOFFImportHeader(getCOFFImportHeader61,1953
  uint16_t getMachine(66,2113
  bool isData(71,2236
struct COFFShortExport 76,2334
  std::string Name;80,2591
  std::string ExtName;84,2736
  std::string SymbolName;88,2891
  std::string AliasTarget;92,3052
  uint16_t Ordinal 94,3080
  bool Noname 95,3104
  bool Data 96,3127
  bool Private 97,3148
  bool Constant 98,3172
  friend bool operator==(operator==100,3198
  friend bool operator!=(operator!=106,3457

/usr/include/llvm/Object/DXContainer.h,4890
#define LLVM_OBJECT_DXCONTAINER_H16,611
std::enable_if_t<std::is_class<T>::value, void> swapBytes(37,1111
template <typename T> struct ViewArray 46,1486
  StringRef Data;47,1527
  uint32_t Stride 48,1545
  ViewArray(51,1639
  using value_type 53,1699
  static constexpr uint32_t MaxStride(54,1723
  struct iterator 58,1824
    StringRef Data;59,1844
    uint32_t Stride;60,1864
    const char *Current;Current61,1922
    iterator(63,1948
    value_type operator*(67,2095
    iterator operator++(81,2590
    iterator operator++(87,2704
    iterator operator--(93,2803
    iterator operator--(99,2919
    bool operator==(operator==105,3018
    bool operator!=(operator!=106,3089
  iterator begin(109,3159
  iterator end(111,3227
  size_t size(113,3291
  bool isEmpty(115,3347
namespace DirectX 118,3399
class PSVRuntimeInfo 119,3419
  StringRef Data;124,3582
  uint32_t Size;125,3600
      std::variant<std::monostate, dxbc::PSV::v0::RuntimeInfo,127,3638
                   dxbc::PSV::v1::RuntimeInfo,128,3701
  InfoStruct BasicInfo;129,3777
  ResourceArray Resources;130,3801
  StringRef StringTable;131,3828
  SmallVector<uint32_t> SemanticIndexTable;132,3853
  SigElementArray SigInputElements;133,3897
  SigElementArray SigOutputElements;134,3933
  SigElementArray SigPatchOrPrimElements;135,3970
  std::array<std::array137,4013
  std::array<ViewArray<uint32_t>, 4> OutputVectorMasks;137,4013
  ViewArray<uint32_t> PatchOrPrimMasks;138,4069
  std::array<std::array139,4109
  std::array<ViewArray<uint32_t>, 4> InputOutputMap;139,4109
  ViewArray<uint32_t> InputPatchMap;140,4162
  ViewArray<uint32_t> PatchOutputMap;141,4199
  PSVRuntimeInfo(144,4246
  uint32_t getSize(149,4376
  uint32_t getResourceCount(150,4420
  ResourceArray getResources(151,4485
  uint32_t getVersion(153,4545
  uint32_t getResourceStride(159,4726
  const InfoStruct &getInfo(getInfo161,4793
  template <typename T> const T *getInfoAs(getInfoAs163,4852
  StringRef getStringTable(179,5447
  ArrayRef<uint32_t> getSemanticIndexTable(180,5506
  SigElementArray getSigInputElements(188,5711
  SigElementArray getSigOutputElements(189,5786
  SigElementArray getSigPatchOrPrimElements(190,5863
  ViewArray<uint32_t> getOutputVectorMasks(194,5957
  ViewArray<uint32_t> getPatchOrPrimMasks(199,6081
  ViewArray<uint32_t> getInputOutputMap(201,6161
  ViewArray<uint32_t> getInputPatchMap(206,6279
  ViewArray<uint32_t> getPatchOutputMap(207,6352
  uint32_t getSigElementStride(209,6428
  bool usesViewID(211,6504
  uint8_t getInputVectorCount(217,6653
  ArrayRef<uint8_t> getOutputVectorCounts(223,6810
  uint8_t getPatchConstOrPrimVectorCount(229,7017
class Signature 236,7208
  ViewArray<dxbc::ProgramSignatureElement> Parameters;237,7226
  uint32_t StringTableOffset;238,7281
  StringRef StringTable;239,7311
  ViewArray<dxbc::ProgramSignatureElement>::iterator begin(242,7345
  ViewArray<dxbc::ProgramSignatureElement>::iterator end(246,7450
  StringRef getName(250,7551
  bool isEmpty(261,8079
class DXContainer 268,8200
  using DXILData 270,8228
  MemoryBufferRef Data;275,8338
  dxbc::Header Header;276,8362
  SmallVector<SmallVector277,8385
  SmallVector<uint32_t, 4> PartOffsets;277,8385
  std::optional<DXILData> DXIL;278,8425
  std::optional<uint64_t> ShaderFlags;279,8457
  std::optional<dxbc::ShaderHash> Hash;280,8496
  std::optional<DirectX::PSVRuntimeInfo> PSVInfo;281,8536
  DirectX::Signature InputSignature;282,8586
  DirectX::Signature OutputSignature;283,8623
  DirectX::Signature PatchConstantSignature;284,8661
  class PartIterator 299,9249
    const DXContainer &Container;Container300,9272
    SmallVectorImpl<uint32_t>::const_iterator OffsetIt;301,9306
    struct PartData 302,9362
      dxbc::PartHeader Part;303,9384
      uint32_t Offset;304,9413
      StringRef Data;305,9436
    } IteratorState;306,9458
    PartIterator(310,9511
    void updateIterator(322,10023
    PartIterator &operator++(operator++332,10301
    PartIterator operator++(340,10476
    bool operator==(operator==346,10585
    bool operator!=(operator!=350,10684
    const PartData &operator*(operator*354,10783
    const PartData *operator->(operator->355,10841
  PartIterator begin(358,10907
  PartIterator end(362,10996
  StringRef getData(364,11075
  const dxbc::Header &getHeader(getHeader367,11196
  const std::optional<DXILData> &getDXIL(getDXIL369,11256
  std::optional<uint64_t> getShaderFlags(371,11323
  std::optional<dxbc::ShaderHash> getShaderHash(373,11397
  const std::optional<DirectX::PSVRuntimeInfo> &getPSVInfo(getPSVInfo375,11471
  const DirectX::Signature &getInputSignature(getInputSignature379,11566
  const DirectX::Signature &getOutputSignature(getOutputSignature380,11647
  const DirectX::Signature &getPatchConstantSignature(getPatchConstantSignature383,11736

/usr/include/llvm/Object/ELF.h,4815
#define LLVM_OBJECT_ELF_H14,533
struct VerdAux 34,987
  unsigned Offset;35,1004
  std::string Name;36,1023
struct VerDef 39,1047
  unsigned Offset;40,1063
  unsigned Version;41,1082
  unsigned Flags;42,1102
  unsigned Ndx;43,1120
  unsigned Cnt;44,1136
  unsigned Hash;45,1152
  std::string Name;46,1169
  std::vector<VerdAux> AuxV;47,1189
struct VernAux 50,1222
  unsigned Hash;51,1239
  unsigned Flags;52,1256
  unsigned Other;53,1274
  unsigned Offset;54,1292
  std::string Name;55,1311
struct VerNeed 58,1335
  unsigned Version;59,1352
  unsigned Cnt;60,1372
  unsigned Offset;61,1388
  std::string File;62,1407
  std::vector<VernAux> AuxV;63,1427
struct VersionEntry 66,1460
  std::string Name;67,1482
  bool IsVerDef;68,1502
getElfArchType(77,1829
enum PPCInstrMasks 85,2125
  PADDI_R12_NO_DISP 86,2157
  ADDIS_R12_TO_R2_NO_DISP 87,2199
  ADDI_R12_TO_R2_NO_DISP 88,2239
  ADDI_R12_TO_R12_NO_DISP 89,2278
  PLD_R12_NO_DISP 90,2318
  MTCTR_R12 91,2358
  BCTR 92,2384
template <class T> struct DataRegion 97,2447
  DataRegion(100,2632
  DataRegion(104,2854
  const T *First;First122,3428
  std::optional<uint64_t> Size;123,3446
  const uint8_t *BufEnd BufEnd124,3478
std::string getSecIndexForError(128,3539
static std::string describe(142,4138
std::string getPhdrIndexForError(152,4527
static inline Error defaultWarningHandler(162,4907
bool checkSectionOffsets(167,5021
bool checkSectionVMA(185,5659
bool isSectionInSegment(204,6370
class ELFFile 211,6602
  const uint8_t *base(base222,7043
  const uint8_t *end(end223,7103
  size_t getBufSize(225,7167
  StringRef Buf;228,7228
  std::vector<Elf_Shdr> FakeSections;229,7245
  SmallString<0> FakeSectionStrings;230,7283
  const Elf_Ehdr &getHeader(getHeader235,7359
  Expected<Expected280,9359
  bool isLE(285,9549
  bool isMipsELF64(289,9638
  bool isMips64EL(294,9782
  Expected<Elf_Sym_Range> symbols(304,10077
  Expected<Elf_Rela_Range> relas(310,10262
  Expected<Elf_Rel_Range> rels(314,10382
  Expected<Elf_Relr_Range> relrs(318,10499
  Expected<Elf_Phdr_Range> program_headers(327,10803
  Elf_Note_Iterator notes_begin(353,12031
  Elf_Note_Iterator notes_begin(381,13241
  Elf_Note_Iterator notes_end(402,14226
  iterator_range<Elf_Note_Iterator> notes(413,14598
  iterator_range<Elf_Note_Iterator> notes(425,15064
  Expected<Expected471,17608
using ELF32LEFile 478,17798
using ELF64LEFile 479,17836
using ELF32BEFile 480,17874
using ELF64BEFile 481,17912
getSection(485,18018
getExtendedSymbolTableIndex(493,18258
ELFFile<ELFT>::getSectionIndex(getSectionIndex511,18969
ELFFile<ELFT>::getSection(getSection528,19545
ELFFile<ELFT>::getSection(getSection538,19883
ELFFile<ELFT>::getSymbol(getSymbol551,20296
ELFFile<ELFT>::getSectionContentsAsArray(getSectionContentsAsArray567,20809
ELFFile<ELFT>::getSegmentContents(getSegmentContents603,22471
ELFFile<ELFT>::getSectionContents(getSectionContents623,23419
StringRef ELFFile<ELFT>::getRelocationTypeName(getRelocationTypeName628,23557
void ELFFile<ELFT>::getRelocationTypeName(getRelocationTypeName633,23716
uint32_t ELFFile<ELFT>::getRelativeRelocationType(getRelativeRelocationType664,24934
ELFFile<ELFT>::loadVersionMap(loadVersionMap670,25135
ELFFile<ELFT>::getRelocationSymbol(getRelocationSymbol707,26333
ELFFile<ELFT>::getSectionStringTable(getSectionStringTable717,26630
getDynSymtabSizeFromGnuHash(748,27823
Expected<uint64_t> ELFFile<ELFT>::getDynSymtabSize(getDynSymtabSize776,28870
template <class ELFT> ELFFile<ELFT>::ELFFile(ELFFile836,30928
Expected<ELFFile<ELFT>> ELFFile<ELFT>::create(create839,31031
template <class ELFT> void ELFFile<ELFT>::createFakeSections(createFakeSections850,31579
Expected<typename ELFT::ShdrRange> ELFFile<ELFT>::sections(sections876,32441
Expected<const T *> ELFFile<ELFT>::getEntry(getEntry929,34542
Expected<const T *> ELFFile<ELFT>::getEntry(getEntry939,34849
Expected<StringRef> ELFFile<ELFT>::getSymbolVersionByIndex(getSymbolVersionByIndex956,35470
ELFFile<ELFT>::getVersionDefinitions(getVersionDefinitions985,36568
ELFFile<ELFT>::getVersionDependencies(getVersionDependencies1072,39826
ELFFile<ELFT>::getSection(getSection1160,43169
ELFFile<ELFT>::getStringTable(getStringTable1169,43405
ELFFile<ELFT>::getSHNDXTable(getSHNDXTable1195,44526
ELFFile<ELFT>::getSHNDXTable(getSHNDXTable1204,44797
ELFFile<ELFT>::getStringTableForSymtab(getStringTableForSymtab1233,45904
ELFFile<ELFT>::getStringTableForSymtab(getStringTableForSymtab1242,46167
ELFFile<ELFT>::getLinkAsStrtab(getLinkAsStrtab1257,46719
ELFFile<ELFT>::getSectionName(getSectionName1274,47377
Expected<StringRef> ELFFile<ELFT>::getSectionName(getSectionName1286,47771
inline uint32_t hashSysV(1303,48612
inline uint32_t hashGnu(1315,49030

/usr/include/llvm/Object/ELFObjectFile.h,7401
#define LLVM_OBJECT_ELFOBJECTFILE_H14,549
struct ELFPltEntry 50,1576
  StringRef Section;51,1597
  std::optional<DataRefImpl> Symbol;52,1618
  uint64_t Address;53,1655
class ELFObjectFileBase 56,1679
  using elf_symbol_iterator_range 85,2772
  static bool classof(94,3072
class ELFSectionRef 124,4337
  ELFSectionRef(126,4387
  const ELFObjectFileBase *getObject(getObject130,4508
  uint32_t getType(134,4621
  uint64_t getFlags(138,4716
  uint64_t getOffset(142,4813
class elf_section_iterator 147,4915
  elf_section_iterator(149,4978
  const ELFSectionRef *operator->(operator->153,5109
  const ELFSectionRef &operator*(operator*157,5237
class ELFSymbolRef 162,5366
  ELFSymbolRef(164,5414
  const ELFObjectFileBase *getObject(getObject168,5531
  uint64_t getSize(172,5648
  uint8_t getBinding(176,5742
  uint8_t getOther(180,5841
  uint8_t getELFType(184,5936
  StringRef getELFTypeName(188,6035
class elf_symbol_iterator 199,6243
  elf_symbol_iterator(201,6304
  const ELFSymbolRef *operator->(operator->205,6496
  const ELFSymbolRef &operator*(operator*209,6621
class ELFRelocationRef 214,6747
  ELFRelocationRef(216,6803
  const ELFObjectFileBase *getObject(getObject220,6936
  Expected<int64_t> getAddend(224,7052
class elf_relocation_iterator 229,7166
  elf_relocation_iterator(231,7235
  const ELFRelocationRef *operator->(operator->235,7416
  const ELFRelocationRef &operator*(operator*240,7562
ELFObjectFileBase::symbols(symbols247,7761
template <class ELFT> class ELFObjectFile 251,7867
  LLVM_ELF_IMPORT_TYPES_ELFT(257,8084
  ELFSymbolRef toSymbolRef(263,8221
  bool IsContentValid(267,8368
  bool ContentValid 274,8620
  ELFFile<ELFT> EF;277,8661
  const Elf_Shdr *DotDynSymSec DotDynSymSec279,8682
  const Elf_Shdr *DotSymtabSec DotSymtabSec280,8757
  const Elf_Shdr *DotSymtabShndxSec DotSymtabShndxSec281,8824
  DataRefImpl toDRI(334,11699
  const Elf_Shdr *toELFShdrIter(toELFShdrIter359,12361
  DataRefImpl toDRI(363,12477
  DataRefImpl toDRI(369,12614
  bool isExportedToOtherDSO(375,12750
  Error getBuildAttributes(388,13288
  bool isDyldELFObject 415,14246
  Expected<const Elf_Sym *> getSymbol(425,14576
  const Elf_Shdr *getRelSection(getRelSection430,14759
  const Elf_Shdr *getSection(getSection438,15012
  bool is64Bit(445,15234
  unsigned getPlatformFlags(461,15818
  const ELFFile<ELFT> &getELFFile(getELFFile463,15899
  bool isDyldType(465,15957
  static bool classof(466,16011
  void createFakeSections(476,16316
using ELF32LEObjectFile 479,16377
using ELF64LEObjectFile 480,16427
using ELF32BEObjectFile 481,16477
using ELF64BEObjectFile 482,16527
void ELFObjectFile<ELFT>::moveSymbolNext(moveSymbolNext485,16600
template <class ELFT> Error ELFObjectFile<ELFT>::initContent(initContent489,16683
Expected<StringRef> ELFObjectFile<ELFT>::getSymbolName(getSymbolName519,17326
uint64_t ELFObjectFile<ELFT>::getSectionFlags(getSectionFlags549,18363
uint32_t ELFObjectFile<ELFT>::getSectionType(getSectionType554,18495
uint64_t ELFObjectFile<ELFT>::getSectionOffset(getSectionOffset559,18625
uint64_t ELFObjectFile<ELFT>::getSymbolValueImpl(getSymbolValueImpl564,18759
ELFObjectFile<ELFT>::getSymbolAddress(getSymbolAddress584,19353
uint32_t ELFObjectFile<ELFT>::getSymbolAlignment(getSymbolAlignment630,20616
uint16_t ELFObjectFile<ELFT>::getEMachine(getEMachine640,20929
template <class ELFT> uint16_t ELFObjectFile<ELFT>::getEType(getEType644,21019
uint64_t ELFObjectFile<ELFT>::getSymbolSize(getSymbolSize649,21147
uint64_t ELFObjectFile<ELFT>::getCommonSymbolSizeImpl(getCommonSymbolSizeImpl657,21390
uint8_t ELFObjectFile<ELFT>::getSymbolBinding(getSymbolBinding662,21525
uint8_t ELFObjectFile<ELFT>::getSymbolOther(getSymbolOther670,21777
uint8_t ELFObjectFile<ELFT>::getSymbolELFType(getSymbolELFType678,22023
ELFObjectFile<ELFT>::getSymbolType(getSymbolType687,22298
Expected<uint32_t> ELFObjectFile<ELFT>::getSymbolFlags(getSymbolFlags711,22899
ELFObjectFile<ELFT>::getSymbolSection(getSymbolSection813,26501
ELFObjectFile<ELFT>::getSymbolSection(getSymbolSection840,27281
void ELFObjectFile<ELFT>::moveSectionNext(moveSectionNext852,27631
Expected<StringRef> ELFObjectFile<ELFT>::getSectionName(getSectionName858,27789
uint64_t ELFObjectFile<ELFT>::getSectionAddress(getSectionAddress863,27941
uint64_t ELFObjectFile<ELFT>::getSectionIndex(getSectionIndex868,28074
uint64_t ELFObjectFile<ELFT>::getSectionSize(getSectionSize879,28485
ELFObjectFile<ELFT>::getSectionContents(getSectionContents885,28643
uint64_t ELFObjectFile<ELFT>::getSectionAlignment(getSectionAlignment897,29115
bool ELFObjectFile<ELFT>::isSectionCompressed(isSectionCompressed902,29255
bool ELFObjectFile<ELFT>::isSectionText(isSectionText907,29409
bool ELFObjectFile<ELFT>::isSectionData(isSectionData912,29556
bool ELFObjectFile<ELFT>::isSectionBSS(isSectionBSS920,29832
ELFObjectFile<ELFT>::dynamic_relocation_sections(dynamic_relocation_sections928,30096
bool ELFObjectFile<ELFT>::isSectionVirtual(isSectionVirtual956,30919
bool ELFObjectFile<ELFT>::isBerkeleyText(isBerkeleyText961,31066
bool ELFObjectFile<ELFT>::isBerkeleyData(isBerkeleyData968,31330
bool ELFObjectFile<ELFT>::isDebugSection(isDebugSection975,31577
ELFObjectFile<ELFT>::section_rel_begin(section_rel_begin989,32067
ELFObjectFile<ELFT>::section_rel_end(section_rel_end1002,32520
ELFObjectFile<ELFT>::getRelocatedSection(getRelocatedSection1022,33287
void ELFObjectFile<ELFT>::moveRelocationNext(moveRelocationNext1036,33733
ELFObjectFile<ELFT>::getRelocationSymbol(getRelocationSymbol1042,33858
uint64_t ELFObjectFile<ELFT>::getRelocationOffset(getRelocationOffset1060,34395
uint64_t ELFObjectFile<ELFT>::getRelocationType(getRelocationType1069,34643
StringRef ELFObjectFile<ELFT>::getRelocationTypeName(getRelocationTypeName1078,34929
void ELFObjectFile<ELFT>::getRelocationTypeName(getRelocationTypeName1083,35097
ELFObjectFile<ELFT>::getRelocationAddend(getRelocationAddend1091,35333
ELFObjectFile<ELFT>::getRel(getRel1099,35615
ELFObjectFile<ELFT>::getRela(getRela1109,35960
ELFObjectFile<ELFT>::create(create1119,36295
ELFObjectFile<ELFT>::ELFObjectFile(ELFObjectFile1133,36738
ELFObjectFile<ELFT>::ELFObjectFile(ELFObjectFile1145,37303
basic_symbol_iterator ELFObjectFile<ELFT>::symbol_begin(symbol_begin1150,37520
basic_symbol_iterator ELFObjectFile<ELFT>::symbol_end(symbol_end1158,37790
elf_symbol_iterator ELFObjectFile<ELFT>::dynamic_symbol_begin(dynamic_symbol_begin1167,38086
elf_symbol_iterator ELFObjectFile<ELFT>::dynamic_symbol_end(dynamic_symbol_end1177,38553
section_iterator ELFObjectFile<ELFT>::section_begin(section_begin1186,38863
section_iterator ELFObjectFile<ELFT>::section_end(section_end1194,39131
uint8_t ELFObjectFile<ELFT>::getBytesInAddress(getBytesInAddress1202,39395
StringRef ELFObjectFile<ELFT>::getFileFormatName(getFileFormatName1207,39510
template <class ELFT> Triple::ArchType ELFObjectFile<ELFT>::getArch(getArch1286,41759
template <class ELFT> Triple::OSType ELFObjectFile<ELFT>::getOS(getOS1386,44514
Expected<uint64_t> ELFObjectFile<ELFT>::getStartAddress(getStartAddress1416,45330
ELFObjectFile<ELFT>::getDynamicSymbolIterators(getDynamicSymbolIterators1422,45499
template <class ELFT> bool ELFObjectFile<ELFT>::isRelocatableObject(isRelocatableObject1426,45626

/usr/include/llvm/Object/ELFTypes.h,9362
#define LLVM_OBJECT_ELFTYPES_H10,401
template <endianness E, bool Is64> struct ELFType 48,1698
  using packed = support::detail::packed_endian_specific_integral<Ty, E,51,1784
  using uint = std::conditional_t<Is64, uint64_t,57,1956
using ELF32LE 95,3498
using ELF32BE 96,3556
using ELF64LE 97,3611
using ELF64BE 98,3668
#define LLVM_ELF_IMPORT_TYPES_ELFT(104,3894
#define LLVM_ELF_COMMA 141,6781
#define LLVM_ELF_IMPORT_TYPES(142,6806
  Elf_Word sh_type;152,7222
  Elf_Word sh_flags;153,7271
  Elf_Addr sh_addr;154,7321
  Elf_Off sh_offset;155,7387
  Elf_Word sh_size;156,7453
  Elf_Word sh_link;157,7507
  Elf_Word sh_info;158,7581
  Elf_Word sh_addralign;159,7649
  Elf_Word sh_entsize;160,7703
  Elf_Word sh_type;167,7991
  Elf_Xword sh_flags;168,8041
  Elf_Addr sh_addr;169,8092
  Elf_Off sh_offset;170,8159
  Elf_Xword sh_size;171,8226
  Elf_Word sh_link;172,8281
  Elf_Word sh_info;173,8356
  Elf_Xword sh_addralign;174,8425
  Elf_Xword sh_entsize;175,8480
struct Elf_Shdr_Impl 179,8580
  using Elf_Shdr_Base<ELFT>::sh_entsize;sh_entsize180,8625
  using Elf_Shdr_Base<ELFT>::sh_size;sh_size181,8666
  unsigned getEntityCount(184,8775
  Elf_Addr st_value;197,9148
  Elf_Word st_size;198,9221
  unsigned char st_info;199,9269
  unsigned char st_other;200,9335
  Elf_Half st_shndx;201,9387
  unsigned char st_info;208,9680
  unsigned char st_other;209,9746
  Elf_Half st_shndx;210,9798
  Elf_Addr st_value;211,9878
  Elf_Xword st_size;212,9951
struct Elf_Sym_Impl 216,10025
  using Elf_Sym_Base<ELFT>::st_info;st_info217,10068
  using Elf_Sym_Base<ELFT>::st_shndx;st_shndx218,10105
  using Elf_Sym_Base<ELFT>::st_other;st_other219,10143
  using Elf_Sym_Base<ELFT>::st_value;st_value220,10181
  unsigned char getBinding(224,10366
  unsigned char getType(225,10426
  uint64_t getValue(226,10485
  void setBinding(227,10534
  void setType(228,10606
  void setBindingAndType(230,10679
  unsigned char getVisibility(239,10943
  void setVisibility(240,11008
  bool isAbsolute(245,11144
  bool isCommon(247,11208
  bool isDefined(251,11311
  bool isProcessorSpecific(253,11364
  bool isOSSpecific(257,11477
  bool isReserved(261,11579
  bool isUndefined(267,11781
  bool isExternal(269,11848
Expected<StringRef> Elf_Sym_Impl<ELFT>::getName(getName277,12005
struct Elf_Versym_Impl 291,12639
struct Elf_Verdef_Impl 299,12945
  Elf_Half vd_flags;302,13080
  Elf_Half vd_ndx;303,13132
  Elf_Half vd_cnt;304,13202
  Elf_Word vd_hash;305,13254
  Elf_Word vd_aux;306,13293
  Elf_Word vd_next;307,13364
  const Elf_Verdaux *getAux(getAux310,13485
struct Elf_Verdaux_Impl 318,13790
  Elf_Word vda_next;321,13913
struct Elf_Verneed_Impl 327,14155
  Elf_Half vn_cnt;330,14292
  Elf_Word vn_file;331,14355
  Elf_Word vn_aux;332,14416
  Elf_Word vn_next;333,14483
struct Elf_Vernaux_Impl 339,14730
  Elf_Half vna_flags;342,14840
  Elf_Half vna_other;343,14892
  Elf_Word vna_name;344,14961
  Elf_Word vna_next;345,15002
    Elf_Word d_val;357,15418
    Elf_Addr d_ptr;358,15438
  } d_un;359,15458
    Elf_Xword d_val;367,15644
    Elf_Addr d_ptr;368,15665
  } d_un;369,15685
struct Elf_Dyn_Impl 374,15788
  using Elf_Dyn_Base<ELFT>::d_tag;d_tag375,15831
  using Elf_Dyn_Base<ELFT>::d_un;d_un376,15866
  using intX_t 377,15900
  using intX_t = std::conditional_t<ELFT::Is64Bits, int64_t,377,15900
  using uintX_t 378,15971
  using uintX_t = std::conditional_t<ELFT::Is64Bits, uint64_t,378,15971
  intX_t getTag(379,16045
  uintX_t getVal(380,16087
  uintX_t getPtr(381,16135
  Elf_Addr r_offset;388,16374
  Elf_Word r_info;389,16451
  uint32_t getRInfo(391,16527
  void setRInfo(395,16620
  uint32_t getSymbol(402,16855
  unsigned char getType(405,16949
  void setSymbol(408,17066
  void setType(411,17176
  void setSymbolAndType(414,17291
  Elf_Addr r_offset;431,17934
  Elf_Xword r_info;432,18011
  uint64_t getRInfo(434,18087
  void setRInfo(445,18537
  uint32_t getSymbol(455,18926
  uint32_t getType(458,19033
  void setSymbol(461,19146
  void setType(464,19256
  void setSymbolAndType(467,19366
struct Elf_Ehdr_Impl 481,19867
  Elf_Half e_type;484,19994
  Elf_Half e_machine;485,20062
  Elf_Word e_version;486,20136
  Elf_Addr e_entry;487,20182
  Elf_Off e_phoff;488,20254
  Elf_Off e_shoff;489,20326
  Elf_Word e_flags;490,20398
  Elf_Half e_ehsize;491,20450
  Elf_Half e_phentsize;492,20506
  Elf_Half e_phnum;493,20578
  Elf_Half e_shentsize;494,20651
  Elf_Half e_shnum;495,20723
  Elf_Half e_shstrndx;496,20796
  bool checkMagic(499,20907
  unsigned char getFileClass(503,21013
  unsigned char getDataEncoding(504,21085
  Elf_Off p_offset;511,21348
  Elf_Addr p_vaddr;512,21418
  Elf_Addr p_paddr;513,21482
  Elf_Word p_filesz;514,21561
  Elf_Word p_memsz;515,21638
  Elf_Word p_flags;516,21714
  Elf_Word p_align;517,21752
  Elf_Word p_flags;524,21993
  Elf_Off p_offset;525,22032
  Elf_Addr p_vaddr;526,22103
  Elf_Addr p_paddr;527,22168
  Elf_Xword p_filesz;528,22248
  Elf_Xword p_memsz;529,22326
  Elf_Xword p_align;530,22403
struct Elf_Hash_Impl 535,22514
  Elf_Word nchain;538,22592
  ArrayRef<Elf_Word> buckets(540,22612
  ArrayRef<Elf_Word> chains(544,22725
struct Elf_GnuHash_Impl 552,22932
  Elf_Word symndx;555,23014
  Elf_Word maskwords;556,23033
  Elf_Word shift2;557,23055
  ArrayRef<Elf_Off> filter(559,23075
  ArrayRef<Elf_Word> buckets(564,23235
  ArrayRef<Elf_Word> values(569,23381
  Elf_Word ch_size;581,23841
  Elf_Word ch_addralign;582,23861
  Elf_Word ch_reserved;589,24053
  Elf_Xword ch_size;590,24077
  Elf_Xword ch_addralign;591,24098
struct Elf_Nhdr_Impl 596,24166
  Elf_Word n_descsz;599,24245
  Elf_Word n_type;600,24266
  size_t getSize(606,24546
class Elf_Note_Impl 617,24836
  const Elf_Nhdr_Impl<ELFT> &Nhdr;Nhdr620,24894
  Elf_Note_Impl(625,25012
  StringRef getName(628,25142
  ArrayRef<uint8_t> getDesc(636,25376
  StringRef getDescAsStringRef(646,25705
  Elf_Word getType(652,25915
template <class ELFT> class Elf_Note_Iterator_Impl 655,25970
  using iterator_category 657,26031
  using value_type 658,26086
  using difference_type 659,26128
  using pointer 660,26170
  using reference 661,26202
  const Elf_Nhdr_Impl<ELFT> *Nhdr Nhdr665,26300
  size_t RemainingSize 666,26345
  size_t Align 667,26374
  Error *Err Err668,26394
  void stopWithOverflowError(673,26519
  void advanceNhdr(684,26989
  explicit Elf_Note_Iterator_Impl(703,27605
  Elf_Note_Iterator_Impl(704,27666
  Elf_Note_Iterator_Impl &operator++(operator++713,27966
  bool operator==(operator==720,28236
  bool operator!=(operator!=727,28441
  Elf_Note_Impl<ELFT> operator*(730,28531
template <class ELFT> struct Elf_CGProfile_Impl 736,28678
  Elf_Word ri_cprmask[ri_cprmask749,29083
  Elf_Addr ri_gp_value;750,29153
  Elf_Word ri_pad;757,29422
  Elf_Word ri_cprmask[ri_cprmask758,29473
  Elf_Addr ri_gp_value;759,29543
template <class ELFT> struct Elf_Mips_Options 763,29620
  uint8_t size;766,29783
  Elf_Half section;767,29853
  Elf_Word info;769,29965
  Elf_Mips_RegInfo<ELFT> &getRegInfo(getRegInfo771,30015
  const Elf_Mips_RegInfo<ELFT> &getRegInfo(getRegInfo776,30207
template <class ELFT> struct Elf_Mips_ABIFlags 782,30365
  uint8_t isa_level;785,30498
  uint8_t isa_rev;786,30549
  uint8_t gpr_size;787,30610
  uint8_t cpr1_size;788,30665
  uint8_t cpr2_size;789,30719
  uint8_t fp_abi;790,30773
  Elf_Word isa_ext;791,30821
  Elf_Word ases;792,30874
  Elf_Word flags1;793,30909
  Elf_Word flags2;794,30947
struct BBAddrMap 798,31044
  struct BBEntry 800,31135
    struct Metadata 801,31154
      bool HasReturn 802,31176
      bool HasTailCall 804,31299
      bool IsEHPad 805,31373
      bool CanFallThrough 806,31450
      bool HasIndirectBranch 807,31531
      bool operator==(operator==810,31674
      uint32_t encode(818,32030
      static Expected<Metadata> decode(827,32431
    uint32_t ID;841,33026
    uint32_t Offset;842,33081
    uint32_t Size;843,33155
    Metadata MD;844,33204
    BBEntry(846,33259
    bool operator==(operator==849,33386
    bool hasReturn(854,33551
    bool hasTailCall(855,33603
    bool isEHPad(856,33659
    bool canFallThrough(857,33707
    bool hasIndirectBranch(858,33769
  BBAddrMap(861,33843
  uint64_t getFunctionAddress(865,34014
  const std::vector<BBEntry> &getBBEntries(getBBEntries868,34126
  bool operator==(operator==871,34241
  uint64_t Addr;876,34446
  std::vector<BBEntry> BBEntries;877,34500
struct PGOAnalysisMap 881,34657
  struct Features 883,34753
    bool FuncEntryCount 884,34773
    bool BBFreq 885,34802
    bool BrProb 886,34823
    bool anyEnabled(889,34892
    uint8_t encode(892,35020
    static Expected<Features> decode(900,35320
    bool operator==(operator==911,35734
  struct PGOBBEntry 919,36018
    struct SuccessorEntry 922,36161
      uint32_t ID;924,36240
      BranchProbability Prob;926,36335
      bool operator==(operator==928,36366
    BlockFrequency BlockFreq;934,36550
    llvm::SmallVector<llvm::SmallVector936,36628
    llvm::SmallVector<SuccessorEntry, 2> Successors;936,36628
    bool operator==(operator==938,36682
  uint64_t FuncEntryCount;944,36853
  std::vector<PGOBBEntry> BBEntries;945,36921
  Features FeatEnable;948,37068
  bool operator==(operator==950,37092

/usr/include/llvm/Object/FaultMapParser.h,1100
#define LLVM_OBJECT_FAULTMAPPARSER_H10,407
class FaultMapParser 25,884
  const uint8_t *P;P40,1468
  const uint8_t *E;E41,1488
  template <typename T> static T read(43,1509
  enum FaultKind 49,1721
    FaultingLoad 50,1740
    FaultingLoadStore,51,1762
    FaultingStore,52,1785
    FaultKindMax53,1804
  class FunctionFaultInfoAccessor 56,1827
    const uint8_t *P;P67,2240
    const uint8_t *E;E68,2262
    explicit FunctionFaultInfoAccessor(74,2388
    FaultKindType getFaultKind(77,2488
    FaultingPCOffsetType getFaultingPCOffset(81,2594
    HandlerPCOffsetType getHandlerPCOffset(85,2728
  class FunctionInfoAccessor 90,2863
    explicit FunctionInfoAccessor(110,3548
    FunctionAddrType getFunctionAddr(113,3643
    NumFaultingPCsType getNumFaultingPCs(117,3761
    FunctionFaultInfoAccessor getFunctionFaultInfoAt(121,3887
    FunctionInfoAccessor getNextFunctionInfo(128,4220
  explicit FaultMapParser(138,4543
  FaultMapVersionType getFaultMapVersion(141,4640
  NumFunctionsType getNumFunctions(147,4849
  FunctionInfoAccessor getFirstFunctionInfo(151,4961

/usr/include/llvm/Object/GOFF.h,1593
#define LLVM_OBJECT_GOFF_H15,601
class Record 31,1083
  static Error getContinuousData(33,1106
  static bool isContinued(36,1265
  static bool isContinuation(42,1413
  static void getBits(58,1967
  static void get(69,2437
class HDRRecord 76,2695
  static uint16_t getPropertyModuleLength(80,2817
class ESDRecord 87,2971
  static const uint8_t ESDMaxUncontinuedNameLength 92,3177
  static const uint16_t MaxNameLength 98,3492
  static void getSymbolType(104,3655
  static void getEsdId(111,3874
  static void getParentEsdId(115,3981
  static void getOffset(119,4094
  static void getLength(123,4205
  static void getNameSpaceId(127,4316
  static void getFillBytePresent(133,4495
  static void getNameMangled(139,4657
  static void getRenamable(145,4815
  static void getRemovable(151,4975
  static void getFillByteValue(157,5135
  static void getAdaEsdId(161,5247
  static void getSortPriority(165,5358
  static void getAmode(169,5479
  static void getRmode(175,5646
  static void getTextStyle(181,5813
  static void getBindingAlgorithm(187,5993
  static void getTaskingBehavior(194,6236
  static void getReadOnly(201,6487
  static void getExecutable(207,6644
  static void getDuplicateSeverity(214,6865
  static void getBindingStrength(221,7112
  static void getLoadingBehavior(228,7349
  static void getIndirectReference(235,7586
  static void getBindingScope(241,7752
  static void getLinkageType(248,7971
  static void getAlignment(255,8184
  static uint16_t getNameLength(262,8399
class ENDRecord 269,8543
  static uint16_t getNameLength(273,8665

/usr/include/llvm/Object/GOFFObjectFile.h,1486
#define LLVM_OBJECT_GOFFOBJECTFILE_H15,611
class GOFFObjectFile 31,1020
  IndexedMap<const uint8_t *> EsdPtrs;32,1063
  mutable DenseMap<uint32_t,uint32_t34,1124
  mutable DenseMap<uint32_t, std::pair<std::pair34,1124
      EsdNamesCache;35,1197
  typedef DataRefImpl SectionEntryImpl;37,1219
  SmallVector<SmallVector40,1357
  SmallVector<SectionEntryImpl, 256> SectionList;40,1357
  mutable DenseMap<DenseMap41,1407
  mutable DenseMap<uint32_t, std::string> SectionDataCache;41,1407
  static inline bool classof(47,1592
  uint8_t getBytesInAddress(51,1763
  StringRef getFileFormatName(53,1823
  Triple::ArchType getArch(55,1898
  Expected<SubtargetFeatures> getFeatures(57,1971
  bool isRelocatableObject(59,2063
  bool is64Bit(65,2291
  void moveSectionNext(84,3053
  virtual Expected<StringRef> getSectionName(85,3112
  uint64_t getSectionAddress(88,3219
  uint64_t getSectionSize(89,3294
  getSectionContents(91,3404
  uint64_t getSectionIndex(94,3495
  uint64_t getSectionAlignment(95,3568
  bool isSectionCompressed(96,3645
  bool isSectionText(97,3722
  bool isSectionData(98,3793
  bool isSectionBSS(99,3864
  bool isSectionVirtual(100,3934
  relocation_iterator section_rel_begin(101,4008
  relocation_iterator section_rel_end(104,4144
  void moveRelocationNext(114,4566
  uint64_t getRelocationOffset(115,4628
  symbol_iterator getRelocationSymbol(116,4705
  uint64_t getRelocationType(120,4860
  void getRelocationTypeName(121,4935

/usr/include/llvm/Object/MachO.h,6701
#define LLVM_OBJECT_MACHO_H15,595
class DiceRef 44,1479
  DataRefImpl DicePimpl;45,1495
  DiceRef(50,1596
  bool operator<(const DiceRef &Other) const;53,1699
  void moveNext(55,1746
using dice_iterator 64,2011
class ExportEntry 73,2423
  struct NodeState 98,3028
    const uint8_t *Start;Start101,3085
    const uint8_t *Current;Current102,3111
  using NodeList 112,3386
  using node_iterator 113,3433
  Error *E;E115,3484
  const MachOObjectFile *O;O116,3496
  ArrayRef<uint8_t> Trie;117,3524
  SmallString<256> CumulativeString;118,3550
  NodeList Stack;119,3587
  bool Done 120,3605
  iterator_range<node_iterator> nodes(122,3627
using export_iterator 126,3733
class BindRebaseSegInfo 132,4044
  struct SectionInfo 146,4642
    uint64_t Address;147,4665
    uint64_t Size;148,4687
    StringRef SectionName;149,4706
    StringRef SegmentName;150,4733
    uint64_t OffsetInSegment;151,4760
    uint64_t SegmentStartAddress;152,4790
    int32_t SegmentIndex;153,4824
  SmallVector<SmallVector157,4928
  SmallVector<SectionInfo, 32> Sections;157,4928
  int32_t MaxSegIndex;158,4969
class MachORebaseEntry 168,5338
  Error *E;E191,5882
  const MachOObjectFile *O;O192,5894
  ArrayRef<uint8_t> Opcodes;193,5922
  const uint8_t *Ptr;Ptr194,5951
  uint64_t SegmentOffset 195,5973
  int32_t SegmentIndex 196,6003
  uint64_t RemainingLoopCount 197,6032
  uint64_t AdvanceAmount 198,6067
  uint8_t  RebaseType 199,6097
  uint8_t  PointerSize;200,6124
  bool     Done 201,6148
using rebase_iterator 203,6176
class MachOBindEntry 212,6572
  enum class Kind 214,6603
  enum class Kind { Regular,214,6603
  enum class Kind { Regular, Lazy,214,6603
  enum class Kind { Regular, Lazy, Weak 214,6603
  Error *E;E243,7325
  const MachOObjectFile *O;O244,7337
  ArrayRef<uint8_t> Opcodes;245,7365
  const uint8_t *Ptr;Ptr246,7394
  uint64_t SegmentOffset 247,7416
  int32_t  SegmentIndex 248,7446
  StringRef SymbolName;249,7476
  bool     LibraryOrdinalSet 250,7500
  int      Ordinal 251,7538
  uint32_t Flags 252,7562
  int64_t  Addend 253,7584
  uint64_t RemainingLoopCount 254,7607
  uint64_t AdvanceAmount 255,7642
  uint8_t  BindType 256,7672
  uint8_t  PointerSize;257,7697
  Kind     TableKind;258,7721
  bool     Done 259,7743
using bind_iterator 261,7771
struct ChainedFixupTarget 275,8503
  ChainedFixupTarget(277,8539
  int libOrdinal(282,8797
  uint32_t nameOffset(283,8839
  StringRef symbolName(284,8886
  uint64_t addend(285,8934
  bool weakImport(286,8973
  bool weakBind(287,9016
  int LibOrdinal;292,9114
  uint32_t NameOffset;293,9132
  StringRef SymbolName;294,9155
  uint64_t Addend;295,9179
  bool WeakImport;296,9198
struct ChainedFixupsSegment 299,9221
  ChainedFixupsSegment(300,9251
  uint32_t SegIdx;306,9533
  uint32_t Offset;307,9552
  MachO::dyld_chained_starts_in_segment Header;308,9628
  std::vector<uint16_t> PageStarts;309,9676
class MachOAbstractFixupEntry 322,10323
  uint64_t pointerValue(344,11064
  uint64_t rawValue(351,11411
  Error *E;E356,11492
  const MachOObjectFile *O;O357,11504
  uint64_t SegmentOffset 358,11532
  int32_t SegmentIndex 359,11562
  StringRef SymbolName;360,11591
  int32_t Ordinal 361,11615
  uint32_t Flags 362,11638
  int64_t Addend 363,11660
  uint64_t PointerValue 364,11682
  uint64_t RawValue 365,11711
  bool Done 366,11736
  uint64_t textAddress(372,11862
  uint64_t TextAddress;375,11927
class MachOChainedFixupEntry 378,11955
  enum class FixupKind 380,12027
  enum class FixupKind { Bind,380,12027
  enum class FixupKind { Bind, Rebase 380,12027
  bool isBind(386,12204
  bool isRebase(387,12262
  std::vector<ChainedFixupTarget> FixupTargets;396,12430
  std::vector<ChainedFixupsSegment> Segments;397,12478
  ArrayRef<uint8_t> SegmentData;398,12524
  FixupKind Kind;399,12557
  uint32_t InfoSegIndex 400,12575
  uint32_t PageIndex 401,12627
  uint32_t PageOffset 402,12702
using fixup_iterator 404,12770
class MachOObjectFile 406,12836
  struct LoadCommandInfo 408,12888
    const char *Ptr;Ptr409,12915
    MachO::load_command C;410,12981
  using LoadCommandList 412,13036
  using load_command_iterator 413,13095
  iterator_range<relocation_iterator> external_relocations(479,16350
  Expected<SubtargetFeatures> getFeatures(520,17900
  const char *BindEntryCheckSegAndOffsets(BindEntryCheckSegAndOffsets578,20570
  const char *RebaseEntryCheckSegAndOffsets(RebaseEntryCheckSegAndOffsets591,21317
  StringRef BindRebaseSegmentName(602,21904
  StringRef BindRebaseSectionName(608,22146
  uint64_t BindRebaseAddress(614,22415
  Expected<Expected735,28368
  bool hasPageZeroSegment(764,29499
  size_t getMachOFilesetEntryOffset(766,29565
  static bool classof(768,29646
  getVersionMinMajor(773,29735
  getVersionMinMinor(779,29919
  getVersionMinUpdate(785,30100
  static std::string getBuildPlatform(790,30257
#define PLATFORM(792,30340
  static std::string getBuildTool(805,30787
  static std::string getVersionString(820,31176
    MachO::mach_header_64 Header64;848,32276
    MachO::mach_header Header;849,32312
  using SectionList 851,32348
  SectionList Sections;852,32399
  using LibraryList 853,32423
  LibraryList Libraries;854,32474
  LoadCommandList LoadCommands;855,32499
  using LibraryShortName 856,32531
  using BuildToolList 857,32585
  BuildToolList BuildTools;858,32638
  mutable LibraryShortName LibrariesShortNames;859,32666
  std::unique_ptr<BindRebaseSegInfo> BindRebaseSectionTable;860,32714
  const char *SymtabLoadCmd SymtabLoadCmd861,32775
  const char *DysymtabLoadCmd DysymtabLoadCmd862,32814
  const char *DataInCodeLoadCmd DataInCodeLoadCmd863,32855
  const char *LinkOptHintsLoadCmd LinkOptHintsLoadCmd864,32898
  const char *DyldInfoLoadCmd DyldInfoLoadCmd865,32943
  const char *FuncStartsLoadCmd FuncStartsLoadCmd866,32984
  const char *DyldChainedFixupsLoadCmd DyldChainedFixupsLoadCmd867,33027
  const char *DyldExportsTrieLoadCmd DyldExportsTrieLoadCmd868,33077
  const char *UuidLoadCmd UuidLoadCmd869,33125
  bool HasPageZeroSegment 870,33162
  size_t MachOFilesetEntryOffset 871,33197
inline DiceRef::DiceRef(875,33251
inline bool DiceRef::operator==(operator==878,33366
inline bool DiceRef::operator<(operator<882,33470
inline void DiceRef::moveNext(moveNext886,33572
inline std::error_code DiceRef::getOffset(getOffset896,33996
inline std::error_code DiceRef::getLength(getLength904,34274
inline std::error_code DiceRef::getKind(getKind912,34552
inline DataRefImpl DiceRef::getRawDataRefImpl(getRawDataRefImpl920,34826
inline const ObjectFile *DiceRef::getObjectFile(getObjectFile924,34905

/usr/include/llvm/Object/MachOUniversalWriter.h,638
#define LLVM_OBJECT_MACHOUNIVERSALWRITER_H15,608
class Slice 34,979
  const Binary *B;B35,993
  uint32_t CPUType;36,1012
  uint32_t CPUSubType;37,1032
  std::string ArchName;38,1055
  uint32_t P2Alignment;43,1284
  void setP2Alignment(64,2013
  const Binary *getBinary(getBinary66,2077
  uint32_t getCPUType(68,2126
  uint32_t getCPUSubType(70,2177
  uint32_t getP2Alignment(72,2234
  uint64_t getCPUID(74,2293
  std::string getArchString(78,2390
  friend bool operator<(86,2611
enum class FatHeaderType 100,3089
enum class FatHeaderType { FatHeader,100,3089
enum class FatHeaderType { FatHeader, Fat64Header 100,3089

/usr/include/llvm/Object/ObjectFile.h,5296
#define LLVM_OBJECT_OBJECTFILE_H14,556
typedef std::function<bool(bool49,1362
class RelocationRef 52,1552
  DataRefImpl RelocationPimpl;53,1574
using relocation_iterator 77,2178
class SectionRef 81,2352
  DataRefImpl SectionPimpl;84,2398
  const ObjectFile *OwningObject OwningObject85,2426
  iterator_range<relocation_iterator> relocations(133,4016
struct SectionedAddress 145,4429
  const static uint64_t UndefSection 146,4455
  uint64_t Address 148,4507
  uint64_t SectionIndex 149,4531
inline bool operator<(152,4575
inline bool operator==(operator==158,4783
class SymbolRef 168,5177
  enum Type 172,5255
    ST_Unknown,173,5269
    ST_Other,174,5307
    ST_Data,175,5321
    ST_Debug,176,5334
    ST_File,177,5348
    ST_Function,178,5361
  SymbolRef(183,5468
class symbol_iterator 208,6324
  symbol_iterator(210,6387
  symbol_iterator(211,6452
  const SymbolRef *operator->(operator->215,6645
  const SymbolRef &operator*(operator*220,6803
class ObjectFile 229,7137
  const uint8_t *base(base235,7273
  mapReflectionSectionNameToEnumValue(296,10422
  uint64_t getCommonSymbolSize(306,10710
  virtual std::vector<SectionRef> dynamic_relocation_sections(315,11064
  using symbol_iterator_range 319,11179
  symbol_iterator_range symbols(320,11244
  using section_iterator_range 327,11462
  section_iterator_range sections(328,11529
  virtual Triple::OSType getOS(340,11928
  virtual std::optional<StringRef> tryGetCPUName(342,12060
  virtual void setARMSubArch(345,12149
  virtual Expected<uint64_t> getStartAddress(346,12207
  virtual StringRef mapDebugSectionName(354,12478
  createObjectFile(375,13366
  static bool classof(379,13480
class SectionFilterIterator 406,14428
  SectionFilterIterator(408,14466
  const SectionRef &operator*(operator*414,14716
  SectionFilterIterator &operator++(operator++415,14776
  bool operator!=(operator!=420,14875
  void scanPredicate(425,14990
  SectionFilterPredicate Predicate;430,15098
  section_iterator Iterator;431,15134
  section_iterator End;432,15163
class SectionFilter 437,15285
  SectionFilter(439,15315
  SectionFilterIterator begin(441,15434
  SectionFilterIterator end(445,15596
  SectionFilterPredicate Predicate;451,15764
  const ObjectFile &Object;Object452,15800
inline SymbolRef::SymbolRef(456,15864
inline Expected<StringRef> SymbolRef::getName(getName459,15979
inline Expected<uint64_t> SymbolRef::getAddress(getAddress463,16096
inline Expected<uint64_t> SymbolRef::getValue(getValue467,16218
inline uint32_t SymbolRef::getAlignment(getAlignment471,16336
inline uint64_t SymbolRef::getCommonSize(getCommonSize475,16452
inline Expected<section_iterator> SymbolRef::getSection(getSection479,16570
inline Expected<SymbolRef::Type> SymbolRef::getType(getType483,16700
inline const ObjectFile *SymbolRef::getObject(getObject487,16823
inline SectionRef::SectionRef(493,16982
inline bool SectionRef::operator==(operator==498,17144
inline bool SectionRef::operator!=(operator!=503,17307
inline bool SectionRef::operator<(operator<507,17406
inline void SectionRef::moveNext(moveNext512,17566
inline Expected<StringRef> SectionRef::getName(getName516,17660
inline uint64_t SectionRef::getAddress(getAddress520,17773
inline uint64_t SectionRef::getIndex(getIndex524,17881
inline uint64_t SectionRef::getSize(getSize528,17985
inline Expected<StringRef> SectionRef::getContents(getContents532,18087
inline Align SectionRef::getAlignment(getAlignment540,18359
inline bool SectionRef::isCompressed(isCompressed545,18500
inline bool SectionRef::isText(isText549,18608
inline bool SectionRef::isData(isData553,18704
inline bool SectionRef::isBSS(isBSS557,18800
inline bool SectionRef::isVirtual(isVirtual561,18894
inline bool SectionRef::isBitcode(isBitcode565,18996
inline bool SectionRef::isStripped(isStripped569,19098
inline bool SectionRef::isBerkeleyText(isBerkeleyText573,19202
inline bool SectionRef::isBerkeleyData(isBerkeleyData577,19307
inline bool SectionRef::isDebugSection(isDebugSection581,19412
inline relocation_iterator SectionRef::relocation_begin(relocation_begin585,19517
inline relocation_iterator SectionRef::relocation_end(relocation_end589,19642
inline Expected<section_iterator> SectionRef::getRelocatedSection(getRelocatedSection593,19763
inline DataRefImpl SectionRef::getRawDataRefImpl(getRawDataRefImpl597,19900
inline const ObjectFile *SectionRef::getObject(getObject601,19985
inline RelocationRef::RelocationRef(606,20086
inline bool RelocationRef::operator==(operator==611,20263
inline void RelocationRef::moveNext(moveNext615,20391
inline uint64_t RelocationRef::getOffset(getOffset619,20494
inline symbol_iterator RelocationRef::getSymbol(getSymbol623,20609
inline uint64_t RelocationRef::getType(getType627,20731
inline void RelocationRef::getTypeName(getTypeName631,20842
inline DataRefImpl RelocationRef::getRawDataRefImpl(getRawDataRefImpl635,20994
inline const ObjectFile *RelocationRef::getObject(getObject639,21085
template <> struct DenseMapInfo<DenseMapInfo645,21198
  static bool isEqual(646,21252
  static object::SectionRef getEmptyKey(650,21379
  static object::SectionRef getTombstoneKey(653,21471
  static unsigned getHashValue(658,21621

/usr/include/llvm/Object/OffloadBinary.h,2142
#define LLVM_OBJECT_OFFLOADBINARY_H18,890
enum OffloadKind 33,1238
  OFK_None 34,1268
  OFK_OpenMP,35,1284
  OFK_Cuda,36,1298
  OFK_HIP,37,1310
  OFK_LAST,38,1321
enum ImageKind 42,1393
  IMG_None 43,1421
  IMG_Object,44,1437
  IMG_Bitcode,45,1451
  IMG_Cubin,46,1466
  IMG_Fatbinary,47,1479
  IMG_PTX,48,1496
  IMG_LAST,49,1507
class OffloadBinary 61,2070
  using string_iterator 63,2116
  using string_iterator = MapVector<StringRef, StringRef>::const_iterator;const_iterator63,2116
  using string_iterator_range 64,2191
  static const uint32_t Version 67,2331
  struct OffloadingImage 70,2443
    ImageKind TheImageKind;71,2470
    OffloadKind TheOffloadKind;72,2498
    uint32_t Flags;73,2530
    MapVector<MapVector74,2550
    MapVector<StringRef, StringRef> StringData;74,2550
    std::unique_ptr<MemoryBuffer> Image;75,2598
  static uint64_t getAlignment(84,2919
  ImageKind getImageKind(86,2967
  OffloadKind getOffloadKind(87,3035
  uint32_t getVersion(88,3109
  uint32_t getFlags(89,3170
  uint64_t getSize(90,3226
  StringRef getTriple(92,3282
  StringRef getArch(93,3344
  StringRef getImage(94,3402
  string_iterator_range strings(99,3575
  StringRef getString(103,3694
  static bool classof(105,3773
  struct Header 107,3844
    uint64_t Size;110,4010
    uint64_t EntryOffset;111,4076
    uint64_t EntrySize;112,4144
  struct Entry 115,4216
    ImageKind TheImageKind;116,4233
    OffloadKind TheOffloadKind;117,4298
    uint32_t Flags;118,4361
    uint64_t StringOffset;119,4440
    uint64_t NumStrings;120,4510
    uint64_t ImageOffset;121,4582
    uint64_t ImageSize;122,4661
  struct StringEntry 125,4737
    uint64_t KeyOffset;126,4760
    uint64_t ValueOffset;127,4784
  OffloadBinary(131,4825
  MapVector<MapVector146,5479
  MapVector<StringRef, StringRef> StringData;146,5479
  const char *Buffer;Buffer148,5583
  const Header *TheHeader;TheHeader150,5653
  const Entry *TheEntry;TheEntry152,5738
class OffloadFile 157,5866
  using TargetID 159,5931
  OffloadFile(161,5984
  OffloadFile copy(166,6215
  operator TargetID(operator TargetID180,6884

/usr/include/llvm/Object/StackMapParser.h,3459
#define LLVM_OBJECT_STACKMAPPARSER_H10,407
template <llvm::endianness Endianness> class StackMapParser 24,741
  class AccessorIterator 27,843
    AccessorIterator(29,880
    AccessorIterator& operator++(31,925
    AccessorIterator operator++(32,992
    bool operator==(operator==38,1095
    bool operator!=(operator!=42,1192
    AccessorT& operator*(46,1290
    AccessorT* operator->(47,1331
    AccessorT A;50,1386
  class FunctionAccessor 54,1446
    uint64_t getFunctionAddress(59,1551
    uint64_t getStackSize(64,1671
    uint64_t getRecordCount(69,1809
    FunctionAccessor(74,1922
    FunctionAccessor next(78,2039
    const uint8_t *P;P82,2139
  class ConstantAccessor 86,2197
    uint64_t getValue(91,2311
    ConstantAccessor(94,2383
    ConstantAccessor next(98,2496
    const uint8_t *P;P102,2596
  enum class LocationKind 105,2624
    Register 106,2662
    Register = 1, Direct 106,2662
    Register = 1, Direct = 2, Indirect 106,2662
    Register = 1, Direct = 2, Indirect = 3, Constant 106,2662
    Register = 1, Direct = 2, Indirect = 3, Constant = 4, ConstantIndex 106,2662
  class LocationAccessor 110,2781
    LocationKind getKind(116,2925
    unsigned getSizeInBytes(121,3049
    uint16_t getDwarfRegNum(127,3199
    uint32_t getSmallConstant(132,3371
    uint32_t getConstantIndex(138,3630
    int32_t getOffset(145,3904
    LocationAccessor(153,4153
    LocationAccessor next(155,4203
    const uint8_t *P;P165,4640
  class LiveOutAccessor 169,4713
    uint16_t getDwarfRegNum(175,4873
    unsigned getSizeInBytes(180,5023
    LiveOutAccessor(185,5123
    LiveOutAccessor next(187,5172
    const uint8_t *P;P196,5471
  class RecordAccessor 200,5536
    uint64_t getID(208,5792
    uint32_t getInstructionOffset(214,5985
    uint16_t getNumLocations(219,6156
    LocationAccessor getLocation(224,6302
    location_iterator location_begin(231,6554
    location_iterator location_end(236,6692
    iterator_range<location_iterator> locations(241,6846
    uint16_t getNumLiveOuts(246,7031
    LiveOutAccessor getLiveOut(251,7180
    liveout_iterator liveouts_begin(258,7447
    liveout_iterator liveouts_end(263,7582
    iterator_range<liveout_iterator> liveouts(268,7732
    RecordAccessor(273,7865
    unsigned getNumLiveOutsOffset(275,7913
    unsigned getSizeInBytes(281,8116
    RecordAccessor next(287,8311
    const uint8_t *P;P301,8895
  StackMapParser(306,9029
  static Error validateHeader(324,9712
  unsigned getVersion(345,10591
  uint32_t getNumFunctions(348,10688
  uint32_t getNumConstants(353,10853
  uint32_t getNumRecords(358,11018
  FunctionAccessor getFunction(363,11184
  function_iterator functions_begin(369,11404
  function_iterator functions_end(374,11535
  iterator_range<function_iterator> functions(381,11775
  ConstantAccessor getConstant(386,11947
  constant_iterator constants_begin(392,12167
  constant_iterator constants_end(397,12298
  iterator_range<constant_iterator> constants(404,12538
  RecordAccessor getRecord(409,12716
  record_iterator records_begin(415,12945
  record_iterator records_end(422,13151
  iterator_range<record_iterator> records(432,13598
  static T read(438,13743
  std::size_t getFunctionOffset(451,14324
  std::size_t getConstantOffset(455,14455
  ArrayRef<uint8_t> StackMapSection;459,14587
  unsigned ConstantsListOffset;460,14624
  std::vector<unsigned> StackMapRecordOffsets;461,14656

/usr/include/llvm/Object/TapiFile.h,473
#define LLVM_OBJECT_TAPIFILE_H14,534
class TapiFile 31,916
  TapiFile(33,963
  ~TapiFile(35,1075
  bool hasSegmentInfo(49,1479
  static bool classof(51,1552
  bool is64Bit(53,1620
  struct Symbol 56,1695
    StringRef Prefix;57,1713
    StringRef Name;58,1735
    uint32_t Flags;59,1755
    SymbolRef::Type Type;60,1775
    constexpr Symbol(62,1802
  std::vector<Symbol> Symbols;67,1988
  MachO::Architecture Arch;68,2019
  MachO::FileType FileKind;69,2047

/usr/include/llvm/Object/Wasm.h,4845
#define LLVM_OBJECT_WASM_H17,670
class WasmSymbol 35,1101
  WasmSymbol(37,1128
  const wasm::WasmSymbolInfo &Info;Info44,1429
  const wasm::WasmGlobalType *GlobalType;GlobalType45,1465
  const wasm::WasmTableType *TableType;TableType46,1507
  const wasm::WasmSignature *Signature;Signature47,1547
  bool isTypeFunction(49,1588
  bool isTypeTable(53,1682
  bool isTypeData(55,1764
  bool isTypeGlobal(57,1844
  bool isTypeSection(61,1934
  bool isTypeTag(65,2026
  bool isDefined(67,2104
  bool isUndefined(69,2157
  bool isBindingWeak(73,2251
  bool isBindingGlobal(77,2346
  bool isBindingLocal(81,2445
  unsigned getBinding(85,2542
  bool isHidden(89,2635
  unsigned getVisibility(93,2733
struct WasmSection 104,2970
  uint32_t Type 107,3019
  uint32_t Offset 108,3040
  StringRef Name;109,3095
  uint32_t Comdat 110,3169
  ArrayRef<uint8_t> Content;111,3235
  std::vector<wasm::WasmRelocation> Relocations;112,3264
  std::optional<uint8_t> HeaderSecSizeEncodingLen;114,3380
struct WasmSegment 117,3435
  uint32_t SectionOffset;118,3456
  wasm::WasmDataSegment Data;119,3482
class WasmObjectFile 122,3516
  static bool classof(133,3958
  const wasm::WasmDylinkInfo &dylinkInfo(dylinkInfo135,4022
  const wasm::WasmProducerInfo &getProducerInfo(getProducerInfo136,4094
  ArrayRef<wasm::WasmFeatureEntry> getTargetFeatures(137,4175
  ArrayRef<wasm::WasmSignature> types(140,4269
  ArrayRef<wasm::WasmImport> imports(141,4338
  ArrayRef<wasm::WasmTable> tables(142,4403
  ArrayRef<wasm::WasmLimits> memories(143,4465
  ArrayRef<wasm::WasmGlobal> globals(144,4532
  ArrayRef<wasm::WasmTag> tags(145,4597
  ArrayRef<wasm::WasmExport> exports(146,4653
  const wasm::WasmLinkingData &linkingData(linkingData147,4718
  uint32_t getNumberOfSymbols(148,4793
  ArrayRef<wasm::WasmElemSegment> elements(149,4858
  ArrayRef<WasmSegment> dataSegments(150,4934
  ArrayRef<wasm::WasmFunction> functions(151,5004
  ArrayRef<wasm::WasmDebugName> debugNames(152,5075
  uint32_t startFunction(153,5149
  uint32_t getNumImportedGlobals(154,5208
  uint32_t getNumImportedTables(155,5280
  uint32_t getNumImportedFunctions(156,5350
  uint32_t getNumImportedTags(157,5426
  uint32_t getNumSections(158,5492
  bool is64Bit(168,5863
  struct ReadContext 213,8154
    const uint8_t *Start;Start214,8177
    const uint8_t *Ptr;Ptr215,8203
    const uint8_t *End;End216,8227
  wasm::WasmObjectHeader Header;272,10595
  std::vector<WasmSection> Sections;273,10628
  wasm::WasmDylinkInfo DylinkInfo;274,10665
  wasm::WasmProducerInfo ProducerInfo;275,10700
  std::vector<wasm::WasmFeatureEntry> TargetFeatures;276,10739
  std::vector<wasm::WasmSignature> Signatures;277,10793
  std::vector<wasm::WasmTable> Tables;278,10840
  std::vector<wasm::WasmLimits> Memories;279,10879
  std::vector<wasm::WasmGlobal> Globals;280,10921
  std::vector<wasm::WasmTag> Tags;281,10962
  std::vector<wasm::WasmImport> Imports;282,10997
  std::vector<wasm::WasmExport> Exports;283,11038
  std::vector<wasm::WasmElemSegment> ElemSegments;284,11079
  std::vector<WasmSegment> DataSegments;285,11130
  std::optional<size_t> DataCount;286,11171
  std::vector<wasm::WasmFunction> Functions;287,11206
  std::vector<WasmSymbol> Symbols;288,11251
  std::vector<wasm::WasmDebugName> DebugNames;289,11286
  uint32_t StartFunction 290,11333
  bool HasLinkingSection 291,11364
  bool HasDylinkSection 292,11398
  bool HasMemory64 293,11431
  wasm::WasmLinkingData LinkingData;294,11459
  uint32_t NumImportedGlobals 295,11496
  uint32_t NumImportedTables 296,11531
  uint32_t NumImportedFunctions 297,11565
  uint32_t NumImportedTags 298,11602
  uint32_t CodeSection 299,11634
  uint32_t DataSection 300,11662
  uint32_t TagSection 301,11690
  uint32_t GlobalSection 302,11717
  uint32_t TableSection 303,11747
class WasmSectionOrderChecker 306,11780
  enum : int 309,11896
    WASM_SEC_ORDER_NONE 311,11941
    WASM_SEC_ORDER_TYPE,314,11992
    WASM_SEC_ORDER_IMPORT,315,12017
    WASM_SEC_ORDER_FUNCTION,316,12044
    WASM_SEC_ORDER_TABLE,317,12073
    WASM_SEC_ORDER_MEMORY,318,12099
    WASM_SEC_ORDER_TAG,319,12126
    WASM_SEC_ORDER_GLOBAL,320,12150
    WASM_SEC_ORDER_EXPORT,321,12177
    WASM_SEC_ORDER_START,322,12204
    WASM_SEC_ORDER_ELEM,323,12230
    WASM_SEC_ORDER_DATACOUNT,324,12255
    WASM_SEC_ORDER_CODE,325,12285
    WASM_SEC_ORDER_DATA,326,12310
    WASM_SEC_ORDER_DYLINK,330,12422
    WASM_SEC_ORDER_LINKING,332,12530
    WASM_SEC_ORDER_RELOC,334,12635
    WASM_SEC_ORDER_NAME,337,12788
    WASM_SEC_ORDER_PRODUCERS,339,12874
    WASM_SEC_ORDER_TARGET_FEATURES,341,12973
    WASM_NUM_SEC_ORDERS344,13030
  static int DisallowedPredecessors[DisallowedPredecessors349,13134
  bool Seen[Seen354,13299
inline raw_ostream &operator<<(operator<<362,13518

/usr/include/llvm/Object/XCOFFObjectFile.h,15794
#define LLVM_OBJECT_XCOFFOBJECTFILE_H14,544
struct XCOFFFileHeader32 29,880
  support::ubig16_t Magic;30,907
  support::ubig16_t NumberOfSections;31,934
  support::big32_t TimeStamp;35,1065
  support::ubig32_t SymbolTableOffset;37,1096
  support::big32_t NumberOfSymTableEntries;38,1167
  support::ubig16_t AuxHeaderSize;39,1211
  support::ubig16_t Flags;40,1246
struct XCOFFFileHeader64 43,1277
  support::ubig16_t Magic;44,1304
  support::ubig16_t NumberOfSections;45,1331
  support::big32_t TimeStamp;49,1462
  support::ubig64_t SymbolTableOffset;51,1493
  support::ubig16_t AuxHeaderSize;52,1564
  support::ubig16_t Flags;53,1599
  support::ubig32_t NumberOfSymTableEntries;54,1626
template <typename T> struct XCOFFAuxiliaryHeader 57,1675
  static constexpr uint8_t AuxiHeaderFlagMask 58,1727
  static constexpr uint8_t AuxiHeaderTDataAlignmentMask 59,1781
  uint8_t getFlag(62,1854
  uint8_t getTDataAlignment(67,1983
  uint16_t getVersion(72,2132
struct XCOFFAuxiliaryHeader32 75,2216
      AuxMagic;77,2315
      Version;81,2558
  support::ubig32_t TextSize;84,2775
  support::ubig32_t InitDataSize;85,2805
  support::ubig32_t BssDataSize;86,2839
  support::ubig32_t EntryPointAddr;87,2872
  support::ubig32_t TextStartAddr;88,2908
  support::ubig32_t DataStartAddr;89,2943
  support::ubig32_t TOCAnchorAddr;90,2978
  support::ubig16_t SecNumOfEntryPoint;91,3013
  support::ubig16_t SecNumOfText;92,3053
  support::ubig16_t SecNumOfData;93,3087
  support::ubig16_t SecNumOfTOC;94,3121
  support::ubig16_t SecNumOfLoader;95,3154
  support::ubig16_t SecNumOfBSS;96,3190
  support::ubig16_t MaxAlignOfText;97,3223
  support::ubig16_t MaxAlignOfData;98,3259
  support::ubig16_t ModuleType;99,3295
  uint8_t CpuFlag;100,3327
  uint8_t CpuType;101,3346
  support::ubig32_t MaxStackSize;102,3365
  support::ubig32_t MaxDataSize;104,3509
      ReservedForDebugger;107,3672
  uint8_t TextPageSize;111,3961
  uint8_t DataPageSize;113,4120
  uint8_t StackPageSize;115,4279
  uint8_t FlagAndTDataAlignment;117,4434
  support::ubig16_t SecNumOfTData;118,4467
  support::ubig16_t SecNumOfTBSS;119,4502
struct XCOFFAuxiliaryHeader64 122,4540
  support::ubig16_t AuxMagic;123,4619
  support::ubig16_t Version;124,4649
  support::ubig32_t ReservedForDebugger;125,4678
  support::ubig64_t TextStartAddr;126,4719
  support::ubig64_t DataStartAddr;127,4754
  support::ubig64_t TOCAnchorAddr;128,4789
  support::ubig16_t SecNumOfEntryPoint;129,4824
  support::ubig16_t SecNumOfText;130,4864
  support::ubig16_t SecNumOfData;131,4898
  support::ubig16_t SecNumOfTOC;132,4932
  support::ubig16_t SecNumOfLoader;133,4965
  support::ubig16_t SecNumOfBSS;134,5001
  support::ubig16_t MaxAlignOfText;135,5034
  support::ubig16_t MaxAlignOfData;136,5070
  support::ubig16_t ModuleType;137,5106
  uint8_t CpuFlag;138,5138
  uint8_t CpuType;139,5157
  uint8_t TextPageSize;140,5176
  uint8_t DataPageSize;141,5200
  uint8_t StackPageSize;142,5224
  uint8_t FlagAndTDataAlignment;143,5249
  support::ubig64_t TextSize;144,5282
  support::ubig64_t InitDataSize;145,5312
  support::ubig64_t BssDataSize;146,5346
  support::ubig64_t EntryPointAddr;147,5379
  support::ubig64_t MaxStackSize;148,5415
  support::ubig64_t MaxDataSize;149,5449
  support::ubig16_t SecNumOfTData;150,5482
  support::ubig16_t SecNumOfTBSS;151,5517
  support::ubig16_t XCOFF64Flag;152,5551
template <typename T> struct XCOFFSectionHeader 155,5588
  static constexpr unsigned SectionFlagsReservedMask 157,5682
  static constexpr unsigned SectionFlagsTypeMask 160,5813
struct XCOFFSectionHeader32 174,6219
  char Name[Name175,6292
  support::ubig32_t PhysicalAddress;176,6322
  support::ubig32_t VirtualAddress;177,6359
  support::ubig32_t SectionSize;178,6395
  support::ubig32_t FileOffsetToRawData;179,6428
  support::ubig32_t FileOffsetToRelocationInfo;180,6469
  support::ubig32_t FileOffsetToLineNumberInfo;181,6517
  support::ubig16_t NumberOfRelocations;182,6565
  support::ubig16_t NumberOfLineNumbers;183,6606
  support::big32_t Flags;184,6647
struct XCOFFSectionHeader64 187,6677
  char Name[Name188,6750
  support::ubig64_t PhysicalAddress;189,6780
  support::ubig64_t VirtualAddress;190,6817
  support::ubig64_t SectionSize;191,6853
  support::big64_t FileOffsetToRawData;192,6886
  support::big64_t FileOffsetToRelocationInfo;193,6926
  support::big64_t FileOffsetToLineNumberInfo;194,6973
  support::ubig32_t NumberOfRelocations;195,7020
  support::ubig32_t NumberOfLineNumbers;196,7061
  support::big32_t Flags;197,7102
  char Padding[Padding198,7128
struct LoaderSectionSymbolEntry32 203,7211
  struct NameOffsetInStrTbl 204,7247
    support::big32_t IsNameInStrTbl;205,7277
    support::ubig32_t Offset;206,7354
  char SymbolName[SymbolName209,7390
  support::ubig32_t Value;210,7426
  support::big16_t SectionNumber;211,7491
  uint8_t SymbolType;212,7525
  XCOFF::StorageClass StorageClass;213,7547
  support::ubig32_t ImportFileID;214,7583
  support::ubig32_t ParameterTypeCheck;215,7617
struct LoaderSectionSymbolEntry64 221,7753
  support::ubig64_t Value;222,7789
  support::ubig32_t Offset;223,7854
  support::big16_t SectionNumber;224,7882
  uint8_t SymbolType;225,7916
  XCOFF::StorageClass StorageClass;226,7938
  support::ubig32_t ImportFileID;227,7974
  support::ubig32_t ParameterTypeCheck;228,8008
struct LoaderSectionRelocationEntry32 234,8144
  support::ubig32_t VirtualAddr;235,8184
  support::big32_t SymbolIndex;236,8217
  support::ubig16_t Type;237,8249
  support::big16_t SectionNum;238,8275
struct LoaderSectionRelocationEntry64 241,8310
  support::ubig64_t VirtualAddr;242,8350
  support::ubig16_t Type;243,8383
  support::big16_t SectionNum;244,8409
  support::big32_t SymbolIndex;245,8440
struct LoaderSectionHeader32 248,8476
  support::ubig32_t Version;249,8507
  support::ubig32_t NumberOfSymTabEnt;250,8536
  support::ubig32_t NumberOfRelTabEnt;251,8575
  support::ubig32_t LengthOfImpidStrTbl;252,8614
  support::ubig32_t NumberOfImpid;253,8655
  support::big32_t OffsetToImpid;254,8690
  support::ubig32_t LengthOfStrTbl;255,8724
  support::big32_t OffsetToStrTbl;256,8760
  uint64_t getOffsetToSymTbl(258,8796
  uint64_t getOffsetToRelEnt(262,8911
struct LoaderSectionHeader64 271,9184
  support::ubig32_t Version;272,9215
  support::ubig32_t NumberOfSymTabEnt;273,9244
  support::ubig32_t NumberOfRelTabEnt;274,9283
  support::ubig32_t LengthOfImpidStrTbl;275,9322
  support::ubig32_t NumberOfImpid;276,9363
  support::ubig32_t LengthOfStrTbl;277,9398
  support::big64_t OffsetToImpid;278,9434
  support::big64_t OffsetToStrTbl;279,9468
  support::big64_t OffsetToSymTbl;280,9503
  support::big64_t OffsetToRelEnt;281,9538
  uint64_t getOffsetToSymTbl(283,9574
  uint64_t getOffsetToRelEnt(284,9638
template <typename AddressType> struct ExceptionSectionEntry 287,9706
    support::ubig32_t SymbolIdx;289,9779
    AddressType TrapInstAddr;290,9812
  uint8_t LangId;292,9847
  uint8_t Reason;293,9865
  uint32_t getSymbolIndex(295,9884
  uint64_t getTrapInstAddr(301,10080
  uint8_t getLangID(305,10224
  uint8_t getReason(306,10271
typedef ExceptionSectionEntry<support::ubig32_t> ExceptionSectionEntry32;309,10322
typedef ExceptionSectionEntry<support::ubig64_t> ExceptionSectionEntry64;310,10396
  uint32_t Size;317,10670
  const char *Data;Data318,10687
struct XCOFFCsectAuxEnt32 321,10711
  support::ubig32_t SectionOrLength;322,10739
  support::ubig32_t ParameterHashIndex;323,10776
  support::ubig16_t TypeChkSectNum;324,10816
  uint8_t SymbolAlignmentAndType;325,10852
  XCOFF::StorageMappingClass StorageMappingClass;326,10886
  support::ubig32_t StabInfoIndex;327,10936
  support::ubig16_t StabSectNum;328,10971
struct XCOFFCsectAuxEnt64 331,11008
  support::ubig32_t SectionOrLengthLowByte;332,11036
  support::ubig32_t ParameterHashIndex;333,11080
  support::ubig16_t TypeChkSectNum;334,11120
  uint8_t SymbolAlignmentAndType;335,11156
  XCOFF::StorageMappingClass StorageMappingClass;336,11190
  support::ubig32_t SectionOrLengthHighByte;337,11240
  uint8_t Pad;338,11285
  XCOFF::SymbolAuxType AuxType;339,11300
class XCOFFCsectAuxRef 342,11336
  static constexpr uint8_t SymbolTypeMask 344,11369
  static constexpr uint8_t SymbolAlignmentMask 345,11419
  static constexpr size_t SymbolAlignmentBitOffset 346,11474
  XCOFFCsectAuxRef(348,11531
  XCOFFCsectAuxRef(349,11607
  uint64_t getSectionOrLength(356,11904
  uint32_t getSectionOrLength32(360,12019
  uint64_t getSectionOrLength64(365,12176
#define GETVALUE(371,12417
  uint32_t getParameterHashIndex(373,12472
  uint16_t getTypeChkSectNum(377,12561
  XCOFF::StorageMappingClass getStorageMappingClass(379,12636
  uintptr_t getEntryAddress(383,12745
  uint16_t getAlignmentLog2(388,12905
  uint8_t getSymbolType(393,13051
  bool isLabel(397,13147
  uint32_t getStabInfoIndex32(399,13216
  uint16_t getStabSectNum32(404,13369
  XCOFF::SymbolAuxType getAuxType64(409,13518
  uint8_t getSymbolAlignmentAndType(414,13671
#undef GETVALUE418,13767
  const XCOFFCsectAuxEnt32 *Entry32 Entry32421,13793
  const XCOFFCsectAuxEnt64 *Entry64 Entry64422,13840
struct XCOFFFileAuxEnt 425,13891
    support::big32_t Magic;427,13935
    support::ubig32_t Offset;428,14003
    char NamePad[NamePad429,14033
  } NameInStrTblType;430,14075
    char Name[Name432,14107
    NameInStrTblType NameInStrTbl;433,14164
  XCOFF::CFileStringType Type;435,14204
  uint8_t ReservedZeros[ReservedZeros436,14235
  XCOFF::SymbolAuxType AuxType;437,14263
struct XCOFFSectAuxEntForStat 440,14326
  support::ubig32_t SectionLength;441,14358
  support::ubig16_t NumberOfRelocEnt;442,14393
  support::ubig16_t NumberOfLineNum;443,14431
  uint8_t Pad[Pad444,14468
struct XCOFFFunctionAuxEnt32 447,14518
  support::ubig32_t OffsetToExceptionTbl;448,14549
  support::ubig32_t SizeOfFunction;449,14591
  support::ubig32_t PtrToLineNum;450,14627
  support::big32_t SymIdxOfNextBeyond;451,14661
  uint8_t Pad[Pad452,14700
struct XCOFFFunctionAuxEnt64 455,14722
  support::ubig64_t PtrToLineNum;456,14753
  support::ubig32_t SizeOfFunction;457,14787
  support::big32_t SymIdxOfNextBeyond;458,14823
  uint8_t Pad;459,14862
  XCOFF::SymbolAuxType AuxType;460,14877
struct XCOFFExceptionAuxEnt 463,14959
  support::ubig64_t OffsetToExceptionTbl;464,14989
  support::ubig32_t SizeOfFunction;465,15031
  support::big32_t SymIdxOfNextBeyond;466,15067
  uint8_t Pad;467,15106
  XCOFF::SymbolAuxType AuxType;468,15121
struct XCOFFBlockAuxEnt32 471,15206
  uint8_t ReservedZeros1[ReservedZeros1472,15234
  support::ubig16_t LineNumHi;473,15263
  support::ubig16_t LineNumLo;474,15294
  uint8_t ReservedZeros2[ReservedZeros2475,15325
struct XCOFFBlockAuxEnt64 478,15359
  support::ubig32_t LineNum;479,15387
  uint8_t Pad[Pad480,15416
  XCOFF::SymbolAuxType AuxType;481,15435
struct XCOFFSectAuxEntForDWARF32 484,15517
  support::ubig32_t LengthOfSectionPortion;485,15552
  uint8_t Pad1[Pad1486,15596
  support::ubig32_t NumberOfRelocEnt;487,15615
  uint8_t Pad2[Pad2488,15653
struct XCOFFSectAuxEntForDWARF64 491,15676
  support::ubig64_t LengthOfSectionPortion;492,15711
  support::ubig64_t NumberOfRelocEnt;493,15755
  uint8_t Pad;494,15793
  XCOFF::SymbolAuxType AuxType;495,15808
template <typename AddressType> struct XCOFFRelocation 498,15891
  AddressType VirtualAddress;500,15956
  support::ubig32_t SymbolIndex;501,15986
  uint8_t Info;504,16078
  XCOFF::RelocationType Type;506,16095
struct XCOFFRelocation64 520,16497
class XCOFFObjectFile 524,16593
  const void *FileHeader FileHeader526,16646
  const void *AuxiliaryHeader AuxiliaryHeader527,16682
  const void *SectionHeaderTable SectionHeaderTable528,16723
  const void *SymbolTblPtr SymbolTblPtr530,16768
  XCOFFStringTable StringTable 531,16806
  static constexpr uint64_t InvalidRelocOffset 574,18792
  using xcoff_symbol_iterator_range 583,19166
  const void *getPointerToSymbolTable(getPointerToSymbolTable642,22103
  uintptr_t getSymbolByIndex(675,23418
  template <typename Shdr,703,24454
  static bool classof(724,25204
  uint8_t LanguageId;730,25368
  uint8_t CpuTypeId;731,25390
} CFileLanguageIdAndTypeIdType;732,25411
struct XCOFFSymbolEntry32 734,25444
    support::big32_t Magic;736,25491
    support::ubig32_t Offset;737,25559
  } NameInStrTblType;738,25589
    char SymbolName[SymbolName741,25622
    NameInStrTblType NameInStrTbl;742,25660
  support::ubig32_t Value;745,25701
  support::big16_t SectionNumber;746,25770
    support::ubig16_t SymbolType;749,25815
    CFileLanguageIdAndTypeIdType CFileLanguageIdAndTypeId;750,25849
  XCOFF::StorageClass StorageClass;753,25914
  uint8_t NumberOfAuxEntries;754,25950
struct XCOFFSymbolEntry64 757,25984
  support::ubig64_t Value;758,26012
  support::ubig32_t Offset;759,26081
  support::big16_t SectionNumber;760,26109
    support::ubig16_t SymbolType;763,26154
    CFileLanguageIdAndTypeIdType CFileLanguageIdAndTypeId;764,26188
  XCOFF::StorageClass StorageClass;767,26253
  uint8_t NumberOfAuxEntries;768,26289
class XCOFFSymbolRef 771,26323
  enum { NAME_IN_STR_TBL_MAGIC 773,26373
  XCOFFSymbolRef(775,26414
  const XCOFFSymbolEntry32 *getSymbol32(getSymbol32783,26737
  const XCOFFSymbolEntry64 *getSymbol64(getSymbol64787,26872
  uint64_t getValue(791,27007
  uint32_t getValue32(795,27107
  uint64_t getValue64(800,27240
  uint64_t getSize(805,27373
#define GETVALUE(809,27467
  int16_t getSectionNumber(814,27790
  uint16_t getSymbolType(816,27862
  uint8_t getLanguageIdForCFile(818,27929
  uint8_t getCPUTypeIddForCFile(824,28133
  XCOFF::StorageClass getStorageClass(830,28336
  uint8_t getNumberOfAuxEntries(832,28418
#undef GETVALUE834,28500
  uintptr_t getEntryAddress(836,28517
  const XCOFFObjectFile *getObject(getObject846,28768
class xcoff_symbol_iterator 851,28884
  xcoff_symbol_iterator(853,28947
  xcoff_symbol_iterator(856,29034
  const XCOFFSymbolRef *operator->(operator->859,29125
  const XCOFFSymbolRef &operator*(operator*863,29254
class TBVectorExt 868,29384
  uint16_t Data;869,29404
  SmallString<32> VecParmsInfo;870,29421
  SmallString<32> getVectorParmsInfo(881,29755
class XCOFFTracebackTable 887,29991
  const uint8_t *const TBPtr;888,30019
  bool Is64BitObj;889,30049
  std::optional<SmallString<32>> ParmsType;890,30068
  std::optional<uint32_t> TraceBackTableOffset;891,30112
  std::optional<uint32_t> HandlerMask;892,30160
  std::optional<uint32_t> NumOfCtlAnchors;893,30199
  std::optional<std::optional894,30242
  std::optional<SmallVector<uint32_t, 8>> ControlledStorageInfoDisp;894,30242
  std::optional<StringRef> FunctionName;895,30311
  std::optional<uint8_t> AllocaRegister;896,30352
  std::optional<TBVectorExt> VecExt;897,30393
  std::optional<uint8_t> ExtensionTable;898,30430
  std::optional<uint64_t> EhInfoDisp;899,30471
  const std::optional<SmallString<32>> &getParmsType(getParmsType952,32289
  const std::optional<uint32_t> &getTraceBackTableOffset(getTraceBackTableOffset955,32378
  const std::optional<uint32_t> &getHandlerMask(getHandlerMask958,32482
  const std::optional<uint32_t> &getNumOfCtlAnchors(getNumOfCtlAnchors959,32562
  const std::optional<std::optional962,32650
  getControlledStorageInfoDisp(963,32700
  const std::optional<StringRef> &getFunctionName(getFunctionName966,32777
  const std::optional<uint8_t> &getAllocaRegister(getAllocaRegister969,32866
  const std::optional<TBVectorExt> &getVectorExt(getVectorExt972,32957
  const std::optional<uint8_t> &getExtensionTable(getExtensionTable973,33033
  const std::optional<uint64_t> &getEhInfoDisp(getEhInfoDisp976,33124

/usr/include/llvm/ObjectYAML/ArchiveYAML.h,746
#define LLVM_OBJECTYAML_ARCHIVEYAML_H15,588
struct Archive 25,790
  struct Child 26,807
    struct Field 27,824
      Field(29,868
      StringRef Value;31,972
      StringRef DefaultValue;32,995
      unsigned MaxLength;33,1025
    Child(36,1059
    MapVector<StringRef,StringRef46,1333
    MapVector<StringRef, Field> Fields;46,1333
    std::optional<yaml::BinaryRef> Content;48,1374
    std::optional<llvm::yaml::Hex8> PaddingByte;49,1418
  StringRef Magic;52,1473
  std::optional<std::vector<Child>> Members;53,1492
  std::optional<yaml::BinaryRef> Content;54,1537
namespace llvm 62,1698
namespace yaml 63,1715
template <> struct MappingTraits<MappingTraits65,1733
template <> struct MappingTraits<MappingTraits70,1903

/usr/include/llvm/ObjectYAML/COFFYAML.h,3803
#define LLVM_OBJECTYAML_COFFYAML_H14,568
                                        SectionCharacteristics b)37,1241
                                    DLLCharacteristics b)43,1491
namespace COFFYAML 52,1851
struct Relocation 58,2033
  uint32_t VirtualAddress;59,2053
  uint16_t Type;60,2080
  StringRef SymbolName;66,2376
  std::optional<uint32_t> SymbolTableIndex;67,2400
struct SectionDataEntry 70,2448
  std::optional<uint32_t> UInt32;71,2474
  yaml::BinaryRef Binary;72,2508
  std::optional<object::coff_load_configuration32> LoadConfig32;73,2534
  std::optional<object::coff_load_configuration64> LoadConfig64;74,2599
struct Section 80,2737
  COFF::section Header;81,2754
  unsigned Alignment 82,2778
  yaml::BinaryRef SectionData;83,2804
  std::vector<CodeViewYAML::YAMLDebugSubsection> DebugS;84,2835
  std::vector<CodeViewYAML::LeafRecord> DebugT;85,2892
  std::vector<CodeViewYAML::LeafRecord> DebugP;86,2940
  std::optional<CodeViewYAML::DebugHSection> DebugH;87,2988
  std::vector<SectionDataEntry> StructuredData;88,3041
  std::vector<Relocation> Relocations;89,3089
  StringRef Name;90,3128
struct Symbol 95,3164
  COFF::symbol Header;96,3180
  COFF::SymbolBaseType SimpleType 97,3203
  COFF::SymbolComplexType ComplexType 98,3266
  std::optional<COFF::AuxiliaryFunctionDefinition> FunctionDefinition;99,3334
  std::optional<COFF::AuxiliarybfAndefSymbol> bfAndefSymbol;100,3405
  std::optional<COFF::AuxiliaryWeakExternal> WeakExternal;101,3466
  StringRef File;102,3525
  std::optional<COFF::AuxiliarySectionDefinition> SectionDefinition;103,3543
  std::optional<COFF::AuxiliaryCLRToken> CLRToken;104,3612
  StringRef Name;105,3663
struct PEHeader 110,3698
  COFF::PE32Header Header;111,3716
      DataDirectories[DataDirectories113,3780
struct Object 116,3835
  std::optional<PEHeader> OptionalHeader;117,3851
  COFF::header Header;118,3893
  std::vector<Section> Sections;119,3916
  std::vector<Symbol> Symbols;120,3949
namespace llvm 134,4255
namespace yaml 135,4272
struct ScalarEnumerationTraits<ScalarEnumerationTraits138,4302
struct ScalarEnumerationTraits<ScalarEnumerationTraits143,4471
struct ScalarEnumerationTraits<ScalarEnumerationTraits148,4612
struct ScalarEnumerationTraits<ScalarEnumerationTraits153,4747
struct ScalarEnumerationTraits<ScalarEnumerationTraits158,4878
struct ScalarEnumerationTraits<ScalarEnumerationTraits163,5013
struct ScalarEnumerationTraits<ScalarEnumerationTraits168,5156
struct ScalarEnumerationTraits<ScalarEnumerationTraits173,5297
struct ScalarEnumerationTraits<ScalarEnumerationTraits178,5440
struct ScalarEnumerationTraits<ScalarEnumerationTraits183,5585
struct ScalarEnumerationTraits<ScalarEnumerationTraits188,5728
struct ScalarEnumerationTraits<ScalarEnumerationTraits193,5875
struct ScalarBitSetTraits<ScalarBitSetTraits198,6014
struct ScalarBitSetTraits<ScalarBitSetTraits203,6141
struct ScalarBitSetTraits<ScalarBitSetTraits208,6282
struct MappingTraits<MappingTraits213,6415
struct MappingTraits<MappingTraits218,6534
struct MappingTraits<MappingTraits223,6648
struct MappingTraits<MappingTraits228,6764
template <> struct MappingTraits<MappingTraits232,6853
template <> struct MappingTraits<MappingTraits236,6998
template <> struct MappingTraits<MappingTraits240,7133
template <> struct MappingTraits<MappingTraits244,7266
template <> struct MappingTraits<MappingTraits248,7409
template <> struct MappingTraits<MappingTraits252,7534
template <> struct MappingTraits<MappingTraits256,7679
template <> struct MappingTraits<MappingTraits260,7824
struct MappingTraits<MappingTraits265,7993
template <> struct MappingTraits<MappingTraits269,8090
struct MappingTraits<MappingTraits274,8233
struct MappingTraits<MappingTraits279,8346

/usr/include/llvm/ObjectYAML/CodeViewYAMLDebugSections.h,1690
#define LLVM_OBJECTYAML_CODEVIEWYAMLDEBUGSECTIONS_H15,602
struct YAMLFrameData 45,1229
  uint32_t RvaStart;46,1252
  uint32_t CodeSize;47,1273
  uint32_t LocalSize;48,1294
  uint32_t ParamsSize;49,1316
  uint32_t MaxStackSize;50,1339
  StringRef FrameFunc;51,1364
  uint32_t PrologSize;52,1387
  uint32_t SavedRegsSize;53,1410
  uint32_t Flags;54,1436
struct YAMLCrossModuleImport 57,1458
  StringRef ModuleName;58,1489
  std::vector<uint32_t> ImportIds;59,1513
struct SourceLineEntry 62,1552
  uint32_t Offset;63,1577
  uint32_t LineStart;64,1596
  uint32_t EndDelta;65,1618
  bool IsStatement;66,1639
struct SourceColumnEntry 69,1663
  uint16_t StartColumn;70,1690
  uint16_t EndColumn;71,1714
struct SourceLineBlock 74,1740
  StringRef FileName;75,1765
  std::vector<SourceLineEntry> Lines;76,1787
  std::vector<SourceColumnEntry> Columns;77,1825
struct HexFormattedString 80,1871
  std::vector<uint8_t> Bytes;81,1899
struct SourceFileChecksumEntry 84,1933
  StringRef FileName;85,1966
  codeview::FileChecksumKind Kind;86,1988
  HexFormattedString ChecksumBytes;87,2023
struct SourceLineInfo 90,2063
  uint32_t RelocOffset;91,2087
  uint32_t RelocSegment;92,2111
  codeview::LineFlags Flags;93,2136
  uint32_t CodeSize;94,2165
  std::vector<SourceLineBlock> Blocks;95,2186
struct InlineeSite 98,2229
  uint32_t Inlinee;99,2250
  StringRef FileName;100,2270
  uint32_t SourceLineNum;101,2292
  std::vector<StringRef> ExtraFiles;102,2318
struct InlineeInfo 105,2359
  bool HasExtraFiles;106,2380
  std::vector<InlineeSite> Sites;107,2402
struct YAMLDebugSubsection 110,2440
  std::shared_ptr<detail::YAMLSubsectionBase> Subsection;115,2645

/usr/include/llvm/ObjectYAML/CodeViewYAMLSymbols.h,140
#define LLVM_OBJECTYAML_CODEVIEWYAMLSYMBOLS_H15,596
struct SymbolRecord 32,943
  std::shared_ptr<detail::SymbolRecordBase> Symbol;33,965

/usr/include/llvm/ObjectYAML/CodeViewYAMLTypeHashing.h,337
#define LLVM_OBJECTYAML_CODEVIEWYAMLTYPEHASHING_H15,600
struct GlobalHash 31,970
  explicit GlobalHash(33,1016
  explicit GlobalHash(36,1118
  yaml::BinaryRef Hash;39,1228
struct DebugHSection 42,1256
  uint32_t Magic;43,1279
  uint16_t Version;44,1297
  uint16_t HashAlgorithm;45,1317
  std::vector<GlobalHash> Hashes;46,1343

/usr/include/llvm/ObjectYAML/CodeViewYAMLTypes.h,223
#define LLVM_OBJECTYAML_CODEVIEWYAMLTYPES_H15,594
struct MemberRecord 41,1076
  std::shared_ptr<detail::MemberRecordBase> Member;42,1098
struct LeafRecord 45,1154
  std::shared_ptr<detail::LeafRecordBase> Leaf;46,1174

/usr/include/llvm/ObjectYAML/DWARFEmitter.h,46
#define LLVM_OBJECTYAML_DWARFEMITTER_H13,537

/usr/include/llvm/ObjectYAML/DWARFYAML.h,9154
#define LLVM_OBJECTYAML_DWARFYAML_H16,598
struct AttributeAbbrev 31,930
  llvm::dwarf::Attribute Attribute;32,955
  llvm::dwarf::Form Form;33,991
  llvm::yaml::Hex64 Value;34,1017
struct Abbrev 37,1086
  std::optional<yaml::Hex64> Code;38,1102
  llvm::dwarf::Tag Tag;39,1137
  llvm::dwarf::Constants Children;40,1161
  std::vector<AttributeAbbrev> Attributes;41,1196
struct AbbrevTable 44,1243
  std::optional<uint64_t> ID;45,1264
  std::vector<Abbrev> Table;46,1294
struct ARangeDescriptor 49,1327
  llvm::yaml::Hex64 Address;50,1353
  yaml::Hex64 Length;51,1382
struct ARange 54,1408
  dwarf::DwarfFormat Format;55,1424
  std::optional<yaml::Hex64> Length;56,1453
  uint16_t Version;57,1490
  yaml::Hex64 CuOffset;58,1510
  std::optional<yaml::Hex8> AddrSize;59,1534
  yaml::Hex8 SegSize;60,1572
  std::vector<ARangeDescriptor> Descriptors;61,1594
struct RangeEntry 66,1776
  llvm::yaml::Hex64 LowOffset;67,1796
  llvm::yaml::Hex64 HighOffset;68,1827
struct Ranges 72,1942
  std::optional<llvm::yaml::Hex64> Offset;73,1958
  std::optional<llvm::yaml::Hex8> AddrSize;74,2001
  std::vector<RangeEntry> Entries;75,2045
struct PubEntry 78,2084
  llvm::yaml::Hex32 DieOffset;79,2102
  llvm::yaml::Hex8 Descriptor;80,2133
  StringRef Name;81,2164
struct PubSection 84,2186
  dwarf::DwarfFormat Format;85,2206
  yaml::Hex64 Length;86,2235
  uint16_t Version;87,2257
  uint32_t UnitOffset;88,2277
  uint32_t UnitSize;89,2300
  std::vector<PubEntry> Entries;90,2321
struct FormValue 93,2358
  llvm::yaml::Hex64 Value;94,2377
  StringRef CStr;95,2404
  std::vector<llvm::yaml::Hex8> BlockData;96,2422
struct Entry 99,2469
  llvm::yaml::Hex32 AbbrCode;100,2484
  std::vector<FormValue> Values;101,2514
struct DWARFContext 106,2653
  bool IsGNUPubSec 107,2675
struct Unit 110,2707
  dwarf::DwarfFormat Format;111,2721
  std::optional<yaml::Hex64> Length;112,2750
  uint16_t Version;113,2787
  std::optional<uint8_t> AddrSize;114,2807
  llvm::dwarf::UnitType Type;115,2842
  std::optional<uint64_t> AbbrevTableID;116,2892
  std::optional<yaml::Hex64> AbbrOffset;117,2933
  std::vector<Entry> Entries;118,2974
struct File 121,3008
  StringRef Name;122,3022
  uint64_t DirIdx;123,3040
  uint64_t ModTime;124,3059
  uint64_t Length;125,3079
struct LineTableOpcode 128,3102
  dwarf::LineNumberOps Opcode;129,3127
  std::optional<uint64_t> ExtLen;130,3158
  dwarf::LineNumberExtendedOps SubOpcode;131,3192
  uint64_t Data;132,3234
  int64_t SData;133,3251
  File FileEntry;134,3268
  std::vector<llvm::yaml::Hex8> UnknownOpcodeData;135,3286
  std::vector<llvm::yaml::Hex64> StandardOpcodeData;136,3337
struct LineTable 139,3394
  dwarf::DwarfFormat Format;140,3413
  std::optional<uint64_t> Length;141,3442
  uint16_t Version;142,3476
  std::optional<uint64_t> PrologueLength;143,3496
  uint8_t MinInstLength;144,3538
  uint8_t MaxOpsPerInst;145,3563
  uint8_t DefaultIsStmt;146,3588
  uint8_t LineBase;147,3613
  uint8_t LineRange;148,3633
  std::optional<uint8_t> OpcodeBase;149,3654
  std::optional<std::vector<uint8_t>> StandardOpcodeLengths;150,3691
  std::vector<StringRef> IncludeDirs;151,3752
  std::vector<File> Files;152,3790
  std::vector<LineTableOpcode> Opcodes;153,3817
struct SegAddrPair 156,3861
  yaml::Hex64 Segment;157,3882
  yaml::Hex64 Address;158,3905
struct AddrTableEntry 161,3932
  dwarf::DwarfFormat Format;162,3956
  std::optional<yaml::Hex64> Length;163,3985
  yaml::Hex16 Version;164,4022
  std::optional<yaml::Hex8> AddrSize;165,4045
  yaml::Hex8 SegSelectorSize;166,4083
  std::vector<SegAddrPair> SegAddrPairs;167,4113
struct StringOffsetsTable 170,4158
  dwarf::DwarfFormat Format;171,4186
  std::optional<yaml::Hex64> Length;172,4215
  yaml::Hex16 Version;173,4252
  yaml::Hex16 Padding;174,4275
  std::vector<yaml::Hex64> Offsets;175,4298
struct DWARFOperation 178,4338
  dwarf::LocationAtom Operator;179,4362
  std::vector<yaml::Hex64> Values;180,4394
struct RnglistEntry 183,4433
  dwarf::RnglistEntries Operator;184,4455
  std::vector<yaml::Hex64> Values;185,4489
struct LoclistEntry 188,4528
  dwarf::LoclistEntries Operator;189,4550
  std::vector<yaml::Hex64> Values;190,4584
  std::optional<yaml::Hex64> DescriptionsLength;191,4619
  std::vector<DWARFOperation> Descriptions;192,4668
template <typename EntryType> struct ListEntries 195,4716
  std::optional<std::vector<EntryType>> Entries;196,4767
  std::optional<yaml::BinaryRef> Content;197,4816
template <typename EntryType> struct ListTable 200,4862
  dwarf::DwarfFormat Format;201,4911
  std::optional<yaml::Hex64> Length;202,4940
  yaml::Hex16 Version;203,4977
  std::optional<yaml::Hex8> AddrSize;204,5000
  yaml::Hex8 SegSelectorSize;205,5038
  std::optional<uint32_t> OffsetEntryCount;206,5068
  std::optional<std::vector<yaml::Hex64>> Offsets;207,5112
  std::vector<ListEntries<EntryType>> Lists;208,5163
struct Data 211,5212
  bool IsLittleEndian;212,5226
  bool Is64BitAddrSize;213,5249
  std::vector<AbbrevTable> DebugAbbrev;214,5273
  std::optional<std::vector<StringRef>> DebugStrings;215,5313
  std::optional<std::vector<StringOffsetsTable>> DebugStrOffsets;216,5367
  std::optional<std::vector<ARange>> DebugAranges;217,5433
  std::optional<std::vector<Ranges>> DebugRanges;218,5484
  std::optional<std::vector<AddrTableEntry>> DebugAddr;219,5534
  std::optional<PubSection> PubNames;220,5590
  std::optional<PubSection> PubTypes;221,5628
  std::optional<PubSection> GNUPubNames;223,5667
  std::optional<PubSection> GNUPubTypes;224,5708
  std::vector<Unit> CompileUnits;226,5750
  std::vector<LineTable> DebugLines;228,5785
  std::optional<std::vector<ListTable<RnglistEntry>>> DebugRnglists;229,5822
  std::optional<std::vector<ListTable<LoclistEntry>>> DebugLoclists;230,5891
  struct AbbrevTableInfo 236,6043
    uint64_t Index;237,6070
    uint64_t Offset;238,6090
  mutable std::unordered_map<std::unordered_map244,6261
  mutable std::unordered_map<uint64_t, AbbrevTableInfo> AbbrevTableInfoMap;244,6261
  mutable std::unordered_map<std::unordered_map245,6337
  mutable std::unordered_map<uint64_t, std::string> AbbrevTableContents;245,6337
namespace llvm 280,7986
namespace yaml 281,8003
template <> struct MappingTraits<MappingTraits283,8021
template <> struct MappingTraits<MappingTraits287,8132
template <> struct MappingTraits<MappingTraits291,8263
template <> struct MappingTraits<MappingTraits295,8379
template <> struct MappingTraits<MappingTraits299,8516
template <> struct MappingTraits<MappingTraits303,8656
template <> struct MappingTraits<MappingTraits307,8772
template <> struct MappingTraits<MappingTraits311,8895
template <> struct MappingTraits<MappingTraits315,9011
template <> struct MappingTraits<MappingTraits319,9130
template <> struct MappingTraits<MappingTraits323,9255
template <> struct MappingTraits<MappingTraits327,9365
template <> struct MappingTraits<MappingTraits331,9478
template <> struct MappingTraits<MappingTraits335,9603
template <> struct MappingTraits<MappingTraits339,9713
template <> struct MappingTraits<MappingTraits343,9856
template <> struct MappingTraits<MappingTraits347,9981
template <> struct MappingTraits<MappingTraits351,10112
struct MappingTraits<MappingTraits356,10282
struct MappingTraits<MappingTraits361,10447
template <> struct MappingTraits<MappingTraits367,10705
template <> struct MappingTraits<MappingTraits371,10839
template <> struct MappingTraits<MappingTraits375,10973
template <> struct MappingTraits<MappingTraits379,11108
template <> struct ScalarEnumerationTraits<ScalarEnumerationTraits383,11257
  static void enumeration(384,11322
#define HANDLE_DW_TAG(390,11498
template <> struct ScalarEnumerationTraits<ScalarEnumerationTraits393,11641
  static void enumeration(394,11698
#define HANDLE_DW_LNS(400,11835
template <> struct ScalarEnumerationTraits<ScalarEnumerationTraits403,11978
  static void enumeration(404,12045
#define HANDLE_DW_LNE(410,12191
template <> struct ScalarEnumerationTraits<ScalarEnumerationTraits413,12334
  static void enumeration(414,12409
#define HANDLE_DW_AT(420,12564
template <> struct ScalarEnumerationTraits<ScalarEnumerationTraits423,12705
  static void enumeration(424,12768
#define HANDLE_DW_FORM(430,12911
template <> struct ScalarEnumerationTraits<ScalarEnumerationTraits433,13056
  static void enumeration(434,13114
#define HANDLE_DW_UT(440,13252
template <> struct ScalarEnumerationTraits<ScalarEnumerationTraits443,13393
  static void enumeration(444,13455
template <> struct ScalarEnumerationTraits<ScalarEnumerationTraits450,13596
  static void enumeration(451,13659
#define HANDLE_DW_RLE(458,13895
template <> struct ScalarEnumerationTraits<ScalarEnumerationTraits461,14038
  static void enumeration(462,14106
#define HANDLE_DW_LLE(467,14219
template <> struct ScalarEnumerationTraits<ScalarEnumerationTraits470,14362
  static void enumeration(471,14430
#define HANDLE_DW_OP(476,14543
template <> struct ScalarEnumerationTraits<ScalarEnumerationTraits479,14684
  static void enumeration(480,14750

/usr/include/llvm/ObjectYAML/MachOYAML.h,5537
#define LLVM_OBJECTYAML_MACHOYAML_H16,588
struct Relocation 31,920
  llvm::yaml::Hex32 address;33,995
  uint32_t symbolnum;35,1079
  bool is_pcrel;36,1101
  uint8_t length;38,1149
  bool is_extern;39,1167
  uint8_t type;40,1185
  bool is_scattered;41,1201
  int32_t value;42,1222
struct Section 45,1243
  char sectname[sectname46,1260
  char segname[segname47,1281
  llvm::yaml::Hex64 addr;48,1301
  uint64_t size;49,1327
  llvm::yaml::Hex32 offset;50,1344
  uint32_t align;51,1372
  llvm::yaml::Hex32 reloff;52,1390
  uint32_t nreloc;53,1418
  llvm::yaml::Hex32 flags;54,1437
  llvm::yaml::Hex32 reserved1;55,1464
  llvm::yaml::Hex32 reserved2;56,1495
  llvm::yaml::Hex32 reserved3;57,1526
  std::optional<llvm::yaml::BinaryRef> content;58,1557
  std::vector<Relocation> relocations;59,1605
struct FileHeader 62,1648
  llvm::yaml::Hex32 magic;63,1668
  llvm::yaml::Hex32 cputype;64,1695
  llvm::yaml::Hex32 cpusubtype;65,1724
  llvm::yaml::Hex32 filetype;66,1756
  uint32_t ncmds;67,1786
  uint32_t sizeofcmds;68,1804
  llvm::yaml::Hex32 flags;69,1827
  llvm::yaml::Hex32 reserved;70,1854
struct LoadCommand 73,1888
  llvm::MachO::macho_load_command Data;76,1936
  std::vector<Section> Sections;77,1976
  std::vector<MachO::build_tool_version> Tools;78,2009
  std::vector<llvm::yaml::Hex8> PayloadBytes;79,2057
  std::string Content;80,2103
  uint64_t ZeroPadBytes;81,2126
struct NListEntry 84,2155
  uint32_t n_strx;85,2175
  llvm::yaml::Hex8 n_type;86,2194
  uint8_t n_sect;87,2221
  uint16_t n_desc;88,2239
  uint64_t n_value;89,2258
struct RebaseOpcode 92,2282
  MachO::RebaseOpcode Opcode;93,2304
  uint8_t Imm;94,2334
  std::vector<yaml::Hex64> ExtraData;95,2349
struct BindOpcode 98,2391
  MachO::BindOpcode Opcode;99,2411
  uint8_t Imm;100,2439
  std::vector<yaml::Hex64> ULEBExtraData;101,2454
  std::vector<int64_t> SLEBExtraData;102,2496
  StringRef Symbol;103,2534
struct ExportEntry 106,2558
  uint64_t TerminalSize 107,2579
  uint64_t NodeOffset 108,2608
  std::string Name;109,2635
  llvm::yaml::Hex64 Flags 110,2655
  llvm::yaml::Hex64 Address 111,2686
  llvm::yaml::Hex64 Other 112,2719
  std::string ImportName;113,2750
  std::vector<MachOYAML::ExportEntry> Children;114,2776
struct DataInCodeEntry 117,2828
  llvm::yaml::Hex32 Offset;118,2853
  uint16_t Length;119,2881
  llvm::yaml::Hex16 Kind;120,2900
struct LinkEditData 123,2930
  std::vector<MachOYAML::RebaseOpcode> RebaseOpcodes;124,2952
  std::vector<MachOYAML::BindOpcode> BindOpcodes;125,3006
  std::vector<MachOYAML::BindOpcode> WeakBindOpcodes;126,3056
  std::vector<MachOYAML::BindOpcode> LazyBindOpcodes;127,3110
  MachOYAML::ExportEntry ExportTrie;128,3164
  std::vector<NListEntry> NameList;129,3201
  std::vector<StringRef> StringTable;130,3237
  std::vector<yaml::Hex32> IndirectSymbols;131,3275
  std::vector<yaml::Hex64> FunctionStarts;132,3319
  std::vector<DataInCodeEntry> DataInCode;133,3362
  std::vector<yaml::Hex8> ChainedFixups;134,3405
struct Object 139,3475
  bool IsLittleEndian;140,3491
  FileHeader Header;141,3514
  std::vector<LoadCommand> LoadCommands;142,3535
  std::vector<Section> Sections;143,3576
  LinkEditData LinkEdit;144,3609
  std::optional<llvm::yaml::BinaryRef> RawLinkEditSegment;145,3634
  DWARFYAML::Data DWARF;146,3693
struct FatHeader 149,3722
  llvm::yaml::Hex32 magic;150,3741
  uint32_t nfat_arch;151,3768
struct FatArch 154,3794
  llvm::yaml::Hex32 cputype;155,3811
  llvm::yaml::Hex32 cpusubtype;156,3840
  llvm::yaml::Hex64 offset;157,3872
  uint64_t size;158,3900
  uint32_t align;159,3917
  llvm::yaml::Hex32 reserved;160,3935
struct UniversalBinary 163,3969
  FatHeader Header;164,3994
  std::vector<FatArch> FatArchs;165,4014
  std::vector<Object> Slices;166,4047
namespace llvm 184,4777
namespace yaml 188,4815
template <> struct MappingTraits<MappingTraits190,4833
template <> struct MappingTraits<MappingTraits194,4961
template <> struct MappingTraits<MappingTraits198,5077
template <> struct MappingTraits<MappingTraits202,5202
template <> struct MappingTraits<MappingTraits206,5321
template <> struct MappingTraits<MappingTraits210,5464
template <> struct MappingTraits<MappingTraits214,5595
template <> struct MappingTraits<MappingTraits218,5729
template <> struct MappingTraits<MappingTraits222,5863
template <> struct MappingTraits<MappingTraits226,5991
template <> struct MappingTraits<MappingTraits230,6122
template <> struct MappingTraits<MappingTraits234,6241
template <> struct MappingTraits<MappingTraits239,6428
template <> struct MappingTraits<MappingTraits243,6556
template <> struct MappingTraits<MappingTraits247,6686
#define HANDLE_LOAD_COMMAND(251,6829
template <> struct ScalarEnumerationTraits<ScalarEnumerationTraits254,6957
  static void enumeration(255,7026
#define ENUM_CASE(261,7175
template <> struct ScalarEnumerationTraits<ScalarEnumerationTraits263,7240
  static void enumeration(264,7306
template <> struct ScalarEnumerationTraits<ScalarEnumerationTraits278,7853
  static void enumeration(279,7917
using char_16 298,8712
template <> struct ScalarTraits<ScalarTraits300,8739
using uuid_t 308,9061
template <> struct ScalarTraits<ScalarTraits310,9098
#define LOAD_COMMAND_STRUCT(318,9360
template <> struct MappingTraits<MappingTraits326,9691
template <> struct MappingTraits<MappingTraits330,9802
template <> struct MappingTraits<MappingTraits334,9915
template <> struct MappingTraits<MappingTraits338,10030

/usr/include/llvm/ObjectYAML/MinidumpYAML.h,2775
#define LLVM_OBJECTYAML_MINIDUMPYAML_H10,409
struct Stream 27,1181
  enum class StreamKind 28,1197
    Exception,29,1223
    MemoryInfoList,30,1238
    MemoryList,31,1258
    ModuleList,32,1274
    RawContent,33,1290
    SystemInfo,34,1306
    TextContent,35,1322
    ThreadList,36,1339
  Stream(39,1361
  virtual ~Stream(40,1442
  const StreamKind Kind;42,1474
  const minidump::StreamType Type;43,1499
namespace detail 57,1982
template <typename EntryT> struct ListStream 61,2194
  std::vector<entry_type> Entries;64,2287
  explicit ListStream(66,2323
  static bool classof(69,2459
struct ParsedModule 73,2613
  static constexpr Stream::StreamKind Kind 74,2635
  static constexpr minidump::StreamType Type 75,2712
  minidump::Module Entry;77,2794
  std::string Name;78,2820
  yaml::BinaryRef CvRecord;79,2840
  yaml::BinaryRef MiscRecord;80,2868
struct ParsedThread 84,2977
  static constexpr Stream::StreamKind Kind 85,2999
  static constexpr minidump::StreamType Type 86,3076
  minidump::Thread Entry;88,3158
  yaml::BinaryRef Stack;89,3184
  yaml::BinaryRef Context;90,3209
struct ParsedMemoryDescriptor 94,3311
  static constexpr Stream::StreamKind Kind 95,3343
  static constexpr minidump::StreamType Type 96,3420
  minidump::MemoryDescriptor Entry;98,3502
  yaml::BinaryRef Content;99,3538
using ModuleListStream 103,3591
using ThreadListStream 104,3658
using MemoryListStream 105,3725
struct ExceptionStream 108,3840
  minidump::ExceptionStream MDExceptionStream;109,3881
  yaml::BinaryRef ThreadContext;110,3928
  ExceptionStream(112,3962
  explicit ExceptionStream(116,4088
  static bool classof(121,4378
struct MemoryInfoListStream 128,4570
  std::vector<minidump::MemoryInfo> Infos;129,4616
  MemoryInfoListStream(131,4660
  explicit MemoryInfoListStream(135,4785
  static bool classof(141,5031
struct RawContentStream 148,5262
  yaml::BinaryRef Content;149,5304
  yaml::Hex32 Size;150,5331
  RawContentStream(152,5352
  static bool classof(156,5527
struct SystemInfoStream 162,5654
  minidump::SystemInfo Info;163,5696
  std::string CSDVersion;164,5725
  SystemInfoStream(166,5752
  explicit SystemInfoStream(171,5889
  static bool classof(176,6135
struct TextContentStream 186,6452
  BlockStringRef Text;187,6495
  TextContentStream(189,6519
  static bool classof(192,6649
struct Object 201,7037
  Object(208,7230
  minidump::Header Header;213,7409
  std::vector<std::unique_ptr<Stream>> Streams;216,7488
namespace yaml 223,7638
template <> struct BlockScalarTraits<BlockScalarTraits224,7655
  static void output(225,7724
  static StringRef input(230,7856
template <> struct MappingTraits<MappingTraits237,8012
template <> struct MappingContextTraits<MappingContextTraits242,8244

/usr/include/llvm/ObjectYAML/WasmYAML.h,8862
#define LLVM_OBJECTYAML_WASMYAML_H16,594
namespace llvm 26,822
struct FileHeader 43,1482
  yaml::Hex32 Version;44,1502
struct Limits 47,1529
  LimitFlags Flags;48,1545
  yaml::Hex32 Minimum;49,1565
  yaml::Hex32 Maximum;50,1588
struct Table 53,1615
  TableType ElemType;54,1630
  Limits TableLimits;55,1652
  uint32_t Index;56,1674
struct Export 59,1696
  StringRef Name;60,1712
  ExportKind Kind;61,1730
  uint32_t Index;62,1749
struct InitExpr 65,1771
  InitExpr(66,1789
  bool Extended;67,1805
    wasm::WasmInitExprMVP Inst;69,1832
    yaml::BinaryRef Body;70,1864
struct ElemSegment 74,1899
  uint32_t Flags;75,1920
  uint32_t TableNumber;76,1938
  ValueType ElemKind;77,1962
  InitExpr Offset;78,1984
  std::vector<uint32_t> Functions;79,2003
struct Global 82,2042
  uint32_t Index;83,2058
  ValueType Type;84,2076
  bool Mutable;85,2094
  InitExpr Init;86,2110
struct Import 89,2131
  Import(90,2147
  StringRef Module;91,2161
  StringRef Field;92,2181
  ExportKind Kind;93,2200
    uint32_t SigIndex;95,2229
    Table TableImport;96,2252
    Limits Memory;97,2275
    uint32_t TagIndex;98,2294
    Global GlobalImport;99,2317
struct LocalDecl 103,2351
  ValueType Type;104,2370
  uint32_t Count;105,2388
struct Function 108,2410
  uint32_t Index;109,2428
  std::vector<LocalDecl> Locals;110,2446
  yaml::BinaryRef Body;111,2479
struct Relocation 114,2507
  RelocType Type;115,2527
  uint32_t Index;116,2545
  yaml::Hex32 Offset;119,2675
  int64_t Addend;120,2697
struct DataSegment 123,2719
  uint32_t SectionOffset;124,2740
  uint32_t InitFlags;125,2766
  uint32_t MemoryIndex;126,2788
  InitExpr Offset;127,2812
  yaml::BinaryRef Content;128,2831
struct NameEntry 131,2862
  uint32_t Index;132,2881
  StringRef Name;133,2899
struct ProducerEntry 136,2921
  std::string Name;137,2944
  std::string Version;138,2964
struct FeatureEntry 141,2991
  FeaturePolicyPrefix Prefix;142,3013
  std::string Name;143,3043
struct SegmentInfo 146,3067
  uint32_t Index;147,3088
  StringRef Name;148,3106
  uint32_t Alignment;149,3124
  SegmentFlags Flags;150,3146
struct Signature 153,3172
  uint32_t Index;154,3191
  SignatureForm Form 155,3209
  std::vector<ValueType> ParamTypes;156,3254
  std::vector<ValueType> ReturnTypes;157,3291
struct SymbolInfo 160,3333
  uint32_t Index;161,3353
  StringRef Name;162,3371
  SymbolKind Kind;163,3389
  SymbolFlags Flags;164,3408
    uint32_t ElementIndex;166,3439
    wasm::WasmDataReference DataRef;167,3466
struct InitFunction 171,3512
  uint32_t Priority;172,3534
  uint32_t Symbol;173,3555
struct ComdatEntry 176,3578
  ComdatKind Kind;177,3599
  uint32_t Index;178,3618
struct Comdat 181,3640
  StringRef Name;182,3656
  std::vector<ComdatEntry> Entries;183,3674
struct Section 186,3714
  explicit Section(187,3731
  SectionType Type;190,3813
  std::vector<Relocation> Relocations;191,3833
  std::optional<uint8_t> HeaderSecSizeEncodingLen;192,3872
struct CustomSection 195,3927
  explicit CustomSection(196,3960
  static bool classof(199,4056
  StringRef Name;203,4148
  yaml::BinaryRef Payload;204,4166
struct DylinkImportInfo 207,4197
  StringRef Module;208,4223
  StringRef Field;209,4243
  SymbolFlags Flags;210,4262
struct DylinkExportInfo 213,4287
  StringRef Name;214,4313
  SymbolFlags Flags;215,4331
struct DylinkSection 218,4356
  DylinkSection(219,4395
  static bool classof(221,4445
  uint32_t MemorySize;226,4572
  uint32_t MemoryAlignment;227,4595
  uint32_t TableSize;228,4623
  uint32_t TableAlignment;229,4645
  std::vector<StringRef> Needed;230,4672
  std::vector<DylinkImportInfo> ImportInfo;231,4705
  std::vector<DylinkExportInfo> ExportInfo;232,4749
struct NameSection 235,4797
  NameSection(236,4834
  static bool classof(238,4878
  std::vector<NameEntry> FunctionNames;243,5001
  std::vector<NameEntry> GlobalNames;244,5041
  std::vector<NameEntry> DataSegmentNames;245,5079
struct LinkingSection 248,5126
  LinkingSection(249,5166
  static bool classof(251,5216
  uint32_t Version;256,5342
  std::vector<SymbolInfo> SymbolTable;257,5362
  std::vector<SegmentInfo> SegmentInfos;258,5401
  std::vector<InitFunction> InitFunctions;259,5442
  std::vector<Comdat> Comdats;260,5485
struct ProducersSection 263,5520
  ProducersSection(264,5562
  static bool classof(266,5616
  std::vector<ProducerEntry> Languages;271,5744
  std::vector<ProducerEntry> Tools;272,5784
  std::vector<ProducerEntry> SDKs;273,5820
struct TargetFeaturesSection 276,5859
  TargetFeaturesSection(277,5906
  static bool classof(279,5971
  std::vector<FeatureEntry> Features;284,6105
struct TypeSection 287,6147
  TypeSection(288,6178
  static bool classof(290,6229
  std::vector<Signature> Signatures;294,6319
struct ImportSection 297,6360
  ImportSection(298,6393
  static bool classof(300,6448
  std::vector<Import> Imports;304,6540
struct FunctionSection 307,6575
  FunctionSection(308,6610
  static bool classof(310,6669
  std::vector<uint32_t> FunctionTypes;314,6763
struct TableSection 317,6806
  TableSection(318,6838
  static bool classof(320,6891
  std::vector<Table> Tables;324,6982
struct MemorySection 327,7015
  MemorySection(328,7048
  static bool classof(330,7103
  std::vector<Limits> Memories;334,7195
struct TagSection 337,7231
  TagSection(338,7261
  static bool classof(340,7310
  std::vector<uint32_t> TagTypes;344,7399
struct GlobalSection 347,7437
  GlobalSection(348,7470
  static bool classof(350,7525
  std::vector<Global> Globals;354,7617
struct ExportSection 357,7652
  ExportSection(358,7685
  static bool classof(360,7740
  std::vector<Export> Exports;364,7832
struct StartSection 367,7867
  StartSection(368,7899
  static bool classof(370,7952
  uint32_t StartFunction;374,8043
struct ElemSection 377,8073
  ElemSection(378,8104
  static bool classof(380,8155
  std::vector<ElemSegment> Segments;384,8245
struct CodeSection 387,8286
  CodeSection(388,8317
  static bool classof(390,8368
  std::vector<Function> Functions;394,8458
struct DataSection 397,8497
  DataSection(398,8528
  static bool classof(400,8579
  std::vector<DataSegment> Segments;404,8669
struct DataCountSection 407,8710
  DataCountSection(408,8746
  static bool classof(410,8807
  uint32_t Count;414,8902
struct Object 417,8924
  FileHeader Header;418,8940
  std::vector<std::unique_ptr<Section>> Sections;419,8961
namespace llvm 449,10386
namespace yaml 450,10403
template <> struct MappingTraits<MappingTraits452,10421
template <> struct MappingTraits<MappingTraits456,10544
template <> struct MappingTraits<MappingTraits460,10695
template <> struct MappingTraits<MappingTraits464,10809
template <> struct MappingTraits<MappingTraits468,10923
template <> struct MappingTraits<MappingTraits472,11037
template <> struct ScalarBitSetTraits<ScalarBitSetTraits476,11151
template <> struct ScalarBitSetTraits<ScalarBitSetTraits480,11276
template <> struct ScalarEnumerationTraits<ScalarEnumerationTraits484,11403
template <> struct ScalarBitSetTraits<ScalarBitSetTraits488,11537
template <> struct ScalarEnumerationTraits<ScalarEnumerationTraits492,11666
template <> struct MappingTraits<MappingTraits496,11802
template <> struct MappingTraits<MappingTraits500,11925
template <> struct MappingTraits<MappingTraits504,12036
template <> struct MappingTraits<MappingTraits508,12150
template <> struct MappingTraits<MappingTraits512,12270
template <> struct MappingTraits<MappingTraits516,12396
template <> struct MappingTraits<MappingTraits520,12519
template <> struct ScalarEnumerationTraits<ScalarEnumerationTraits524,12654
template <> struct MappingTraits<MappingTraits528,12808
template <> struct MappingTraits<MappingTraits532,12940
template <> struct MappingTraits<MappingTraits536,13069
template <> struct MappingTraits<MappingTraits540,13192
template <> struct MappingTraits<MappingTraits544,13308
template <> struct MappingTraits<MappingTraits548,13433
template <> struct MappingTraits<MappingTraits552,13558
template <> struct MappingTraits<MappingTraits556,13678
template <> struct ScalarEnumerationTraits<ScalarEnumerationTraits560,13802
template <> struct MappingTraits<MappingTraits564,13936
template <> struct MappingTraits<MappingTraits568,14065
template <> struct ScalarEnumerationTraits<ScalarEnumerationTraits572,14179
template <> struct ScalarEnumerationTraits<ScalarEnumerationTraits576,14311
template <> struct ScalarEnumerationTraits<ScalarEnumerationTraits580,14445
template <> struct ScalarEnumerationTraits<ScalarEnumerationTraits584,14577
template <> struct ScalarEnumerationTraits<ScalarEnumerationTraits588,14705
template <> struct MappingTraits<MappingTraits592,14837
template <> struct MappingTraits<MappingTraits596,14969

/usr/include/llvm/ObjectYAML/XCOFFYAML.h,6593
#define LLVM_OBJECTYAML_XCOFFYAML_H13,569
struct FileHeader 23,756
  llvm::yaml::Hex16 Magic;24,776
  uint16_t NumberOfSections;25,803
  int32_t TimeStamp;26,832
  llvm::yaml::Hex64 SymbolTableOffset;27,853
  int32_t NumberOfSymTableEntries;28,892
  uint16_t AuxHeaderSize;29,927
  llvm::yaml::Hex16 Flags;30,953
struct AuxiliaryHeader 33,984
  std::optional<llvm::yaml::Hex16> Magic;34,1009
  std::optional<llvm::yaml::Hex16> Version;35,1051
  std::optional<llvm::yaml::Hex64> TextStartAddr;36,1095
  std::optional<llvm::yaml::Hex64> DataStartAddr;37,1145
  std::optional<llvm::yaml::Hex64> TOCAnchorAddr;38,1195
  std::optional<uint16_t> SecNumOfEntryPoint;39,1245
  std::optional<uint16_t> SecNumOfText;40,1291
  std::optional<uint16_t> SecNumOfData;41,1331
  std::optional<uint16_t> SecNumOfTOC;42,1371
  std::optional<uint16_t> SecNumOfLoader;43,1410
  std::optional<uint16_t> SecNumOfBSS;44,1452
  std::optional<llvm::yaml::Hex16> MaxAlignOfText;45,1491
  std::optional<llvm::yaml::Hex16> MaxAlignOfData;46,1542
  std::optional<llvm::yaml::Hex16> ModuleType;47,1593
  std::optional<llvm::yaml::Hex8> CpuFlag;48,1640
  std::optional<llvm::yaml::Hex8> CpuType;49,1683
  std::optional<llvm::yaml::Hex8> TextPageSize;50,1726
  std::optional<llvm::yaml::Hex8> DataPageSize;51,1774
  std::optional<llvm::yaml::Hex8> StackPageSize;52,1822
  std::optional<llvm::yaml::Hex8> FlagAndTDataAlignment;53,1871
  std::optional<llvm::yaml::Hex64> TextSize;54,1928
  std::optional<llvm::yaml::Hex64> InitDataSize;55,1973
  std::optional<llvm::yaml::Hex64> BssDataSize;56,2022
  std::optional<llvm::yaml::Hex64> EntryPointAddr;57,2070
  std::optional<llvm::yaml::Hex64> MaxStackSize;58,2121
  std::optional<llvm::yaml::Hex64> MaxDataSize;59,2170
  std::optional<uint16_t> SecNumOfTData;60,2218
  std::optional<uint16_t> SecNumOfTBSS;61,2259
  std::optional<llvm::yaml::Hex16> Flag;62,2299
struct Relocation 65,2344
  llvm::yaml::Hex64 VirtualAddress;66,2364
  llvm::yaml::Hex64 SymbolIndex;67,2400
  llvm::yaml::Hex8 Info;68,2433
  llvm::yaml::Hex8 Type;69,2458
struct Section 72,2487
  StringRef SectionName;73,2504
  llvm::yaml::Hex64 Address;74,2529
  llvm::yaml::Hex64 Size;75,2558
  llvm::yaml::Hex64 FileOffsetToData;76,2584
  llvm::yaml::Hex64 FileOffsetToRelocations;77,2622
  llvm::yaml::Hex64 FileOffsetToLineNumbers;78,2667
  llvm::yaml::Hex16 NumberOfRelocations;79,2755
  llvm::yaml::Hex16 NumberOfLineNumbers;80,2796
  uint32_t Flags;81,2879
  yaml::BinaryRef SectionData;82,2897
  std::vector<Relocation> Relocations;83,2928
enum AuxSymbolType 86,2971
  AUX_EXCEPT 87,3002
  AUX_FCN 88,3022
  AUX_SYM 89,3039
  AUX_FILE 90,3056
  AUX_CSECT 91,3074
  AUX_SECT 92,3093
  AUX_STAT 93,3111
struct AuxSymbolEnt 96,3132
  AuxSymbolType Type;97,3154
  explicit AuxSymbolEnt(99,3177
struct FileAuxEnt 103,3262
  std::optional<StringRef> FileNameOrString;104,3297
  std::optional<XCOFF::CFileStringType> FileStringType;105,3342
  FileAuxEnt(107,3399
  static bool classof(108,3457
struct CsectAuxEnt 113,3559
  std::optional<uint32_t> SectionOrLength;115,3618
  std::optional<uint32_t> StabInfoIndex;116,3661
  std::optional<uint16_t> StabSectNum;117,3702
  std::optional<uint32_t> SectionOrLengthLo;119,3764
  std::optional<uint32_t> SectionOrLengthHi;120,3809
  std::optional<uint32_t> ParameterHashIndex;122,3903
  std::optional<uint16_t> TypeChkSectNum;123,3949
  std::optional<uint8_t> SymbolAlignmentAndType;124,3991
  std::optional<XCOFF::StorageMappingClass> StorageMappingClass;125,4040
  CsectAuxEnt(127,4106
  static bool classof(128,4166
struct FunctionAuxEnt 133,4269
  std::optional<uint32_t> OffsetToExceptionTbl;134,4308
  std::optional<uint64_t> PtrToLineNum;135,4377
  std::optional<uint32_t> SizeOfFunction;136,4417
  std::optional<int32_t> SymIdxOfNextBeyond;137,4459
  FunctionAuxEnt(139,4505
  static bool classof(140,4566
struct ExcpetionAuxEnt 145,4667
  std::optional<uint64_t> OffsetToExceptionTbl;146,4707
  std::optional<uint32_t> SizeOfFunction;147,4755
  std::optional<int32_t> SymIdxOfNextBeyond;148,4797
  ExcpetionAuxEnt(150,4843
  static bool classof(151,4908
struct BlockAuxEnt 156,5033
  std::optional<uint16_t> LineNumHi;158,5092
  std::optional<uint16_t> LineNumLo;159,5129
  std::optional<uint32_t> LineNum;161,5189
  BlockAuxEnt(163,5225
  static bool classof(164,5283
struct SectAuxEntForDWARF 169,5384
  std::optional<uint32_t> LengthOfSectionPortion;170,5427
  std::optional<uint32_t> NumberOfRelocEnt;171,5477
  SectAuxEntForDWARF(173,5522
  static bool classof(174,5588
struct SectAuxEntForStat 179,5690
  std::optional<uint32_t> SectionLength;180,5732
  std::optional<uint16_t> NumberOfRelocEnt;181,5773
  std::optional<uint16_t> NumberOfLineNum;182,5817
  SectAuxEntForStat(184,5861
  static bool classof(185,5926
struct Symbol 190,6049
  StringRef SymbolName;191,6065
  llvm::yaml::Hex64 Value;192,6089
  std::optional<StringRef> SectionName;193,6158
  std::optional<uint16_t> SectionIndex;194,6198
  llvm::yaml::Hex16 Type;195,6238
  XCOFF::StorageClass StorageClass;196,6264
  std::optional<uint8_t> NumberOfAuxEntries;197,6300
  std::vector<std::unique_ptr<AuxSymbolEnt>> AuxEntries;198,6345
struct StringTable 201,6406
  std::optional<uint32_t> ContentSize;202,6427
  std::optional<uint32_t> Length;203,6505
  std::optional<std::vector<StringRef>> Strings;205,6645
  std::optional<yaml::BinaryRef> RawContent;206,6694
struct Object 209,6743
  FileHeader Header;210,6759
  std::optional<AuxiliaryHeader> AuxHeader;211,6780
  std::vector<Section> Sections;212,6824
  std::vector<Symbol> Symbols;213,6857
  StringTable StrTbl;214,6888
namespace llvm 225,7198
namespace yaml 226,7215
template <> struct ScalarBitSetTraits<ScalarBitSetTraits228,7233
template <> struct ScalarEnumerationTraits<ScalarEnumerationTraits232,7364
template <> struct ScalarEnumerationTraits<ScalarEnumerationTraits236,7497
template <> struct ScalarEnumerationTraits<ScalarEnumerationTraits240,7644
template <> struct ScalarEnumerationTraits<ScalarEnumerationTraits244,7782
template <> struct MappingTraits<MappingTraits248,7924
template <> struct MappingTraits<MappingTraits252,8043
template <> struct MappingTraits<MappingTraits256,8177
template <> struct MappingTraits<MappingTraits260,8339
template <> struct MappingTraits<MappingTraits264,8450
template <> struct MappingTraits<MappingTraits268,8569
template <> struct MappingTraits<MappingTraits272,8684
template <> struct MappingTraits<MappingTraits276,8807

/usr/include/llvm/ObjectYAML/YAML.h,317
#define LLVM_OBJECTYAML_YAML_H10,401
class BinaryRef 63,1899
  ArrayRef<uint8_t> Data;68,2096
  BinaryRef(75,2253
  BinaryRef(76,2329
  ArrayRef<uint8_t>::size_type binary_size(80,2530
  void writeAsBinary(89,2847
template <> struct ScalarTraits<ScalarTraits106,3417
  static QuotingType mustQuote(109,3584

/usr/include/llvm/ObjectYAML/DXContainerYAML.h,3658
#define LLVM_OBJECTYAML_DXCONTAINERYAML_H16,599
struct VersionTuple 31,927
  uint16_t Major;32,949
  uint16_t Minor;33,967
struct FileHeader 39,1176
  std::vector<llvm::yaml::Hex8> Hash;40,1196
  VersionTuple Version;41,1234
  std::optional<uint32_t> FileSize;42,1258
  uint32_t PartCount;43,1294
  std::optional<std::vector<uint32_t>> PartOffsets;44,1316
struct DXILProgram 47,1372
  uint8_t MajorVersion;48,1393
  uint8_t MinorVersion;49,1417
  uint16_t ShaderKind;50,1441
  std::optional<uint32_t> Size;51,1464
  uint16_t DXILMajorVersion;52,1496
  uint16_t DXILMinorVersion;53,1525
  std::optional<uint32_t> DXILOffset;54,1554
  std::optional<uint32_t> DXILSize;55,1592
  std::optional<std::vector<llvm::yaml::Hex8>> DXIL;56,1628
#define SHADER_FLAG(59,1685
struct ShaderFlags 60,1738
struct ShaderHash 67,1908
  bool IncludesSource;71,1999
  std::vector<llvm::yaml::Hex8> Digest;72,2022
using ResourceBindInfo 75,2066
struct SignatureElement 77,2125
  SignatureElement(80,2184
  StringRef Name;89,2752
  SmallVector<uint32_t> Indices;90,2770
  uint8_t StartRow;92,2804
  uint8_t Cols;93,2824
  uint8_t StartCol;94,2840
  bool Allocated;95,2860
  dxbc::PSV::SemanticKind Kind;96,2878
  dxbc::PSV::ComponentType Type;98,2911
  dxbc::PSV::InterpolationMode Mode;99,2944
  llvm::yaml::Hex8 DynamicMask;100,2981
  uint8_t Stream;101,3013
struct PSVInfo 104,3035
  uint32_t Version;108,3229
  dxbc::PSV::v2::RuntimeInfo Info;110,3250
  uint32_t ResourceStride;111,3285
  SmallVector<ResourceBindInfo> Resources;112,3312
  SmallVector<SignatureElement> SigInputElements;113,3355
  SmallVector<SignatureElement> SigOutputElements;114,3405
  SmallVector<SignatureElement> SigPatchOrPrimElements;115,3456
  using MaskVector 117,3513
  std::array<std::array118,3566
  std::array<MaskVector, 4> OutputVectorMasks;118,3566
  MaskVector PatchOrPrimMasks;119,3613
  std::array<std::array120,3644
  std::array<MaskVector, 4> InputOutputMap;120,3644
  MaskVector InputPatchMap;121,3688
  MaskVector PatchOutputMap;122,3716
struct SignatureParameter 132,3964
  uint32_t Stream;133,3992
  std::string Name;134,4011
  uint32_t Index;135,4031
  dxbc::D3DSystemValue SystemValue;136,4049
  dxbc::SigComponentType CompType;137,4085
  uint32_t Register;138,4120
  uint8_t Mask;139,4141
  uint8_t ExclusiveMask;140,4157
  dxbc::SigMinPrecision MinPrecision;141,4182
struct Signature 144,4224
  llvm::SmallVector<SignatureParameter> Parameters;145,4243
struct Part 148,4299
  Part(150,4333
  std::string Name;151,4389
  uint32_t Size;152,4409
  std::optional<DXILProgram> Program;153,4426
  std::optional<ShaderFlags> Flags;154,4464
  std::optional<ShaderHash> Hash;155,4500
  std::optional<PSVInfo> Info;156,4534
  std::optional<DXContainerYAML::Signature> Signature;157,4565
struct Object 160,4624
  FileHeader Header;161,4640
  std::vector<Part> Parts;162,4661
namespace llvm 180,5454
namespace yaml 184,5492
template <> struct MappingTraits<MappingTraits186,5510
template <> struct MappingTraits<MappingTraits190,5651
template <> struct MappingTraits<MappingTraits194,5787
template <> struct MappingTraits<MappingTraits198,5926
template <> struct MappingTraits<MappingTraits202,6063
template <> struct MappingTraits<MappingTraits206,6197
template <> struct MappingTraits<MappingTraits210,6324
template <> struct MappingTraits<MappingTraits214,6449
template <> struct MappingTraits<MappingTraits218,6574
template <> struct MappingTraits<MappingTraits222,6719
template <> struct MappingTraits<MappingTraits226,6869
template <> struct MappingTraits<MappingTraits230,7023

/usr/include/llvm/ObjectYAML/ELFYAML.h,15886
#define LLVM_OBJECTYAML_ELFYAML_H16,583
struct FileHeader 113,4171
  ELF_ELFCLASS Class;114,4191
  ELF_ELFDATA Data;115,4213
  ELF_ELFOSABI OSABI;116,4233
  llvm::yaml::Hex8 ABIVersion;117,4255
  ELF_ET Type;118,4286
  std::optional<ELF_EM> Machine;119,4301
  ELF_EF Flags;120,4334
  llvm::yaml::Hex64 Entry;121,4350
  std::optional<StringRef> SectionHeaderStringTable;122,4377
  std::optional<llvm::yaml::Hex64> EPhOff;124,4431
  std::optional<llvm::yaml::Hex16> EPhEntSize;125,4474
  std::optional<llvm::yaml::Hex16> EPhNum;126,4521
  std::optional<llvm::yaml::Hex16> EShEntSize;127,4564
  std::optional<llvm::yaml::Hex64> EShOff;128,4611
  std::optional<llvm::yaml::Hex16> EShNum;129,4654
  std::optional<llvm::yaml::Hex16> EShStrNdx;130,4697
struct SectionHeader 133,4747
  StringRef Name;134,4770
struct Symbol 137,4792
  StringRef Name;138,4808
  ELF_STT Type;139,4826
  std::optional<StringRef> Section;140,4842
  std::optional<ELF_SHN> Index;141,4878
  ELF_STB Binding;142,4910
  std::optional<llvm::yaml::Hex64> Value;143,4929
  std::optional<llvm::yaml::Hex64> Size;144,4971
  std::optional<uint8_t> Other;145,5012
  std::optional<uint32_t> StName;147,5045
struct SectionOrType 150,5083
  StringRef sectionNameOrType;151,5106
struct DynamicEntry 154,5141
  ELF_DYNTAG Tag;155,5163
  llvm::yaml::Hex64 Val;156,5181
struct BBAddrMapEntry 159,5210
  struct BBEntry 160,5234
    uint32_t ID;161,5253
    llvm::yaml::Hex64 AddressOffset;162,5270
    llvm::yaml::Hex64 Size;163,5307
    llvm::yaml::Hex64 Metadata;164,5335
  uint8_t Version;166,5372
  llvm::yaml::Hex8 Feature;167,5391
  llvm::yaml::Hex64 Address;168,5419
  std::optional<uint64_t> NumBlocks;169,5448
  std::optional<std::vector<BBEntry>> BBEntries;170,5485
struct PGOAnalysisMapEntry 173,5538
  struct PGOBBEntry 174,5567
    struct SuccessorEntry 175,5589
      uint32_t ID;176,5617
      llvm::yaml::Hex32 BrProb;177,5636
    std::optional<uint64_t> BBFreq;179,5675
    std::optional<std::vector<SuccessorEntry>> Successors;180,5711
  std::optional<uint64_t> FuncEntryCount;182,5775
  std::optional<std::vector<PGOBBEntry>> PGOBBEntries;183,5817
struct StackSizeEntry 186,5876
  llvm::yaml::Hex64 Address;187,5900
  llvm::yaml::Hex64 Size;188,5929
struct NoteEntry 191,5959
  StringRef Name;192,5978
  yaml::BinaryRef Desc;193,5996
  ELF_NT Type;194,6020
struct Chunk 197,6039
  enum class ChunkKind 198,6054
    Dynamic,199,6079
    Group,200,6092
    RawContent,201,6103
    Relocation,202,6119
    Relr,203,6135
    NoBits,204,6145
    Note,205,6157
    Hash,206,6167
    GnuHash,207,6177
    Verdef,208,6190
    Verneed,209,6202
    StackSizes,210,6215
    SymtabShndxSection,211,6231
    Symver,212,6255
    ARMIndexTable,213,6267
    MipsABIFlags,214,6286
    Addrsig,215,6304
    LinkerOptions,216,6317
    DependentLibraries,217,6336
    CallGraphProfile,218,6360
    BBAddrMap,219,6382
    SpecialChunksStart,222,6421
    Fill 223,6445
    SectionHeaderTable,224,6476
  ChunkKind Kind;227,6506
  StringRef Name;228,6524
  std::optional<llvm::yaml::Hex64> Offset;229,6542
  bool IsImplicit;233,6729
  Chunk(235,6749
struct Section 239,6844
  ELF_SHT Type;240,6876
  std::optional<ELF_SHF> Flags;241,6892
  std::optional<llvm::yaml::Hex64> Address;242,6924
  std::optional<StringRef> Link;243,6968
  llvm::yaml::Hex64 AddressAlign;244,7001
  std::optional<llvm::yaml::Hex64> EntSize;245,7035
  std::optional<yaml::BinaryRef> Content;247,7080
  std::optional<llvm::yaml::Hex64> Size;248,7122
  unsigned OriginalSecNdx;251,7203
  Section(253,7231
  static bool classof(255,7312
  virtual std::vector<std::vector262,7580
  virtual std::vector<std::pair<StringRef, bool>> getEntries(262,7580
  std::optional<llvm::yaml::Hex64> ShAddrAlign;270,7845
  std::optional<llvm::yaml::Hex64> ShName;274,8029
  std::optional<llvm::yaml::Hex64> ShOffset;278,8193
  std::optional<llvm::yaml::Hex64> ShSize;282,8337
  std::optional<llvm::yaml::Hex64> ShFlags;285,8435
  std::optional<ELF_SHT> ShType;291,8723
struct Fill 297,8949
  std::optional<yaml::BinaryRef> Pattern;298,8971
  llvm::yaml::Hex64 Size;299,9013
  Fill(301,9040
  static bool classof(303,9098
struct SectionHeaderTable 306,9179
  SectionHeaderTable(307,9215
  static bool classof(310,9314
  std::optional<std::vector<SectionHeader>> Sections;314,9412
  std::optional<std::vector<SectionHeader>> Excluded;315,9466
  std::optional<bool> NoHeaders;316,9520
  size_t getNumHeaders(318,9554
  bool isDefault(326,9802
  static constexpr StringRef TypeStr 328,9877
struct BBAddrMapSection 331,9942
  std::optional<std::vector<BBAddrMapEntry>> Entries;332,9978
  std::optional<std::vector<PGOAnalysisMapEntry>> PGOAnalyses;333,10032
  BBAddrMapSection(335,10096
  std::vector<std::vector337,10153
  std::vector<std::pair<StringRef, bool>> getEntries(337,10153
  static bool classof(341,10278
struct StackSizesSection 346,10370
  std::optional<std::vector<StackSizeEntry>> Entries;347,10407
  StackSizesSection(349,10462
  std::vector<std::vector351,10521
  std::vector<std::pair<StringRef, bool>> getEntries(351,10521
  static bool classof(355,10646
  static bool nameMatches(359,10736
struct DynamicSection 364,10823
  std::optional<std::vector<DynamicEntry>> Entries;365,10857
  DynamicSection(367,10910
  std::vector<std::vector369,10963
  std::vector<std::pair<StringRef, bool>> getEntries(369,10963
  static bool classof(373,11088
struct RawContentSection 376,11172
  std::optional<llvm::yaml::Hex64> Info;377,11209
  RawContentSection(379,11251
  static bool classof(381,11310
  std::optional<std::vector<uint8_t>> ContentBuf;386,11458
struct NoBitsSection 389,11512
  NoBitsSection(390,11545
  static bool classof(392,11596
struct NoteSection 395,11679
  std::optional<std::vector<ELFYAML::NoteEntry>> Notes;396,11710
  NoteSection(398,11767
  std::vector<std::vector400,11814
  std::vector<std::pair<StringRef, bool>> getEntries(400,11814
  static bool classof(404,11935
struct HashSection 407,12016
  std::optional<std::vector<uint32_t>> Bucket;408,12047
  std::optional<std::vector<uint32_t>> Chain;409,12094
  std::vector<std::vector411,12141
  std::vector<std::pair<StringRef, bool>> getEntries(411,12141
  std::optional<llvm::yaml::Hex64> NBucket;417,12408
  std::optional<llvm::yaml::Hex64> NChain;418,12452
  HashSection(420,12496
  static bool classof(422,12543
struct GnuHashHeader 425,12624
  std::optional<llvm::yaml::Hex32> NBuckets;429,12824
  llvm::yaml::Hex32 SymNdx;433,12962
  std::optional<llvm::yaml::Hex32> MaskWords;439,13204
  llvm::yaml::Hex32 Shift2;442,13299
struct GnuHashSection 445,13331
  std::optional<GnuHashHeader> Header;446,13365
  std::optional<std::vector<llvm::yaml::Hex64>> BloomFilter;447,13404
  std::optional<std::vector<llvm::yaml::Hex32>> HashBuckets;448,13465
  std::optional<std::vector<llvm::yaml::Hex32>> HashValues;449,13526
  GnuHashSection(451,13587
  std::vector<std::vector453,13640
  std::vector<std::pair<StringRef, bool>> getEntries(453,13640
  static bool classof(460,13923
struct VernauxEntry 463,14007
  uint32_t Hash;464,14029
  uint16_t Flags;465,14046
  uint16_t Other;466,14064
  StringRef Name;467,14082
struct VerneedEntry 470,14104
  uint16_t Version;471,14126
  StringRef File;472,14146
  std::vector<VernauxEntry> AuxV;473,14164
struct VerneedSection 476,14202
  std::optional<std::vector<VerneedEntry>> VerneedV;477,14236
  std::optional<llvm::yaml::Hex64> Info;478,14289
  VerneedSection(480,14331
  std::vector<std::vector482,14384
  std::vector<std::pair<StringRef, bool>> getEntries(482,14384
  static bool classof(486,14515
struct AddrsigSection 491,14605
  std::optional<std::vector<YAMLFlowString>> Symbols;492,14639
  AddrsigSection(494,14694
  std::vector<std::vector496,14747
  std::vector<std::pair<StringRef, bool>> getEntries(496,14747
  static bool classof(500,14872
struct LinkerOption 503,14956
  StringRef Key;504,14978
  StringRef Value;505,14995
struct LinkerOptionsSection 508,15018
  std::optional<std::vector<LinkerOption>> Options;509,15058
  LinkerOptionsSection(511,15111
  std::vector<std::vector513,15176
  std::vector<std::pair<StringRef, bool>> getEntries(513,15176
  static bool classof(517,15301
struct DependentLibrariesSection 522,15397
  std::optional<std::vector<YAMLFlowString>> Libs;523,15442
  DependentLibrariesSection(525,15494
  std::vector<std::vector527,15569
  std::vector<std::pair<StringRef, bool>> getEntries(527,15569
  static bool classof(531,15693
struct CallGraphEntryWeight 537,15846
  uint64_t Weight;539,15905
struct CallGraphProfileSection 542,15928
  std::optional<std::vector<CallGraphEntryWeight>> Entries;543,15971
  CallGraphProfileSection(545,16032
  std::vector<std::vector547,16103
  std::vector<std::pair<StringRef, bool>> getEntries(547,16103
  static bool classof(551,16228
struct SymverSection 556,16327
  std::optional<std::vector<uint16_t>> Entries;557,16360
  SymverSection(559,16409
  std::vector<std::vector561,16460
  std::vector<std::pair<StringRef, bool>> getEntries(561,16460
  static bool classof(565,16585
struct VerdefEntry 568,16668
  std::optional<uint16_t> Version;569,16689
  std::optional<uint16_t> Flags;570,16724
  std::optional<uint16_t> VersionNdx;571,16757
  std::optional<uint32_t> Hash;572,16795
  std::vector<StringRef> VerNames;573,16827
struct VerdefSection 576,16866
  std::optional<std::vector<VerdefEntry>> Entries;577,16899
  std::optional<llvm::yaml::Hex64> Info;578,16950
  VerdefSection(580,16992
  std::vector<std::vector582,17043
  std::vector<std::pair<StringRef, bool>> getEntries(582,17043
  static bool classof(586,17168
struct GroupSection 589,17251
  std::optional<std::vector<SectionOrType>> Members;592,17385
  std::optional<StringRef> Signature;593,17438
  GroupSection(595,17488
  std::vector<std::vector597,17537
  std::vector<std::pair<StringRef, bool>> getEntries(597,17537
  static bool classof(601,17662
struct Relocation 604,17744
  llvm::yaml::Hex64 Offset;605,17764
  YAMLIntUInt Addend;606,17792
  ELF_REL Type;607,17814
  std::optional<StringRef> Symbol;608,17830
struct RelocationSection 611,17869
  std::optional<std::vector<Relocation>> Relocations;612,17906
  StringRef RelocatableSec;613,17960
  RelocationSection(615,18000
  std::vector<std::vector617,18059
  std::vector<std::pair<StringRef, bool>> getEntries(617,18059
  static bool classof(621,18192
struct RelrSection 626,18285
  std::optional<std::vector<llvm::yaml::Hex64>> Entries;627,18316
  RelrSection(629,18374
  std::vector<std::vector631,18421
  std::vector<std::pair<StringRef, bool>> getEntries(631,18421
  static bool classof(635,18546
struct SymtabShndxSection 640,18633
  std::optional<std::vector<uint32_t>> Entries;641,18671
  SymtabShndxSection(643,18720
  std::vector<std::vector645,18788
  std::vector<std::pair<StringRef, bool>> getEntries(645,18788
  static bool classof(649,18913
struct ARMIndexTableEntry 654,19014
  llvm::yaml::Hex32 Offset;655,19042
  llvm::yaml::Hex32 Value;656,19070
struct ARMIndexTableSection 659,19101
  std::optional<std::vector<ARMIndexTableEntry>> Entries;660,19141
  ARMIndexTableSection(662,19200
  std::vector<std::vector664,19265
  std::vector<std::pair<StringRef, bool>> getEntries(664,19265
  static bool classof(668,19390
struct MipsABIFlags 674,19523
  llvm::yaml::Hex16 Version;675,19555
  MIPS_ISA ISALevel;676,19584
  llvm::yaml::Hex8 ISARevision;677,19605
  MIPS_AFL_REG GPRSize;678,19637
  MIPS_AFL_REG CPR1Size;679,19661
  MIPS_AFL_REG CPR2Size;680,19686
  MIPS_ABI_FP FpABI;681,19711
  MIPS_AFL_EXT ISAExtension;682,19732
  MIPS_AFL_ASE ASEs;683,19761
  MIPS_AFL_FLAGS1 Flags1;684,19782
  llvm::yaml::Hex32 Flags2;685,19808
  MipsABIFlags(687,19837
  static bool classof(689,19893
struct ProgramHeader 694,19988
  ELF_PT Type;695,20011
  ELF_PF Flags;696,20026
  llvm::yaml::Hex64 VAddr;697,20042
  llvm::yaml::Hex64 PAddr;698,20069
  std::optional<llvm::yaml::Hex64> Align;699,20096
  std::optional<llvm::yaml::Hex64> FileSize;700,20138
  std::optional<llvm::yaml::Hex64> MemSize;701,20183
  std::optional<llvm::yaml::Hex64> Offset;702,20227
  std::optional<StringRef> FirstSec;703,20270
  std::optional<StringRef> LastSec;704,20307
  std::vector<Chunk *> Chunks;707,20407
struct Object 710,20442
  FileHeader Header;711,20458
  std::vector<ProgramHeader> ProgramHeaders;712,20479
  std::vector<std::unique_ptr<Chunk>> Chunks;716,20647
  std::optional<std::vector<Symbol>> Symbols;722,20957
  std::optional<std::vector<Symbol>> DynamicSymbols;723,21003
  std::optional<DWARFYAML::Data> DWARF;724,21056
  std::vector<Section *> getSections(726,21097
  const SectionHeaderTable &getSectionHeaderTable(getSectionHeaderTable734,21328
namespace llvm 773,23102
namespace yaml 774,23119
template <> struct ScalarTraits<ScalarTraits776,23137
  static QuotingType mustQuote(781,23405
struct ScalarEnumerationTraits<ScalarEnumerationTraits785,23493
template <> struct ScalarEnumerationTraits<ScalarEnumerationTraits789,23606
template <> struct ScalarEnumerationTraits<ScalarEnumerationTraits793,23731
struct ScalarEnumerationTraits<ScalarEnumerationTraits798,23868
struct ScalarEnumerationTraits<ScalarEnumerationTraits803,23993
struct ScalarEnumerationTraits<ScalarEnumerationTraits808,24130
struct ScalarEnumerationTraits<ScalarEnumerationTraits813,24265
struct ScalarBitSetTraits<ScalarBitSetTraits818,24402
template <> struct ScalarBitSetTraits<ScalarBitSetTraits822,24505
struct ScalarEnumerationTraits<ScalarEnumerationTraits827,24632
struct ScalarBitSetTraits<ScalarBitSetTraits832,24759
template <> struct ScalarEnumerationTraits<ScalarEnumerationTraits836,24864
template <> struct ScalarEnumerationTraits<ScalarEnumerationTraits840,24991
struct ScalarEnumerationTraits<ScalarEnumerationTraits845,25130
struct ScalarEnumerationTraits<ScalarEnumerationTraits850,25257
struct ScalarEnumerationTraits<ScalarEnumerationTraits855,25384
struct ScalarEnumerationTraits<ScalarEnumerationTraits860,25517
struct ScalarEnumerationTraits<ScalarEnumerationTraits865,25644
struct ScalarEnumerationTraits<ScalarEnumerationTraits870,25781
struct ScalarEnumerationTraits<ScalarEnumerationTraits875,25916
struct ScalarEnumerationTraits<ScalarEnumerationTraits880,26053
struct ScalarBitSetTraits<ScalarBitSetTraits885,26182
struct ScalarBitSetTraits<ScalarBitSetTraits890,26309
struct MappingTraits<MappingTraits895,26442
template <> struct MappingTraits<MappingTraits899,26551
template <> struct MappingTraits<MappingTraits903,26675
struct MappingTraits<MappingTraits909,26886
template <> struct MappingTraits<MappingTraits914,27050
template <> struct MappingTraits<MappingTraits918,27175
template <> struct MappingTraits<MappingTraits922,27300
template <> struct MappingTraits<MappingTraits926,27443
template <> struct MappingTraits<MappingTraits930,27578
struct MappingTraits<MappingTraits935,27749
template <> struct MappingTraits<MappingTraits941,27940
template <> struct MappingTraits<MappingTraits945,28063
template <> struct MappingTraits<MappingTraits949,28184
template <> struct MappingTraits<MappingTraits953,28297
template <> struct MappingTraits<MappingTraits957,28414
template <> struct MappingTraits<MappingTraits961,28533
template <> struct MappingTraits<MappingTraits965,28652
template <> struct MappingTraits<MappingTraits969,28773
template <> struct MappingTraits<MappingTraits973,28908
template <> struct MappingTraits<MappingTraits977,29025
template <> struct MappingTraits<MappingTraits981,29156
struct MappingTraits<MappingTraits987,29382
template <> struct MappingTraits<MappingTraits991,29482

/usr/include/llvm/ObjectYAML/GOFFYAML.h,314
#define LLVM_OBJECTYAML_GOFFYAML_H14,568
struct FileHeader 28,939
  StringRef CharacterSetName;32,1053
  StringRef LanguageProductIdentifier;33,1083
  std::optional<uint16_t> InternalCCSID;35,1156
  std::optional<uint8_t> TargetSoftwareEnvironment;36,1197
struct Object 39,1253
  FileHeader Header;40,1269

/usr/include/llvm/ObjectYAML/ObjectYAML.h,724
#define LLVM_OBJECTYAML_OBJECTYAML_H10,407
struct YamlObjectFile 30,945
  std::unique_ptr<ArchYAML::Archive> Arch;31,969
  std::unique_ptr<ELFYAML::Object> Elf;32,1012
  std::unique_ptr<COFFYAML::Object> Coff;33,1052
  std::unique_ptr<GOFFYAML::Object> Goff;34,1094
  std::unique_ptr<MachOYAML::Object> MachO;35,1136
  std::unique_ptr<MachOYAML::UniversalBinary> FatMachO;36,1180
  std::unique_ptr<MinidumpYAML::Object> Minidump;37,1236
  std::unique_ptr<OffloadYAML::Binary> Offload;38,1286
  std::unique_ptr<WasmYAML::Object> Wasm;39,1334
  std::unique_ptr<XCOFFYAML::Object> Xcoff;40,1376
  std::unique_ptr<DXContainerYAML::Object> DXContainer;41,1420
template <> struct MappingTraits<MappingTraits44,1480

/usr/include/llvm/ObjectYAML/OffloadYAML.h,1032
#define LLVM_OBJECTYAML_OFFLOADYAML_H16,603
struct Binary 26,815
  struct StringEntry 27,831
    StringRef Key;28,854
    StringRef Value;29,873
  struct Member 32,900
    std::optional<object::ImageKind> ImageKind;33,918
    std::optional<object::OffloadKind> OffloadKind;34,966
    std::optional<uint32_t> Flags;35,1018
    std::optional<std::vector<StringEntry>> StringEntries;36,1053
    std::optional<yaml::BinaryRef> Content;37,1112
  std::optional<uint32_t> Version;40,1162
  std::optional<uint64_t> Size;41,1197
  std::optional<uint64_t> EntryOffset;42,1229
  std::optional<uint64_t> EntrySize;43,1268
  std::vector<Member> Members;44,1305
namespace llvm 53,1530
namespace yaml 54,1547
template <> struct ScalarEnumerationTraits<ScalarEnumerationTraits56,1565
template <> struct ScalarEnumerationTraits<ScalarEnumerationTraits60,1694
template <> struct MappingTraits<MappingTraits64,1827
template <> struct MappingTraits<MappingTraits68,1942
template <> struct MappingTraits<MappingTraits72,2083

/usr/include/llvm/ObjectYAML/yaml2obj.h,42
#define LLVM_OBJECTYAML_YAML2OBJ_H12,532

/usr/include/llvm/Option/Arg.h,1115
#define LLVM_OPTION_ARG_H15,549
class Arg 34,931
  const Option Opt;37,1002
  const Arg *BaseArg;BaseArg41,1129
  StringRef Spelling;44,1203
  unsigned Index;48,1306
  mutable unsigned Claimed 55,1557
  unsigned IgnoredTargetSpecific 59,1746
  mutable unsigned OwnsValues 62,1826
  SmallVector<const char 65,1903
  SmallVector<const char *, 2> Values;65,1903
  std::unique_ptr<Arg> Alias;70,2157
  const Option &getOption(getOption83,2627
  StringRef getSpelling(91,2958
  unsigned getIndex(93,3012
  const Arg &getBaseArg(getBaseArg99,3254
  Arg &getBaseArg(getBaseArg102,3331
  void setBaseArg(103,3409
  const Arg* getAlias(107,3629
  void setAlias(108,3683
  bool getOwnsValues(110,3764
  void setOwnsValues(111,3816
  bool isClaimed(113,3880
  void claim(114,3938
  bool isIgnoredTargetSpecific(116,3993
  void ignoreTargetSpecific(119,4085
  unsigned getNumValues(123,4169
  const char *getValue(getValue125,4228
  SmallVectorImpl<const char *> &getValues(getValues129,4302
  const SmallVectorImpl<const char *> &getValues(getValues130,4366
  bool containsValue(132,4443

/usr/include/llvm/Option/OptSpecifier.h,189
#define LLVM_OPTION_OPTSPECIFIER_H10,405
class OptSpecifier 18,565
  /*implicit*/ OptSpecifier(24,682
  /*implicit*/ OptSpecifier(25,735
  bool isValid(27,784
  unsigned getID(29,828

/usr/include/llvm/Option/ArgList.h,1634
#define LLVM_OPTION_ARGLIST_H10,400
  reference operator*(87,2469
  pointer operator->(88,2520
  arg_iterator &operator++(operator++90,2570
  arg_iterator operator++(96,2660
  friend bool operator==(operator==102,2758
  friend bool operator!=(operator!=105,2864
class ArgList 116,3266
  using arglist_type 118,3290
  using iterator 119,3337
  using const_iterator 120,3394
  using reverse_iterator 121,3463
  using const_reverse_iterator 122,3536
  template<unsigned N> using filtered_iterator 125,3628
  template<unsigned N> using filtered_reverse_iterator 127,3730
  arglist_type Args;132,3896
  using OptRange 134,3918
  static OptRange emptyRange(135,3968
  DenseMap<DenseMap138,4088
  DenseMap<unsigned, OptRange> OptRanges;138,4088
  ArgList(155,4927
  ArgList &operator=(operator=161,5079
  static OptSpecifier toOptSpecifier(174,5508
  const arglist_type &getArgs(getArgs183,5685
  unsigned size(185,5741
  iterator begin(191,5835
  iterator end(192,5893
  reverse_iterator rbegin(194,5948
  reverse_iterator rend(195,6017
  const_iterator begin(197,6083
  const_iterator end(198,6153
  const_reverse_iterator rbegin(200,6220
  const_reverse_iterator rend(201,6301
  filtered(205,6479
  filtered_reverse(216,6968
  bool hasArgNoClaim(240,7715
  bool hasArg(244,7857
  bool hasMultipleArgs(249,8026
  Arg *getLastArg(getLastArg256,8278
  Arg *getLastArgNoClaim(getLastArgNoClaim268,8613
  void addOptOutFlag(316,10603
  void AddLastArg(323,10853
  void claimAllArgs(358,12429
  const char *MakeArgString(MakeArgString373,12820
  InputArgList &operator=(operator=421,14392

/usr/include/llvm/Option/OptParser.td,3790
#define LLVM_OPTION_OPTPARSER_TD15,583
class OptionFlag 57,2221
def HelpHidden : OptionFlag;62,2446
def RenderAsInput : OptionFlag;66,2604
def RenderJoined : OptionFlag;70,2763
def RenderSeparate : OptionFlag;74,2910
class OptionVisibility 78,2977
def DefaultVis : OptionVisibility;81,3049
class OptionGroup<OptionGroup85,3120
  string EnumName 86,3153
  string Name 87,3211
  string HelpText 88,3233
  OptionGroup Group 89,3256
  list<OptionFlag> Flags 90,3281
  list<OptionVisibility> Visibility 91,3312
  string EnumName 97,3454
  list<string> Prefixes 98,3512
  string Name 99,3548
  OptionKind Kind 100,3570
  int NumArgs 102,3631
  string HelpText 103,3650
  string MetaVarName 104,3673
  string Values 105,3699
  code ValuesCode 106,3720
  list<OptionFlag> Flags 107,3743
  list<OptionVisibility> Visibility 108,3774
  OptionGroup Group 109,3826
  Option Alias 110,3851
  list<string> AliasArgs 111,3871
  code MacroPrefix 112,3902
  code KeyPath 113,3927
  code DefaultValue 114,3947
  code ImpliedValue 115,3972
  code ImpliedCheck 116,3997
  code ShouldParse 117,4028
  bit ShouldAlwaysEmit 118,4057
  code NormalizerRetTy 119,4089
  code NormalizedValuesScope 120,4117
  code Normalizer 121,4152
  code Denormalizer 122,4176
  code ValueMerger 123,4202
  code ValueExtractor 124,4244
  list<code> NormalizedValues 125,4291
  : Option<Option131,4410
  : Option<Option133,4498
  : Option<Option135,4590
  : Option<Option137,4687
  : Option<Option139,4797
  : Option<Option143,4927
  : Option<Option145,5040
class Alias<Alias149,5139
class Alias<Option alias> { Option Alias 149,5139
class AliasArgs<AliasArgs150,5191
class AliasArgs<list<string> aliasargs> { list<string> AliasArgs 150,5191
class EnumName<EnumName151,5271
class EnumName<string name> { string EnumName 151,5271
class Flags<Flags152,5327
class Flags<list<OptionFlag> flags> { list<OptionFlag> Flags 152,5327
class Visibility<Visibility153,5399
  list<OptionVisibility> Visibility 154,5453
class Group<Group156,5505
class Group<OptionGroup group> { OptionGroup Group 156,5505
class HelpText<HelpText157,5567
class HelpText<string text> { string HelpText 157,5567
class MetaVarName<MetaVarName158,5623
class MetaVarName<string name> { string MetaVarName 158,5623
class Values<Values159,5685
class Values<string value> { string Values 159,5685
class ValuesCode<ValuesCode160,5739
class ValuesCode<code valuecode> { code ValuesCode 160,5739
  code KeyPath 183,6727
  code MacroPrefix 184,6757
  code DefaultValue 185,6795
class MarshallingInfoStringVector<MarshallingInfoStringVector203,7441
  code Normalizer 205,7555
  code Denormalizer 206,7600
  code Normalizer 226,8344
  code ValueMerger 227,8404
  code ValueExtractor 228,8443
  : MarshallingInfoFlag<MarshallingInfoFlag234,8727
  : MarshallingInfo<MarshallingInfo242,9152
class ShouldParseIf<ShouldParseIf249,9336
class ShouldParseIf<code condition> { code ShouldParse 249,9336
class AlwaysEmit 250,9406
class AlwaysEmit { bit ShouldAlwaysEmit 250,9406
class Normalizer<Normalizer251,9456
class Normalizer<code normalizer> { code Normalizer 251,9456
class Denormalizer<Denormalizer252,9524
class Denormalizer<code denormalizer> { code Denormalizer 252,9524
class NormalizedValuesScope<NormalizedValuesScope253,9600
class NormalizedValuesScope<code scope> { code NormalizedValuesScope 253,9600
class NormalizedValues<NormalizedValues254,9680
class NormalizedValues<list<code> definitions> { list<code> NormalizedValues 254,9680
class ValueMerger<ValueMerger255,9774
class ValueMerger<code merger> { code ValueMerger 255,9774
class ValueExtractor<ValueExtractor256,9836
class ValueExtractor<code extractor> { code ValueExtractor 256,9836

/usr/include/llvm/Option/OptTable.h,1996
#define LLVM_OPTION_OPTTABLE_H10,401
class Visibility 35,944
  explicit Visibility(39,995
  operator unsigned(42,1075
class OptTable 52,1548
  struct Info 55,1640
    ArrayRef<StringLiteral> Prefixes;58,1747
    StringLiteral PrefixedName;59,1785
    const char *HelpText;HelpText60,1817
    const char *MetaVar;MetaVar61,1843
    unsigned ID;62,1868
    unsigned char Kind;63,1885
    unsigned char Param;64,1909
    unsigned int Flags;65,1934
    unsigned int Visibility;66,1958
    unsigned short GroupID;67,1987
    unsigned short AliasID;68,2015
    const char *AliasArgs;AliasArgs69,2043
    const char *Values;Values70,2070
    StringRef getName(72,2095
  ArrayRef<Info> OptionInfos;80,2309
  bool IgnoreCase;81,2339
  bool GroupedShortOptions 82,2358
  bool DashDashParsing 83,2394
  const char *EnvVar EnvVar84,2426
  unsigned InputOptionID 86,2459
  unsigned UnknownOptionID 87,2489
  unsigned FirstSearchableIndex 92,2682
  SmallString<8> PrefixChars;95,2781
  const Info &getInfo(getInfo102,2997
  unsigned getNumOptions(123,3696
  StringRef getOptionName(132,4004
  unsigned getOptionKind(137,4134
  unsigned getOptionGroupID(142,4263
  const char *getOptionHelpText(getOptionHelpText147,4409
  const char *getOptionMetaVar(getOptionMetaVar153,4604
  void setInitialOptionsFromEnvironment(158,4774
  void setGroupedShortOptions(161,4910
  void setDashDashParsing(165,5130
  bool findExact(223,7741
  bool findExact(228,7946
class GenericOptTable 330,12625
  SmallVector<StringLiteral> PrefixesUnionBuffer;331,12667
  ArrayRef<StringLiteral> getPrefixesUnion(335,12801
class PrecomputedOptTable 340,12900
  ArrayRef<StringLiteral> PrefixesUnion;341,12946
  PrecomputedOptTable(344,12999
  ArrayRef<StringLiteral> getPrefixesUnion(350,13259
#define LLVM_MAKE_OPT_ID_WITH_ID_PREFIX(359,13401
#define LLVM_MAKE_OPT_ID(364,13661
#define LLVM_CONSTRUCT_OPT_INFO_WITH_ID_PREFIX(371,14134
#define LLVM_CONSTRUCT_OPT_INFO(380,14706

/usr/include/llvm/Option/Option.h,1490
#define LLVM_OPTION_OPTION_H10,399
enum DriverFlag 32,904
  HelpHidden 33,922
  RenderAsInput 34,953
  RenderJoined 35,984
  RenderSeparate 36,1015
enum DriverVisibility 39,1049
  DefaultVis 40,1073
class Option 54,1654
  enum OptionClass 56,1677
    GroupClass 57,1698
    InputClass,58,1718
    UnknownClass,59,1734
    FlagClass,60,1752
    JoinedClass,61,1767
    ValuesClass,62,1784
    SeparateClass,63,1801
    RemainingArgsClass,64,1820
    RemainingArgsJoinedClass,65,1844
    CommaJoinedClass,66,1874
    MultiArgClass,67,1896
    JoinedOrSeparateClass,68,1915
    JoinedAndSeparateClass69,1942
  enum RenderStyleKind 72,1975
    RenderCommaJoinedStyle,73,2000
    RenderJoinedStyle,74,2028
    RenderSeparateStyle,75,2051
    RenderValuesStyle76,2076
  const OptTable::Info *Info;Info80,2115
  const OptTable *Owner;Owner81,2145
  bool isValid(86,2241
  unsigned getID(90,2299
  OptionClass getKind(95,2399
  StringRef getName(101,2573
  const Option getGroup(106,2683
  const Option getAlias(112,2862
  const char *getAliasArgs(getAliasArgs120,3156
  StringRef getPrefix(129,3438
  StringLiteral getPrefixedName(136,3665
  StringRef getHelpText(142,3831
  StringRef getMetaVar(148,3994
  unsigned getNumArgs(153,4105
  bool hasNoOptAsInput(155,4160
  RenderStyleKind getRenderStyle(157,4231
  bool hasFlag(185,5007
  bool hasVisibilityFlag(190,5137
  const Option getUnaliasedOption(196,5339
  StringRef getRenderName(204,5582

/usr/include/llvm/Passes/OptimizationLevel.h,47
#define LLVM_PASSES_OPTIMIZATIONLEVEL_H16,636

/usr/include/llvm/Passes/PassPlugin.h,664
#define LLVM_PASSES_PASSPLUGIN_H14,554
#define LLVM_PLUGIN_API_VERSION 33,1206
struct PassPluginLibraryInfo 41,1544
  uint32_t APIVersion;44,1665
  const char *PluginName;PluginName46,1727
  const char *PluginVersion;PluginVersion48,1786
  void (*RegisterPassBuilderCallbacks)RegisterPassBuilderCallbacks52,1902
class PassPlugin 60,2140
  StringRef getFilename(70,2513
  StringRef getPluginName(73,2593
  StringRef getPluginVersion(76,2685
  uint32_t getAPIVersion(79,2787
  void registerPassBuilderCallbacks(82,2900
  PassPlugin(87,3018
  std::string Filename;90,3153
  sys::DynamicLibrary Library;91,3177
  PassPluginLibraryInfo Info;92,3208

/usr/include/llvm/Passes/PassBuilder.h,4379
#define LLVM_PASSES_PASSBUILDER_H16,632
class PipelineTuningOptions 42,1403
  bool LoopInterleaving;49,1693
  bool LoopVectorization;53,1807
  bool SLPVectorization;57,1926
  bool LoopUnrolling;60,2033
  bool ForgetAllSCEVInLoopUnroll;64,2189
  unsigned LicmMssaOptCap;68,2331
  unsigned LicmMssaNoAccForPromotionCap;72,2479
  bool CallGraphProfile;76,2658
  bool UnifiedLTO;79,2756
  bool MergeFunctions;83,2866
  int InlinerThreshold;86,2953
  bool EagerlyInvalidateAnalyses;95,3457
class PassBuilder 104,3802
  TargetMachine *TM;TM105,3822
  PipelineTuningOptions PTO;106,3843
  std::optional<PGOOptions> PGOOpt;107,3872
  PassInstrumentationCallbacks *PIC;PIC108,3908
  struct PipelineElement 119,4461
    StringRef Name;120,4488
    std::vector<PipelineElement> InnerPipeline;121,4508
  void registerPeepholeEPCallback(399,17797
  void registerLateLoopOptimizationsEPCallback(413,18404
  void registerLoopOptimizerEndEPCallback(423,18764
  void registerScalarOptimizerLateEPCallback(433,19173
  void registerCGSCCOptimizerLateEPCallback(444,19624
  void registerVectorizerStartEPCallback(455,20048
  void registerPipelineStartEPCallback(465,20484
  void registerPipelineEarlySimplificationEPCallback(474,20857
  void registerOptimizerEarlyEPCallback(483,21236
  void registerOptimizerLastEPCallback(492,21601
  void registerFullLinkTimeOptimizationEarlyEPCallback(501,21948
  void registerFullLinkTimeOptimizationLastEPCallback(510,22325
  void registerParseAACallback(517,22625
  void registerAnalysisRegistrationCallback(525,22939
  void registerAnalysisRegistrationCallback(529,23103
  void registerAnalysisRegistrationCallback(533,23273
  void registerAnalysisRegistrationCallback(537,23435
  void registerAnalysisRegistrationCallback(541,23601
  void registerPipelineParsingCallback(551,24043
  void registerPipelineParsingCallback(556,24267
  void registerPipelineParsingCallback(561,24497
  void registerPipelineParsingCallback(566,24719
  void registerPipelineParsingCallback(571,24945
  PassInstrumentationCallbacks *getPassInstrumentationCallbacks(getPassInstrumentationCallbacks596,26048
      PeepholeEPCallbacks;675,30329
      LateLoopOptimizationsEPCallbacks;677,30432
      LoopOptimizerEndEPCallbacks;679,30548
      ScalarOptimizerLateEPCallbacks;681,30663
      CGSCCOptimizerLateEPCallbacks;683,30778
      VectorizerStartEPCallbacks;685,30895
      OptimizerEarlyEPCallbacks;688,31029
      OptimizerLastEPCallbacks;690,31140
      FullLinkTimeOptimizationEarlyEPCallbacks;692,31250
      FullLinkTimeOptimizationLastEPCallbacks;694,31376
      PipelineStartEPCallbacks;696,31501
      PipelineEarlySimplificationEPCallbacks;698,31611
      ModuleAnalysisRegistrationCallbacks;701,31721
      ModulePipelineParsingCallbacks;705,31908
      TopLevelPipelineParsingCallbacks;708,32039
      CGSCCAnalysisRegistrationCallbacks;711,32162
      CGSCCPipelineParsingCallbacks;715,32347
      FunctionAnalysisRegistrationCallbacks;718,32473
      FunctionPipelineParsingCallbacks;722,32664
      LoopAnalysisRegistrationCallbacks;725,32785
      LoopPipelineParsingCallbacks;729,32968
      AAParsingCallbacks;732,33091
      MachineFunctionAnalysisRegistrationCallbacks;735,33218
      MachinePipelineParsingCallbacks;737,33349
template <typename AnalysisT,754,34122
template <typename AnalysisT, typename IRUnitT,754,34122
template <typename AnalysisT, typename IRUnitT, typename AnalysisManagerT,754,34122
bool parseAnalysisUtilityPasses(756,34231
struct NoOpModulePass 786,35221
  PreservedAnalyses run(787,35277
class NoOpModuleAnalysis 793,35411
  static AnalysisKey Key;795,35533
  struct Result 798,35568
  Result run(799,35588
struct NoOpCGSCCPass 803,35702
  PreservedAnalyses run(804,35756
class NoOpCGSCCAnalysis 811,35964
  static AnalysisKey Key;813,36083
  struct Result 816,36118
  Result run(817,36138
struct NoOpFunctionPass 823,36290
  PreservedAnalyses run(824,36350
class NoOpFunctionAnalysis 830,36490
  static AnalysisKey Key;832,36618
  struct Result 835,36653
  Result run(836,36673
struct NoOpLoopNestPass 840,36795
  PreservedAnalyses run(841,36855
struct NoOpLoopPass 848,37071
  PreservedAnalyses run(849,37123
class NoOpLoopAnalysis 856,37320
  static AnalysisKey Key;858,37436
  struct Result 861,37471
  Result run(862,37491

/usr/include/llvm/Passes/StandardInstrumentations.h,4899
#define LLVM_PASSES_STANDARDINSTRUMENTATIONS_H16,632
class PrintIRInstrumentation 42,1328
  ~PrintIRInstrumentation(44,1367
  void registerCallbacks(46,1397
  struct PassRunDescriptor 49,1468
    const Module *M;M50,1497
    const std::string DumpIRFilename;51,1518
    const std::string IRName;52,1556
    const StringRef PassID;53,1586
    PassRunDescriptor(55,1615
        : M{M}, DumpIRFilename{DumpIRFilename57,1748
        : M{M}, DumpIRFilename{DumpIRFilename}, IRName{IRName57,1748
        : M{M}, DumpIRFilename{DumpIRFilename}, IRName{IRName}, PassID(57,1748
  PassInstrumentationCallbacks *PIC;PIC75,2394
  SmallVector<SmallVector78,2523
  SmallVector<PassRunDescriptor, 2> PassRunDescriptorStack;78,2523
class OptNoneInstrumentation 84,2658
  OptNoneInstrumentation(86,2697
  bool DebugLogging;90,2844
class OptPassGateInstrumentation 94,2913
  LLVMContext &Context;Context95,2948
  bool HasWrittenIR 96,2972
  OptPassGateInstrumentation(98,3009
struct PrintPassOptions 103,3193
  bool Verbose 105,3259
  bool SkipAnalyses 107,3327
  bool Indent 109,3389
class PrintPassInstrumentation 113,3473
  PrintPassInstrumentation(117,3539
  bool Enabled;122,3714
  PrintPassOptions Opts;123,3730
  int Indent 124,3755
class PreservedCFGCheckerInstrumentation 127,3777
  struct BBGuard final : public CallbackVH 131,3927
  struct CFG 146,4835
    std::optional<std::optional147,4850
    std::optional<DenseMap<intptr_t, BBGuard>> BBGuards;147,4850
    DenseMap<DenseMap148,4907
    DenseMap<const BasicBlock *, DenseMap<const BasicBlock *, unsigned>> Graph;148,4907
    bool operator==(operator==152,5039
    bool isPoisoned(156,5155
  SmallVector<SmallVector169,5601
  SmallVector<StringRef, 8> PassStack;169,5601
template <typename IRUnitT> class ChangeReporter 191,6591
  ChangeReporter(193,6653
  std::vector<IRUnitT> BeforeStack;229,8312
  bool InitialIR 231,8380
  const bool VerboseMode;234,8453
class TextChangeReporter 240,8643
  raw_ostream &Out;Out257,9394
class IRChangedPrinter 264,9717
  IRChangedPrinter(266,9791
class IRChangedTester 281,10397
  IRChangedTester(283,10455
template <typename T> class BlockDataT 309,11411
  BlockDataT(311,11460
  bool operator==(operator==316,11608
  bool operator!=(operator!=317,11686
  StringRef getLabel(320,11819
  StringRef getBody(322,11924
  const T &getData(getData325,12002
  std::string Label;328,12058
  std::string Body;329,12079
  T Data;332,12146
template <typename T> class OrderedChangedData 335,12160
  std::vector<std::string> &getOrder(getOrder338,12268
  const std::vector<std::string> &getOrder(getOrder339,12325
  StringMap<T> &getData(getData342,12447
  const StringMap<T> &getData(getData343,12490
  bool operator==(operator==345,12546
  std::vector<std::string> Order;359,13187
  StringMap<T> Data;360,13221
class EmptyData 364,13312
  EmptyData(366,13338
class FuncDataT 371,13442
  FuncDataT(373,13511
  std::string getEntryBlockName(376,13602
  std::string EntryBlockName;379,13681
class IRDataT 384,13774
template <typename T> class IRComparer 389,14057
  IRComparer(391,14106
  const IRDataT<T> &Before;Before410,14854
  const IRDataT<T> &After;After411,14882
class InLineChangePrinter 420,15321
  InLineChangePrinter(422,15405
  bool UseColour;443,16349
class VerifyInstrumentation 446,16371
  bool DebugLogging;447,16401
  VerifyInstrumentation(450,16431
class TimeProfilingPassesHandler 457,16787
class DCData 474,17401
  StringMap<std::string>::const_iterator begin(480,17580
  StringMap<std::string>::const_iterator end(483,17672
  StringRef getSuccessorLabel(488,17835
  void addSuccessorLabel(495,18061
  StringMap<std::string> Successors;500,18222
class DotCfgChangeReporter 505,18408
  unsigned N 543,20207
  std::unique_ptr<raw_fd_ostream> HTML;544,20225
class PrintCrashIRInstrumentation 548,20291
  PrintCrashIRInstrumentation(550,20335
  std::string SavedIR;557,20564
  static PrintCrashIRInstrumentation *CrashReporter;CrashReporter561,20650
class StandardInstrumentations 568,20934
  PrintIRInstrumentation PrintIR;569,20967
  PrintPassInstrumentation PrintPass;570,21001
  TimePassesHandler TimePasses;571,21039
  TimeProfilingPassesHandler TimeProfilingPasses;572,21071
  OptNoneInstrumentation OptNone;573,21121
  OptPassGateInstrumentation OptPassGate;574,21155
  PreservedCFGCheckerInstrumentation PreservedCFGChecker;575,21197
  IRChangedPrinter PrintChangedIR;576,21255
  PseudoProbeVerifier PseudoProbeVerification;577,21290
  InLineChangePrinter PrintChangedDiff;578,21337
  DotCfgChangeReporter WebsiteChangeReporter;579,21377
  PrintCrashIRInstrumentation PrintCrashIR;580,21423
  IRChangedTester ChangeTester;581,21467
  VerifyInstrumentation Verify;582,21499
  bool VerifyEach;584,21532
  TimePassesHandler &getTimePasses(getTimePasses596,22012

/usr/include/llvm/ProfileData/Coverage/CoverageMapping.h,12857
#define LLVM_PROFILEDATA_COVERAGE_COVERAGEMAPPING_H15,630
enum class coveragemap_error 61,1658
  success 62,1689
  eof,63,1704
  no_data_found,64,1711
  unsupported_version,65,1728
  truncated,66,1751
  malformed,67,1764
  decompression_failed,68,1777
  invalid_or_missing_arch_specifier69,1801
inline std::error_code make_error_code(74,1893
class CoverageMapError 78,2029
  CoverageMapError(80,2099
  void log(87,2321
  std::error_code convertToErrorCode(89,2386
  coveragemap_error get(93,2480
  const std::string &getMessage(getMessage94,2528
  static char ID;96,2585
  coveragemap_error Err;99,2613
  std::string Msg;100,2638
struct Counter 105,2811
  enum CounterKind 108,2978
  enum CounterKind { Zero,108,2978
  enum CounterKind { Zero, CounterValueReference,108,2978
  enum CounterKind { Zero, CounterValueReference, Expression 108,2978
  static const unsigned EncodingTagBits 109,3042
  static const unsigned EncodingTagMask 110,3087
  static const unsigned EncodingCounterTagAndExpansionRegionTagBits 111,3134
  CounterKind Kind 115,3241
  unsigned ID 116,3268
  Counter(118,3288
  CounterKind getKind(123,3386
  bool isZero(125,3434
  bool isExpression(127,3482
  unsigned getCounterID(129,3542
  unsigned getExpressionID(131,3590
  friend bool operator==(operator==133,3641
  friend bool operator!=(operator!=137,3766
  friend bool operator<(141,3864
  static Counter getZero(146,4061
  static Counter getCounter(149,4184
  static Counter getExpression(155,4384
struct CounterExpression 162,4593
  enum ExprKind 163,4620
  enum ExprKind { Subtract,163,4620
  enum ExprKind { Subtract, Add 163,4620
  ExprKind Kind;164,4655
  Counter LHS,165,4672
  Counter LHS, RHS;165,4672
  CounterExpression(167,4693
class CounterExpressionBuilder 173,4955
  std::vector<CounterExpression> Expressions;175,5032
  DenseMap<DenseMap178,5137
  DenseMap<CounterExpression, unsigned> ExpressionIndices;178,5137
  struct Term 188,5585
    unsigned CounterID;189,5601
    int Factor;190,5625
    Term(192,5642
  ArrayRef<CounterExpression> getExpressions(208,6214
using LineColPair 218,6594
struct CounterMappingRegion 221,6726
  enum RegionKind 222,6756
    CodeRegion,224,6833
    ExpansionRegion,229,7056
    SkippedRegion,233,7199
    GapRegion,237,7361
    BranchRegion,242,7576
    MCDCDecisionRegion,246,7746
    MCDCBranchRegion249,7847
  using MCDCConditionID 252,7874
  struct MCDCParameters 253,7914
  Counter Count;266,8381
  Counter FalseCount;269,8461
  MCDCParameters MCDCParams;272,8547
  unsigned FileID 274,8577
  unsigned ExpandedFileID 275,8600
  unsigned LineStart,276,8631
  unsigned LineStart, ColumnStart,276,8631
  unsigned LineStart, ColumnStart, LineEnd,276,8631
  unsigned LineStart, ColumnStart, LineEnd, ColumnEnd;276,8631
  RegionKind Kind;278,8687
  CounterMappingRegion(280,8707
  CounterMappingRegion(287,9119
  CounterMappingRegion(297,9680
  makeRegion(305,10087
  makeExpansion(312,10401
  makeSkipped(320,10785
  makeGapRegion(327,11093
  makeBranchRegion(334,11425
  makeBranchRegion(343,11854
  makeDecisionRegion(353,12395
  inline LineColPair startLoc(360,12738
  inline LineColPair endLoc(364,12831
struct CountedRegion 368,12970
  uint64_t ExecutionCount;369,13023
  uint64_t FalseExecutionCount;370,13050
  bool Folded;371,13082
  CountedRegion(373,13098
  CountedRegion(377,13285
struct MCDCRecord 384,13590
  enum CondState 391,14022
  enum CondState { MCDC_DontCare 391,14022
  enum CondState { MCDC_DontCare = -1, MCDC_False 391,14022
  enum CondState { MCDC_DontCare = -1, MCDC_False = 0, MCDC_True 391,14022
  using TestVector 393,14095
  using TestVectors 394,14146
  using BoolVector 395,14199
  using TVRowPair 396,14245
  using TVPairMap 397,14296
  using CondIDMap 398,14353
  using LineColPairMap 399,14409
  CounterMappingRegion Region;402,14483
  TestVectors TV;403,14514
  TVPairMap IndependencePairs;404,14532
  BoolVector Folded;405,14563
  CondIDMap PosToID;406,14584
  LineColPairMap CondLoc;407,14605
  MCDCRecord(410,14640
  CounterMappingRegion getDecisionRegion(416,14948
  unsigned getNumConditions(417,15016
  unsigned getNumTestVectors(422,15214
  bool isCondFolded(423,15273
  CondState getTVCondition(431,15804
  CondState getTVResult(437,16051
  bool isConditionIndependencePairCovered(446,16510
  TVRowPair getConditionIndependencePair(458,17086
  float getPercentCovered(463,17263
  std::string getConditionHeaderString(479,17704
  std::string getTestVectorHeaderString(487,17961
  std::string getTestVectorString(503,18366
  std::string getConditionCoverageString(541,19427
class CounterMappingContext 562,20118
  ArrayRef<CounterExpression> Expressions;563,20148
  ArrayRef<uint64_t> CounterValues;564,20191
  ArrayRef<uint8_t> BitmapBytes;565,20227
  CounterMappingContext(568,20269
  void setCounts(572,20474
  void setBitmapBytes(573,20546
  void dump(576,20673
struct FunctionRecord 598,21482
  std::string Name;600,21531
  std::vector<std::string> Filenames;607,21842
  std::vector<CountedRegion> CountedRegions;609,21935
  std::vector<CountedRegion> CountedBranchRegions;611,22042
  std::vector<MCDCRecord> MCDCRecords;613,22166
  uint64_t ExecutionCount 615,22259
  FunctionRecord(617,22291
  void pushMCDCRecord(623,22533
  void pushRegion(625,22610
class FunctionRecordIterator643,23352
  ArrayRef<FunctionRecord> Records;646,23518
  ArrayRef<FunctionRecord>::iterator Current;647,23554
  StringRef Filename;648,23600
  FunctionRecordIterator(654,23715
  FunctionRecordIterator(660,23926
  bool operator==(operator==662,23984
  const FunctionRecord &operator*(operator*666,24113
  FunctionRecordIterator &operator++(operator++668,24177
struct ExpansionRecord 681,24630
  unsigned FileID;683,24702
  const CountedRegion &Region;Region685,24767
  const FunctionRecord &Function;Function687,24832
  ExpansionRecord(689,24867
struct CoverageSegment 698,25248
  unsigned Line;700,25315
  unsigned Col;702,25376
  uint64_t Count;704,25453
  bool HasCount;706,25532
  bool IsRegionEntry;708,25620
  bool IsGapRegion;710,25682
  CoverageSegment(712,25703
  CoverageSegment(716,25888
  friend bool operator==(operator==722,26189
class InstantiationGroup 735,26864
  unsigned Line;738,26924
  unsigned Col;739,26941
  std::vector<const FunctionRecord *> Instantiations;740,26957
  InstantiationGroup(742,27012
  size_t size(751,27388
  unsigned getLine(754,27503
  unsigned getColumn(757,27608
  bool hasName(760,27730
  StringRef getName(768,27993
  uint64_t getTotalExecutionCount(774,28205
  ArrayRef<const FunctionRecord *> getInstantiations(782,28425
class CoverageData 792,28794
  std::string Filename;795,28848
  std::vector<CoverageSegment> Segments;796,28872
  std::vector<ExpansionRecord> Expansions;797,28913
  std::vector<CountedRegion> BranchRegions;798,28956
  std::vector<MCDCRecord> MCDCRecords;799,29000
  CoverageData(804,29077
  StringRef getFilename(807,29186
  std::vector<CoverageSegment>::const_iterator begin(811,29378
  std::vector<CoverageSegment>::const_iterator end(815,29475
  bool empty(819,29568
  ArrayRef<ExpansionRecord> getExpansions(822,29667
  ArrayRef<CountedRegion> getBranches(825,29787
  ArrayRef<MCDCRecord> getMCDCRecords(828,29910
class CoverageMapping 835,30155
  DenseMap<DenseMap836,30179
  DenseMap<size_t, DenseSet<size_t>> RecordProvenance;836,30179
  std::vector<FunctionRecord> Functions;837,30234
  DenseMap<DenseMap838,30275
  DenseMap<size_t, SmallVector<unsigned, 0>> FilenameHash2RecordIndices;838,30275
  std::vector<std::vector839,30348
  std::vector<std::pair<std::string, uint64_t>> FuncHashMismatches;839,30348
  unsigned getMismatchedCount(889,32705
  ArrayRef<ArrayRef895,33062
  ArrayRef<std::pair<std::string, uint64_t>> getHashMismatches(895,33062
  iterator_range<FunctionRecordIterator> getCoveredFunctions(917,33928
  getCoveredFunctions(924,34205
class LineCoverageStats 938,34740
  uint64_t ExecutionCount;939,34766
  bool HasMultipleRegions;940,34793
  bool Mapped;941,34820
  unsigned Line;942,34835
  ArrayRef<const CoverageSegment *> LineSegments;943,34852
  const CoverageSegment *WrappedSegment;WrappedSegment944,34902
  uint64_t getExecutionCount(953,35167
  bool hasMultipleRegions(955,35232
  bool isMapped(957,35298
  unsigned getLine(959,35342
  ArrayRef<const CoverageSegment *> getLineSegments(961,35387
  const CoverageSegment *getWrappedSegment(getWrappedSegment965,35479
class LineCoverageIterator970,35670
  LineCoverageIterator(975,35883
  LineCoverageIterator(978,35985
  bool operator==(operator==984,36170
  const LineCoverageStats &operator*(operator*988,36295
  LineCoverageIterator getEnd(992,36398
  const CoverageData &CD;CD1000,36545
  const CoverageSegment *WrappedSegment;WrappedSegment1001,36571
  std::vector<CoverageSegment>::const_iterator Next;1002,36612
  bool Ended;1003,36665
  unsigned Line;1004,36679
  SmallVector<SmallVector1005,36696
  SmallVector<const CoverageSegment *, 4> Segments;1005,36696
  LineCoverageStats Stats;1006,36748
getLineCoverageStats(1011,36904
namespace accessors 1044,37934
uint64_t getFuncHash(1048,38073
uint64_t getDataSize(1054,38311
uint64_t getFuncNameRef(1060,38561
Error getFuncNameViaRef(1067,38836
StringRef getCoverageMappingOutOfLine(1078,39344
advanceByOneOutOfLine(1087,39745
struct CovMapFunctionRecordV1 1095,39976
  using ThisT 1096,40008
#define COVMAP_V11098,40058
#define COVMAP_FUNC_RECORD(1099,40076
#undef COVMAP_V11101,40188
  template <llvm::endianness Endian> uint64_t getFuncHash(1104,40243
  template <llvm::endianness Endian> uint64_t getDataSize(1108,40372
  template <llvm::endianness Endian> IntPtrT getFuncNameRef(1113,40565
  Error getFuncName(1119,40785
  std::pair<std::pair1130,41294
  advanceByOne(1131,41335
  template <llvm::endianness Endian> uint64_t getFilenamesRef(1135,41465
  StringRef getCoverageMapping(1140,41656
struct CovMapFunctionRecordV2 1146,41876
  using ThisT 1147,41908
#define COVMAP_V21149,41949
#define COVMAP_FUNC_RECORD(1150,41967
#undef COVMAP_V21152,42079
  template <llvm::endianness Endian> uint64_t getFuncHash(1155,42134
  template <llvm::endianness Endian> uint64_t getDataSize(1159,42263
  template <llvm::endianness Endian> uint64_t getFuncNameRef(1163,42392
  Error getFuncName(1168,42564
  std::pair<std::pair1174,42827
  advanceByOne(1175,42868
  template <llvm::endianness Endian> uint64_t getFilenamesRef(1179,42998
  StringRef getCoverageMapping(1184,43189
struct CovMapFunctionRecordV3 1190,43409
  using ThisT 1191,43441
#define COVMAP_V31193,43482
#define COVMAP_FUNC_RECORD(1194,43500
#undef COVMAP_V31196,43612
  template <llvm::endianness Endian> uint64_t getFuncHash(1199,43667
  template <llvm::endianness Endian> uint64_t getDataSize(1203,43796
  template <llvm::endianness Endian> uint64_t getFuncNameRef(1207,43925
  Error getFuncName(1212,44097
  template <llvm::endianness Endian> uint64_t getFilenamesRef(1218,44361
  StringRef getCoverageMapping(1225,44671
  std::pair<std::pair1232,44967
  advanceByOne(1233,45025
struct CovMapHeader 1246,45626
#define COVMAP_HEADER(1247,45648
  template <llvm::endianness Endian> uint32_t getNRecords(1249,45755
  template <llvm::endianness Endian> uint32_t getFilenamesSize(1253,45895
  template <llvm::endianness Endian> uint32_t getCoverageSize(1257,46045
  template <llvm::endianness Endian> uint32_t getVersion(1261,46193
enum CovMapVersion 1268,46351
  Version1 1269,46372
  Version2 1273,46568
  Version3 1276,46686
  Version4 1278,46778
  Version5 1280,46850
  Version6 1283,46990
  Version7 1285,47073
  CurrentVersion 1287,47127
constexpr uint64_t TestingFormatMagic 1291,47223
enum class TestingFormatVersion 1293,47284
  Version1 1296,47454
  Version2 1299,47643
  CurrentVersion 1301,47712
template <int CovMapVersion,1304,47744
template <int CovMapVersion, class IntPtrT> struct CovMapTraits 1304,47744
  using CovMapFuncRecordType 1305,47810
  using NameRefType 1306,47865
template <class IntPtrT> struct CovMapTraits<CovMapTraits1309,47901
  using CovMapFuncRecordType 1310,47982
  using NameRefType 1311,48037
template <class IntPtrT> struct CovMapTraits<CovMapTraits1314,48073
  using CovMapFuncRecordType 1315,48154
  using NameRefType 1316,48209
template <class IntPtrT> struct CovMapTraits<CovMapTraits1319,48245
  using CovMapFuncRecordType 1320,48326
  using NameRefType 1321,48390
template<> struct DenseMapInfo<DenseMapInfo1327,48501
  static inline coverage::CounterExpression getEmptyKey(1328,48563
  static inline coverage::CounterExpression getTombstoneKey(1336,48838
  static unsigned getHashValue(1344,49112
  static bool isEqual(1350,49352

/usr/include/llvm/ProfileData/Coverage/CoverageMappingReader.h,2620
#define LLVM_PROFILEDATA_COVERAGE_COVERAGEMAPPINGREADER_H15,618
struct CoverageMappingRecord 35,1126
  StringRef FunctionName;36,1157
  uint64_t FunctionHash;37,1183
  ArrayRef<StringRef> Filenames;38,1208
  ArrayRef<CounterExpression> Expressions;39,1241
  ArrayRef<CounterMappingRegion> MappingRegions;40,1284
class CoverageMappingIterator 44,1401
  CoverageMappingReader *Reader;Reader45,1433
  CoverageMappingRecord Record;46,1466
  coveragemap_error ReadErr;47,1498
  using iterator_category 52,1557
  using value_type 53,1610
  using difference_type 54,1654
  using pointer 55,1696
  using reference 56,1728
  CoverageMappingIterator(58,1763
  CoverageMappingIterator(61,1856
  ~CoverageMappingIterator(66,1997
  CoverageMappingIterator &operator++(operator++71,2153
  bool operator==(operator==75,2234
  bool operator!=(operator!=78,2333
  Expected<CoverageMappingRecord &> operator*(81,2432
  Expected<CoverageMappingRecord *> operator->(89,2685
class CoverageMappingReader 99,2944
  CoverageMappingIterator begin(104,3096
  CoverageMappingIterator end(105,3172
class RawCoverageReader 109,3318
  StringRef Data;111,3355
  RawCoverageReader(113,3374
class RawCoverageMappingDummyChecker 123,3688
  RawCoverageMappingDummyChecker(125,3762
class RawCoverageMappingReader 132,3939
  ArrayRef<std::string> &TranslationUnitFilenames;TranslationUnitFilenames133,3999
  std::vector<StringRef> &Filenames;Filenames134,4050
  std::vector<CounterExpression> &Expressions;Expressions135,4087
  std::vector<CounterMappingRegion> &MappingRegions;MappingRegions136,4134
  RawCoverageMappingReader(139,4196
class BinaryCoverageReader 164,5272
  struct ProfileMappingRecord 166,5340
    CovMapVersion Version;167,5372
    StringRef FunctionName;168,5399
    uint64_t FunctionHash;169,5427
    StringRef CoverageMapping;170,5454
    size_t FilenamesBegin;171,5485
    size_t FilenamesSize;172,5512
    ProfileMappingRecord(174,5539
  using FuncRecordsStorage 182,5964
  std::vector<std::string> Filenames;185,6034
  std::vector<ProfileMappingRecord> MappingRecords;186,6072
  InstrProfSymtab ProfileNames;187,6124
  size_t CurrentRecord 188,6156
  std::vector<StringRef> FunctionsFilenames;189,6184
  std::vector<CounterExpression> Expressions;190,6229
  std::vector<CounterMappingRegion> MappingRegions;191,6275
  FuncRecordsStorage FuncRecords;196,6567
  BinaryCoverageReader(198,6602
class RawCoverageFilenamesReader 223,7697
  std::vector<std::string> &Filenames;Filenames224,7759
  StringRef CompilationDir;225,7798
  RawCoverageFilenamesReader(231,7957

/usr/include/llvm/ProfileData/Coverage/CoverageMappingWriter.h,609
#define LLVM_PROFILEDATA_COVERAGE_COVERAGEMAPPINGWRITER_H15,618
class CoverageFilenamesSectionWriter 29,941
  ArrayRef<std::string> Filenames;30,980
class CoverageMappingWriter 41,1332
  ArrayRef<unsigned> VirtualFileMapping;42,1362
  ArrayRef<CounterExpression> Expressions;43,1403
  MutableArrayRef<CounterMappingRegion> MappingRegions;44,1446
  CoverageMappingWriter(47,1511
class TestingFormatWriter 58,1991
  uint64_t ProfileNamesAddr;59,2019
  StringRef ProfileNamesData;60,2048
  StringRef CoverageMappingData;61,2078
  StringRef CoverageRecordsData;62,2111
  TestingFormatWriter(65,2153

/usr/include/llvm/ProfileData/ItaniumManglingCanonicalizer.h,557
#define LLVM_PROFILEDATA_ITANIUMMANGLINGCANONICALIZER_H15,648
class ItaniumManglingCanonicalizer 35,1360
  ItaniumManglingCanonicalizer(37,1405
  ~ItaniumManglingCanonicalizer(40,1583
  enum class EquivalenceError 42,1619
    Success,43,1651
    ManglingAlreadyUsed,48,1835
    InvalidFirstMangling,51,1911
    InvalidSecondMangling,54,1989
  enum class FragmentKind 57,2022
    Name,59,2126
    Type,61,2179
    Encoding,63,2237
  EquivalenceError addEquivalence(68,2384
  Key canonicalize(81,2925
  Key lookup(85,3084
  Impl *P;P89,3143

/usr/include/llvm/ProfileData/MemProfData.inc,85
namespace 40,1693
namespace 41,1710
struct 100,3628
bool 106,3749
void 154,5419

/usr/include/llvm/ProfileData/SymbolRemappingReader.h,565
#define LLVM_PROFILEDATA_SYMBOLREMAPPINGREADER_H60,2224
class SymbolRemappingParseError 70,2437
  SymbolRemappingParseError(72,2525
  void log(75,2664
  std::error_code convertToErrorCode(78,2769
  StringRef getFileName(82,2873
  int64_t getLineNum(83,2922
  StringRef getMessage(84,2968
  static char ID;86,3020
  std::string File;89,3048
  int64_t Line;90,3068
  std::string Message;91,3084
class SymbolRemappingReader 98,3287
  using Key 105,3510
  Key insert(113,3844
  Key lookup(123,4245
  ItaniumManglingCanonicalizer Canonicalizer;128,4345

/usr/include/llvm/ProfileData/FunctionId.h,1080
#define LLVM_PROFILEDATA_FUNCTIONID_H16,541
class FunctionId 36,1332
  static int compareMemory(48,1831
  explicit FunctionId(62,2131
  explicit FunctionId(67,2266
  bool equals(76,2664
  int compare(85,3109
  std::string str(97,3567
  StringRef stringRef(108,3965
  uint64_t getHashCode(123,4604
  bool empty(129,4742
  bool isStringRef(132,4865
inline bool operator==(operator==135,4924
inline bool operator!=(operator!=139,5024
inline bool operator<(143,5125
inline bool operator<=(operator<=147,5229
inline bool operator>(151,5335
inline bool operator>=(operator>=155,5439
inline raw_ostream &operator<<(operator<<159,5545
inline uint64_t MD5Hash(167,5782
inline uint64_t hash_value(171,5862
template <> struct DenseMapInfo<DenseMapInfo179,6070
  static inline sampleprof::FunctionId getEmptyKey(181,6135
  static inline sampleprof::FunctionId getTombstoneKey(185,6237
  static unsigned getHashValue(189,6343
  static bool isEqual(193,6446
namespace std 201,6618
template <> struct hash<hash205,6724
  size_t operator()(operator()206,6780

/usr/include/llvm/ProfileData/GCOV.h,3692
#define LLVM_PROFILEDATA_GCOV_H15,587
enum GCOVVersion 42,1172
enum GCOVVersion { V304,42,1172
enum GCOVVersion { V304, V407,42,1172
enum GCOVVersion { V304, V407, V408,42,1172
enum GCOVVersion { V304, V407, V408, V800,42,1172
enum GCOVVersion { V304, V407, V408, V800, V900,42,1172
enum GCOVVersion { V304, V407, V408, V800, V900, V1200 42,1172
struct Options 45,1288
  Options(46,1305
  bool AllBlocks;53,1736
  bool BranchInfo;54,1754
  bool BranchCount;55,1773
  bool FuncCoverage;56,1793
  bool PreservePaths;57,1814
  bool UncondBranch;58,1836
  bool Intermediate;59,1857
  bool LongFileNames;60,1878
  bool Demangle;61,1900
  bool NoOutput;62,1917
  bool RelativeOnly;63,1934
  bool UseStdout;64,1955
  bool HashFilenames;65,1973
  std::string SourcePrefix;66,1995
class GCOVBuffer 73,2145
  GCOVBuffer(75,2172
  ~GCOVBuffer(76,2217
  bool readGCNOFormat(79,2353
  bool readGCDAFormat(94,2819
  bool readGCOVVersion(108,3192
  uint32_t getWord(144,4402
  StringRef getString(145,4453
  bool readInt(152,4613
  bool readInt64(162,4856
  bool readString(170,5028
  DataExtractor de{de181,5318
  DataExtractor::Cursor cursor{cursor182,5369
  MemoryBuffer *Buffer;Buffer185,5414
  GCOV::GCOVVersion version{version186,5438
class GCOVFile 191,5571
  GCOV::GCOVVersion getVersion(197,5695
  std::vector<std::string> filenames;201,5813
  StringMap<unsigned> filenameToIdx;202,5851
  bool GCNOInitialized 205,5897
  GCOV::GCOVVersion version{version206,5929
  uint32_t checksum 207,5960
  StringRef cwd;208,5985
  SmallVector<SmallVector209,6002
  SmallVector<std::unique_ptr<GCOVFunction>, 16> functions;209,6002
  std::map<std::map210,6062
  std::map<uint32_t, GCOVFunction *> identToFunction;210,6062
  uint32_t runCount 211,6116
  uint32_t programCount 212,6141
  using iterator 214,6171
  iterator begin(216,6279
  iterator end(217,6344
struct GCOVArc 223,6474
  GCOVArc(224,6491
  GCOVBlock &src;src228,6617
  GCOVBlock &dst;dst229,6635
  uint32_t flags;230,6653
  uint64_t count 231,6671
  uint64_t cycleCount 232,6693
class GCOVFunction 236,6774
  using BlockIterator 238,6803
  GCOVFunction(241,6914
  iterator_range<BlockIterator> blocksRange(248,7107
  GCOVFile &file;file256,7337
  uint32_t ident 257,7355
  uint32_t linenoChecksum;258,7377
  uint32_t cfgChecksum 259,7404
  uint32_t startLine 260,7432
  uint32_t startColumn 261,7458
  uint32_t endLine 262,7486
  uint32_t endColumn 263,7510
  uint8_t artificial 264,7536
  StringRef Name;265,7562
  mutable SmallString<0> demangled;266,7580
  unsigned srcIdx;267,7616
  SmallVector<SmallVector268,7635
  SmallVector<std::unique_ptr<GCOVBlock>, 0> blocks;268,7635
  SmallVector<SmallVector269,7688
  SmallVector<std::unique_ptr<GCOVArc>, 0> arcs,269,7688
  SmallVector<std::unique_ptr<GCOVArc>, 0> arcs, treeArcs;269,7688
  DenseSet<const GCOVBlock *> visited;270,7747
class GCOVBlock 274,7834
  using EdgeIterator 276,7860
  using BlockVector 277,7927
  using BlockVectorLists 278,7984
  using Edges 279,8040
  GCOVBlock(281,8084
  void addLine(283,8124
  uint32_t getLastLine(284,8175
  uint64_t getCount(285,8231
  void addSrcEdge(287,8278
  void addDstEdge(289,8338
  iterator_range<EdgeIterator> srcs(291,8398
  iterator_range<EdgeIterator> dsts(295,8498
  uint32_t number;309,8909
  uint64_t count 310,8928
  SmallVector<SmallVector311,8950
  SmallVector<GCOVArc *, 2> pred;311,8950
  SmallVector<SmallVector312,8984
  SmallVector<GCOVArc *, 2> succ;312,8984
  SmallVector<SmallVector313,9018
  SmallVector<uint32_t, 4> lines;313,9018
  bool traversable 314,9052
  GCOVArc *incoming incoming315,9080

/usr/include/llvm/ProfileData/HashKeyMap.h,594
#define LLVM_PROFILEDATA_HASHKEYMAP_H16,544
class HashKeyMap 52,2295
  using base_type = MapT<decltype(hash_value(KeyT())), ValueT,55,2391
  std::pair<std::pair65,2774
  std::pair<iterator, bool> try_emplace(65,2774
  std::pair<std::pair73,3100
  std::pair<iterator, bool> try_emplace(73,3100
  template <typename... Ts> std::pair<std::pair78,3304
  template <typename... Ts> std::pair<iterator, bool> emplace(78,3304
  iterator find(86,3559
  const_iterator find(93,3738
  mapped_type lookup(100,3929
  size_t count(107,4124
  size_t erase(111,4228
  iterator erase(120,4403

/usr/include/llvm/ProfileData/InstrProf.h,9586
#define LLVM_PROFILEDATA_INSTRPROF_H16,664
enum InstrProfSectKind 58,1711
#define INSTR_PROF_SECT_ENTRY(59,1736
inline uint64_t getInstrMaxCountValue(64,1946
inline StringRef getInstrProfValueProfFuncName(79,2606
inline StringRef getInstrProfValueProfMemOpFuncName(85,2787
inline StringRef getInstrProfNameVarPrefix(90,2973
inline StringRef getInstrProfDataVarPrefix(93,3120
inline StringRef getInstrProfCountersVarPrefix(96,3246
inline StringRef getInstrProfBitmapVarPrefix(99,3375
inline StringRef getInstrProfValuesVarPrefix(102,3502
inline StringRef getInstrProfVNodesVarName(105,3633
inline StringRef getInstrProfNamesVarName(109,3822
inline StringRef getCoverageMappingVarName(116,4071
inline StringRef getCoverageUnusedNamesVarName(124,4377
inline StringRef getInstrProfRegFuncsName(133,4792
inline StringRef getInstrProfRegFuncName(139,5008
inline StringRef getInstrProfNamesRegFuncName(144,5183
inline StringRef getInstrProfInitFuncName(152,5589
inline StringRef getInstrProfRuntimeHookVarName(157,5879
inline StringRef getInstrProfRuntimeHookVarUseFuncName(163,6126
inline StringRef getInstrProfCounterBiasVarName(167,6228
inline StringRef getInstrProfNameSeparator(172,6418
enum InstrProfValueKind 258,11088
#define VALUE_PROF_KIND(259,11125
inline StringRef getPGOFuncNameMetadataName(286,12532
enum class InstrProfKind 301,13231
  Unknown 302,13258
  FrontendInstrumentation 304,13337
  IRInstrumentation 306,13438
  FunctionEntryInstrumentation 308,13520
  ContextSensitive 310,13601
  SingleByteCoverage 312,13669
  FunctionEntryOnly 314,13751
  MemProf 316,13835
  TemporalProfile 318,13878
  LLVM_MARK_AS_BITMASK_ENUM(319,13904
  LLVM_MARK_AS_BITMASK_ENUM(/*LargestValue=*/TemporalProfile)TemporalProfile319,13904
enum class instrprof_error 324,14020
  success 325,14049
  eof,326,14064
  unrecognized_format,327,14071
  bad_magic,328,14094
  bad_header,329,14107
  unsupported_version,330,14121
  unsupported_hash_type,331,14144
  too_large,332,14169
  truncated,333,14182
  malformed,334,14195
  missing_correlation_info,335,14208
  unexpected_correlation_info,336,14236
  unable_to_correlate_profile,337,14267
  unknown_function,338,14298
  invalid_prof,339,14318
  hash_mismatch,340,14334
  count_mismatch,341,14351
  bitmap_mismatch,342,14369
  counter_overflow,343,14388
  value_site_count_mismatch,344,14408
  compress_failed,345,14437
  uncompress_failed,346,14456
  empty_raw_profile,347,14477
  zlib_unavailable,348,14498
  raw_profile_version_mismatch,349,14518
  counter_value_too_large,350,14550
struct TemporalProfTraceTy 355,14671
  std::vector<uint64_t> FunctionNameRefs;356,14700
  uint64_t Weight;357,14742
  TemporalProfTraceTy(358,14761
inline std::error_code make_error_code(369,15236
class InstrProfError 373,15368
  InstrProfError(375,15434
  void log(382,15650
  std::error_code convertToErrorCode(384,15715
  instrprof_error get(388,15809
  const std::string &getMessage(getMessage389,15855
  static std::pair<std::pair394,16108
  static std::pair<instrprof_error, std::string> take(394,16108
  static char ID;405,16485
  instrprof_error Err;408,16513
  std::string Msg;409,16536
namespace object 412,16559
namespace IndexedInstrProf 418,16625
class InstrProfSymtab 429,17061
  using AddrHashMap 431,17093
  StringRef Data;434,17169
  uint64_t Address 435,17187
  StringSet<> NameTab;437,17237
  std::vector<std::vector439,17311
  std::vector<std::pair<uint64_t, StringRef>> MD5NameMap;439,17311
  std::vector<std::vector442,17482
  std::vector<std::pair<uint64_t, Function *>> MD5FuncMap;442,17482
  AddrHashMap AddrToMD5Map;445,17679
  bool Sorted 446,17707
  static StringRef getExternalSymbol(448,17731
  Error addFuncName(492,19691
  void mapAddress(507,20251
  static bool isExternalSymbol(529,21217
  inline StringRef getNameData(537,21507
Error InstrProfSymtab::create(create543,21647
Error InstrProfSymtab::create(create550,21809
void InstrProfSymtab::finalizeSymtab(finalizeSymtab559,22007
StringRef InstrProfSymtab::getFuncOrVarNameIfDefined(getFuncOrVarNameIfDefined570,22334
StringRef InstrProfSymtab::getFuncOrVarName(getFuncOrVarName577,22537
Function* InstrProfSymtab::getFunction(getFunction587,22951
struct CountSumOrPercent 599,23475
  uint64_t NumEntries;600,23502
  double CountSum;601,23525
  double ValueCounts[ValueCounts602,23544
  CountSumOrPercent(603,23594
  void reset(604,23666
struct OverlapStats 613,23840
  enum OverlapStatsLevel 614,23862
  enum OverlapStatsLevel { ProgramLevel,614,23862
  enum OverlapStatsLevel { ProgramLevel, FunctionLevel 614,23862
  CountSumOrPercent Base;616,23977
  CountSumOrPercent Test;618,24060
  CountSumOrPercent Overlap;620,24148
  CountSumOrPercent Mismatch;621,24177
  CountSumOrPercent Unique;622,24207
  OverlapStatsLevel Level;623,24235
  const std::string *BaseFilename;BaseFilename624,24262
  const std::string *TestFilename;TestFilename625,24297
  StringRef FuncName;626,24332
  uint64_t FuncHash;627,24354
  bool Valid;628,24375
  OverlapStats(630,24390
  void setFuncInfo(636,24583
  static inline double score(646,24931
struct OverlapFuncFilters 656,25240
  uint64_t ValueCutoff;657,25268
  const std::string NameFilter;658,25292
struct InstrProfValueSiteRecord 661,25328
  std::list<InstrProfValueData> ValueData;663,25418
  InstrProfValueSiteRecord(665,25462
  InstrProfValueSiteRecord(667,25547
  void sortByTargetValues(671,25676
struct InstrProfRecord 693,26569
  std::vector<uint64_t> Counts;694,26594
  std::vector<uint8_t> BitmapBytes;695,26626
  InstrProfRecord(698,26694
  InstrProfRecord(699,26773
  InstrProfRecord(703,26996
  InstrProfRecord &operator=(operator=709,27300
  void sortValueData(768,29668
  void Clear(775,29888
  void clearValueData(781,29983
  enum CountPseudoKind 795,30572
    NotPseudo 796,30597
    PseudoHot,797,30616
    PseudoWarm,798,30631
  enum PseudoCountVal 800,30652
    HotFunctionVal 801,30676
    WarmFunctionVal 802,30701
  CountPseudoKind getCountPseudoKind(804,30732
  void setPseudoCount(812,30988
  struct ValueProfData 820,31197
    std::vector<InstrProfValueSiteRecord> IndirectCallSites;821,31222
    std::vector<InstrProfValueSiteRecord> MemOPSizes;822,31283
  std::unique_ptr<ValueProfData> ValueData;824,31342
  getValueSitesForKind(827,31431
  getValueSitesForKind(837,31921
  getOrCreateValueSitesForKind(851,32295
struct NamedInstrProfRecord 879,33338
  StringRef Name;880,33386
  uint64_t Hash;881,33404
  static const int CS_FLAG_IN_FUNC_HASH 884,33497
  NamedInstrProfRecord(887,33580
  NamedInstrProfRecord(890,33757
  static bool hasCSFlagInHash(896,34024
  static void setCSFlagInHash(899,34132
uint32_t InstrProfRecord::getNumValueKinds(getNumValueKinds904,34247
uint32_t InstrProfRecord::getNumValueData(getNumValueData911,34479
uint32_t InstrProfRecord::getNumValueSites(getNumValueSites918,34669
uint32_t InstrProfRecord::getNumValueDataForSite(getNumValueDataForSite922,34792
InstrProfRecord::getValueForSite(getValueForSite928,35039
uint64_t InstrProfRecord::getValueForSite(getValueForSite944,35539
void InstrProfRecord::reserveSites(reserveSites958,35995
#define INSTR_PROF_VALUE_PROF_DATA965,36225
void InstrProfValueSiteRecord::sortByCount(sortByCount968,36307
namespace IndexedInstrProf 979,36631
enum class HashT 981,36661
  MD5,982,36691
  Last 983,36698
inline uint64_t ComputeHash(986,36715
const uint64_t Magic 994,36880
enum ProfVersion 996,36944
  Version1 1001,37247
  Version2 1006,37521
  Version3 1009,37663
  Version4 1012,37792
  Version5 1014,37885
  Version6 1017,38025
  Version7 1019,38103
  Version8 1021,38179
  Version9 1023,38222
  Version10 1025,38310
  Version11 1027,38379
  CurrentVersion 1029,38429
const uint64_t Version 1031,38476
const HashT HashType 1033,38531
inline uint64_t ComputeHash(1035,38567
struct Header 1040,38847
  uint64_t Magic;1041,38863
  uint64_t Version;1042,38881
  uint64_t Unused;1043,38901
  uint64_t HashType;1044,38954
  uint64_t HashOffset;1045,38975
  uint64_t MemProfOffset;1046,38998
  uint64_t BinaryIdOffset;1047,39024
  uint64_t TemporalProfTracesOffset;1048,39051
struct Summary 1068,39910
  struct Entry 1069,39927
    uint64_t Cutoff;1070,39944
        MinBlockCount;1072,40033
    uint64_t NumBlocks;1073,40111
  enum SummaryFieldKind 1078,40354
    TotalNumFunctions 1080,40432
    TotalNumBlocks 1082,40510
    MaxFunctionCount 1086,40681
    MaxBlockCount 1088,40747
    MaxInternalBlockCount 1090,40844
    TotalBlockCount 1092,40925
    NumKinds 1093,40950
  uint64_t NumSummaryFields;1097,41056
  uint64_t NumCutoffEntries;1099,41162
  Summary(1102,41214
  void operator delete(operator delete1104,41267
  static uint32_t getSize(1106,41330
  const uint64_t *getSummaryDataBase(getSummaryDataBase1111,41521
  uint64_t *getSummaryDataBase(getSummaryDataBase1115,41630
  const Entry *getCutoffEntryBase(getCutoffEntryBase1119,41721
  Entry *getCutoffEntryBase(getCutoffEntryBase1124,41864
  uint64_t get(1128,41980
  void set(1132,42064
  const Entry &getEntry(getEntry1136,42147
  void setEntry(1138,42226
inline std::unique_ptr<Summary> allocSummary(1146,42428
namespace RawInstrProf 1153,42660
const uint64_t Version 1168,43408
template <> inline uint64_t getMagic<getMagic1171,43511
template <> inline uint64_t getMagic<getMagic1175,43599
  #define INSTR_PROF_DATA(1185,44024
struct Header 1193,44342
#define INSTR_PROF_RAW_HEADER(1194,44358

/usr/include/llvm/ProfileData/InstrProfCorrelator.h,2429
#define LLVM_PROFILEDATA_INSTRPROFCORRELATOR_H13,631
class InstrProfCorrelator 32,1093
  enum ProfCorrelatorKind 36,1225
  enum ProfCorrelatorKind { NONE,36,1225
  enum ProfCorrelatorKind { NONE, DEBUG_INFO,36,1225
  enum ProfCorrelatorKind { NONE, DEBUG_INFO, BINARY 36,1225
  const char *getNamesPointer(getNamesPointer54,2012
  size_t getNamesSize(57,2131
  uint64_t getCountersSectionSize(60,2243
  static const char *FunctionNameAttributeName;FunctionNameAttributeName64,2356
  static const char *CFGHashAttributeName;CFGHashAttributeName65,2404
  static const char *NumCountersAttributeName;NumCountersAttributeName66,2447
  enum InstrProfCorrelatorKind 68,2495
  enum InstrProfCorrelatorKind { CK_32Bit,68,2495
  enum InstrProfCorrelatorKind { CK_32Bit, CK_64Bit 68,2495
  InstrProfCorrelatorKind getKind(69,2550
  struct Context 73,2665
    std::unique_ptr<MemoryBuffer> Buffer;77,2851
    uint64_t CountersSectionStart;79,2951
    uint64_t CountersSectionEnd;80,2986
    const char *DataStart;DataStart83,3120
    const char *DataEnd;DataEnd84,3147
    const char *NameStart;NameStart85,3172
    size_t NameSize;86,3199
    bool ShouldSwapBytes;88,3282
  const std::unique_ptr<Context> Ctx;90,3313
  InstrProfCorrelator(92,3352
  std::string Names;95,3472
  std::vector<std::string> NamesVec;96,3493
  struct Probe 98,3531
    std::string FunctionName;99,3548
    std::optional<std::string> LinkageName;100,3578
    yaml::Hex64 CFGHash;101,3622
    yaml::Hex64 CounterOffset;102,3647
    uint32_t NumCounters;103,3678
    std::optional<std::string> FilePath;104,3704
    std::optional<int> LineNumber;105,3745
  struct CorrelationData 108,3786
    std::vector<Probe> Probes;109,3813
  const InstrProfCorrelatorKind Kind;120,4147
class InstrProfCorrelatorImpl 126,4360
  const RawInstrProf::ProfileData<IntPtrT> *getDataPointer(getDataPointer133,4655
  size_t getDataSize(138,4827
  std::vector<RawInstrProf::ProfileData<IntPtrT>> Data;145,5092
  template <class T> T maybeSwap(161,5654
  InstrProfCorrelatorImpl(166,5783
  llvm::DenseSet<IntPtrT> CounterOffsets;169,5969
class DwarfInstrProfCorrelator 175,6170
  DwarfInstrProfCorrelator(177,6253
  std::unique_ptr<DWARFContext> DICtx;183,6498
class BinaryInstrProfCorrelator 229,8188
  BinaryInstrProfCorrelator(231,8272
  const char *getNamesPointer(getNamesPointer235,8483
  size_t getNamesSize(238,8608

/usr/include/llvm/ProfileData/InstrProfData.inc,907
typedef 319,13503
typedef 369,15000
typedef 452,17981
INSTR_PROF_VISIBILITY 470,18799
INSTR_PROF_VISIBILITY 472,18884
INSTR_PROF_VISIBILITY 474,18970
INSTR_PROF_VISIBILITY 476,19064
INSTR_PROF_VISIBILITY 501,19625
uint32_t 502,19665
INSTR_PROF_VISIBILITY 514,20038
uint32_t 515,20078
INSTR_PROF_VISIBILITY 524,20365
InstrProfValueData 525,20405
INSTR_PROF_VISIBILITY 533,20701
uint32_t 534,20741
INSTR_PROF_VISIBILITY 545,21042
ValueProfRecord 546,21082
INSTR_PROF_VISIBILITY 556,21456
ValueProfRecord 557,21496
INSTR_PROF_VISIBILITY 567,21777
INSTR_PROF_VISIBILITY 587,22458
INSTR_PROF_VISIBILITY 612,23377
typedef 802,31939
INSTR_PROF_VISIBILITY 871,33523
int 872,33563
INSTR_PROF_VISIBILITY 887,34124
int 888,34164
INSTR_PROF_VISIBILITY 899,34556
int 900,34596
INSTR_PROF_VISIBILITY 901,34667
int 902,34707
INSTR_PROF_VISIBILITY 908,34997
INSTR_PROF_VISIBILITY 927,35740

/usr/include/llvm/ProfileData/InstrProfReader.h,6214
#define LLVM_PROFILEDATA_INSTRPROFREADER_H15,604
  InstrProfIterator &operator++(operator++75,2186
  bool operator==(operator==79,2261
  bool operator!=(operator!=82,2354
  value_type &operator*(operator*85,2447
  value_type *operator->(operator->86,2492
class InstrProfReader 91,2683
  instrprof_error LastError 92,2707
  std::string LastErrorMsg;93,2763
  virtual Error readBinaryIds(106,3097
  virtual Error printBinaryIds(111,3227
  InstrProfIterator<> begin(114,3333
  InstrProfIterator<> end(115,3401
  std::unique_ptr<InstrProfSymtab> Symtab;158,5119
  SmallVector<TemporalProfTraceTy> TemporalProfTraces;160,5203
  uint64_t TemporalProfTraceStreamSize 162,5314
  Error error(165,5404
  Error error(173,5650
  Error success(182,5948
  bool isEOF(186,6090
  bool hasError(189,6229
  Error getError(192,6339
  getTemporalProfTraces(214,7199
  uint64_t getTemporalProfTraceStreamSize(220,7475
class TextInstrProfReader 233,7939
  std::unique_ptr<MemoryBuffer> DataBuffer;236,8039
  line_iterator Line;238,8121
  InstrProfKind ProfileKind 240,8188
  TextInstrProfReader(247,8345
  uint64_t getVersion(256,8794
  bool isIRLevelProfile(258,8848
  bool hasCSIRLevelProfile(262,8974
  bool instrEntryBBEnabled(266,9102
  bool hasSingleByteCoverage(271,9271
  bool functionEntryOnly(275,9403
  bool hasMemoryProfile(279,9530
  bool hasTemporalProfile(284,9654
  InstrProfKind getProfileKind(288,9780
  InstrProfSymtab &getSymtab(getSymtab296,10000
class RawInstrProfReader 310,10412
  std::unique_ptr<MemoryBuffer> DataBuffer;313,10511
  const InstrProfCorrelatorImpl<IntPtrT> *Correlator;Correlator316,10676
  std::vector<std::vector318,10796
  std::vector<std::pair<uint64_t, uint64_t>> TemporalProfTimestamps;318,10796
  bool ShouldSwapBytes;319,10865
  uint64_t Version;323,11089
  uint64_t CountersDelta;324,11109
  uint64_t BitmapDelta;325,11135
  uint64_t NamesDelta;326,11159
  const RawInstrProf::ProfileData<IntPtrT> *Data;Data327,11182
  const RawInstrProf::ProfileData<IntPtrT> *DataEnd;DataEnd328,11232
  const char *CountersStart;CountersStart329,11285
  const char *CountersEnd;CountersEnd330,11314
  const char *BitmapStart;BitmapStart331,11341
  const char *BitmapEnd;BitmapEnd332,11368
  const char *NamesStart;NamesStart333,11393
  const char *NamesEnd;NamesEnd334,11419
  const uint8_t *ValueDataStart;ValueDataStart337,11553
  uint32_t ValueKindLast;338,11586
  uint32_t CurValueDataSize;339,11612
  std::vector<llvm::object::BuildID> BinaryIds;340,11641
  static const uint64_t MaxCounterValue 345,11759
  RawInstrProfReader(348,11824
  uint64_t getVersion(364,12580
  bool isIRLevelProfile(366,12640
  bool hasCSIRLevelProfile(370,12738
  bool instrEntryBBEnabled(374,12841
  bool hasSingleByteCoverage(378,12946
  bool functionEntryOnly(382,13055
  bool hasMemoryProfile(386,13166
  bool hasTemporalProfile(392,13359
  InstrProfSymtab &getSymtab(getSymtab399,13594
  template <class IntT> IntT swap(412,13963
  llvm::endianness getDataEndianness(416,14076
  inline uint8_t getNumPaddingBytes(425,14339
  bool atEnd(434,14730
  void advanceData(436,14780
  const char *getNextHeaderPos(getNextHeaderPos451,15338
  StringRef getName(456,15450
  int getCounterTypeSize(460,15553
using RawInstrProfReader32 465,15669
using RawInstrProfReader64 466,15728
namespace IndexedInstrProf 468,15788
class InstrProfLookupTrait 476,15972
  std::vector<NamedInstrProfRecord> DataBuffer;477,16001
  IndexedInstrProf::HashT HashType;478,16049
  unsigned FormatVersion;479,16085
  llvm::endianness ValueProfDataEndianness 483,16238
  InstrProfLookupTrait(486,16318
  using data_type 489,16460
  using internal_key_type 491,16513
  using external_key_type 492,16552
  using hash_value_type 493,16591
  using offset_type 494,16627
  static bool EqualKey(496,16660
  static StringRef GetInternalKey(497,16728
  static StringRef GetExternalKey(498,16789
  static std::pair<std::pair502,16896
  ReadKeyDataLength(503,16941
  StringRef ReadKey(513,17276
  void setValueProfDataEndianness(522,17613
struct InstrProfReaderIndexBase 527,17728
using OnDiskHashTableImplV3 552,18797
using MemProfRecordHashTable 555,18886
using MemProfFrameHashTable 557,18981
class InstrProfReaderIndex 564,19182
  std::unique_ptr<HashTableImpl> HashTable;566,19254
  typename HashTableImpl::data_iterator RecordIterator;567,19298
  uint64_t FormatVersion;568,19354
  void advanceToNextKey(582,19916
  bool atEnd(584,19974
  void setValueProfDataEndianness(588,20063
  uint64_t getVersion(592,20210
  bool isIRLevelProfile(594,20289
  bool hasCSIRLevelProfile(598,20393
  bool instrEntryBBEnabled(602,20502
  bool hasSingleByteCoverage(606,20613
  bool functionEntryOnly(610,20728
  bool hasMemoryProfile(614,20845
  bool hasTemporalProfile(618,20949
  Error populateSymtab(624,21111
class InstrProfReaderRemapper 630,21304
  virtual Error populateRemappings(633,21392
class IndexedInstrProfReader 639,21631
  std::unique_ptr<MemoryBuffer> DataBuffer;642,21734
  std::unique_ptr<MemoryBuffer> RemappingBuffer;644,21821
  std::unique_ptr<InstrProfReaderIndexBase> Index;646,21909
  std::unique_ptr<InstrProfReaderRemapper> Remapper;648,22003
  std::unique_ptr<ProfileSummary> Summary;650,22084
  std::unique_ptr<ProfileSummary> CS_Summary;652,22173
  memprof::MemProfSchema Schema;654,22264
  std::unique_ptr<MemProfRecordHashTable> MemProfRecordTable;656,22376
  std::unique_ptr<MemProfFrameHashTable> MemProfFrameTable;658,22501
  uint64_t BinaryIdsSize{BinaryIdsSize660,22593
  const uint8_t *BinaryIdsStart BinaryIdsStart662,22678
  unsigned RecordIndex;665,22776
  IndexedInstrProfReader(674,23177
  uint64_t getVersion(683,23608
  bool isIRLevelProfile(684,23679
  bool hasCSIRLevelProfile(685,23758
  bool instrEntryBBEnabled(689,23850
  bool hasSingleByteCoverage(693,23942
  bool functionEntryOnly(697,24038
  bool hasMemoryProfile(699,24120
  bool hasTemporalProfile(701,24200
  InstrProfKind getProfileKind(707,24379
  uint64_t getMaximumFunctionCount(745,26127
  void setValueProfDataEndianness(765,26837
  ProfileSummary &getSummary(getSummary776,27275

/usr/include/llvm/ProfileData/InstrProfWriter.h,819
#define LLVM_PROFILEDATA_INSTRPROFWRITER_H15,604
class InstrProfWriter 37,1140
  bool Sparse;42,1248
  StringMap<ProfilingData> FunctionData;43,1263
  uint64_t MaxTemporalProfTraceLength;45,1365
  uint64_t TemporalProfTraceReservoirSize;47,1464
  SmallVector<TemporalProfTraceTy> TemporalProfTraces;51,1650
  std::mt19937 RNG;52,1705
  llvm::MapVector<llvm::MapVector56,1874
      MemProfRecordData;57,1942
  llvm::MapVector<llvm::MapVector61,2127
  llvm::MapVector<memprof::FrameId, memprof::Frame> MemProfFrameData;61,2127
  std::vector<llvm::object::BuildID> BinaryIds;64,2223
  InstrProfRecordWriterTrait *InfoObj;InfoObj69,2439
  StringMap<ProfilingData> &getProfileData(getProfileData77,2672
  void addRecord(84,3064
  Error mergeProfileKind(134,5182
  InstrProfKind getProfileKind(169,6614

/usr/include/llvm/ProfileData/MemProf.h,4513
#define LLVM_PROFILEDATA_MEMPROF_H_2,36
enum class Meta 18,415
  Start 19,444
#define MIBEntryDef(20,457
#undef MIBEntryDef22,551
  Size23,570
using MemProfSchema 26,581
struct PortableMemInfoBlock 31,839
  explicit PortableMemInfoBlock(33,905
#define MIBEntryDef(34,966
#undef MIBEntryDef36,1070
  PortableMemInfoBlock(39,1094
  void deserialize(45,1307
#define MIBEntryDef(50,1468
#undef MIBEntryDef55,1766
  void serialize(65,2067
#define MIBEntryDef(71,2276
#undef MIBEntryDef76,2574
  void printYAML(84,2757
#define MIBEntryDef(86,2834
#undef MIBEntryDef89,3012
#define MIBEntryDef(93,3103
#undef MIBEntryDef96,3270
  void clear(98,3290
  static MemProfSchema getSchema(101,3389
#define MIBEntryDef(103,3450
#undef MIBEntryDef105,3563
  bool operator==(operator==109,3604
#define MIBEntryDef(110,3665
#undef MIBEntryDef114,3889
  bool operator!=(operator!=118,3930
  static constexpr size_t serializedSize(122,4027
#define MIBEntryDef(124,4095
#undef MIBEntryDef126,4204
#define MIBEntryDef(131,4256
#undef MIBEntryDef133,4361
using FrameId 137,4462
struct Frame 141,4663
  GlobalValue::GUID Function;144,4807
  std::optional<std::string> SymbolName;147,4996
  uint32_t LineOffset;149,5116
  uint32_t Column;152,5239
  bool IsInlineFrame;154,5301
  Frame(156,5324
  Frame(164,5528
  bool operator==(operator==167,5672
  Frame &operator=(operator=174,5995
  bool operator!=(operator!=183,6228
  void serialize(186,6363
  static Frame deserialize(203,6937
  static constexpr size_t serializedSize(219,7575
  void printYAML(225,7804
  inline FrameId hash(237,8381
struct IndexedAllocationInfo 257,9142
  llvm::SmallVector<FrameId> CallStack;260,9304
  PortableMemInfoBlock Info;262,9410
  IndexedAllocationInfo(265,9477
  size_t serializedSize(269,9680
  bool operator==(operator==275,9945
  bool operator!=(operator!=289,10283
struct AllocationInfo 296,10506
  llvm::SmallVector<Frame> CallStack;298,10608
  PortableMemInfoBlock Info;300,10688
  AllocationInfo(303,10748
  void printYAML(312,11026
struct IndexedMemProfRecord 327,11579
  llvm::SmallVector<IndexedAllocationInfo> AllocSites;330,11701
  llvm::SmallVector<llvm::SmallVector<FrameId>> CallSites;336,12116
  void clear(338,12176
  void merge(343,12245
  size_t serializedSize(350,12508
  bool operator==(operator==365,12971
struct MemProfRecord 401,14303
  llvm::SmallVector<AllocationInfo> AllocSites;403,14400
  llvm::SmallVector<llvm::SmallVector<Frame>> CallSites;405,14521
  MemProfRecord(408,14608
  void print(424,15182
class RecordLookupTrait 451,16121
  using data_type 453,16155
  using internal_key_type 454,16205
  using external_key_type 455,16243
  using hash_value_type 456,16281
  using offset_type 457,16317
  RecordLookupTrait(460,16382
  static bool EqualKey(462,16442
  static uint64_t GetInternalKey(463,16508
  static uint64_t GetExternalKey(464,16567
  hash_value_type ComputeHash(466,16627
  static std::pair<std::pair468,16684
  ReadKeyDataLength(469,16729
  uint64_t ReadKey(479,17064
  data_type ReadData(485,17283
  MemProfSchema Schema;493,17538
  IndexedMemProfRecord Record;495,17641
class RecordWriterTrait 499,17750
  using key_type 501,17784
  using key_type_ref 502,17813
  using data_type 504,17847
  using data_type_ref 505,17889
  using hash_value_type 507,17938
  using offset_type 508,17974
  MemProfSchema *Schema Schema513,18232
  static hash_value_type ComputeHash(517,18302
  static std::pair<std::pair519,18370
  EmitKeyDataLength(520,18415
  void EmitKey(531,18741
  void EmitData(537,18931
class FrameWriterTrait 550,19545
  using key_type 552,19578
  using key_type_ref 553,19606
  using data_type 555,19639
  using data_type_ref 556,19666
  using hash_value_type 558,19700
  using offset_type 559,19735
  static hash_value_type ComputeHash(561,19768
  static std::pair<std::pair563,19836
  EmitKeyDataLength(564,19881
  void EmitKey(574,20206
  void EmitData(580,20396
class FrameLookupTrait 587,20609
  using data_type 589,20642
  using internal_key_type 590,20675
  using external_key_type 591,20712
  using hash_value_type 592,20749
  using offset_type 593,20784
  static bool EqualKey(595,20817
  static uint64_t GetInternalKey(598,20907
  static uint64_t GetExternalKey(599,20975
  hash_value_type ComputeHash(601,21044
  static std::pair<std::pair603,21110
  ReadKeyDataLength(604,21155
  uint64_t ReadKey(614,21490
  data_type ReadData(620,21709

/usr/include/llvm/ProfileData/ProfileCommon.h,790
#define LLVM_PROFILEDATA_PROFILECOMMON_H15,603
namespace sampleprof 39,1329
class ProfileSummaryBuilder 45,1408
  std::map<std::map50,1617
  std::map<uint64_t, uint32_t, std::greater<uint64_t>> CountFrequencies;50,1617
  std::vector<uint32_t> DetailedSummaryCutoffs;51,1690
  SummaryEntryVector DetailedSummary;54,1750
  uint64_t TotalCount 55,1788
  uint64_t MaxCount 56,1815
  uint64_t MaxFunctionCount 57,1840
  uint32_t NumCounts 58,1873
  uint32_t NumFunctions 59,1899
  ProfileSummaryBuilder(61,1929
  static const ArrayRef<uint32_t> DefaultCutoffs;70,2220
class InstrProfSummaryBuilder final : public ProfileSummaryBuilder 79,2594
class SampleProfileSummaryBuilder final : public ProfileSummaryBuilder 93,3010
void ProfileSummaryBuilder::addCount(addCount106,3528

/usr/include/llvm/ProfileData/RawMemProfReader.h,850
#define LLVM_PROFILEDATA_RAWMEMPROFREADER_H_2,45
class MemProfReader 36,1332
  InstrProfKind getProfileKind(39,1424
  Iterator end(43,1652
  Iterator begin(44,1692
  const llvm::DenseMap<llvm::DenseMap50,1853
  const llvm::DenseMap<FrameId, Frame> &getFrameMapping(getFrameMapping50,1853
  const llvm::MapVector<llvm::MapVector55,2015
  getProfileData(56,2082
  readNextRecord(61,2162
  MemProfReader(85,3078
  const Frame &idToFrame(idToFrame93,3389
  llvm::DenseMap<llvm::DenseMap99,3634
  llvm::DenseMap<FrameId, Frame> IdToFrame;99,3634
  llvm::MapVector<llvm::MapVector102,3837
  llvm::MapVector<GlobalValue::GUID, IndexedMemProfRecord> FunctionProfileData;102,3837
  llvm::MapVector<llvm::MapVector104,3983
  llvm::MapVector<GlobalValue::GUID, IndexedMemProfRecord>::iterator Iter;104,3983
using CallStackMap 109,4190

/usr/include/llvm/ProfileData/SampleProf.h,10539
#define LLVM_PROFILEDATA_SAMPLEPROF_H15,595
enum class sampleprof_error 47,1349
  success 48,1379
  bad_magic,49,1394
  unsupported_version,50,1407
  too_large,51,1430
  truncated,52,1443
  malformed,53,1456
  unrecognized_format,54,1469
  unsupported_writing_format,55,1492
  truncated_name_table,56,1522
  not_implemented,57,1546
  counter_overflow,58,1565
  ostream_seek_unsupported,59,1585
  uncompress_failed,60,1613
  zlib_unavailable,61,1634
  hash_mismatch62,1654
inline std::error_code make_error_code(65,1674
inline sampleprof_error MergeResult(69,1808
namespace std 81,2213
struct is_error_code_enum<is_error_code_enum84,2242
namespace llvm 88,2338
namespace sampleprof 89,2355
enum SampleProfileFormat 91,2379
  SPF_None 92,2406
  SPF_Text 93,2422
  SPF_Compact_Binary 94,2440
  SPF_GCC 95,2482
  SPF_Ext_Binary 96,2499
  SPF_Binary 97,2523
enum SampleProfileLayout 100,2547
  SPL_None 101,2574
  SPL_Nest 102,2590
  SPL_Flat 103,2608
static inline uint64_t SPMagic(106,2630
static inline uint64_t SPVersion(113,2963
enum SecType 118,3179
  SecInValid 119,3194
  SecProfSummary 120,3212
  SecNameTable 121,3234
  SecProfileSymbolList 122,3254
  SecFuncOffsetTable 123,3282
  SecFuncMetadata 124,3308
  SecCSNameTable 125,3331
  SecFuncProfileFirst 127,3396
  SecLBRProfile 128,3424
static inline std::string getSecName(131,3466
struct SecHdrTableEntry 156,4199
  SecType Type;157,4225
  uint64_t Flags;158,4241
  uint64_t Offset;159,4259
  uint64_t Size;160,4278
  uint64_t LayoutIndex;163,4387
enum class SecCommonFlags 169,4611
  SecFlagInValid 170,4650
  SecFlagCompress 171,4672
  SecFlagFlat 173,4767
enum class SecNameTableFlags 179,4940
  SecFlagInValid 180,4982
  SecFlagMD5Name 181,5004
  SecFlagFixedLengthMD5 184,5132
  SecFlagUniqSuffix 187,5305
enum class SecProfSummaryFlags 189,5339
  SecFlagInValid 190,5383
  SecFlagPartial 194,5572
  SecFlagFullContext 197,5684
  SecFlagFSDiscriminator 200,5807
  SecFlagIsPreInlined 203,5966
enum class SecFuncMetadataFlags 206,6004
  SecFlagInvalid 207,6049
  SecFlagIsProbeBased 208,6071
  SecFlagHasAttribute 209,6105
enum class SecFuncOffsetFlags 212,6143
  SecFlagInvalid 213,6186
  SecFlagOrdered 216,6345
static inline void verifySecFlag(221,6472
static inline void addSecFlag(248,7300
static inline void removeSecFlag(256,7597
static inline bool hasSecFlag(264,7900
struct LineLocation 280,8653
  LineLocation(281,8675
  bool operator<(286,8811
  bool operator==(operator==291,8980
  bool operator!=(operator!=295,9109
  uint64_t getHashCode(299,9238
  uint32_t LineOffset;303,9334
  uint32_t Discriminator;304,9357
struct LineLocationHash 307,9387
  uint64_t operator()(operator()308,9413
class SampleRecord 325,10096
  using CallTarget 327,10125
  struct CallTargetComparator 328,10179
    bool operator()(operator()329,10211
  using SortedCallTargetSet 337,10410
  using CallTargetMap 338,10484
  sampleprof_error addSamples(346,10813
  uint64_t removeSamples(355,11206
  sampleprof_error addCalledTarget(367,11552
  uint64_t removeCalledTarget(379,12059
  bool hasCalls(390,12344
  uint64_t getSamples(392,12402
  const CallTargetMap &getCallTargets(getCallTargets393,12455
  const SortedCallTargetSet getSortedCallTargets(394,12525
  uint64_t getCallTargetSum(398,12630
  static const SortedCallTargetSet SortCallTargets(406,12835
  static const CallTargetMap adjustCallTargets(415,13149
  bool operator==(operator==430,13748
  bool operator!=(operator!=434,13885
  uint64_t NumSamples 439,13982
  CallTargetMap CallTargets;440,14009
enum ContextStateMask 446,14165
  UnknownContext 447,14189
  RawContext 448,14242
  SyntheticContext 449,14311
  InlinedContext 450,14388
  MergedContext 451,14465
enum ContextAttributeMask 455,14599
  ContextNone 456,14627
  ContextWasInlined 457,14648
  ContextShouldBeInlined 458,14729
  ContextDuplicatedIntoBase 459,14798
struct SampleContextFrame 464,14968
  FunctionId Func;465,14996
  LineLocation Location;466,15015
  SampleContextFrame(468,15041
  SampleContextFrame(470,15087
  bool operator==(operator==473,15191
  bool operator!=(operator!=477,15313
  std::string toString(481,15405
  uint64_t getHashCode(492,15736
static inline hash_code hash_value(499,15910
using SampleContextFrameVector 503,16009
using SampleContextFrames 504,16078
struct SampleContextFrameHash 506,16137
  uint64_t operator()(operator()507,16169
class SampleContext 522,16898
  SampleContext(524,16928
  SampleContext(526,16999
  SampleContext(531,17161
  SampleContext(534,17265
  SampleContext(544,17688
  static void createCtxVectorFromStr(565,18485
  static void decodeContextString(584,19301
  operator SampleContextFrames(operator SampleContextFrames606,20051
  bool hasAttribute(607,20114
  void setAttribute(608,20195
  uint32_t getAllAttributes(609,20270
  void setAllAttributes(610,20323
  bool hasState(611,20379
  void setState(612,20447
  void clearState(613,20509
  bool hasContext(614,20574
  bool isBaseContext(615,20636
  FunctionId getFunction(616,20701
  SampleContextFrames getContextFrames(617,20751
  static std::string getContextString(619,20823
  std::string toString(632,21308
  uint64_t getHashCode(638,21443
  void setFunction(645,21654
  void setContext(651,21797
  bool operator==(operator==659,22024
  bool operator!=(operator!=664,22181
  bool operator<(666,22262
  struct Hash 689,22887
    uint64_t operator()(operator()690,22903
  bool IsPrefixOf(695,23013
  FunctionId Func;711,23589
  SampleContextFrames FullContext;713,23675
  uint32_t State;715,23754
  uint32_t Attributes;717,23820
static inline hash_code hash_value(720,23847
inline raw_ostream &operator<<(operator<<724,23949
using BodySampleMap 731,24133
using FunctionSamplesMap 734,24330
using CallsiteSampleMap 735,24396
using LocToLocMap 736,24466
class FunctionSamples 744,24800
  sampleprof_error addTotalSamples(751,24953
  void removeTotalSamples(759,25251
  void setTotalSamples(766,25386
  void setHeadSamples(768,25448
  sampleprof_error addHeadSamples(770,25513
  sampleprof_error addBodySamples(778,25818
  sampleprof_error addCalledTargetSamples(784,26071
  sampleprof_error addSampleRecord(793,26494
  uint64_t removeCalledTargetAndBodySample(801,26877
  void removeAllCallsiteSamples(817,27492
  void updateCallsiteSamples(822,27630
  void updateTotalSamples(835,28229
  void SetContextSynthetic(849,28619
  const LineLocation &mapIRLocToProfileLoc(mapIRLocToProfileLoc859,28892
  ErrorOr<uint64_t> findSamplesAt(874,29515
  findCallTargetMapAt(887,30101
  findCallTargetMapAt(898,30598
  FunctionSamplesMap &functionSamplesAt(functionSamplesAt906,30908
  findFunctionSamplesMapAt(912,31122
  bool empty(929,31908
  uint64_t getTotalSamples(932,32032
  uint64_t getHeadSamples(940,32569
  uint64_t getHeadSamplesEstimate(947,32999
  const BodySampleMap &getBodySamples(getBodySamples971,34049
  const CallsiteSampleMap &getCallsiteSamples(getCallsiteSamples974,34197
  uint64_t getMaxCountInside(982,34553
  sampleprof_error merge(996,35093
  void findInlinedFunctions(1036,36932
  void setFunction(1064,38140
  FunctionId getFunction(1069,38260
  StringRef getFuncName(1072,38369
  void setFunctionHash(1074,38441
  uint64_t getFunctionHash(1076,38505
  void setIRToProfileLocationMap(1078,38566
  static StringRef getCanonicalFnName(1085,38855
  static constexpr const char *LLVMSuffix LLVMSuffix1093,39182
  static constexpr const char *PartSuffix PartSuffix1094,39236
  static constexpr const char *UniqSuffix UniqSuffix1095,39290
  static StringRef getCanonicalFnName(1097,39347
  StringRef getFuncName(1136,41013
  static uint64_t getCallSiteHash(1159,42061
  static bool ProfileIsProbeBased;1179,42963
  static bool ProfileIsCS;1181,42999
  static bool ProfileIsPreInlined;1183,43027
  SampleContext &getContext(getContext1185,43063
  void setContext(1187,43120
  static bool UseMD5;1190,43250
  static bool HasUniqSuffix;1193,43341
  static bool ProfileIsFS;1196,43429
  DenseMap<DenseMap1200,43603
  DenseMap<uint64_t, StringRef> *GUIDToFuncNameMap GUIDToFuncNameMap1200,43603
  uint64_t getGUID(1204,43775
  bool operator==(operator==1212,44039
  bool operator!=(operator!=1223,44569
  uint64_t FunctionHash 1229,44708
  mutable SampleContext Context;1232,44781
  uint64_t TotalSamples 1238,45008
  uint64_t TotalHeadSamples 1243,45201
  BodySampleMap BodySamples;1250,45476
  CallsiteSampleMap CallsiteSamples;1268,46098
  const LocToLocMap *IRToProfileLocationMap IRToProfileLocationMap1287,46780
static inline FunctionId getRepInFormat(1292,46963
class SampleProfileMap1305,47542
  mapped_type &Create(Create1310,47779
  iterator find(1317,47977
  const_iterator find(1322,48121
  size_t erase(1327,48277
  size_t erase(1332,48421
  iterator erase(1334,48492
using NameFunctionSamples 1337,48559
template <class LocationT, class SampleT> class SampleSorter 1346,48918
  using SamplesWithLoc 1348,48989
  using SamplesWithLocList 1349,49051
  SampleSorter(1351,49122
  const SamplesWithLocList &get(get1359,49368
  SamplesWithLocList V;1362,49432
class SampleContextTrimmer 1368,49690
  SampleContextTrimmer(1370,49727
  SampleProfileMap &ProfileMap;ProfileMap1385,50622
class ProfileConverter 1392,50835
  struct FrameNode 1398,51037
    FrameNode(1399,51058
    std::map<std::map1405,51330
    std::map<uint64_t, FrameNode> AllChildFrames;1405,51330
    FunctionId FuncName;1407,51419
    FunctionSamples *FuncSamples;FuncSamples1409,51486
    LineLocation CallSiteLoc;1411,51563
  static void flattenProfile(1417,51728
  static void flattenProfile(1424,51982
  static void flattenNestedProfile(1441,52581
  SampleProfileMap &ProfileMap;ProfileMap1498,55128
  FrameNode RootFrame;1499,55160
class ProfileSymbolList 1506,55430
  void add(1510,55557
  bool contains(1518,55711
  void merge(1520,55773
  unsigned size(1525,55877
  void setToCompress(1527,55920
  bool toCompress(1528,55971
  bool ToCompress 1538,56352
  DenseSet<StringRef> Syms;1539,56379
  BumpPtrAllocator Allocator;1540,56407
template <> struct DenseMapInfo<DenseMapInfo1547,56543
  static inline SampleContext getEmptyKey(1548,56592
  static inline SampleContext getTombstoneKey(1550,56665
  static unsigned getHashValue(1554,56765
  static bool isEqual(1558,56859
inline std::string getUniqueInternalLinkagePostfix(1568,57291

/usr/include/llvm/ProfileData/SampleProfReader.h,4386
#define LLVM_PROFILEDATA_SAMPLEPROFREADER_H226,10236
class SampleProfileReaderItaniumRemapper 265,11245
  SampleProfileReaderItaniumRemapper(267,11296
  bool hasApplied(289,12318
  void insert(292,12410
  bool exist(296,12574
  std::unique_ptr<MemoryBuffer> Buffer;306,12895
  std::unique_ptr<SymbolRemappingReader> Remappings;307,12935
  DenseMap<DenseMap311,13161
  DenseMap<SymbolRemappingReader::Key, StringRef> NameMap;311,13161
  SampleProfileReader &Reader;Reader313,13263
class SampleProfileReader 346,14630
  SampleProfileReader(348,14666
  void setDiscriminatorMaskedBitFrom(360,15201
  uint32_t getDiscriminatorMask(366,15451
  std::error_code read(374,15725
  virtual bool collectFuncsFromModule(393,16488
  FunctionSamples *getSamplesFor(getSamplesFor402,16796
  FunctionSamples *getSamplesFor(getSamplesFor411,17212
  SampleProfileMap &getProfiles(getProfiles427,17655
  void reportError(430,17747
  ProfileSummary &getSummary(getSummary452,18850
  MemoryBuffer *getBuffer(getBuffer454,18917
  SampleProfileFormat getFormat(457,19017
  bool profileIsProbeBased(460,19132
  bool profileIsCS(463,19256
  bool profileIsPreInlined(466,19371
  bool profileIsFS(469,19486
  virtual std::unique_ptr<ProfileSymbolList> getProfileSymbolList(471,19538
  virtual std::vector<FunctionId> *getNameTable(getNameTable477,19737
  virtual bool dumpSectionInfo(478,19807
  bool useMD5(481,19947
  virtual void setProfileUseMD5(485,20092
  virtual void setSkipFlatProf(489,20265
  virtual bool hasUniqSuffix(491,20383
  SampleProfileReaderItaniumRemapper *getRemapper(getRemapper493,20433
  void setModule(495,20513
  SampleProfileMap Profiles;503,20807
  LLVMContext &Ctx;Ctx506,20882
  std::unique_ptr<MemoryBuffer> Buffer;509,20949
  std::unique_ptr<ProfileSummary> Summary;512,21025
  takeSummary(516,21162
  std::unique_ptr<SampleProfileReaderItaniumRemapper> Remapper;523,21316
  bool ProfileIsProbeBased 526,21448
  bool ProfileIsCS 529,21554
  bool ProfileIsPreInlined 532,21649
  uint32_t CSProfileCount 535,21730
  bool ProfileIsFS 538,21821
  SampleProfileFormat Format 541,21885
  const Module *M M546,22122
  uint32_t MaskedBitFrom 550,22274
  bool ProfileIsMD5 554,22447
class SampleProfileReaderText 557,22480
  SampleProfileReaderText(559,22549
  std::error_code readHeader(563,22724
  void setProfileUseMD5(572,23086
  std::list<SampleContextFrameVector> CSNameTable;577,23259
class SampleProfileReaderBinary 580,23314
  SampleProfileReaderBinary(582,23385
  std::vector<FunctionId> *getNameTable(getNameTable594,23865
  ErrorOr<ErrorOr646,25631
  const uint8_t *Data Data649,25760
  const uint8_t *End End652,25833
  std::vector<FunctionId> NameTable;655,25893
  std::vector<SampleContextFrameVector> CSNameTable;659,26043
  std::vector<uint64_t> MD5SampleContextTable;664,26255
  const uint64_t *MD5SampleContextStart MD5SampleContextStart670,26582
class SampleProfileReaderRawBinary 677,26787
  SampleProfileReaderRawBinary(682,26935
class SampleProfileReaderExtBinaryBase 709,28500
  BumpPtrAllocator Allocator;716,28840
  std::vector<SecHdrTableEntry> SecHdrTable;719,28882
  std::unique_ptr<ProfileSymbolList> ProfSymList;743,30007
  DenseMap<DenseMap748,30244
  DenseMap<hash_code, uint64_t> FuncOffsetTable;748,30244
  std::vector<std::vector752,30390
  std::vector<std::pair<SampleContext, uint64_t>> FuncOffsetList;752,30390
  DenseSet<StringRef> FuncsToUse;755,30528
  bool SkipFlatProf 759,30641
  SampleProfileReaderExtBinaryBase(762,30679
  std::unique_ptr<ProfileSymbolList> getProfileSymbolList(779,31387
  void setSkipFlatProf(783,31499
class SampleProfileReaderExtBinary 786,31571
  std::error_code readCustomSection(789,31717
  SampleProfileReaderExtBinary(796,31928
using InlineCallStack 804,32291
enum HistType 808,32453
  HIST_TYPE_INTERVAL,809,32469
  HIST_TYPE_POW2,810,32491
  HIST_TYPE_SINGLE_VALUE,811,32509
  HIST_TYPE_CONST_DELTA,812,32535
  HIST_TYPE_INDIR_CALL,813,32560
  HIST_TYPE_AVERAGE,814,32584
  HIST_TYPE_IOR,815,32605
  HIST_TYPE_INDIR_CALL_TOPN816,32622
class SampleProfileReaderGCC 819,32654
  SampleProfileReaderGCC(821,32722
  GCOVBuffer GcovBuffer;847,33715
  std::vector<std::string> Names;850,33779
  static const uint32_t GCOVTagAFDOFileNames 853,33877
  static const uint32_t GCOVTagAFDOFunction 854,33936

/usr/include/llvm/ProfileData/SampleProfWriter.h,2693
#define LLVM_PROFILEDATA_SAMPLEPROFWRITER_H13,570
enum SectionLayout 29,946
  DefaultLayout,30,967
  CtxSplitLayout,34,1219
  NumOfLayout,35,1237
class FunctionPruningStrategy 42,1555
  SampleProfileMap &ProfileMap;ProfileMap44,1598
  size_t OutputSizeLimit;45,1630
  FunctionPruningStrategy(52,1898
class DefaultFunctionPruningStrategy 68,2602
  std::vector<NameFunctionSamples> SortedFunctions;69,2674
class SampleProfileWriter 89,3577
  template <typename FunctionPruningStrategy 107,4211
  raw_ostream &getOutputStream(getOutputStream114,4571
  virtual void setProfileSymbolList(127,5058
  virtual void setToCompressAllSections(128,5121
  virtual void setUseMD5(129,5166
  virtual void setPartialProfile(130,5196
  virtual void resetSecLayout(131,5234
  SampleProfileWriter(134,5297
  size_t LineCount;150,6112
  std::unique_ptr<raw_ostream> OutputStream;153,6183
  std::unique_ptr<ProfileSummary> Summary;156,6252
  SampleProfileFormat Format 162,6418
class SampleProfileWriterText 166,6510
  SampleProfileWriterText(171,6657
  std::error_code writeHeader(174,6764
  unsigned Indent;183,7008
class SampleProfileWriterBinary 191,7259
  SampleProfileWriterBinary(193,7330
  virtual MapVector<MapVector199,7506
  virtual MapVector<FunctionId, uint32_t> &getNameTable(getNameTable199,7506
  MapVector<MapVector210,8126
  MapVector<FunctionId, uint32_t> NameTable;210,8126
class SampleProfileWriterRawBinary 222,8500
  using SampleProfileWriterBinary::SampleProfileWriterBinary;223,8572
    ExtBinaryHdrLayoutTable 227,8702
class SampleProfileWriterExtBinaryBase 257,10560
  using SampleProfileWriterBinary::SampleProfileWriterBinary;258,10636
  void setUseMD5(267,10985
  void setPartialProfile(278,11483
  void setProfileSymbolList(282,11599
  void resetSecLayout(286,11691
  void addSectionFlag(304,12314
  void addSectionFlag(311,12517
  SectionLayout SecLayout 344,14003
  SmallVector<SmallVector349,14295
  SmallVector<SecHdrTableEntry, 8> SectionHdrLayout 349,14295
  uint64_t SecLBRProfileStart 355,14567
  std::unique_ptr<raw_ostream> LocalBufStream;371,15285
  uint64_t FileStart;373,15382
  uint64_t SecHdrTableOffset;376,15492
  std::vector<SecHdrTableEntry> SecHdrTable;381,15752
  MapVector<MapVector385,15941
  MapVector<SampleContext, uint64_t> FuncOffsetTable;385,15941
  bool UseMD5 387,16040
  MapVector<MapVector391,16219
  MapVector<SampleContext, uint32_t> CSNameTable;391,16219
  ProfileSymbolList *ProfSymList ProfSymList393,16270
class SampleProfileWriterExtBinary 396,16318
  SampleProfileWriterExtBinary(398,16405
  std::error_code writeCustomSection(407,16757
  void verifySecLayout(411,16863

/usr/include/llvm/Remarks/BitstreamRemarkContainer.h,1237
#define LLVM_REMARKS_BITSTREAMREMARKCONTAINER_H15,602
enum class BitstreamRemarkContainerType 35,1324
  SeparateRemarksMeta,41,1522
  SeparateRemarksFile,46,1680
  Standalone,52,1859
  First 53,1873
  Last 54,1904
enum BlockIDs 59,2015
  META_BLOCK_ID 64,2251
  REMARK_BLOCK_ID67,2422
constexpr StringRef MetaBlockName 70,2444
constexpr StringRef RemarkBlockName 71,2502
enum RecordIDs 75,2654
  RECORD_META_CONTAINER_INFO 77,2696
  RECORD_META_REMARK_VERSION,78,2730
  RECORD_META_STRTAB,79,2760
  RECORD_META_EXTERNAL_FILE,80,2782
  RECORD_REMARK_HEADER,82,2838
  RECORD_REMARK_DEBUG_LOC,83,2862
  RECORD_REMARK_HOTNESS,84,2889
  RECORD_REMARK_ARG_WITH_DEBUGLOC,85,2914
  RECORD_REMARK_ARG_WITHOUT_DEBUGLOC,86,2949
  RECORD_FIRST 88,3001
  RECORD_LAST 89,3046
constexpr StringRef MetaContainerInfoName 92,3101
constexpr StringRef MetaRemarkVersionName 93,3178
constexpr StringRef MetaStrTabName 94,3255
constexpr StringRef MetaExternalFileName 95,3323
constexpr StringRef RemarkHeaderName 96,3398
constexpr StringRef RemarkDebugLocName 97,3469
constexpr StringRef RemarkHotnessName 98,3550
constexpr StringRef RemarkArgWithDebugLocName 99,3623
constexpr StringRef RemarkArgWithoutDebugLocName 101,3722

/usr/include/llvm/Remarks/BitstreamRemarkParser.h,1494
#define LLVM_REMARKS_BITSTREAMREMARKPARSER_H15,599
struct BitstreamMetaParserHelper 29,946
  BitstreamCursor &Stream;Stream31,1009
  BitstreamBlockInfo &BlockInfo;BlockInfo33,1087
  std::optional<uint64_t> ContainerVersion;36,1213
  std::optional<uint8_t> ContainerType;37,1257
  std::optional<StringRef> StrTabBuf;38,1297
  std::optional<StringRef> ExternalFilePath;39,1335
  std::optional<uint64_t> RemarkVersion;40,1380
struct BitstreamRemarkParserHelper 54,1947
  BitstreamCursor &Stream;Stream56,2012
  std::optional<uint8_t> Type;58,2118
  std::optional<uint64_t> RemarkNameIdx;59,2149
  std::optional<uint64_t> PassNameIdx;60,2190
  std::optional<uint64_t> FunctionNameIdx;61,2229
  std::optional<uint64_t> SourceFileNameIdx;62,2272
  std::optional<uint32_t> SourceLine;63,2317
  std::optional<uint32_t> SourceColumn;64,2355
  std::optional<uint64_t> Hotness;65,2395
  struct Argument 66,2430
    std::optional<uint64_t> KeyIdx;67,2450
    std::optional<uint64_t> ValueIdx;68,2486
    std::optional<uint64_t> SourceFileNameIdx;69,2524
    std::optional<uint32_t> SourceLine;70,2571
    std::optional<uint32_t> SourceColumn;71,2611
  std::optional<ArrayRef<Argument>> Args;73,2658
  SmallVector<SmallVector75,2747
  SmallVector<Argument, 8> TmpArgs;75,2747
struct BitstreamParserHelper 89,3287
  BitstreamCursor Stream;91,3346
  BitstreamBlockInfo BlockInfo;93,3400
  Expected<Expected97,3539
  bool atEndOfStream(108,4079
  void skipToEnd(110,4195

/usr/include/llvm/Remarks/BitstreamRemarkSerializer.h,1441
#define LLVM_REMARKS_BITSTREAMREMARKSERIALIZER_H15,600
struct BitstreamRemarkSerializerHelper 51,1709
  SmallVector<char,char54,1840
  SmallVector<char, 1024> Encoded;54,1840
  SmallVector<uint64_t,uint64_t56,1948
  SmallVector<uint64_t, 64> R;56,1948
  BitstreamWriter Bitstream;58,2007
  BitstreamRemarkContainerType ContainerType;60,2088
  BitstreamRemarkSerializerHelper(76,2811
  void setupBlockInfo(90,3500
  void setupMetaBlockInfo(93,3578
  void setupMetaRemarkVersion(95,3655
  void emitMetaRemarkVersion(96,3688
  void setupMetaStrTab(98,3782
  void emitMetaStrTab(99,3808
  void setupMetaExternalFile(101,3905
  void emitMetaExternalFile(102,3937
  void setupRemarkBlockInfo(105,4031
  void emitMetaBlock(108,4104
  void emitRemarkBlock(114,4421
  void flushToStream(116,4525
  StringRef getBuffer(120,4761
struct BitstreamRemarkSerializer 124,4856
  bool DidSetUp 133,5291
  BitstreamRemarkSerializerHelper Helper;135,5352
  BitstreamRemarkSerializer(138,5463
  BitstreamRemarkSerializer(140,5591
  void emit(146,5922
  static bool classof(154,6308
struct BitstreamMetaSerializer 160,6470
  std::optional<BitstreamRemarkSerializerHelper> TmpHelper;165,6815
  BitstreamRemarkSerializerHelper *Helper Helper168,6970
  std::optional<const StringTable *> StrTab;170,7024
  std::optional<StringRef> ExternalFilename;171,7069
  BitstreamMetaSerializer(174,7177
  BitstreamMetaSerializer(185,7673

/usr/include/llvm/Remarks/HotnessThresholdParser.h,147
#define LLVM_REMARKS_HOTNESSTHRESHOLDPARSER_H16,670
class HotnessThresholdParser 45,1575
  HotnessThresholdParser(47,1659
  bool parse(49,1744

/usr/include/llvm/Remarks/RemarkFormat.h,266
#define LLVM_REMARKS_REMARKFORMAT_H14,560
enum class Format 25,802
enum class Format { Unknown,25,802
enum class Format { Unknown, YAML,25,802
enum class Format { Unknown, YAML, YAMLStrTab,25,802
enum class Format { Unknown, YAML, YAMLStrTab, Bitstream 25,802

/usr/include/llvm/Remarks/RemarkLinker.h,445
#define LLVM_REMARKS_REMARKLINKER_H14,568
struct RemarkLinker 32,886
  struct RemarkPtrCompare 35,953
    bool operator(36,981
  StringTable StrTab;46,1351
  std::set<std::set52,1595
  std::set<std::unique_ptr<Remark>, RemarkPtrCompare> Remarks;52,1595
  std::optional<std::string> PrependPath;55,1738
  bool shouldKeepRemark(66,2150
  void setKeepAllRemarks(75,2408
  bool empty(97,3396
  iterator_range<iterator> remarks(104,3651

/usr/include/llvm/Remarks/RemarkParser.h,416
#define LLVM_REMARKS_REMARKPARSER_H14,557
class EndOfFileError 27,790
  static char ID;29,856
  void log(33,906
  std::error_code convertToErrorCode(34,983
struct RemarkParser 40,1150
  Format ParserFormat;42,1204
  std::string ExternalFilePrependPath;44,1287
  RemarkParser(46,1327
struct ParsedStringTable 60,1878
  StringRef Buffer;62,1956
  std::vector<size_t> Offsets;65,2080
  size_t size(75,2439

/usr/include/llvm/Remarks/RemarkSerializer.h,411
#define LLVM_REMARKS_REMARKSERIALIZER_H14,578
enum class SerializerMode 28,798
  Separate,29,826
  Standalone 33,1106
struct RemarkSerializer 42,1424
  Format SerializerFormat;44,1486
  raw_ostream &OS;OS46,1584
  SerializerMode Mode;48,1633
  std::optional<StringTable> StrTab;51,1805
  RemarkSerializer(53,1843
struct MetaSerializer 68,2440
  raw_ostream &OS;OS70,2524
  MetaSerializer(72,2544

/usr/include/llvm/Remarks/RemarkStreamer.h,46
#define LLVM_REMARKS_REMARKSTREAMER_H31,1352

/usr/include/llvm/Remarks/RemarkStringTable.h,225
#define LLVM_REMARKS_REMARKSTRINGTABLE_H17,670
struct StringTable 36,1068
  StringMap<unsigned,unsigned39,1206
  StringMap<unsigned, BumpPtrAllocator> StrTab;39,1206
  StringTable(53,1663
  std::pair<std::pair56,1783

/usr/include/llvm/Remarks/YAMLRemarkSerializer.h,571
#define LLVM_REMARKS_YAMLREMARKSERIALIZER_H14,566
struct YAMLRemarkSerializer 34,1164
  yaml::Output YAMLOutput;36,1245
  static bool classof(46,1601
struct YAMLMetaSerializer 56,1903
  std::optional<StringRef> ExternalFilename;57,1955
  YAMLMetaSerializer(59,2001
struct YAMLStrTabRemarkSerializer 68,2383
  bool DidEmitMeta 71,2585
  YAMLStrTabRemarkSerializer(73,2614
  YAMLStrTabRemarkSerializer(78,2834
  static bool classof(89,3275
struct YAMLStrTabMetaSerializer 94,3388
  const StringTable &StrTab;StrTab96,3498
  YAMLStrTabMetaSerializer(98,3528

/usr/include/llvm/Remarks/Remark.h,1373
#define LLVM_REMARKS_REMARK_H14,545
struct RemarkLocation 31,990
  StringRef SourceFilePath;33,1083
  void print(38,1214
struct Argument 46,1512
  StringRef Key;47,1530
  StringRef Val;49,1624
  std::optional<RemarkLocation> Loc;51,1701
enum class Type 65,2143
  Unknown,66,2161
  Passed,67,2172
  Missed,68,2182
  Analysis,69,2192
  AnalysisFPCommute,70,2204
  AnalysisAliasing,71,2225
  Failure,72,2245
  First 73,2256
  Last 74,2275
inline StringRef typeToStr(77,2296
struct Remark 97,2744
  Type RemarkType 99,2790
  StringRef PassName;102,2892
  StringRef RemarkName;107,3084
  StringRef FunctionName;110,3186
  std::optional<RemarkLocation> Loc;113,3266
  std::optional<uint64_t> Hotness;117,3451
  SmallVector<SmallVector120,3542
  SmallVector<Argument, 5> Args;120,3542
  Remark clone(130,3827
bool operator<(148,4404
inline bool operator==(operator==161,4792
inline bool operator!=(operator!=167,5019
inline bool operator<(171,5125
inline bool operator==(operator==176,5367
inline bool operator!=(operator!=180,5510
inline bool operator<(184,5604
inline bool operator==(operator==189,5780
inline bool operator!=(operator!=196,6100
inline bool operator<(200,6190
inline raw_ostream &operator<<(operator<<207,6550
inline raw_ostream &operator<<(operator<<212,6662
inline raw_ostream &operator<<(operator<<217,6766

/usr/include/llvm/Support/FileSystem/UniqueID.h,452
#define LLVM_SUPPORT_FILESYSTEM_UNIQUEID_H15,618
class UniqueID 26,815
  uint64_t Device;27,832
  uint64_t File;28,851
  UniqueID(32,901
  uint64_t getDevice(47,1424
  uint64_t getFile(48,1472
template <> struct DenseMapInfo<DenseMapInfo55,1605
  static inline llvm::sys::fs::UniqueID getEmptyKey(56,1664
  static inline llvm::sys::fs::UniqueID getTombstoneKey(61,1851
  static hash_code getHashValue(67,2066
  static bool isEqual(71,2212

/usr/include/llvm/Support/Solaris/sys/regset.h,340
#undef CS18,629
#undef DS19,639
#undef ES20,649
#undef FS21,659
#undef GS22,669
#undef SS23,679
#undef EAX24,689
#undef ECX25,700
#undef EDX26,711
#undef EBX27,722
#undef ESP28,733
#undef EBP29,744
#undef ESI30,755
#undef EDI31,766
#undef EIP32,777
#undef UESP33,788
#undef EFL34,800
#undef ERR35,811
#undef TRAPNO36,822

/usr/include/llvm/Support/Windows/WindowsSupport.h,1912
#define LLVM_SUPPORT_WINDOWSSUPPORT_H22,1075
#undef _WIN32_WINNT25,1172
#undef _WIN32_IE26,1192
#define _WIN32_WINNT 29,1245
#define _WIN32_IE 30,1273
#define WIN32_LEAN_AND_MEAN31,1354
#define NOMINMAX33,1399
class ScopedHandle 81,3045
  typedef typename HandleTraits::handle_type handle_type;82,3066
  handle_type Handle;83,3124
  ScopedHandle(88,3261
  explicit ScopedHandle(91,3323
  ~ScopedHandle(94,3382
  handle_type take(99,3481
  ScopedHandle &operator=(operator=105,3592
  explicit operator bool(operator bool113,3778
  operator handle_type(operator handle_type117,3875
struct CommonHandleTraits 122,3935
  typedef HANDLE handle_type;123,3963
  static handle_type GetInvalid(125,3994
  static void Close(129,4068
  static bool IsValid(133,4132
struct JobHandleTraits 138,4209
  static handle_type GetInvalid(139,4255
struct CryptContextTraits 144,4316
  typedef HCRYPTPROV handle_type;145,4365
  static handle_type GetInvalid(147,4400
  static void Close(151,4455
  static bool IsValid(155,4530
struct RegTraits 160,4607
  typedef HKEY handle_type;161,4647
  static handle_type GetInvalid(163,4676
  static void Close(167,4734
  static bool IsValid(171,4798
struct FindHandleTraits 176,4875
  static void Close(177,4922
struct FileHandleTraits 182,4987
typedef ScopedHandle<CommonHandleTraits> ScopedCommonHandle;184,5037
typedef ScopedHandle<FileHandleTraits>   ScopedFileHandle;185,5098
typedef ScopedHandle<CryptContextTraits> ScopedCryptContext;186,5157
typedef ScopedHandle<RegTraits>          ScopedRegHandle;187,5218
typedef ScopedHandle<FindHandleTraits>   ScopedFindHandle;188,5276
typedef ScopedHandle<JobHandleTraits>    ScopedJobHandle;189,5335
c_str(196,5499
namespace sys 202,5594
inline std::chrono::nanoseconds toDuration(204,5611
inline TimePoint<> toTimePoint(213,5930
inline FILETIME toFILETIME(225,6335
namespace windows 236,6650

/usr/include/llvm/Support/ARMAttributeParser.h,290
#define LLVM_SUPPORT_ARMATTRIBUTEPARSER_H10,412
class ARMAttributeParser 21,624
  struct DisplayHandler 22,679
    ARMBuildAttrs::AttrType attribute;23,705
  static const DisplayHandler displayRoutines[displayRoutines26,816
  ARMAttributeParser(76,3221
  ARMAttributeParser(78,3342

/usr/include/llvm/Support/ARMBuildAttributes.h,3884
#define LLVM_SUPPORT_ARMBUILDATTRIBUTES_H19,786
enum SpecialAttr 28,956
  SEL_CPU31,1115
enum AttrType 34,1129
  File 36,1200
  CPU_raw_name 37,1212
  CPU_name 38,1232
  CPU_arch 39,1248
  CPU_arch_profile 40,1264
  ARM_ISA_use 41,1288
  THUMB_ISA_use 42,1307
  FP_arch 43,1328
  WMMX_arch 44,1344
  Advanced_SIMD_arch 45,1362
  PCS_config 46,1389
  ABI_PCS_R9_use 47,1408
  ABI_PCS_RW_data 48,1431
  ABI_PCS_RO_data 49,1455
  ABI_PCS_GOT_use 50,1479
  ABI_PCS_wchar_t 51,1503
  ABI_FP_rounding 52,1527
  ABI_FP_denormal 53,1551
  ABI_FP_exceptions 54,1575
  ABI_FP_user_exceptions 55,1601
  ABI_FP_number_model 56,1632
  ABI_align_needed 57,1660
  ABI_align_preserved 58,1685
  ABI_enum_size 59,1713
  ABI_HardFP_use 60,1735
  ABI_VFP_args 61,1758
  ABI_WMMX_args 62,1779
  ABI_optimization_goals 63,1801
  ABI_FP_optimization_goals 64,1832
  compatibility 65,1866
  CPU_unaligned_access 66,1888
  FP_HP_extension 67,1917
  ABI_FP_16bit_format 68,1941
  MPextension_use 69,1969
  DIV_use 70,2024
  DSP_extension 71,2040
  MVE_arch 72,2062
  PAC_extension 73,2079
  BTI_extension 74,2101
  also_compatible_with 75,2123
  conformance 76,2152
  Virtualization_use 77,2172
  BTI_use 78,2199
  PACRET_use 79,2215
  Section 82,2253
  Symbol 83,2308
  ABI_align8_needed 84,2363
  ABI_align8_preserved 85,2435
  nodefaults 86,2510
  T2EE_use 87,2565
  MPextension_use_old 88,2620
enum CPUArch 92,2739
  Pre_v4 93,2754
  v4 94,2768
  v4T 95,2802
  v5T 96,2839
  v5TE 97,2876
  v5TEJ 98,2914
  v6 99,2953
  v6KZ 100,2992
  v6T2 101,3032
  v6K 102,3072
  v7 103,3112
  v6_M 104,3161
  v6S_M 105,3199
  v7E_M 106,3254
  v8_A 107,3302
  v8_R 108,3338
  v8_M_Base 109,3377
  v8_M_Main 110,3418
  v8_1_M_Main 111,3459
  v9_A 112,3502
enum CPUArchProfile 115,3542
  Not_Applicable 116,3595
  ApplicationProfile 117,3664
  RealTimeProfile 118,3728
  MicroControllerProfile 119,3792
  SystemProfile 120,3856
  Not_Allowed 125,3991
  Allowed 126,4010
  AllowThumb32 131,4100
  AllowThumbDerived 132,4166
  AllowFPv2 135,4297
  AllowFPv3A 136,4373
  AllowFPv3B 137,4449
  AllowFPv4A 138,4519
  AllowFPv4B 139,4591
  AllowFPARMv8A 140,4665
  AllowFPARMv8B 141,4731
  AllowWMMXv1 145,4883
  AllowWMMXv2 146,4952
  AllowNeon 149,5066
  AllowNeon2 150,5112
  AllowNeonARMv8 151,5194
  AllowNeonARMv8_1a 152,5247
  AllowMVEInteger 155,5346
  AllowMVEIntegerAndFloat 156,5403
  R9IsGPR 159,5529
  R9IsSB 160,5605
  R9IsTLSPointer 161,5670
  R9Reserved 162,5737
  AddressRWPCRel 165,5858
  AddressRWSBRel 166,5918
  AddressRWNone 167,5978
  AddressROPCRel 170,6072
  AddressRONone 171,6132
  AddressDirect 174,6226
  AddressGOT 175,6281
  WCharProhibited 178,6387
  WCharWidth2Bytes 179,6434
  WCharWidth4Bytes 180,6482
  Align8Byte 183,6573
  Align4Byte 184,6591
  AlignReserved 185,6609
  AlignNotPreserved 188,6673
  AlignPreserve8Byte 189,6698
  AlignPreserveAll 190,6724
  PositiveZero 193,6790
  IEEEDenormals 194,6810
  PreserveFPSign 195,6831
  AllowIEEENormal 198,6941
  AllowRTABI 199,6964
  AllowIEEE754 200,7039
  EnumProhibited 203,7157
  EnumSmallest 205,7271
  Enum32Bit 207,7379
  Enum32BitABI 208,7430
  HardFPImplied 213,7687
  HardFPSinglePrecision 214,7760
  BaseAAPCS 217,7854
  HardFPAAPCS 218,7871
  ToolChainFPPCS 219,7890
  CompatibleFPAAPCS 220,7912
  AllowHPFP 223,7979
  FP16FormatIEEE 226,8072
  FP16VFP3 227,8094
  AllowMP 230,8152
  AllowDIVIfExists 235,8385
  DisallowDIV 237,8502
  AllowDIVExt 238,8568
  AllowTZ 243,8823
  AllowVirtualization 244,8838
  AllowTZVirtualization 245,8865
  DisallowPAC 248,8934
  AllowPACInNOPSpace 249,8953
  AllowPAC 250,8979
  DisallowBTI 253,9035
  AllowBTIInNOPSpace 254,9054
  AllowBTI 255,9080
  BTINotUsed 258,9130
  BTIUsed 259,9148
  PACRETNotUsed 262,9200
  PACRETUsed 263,9221

/usr/include/llvm/Support/ARMEHABI.h,1240
#define LLVM_SUPPORT_ARMEHABI_H22,869
  enum EHTEntryKind 28,1000
    EHT_GENERIC 29,1022
    EHT_COMPACT 30,1046
    EXIDX_CANTUNWIND 35,1136
  enum UnwindOpcodes 39,1211
    UNWIND_OPCODE_INC_VSP 42,1301
    UNWIND_OPCODE_DEC_VSP 46,1403
    UNWIND_OPCODE_REFUSE 50,1504
    UNWIND_OPCODE_POP_REG_MASK_R4 55,1637
    UNWIND_OPCODE_SET_VSP 60,1771
    UNWIND_OPCODE_POP_REG_RANGE_R4 64,1861
    UNWIND_OPCODE_POP_REG_RANGE_R4_R14 68,1965
    UNWIND_OPCODE_FINISH 72,2060
    UNWIND_OPCODE_POP_RA_AUTH_CODE 76,2172
    UNWIND_OPCODE_POP_REG_MASK 81,2302
    UNWIND_OPCODE_INC_VSP_ULEB128 85,2426
    UNWIND_OPCODE_POP_VFP_REG_RANGE_FSTMFDX 89,2533
    UNWIND_OPCODE_POP_VFP_REG_RANGE_FSTMFDX_D8 93,2643
    UNWIND_OPCODE_POP_WIRELESS_MMX_REG_RANGE_WR10 97,2757
    UNWIND_OPCODE_POP_WIRELESS_MMX_REG_RANGE 101,2881
    UNWIND_OPCODE_POP_WIRELESS_MMX_REG_MASK 106,3026
    UNWIND_OPCODE_POP_VFP_REG_RANGE_FSTMFDD_D16 110,3153
    UNWIND_OPCODE_POP_VFP_REG_RANGE_FSTMFDD 114,3276
    UNWIND_OPCODE_POP_VFP_REG_RANGE_FSTMFDD_D8 118,3386
  enum PersonalityRoutineIndex 122,3490
    AEABI_UNWIND_CPP_PR0 127,3797
    AEABI_UNWIND_CPP_PR1 128,3827
    AEABI_UNWIND_CPP_PR2 129,3857
    NUM_PERSONALITY_INDEX131,3888

/usr/include/llvm/Support/ARMWinEH.h,2394
#define LLVM_SUPPORT_ARMWINEH_H10,402
enum class RuntimeFunctionFlag 18,551
  RFF_Unpacked,19,584
  RFF_Packed,20,625
  RFF_PackedFragment,21,664
  RFF_Reserved,22,727
enum class ReturnType 25,766
  RT_POP,26,790
  RT_B,27,857
  RT_BW,28,897
  RT_NoEpilogue,29,937
class RuntimeFunction 103,5135
  const support::ulittle32_t BeginAddress;105,5167
  const support::ulittle32_t UnwindData;106,5210
  RuntimeFunction(108,5252
  RuntimeFunction(111,5357
  RuntimeFunctionFlag Flag(115,5534
  uint32_t ExceptionInformationRVA(119,5626
  uint32_t PackedUnwindData(125,5823
  uint32_t FunctionLength(131,6075
  ReturnType Ret(137,6345
  bool H(144,6682
  uint8_t Reg(150,6929
  bool R(156,7181
  bool L(162,7428
  bool C(168,7675
  uint16_t StackAdjust(178,8163
inline bool PrologueFolding(188,8565
inline bool EpilogueFolding(193,8817
inline uint16_t StackAdjustment(199,9154
class RuntimeFunctionARM64 224,10311
  const support::ulittle32_t BeginAddress;226,10348
  const support::ulittle32_t UnwindData;227,10391
  RuntimeFunctionARM64(229,10433
  RuntimeFunctionARM64(232,10545
  RuntimeFunctionFlag Flag(236,10734
  uint32_t ExceptionInformationRVA(240,10826
  uint32_t PackedUnwindData(246,11023
  uint32_t FunctionLength(252,11275
  uint8_t RegF(258,11545
  uint8_t RegI(264,11798
  bool H(270,12051
  uint8_t CR(276,12298
  uint16_t FrameSize(282,12547
struct EpilogueScope 396,18839
  const support::ulittle32_t ES;397,18862
  EpilogueScope(399,18896
  uint32_t EpilogueStartOffset(401,18995
  uint8_t ResARM(406,19123
  uint8_t ResAArch64(410,19193
  uint8_t Condition(415,19309
  uint8_t EpilogueStartIndexARM(420,19434
  uint16_t EpilogueStartIndexAArch64(424,19519
struct ExceptionDataRecord 432,19699
  const support::ulittle32_t *Data;Data433,19728
  bool isAArch64;434,19764
  ExceptionDataRecord(436,19783
  uint32_t FunctionLength(439,19898
  uint32_t FunctionLengthInBytesARM(443,19974
  uint32_t FunctionLengthInBytesAArch64(447,20059
  uint8_t Vers(451,20148
  bool X(455,20219
  bool E(459,20286
  bool F(463,20353
  uint16_t EpilogueCount(468,20493
  uint8_t CodeWords(477,20716
  ArrayRef<support::ulittle32_t> EpilogueScopes(486,20942
  ArrayRef<uint8_t> UnwindByteCode(492,21178
  uint32_t ExceptionHandlerRVA(500,21478
  uint32_t ExceptionHandlerParameter(505,21683
inline size_t HeaderWords(512,21917

/usr/include/llvm/Support/AlignOf.h,171
#define LLVM_SUPPORT_ALIGNOF_H14,542
template <typename T, typename... Ts> struct AlignedCharArrayUnion 27,942
  using AlignedUnion = std::aligned_union_t<1, T,28,1011

/usr/include/llvm/Support/Alignment.h,2321
#define LLVM_SUPPORT_ALIGNMENT_H_22,968
#define ALIGN_CHECK_ISPOSITIVE(33,1148
struct Align 39,1430
  friend unsigned Log2(45,1623
  friend bool operator<(Align Lhs, Align Rhs)50,1846
  friend bool operator>(Align Lhs, Align Rhs)51,1893
  friend unsigned encode(52,1940
  friend struct MaybeAlign decodeMaybeAlign(53,1987
  struct LogValue 62,2602
    uint8_t Log;63,2622
  explicit Align(76,3039
  uint64_t value(85,3398
  Align previous(88,3499
  template <size_t kValue> constexpr static Align Constant(96,3699
  template <typename T> constexpr static Align Of(102,3937
  constexpr Align(107,4091
inline Align assumeAligned(111,4212
struct MaybeAlign 117,4403
  using UP 119,4462
  constexpr MaybeAlign(131,4904
  constexpr MaybeAlign(132,4962
  explicit MaybeAlign(133,5013
  Align valueOrOne(141,5275
inline bool isAligned(145,5396
inline bool isAddrAligned(150,5550
inline uint64_t alignTo(155,5728
inline uint64_t alignTo(180,6723
inline uintptr_t alignAddr(187,6938
inline uint64_t offsetToAlignment(197,7354
inline uint64_t offsetToAlignedAddr(203,7566
inline unsigned Log2(208,7755
inline Align commonAlignment(212,7900
inline unsigned encode(217,8080
inline MaybeAlign decodeMaybeAlign(220,8205
inline unsigned encode(230,8457
inline bool operator==(operator==233,8589
inline bool operator!=(operator!=237,8701
inline bool operator<=(operator<=241,8813
inline bool operator>=(operator>=245,8925
inline bool operator<(249,9037
inline bool operator>(253,9147
inline bool operator==(operator==259,9299
inline bool operator!=(operator!=262,9391
inline bool operator<=(operator<=265,9483
inline bool operator>=(operator>=268,9575
inline bool operator<(271,9667
inline bool operator>(274,9757
inline bool operator==(operator==295,10616
inline bool operator!=(operator!=296,10697
inline bool operator==(operator==297,10773
inline bool operator!=(operator!=298,10846
inline bool operator==(operator==300,10969
inline bool operator!=(operator!=303,11087
inline bool operator==(operator==305,11217
inline bool operator!=(operator!=306,11295
inline bool operator==(operator==307,11372
inline bool operator!=(operator!=308,11450
inline std::string DebugStr(312,11578
inline std::string DebugStr(316,11697
#undef ALIGN_CHECK_ISPOSITIVE323,11836

/usr/include/llvm/Support/Allocator.h,976
#define LLVM_SUPPORT_ALLOCATOR_H18,753
template <typename AllocatorT 61,2283
  BumpPtrAllocatorImpl &operator=(operator=102,3926
typedef BumpPtrAllocatorImpl<> BumpPtrAllocator;375,14386
template <typename T> class SpecificBumpPtrAllocator 382,14625
  BumpPtrAllocator Allocator;383,14680
  SpecificBumpPtrAllocator(386,14719
  SpecificBumpPtrAllocator(391,14917
  ~SpecificBumpPtrAllocator(393,15023
  SpecificBumpPtrAllocator &operator=(operator=395,15072
  void DestroyAll(403,15403
  T *Allocate(Allocate432,16478
template <typename AllocatorT,437,16576
template <typename AllocatorT, size_t SlabSize,437,16576
template <typename AllocatorT, size_t SlabSize, size_t SizeThreshold,437,16576
operator new(operator new440,16683
template <typename AllocatorT,447,17005
template <typename AllocatorT, size_t SlabSize,447,17005
template <typename AllocatorT, size_t SlabSize, size_t SizeThreshold,447,17005
void operator delete(operator delete449,17105

/usr/include/llvm/Support/AllocatorBase.h,1106
#define LLVM_SUPPORT_ALLOCATORBASE_H20,955
#define LLVM_ALLOCATORHOLDER_EMPTYBASE 23,1009
#define LLVM_ALLOCATORHOLDER_EMPTYBASE25,1078
template <typename DerivedT> class AllocatorBase 40,1577
  void *Allocate(Allocate44,1751
  void Deallocate(58,2370
  template <typename T> T *Allocate(Allocate75,3082
  Deallocate(82,3378
class MallocAllocator 87,3502
  void Reset(89,3574
  LLVM_ATTRIBUTE_RETURNS_NONNULL void *Allocate(Allocate91,3593
  using AllocatorBase<MallocAllocator>::Allocate;Allocate96,3759
  void Deallocate(98,3810
  using AllocatorBase<MallocAllocator>::Deallocate;Deallocate103,3983
  void PrintStats(105,4036
namespace detail 108,4069
template <typename Alloc> class AllocatorHolder 110,4089
  AllocatorHolder(113,4186
  AllocatorHolder(114,4234
  Alloc &getAllocator(getAllocator115,4300
  const Alloc &getAllocator(getAllocator116,4342
template <typename Alloc> class AllocatorHolder<AllocatorHolder119,4400
  Alloc &A;A120,4459
  AllocatorHolder(123,4480
  Alloc &getAllocator(getAllocator124,4518
  const Alloc &getAllocator(getAllocator125,4556

/usr/include/llvm/Support/ArrayRecycler.h,273
#define LLVM_SUPPORT_ARRAYRECYCLER_H15,634
  class Capacity 71,2592
    uint8_t Index;72,2611
    explicit Capacity(73,2630
    Capacity(76,2692
    static Capacity get(79,2794
    size_t getSize(84,2952
    unsigned getBucket(87,3061
    Capacity getNext(92,3301

/usr/include/llvm/Support/Atomic.h,135
#define LLVM_SUPPORT_ATOMIC_H18,647
#undef MemoryFence24,779
    typedef long cas_flag;32,882
    typedef uint32_t cas_flag;34,915

/usr/include/llvm/Support/AtomicOrdering.h,1078
#define LLVM_SUPPORT_ATOMICORDERING_H18,677
enum class AtomicOrderingCABI 28,941
  relaxed 29,973
  consume 30,988
  acquire 31,1003
  release 32,1018
  acq_rel 33,1033
  seq_cst 34,1048
bool operator<(AtomicOrderingCABI, AtomicOrderingCABI)37,1067
bool operator>(AtomicOrderingCABI, AtomicOrderingCABI)38,1132
template <typename Int> inline bool isValidAtomicOrderingCABI(44,1443
enum class AtomicOrdering 56,1943
  NotAtomic 57,1982
  Unordered 58,1999
  Monotonic 59,2016
  Acquire 61,2106
  Release 62,2121
  AcquireRelease 63,2136
  SequentiallyConsistent 64,2158
  LAST 65,2188
template <typename Int> inline bool isValidAtomicOrdering(75,2564
inline const char *toIRString(toIRString82,2843
inline bool isStrongerThan(91,3269
inline bool isAtLeastOrStrongerThan(106,4169
inline bool isStrongerThanUnordered(121,5078
inline bool isStrongerThanMonotonic(125,5194
inline bool isAcquireOrStronger(129,5310
inline bool isReleaseOrStronger(133,5429
inline AtomicOrdering getMergedAtomicOrdering(139,5681
inline AtomicOrderingCABI toCABI(147,6063

/usr/include/llvm/Support/BCD.h,149
#define LLVM_SUPPORT_BCD_H14,563
inline int64_t decodePackedBCD(26,921
template <typename ResultT,45,1607
inline ResultT decodePackedBCD(46,1650

/usr/include/llvm/Support/BLAKE3.h,346
#define LLVM_SUPPORT_BLAKE3_H14,539
class BLAKE3 38,1431
  BLAKE3(40,1454
  void init(43,1516
  void update(46,1593
  void update(51,1728
  llvm_blake3_hasher Hasher;93,3254
template <size_t NumBytes> class TruncatedBLAKE3 101,3538
  void final(106,3784
  BLAKE3Result<NumBytes> final(111,4054
  BLAKE3Result<NumBytes> result(119,4420

/usr/include/llvm/Support/BalancedPartitioning.h,868
#define LLVM_SUPPORT_BALANCED_PARTITIONING_H40,2032
class BPFunctionNode 56,2416
  BPFunctionNode(64,2613
  IDT Id;68,2748
  void dump(70,2759
struct BalancedPartitioningConfig 86,3312
  unsigned SplitDepth 88,3391
  unsigned IterationsPerSplit 90,3471
  float SkipProbability 93,3651
  unsigned TaskSplitDepth 97,3863
class BalancedPartitioning 100,3898
  using SignaturesT 109,4166
  using FunctionNodeRange 110,4222
  struct BPThreadPool 117,4567
    ThreadPool &TheThreadPool;TheThreadPool118,4591
    std::mutex mtx;119,4622
    std::condition_variable cv;120,4642
    BPThreadPool(131,5171
  const BalancedPartitioningConfig &Config;Config170,6981
  static constexpr unsigned LOG_CACHE_SIZE 173,7107
  float Log2Cache[Log2Cache174,7159
  struct UtilitySignature 178,7343
    float CachedGainLR;185,7646
    float CachedGainRL;188,7771

/usr/include/llvm/Support/Base64.h,37
#define LLVM_SUPPORT_BASE64_H14,541

/usr/include/llvm/Support/BinaryStreamArray.h,3066
#define LLVM_SUPPORT_BINARYSTREAMARRAY_H23,1019
template <typename T> struct VarStreamArrayExtractor 47,2069
  Error operator(50,2248
class VarStreamArray 92,4421
  friend class VarStreamArrayIterator<ValueType,ValueType93,4444
  typedef VarStreamArrayIterator<ValueType,ValueType96,4514
  typedef VarStreamArrayIterator<ValueType, Extractor> Iterator;96,4514
  explicit VarStreamArray(100,4611
  explicit VarStreamArray(102,4668
  VarStreamArray(105,4776
  Iterator begin(108,4901
  bool valid(112,5003
  bool isOffsetValid(114,5052
  uint32_t skew(116,5129
  Iterator end(117,5170
  bool empty(119,5218
  VarStreamArray<ValueType,ValueType121,5276
  VarStreamArray<ValueType, Extractor> substream(121,5276
  Iterator at(134,5913
  const Extractor &getExtractor(getExtractor138,6005
  Extractor &getExtractor(getExtractor139,6059
  BinaryStreamRef getUnderlyingStream(141,6102
  void setUnderlyingStream(142,6167
  void drop_front(147,6294
  BinaryStreamRef Stream;150,6355
  Extractor E;151,6381
  uint32_t Skew 152,6396
template <typename ValueType,155,6421
class VarStreamArrayIterator156,6471
  typedef VarStreamArrayIterator<ValueType,ValueType159,6660
  typedef VarStreamArrayIterator<ValueType, Extractor> IterType;159,6660
  typedef VarStreamArray<ValueType,ValueType160,6725
  typedef VarStreamArray<ValueType, Extractor> ArrayType;160,6725
  VarStreamArrayIterator(163,6792
  explicit VarStreamArrayIterator(179,7293
  bool operator==(operator==182,7403
  const ValueType &operator*(operator*197,7758
  IterType &operator+=(operator+=202,7856
  uint32_t offset(227,8645
  uint32_t getRecordLength(228,8693
  void moveToEnd(231,8758
  void markError(235,8821
  ValueType ThisValue;242,8938
  BinaryStreamRef IterRef;243,8961
  Extractor Extract;244,8988
  const ArrayType *Array{Array245,9009
  uint32_t ThisLen{ThisLen246,9044
  uint32_t AbsOffset{AbsOffset247,9067
  bool HasError{HasError248,9092
  bool *HadError{HadError249,9116
template <typename T> class FixedStreamArray 259,9521
  typedef FixedStreamArrayIterator<T> Iterator;263,9621
  explicit FixedStreamArray(266,9702
  bool operator==(operator==270,9827
  bool operator!=(operator!=274,9927
  uint32_t size(295,10694
  bool empty(297,10762
  FixedStreamArrayIterator<T> begin(299,10808
  FixedStreamArrayIterator<T> end(303,10909
  const T &front(front307,11013
  const T &back(back308,11059
  BinaryStreamRef getUnderlyingStream(313,11152
  BinaryStreamRef Stream;316,11227
class FixedStreamArrayIterator320,11279
  FixedStreamArrayIterator(325,11460
  FixedStreamArrayIterator(328,11576
  operator=(operator=331,11727
  const T &operator*(operator*337,11856
  const T &operator*(operator*338,11910
  bool operator==(operator==340,11959
  FixedStreamArrayIterator<T> &operator+=(operator+=345,12111
  FixedStreamArrayIterator<T> &operator-=(operator-=350,12212
  std::ptrdiff_t operator-(356,12353
  bool operator<(362,12519
  FixedStreamArray<T> Array;368,12660
  uint32_t Index;369,12689

/usr/include/llvm/Support/BinaryStreamError.h,377
#define LLVM_SUPPORT_BINARYSTREAMERROR_H10,411
enum class stream_error_code 18,554
  unspecified,19,585
  stream_too_short,20,600
  invalid_array_size,21,620
  invalid_offset,22,642
  filesystem_error23,660
class BinaryStreamError 27,748
  static char ID;29,820
  stream_error_code getErrorCode(39,1138
  std::string ErrMsg;42,1206
  stream_error_code Code;43,1228

/usr/include/llvm/Support/BranchProbability.h,853
#define LLVM_SUPPORT_BRANCHPROBABILITY_H14,572
class BranchProbability 30,1013
  uint32_t N;32,1054
  explicit BranchProbability(40,1326
  BranchProbability(43,1386
  BranchProbability(44,1425
  bool isZero(46,1489
  bool isUnknown(47,1530
  static BranchProbability getZero(49,1582
  static BranchProbability getOne(50,1652
  static BranchProbability getUnknown(51,1721
  static BranchProbability getRaw(54,1896
  static BranchProbability getBranchProbability(56,2036
  static void normalizeProbabilities(62,2299
  uint32_t getNumerator(65,2419
  static uint32_t getDenominator(66,2465
  BranchProbability getCompl(69,2546
  raw_ostream &print(print71,2621
  BranchProbability operator*operator148,4971
  BranchProbability operator*operator154,5106
void BranchProbability::normalizeProbabilities(normalizeProbabilities205,6567

/usr/include/llvm/Support/BuryPointer.h,42
#define LLVM_SUPPORT_BURYPOINTER_H10,405

/usr/include/llvm/Support/CBindingWrapping.h,199
#define LLVM_SUPPORT_CBINDINGWRAPPING_H14,560
#define DEFINE_SIMPLE_CONVERSION_FUNCTIONS(19,662
#define DEFINE_ISA_CONVERSION_FUNCTIONS(28,1073
#define DEFINE_STDCXX_CONVERSION_FUNCTIONS(36,1426

/usr/include/llvm/Support/CFGUpdate.h,485
#define LLVM_SUPPORT_CFGUPDATE_H15,583
enum class UpdateKind 26,855
enum class UpdateKind : unsigned char { Insert,26,855
enum class UpdateKind : unsigned char { Insert, Delete 26,855
template <typename NodePtr> class Update 28,914
  NodePtr From;30,1020
  NodeKindPair ToAndKind;31,1036
  Update(34,1071
  UpdateKind getKind(37,1167
  NodePtr getFrom(38,1227
  NodePtr getTo(39,1270
  void print(44,1438
  LLVM_DUMP_METHOD void dump(52,1700
void LegalizeUpdates(63,2114

/usr/include/llvm/Support/COM.h,289
#define LLVM_SUPPORT_COM_H15,567
enum class COMThreadingMode 20,629
enum class COMThreadingMode { SingleThreaded,20,629
enum class COMThreadingMode { SingleThreaded, MultiThreaded 20,629
class InitializeCOMRAII 22,693
  explicit InitializeCOMRAII(24,727
  ~InitializeCOMRAII(26,844

/usr/include/llvm/Support/CRC.h,148
#define LLVM_SUPPORT_CRC_H14,540
class JamCRC 45,1400
  JamCRC(47,1423
  void update(50,1520
  uint32_t getCRC(52,1560
  uint32_t CRC;55,1612

/usr/include/llvm/Support/CSKYAttributeParser.h,290
#define LLVM_SUPPORT_CSKYATTRIBUTEPARSER_H10,413
class CSKYAttributeParser 16,561
  struct DisplayHandler 17,617
    CSKYAttrs::AttrType attribute;18,643
  static const DisplayHandler displayRoutines[displayRoutines21,736
  CSKYAttributeParser(35,1123
  CSKYAttributeParser(37,1241

/usr/include/llvm/Support/CSKYAttributes.h,2040
#define LLVM_SUPPORT_CSKYATTRIBUTES_H13,550
enum AttrType 22,713
  CSKY_ARCH_NAME 23,729
  CSKY_CPU_NAME 24,751
  CSKY_ISA_FLAGS 25,772
  CSKY_ISA_EXT_FLAGS 26,794
  CSKY_DSP_VERSION 27,820
  CSKY_VDSP_VERSION 28,844
  CSKY_FPU_VERSION 29,869
  CSKY_FPU_ABI 30,894
  CSKY_FPU_ROUNDING 31,915
  CSKY_FPU_DENORMAL 32,941
  CSKY_FPU_EXCEPTION 33,967
  CSKY_FPU_NUMBER_MODULE 34,994
  CSKY_FPU_HARDFP 35,1025
enum ISA_FLAGS 38,1052
  V2_ISA_E1 39,1069
  V2_ISA_1E2 40,1091
  V2_ISA_2E3 41,1114
  V2_ISA_3E7 42,1137
  V2_ISA_7E10 43,1160
  V2_ISA_3E3R1 44,1184
  V2_ISA_3E3R2 45,1209
  V2_ISA_10E60 46,1234
  V2_ISA_3E3R3 47,1259
  ISA_TRUST 48,1284
  ISA_CACHE 49,1307
  ISA_NVIC 50,1330
  ISA_CP 51,1352
  ISA_MP 52,1372
  ISA_MP_1E2 53,1392
  ISA_JAVA 54,1416
  ISA_MAC 55,1438
  ISA_MAC_DSP 56,1459
  ISA_DSP 57,1484
  ISA_DSP_1E2 58,1505
  ISA_DSP_ENHANCE 59,1530
  ISA_DSP_SILAN 60,1559
  ISA_VDSP 61,1586
  ISA_VDSP_2 62,1608
  ISA_VDSP_2E3 63,1632
  V2_ISA_DSPE60 64,1658
  ISA_VDSP_2E60F 65,1685
enum ISA_EXT_FLAGS 68,1716
  ISA_FLOAT_E1 69,1737
  ISA_FLOAT_1E2 70,1762
  ISA_FLOAT_1E3 71,1788
  ISA_FLOAT_3E4 72,1814
  ISA_FLOAT_7E60 73,1840
enum { NONE 76,1870
enum { NONE = 0, NEEDED 76,1870
enum DSP_VERSION 78,1902
enum DSP_VERSION { DSP_VERSION_EXTENSION 78,1902
enum DSP_VERSION { DSP_VERSION_EXTENSION = 1, DSP_VERSION_2 78,1902
enum VDSP_VERSION 80,1970
enum VDSP_VERSION { VDSP_VERSION_1 80,1970
enum VDSP_VERSION { VDSP_VERSION_1 = 1, VDSP_VERSION_2 80,1970
enum FPU_VERSION 82,2033
enum FPU_VERSION { FPU_VERSION_1 82,2033
enum FPU_VERSION { FPU_VERSION_1 = 1, FPU_VERSION_2 82,2033
enum FPU_VERSION { FPU_VERSION_1 = 1, FPU_VERSION_2 = 2, FPU_VERSION_3 82,2033
enum FPU_ABI 84,2112
enum FPU_ABI { FPU_ABI_SOFT 84,2112
enum FPU_ABI { FPU_ABI_SOFT = 1, FPU_ABI_SOFTFP 84,2112
enum FPU_ABI { FPU_ABI_SOFT = 1, FPU_ABI_SOFTFP = 2, FPU_ABI_HARD 84,2112
enum FPU_HARDFP 86,2186
  FPU_HARDFP_HALF 87,2204
  FPU_HARDFP_SINGLE 88,2227
  FPU_HARDFP_DOUBLE 89,2252

/usr/include/llvm/Support/CachePruning.h,77
#define LLVM_SUPPORT_CACHEPRUNING_H15,595
struct CachePruningPolicy 28,909

/usr/include/llvm/Support/Caching.h,264
#define LLVM_SUPPORT_CACHING_H16,687
class CachedFileStream 28,1106
  CachedFileStream(30,1139
  std::unique_ptr<raw_pwrite_stream> OS;33,1294
  std::string ObjectPathName;34,1335
using AddStreamFn 41,1535
using FileCache 57,2362
using AddBufferFn 63,2606

/usr/include/llvm/Support/Capacity.h,39
#define LLVM_SUPPORT_CAPACITY_H15,586

/usr/include/llvm/Support/CheckedArithmetic.h,510
#define LLVM_SUPPORT_CHECKEDARITHMETIC_H15,633
namespace llvm 40,1358
std::enable_if_t<std::enable_if_t46,1536
std::enable_if_t<std::is_signed_v<T>, std::optional<T>> checkedAdd(46,1536
std::enable_if_t<std::is_signed_v<T>, std::optional<T>> checkedSub(55,1907
std::enable_if_t<std::is_signed_v<T>, std::optional<T>> checkedMul(64,2282
std::enable_if_t<std::is_signed_v<T>, std::optional<T>> checkedMulAdd(73,2662
checkedAddUnsigned(85,3142
checkedMulUnsigned(94,3482
checkedMulAddUnsigned(103,3843

/usr/include/llvm/Support/CodeGenCoverage.h,109
#define LLVM_SUPPORT_CODEGENCOVERAGE_H12,571
class CodeGenCoverage 19,682
  BitVector RuleCoverage;21,717

/usr/include/llvm/Support/Compression.h,363
#define LLVM_SUPPORT_COMPRESSION_H14,561
enum class DebugCompressionType 27,1022
  None,28,1056
  Zlib,29,1084
  Zstd,30,1102
namespace zstd 55,1740
enum class Format 76,2329
  Zlib,77,2349
  Zstd,78,2357
inline Format formatFor(81,2369
struct Params 93,2674
  constexpr Params(94,2690
  Params(97,2863
  Format format;99,2929
  int level;100,2946

/usr/include/llvm/Support/ConvertUTF.h,931
#define LLVM_SUPPORT_CONVERTUTF_H106,5175
typedef unsigned int 128,5875
typedef unsigned short 129,5930
typedef unsigned char 130,5985
typedef unsigned char 131,6040
#define UNI_REPLACEMENT_CHAR 134,6120
#define UNI_MAX_BMP 135,6167
#define UNI_MAX_UTF16 136,6205
#define UNI_MAX_UTF32 137,6245
#define UNI_MAX_LEGAL_UTF32 138,6285
#define UNI_MAX_UTF8_BYTES_PER_CODE_POINT 140,6332
#define UNI_UTF16_BYTE_ORDER_MARK_NATIVE 142,6377
#define UNI_UTF16_BYTE_ORDER_MARK_SWAPPED 143,6426
#define UNI_UTF32_BYTE_ORDER_MARK_NATIVE 145,6476
#define UNI_UTF32_BYTE_ORDER_MARK_SWAPPED 146,6528
  conversionOK,149,6597
  sourceExhausted,150,6651
  targetExhausted,151,6724
  sourceIllegal 152,6794
} ConversionResult;153,6863
  strictConversion 156,6899
  lenientConversion157,6923
} ConversionFlags;158,6943
inline ConversionResult convertUTF8Sequence(269,10848
namespace sys 332,12991
namespace windows 333,13007

/usr/include/llvm/Support/CrashRecoveryContext.h,1644
#define LLVM_SUPPORT_CRASHRECOVERYCONTEXT_H10,414
class CrashRecoveryContext 46,1620
  CrashRecoveryContext(51,1729
  ~CrashRecoveryContext(52,1755
  void registerCleanup(57,1919
  void unregisterCleanup(59,1982
  static void Enable(62,2076
  static void Disable(65,2131
  static CrashRecoveryContext *GetCurrent(GetCurrent69,2276
  static bool isRecoveringFromCrash(72,2390
  bool RunSafely(81,2802
  bool RunSafely(82,2845
  bool RunSafelyOnThread(94,3285
  bool RunSafelyOnThread(95,3366
  [[noreturn]] void HandleExit(102,3706
  static bool isCrash(105,3831
  static bool throwIfCrash(109,3971
class CrashRecoveryContextCleanup 127,4632
  CrashRecoveryContext *context context129,4679
  CrashRecoveryContextCleanup(130,4722
  bool cleanupFired 134,4820
  CrashRecoveryContext *getContext(getContext139,4932
  CrashRecoveryContextCleanup *prev prev145,5048
  CrashRecoveryContextCleanup *prev = nullptr, *next next145,5048
template<typename Derived,159,5595
class CrashRecoveryContextCleanupBase 160,5634
  T *resource;resource162,5722
  CrashRecoveryContextCleanupBase(163,5737
  static Derived *create(create171,6090
class CrashRecoveryContextDestructorCleanup 182,6382
  CrashRecoveryContextDestructorCleanup(185,6524
  void recoverResources(190,6769
class CrashRecoveryContextDeleteCleanup 197,6932
  CrashRecoveryContextDeleteCleanup(200,7066
  void recoverResources(204,7257
class CrashRecoveryContextReleaseRefCleanup 209,7421
  CrashRecoveryContextReleaseRefCleanup(212,7563
  void recoverResources(217,7803
template <typename T,251,9086
template <typename T, typename Cleanup 251,9086

/usr/include/llvm/Support/DJB.h,57
#define LLVM_SUPPORT_DJB_H14,550
namespace llvm 18,611

/usr/include/llvm/Support/DOTGraphTraits.h,1088
#define LLVM_SUPPORT_DOTGRAPHTRAITS_H17,802
struct DefaultDOTGraphTraits 28,1138
  bool IsSimple;30,1178
  bool isSimple(33,1207
  explicit DefaultDOTGraphTraits(38,1261
  static std::string getGraphName(44,1478
  static std::string getGraphProperties(50,1712
  static bool renderGraphFromBottomUp(57,1964
  static bool isNodeHidden(64,2164
  static bool renderNodesUsingHTML(71,2429
  std::string getNodeLabel(76,2633
  static std::string getNodeIdentifierLabel(84,2895
  static std::string getNodeDescription(89,3025
  static std::string getNodeAttributes(96,3237
  template<typename EdgeIter,103,3478
  static std::string getEdgeAttributes(104,3528
  static std::string getEdgeSourceLabel(112,3802
  static bool edgeTargetsEdgeSource(120,4132
  static EdgeIter getEdgeTarget(128,4411
  static bool hasEdgeDestLabels(134,4612
  static unsigned numEdgeDestLabels(140,4802
  static std::string getEdgeDestLabel(146,5012
  template<typename GraphType,156,5451
  static void addCustomGraphFeatures(157,5504
struct DOTGraphTraits 166,5838
  DOTGraphTraits 167,5893

/usr/include/llvm/Support/DXILOperationCommon.h,373
#define LLVM_SUPPORT_DXILOPERATIONCOMMON_H18,736
enum class ParameterKind 25,851
  INVALID 26,888
  VOID,27,903
  HALF,28,911
  FLOAT,29,919
  DOUBLE,30,928
  I1,31,938
  I8,32,944
  I16,33,950
  I32,34,957
  I64,35,964
  OVERLOAD,36,971
  CBUFFER_RET,37,983
  RESOURCE_RET,38,998
  DXIL_HANDLE,39,1014
inline ParameterKind parameterTypeNameToKind(42,1033

/usr/include/llvm/Support/DataExtractor.h,1493
#define LLVM_SUPPORT_DATAEXTRACTOR_H10,407
struct Uint24 19,631
  uint8_t Bytes[Bytes20,647
  Uint24(21,667
  Uint24(24,733
  uint32_t getAsUint32(27,833
using uint24_t 33,998
inline uint24_t getSwappedBytes(37,1118
class DataExtractor 41,1222
  StringRef Data;42,1244
  uint8_t IsLittleEndian;43,1262
  uint8_t AddressSize;44,1288
  class Cursor 54,1936
    uint64_t Offset;55,1953
    Error Err;56,1974
    explicit Cursor(62,2098
    explicit operator bool(operator bool67,2365
    uint64_t tell(71,2566
    void seek(74,2692
    Error takeError(78,2852
  DataExtractor(86,3117
  DataExtractor(88,3269
  StringRef getData(95,3591
  bool isLittleEndian(97,3681
  uint8_t getAddressSize(99,3785
  void setAddressSize(101,3889
  const char *getCStr(getCStr129,5168
  const char *getCStr(getCStr136,5470
  StringRef getCStrRef(169,7087
  StringRef getBytes(239,10430
  uint64_t getUnsigned(279,12224
  uint64_t getAddress(325,14308
  uint64_t getAddress(332,14609
  uint8_t getU8(359,15821
  void getU8(397,17618
  uint16_t getU16(433,19239
  uint32_t getU24(486,21544
  uint32_t getU32(513,22755
  uint64_t getU64(565,24993
  int64_t getSLEB128(619,27357
  uint64_t getULEB128(648,28718
  bool eof(658,29218
  bool isValidOffset(665,29451
  bool isValidOffsetForDataOfSize(672,29750
  bool isValidOffsetForAddress(683,30217
  size_t size(688,30397
  static uint64_t &getOffset(getOffset693,30548
  static Error &getError(getError694,30609

/usr/include/llvm/Support/DataTypes.h,40
#define LLVM_SUPPORT_DATATYPES_H17,778

/usr/include/llvm/Support/DebugCounter.h,1016
#define LLVM_SUPPORT_DEBUGCOUNTER_H44,2337
class DebugCounter 56,2561
  static DebugCounter &instance(instance59,2643
  void push_back(62,2754
  static unsigned registerCounter(69,3087
  inline static bool shouldExecute(72,3231
  static bool isCounterSet(100,4243
  static int64_t getCounterValue(105,4403
  static void setCounterValue(113,4687
  unsigned getCounterId(124,5034
  unsigned int getNumCounters(129,5186
  std::pair<std::pair132,5334
  std::pair<std::string, std::string> getCounterInfo(132,5334
  typedef UniqueVector<std::string> CounterVector;137,5535
  CounterVector::const_iterator begin(138,5586
  CounterVector::const_iterator end(141,5677
  static void enableAllCounters(148,6025
  static bool isCountingEnabled(150,6091
  unsigned addCounter(160,6261
  struct CounterInfo 167,6509
    std::string Desc;172,6629
  DenseMap<DenseMap174,6656
  DenseMap<unsigned, CounterInfo> Counters;174,6656
  CounterVector RegisteredCounters;175,6700
#define DEBUG_COUNTER(182,6911

/usr/include/llvm/Support/Discriminator.h,982
#define LLVM_SUPPORT_DISCRIMINATOR_H14,571
static inline unsigned getPrefixEncodingFromUnsigned(24,912
static inline unsigned getUnsignedFromPrefixEncoding(30,1123
static inline unsigned getNextComponentInDiscriminator(38,1357
static inline unsigned encodeComponent(45,1514
static inline unsigned encodingBits(49,1636
enum FSDiscriminatorPass 57,1822
  Base 58,1849
  Pass0 59,1861
  Pass1 60,1874
  Pass2 61,1887
  Pass3 62,1900
  Pass4 63,1913
  PassLast 64,1926
static const unsigned BaseDiscriminatorBitWidth 70,2079
static const unsigned FSDiscriminatorBitWidth 73,2196
static inline unsigned getNumFSPasses(82,2562
static inline unsigned getFSPassBitEnd(87,2721
static inline unsigned getFSPassBitBegin(94,3028
static inline int getLastFSPassBitBegin(104,3431
static inline unsigned getLastFSPassBitEnd(110,3623
static inline unsigned getBaseFSBitBegin(116,3827
static inline unsigned getBaseFSBitEnd(119,3939
static inline unsigned getN1Bits(124,4091

/usr/include/llvm/Support/DivisionByConstantInfo.h,365
#define LLVM_SUPPORT_DIVISIONBYCONSTANTINFO_H14,577
struct SignedDivisionByConstantInfo 21,732
  static SignedDivisionByConstantInfo get(22,770
  APInt Magic;23,829
  unsigned ShiftAmount;24,871
struct UnsignedDivisionByConstantInfo 28,980
  get(30,1060
  APInt Magic;32,1158
  bool IsAdd;33,1200
  unsigned PostShift;34,1243
  unsigned PreShift;35,1290

/usr/include/llvm/Support/Duration.h,171
#define LLVM_SUPPORT_DURATION_H15,582
class Duration 20,651
  std::chrono::milliseconds Value;21,668
  Duration(23,713
  std::chrono::milliseconds getDuration(24,775

/usr/include/llvm/Support/ELFAttributes.h,391
#define LLVM_SUPPORT_ELFATTRIBUTES_H10,407
struct TagNameItem 18,547
  unsigned attr;19,568
  StringRef tagName;20,585
using TagNameMap 23,610
enum AttrType 27,675
enum AttrType : unsigned { File 27,675
enum AttrType : unsigned { File = 1, Section 27,675
enum AttrType : unsigned { File = 1, Section = 2, Symbol 27,675
enum AttrMagic 34,979
enum AttrMagic { Format_Version 34,979

/usr/include/llvm/Support/Errc.h,1360
#define LLVM_SUPPORT_ERRC_H30,1282
enum class errc 35,1353
  argument_list_too_long 36,1371
  argument_out_of_domain 37,1438
  bad_address 38,1505
  bad_file_descriptor 39,1550
  broken_pipe 40,1611
  device_or_resource_busy 41,1656
  directory_not_empty 42,1725
  executable_format_error 43,1786
  file_exists 44,1855
  file_too_large 45,1900
  filename_too_long 46,1951
  function_not_supported 47,2008
  illegal_byte_sequence 48,2075
  inappropriate_io_control_operation 49,2140
  interrupted 51,2237
  invalid_argument 52,2282
  invalid_seek 53,2337
  io_error 54,2384
  is_a_directory 55,2423
  no_child_process 56,2474
  no_lock_available 57,2529
  no_space_on_device 58,2586
  no_such_device_or_address 59,2645
  no_such_device 60,2718
  no_such_file_or_directory 61,2769
  no_such_process 62,2842
  not_a_directory 63,2895
  not_enough_memory 64,2948
  not_supported 65,3005
  operation_not_permitted 66,3054
  permission_denied 67,3123
  read_only_file_system 68,3180
  resource_deadlock_would_occur 69,3245
  resource_unavailable_try_again 70,3326
  result_out_of_range 72,3415
  too_many_files_open_in_system 73,3476
  too_many_files_open 74,3557
  too_many_links 75,3618
inline std::error_code make_error_code(78,3672
namespace std 83,3798
template <> struct is_error_code_enum<is_error_code_enum84,3814

/usr/include/llvm/Support/Errno.h,36
#define LLVM_SUPPORT_ERRNO_H14,568

/usr/include/llvm/Support/ErrorHandling.h,379
#define LLVM_SUPPORT_ERRORHANDLING_H15,638
  typedef void (*fatal_error_handler_t)fatal_error_handler_t24,797
  struct ScopedFatalErrorHandler 53,2233
    explicit ScopedFatalErrorHandler(54,2268
    ~ScopedFatalErrorHandler(59,2464
#define llvm_unreachable(143,6572
#define llvm_unreachable(146,6706
#define llvm_unreachable(148,6804
#define llvm_unreachable(150,6865

/usr/include/llvm/Support/ErrorOr.h,1558
#define LLVM_SUPPORT_ERROROR_H16,543
class ErrorOr 56,1910
  using storage_type = std::conditional_t<isRef, wrap,64,2108
  ErrorOr(74,2427
  ErrorOr(82,2734
  ErrorOr(87,2863
  ErrorOr(93,3056
  ErrorOr(98,3147
  explicit ErrorOr(104,3320
  ErrorOr(110,3488
  ErrorOr(115,3585
  explicit ErrorOr(123,3888
  ErrorOr &operator=(operator=129,4054
  ErrorOr &operator=(operator=134,4145
  ~ErrorOr(139,4242
  explicit operator bool(operator bool145,4359
  reference get(149,4421
  const_reference get(150,4465
  std::error_code getError(152,4546
  pointer operator ->(operator ->156,4650
  const_pointer operator->(160,4717
  reference operator *(operator *162,4789
  const_reference operator*(166,4847
  void copyConstruct(170,4945
  static bool compareThisIfSameType(183,5301
  static bool compareThisIfSameType(188,5423
  void copyAssign(193,5536
  void moveConstruct(202,5730
  void moveAssign(215,6096
  pointer toPointer(223,6270
  const_pointer toPointer(227,6326
  pointer toPointer(229,6394
  const_pointer toPointer(233,6456
  storage_type *getStorage(getStorage235,6530
  const storage_type *getStorage(getStorage240,6689
  std::error_code *getErrorStorage(getErrorStorage245,6866
  const std::error_code *getErrorStorage(getErrorStorage250,7038
    AlignedCharArrayUnion<storage_type> TStorage;255,7166
    AlignedCharArrayUnion<std::error_code> ErrorStorage;256,7216
  bool HasError 258,7278
                     std::is_error_condition_enum<E>::value,value263,7385
operator==(operator==265,7469

/usr/include/llvm/Support/ExitCodes.h,66
#define LLVM_SUPPORT_EXITCODES_H17,686
#define EX_IOERR 28,1123

/usr/include/llvm/Support/ExtensibleRTTI.h,475
#define LLVM_SUPPORT_EXTENSIBLERTTI_H61,2071
class RTTIRoot 69,2280
  static const void *classID(classID74,2381
  virtual const void *dynamicClassID(dynamicClassID77,2504
  bool isA(86,2801
  static char ID;91,2891
template <typename ThisT,113,3539
class RTTIExtends 114,3583
  using ParentT::ParentT;117,3668
  static const void *classID(classID119,3695
  const void *dynamicClassID(dynamicClassID121,3750
  bool isA(123,3820
  static bool classof(127,3938

/usr/include/llvm/Support/FileCollector.h,698
#define LLVM_SUPPORT_FILECOLLECTOR_H10,407
class FileCollectorBase 22,651
  FileCollectorBase(24,685
  virtual ~FileCollectorBase(25,708
  void addFile(27,741
  void addDirectory(28,776
  bool markAsSeen(31,827
  std::mutex Mutex;45,1242
  StringSet<> Seen;48,1319
class FileCollector 69,2180
  class PathCanonicalizer 73,2351
    struct PathStorage 75,2389
      SmallString<256> CopyFrom;76,2414
      SmallString<256> VirtualPath;77,2447
    StringMap<std::string> CachedDirs;89,2873
  void addFileToMapping(116,3905
  const std::string Root;132,4464
  const std::string OverlayRoot;135,4545
  vfs::YAMLVFSWriter VFSWriter;138,4610
  PathCanonicalizer Canonicalizer;141,4690

/usr/include/llvm/Support/FileOutputBuffer.h,250
#define LLVM_SUPPORT_FILEOUTPUTBUFFER_H14,572
class FileOutputBuffer 28,1279
    F_executable 32,1368
    F_no_mmap 36,1498
  StringRef getPath(61,2522
  virtual void discard(77,3294
  FileOutputBuffer(80,3334
  std::string FinalPath;82,3391

/usr/include/llvm/Support/FileUtilities.h,439
#define LLVM_SUPPORT_FILEUTILITIES_H15,602
  class FileRemover 42,1638
    SmallString<128> Filename;43,1660
    bool DeleteIt;44,1691
    FileRemover(46,1720
    explicit FileRemover(48,1760
    ~FileRemover(53,1901
    void setFile(63,2242
    void releaseFile(76,2650
  class FilePermissionsApplier 82,2902
    FilePermissionsApplier(94,3390
    StringRef InputFilename;97,3535
    sys::fs::file_status InputStatus;98,3564

/usr/include/llvm/Support/Format.h,1677
#define LLVM_SUPPORT_FORMAT_H23,875
class format_object_base 39,1277
  const char *Fmt;Fmt41,1315
  virtual void home(44,1463
  virtual int snprint(47,1587
  unsigned print(55,1946
template <typename Arg,82,2941
  validate_format_parameters(86,3153
template <> struct validate_format_parameters<validate_format_parameters88,3230
inline format_object<Ts...> format(125,4354
class FormattedString 130,4556
  enum Justification 132,4588
  enum Justification { JustifyNone,132,4588
  enum Justification { JustifyNone, JustifyLeft,132,4588
  enum Justification { JustifyNone, JustifyLeft, JustifyRight,132,4588
  enum Justification { JustifyNone, JustifyLeft, JustifyRight, JustifyCenter 132,4588
  FormattedString(133,4668
  StringRef Str;137,4778
  unsigned Width;138,4795
  Justification Justify;139,4813
inline FormattedString left_justify(146,5040
inline FormattedString right_justify(153,5349
inline FormattedString center_justify(160,5671
class FormattedNumber 165,5886
  uint64_t HexValue;166,5910
  int64_t DecValue;167,5931
  unsigned Width;168,5951
  bool Hex;169,5969
  bool Upper;170,5981
  bool HexPrefix;171,5995
  FormattedNumber(175,6050
inline FormattedNumber format_hex(187,6596
inline FormattedNumber format_hex_no_prefix(200,7268
inline FormattedNumber format_decimal(212,7864
class FormattedBytes 216,7994
  ArrayRef<uint8_t> Bytes;217,8017
  std::optional<uint64_t> FirstByteOffset;221,8134
  uint32_t IndentLevel;222,8177
  uint32_t NumPerLine;223,8247
  uint8_t ByteGroupSize;224,8309
  bool Upper;225,8383
  bool ASCII;226,8452
  FormattedBytes(230,8570
format_bytes(241,8930
format_bytes_with_ascii(250,9316

/usr/include/llvm/Support/FormatAdapters.h,447
#define LLVM_SUPPORT_FORMATADAPTERS_H10,407
template <typename T> class FormatAdapter 19,653
  explicit FormatAdapter(21,740
  T Item;23,809
namespace detail 26,823
class ErrorAdapter 74,2296
  ErrorAdapter(76,2355
  ~ErrorAdapter(78,2463
  void format(79,2516
detail::AlignAdapter<T> fmt_align(86,2637
detail::PadAdapter<T> fmt_pad(92,2870
detail::RepeatAdapter<T> fmt_repeat(97,3032
inline detail::ErrorAdapter fmt_consume(104,3347

/usr/include/llvm/Support/FormatProviders.h,1245
#define LLVM_SUPPORT_FORMATPROVIDERS_H15,649
struct use_integral_formatter30,995
struct use_char_formatter37,1311
struct is_cstring41,1431
struct use_string_formatter47,1598
struct use_pointer_formatter53,1775
struct use_double_formatter58,1966
class HelperFunctions 61,2070
  static std::optional<size_t> parseNumericPrecision(63,2105
  static bool consumeHexStyle(78,2543
  static size_t consumeNumHexDigits(93,3054
    : public detail::HelperFunctions HelperFunctions129,4761
    : public detail::HelperFunctions HelperFunctions178,6927
  static void format(203,7830
template <> struct format_provider<format_provider217,8242
  static void format(218,8286
  static void format(236,8918
template <> struct format_provider<format_provider263,9775
  static void format(264,9818
    : public detail::HelperFunctions HelperFunctions302,11433
namespace detail 324,12147
using IterValue 326,12192
struct range_item_has_provider329,12287
template <typename IterT> class format_provider<format_provider357,13482
  using value 358,13561
  static StringRef consumeOneOption(360,13628
  static std::pair<std::pair388,14477
  static std::pair<StringRef, StringRef> parseOptions(388,14477
  static void format(398,14917

/usr/include/llvm/Support/FormatVariadic.h,1187
#define LLVM_SUPPORT_FORMATVARIADIC_H26,1109
enum class ReplacementType 46,1607
enum class ReplacementType { Empty,46,1607
enum class ReplacementType { Empty, Format,46,1607
enum class ReplacementType { Empty, Format, Literal 46,1607
struct ReplacementItem 48,1663
  explicit ReplacementItem(50,1719
  ReplacementItem(52,1822
  StringRef Spec;58,2130
  StringRef Options;63,2244
class formatv_object_base 66,2269
  StringRef Fmt;68,2308
  ArrayRef<detail::format_adapter *> Adapters;69,2325
  static std::pair<std::pair74,2503
  formatv_object_base(77,2596
  void format(85,2874
  static SmallVector<SmallVector104,3333
  std::string str(108,3488
  template <unsigned N> SmallString<N> sstr(116,3644
  template <unsigned N> operator SmallString<N>(operator SmallString<N>123,3810
  operator std::string(string125,3889
template <typename Tuple> class formatv_object 128,3942
  Tuple Parameters;132,4248
  std::array<std::array133,4268
      ParameterPointers;134,4338
  struct create_adapters 143,4847
    std::array<std::array145,4904
    operator()(operator()146,4976
  formatv_object(152,5056
  formatv_object(160,5324
  using ParamTuple 253,9772

/usr/include/llvm/Support/FormatVariadicDetails.h,950
#define LLVM_SUPPORT_FORMATVARIADICDETAILS_H10,415
class format_adapter 23,711
  virtual void anchor(24,734
template <typename T> class provider_format_adapter 33,885
  T Item;34,963
  explicit provider_format_adapter(37,982
  void format(39,1061
class stream_operator_format_adapter 45,1221
  T Item;46,1284
  explicit stream_operator_format_adapter(49,1303
  void format(52,1395
template <class T> class has_FormatProvider 61,1686
  using Decayed 63,1740
  typedef void (*Signature_format)Signature_format64,1775
  static bool const value 72,2033
template <class T> class has_StreamOperator 77,2199
  using ConstRefT 79,2253
  static bool const value 90,2640
struct uses_format_member96,2845
struct uses_format_provider105,3234
struct uses_stream_operator113,3538
struct uses_missing_provider123,4091
build_format_adapter(131,4433
build_format_adapter(137,4600
build_format_adapter(144,4819
build_format_adapter(156,5357

/usr/include/llvm/Support/FormattedStream.h,727
#define LLVM_SUPPORT_FORMATTEDSTREAM_H15,602
class formatted_raw_ostream 30,1259
  raw_ostream *TheStream;TheStream34,1443
  std::pair<std::pair40,1666
  std::pair<unsigned, unsigned> Position;40,1666
  const char *Scanned;Scanned45,1809
  SmallString<4> PartialUTF8Char;53,2252
  uint64_t current_pos(59,2467
  void setStream(77,3322
  formatted_raw_ostream(106,4382
  explicit formatted_raw_ostream(110,4499
  ~formatted_raw_ostream(114,4601
  unsigned getColumn(126,4952
  unsigned getLine(132,5143
  raw_ostream &resetColor(resetColor138,5333
  raw_ostream &reverseColor(reverseColor143,5424
  raw_ostream &changeColor(changeColor148,5519
  bool is_displayed(153,5664
  void releaseStream(158,5755

/usr/include/llvm/Support/GraphWriter.h,963
#define LLVM_SUPPORT_GRAPHWRITER_H23,1082
namespace GraphProgram 48,1705
enum Name 50,1731
  DOT,51,1743
  FDP,52,1750
  NEATO,53,1757
  TWOPI,54,1766
  CIRCO55,1775
class GraphWriter 64,1973
  raw_ostream &O;O65,1993
  const GraphType &G;G66,2011
  bool RenderUsingHTML 67,2033
  using DOTTraits 69,2066
  using GTraits 70,2113
  using NodeRef 71,2155
  using node_iterator 72,2200
  using child_iterator 73,2258
  DOTTraits DTraits;74,2320
  bool getEdgeSourceLabels(83,2738
  GraphWriter(120,3651
  void writeGraph(125,3813
  void writeHeader(139,4166
  void writeFooter(160,4828
  void writeNodes(165,4900
  bool isNodeHidden(172,5078
  void writeNode(174,5155
  void writeEdge(288,8661
  void emitSimpleNode(310,9444
  void emitEdge(333,10191
  raw_ostream &getOStream(getOStream353,10938
raw_ostream &WriteGraph(WriteGraph359,11019
std::string WriteGraph(378,11602
dumpDotGraphToFile(416,12800
void ViewGraph(427,13200

/usr/include/llvm/Support/InitLLVM.h,300
#define LLVM_SUPPORT_INITLLVM_H10,402
class InitLLVM 35,1398
  InitLLVM(37,1423
  InitLLVM(39,1519
  ~InitLLVM(43,1705
  BumpPtrAllocator Alloc;46,1730
  SmallVector<const char 47,1756
  SmallVector<const char *, 0> Args;47,1756
  std::optional<PrettyStackTraceProgram> StackPrinter;48,1793

/usr/include/llvm/Support/InstructionCost.h,1787
#define LLVM_SUPPORT_INSTRUCTIONCOST_H19,949
class InstructionCost 29,1103
  enum CostState 34,1211
    Valid,35,1230
    Invalid 37,1339
  void propagateState(56,2406
  static CostType getMaxValue(61,2516
  static CostType getMinValue(62,2597
  InstructionCost(69,2822
  static InstructionCost getMax(71,2885
  static InstructionCost getMin(72,2945
  static InstructionCost getInvalid(73,3005
  bool isValid(79,3134
  void setValid(80,3184
  void setInvalid(81,3221
  CostState getState(82,3262
  std::optional<CostType> getValue(87,3492
  InstructionCost &operator+=(operator+=99,3966
  InstructionCost &operator+=(operator+=111,4271
  InstructionCost &operator-=(operator-=117,4396
  InstructionCost &operator-=(operator-=128,4700
  InstructionCost &operator*=(operator*=134,4825
  InstructionCost &operator*=(operator*=150,5223
  InstructionCost &operator/=(operator/=156,5348
  InstructionCost &operator/=(operator/=162,5480
  InstructionCost &operator++(operator++168,5605
  InstructionCost operator++(173,5678
  InstructionCost &operator--(operator--179,5783
  InstructionCost operator--(184,5856
  bool operator<(195,6282
  bool operator==(operator==203,6520
  bool operator!=(operator!=207,6624
  bool operator==(operator==209,6705
  bool operator!=(operator!=214,6813
  bool operator>(216,6886
  bool operator<=(operator<=218,6962
  bool operator>=(operator>=220,7042
  bool operator<(222,7122
  bool operator>(227,7228
  bool operator<=(operator<=232,7334
  bool operator>=(operator>=237,7442
inline InstructionCost operator+(252,7748
inline InstructionCost operator-(259,7934
inline InstructionCost operator*(266,8120
inline InstructionCost operator/(273,8306
inline raw_ostream &operator<<(operator<<280,8492

/usr/include/llvm/Support/LICENSE.TXT,32
Part of the LLVM Project,4,111

/usr/include/llvm/Support/LineIterator.h,492
#define LLVM_SUPPORT_LINEITERATOR_H10,406
class line_iterator 33,1119
  std::optional<MemoryBufferRef> Buffer;34,1141
  StringRef CurrentLine;39,1265
  bool is_at_eof(60,2020
  bool is_at_end(63,2132
  int64_t line_number(66,2250
  line_iterator &operator++(operator++69,2361
  line_iterator operator++(73,2430
  StringRef operator*(80,2576
  const StringRef *operator->(operator->81,2630
  friend bool operator==(operator==83,2694
  friend bool operator!=(operator!=88,2880

/usr/include/llvm/Support/Locale.h,35
#define LLVM_SUPPORT_LOCALE_H2,30

/usr/include/llvm/Support/LockFileManager.h,712
#define LLVM_SUPPORT_LOCKFILEMANAGER_H9,408
class LockFileManager 27,1026
  enum LockFileState 30,1100
    LFS_Owned,33,1215
    LFS_Shared,36,1312
    LFS_Error39,1408
  enum WaitForUnlockResult 43,1501
    Res_Success,45,1574
    Res_OwnerDied,47,1634
    Res_Timeout49,1726
  SmallString<128> FileName;53,1757
  SmallString<128> LockFileName;54,1786
  SmallString<128> UniqueLockFileName;55,1819
  std::optional<std::optional57,1859
  std::optional<std::pair<std::string, int>> Owner;57,1859
  std::error_code ErrorCode;58,1911
  std::string ErrorDiagMsg;59,1940
  static std::optional<std::optional64,2087
  operator LockFileState(operator LockFileState77,2397
  void setError(92,3005

/usr/include/llvm/Support/MSP430AttributeParser.h,344
#define LLVM_SUPPORT_MSP430ATTRIBUTEPARSER_H15,595
class MSP430AttributeParser 21,747
  struct DisplayHandler 22,805
    MSP430Attrs::AttrType Attribute;23,831
  static const std::array<std::array26,941
  static const std::array<DisplayHandler, 4> DisplayRoutines;26,941
  MSP430AttributeParser(36,1266
  MSP430AttributeParser(39,1419

/usr/include/llvm/Support/MSP430Attributes.h,692
#define LLVM_SUPPORT_MSP430ATTRIBUTES_H19,713
enum AttrType 28,882
  TagISA 30,957
  TagCodeModel 31,971
  TagDataModel 32,991
  TagEnumSize 33,1011
enum ISA 36,1034
enum ISA { ISAMSP430 36,1034
enum ISA { ISAMSP430 = 1, ISAMSP430X 36,1034
enum CodeModel 37,1078
enum CodeModel { CMSmall 37,1078
enum CodeModel { CMSmall = 1, CMLarge 37,1078
enum DataModel 38,1123
enum DataModel { DMSmall 38,1123
enum DataModel { DMSmall = 1, DMLarge 38,1123
enum DataModel { DMSmall = 1, DMLarge = 2, DMRestricted 38,1123
enum EnumSize 39,1186
enum EnumSize { ESSmall 39,1186
enum EnumSize { ESSmall = 1, ESInteger 39,1186
enum EnumSize { ESSmall = 1, ESInteger = 2, ESDontCare 39,1186

/usr/include/llvm/Support/MSVCErrorWorkarounds.h,442
#define LLVM_SUPPORT_MSVCERRORWORKAROUNDS_H19,867
class MSVCPError 27,1113
  MSVCPError(29,1155
  MSVCPError(31,1190
  MSVCPError &operator=(operator=33,1253
  MSVCPError(38,1360
template <typename T> class MSVCPExpected 43,1569
  MSVCPExpected(45,1642
  MSVCPExpected(50,1779
  MSVCPExpected &operator=(operator=52,1854
  MSVCPExpected(57,1975
  MSVCPExpected(60,2065
  MSVCPExpected(66,2243
  explicit MSVCPExpected(72,2435

/usr/include/llvm/Support/ManagedStatic.h,859
#define LLVM_SUPPORT_MANAGEDSTATIC_H14,573
template <class C> struct object_creator 22,721
  static void *call(call23,764
template <typename T> struct object_deleter 28,868
  static void call(29,914
template <typename T,31,968
template <typename T, size_t N> struct object_deleter<object_deleter31,968
  static void call(32,1030
#define LLVM_USE_CONSTEXPR_CTOR45,1826
class ManagedStaticBase 49,1937
  mutable std::atomic<void *> Ptr{Ptr52,2005
  mutable const ManagedStaticBase *Next Next54,2089
  mutable std::atomic<void *> Ptr;58,2256
  mutable const ManagedStaticBase *Next;Next60,2328
  bool isConstructed(71,2623
  C &operator*(operator*86,3175
  C *operator->(operator->94,3393
  const C &operator*(operator*96,3432
  const C *operator->(operator->104,3662
struct llvm_shutdown_obj 118,4135
  ~llvm_shutdown_obj(120,4195

/usr/include/llvm/Support/Memory.h,851
#define LLVM_SUPPORT_MEMORY_H14,538
  class MemoryBlock 31,1004
    MemoryBlock(33,1036
    MemoryBlock(34,1094
    void *base(base36,1201
    size_t allocatedSize(39,1365
    void *Address;Address42,1436
    size_t AllocatedSize;43,1500
  class Memory 52,1786
    enum ProtectionFlags 54,1813
      MF_READ 55,1840
      MF_WRITE 56,1867
      MF_EXEC 57,1895
      MF_RWE_MASK 58,1922
      MF_HUGE_HINT 70,2638
    static MemoryBlock allocateMappedMemory(97,3946
  class OwningMemoryBlock 137,5901
    explicit OwningMemoryBlock(140,5974
    OwningMemoryBlock(141,6030
    OwningMemoryBlock& operator=(operator=145,6137
    ~OwningMemoryBlock(150,6275
    void *base(base154,6368
    size_t allocatedSize(157,6533
    MemoryBlock getMemoryBlock(158,6596
    std::error_code release(159,6649
    MemoryBlock M;168,6843

/usr/include/llvm/Support/MemoryBuffer.h,1785
#define LLVM_SUPPORT_MEMORYBUFFER_H14,543
class MemoryBuffer 51,1815
  const char *BufferStart;BufferStart52,1836
  const char *BufferEnd;BufferEnd53,1887
  const char *getBufferStart(getBufferStart66,2215
  const char *getBufferEnd(getBufferEnd67,2276
  size_t getBufferSize(68,2335
  StringRef getBuffer(70,2401
  virtual StringRef getBufferIdentifier(76,2581
  virtual void dontNeedIfMmap(83,3006
  enum BufferKind 165,7050
    MemoryBuffer_Malloc,166,7070
    MemoryBuffer_MMap167,7095
class WritableMemoryBuffer 181,7572
  using MemoryBuffer::getBuffer;186,7679
  using MemoryBuffer::getBufferEnd;187,7712
  using MemoryBuffer::getBufferStart;188,7748
  char *getBufferStart(getBufferStart192,7922
  char *getBufferEnd(getBufferEnd195,8016
  MutableArrayRef<char> getBuffer(198,8106
  using MemoryBuffer::getFileAsStream;232,9684
  using MemoryBuffer::getFileOrSTDIN;233,9723
  using MemoryBuffer::getMemBuffer;234,9761
  using MemoryBuffer::getMemBufferCopy;235,9797
  using MemoryBuffer::getOpenFile;236,9837
  using MemoryBuffer::getOpenFileSlice;237,9872
  using MemoryBuffer::getSTDIN;238,9912
class WriteThroughMemoryBuffer 245,10255
  using MemoryBuffer::getBuffer;250,10370
  using MemoryBuffer::getBufferEnd;251,10403
  using MemoryBuffer::getBufferStart;252,10439
  char *getBufferStart(getBufferStart256,10613
  char *getBufferEnd(getBufferEnd259,10707
  MutableArrayRef<char> getBuffer(262,10797
  using MemoryBuffer::getFileAsStream;277,11375
  using MemoryBuffer::getFileOrSTDIN;278,11414
  using MemoryBuffer::getMemBuffer;279,11452
  using MemoryBuffer::getMemBufferCopy;280,11488
  using MemoryBuffer::getOpenFile;281,11528
  using MemoryBuffer::getOpenFileSlice;282,11563
  using MemoryBuffer::getSTDIN;283,11603

/usr/include/llvm/Support/MemoryBufferRef.h,390
#define LLVM_SUPPORT_MEMORYBUFFERREF_H14,546
class MemoryBufferRef 22,658
  StringRef Buffer;23,682
  StringRef Identifier;24,702
  MemoryBufferRef(28,766
  MemoryBufferRef(29,813
  StringRef getBuffer(32,922
  StringRef getBufferIdentifier(33,971
  const char *getBufferStart(getBufferStart35,1035
  const char *getBufferEnd(getBufferEnd36,1099
  size_t getBufferSize(37,1159

/usr/include/llvm/Support/MipsABIFlags.h,1637
#define LLVM_SUPPORT_MIPSABIFLAGS_H17,679
enum AFL_REG 23,811
  AFL_REG_NONE 24,826
  AFL_REG_32 25,865
  AFL_REG_64 26,908
  AFL_REG_128 27,951
enum AFL_ASE 31,1053
  AFL_ASE_DSP 32,1068
  AFL_ASE_DSPR2 33,1113
  AFL_ASE_EVA 34,1161
  AFL_ASE_MCU 35,1217
  AFL_ASE_MDMX 36,1280
  AFL_ASE_MIPS3D 37,1326
  AFL_ASE_MT 38,1375
  AFL_ASE_SMARTMIPS 39,1419
  AFL_ASE_VIRT 40,1470
  AFL_ASE_MSA 41,1514
  AFL_ASE_MIPS16 42,1559
  AFL_ASE_MICROMIPS 43,1607
  AFL_ASE_XPA 44,1658
  AFL_ASE_CRC 45,1703
  AFL_ASE_GINV 46,1748
enum AFL_EXT 50,1856
  AFL_EXT_NONE 51,1871
  AFL_EXT_XLR 52,1907
  AFL_EXT_OCTEON2 53,1958
  AFL_EXT_OCTEONP 54,2013
  AFL_EXT_LOONGSON_3A 55,2068
  AFL_EXT_OCTEON 56,2111
  AFL_EXT_5900 57,2165
  AFL_EXT_4650 58,2219
  AFL_EXT_4010 59,2273
  AFL_EXT_4100 60,2326
  AFL_EXT_3900 61,2380
  AFL_EXT_10000 62,2437
  AFL_EXT_SB1 63,2492
  AFL_EXT_4111 64,2549
  AFL_EXT_4120 65,2610
  AFL_EXT_5400 66,2664
  AFL_EXT_5500 67,2718
  AFL_EXT_LOONGSON_2E 68,2772
  AFL_EXT_LOONGSON_2F 69,2835
  AFL_EXT_OCTEON3 70,2898
enum AFL_FLAGS1 74,3014
enum AFL_FLAGS1 { AFL_FLAGS1_ODDSPREG 74,3014
  Tag_GNU_MIPS_ABI_FP 78,3097
  Tag_GNU_MIPS_ABI_MSA 79,3172
enum Val_GNU_MIPS_ABI_FP 84,3346
  Val_GNU_MIPS_ABI_FP_ANY 85,3373
  Val_GNU_MIPS_ABI_FP_DOUBLE 86,3421
  Val_GNU_MIPS_ABI_FP_SINGLE 87,3486
  Val_GNU_MIPS_ABI_FP_SOFT 88,3551
  Val_GNU_MIPS_ABI_FP_OLD_64 89,3599
  Val_GNU_MIPS_ABI_FP_XX 90,3653
  Val_GNU_MIPS_ABI_FP_64 91,3697
  Val_GNU_MIPS_ABI_FP_64A 92,3751
enum Val_GNU_MIPS_ABI_MSA 96,3878
  Val_GNU_MIPS_ABI_MSA_ANY 97,3906
  Val_GNU_MIPS_ABI_MSA_128 98,3952

/usr/include/llvm/Support/ModRef.h,2231
#define LLVM_SUPPORT_MODREF_H15,601
enum class ModRefInfo 27,937
  NoModRef 29,1048
  Ref 31,1123
  Mod 33,1190
  ModRef 35,1275
  LLVM_MARK_AS_BITMASK_ENUM(36,1297
  LLVM_MARK_AS_BITMASK_ENUM(ModRef)36,1297
[[nodiscard]] inline bool isNoModRef(39,1338
[[nodiscard]] inline bool isModOrRefSet(42,1439
[[nodiscard]] inline bool isModAndRefSet(45,1543
[[nodiscard]] inline bool isModSet(48,1646
[[nodiscard]] inline bool isRefSet(51,1775
enum class IRMemLocation 59,2050
  ArgMem 61,2123
  InaccessibleMem 63,2184
  Other 65,2231
  First 68,2316
  Last 69,2334
template <typename LocationEnum> class MemoryEffectsBase 72,2354
  using Location 74,2421
  uint32_t Data 77,2464
  static constexpr uint32_t BitsPerLoc 79,2486
  static constexpr uint32_t LocMask 80,2530
  static uint32_t getLocationPos(82,2592
  MemoryEffectsBase(86,2685
  void setModRef(88,2737
  static auto locations(95,2965
  MemoryEffectsBase(102,3233
  explicit MemoryEffectsBase(106,3400
  static MemoryEffectsBase unknown(112,3581
  static MemoryEffectsBase none(117,3744
  static MemoryEffectsBase readOnly(122,3894
  static MemoryEffectsBase writeOnly(127,4044
  static MemoryEffectsBase argMemOnly(132,4206
  inaccessibleMemOnly(138,4439
  inaccessibleOrArgMemOnly(145,4683
  static MemoryEffectsBase createFromIntValue(154,4995
  uint32_t toIntValue(160,5195
  ModRefInfo getModRef(165,5294
  MemoryEffectsBase getWithModRef(170,5474
  MemoryEffectsBase getWithoutLoc(177,5690
  ModRefInfo getModRef(184,5884
  bool doesNotAccessMemory(192,6092
  bool onlyReadsMemory(195,6207
  bool onlyWritesMemory(198,6332
  bool onlyAccessesArgPointees(201,6469
  bool doesAccessArgPointees(206,6637
  bool onlyAccessesInaccessibleMem(211,6809
  bool onlyAccessesInaccessibleOrArgMem(217,7026
  MemoryEffectsBase operator&(224,7252
  MemoryEffectsBase &operator&=(operator&=229,7426
  MemoryEffectsBase operator|(235,7574
  MemoryEffectsBase &operator|=(operator|=240,7744
  MemoryEffectsBase operator-(246,7890
  MemoryEffectsBase &operator-=(operator-=251,8064
  bool operator==(operator==257,8236
  bool operator!=(operator!=260,8385
using MemoryEffects 268,8755
using FunctionModRefBehavior 274,8923

/usr/include/llvm/Support/Mutex.h,285
#define LLVM_SUPPORT_MUTEX_H14,537
    class SmartMutex 28,890
      std::recursive_mutex impl;29,913
      bool lock(33,988
      bool unlock(45,1328
      bool try_lock(58,1737
    typedef SmartMutex<false> Mutex;66,1932
    typedef SmartScopedLock<false> ScopedLock;71,2065

/usr/include/llvm/Support/NativeFormatting.h,633
#define LLVM_SUPPORT_NATIVEFORMATTING_H10,410
enum class FloatStyle 17,527
enum class FloatStyle { Exponent,17,527
enum class FloatStyle { Exponent, ExponentUpper,17,527
enum class FloatStyle { Exponent, ExponentUpper, Fixed,17,527
enum class FloatStyle { Exponent, ExponentUpper, Fixed, Percent 17,527
enum class IntegerStyle 18,594
  Integer,19,620
  Number,20,631
enum class HexPrintStyle 22,644
enum class HexPrintStyle { Upper,22,644
enum class HexPrintStyle { Upper, Lower,22,644
enum class HexPrintStyle { Upper, Lower, PrefixUpper,22,644
enum class HexPrintStyle { Upper, Lower, PrefixUpper, PrefixLower 22,644

/usr/include/llvm/Support/OptimizedStructLayout.h,339
#define LLVM_SUPPORT_OPTIMIZEDSTRUCTLAYOUT_H36,1715
struct OptimizedStructLayoutField 45,1894
  OptimizedStructLayoutField(50,2078
  uint64_t Offset;59,2534
  uint64_t Size;63,2673
  const void *Id;Id66,2750
  void *Scratch;Scratch70,2892
  Align Alignment;73,2954
  bool hasFixedOffset(77,3097
  uint64_t getEndOffset(83,3277

/usr/include/llvm/Support/Parallel.h,879
#define LLVM_SUPPORT_PARALLEL_H10,402
#define GET_THREAD_INDEX_IMPL 33,1009
class Latch 59,1996
  uint32_t Count;60,2010
  mutable std::mutex Mutex;61,2028
  mutable std::condition_variable Cond;62,2056
  explicit Latch(65,2105
  ~Latch(66,2160
  void inc(71,2249
  void dec(76,2327
  void sync(82,2439
class TaskGroup 89,2586
  detail::Latch L;90,2604
  bool Parallel;91,2623
  void sync(104,3011
  bool isParallel(106,3046
namespace detail 109,3097
const ptrdiff_t MinParallelSize 112,3141
RandomAccessIterator medianOf3(116,3260
void parallel_quick_sort(128,3845
void parallel_sort(154,4707
enum { MaxTasksPerGroup 165,5225
ResultTy parallel_transform_reduce(169,5353
void parallelForEach(233,7798
ResultTy parallelTransformReduce(239,8018
void parallelForEach(261,8843
ResultTy parallelTransformReduce(267,9038
Error parallelForEachError(276,9424

/usr/include/llvm/Support/Path.h,619
#define LLVM_SUPPORT_PATH_H16,654
enum class Style 27,850
  native,28,869
  posix,29,879
  windows_slash,30,888
  windows_backslash,31,905
  windows 32,926
constexpr bool is_style_posix(36,1016
constexpr bool is_style_windows(49,1253
class const_iterator73,2044
  StringRef Path;76,2193
  StringRef Component;77,2242
  size_t    Position 78,2322
  Style S 79,2398
  reference operator*(86,2621
class reverse_iterator99,3099
  StringRef Path;102,3252
  StringRef Component;103,3301
  size_t    Position 104,3381
  Style S 105,3457
  reference operator*(111,3633
inline void make_preferred(269,9528

/usr/include/llvm/Support/PerThreadBumpPtrAllocator.h,744
#define LLVM_SUPPORT_PERTHREADBUMPPTRALLOCATOR_H10,419
class PerThreadAllocator27,1129
  PerThreadAllocator(30,1224
  using AllocatorBase<PerThreadAllocator<AllocatorTy>>::Allocate;Allocate38,1451
  using AllocatorBase<PerThreadAllocator<AllocatorTy>>::Deallocate;Deallocate40,1518
  void *Allocate(Allocate43,1648
  void Deallocate(50,1904
  AllocatorTy &getThreadLocalAllocator(getThreadLocalAllocator56,2159
  size_t getNumberOfAllocators(62,2335
  void Reset(70,2527
  size_t getTotalMemory(76,2698
  size_t getBytesAllocated(86,2956
  void setRedZoneSize(96,3221
  void PrintStats(102,3418
  size_t NumOfAllocators;111,3626
  std::unique_ptr<AllocatorTy[]> Allocators;112,3652
using PerThreadBumpPtrAllocator 115,3701

/usr/include/llvm/Support/PluginLoader.h,73
#define LLVM_SUPPORT_PLUGINLOADER_H17,752
  struct PluginLoader 26,909

/usr/include/llvm/Support/PointerLikeTypeTraits.h,2130
#define LLVM_SUPPORT_POINTERLIKETYPETRAITS_H15,654
struct ConstantLog230,1089
template <> struct ConstantLog2<ConstantLog232,1182
  static const bool value 43,1597
template <typename T> struct IsPointerLike 46,1635
  static const bool value 47,1680
template <typename T> struct IsPointerLike<IsPointerLike50,1748
  static const bool value 51,1798
template <typename T> struct PointerLikeTypeTraits<PointerLikeTypeTraits56,1913
  static inline void *getAsVoidPointer(getAsVoidPointer57,1971
  static inline T *getFromVoidPointer(getFromVoidPointer58,2030
  static constexpr int NumLowBitsAvailable 60,2110
template <> struct PointerLikeTypeTraits<PointerLikeTypeTraits64,2206
  static inline void *getAsVoidPointer(getAsVoidPointer65,2257
  static inline void *getFromVoidPointer(getFromVoidPointer66,2319
  static constexpr int NumLowBitsAvailable 75,2804
template <typename T> struct PointerLikeTypeTraits<PointerLikeTypeTraits79,2907
  typedef PointerLikeTypeTraits<T> NonConst;80,2969
  static inline const void *getAsVoidPointer(getAsVoidPointer82,3015
  static inline const T getFromVoidPointer(85,3119
  static constexpr int NumLowBitsAvailable 88,3247
template <typename T> struct PointerLikeTypeTraits<PointerLikeTypeTraits92,3380
  typedef PointerLikeTypeTraits<T *> NonConst;93,3444
  static inline const void *getAsVoidPointer(getAsVoidPointer95,3492
  static inline const T *getFromVoidPointer(getFromVoidPointer98,3614
  static constexpr int NumLowBitsAvailable 101,3743
template <> struct PointerLikeTypeTraits<PointerLikeTypeTraits105,3871
  static inline void *getAsVoidPointer(getAsVoidPointer106,3925
  static inline uintptr_t getFromVoidPointer(109,4023
  static constexpr int NumLowBitsAvailable 113,4154
template <int Alignment,124,4656
struct FunctionPointerLikeTypeTraits 125,4708
  static constexpr int NumLowBitsAvailable 126,4747
  static inline void *getAsVoidPointer(getAsVoidPointer128,4838
  static inline FunctionPointerT getFromVoidPointer(134,5120
template <typename ReturnT,146,5618
struct PointerLikeTypeTraits<PointerLikeTypeTraits147,5667

/usr/include/llvm/Support/PrettyStackTrace.h,741
#define LLVM_SUPPORT_PRETTYSTACKTRACE_H16,670
  class PrettyStackTraceEntry 52,2034
    friend PrettyStackTraceEntry *ReverseStackTrace(ReverseStackTrace53,2066
    PrettyStackTraceEntry *NextEntry;NextEntry55,2145
    PrettyStackTraceEntry(59,2320
    virtual ~PrettyStackTraceEntry(60,2349
    virtual void print(63,2451
  class PrettyStackTraceString 72,2824
    const char *Str;Str73,2888
    PrettyStackTraceString(75,2919
    void print(76,2977
  class PrettyStackTraceFormat 82,3228
    llvm::SmallVector<llvm::SmallVector83,3292
    llvm::SmallVector<char, 32> Str;83,3292
  class PrettyStackTraceProgram 91,3587
    int ArgC;92,3652
    const char *const *ArgV;ArgV93,3666
    PrettyStackTraceProgram(95,3705

/usr/include/llvm/Support/Printable.h,191
#define LLVM_SUPPORT_PRINTABLE_H14,534
class Printable 38,1274
  std::function<void(raw_ostream &OS)> Print;40,1300
  Printable(41,1346
inline raw_ostream &operator<<(operator<<45,1441

/usr/include/llvm/Support/Process.h,354
#define LLVM_SUPPORT_PROCESS_H25,1166
class Process 43,1573
  static Pid getProcessId(48,1657
  static Expected<unsigned> getPageSize(55,1979
  static unsigned getPageSizeEstimate(61,2293
  static size_t GetMallocUsage(75,2763
  static void GetTimeUsage(85,3346
  static void PreventCoreFiles(93,3741
  static bool AreCoreFilesPrevented(96,3841

/usr/include/llvm/Support/Program.h,653
#define LLVM_SUPPORT_PROGRAM_H14,541
  typedef unsigned long 38,1134
  typedef void *process_t;process_t39,1212
  typedef ::pid_t procid_t;41,1297
  typedef procid_t process_t;42,1325
  struct ProcessInfo 46,1423
    enum : procid_t 47,1446
    enum : procid_t { InvalidPid 47,1446
    procid_t Pid;49,1487
    process_t Process;50,1538
    int ReturnCode;53,1647
    ProcessInfo(55,1668
  struct ProcessStatistics 59,1763
    std::chrono::microseconds TotalTime;60,1792
    std::chrono::microseconds UserTime;61,1833
  enum WindowsEncodingMethod 169,7910
    WEM_UTF8,172,8048
    WEM_CurrentCodePage,173,8062
    WEM_UTF16174,8087

/usr/include/llvm/Support/RISCVAttributeParser.h,294
#define LLVM_SUPPORT_RISCVATTRIBUTEPARSER_H10,414
class RISCVAttributeParser 16,564
  struct DisplayHandler 17,621
    RISCVAttrs::AttrType attribute;18,647
  static const DisplayHandler displayRoutines[displayRoutines21,742
  RISCVAttributeParser(29,930
  RISCVAttributeParser(31,1052

/usr/include/llvm/Support/RandomNumberGenerator.h,214
#define LLVM_SUPPORT_RANDOMNUMBERGENERATOR_H_16,707
class RandomNumberGenerator 32,1192
  static constexpr result_type min(46,1626
  static constexpr result_type max(47,1697
  generator_type Generator;56,2010

/usr/include/llvm/Support/Recycler.h,143
#define LLVM_SUPPORT_RECYCLER_H15,598
template <class T, size_t Size,105,3345
void Recycler<T, Size, Align>::PrintStats(PrintStats106,3391

/usr/include/llvm/Support/RecyclingAllocator.h,270
#define LLVM_SUPPORT_RECYCLINGALLOCATOR_H15,641
template<class AllocatorType, class T, size_t Size,61,1826
inline void *operator new(operator new62,1892
template<class AllocatorType, class T, size_t Size,69,2166
inline void operator delete(operator delete70,2232

/usr/include/llvm/Support/Registry.h,1074
#define LLVM_SUPPORT_REGISTRY_H14,555
  class SimpleRegistryEntry 27,931
    StringRef Name,28,961
    StringRef Name, Desc;28,961
    SimpleRegistryEntry(32,1032
    StringRef getName(35,1149
    StringRef getDesc(36,1196
    std::unique_ptr<T> instantiate(37,1243
  class Registry 44,1526
    typedef T type;46,1555
    typedef SimpleRegistryEntry<T> entry;47,1575
    static node *Head,Head56,1715
    static node *Head, *Tail;Tail56,1715
    class node 61,1804
      node *Next;Next65,1877
      const entry& Val;66,1895
      node(69,1932
    class iterator83,2493
      const node *Cur;Cur86,2652
      explicit iterator(89,2688
      bool operator==(operator==91,2740
      iterator &operator++(operator++92,2818
      const entry &operator*(operator*93,2882
    static iterator end(99,3133
    static iterator_range<iterator> entries(101,3192
    class Add 114,3602
      entry Entry;115,3618
      node Node;116,3637
      static std::unique_ptr<T> CtorFn(118,3655
      Add(121,3743
#define LLVM_INSTANTIATE_REGISTRY(137,4382

/usr/include/llvm/Support/ReverseIteration.h,45
#define LLVM_SUPPORT_REVERSEITERATION_H2,40

/usr/include/llvm/Support/SHA1.h,443
#define LLVM_SUPPORT_SHA1_H16,681
class SHA1 26,862
  SHA1(28,883
  void init(31,943
  void update(34,983
  void update(37,1047
  std::array<std::array43,1315
  std::array<std::array49,1599
  static std::array<std::array52,1694
  enum { BLOCK_LENGTH 57,1872
  enum { HASH_LENGTH 58,1902
      uint8_t C[C63,1975
    } Buffer;65,2042
    uint32_t ByteCount;67,2093
    uint8_t BufferOffset;68,2117
  } InternalState;69,2143

/usr/include/llvm/Support/SHA256.h,462
#define LLVM_SUPPORT_SHA256_H23,859
class SHA256 33,1001
  explicit SHA256(35,1024
  void init(38,1095
  void update(41,1135
  void update(44,1199
  std::array<std::array50,1469
  std::array<std::array56,1757
  static std::array<std::array59,1854
  enum { BLOCK_LENGTH 64,2032
  enum { HASH_LENGTH 65,2062
      uint8_t C[C70,2135
    } Buffer;72,2202
    uint32_t ByteCount;74,2253
    uint8_t BufferOffset;75,2277
  } InternalState;76,2303

/usr/include/llvm/Support/SMLoc.h,319
#define LLVM_SUPPORT_SMLOC_H15,603
class SMLoc 23,733
  constexpr bool isValid(29,817
  constexpr const char *getPointer(getPointer34,1037
  static SMLoc getFromPointer(36,1097
class SMRange 48,1480
  SMLoc Start,50,1504
  SMLoc Start, End;50,1504
  SMRange(53,1548
  SMRange(54,1577
  bool isValid(59,1759

/usr/include/llvm/Support/SMTAPI.h,585
#define LLVM_SUPPORT_SMTAPI_H15,605
class SMTSort 26,840
  virtual bool isBitvectorSort(32,996
  virtual bool isFloatSort(35,1147
  virtual bool isBooleanSort(38,1285
  virtual unsigned getBitvectorSortSize(42,1466
  virtual unsigned getFloatSortSize(51,1799
  virtual void Profile(58,2008
  friend bool operator==(operator==67,2224
using SMTSortRef 97,3262
class SMTExpr 100,3336
  bool operator<(105,3416
  friend bool operator==(operator==114,3632
using SMTExprRef 129,4110
class SMTSolver 136,4408
  SMTSortRef getFloatSort(144,4605
using SMTSolverRef 440,16561

/usr/include/llvm/Support/SaveAndRestore.h,536
#define LLVM_SUPPORT_SAVEANDRESTORE_H16,592
template <typename T> struct SaveAndRestore 23,749
  SaveAndRestore(24,795
  SaveAndRestore(25,841
  SaveAndRestore(26,921
  ~SaveAndRestore(29,1024
  const T &get(get30,1073
  T &X;X33,1121
  T OldValue;34,1129
template <typename T> SaveAndRestore(T &) -> SaveAndRestore<SaveAndRestore38,1176
template <typename T> SaveAndRestore(T &, const T &) -> SaveAndRestore<SaveAndRestore39,1240
template <typename T> SaveAndRestore(T &, T &&) -> SaveAndRestore<SaveAndRestore40,1315

/usr/include/llvm/Support/ScaledNumber.h,4185
#define LLVM_SUPPORT_SCALEDNUMBER_H22,1045
inline std::pair<uint32_t, int16_t> getRounded32(64,2330
inline std::pair<uint64_t, int16_t> getRounded64(70,2576
inline std::pair<DigitsT, int16_t> getAdjusted(79,2932
inline std::pair<uint32_t, int16_t> getAdjusted32(94,3554
inline std::pair<uint64_t, int16_t> getAdjusted64(100,3791
inline std::pair<DigitsT, int16_t> getProduct(114,4319
inline std::pair<uint32_t, int16_t> getProduct32(124,4683
inline std::pair<uint64_t, int16_t> getProduct64(129,4839
std::pair<DigitsT, int16_t> getQuotient(153,5682
inline std::pair<uint32_t, int16_t> getQuotient32(170,6275
inline std::pair<uint64_t, int16_t> getQuotient64(176,6502
inline std::pair<int32_t, int> getLgImpl(188,6942
template <class DigitsT> int32_t getLg(214,7758
template <class DigitsT> int32_t getLgFloor(223,8022
template <class DigitsT> int32_t getLgCeiling(233,8329
int compare(252,9017
int16_t matchScales(287,10262
std::pair<DigitsT, int16_t> getSum(333,11688
inline std::pair<uint32_t, int16_t> getSum32(356,12552
inline std::pair<uint64_t, int16_t> getSum64(362,12805
std::pair<DigitsT, int16_t> getDifference(373,13213
inline std::pair<uint32_t, int16_t> getDifference32(399,14213
inline std::pair<uint64_t, int16_t> getDifference64(407,14598
namespace llvm 417,14995
class ScaledNumberBase 420,15032
  static int countLeadingZeros32(429,15409
  static int countLeadingZeros64(430,15487
  static uint64_t getHalf(431,15565
  static std::pair<std::pair433,15635
  static std::pair<uint64_t, bool> splitSigned(433,15635
  static int64_t joinSigned(439,15872
template <class DigitsT> class ScaledNumber 493,18462
  typedef DigitsT DigitsType;498,18645
  typedef std::numeric_limits<DigitsType> DigitsLimits;501,18685
  static constexpr int Width 503,18742
  DigitsType Digits 507,18873
  int16_t Scale 508,18898
  constexpr ScaledNumber(513,18957
  ScaledNumber(517,19066
  static ScaledNumber getZero(521,19172
  static ScaledNumber getOne(522,19235
  static ScaledNumber getLargest(523,19297
  static ScaledNumber get(526,19409
  static ScaledNumber getInverse(527,19479
  static ScaledNumber getFraction(530,19558
  int16_t getScale(534,19657
  DigitsType getDigits(535,19702
  bool isZero(543,19937
  bool isLargest(544,19979
  bool isOne(545,20038
  int32_t lg(554,20273
  int32_t lgFloor(559,20456
  int32_t lgCeiling(564,20651
  bool operator==(operator==568,20741
  bool operator<(569,20816
  bool operator!=(operator!=570,20889
  bool operator>(571,20964
  bool operator<=(operator<=572,21037
  bool operator>=(operator>=573,21112
  bool operator!(575,21188
  std::string toString(596,22151
  raw_ostream &print(print603,22391
  void dump(607,22574
  ScaledNumber &operator+=(operator+=609,22652
  ScaledNumber &operator-=(operator-=617,22931
  ScaledNumber &operator<<=(operator<<=624,23209
  ScaledNumber &operator>>=(operator>>=628,23298
  ScaledNumber matchScales(644,23765
  uint64_t scaleByInverse(655,24126
  int64_t scale(660,24302
  int64_t scaleByInverse(664,24461
  int compare(669,24639
  int compareTo(672,24757
  int compareTo(675,24863
  ScaledNumber &invert(invert677,24944
  ScaledNumber inverse(678,25018
  static ScaledNumber getProduct(681,25100
  static ScaledNumber getQuotient(684,25219
  static int countLeadingZerosWidth(688,25359
  static ScaledNumber adjustToWidth(701,25782
  static ScaledNumber getRounded(709,26112
#define SCALED_NUMBER_BOP(718,26304
#undef SCALED_NUMBER_BOP728,26817
ScaledNumber<DigitsT> operator<<(731,26868
ScaledNumber<DigitsT> operator>>(737,27056
raw_ostream &operator<<(operator<<743,27244
#define SCALED_NUMBER_COMPARE_TO_TYPE(747,27348
#define SCALED_NUMBER_COMPARE_TO(756,28000
#undef SCALED_NUMBER_COMPARE_TO767,28556
#undef SCALED_NUMBER_COMPARE_TO_TYPE768,28588
IntT ScaledNumber<DigitsT>::toInt(toInt781,28954
  typedef std::numeric_limits<IntT> Limits;782,28998
operator*=(operator*=802,29422
operator/=(operator/=819,29810
template <class DigitsT> void ScaledNumber<DigitsT>::shiftLeft(shiftLeft834,30139
template <class DigitsT> void ScaledNumber<DigitsT>::shiftRight(shiftRight864,30788

/usr/include/llvm/Support/ScopedPrinter.h,6971
#define LLVM_SUPPORT_SCOPEDPRINTER_H10,407
template <typename T> struct EnumEntry 24,763
  StringRef Name;25,804
  StringRef AltName;33,1206
  T Value;34,1227
  constexpr EnumEntry(35,1238
  constexpr EnumEntry(37,1332
struct HexNumber 40,1411
  HexNumber(45,1723
  HexNumber(46,1793
  HexNumber(47,1870
  HexNumber(48,1949
  HexNumber(49,2024
  HexNumber(50,2101
  HexNumber(52,2194
  HexNumber(53,2245
  HexNumber(54,2297
  HexNumber(55,2347
  HexNumber(56,2398
  uint64_t Value;57,2454
struct FlagEntry 60,2476
  FlagEntry(61,2495
  FlagEntry(63,2599
  FlagEntry(65,2710
  FlagEntry(67,2823
  FlagEntry(69,2932
  FlagEntry(71,3043
  FlagEntry(73,3164
  FlagEntry(74,3243
  FlagEntry(75,3323
  FlagEntry(76,3401
  FlagEntry(77,3480
  StringRef Name;79,3570
  uint64_t Value;80,3588
raw_ostream &operator<<(raw_ostream &OS, const HexNumber &Value)Value83,3610
template <class T> std::string to_string(85,3677
template <typename T,92,3840
std::string enumToString(93,3878
class ScopedPrinter 100,4120
  enum class ScopedPrinterKind 102,4150
    Base,103,4183
    JSON,104,4193
  ScopedPrinter(107,4209
  ScopedPrinterKind getKind(111,4339
  static bool classof(113,4393
  void flush(119,4539
  void indent(121,4571
  void unindent(123,4629
  void resetIndent(127,4735
  int getIndentLevel(129,4778
  void setPrefix(131,4826
  void printIndent(133,4873
  template <typename T> HexNumber hex(139,4979
  template <typename T,141,5056
  void printEnum(142,5096
  template <typename T,160,5501
  void printFlags(161,5541
  template <typename T> void printFlags(188,6403
  virtual void printNumber(201,6738
  virtual void printNumber(205,6870
  virtual void printNumber(209,7009
  virtual void printNumber(213,7155
  virtual void printNumber(217,7270
  virtual void printNumber(221,7394
  virtual void printNumber(225,7507
  virtual void printNumber(229,7629
  virtual void printNumber(233,7743
  virtual void printNumber(237,7866
  virtual void printNumber(241,7985
  virtual void printNumber(245,8113
  virtual void printNumber(249,8236
  virtual void printNumber(253,8368
  void printNumber(258,8525
  virtual void printBoolean(262,8643
  template <typename... T> void printVersion(266,8775
  void printList(273,8980
  virtual void printList(280,9206
  virtual void printList(284,9314
  virtual void printList(288,9429
  virtual void printList(292,9541
  virtual void printList(296,9653
  virtual void printList(300,9765
  virtual void printList(307,9994
  virtual void printList(311,10105
  virtual void printList(315,10216
  virtual void printList(319,10327
  virtual void printList(326,10549
  template <typename T,330,10659
  void printList(331,10695
  template <typename T> void printHexList(341,10926
  template <typename T> void printHex(348,11149
  template <typename T> void printHex(352,11257
  void printSymbolOffset(357,11409
  virtual void printString(361,11539
  virtual void printString(363,11618
  void printStringEscaped(367,11737
  void printBinary(371,11846
  void printBinary(375,11976
  void printBinary(381,12193
  void printBinary(385,12316
  void printBinary(391,12526
  void printBinaryBlock(397,12731
  void printBinaryBlock(402,12917
  void printBinaryBlock(406,13044
  template <typename T> void printObject(412,13253
  virtual void objectBegin(416,13376
  virtual void objectBegin(418,13428
  virtual void objectEnd(420,13502
  virtual void arrayBegin(422,13550
  virtual void arrayBegin(424,13601
  virtual void arrayEnd(426,13674
  virtual raw_ostream &startLine(startLine428,13721
  virtual raw_ostream &getOStream(getOStream433,13797
  template <typename T> void printVersionInternal(436,13858
  template <typename S,440,13951
  template <typename S, typename T,440,13951
  void printVersionInternal(441,14006
  static bool flagName(446,14152
  virtual void printFlagsImpl(454,14448
  virtual void printFlagsImpl(462,14767
  template <typename T> void printListImpl(470,15053
  virtual void printHexListImpl(478,15266
  virtual void printHexImpl(487,15523
  virtual void printHexImpl(491,15643
  virtual void printSymbolOffsetImpl(495,15794
  virtual void printNumberImpl(500,15995
  virtual void printStringEscapedImpl(505,16180
  void scopedBegin(511,16338
  void scopedBegin(516,16426
  void scopedEnd(524,16589
  raw_ostream &OS;OS529,16677
  int IndentLevel 530,16696
  StringRef Prefix;531,16719
  ScopedPrinterKind Kind;532,16739
ScopedPrinter::printHex<printHex537,16793
class JSONScopedPrinter 544,17013
  enum class Scope 546,17071
    Array,547,17092
    Object,548,17103
  enum class ScopeKind 551,17121
    NoAttribute,552,17146
    Attribute,553,17163
    NestedAttribute,554,17178
  struct ScopeContext 557,17205
    Scope Context;558,17229
    ScopeKind Kind;559,17248
    ScopeContext(560,17268
  SmallVector<SmallVector564,17389
  SmallVector<ScopeContext, 8> ScopeHistory;564,17389
  json::OStream JOS;565,17434
  std::unique_ptr<DelimitedScope> OuterScope;566,17455
  static bool classof(573,17701
  void printNumber(577,17823
  void printNumber(581,17920
  void printNumber(585,18024
  void printNumber(589,18130
  void printNumber(593,18228
  void printNumber(597,18335
  void printNumber(601,18431
  void printNumber(605,18536
  void printNumber(609,18633
  void printNumber(613,18739
  void printNumber(617,18841
  void printNumber(621,18952
  void printNumber(625,19050
  void printNumber(629,19149
  void printBoolean(635,19301
  void printList(639,19399
  void printList(643,19508
  void printList(647,19624
  void printList(651,19737
  void printList(655,19850
  void printList(659,19963
  void printList(663,20075
  void printList(667,20187
  void printList(671,20299
  void printList(675,20411
  void printList(679,20522
  void printString(687,20722
  void printString(689,20790
  void objectBegin(693,20892
  void objectBegin(697,20987
  void objectEnd(701,21078
  void arrayBegin(703,21124
  void arrayBegin(707,21217
  void arrayEnd(711,21306
  uint64_t hexNumberToInt(715,21428
  void printAPSInt(717,21492
  void printFlagsImpl(722,21596
  void printFlagsImpl(737,22071
  template <typename T> void printListImpl(749,22433
  void printHexListImpl(756,22622
  void printHexImpl(765,22873
  void printHexImpl(769,22992
  void printSymbolOffsetImpl(776,23211
  void printNumberImpl(784,23478
  void printBinaryImpl(795,23792
  void scopedBegin(808,24213
  void scopedBegin(816,24439
  void scopedEnd(826,24749
struct DelimitedScope 841,25195
  DelimitedScope(842,25219
  DelimitedScope(843,25265
  ScopedPrinter *W;W846,25388
struct DictScope 849,25412
  explicit DictScope(851,25482
  DictScope(853,25563
  void setPrinter(857,25655
  ~DictScope(862,25746
struct ListScope 868,25804
  explicit ListScope(870,25874
  ListScope(872,25954
  void setPrinter(876,26045
  ~ListScope(881,26135

/usr/include/llvm/Support/Signals.h,38
#define LLVM_SUPPORT_SIGNALS_H15,626

/usr/include/llvm/Support/Signposts.h,123
#define LLVM_SUPPORT_SIGNPOSTS_H17,780
class SignpostEmitter 27,984
  std::unique_ptr<SignpostEmitterImpl> Impl;28,1008

/usr/include/llvm/Support/SmallVectorMemoryBuffer.h,344
#define LLVM_SUPPORT_SMALLVECTORMEMORYBUFFER_H15,604
class SmallVectorMemoryBuffer 29,1082
  SmallVectorMemoryBuffer(32,1222
  SmallVectorMemoryBuffer(39,1571
  StringRef getBufferIdentifier(52,1976
  BufferKind getBufferKind(54,2049
  SmallVector<SmallVector57,2135
  SmallVector<char, 0> SV;57,2135
  std::string BufferName;58,2162

/usr/include/llvm/Support/SuffixTree.h,980
#define LLVM_SUPPORT_SUFFIXTREE_H33,1639
class SuffixTree 40,1800
  ArrayRef<unsigned> Str;43,1903
  struct RepeatedSubstring 46,1970
    unsigned Length;48,2033
    SmallVector<unsigned> StartIndices;51,2101
  SpecificBumpPtrAllocator<SuffixTreeInternalNode> InternalNodeAllocator;56,2200
  SpecificBumpPtrAllocator<SuffixTreeLeafNode> LeafNodeAllocator;58,2314
  struct ActiveState 71,2784
  ActiveState Active;84,3206
  struct RepeatedSubstringIterator 140,5550
    RepeatedSubstring RS;146,5731
    SmallVector<SuffixTreeInternalNode *> InternalNodesToVisit;149,5791
    RepeatedSubstring &operator*(operator*162,6271
    RepeatedSubstringIterator &operator++(operator++164,6322
    RepeatedSubstringIterator operator++(169,6412
    bool operator==(operator==175,6546
    bool operator!=(operator!=178,6647
    RepeatedSubstringIterator(182,6754
  typedef RepeatedSubstringIterator iterator;193,7076
  iterator begin(194,7122
  iterator end(195,7168

/usr/include/llvm/Support/SuffixTreeNode.h,728
#define LLVM_SUPPORT_SUFFIXTREE_NODE_H27,1303
struct SuffixTreeNode 33,1460
  enum class NodeKind 37,1587
  enum class NodeKind { ST_Leaf,37,1587
  enum class NodeKind { ST_Leaf, ST_Internal 37,1587
  const NodeKind Kind;40,1645
  NodeKind getKind(51,1937
  unsigned getStartIdx(54,2059
struct SuffixTreeInternalNode 74,2662
  unsigned EndIdx 82,3037
  SuffixTreeInternalNode *Link Link102,4223
  static bool classof(106,4302
  DenseMap<DenseMap127,5067
  DenseMap<unsigned, SuffixTreeNode *> Children;127,5067
  SuffixTreeInternalNode(129,5117
struct SuffixTreeLeafNode 138,5413
  unsigned SuffixIdx 141,5529
  unsigned *EndIdx EndIdx149,5880
  static bool classof(153,5947
  SuffixTreeLeafNode(165,6380

/usr/include/llvm/Support/SystemUtils.h,42
#define LLVM_SUPPORT_SYSTEMUTILS_H15,592

/usr/include/llvm/Support/TarWriter.h,150
#define LLVM_SUPPORT_TARWRITER_H10,403
class TarWriter 18,589
  raw_fd_ostream OS;27,861
  std::string BaseDir;28,882
  StringSet<> Files;29,905

/usr/include/llvm/Support/TargetSelect.h,510
#define LLVM_SUPPORT_TARGETSELECT_H16,661
#define LLVM_TARGET(22,825
#define LLVM_TARGET(25,940
#define LLVM_TARGET(29,1130
#define LLVM_ASM_PRINTER(33,1320
#define LLVM_ASM_PARSER(37,1520
#define LLVM_DISASSEMBLER(41,1714
#define LLVM_TARGETMCA(46,1915
namespace llvm 50,2037
#define LLVM_TARGET(57,2390
#define LLVM_TARGET(70,2922
#define LLVM_TARGET(80,3366
#define LLVM_ASM_PRINTER(90,3799
#define LLVM_ASM_PARSER(100,4240
#define LLVM_DISASSEMBLER(110,4686
#define LLVM_TARGETMCA(171,6730

/usr/include/llvm/Support/ThreadPool.h,1348
#define LLVM_SUPPORT_THREADPOOL_H14,545
class ThreadPool 52,1884
  ThreadPool(58,2152
  ~ThreadPool(61,2293
  template <typename Function,65,2471
  auto async(66,2520
  template <typename Function,73,2756
  auto async(74,2805
  auto async(Func &&F) -> std::shared_future<shared_future83,3209
      -> std::shared_future<shared_future90,3461
  unsigned getThreadCount(110,4381
  static std::pair<std::pair120,4766
  createTaskAndFuture(121,4828
  static std::pair<std::pair129,5137
  createTaskAndFuture(130,5198
  std::shared_future<ResTy> asyncImpl(148,5945
  std::vector<llvm::thread> Threads;190,7403
  mutable llvm::sys::RWMutex ThreadsLock;192,7492
  std::deque<std::deque195,7582
  std::deque<std::pair<std::function<void()>, ThreadPoolTaskGroup *>> Tasks;195,7582
  std::mutex QueueLock;198,7719
  std::condition_variable QueueCondition;199,7743
  std::condition_variable CompletionCondition;202,7858
  DenseMap<DenseMap207,8068
  DenseMap<ThreadPoolTaskGroup *, unsigned> ActiveGroups;207,8068
  const ThreadPoolStrategy Strategy;214,8292
  const unsigned MaxThreadCount;217,8396
class ThreadPoolTaskGroup 224,8725
  ThreadPoolTaskGroup(227,8831
  ~ThreadPoolTaskGroup(231,9005
  template <typename Function,234,9091
  inline auto async(235,9140
  void wait(241,9358
  ThreadPool &Pool;Pool244,9404

/usr/include/llvm/Support/Threading.h,813
#define LLVM_SUPPORT_THREADING_H15,582
#define LLVM_THREADING_USE_STD_CALL_ONCE 27,1001
#define LLVM_THREADING_USE_STD_CALL_ONCE 34,1446
#define LLVM_THREADING_USE_STD_CALL_ONCE 37,1627
#define LLVM_THREADING_USE_STD_CALL_ONCE 39,1676
  typedef std::once_flag once_flag;57,2065
  enum InitStatus 61,2109
  enum InitStatus { Uninitialized 61,2109
  enum InitStatus { Uninitialized = 0, Wait 61,2109
  enum InitStatus { Uninitialized = 0, Wait = 1, Done 61,2109
  struct once_flag 68,2426
  class ThreadPoolStrategy 116,3864
  enum class ThreadPriority 240,9547
    Background 244,9754
    Low 250,10017
    Default 253,10109
  enum class SetThreadPriorityResult 255,10131
  enum class SetThreadPriorityResult { FAILURE,255,10131
  enum class SetThreadPriorityResult { FAILURE, SUCCESS 255,10131

/usr/include/llvm/Support/TimeProfiler.h,277
#define LLVM_SUPPORT_TIMEPROFILER_H77,3165
struct TimeTraceScope 134,5450
  TimeTraceScope &operator=operator138,5555
  TimeTraceScope &operator=operator140,5663
  TimeTraceScope(142,5721
  TimeTraceScope(146,5862
  TimeTraceScope(150,6014
  ~TimeTraceScope(154,6190

/usr/include/llvm/Support/Timer.h,1589
#define LLVM_SUPPORT_TIMER_H10,399
class TimeRecord 25,659
  static TimeRecord getCurrentTime(38,1338
  double getProcessTime(40,1394
  double getUserTime(41,1460
  double getSystemTime(42,1510
  double getWallTime(43,1564
  ssize_t getMemUsed(44,1614
  uint64_t getInstructionsExecuted(45,1663
  void print(69,2466
class Timer 79,3017
  TimeRecord Time;80,3031
  TimeRecord StartTime;81,3089
  std::string Name;82,3161
  std::string Description;83,3226
  bool Running 84,3294
  bool Triggered 85,3359
  TimerGroup *TG TG86,3427
  Timer **Prev Prev88,3494
  Timer *Next Next89,3574
  explicit Timer(91,3640
  Timer(94,3751
  Timer(97,3873
  const Timer &operator=(operator=100,3966
  const std::string &getName(getName111,4337
  const std::string &getDescription(getDescription112,4391
  bool isInitialized(113,4459
  bool isRunning(116,4562
  bool hasTriggered(119,4672
  TimeRecord getTotalTime(133,5066
class TimeRegion 143,5468
  Timer *T;T144,5487
  explicit TimeRegion(148,5551
  explicit TimeRegion(151,5618
  ~TimeRegion(154,5691
struct NamedRegionTimer 163,6035
class TimerGroup 173,6592
  struct PrintRecord 174,6611
    TimeRecord Time;175,6634
    std::string Name;176,6655
    std::string Description;177,6677
    PrintRecord(181,6824
    bool operator <(operator <185,6998
  std::string Name;189,7095
  std::string Description;190,7115
  Timer *FirstTimer FirstTimer191,7142
  std::vector<PrintRecord> TimersToPrint;192,7204
  TimerGroup **Prev;Prev194,7247
  TimerGroup *Next;Next195,7327
  void setName(207,7696

/usr/include/llvm/Support/ToolOutputFile.h,453
#define LLVM_SUPPORT_TOOLOUTPUTFILE_H14,543
class ToolOutputFile 26,981
  class CleanupInstaller 31,1278
    std::string Filename;34,1345
    bool Keep;37,1444
    StringRef getFilename(39,1460
  } Installer;42,1585
  std::optional<raw_fd_ostream> OSHolder;46,1717
  raw_fd_ostream *OS;OS49,1792
  raw_fd_ostream &os(os60,2101
  StringRef getFilename(63,2185
  void keep(67,2366
  const std::string &outputFilename(outputFilename69,2408

/usr/include/llvm/Support/Unicode.h,352
#define LLVM_SUPPORT_UNICODE_H15,584
enum ColumnWidthErrors 27,761
  ErrorInvalidUTF8 28,786
  ErrorNonPrintableCharacter 29,811
struct LooseMatchingResult 72,2686
  char32_t CodePoint;73,2715
  SmallString<64> Name;74,2737
struct MatchForCodepointName 79,2847
  std::string Name;80,2878
  uint32_t Distance 81,2898
  char32_t Value 82,2923

/usr/include/llvm/Support/UnicodeCharRanges.h,424
#define LLVM_SUPPORT_UNICODECHARRANGES_H9,410
#define DEBUG_TYPE 17,610
struct UnicodeCharRange 23,743
  uint32_t Lower;24,769
  uint32_t Upper;25,787
class UnicodeCharSet 38,1167
  typedef ArrayRef<UnicodeCharRange> CharRanges;40,1198
  constexpr UnicodeCharSet(55,1888
  UnicodeCharSet(57,1960
  bool contains(64,2141
  bool rangesAreValid(71,2401
  const CharRanges Ranges;95,3205
#undef DEBUG_TYPE 101,3276

/usr/include/llvm/Support/VCSRevision.h,53
#undef LLVM_REVISION1,0
#undef LLVM_REPOSITORY2,21

/usr/include/llvm/Support/Valgrind.h,39
#define LLVM_SUPPORT_VALGRIND_H16,719

/usr/include/llvm/Support/Watchdog.h,113
#define LLVM_SUPPORT_WATCHDOG_H14,543
    class Watchdog 25,920
      Watchdog(27,953
      ~Watchdog(28,991

/usr/include/llvm/Support/WindowsError.h,43
#define LLVM_SUPPORT_WINDOWSERROR_H10,406

/usr/include/llvm/Support/circular_raw_ostream.h,479
#define LLVM_SUPPORT_CIRCULAR_RAW_OSTREAM_H15,608
  class circular_raw_ostream 24,910
    bool OwnsStream;46,1614
    size_t BufferSize;50,1698
    char *Cur;Cur58,1887
    const char *Banner;Banner68,2140
    void flushBuffer(72,2238
    void write_impl(82,2552
    circular_raw_ostream(107,3571
    ~circular_raw_ostream(117,3956
    bool is_displayed(124,4099
    void setStream(133,4408
    void flushBufferWithBanner(142,4662
    void releaseStream(149,4892

/usr/include/llvm/Support/raw_os_ostream.h,130
#define LLVM_SUPPORT_RAW_OS_OSTREAM_H14,543
class raw_os_ostream 24,862
  std::ostream &OS;OS25,906
  raw_os_ostream(35,1205

/usr/include/llvm/Support/raw_sha1_ostream.h,256
#define LLVM_SUPPORT_RAW_SHA1_OSTREAM_H14,547
class raw_sha1_ostream 23,773
  SHA1 State;24,819
  void write_impl(27,869
  std::array<std::array33,1071
  std::array<uint8_t, 20> sha1(33,1071
  void resetHash(39,1210
  uint64_t current_pos(41,1248

/usr/include/llvm/Support/thread.h,1825
#define LLVM_SUPPORT_THREAD_H17,790
typedef unsigned long DWORD;23,893
typedef void *PVOID;PVOID24,922
typedef PVOID HANDLE;25,943
class thread 38,1161
  template <typename CalleeTuple> static void GenericThreadProxy(39,1176
  template <typename CalleeTuple> static void *ThreadProxy(ThreadProxy54,1634
  static unsigned __stdcall ThreadProxy(64,1937
  static const std::optional<unsigned> DefaultStackSize;70,2058
  thread(72,2116
  thread(73,2161
  explicit thread(77,2308
  ~thread(85,2593
  thread &operator=(operator=90,2656
  bool joinable(97,2834
  native_handle_type native_handle(101,2949
  static unsigned hardware_concurrency(103,3021
  void swap(110,3165
  native_handle_type Thread;113,3254
thread::thread(thread125,3750
  typedef std::tuple<std::decay_t<Function>, std::decay_t<Args>...> CalleeTuple;127,3854
thread::id thread::get_id(get_id137,4255
void thread::join(join141,4345
void thread::detach(detach146,4436
namespace this_thread 151,4531
inline thread::id get_id(152,4555
class thread 159,4796
  using native_handle_type 161,4819
  using id 162,4881
  thread(164,4912
  thread(165,4950
  explicit thread(169,5090
  explicit thread(174,5316
  ~thread(178,5425
  thread &operator=(operator=180,5441
  bool joinable(185,5568
  id get_id(187,5632
  native_handle_type native_handle(189,5690
  static unsigned hardware_concurrency(191,5772
  inline void join(195,5869
  inline void detach(196,5909
  void swap(198,5954
  std::thread Thread;201,6043
namespace this_thread 204,6069
  inline thread::id get_id(205,6093
namespace llvm 216,6270
struct thread 218,6288
  thread(219,6304
  thread(220,6318
  explicit thread(222,6389
  explicit thread(227,6582
  void detach(232,6708
  void join(236,6853
  static unsigned hardware_concurrency(237,6870

/usr/include/llvm/Support/type_traits.h,617
#define LLVM_SUPPORT_TYPE_TRAITS_H14,568
template <typename T> class is_integral_or_enum 30,1153
template<typename T,43,1620
template<typename T, typename Enable 43,1620
  using type 49,1847
template<typename T,54,1960
template<typename T, typename Enable 54,1960
  using type 59,2160
template <typename T,62,2213
template <typename T, typename Enable 62,2213
  using type 68,2425
namespace detail 71,2486
union trivial_helper 73,2523
    T t;74,2546
struct is_copy_assignable 80,2608
    static constexpr bool value 84,2797
struct is_move_assignable 88,2892
    static constexpr bool value 92,3076

/usr/include/llvm/Support/xxhash.h,38
#define LLVM_SUPPORT_XXHASH_H39,1749

/usr/include/llvm/Support/SystemZ/zOSSupport.h,145
#define LLVM_SUPPORT_ZOSSUPPORT_H14,555
inline char *strsignal(strsignal22,770
inline pid_t wait4(30,978
inline std::size_t strnlen(40,1387

/usr/include/llvm/Support/AMDGPUAddrSpace.h,968
#define LLVM_SUPPORT_AMDGPUADDRSPACE_H16,546
enum : unsigned 26,923
  MAX_AMDGPU_ADDRESS 28,1020
  FLAT_ADDRESS 30,1047
  GLOBAL_ADDRESS 31,1105
  REGION_ADDRESS 32,1178
  CONSTANT_ADDRESS 34,1245
  LOCAL_ADDRESS 35,1316
  PRIVATE_ADDRESS 36,1377
  CONSTANT_ADDRESS_32BIT 38,1441
  BUFFER_FAT_POINTER 40,1519
  BUFFER_RESOURCE 43,1650
  BUFFER_STRIDED_POINTER 45,1723
  STREAMOUT_REGISTER 49,1923
  PARAM_D_ADDRESS 53,2108
  PARAM_I_ADDRESS 55,2201
  CONSTANT_BUFFER_0 63,2442
  CONSTANT_BUFFER_1 64,2467
  CONSTANT_BUFFER_2 65,2492
  CONSTANT_BUFFER_3 66,2518
  CONSTANT_BUFFER_4 67,2544
  CONSTANT_BUFFER_5 68,2570
  CONSTANT_BUFFER_6 69,2596
  CONSTANT_BUFFER_7 70,2622
  CONSTANT_BUFFER_8 71,2648
  CONSTANT_BUFFER_9 72,2674
  CONSTANT_BUFFER_10 73,2700
  CONSTANT_BUFFER_11 74,2727
  CONSTANT_BUFFER_12 75,2754
  CONSTANT_BUFFER_13 76,2781
  CONSTANT_BUFFER_14 77,2808
  CONSTANT_BUFFER_15 78,2835
  UNKNOWN_ADDRESS_SPACE 81,2931

/usr/include/llvm/Support/AMDGPUMetadata.h,3590
#define LLVM_SUPPORT_AMDGPUMETADATA_H16,572
enum class AccessQualifier 52,1698
  Default 53,1737
  ReadOnly 54,1754
  WriteOnly 55,1771
  ReadWrite 56,1788
  Unknown 57,1805
enum class AddressSpaceQualifier 61,1858
  Private 62,1903
  Global 63,1919
  Constant 64,1935
  Local 65,1951
  Generic 66,1967
  Region 67,1983
  Unknown 68,1999
enum class ValueKind 72,2038
  ByValue 73,2071
  GlobalBuffer 74,2101
  DynamicSharedPointer 75,2131
  Sampler 76,2161
  Image 77,2191
  Pipe 78,2221
  Queue 79,2251
  HiddenGlobalOffsetX 80,2281
  HiddenGlobalOffsetY 81,2311
  HiddenGlobalOffsetZ 82,2341
  HiddenNone 83,2371
  HiddenPrintfBuffer 84,2402
  HiddenDefaultQueue 85,2433
  HiddenCompletionAction 86,2464
  HiddenMultiGridSyncArg 87,2495
  HiddenHostcallBuffer 88,2526
  Unknown 89,2557
enum class ValueType 94,2693
  Struct 95,2726
  I8 96,2741
  U8 97,2756
  I16 98,2771
  U16 99,2786
  F16 100,2801
  I32 101,2816
  U32 102,2831
  F32 103,2846
  I64 104,2861
  U64 105,2876
  F64 106,2892
  Unknown 107,2908
struct Metadata final 132,3869
namespace Arg 163,5010
namespace Key 165,5027
struct Metadata final 199,6437
namespace CodeProps 238,7867
namespace Key 240,7890
struct Metadata final 268,9387
namespace DebugProps 322,11522
namespace Key 324,11546
struct Metadata final 340,12333
namespace Key 376,13721
constexpr char Name[Name378,13774
constexpr char SymbolName[SymbolName380,13849
constexpr char Language[Language382,13934
constexpr char LanguageVersion[LanguageVersion384,14022
constexpr char Attrs[Attrs386,14114
constexpr char Args[Args388,14185
constexpr char CodeProps[CodeProps390,14259
constexpr char DebugProps[DebugProps392,14344
struct Metadata final 396,14461
namespace Key 420,15283
constexpr char Version[Version422,15336
constexpr char Printf[Printf424,15410
constexpr char Kernels[Kernels426,15483
struct Metadata final 430,15591
namespace V3 451,16399
constexpr uint32_t VersionMajor 453,16446
constexpr uint32_t VersionMinor 455,16515
constexpr char AssemblerDirectiveBegin[AssemblerDirectiveBegin458,16601
constexpr char AssemblerDirectiveEnd[AssemblerDirectiveEnd460,16709
namespace PALMD 468,17002
constexpr char AssemblerDirective[AssemblerDirective471,17079
constexpr char AssemblerDirectiveBegin[AssemblerDirectiveBegin474,17215
constexpr char AssemblerDirectiveEnd[AssemblerDirectiveEnd477,17349
enum Key 480,17442
  R_2E12_COMPUTE_PGM_RSRC1 481,17464
  R_2D4A_SPI_SHADER_PGM_RSRC1_LS 482,17501
  R_2D0A_SPI_SHADER_PGM_RSRC1_HS 483,17544
  R_2CCA_SPI_SHADER_PGM_RSRC1_ES 484,17587
  R_2C8A_SPI_SHADER_PGM_RSRC1_GS 485,17630
  R_2C4A_SPI_SHADER_PGM_RSRC1_VS 486,17673
  R_2C0A_SPI_SHADER_PGM_RSRC1_PS 487,17716
  R_2E00_COMPUTE_DISPATCH_INITIATOR 488,17759
  R_A1B3_SPI_PS_INPUT_ENA 489,17805
  R_A1B4_SPI_PS_INPUT_ADDR 490,17841
  R_A1B6_SPI_PS_IN_CONTROL 491,17878
  R_A2D5_VGT_SHADER_STAGES_EN 492,17915
  LS_NUM_USED_VGPRS 494,17956
  HS_NUM_USED_VGPRS 495,17990
  ES_NUM_USED_VGPRS 496,18024
  GS_NUM_USED_VGPRS 497,18058
  VS_NUM_USED_VGPRS 498,18092
  PS_NUM_USED_VGPRS 499,18126
  CS_NUM_USED_VGPRS 500,18160
  LS_NUM_USED_SGPRS 502,18195
  HS_NUM_USED_SGPRS 503,18229
  ES_NUM_USED_SGPRS 504,18263
  GS_NUM_USED_SGPRS 505,18297
  VS_NUM_USED_SGPRS 506,18331
  PS_NUM_USED_SGPRS 507,18365
  CS_NUM_USED_SGPRS 508,18399
  LS_SCRATCH_SIZE 510,18434
  HS_SCRATCH_SIZE 511,18466
  ES_SCRATCH_SIZE 512,18498
  GS_SCRATCH_SIZE 513,18530
  VS_SCRATCH_SIZE 514,18562
  PS_SCRATCH_SIZE 515,18594
  CS_SCRATCH_SIZE 516,18626

/usr/include/llvm/Support/AMDHSAKernelDescriptor.h,9296
#define LLVM_SUPPORT_AMDHSAKERNELDESCRIPTOR_H23,897
#define offsetof(30,1054
#define AMDHSA_BITS_ENUM_ENTRY(36,1308
#define AMDHSA_BITS_GET(44,1627
#define AMDHSA_BITS_SET(49,1805
enum : uint8_t 58,2059
  FLOAT_ROUND_MODE_NEAR_EVEN 59,2076
  FLOAT_ROUND_MODE_PLUS_INFINITY 60,2110
  FLOAT_ROUND_MODE_MINUS_INFINITY 61,2148
  FLOAT_ROUND_MODE_ZERO 62,2187
enum : uint8_t 66,2284
  FLOAT_DENORM_MODE_FLUSH_SRC_DST 67,2301
  FLOAT_DENORM_MODE_FLUSH_DST 68,2340
  FLOAT_DENORM_MODE_FLUSH_SRC 69,2375
  FLOAT_DENORM_MODE_FLUSH_NONE 70,2410
enum : uint8_t 74,2511
  SYSTEM_VGPR_WORKITEM_ID_X 75,2528
  SYSTEM_VGPR_WORKITEM_ID_X_Y 76,2561
  SYSTEM_VGPR_WORKITEM_ID_X_Y_Z 77,2596
  SYSTEM_VGPR_WORKITEM_ID_UNDEFINED 78,2633
#define COMPUTE_PGM_RSRC1(83,2760
#define COMPUTE_PGM_RSRC1_GFX6_GFX8(86,2891
#define COMPUTE_PGM_RSRC1_GFX6_GFX9(89,3042
#define COMPUTE_PGM_RSRC1_GFX6_GFX11(92,3194
#define COMPUTE_PGM_RSRC1_GFX9_PLUS(95,3361
#define COMPUTE_PGM_RSRC1_GFX10_PLUS(98,3507
#define COMPUTE_PGM_RSRC1_GFX12_PLUS(101,3655
enum : int32_t 103,3812
  COMPUTE_PGM_RSRC1(104,3829
  COMPUTE_PGM_RSRC1(GRANULATED_WORKITEM_VGPR_COUNT,104,3829
  COMPUTE_PGM_RSRC1(105,3888
  COMPUTE_PGM_RSRC1(GRANULATED_WAVEFRONT_SGPR_COUNT,105,3888
  COMPUTE_PGM_RSRC1(106,3948
  COMPUTE_PGM_RSRC1(PRIORITY,106,3948
  COMPUTE_PGM_RSRC1(107,3986
  COMPUTE_PGM_RSRC1(FLOAT_ROUND_MODE_32,107,3986
  COMPUTE_PGM_RSRC1(108,4035
  COMPUTE_PGM_RSRC1(FLOAT_ROUND_MODE_16_64,108,4035
  COMPUTE_PGM_RSRC1(109,4087
  COMPUTE_PGM_RSRC1(FLOAT_DENORM_MODE_32,109,4087
  COMPUTE_PGM_RSRC1(110,4137
  COMPUTE_PGM_RSRC1(FLOAT_DENORM_MODE_16_64,110,4137
  COMPUTE_PGM_RSRC1(111,4190
  COMPUTE_PGM_RSRC1(PRIV,111,4190
  COMPUTE_PGM_RSRC1_GFX6_GFX11(112,4224
  COMPUTE_PGM_RSRC1_GFX6_GFX11(ENABLE_DX10_CLAMP,112,4224
  COMPUTE_PGM_RSRC1_GFX12_PLUS(113,4282
  COMPUTE_PGM_RSRC1_GFX12_PLUS(ENABLE_WG_RR_EN,113,4282
  COMPUTE_PGM_RSRC1(114,4338
  COMPUTE_PGM_RSRC1(DEBUG_MODE,114,4338
  COMPUTE_PGM_RSRC1_GFX6_GFX11(115,4378
  COMPUTE_PGM_RSRC1_GFX6_GFX11(ENABLE_IEEE_MODE,115,4378
  COMPUTE_PGM_RSRC1_GFX12_PLUS(116,4435
  COMPUTE_PGM_RSRC1_GFX12_PLUS(DISABLE_PERF,116,4435
  COMPUTE_PGM_RSRC1(117,4488
  COMPUTE_PGM_RSRC1(BULKY,117,4488
  COMPUTE_PGM_RSRC1(118,4523
  COMPUTE_PGM_RSRC1(CDBG_USER,118,4523
  COMPUTE_PGM_RSRC1_GFX6_GFX8(119,4562
  COMPUTE_PGM_RSRC1_GFX6_GFX8(RESERVED0,119,4562
  COMPUTE_PGM_RSRC1_GFX9_PLUS(120,4611
  COMPUTE_PGM_RSRC1_GFX9_PLUS(FP16_OVFL,120,4611
  COMPUTE_PGM_RSRC1(121,4660
  COMPUTE_PGM_RSRC1(RESERVED1,121,4660
  COMPUTE_PGM_RSRC1_GFX6_GFX9(122,4699
  COMPUTE_PGM_RSRC1_GFX6_GFX9(RESERVED2,122,4699
  COMPUTE_PGM_RSRC1_GFX10_PLUS(123,4748
  COMPUTE_PGM_RSRC1_GFX10_PLUS(WGP_MODE,123,4748
  COMPUTE_PGM_RSRC1_GFX10_PLUS(124,4797
  COMPUTE_PGM_RSRC1_GFX10_PLUS(MEM_ORDERED,124,4797
  COMPUTE_PGM_RSRC1_GFX10_PLUS(125,4849
  COMPUTE_PGM_RSRC1_GFX10_PLUS(FWD_PROGRESS,125,4849
#undef COMPUTE_PGM_RSRC1127,4905
#define COMPUTE_PGM_RSRC2(131,5013
#define COMPUTE_PGM_RSRC2_GFX6_GFX11(134,5145
#define COMPUTE_PGM_RSRC2_GFX12_PLUS(137,5313
enum : int32_t 139,5470
  COMPUTE_PGM_RSRC2(140,5487
  COMPUTE_PGM_RSRC2(ENABLE_PRIVATE_SEGMENT,140,5487
  COMPUTE_PGM_RSRC2(141,5538
  COMPUTE_PGM_RSRC2(USER_SGPR_COUNT,141,5538
  COMPUTE_PGM_RSRC2_GFX6_GFX11(142,5582
  COMPUTE_PGM_RSRC2_GFX6_GFX11(ENABLE_TRAP_HANDLER,142,5582
  COMPUTE_PGM_RSRC2_GFX12_PLUS(143,5641
  COMPUTE_PGM_RSRC2_GFX12_PLUS(RESERVED1,143,5641
  COMPUTE_PGM_RSRC2(144,5690
  COMPUTE_PGM_RSRC2(ENABLE_SGPR_WORKGROUP_ID_X,144,5690
  COMPUTE_PGM_RSRC2(145,5745
  COMPUTE_PGM_RSRC2(ENABLE_SGPR_WORKGROUP_ID_Y,145,5745
  COMPUTE_PGM_RSRC2(146,5800
  COMPUTE_PGM_RSRC2(ENABLE_SGPR_WORKGROUP_ID_Z,146,5800
  COMPUTE_PGM_RSRC2(147,5855
  COMPUTE_PGM_RSRC2(ENABLE_SGPR_WORKGROUP_INFO,147,5855
  COMPUTE_PGM_RSRC2(148,5911
  COMPUTE_PGM_RSRC2(ENABLE_VGPR_WORKITEM_ID,148,5911
  COMPUTE_PGM_RSRC2(149,5964
  COMPUTE_PGM_RSRC2(ENABLE_EXCEPTION_ADDRESS_WATCH,149,5964
  COMPUTE_PGM_RSRC2(150,6024
  COMPUTE_PGM_RSRC2(ENABLE_EXCEPTION_MEMORY,150,6024
  COMPUTE_PGM_RSRC2(151,6077
  COMPUTE_PGM_RSRC2(GRANULATED_LDS_SIZE,151,6077
  COMPUTE_PGM_RSRC2(152,6126
  COMPUTE_PGM_RSRC2(ENABLE_EXCEPTION_IEEE_754_FP_INVALID_OPERATION,152,6126
  COMPUTE_PGM_RSRC2(153,6202
  COMPUTE_PGM_RSRC2(ENABLE_EXCEPTION_FP_DENORMAL_SOURCE,153,6202
  COMPUTE_PGM_RSRC2(154,6267
  COMPUTE_PGM_RSRC2(ENABLE_EXCEPTION_IEEE_754_FP_DIVISION_BY_ZERO,154,6267
  COMPUTE_PGM_RSRC2(155,6342
  COMPUTE_PGM_RSRC2(ENABLE_EXCEPTION_IEEE_754_FP_OVERFLOW,155,6342
  COMPUTE_PGM_RSRC2(156,6409
  COMPUTE_PGM_RSRC2(ENABLE_EXCEPTION_IEEE_754_FP_UNDERFLOW,156,6409
  COMPUTE_PGM_RSRC2(157,6477
  COMPUTE_PGM_RSRC2(ENABLE_EXCEPTION_IEEE_754_FP_INEXACT,157,6477
  COMPUTE_PGM_RSRC2(158,6543
  COMPUTE_PGM_RSRC2(ENABLE_EXCEPTION_INT_DIVIDE_BY_ZERO,158,6543
  COMPUTE_PGM_RSRC2(159,6608
  COMPUTE_PGM_RSRC2(RESERVED0,159,6608
#undef COMPUTE_PGM_RSRC2161,6650
#define COMPUTE_PGM_RSRC3_GFX90A(165,6763
enum : int32_t 167,6892
  COMPUTE_PGM_RSRC3_GFX90A(168,6909
  COMPUTE_PGM_RSRC3_GFX90A(ACCUM_OFFSET,168,6909
  COMPUTE_PGM_RSRC3_GFX90A(169,6957
  COMPUTE_PGM_RSRC3_GFX90A(RESERVED0,169,6957
  COMPUTE_PGM_RSRC3_GFX90A(170,7003
  COMPUTE_PGM_RSRC3_GFX90A(TG_SPLIT,170,7003
  COMPUTE_PGM_RSRC3_GFX90A(171,7048
  COMPUTE_PGM_RSRC3_GFX90A(RESERVED1,171,7048
#undef COMPUTE_PGM_RSRC3_GFX90A173,7098
#define COMPUTE_PGM_RSRC3_GFX10_PLUS(178,7228
#define COMPUTE_PGM_RSRC3_GFX10(181,7377
#define COMPUTE_PGM_RSRC3_GFX10_GFX11(184,7547
#define COMPUTE_PGM_RSRC3_GFX11_PLUS(187,7716
#define COMPUTE_PGM_RSRC3_GFX11(190,7865
#define COMPUTE_PGM_RSRC3_GFX12_PLUS(193,8028
enum : int32_t 195,8185
  COMPUTE_PGM_RSRC3_GFX10_GFX11(196,8202
  COMPUTE_PGM_RSRC3_GFX10_GFX11(SHARED_VGPR_COUNT,196,8202
  COMPUTE_PGM_RSRC3_GFX12_PLUS(197,8260
  COMPUTE_PGM_RSRC3_GFX12_PLUS(RESERVED0,197,8260
  COMPUTE_PGM_RSRC3_GFX10(198,8309
  COMPUTE_PGM_RSRC3_GFX10(RESERVED1,198,8309
  COMPUTE_PGM_RSRC3_GFX11(199,8353
  COMPUTE_PGM_RSRC3_GFX11(INST_PREF_SIZE,199,8353
  COMPUTE_PGM_RSRC3_GFX11(200,8402
  COMPUTE_PGM_RSRC3_GFX11(TRAP_ON_START,200,8402
  COMPUTE_PGM_RSRC3_GFX11(201,8451
  COMPUTE_PGM_RSRC3_GFX11(TRAP_ON_END,201,8451
  COMPUTE_PGM_RSRC3_GFX12_PLUS(202,8498
  COMPUTE_PGM_RSRC3_GFX12_PLUS(INST_PREF_SIZE,202,8498
  COMPUTE_PGM_RSRC3_GFX10_PLUS(203,8552
  COMPUTE_PGM_RSRC3_GFX10_PLUS(RESERVED2,203,8552
  COMPUTE_PGM_RSRC3_GFX10_GFX11(204,8602
  COMPUTE_PGM_RSRC3_GFX10_GFX11(RESERVED3,204,8602
  COMPUTE_PGM_RSRC3_GFX12_PLUS(205,8653
  COMPUTE_PGM_RSRC3_GFX12_PLUS(GLG_EN,205,8653
  COMPUTE_PGM_RSRC3_GFX10_PLUS(206,8700
  COMPUTE_PGM_RSRC3_GFX10_PLUS(RESERVED4,206,8700
  COMPUTE_PGM_RSRC3_GFX10(207,8751
  COMPUTE_PGM_RSRC3_GFX10(RESERVED5,207,8751
  COMPUTE_PGM_RSRC3_GFX11_PLUS(208,8796
  COMPUTE_PGM_RSRC3_GFX11_PLUS(IMAGE_OP,208,8796
#undef COMPUTE_PGM_RSRC3_GFX10_PLUS210,8848
#define KERNEL_CODE_PROPERTY(213,8947
enum : int32_t 215,9068
  KERNEL_CODE_PROPERTY(216,9085
  KERNEL_CODE_PROPERTY(ENABLE_SGPR_PRIVATE_SEGMENT_BUFFER,216,9085
  KERNEL_CODE_PROPERTY(217,9151
  KERNEL_CODE_PROPERTY(ENABLE_SGPR_DISPATCH_PTR,217,9151
  KERNEL_CODE_PROPERTY(218,9207
  KERNEL_CODE_PROPERTY(ENABLE_SGPR_QUEUE_PTR,218,9207
  KERNEL_CODE_PROPERTY(219,9260
  KERNEL_CODE_PROPERTY(ENABLE_SGPR_KERNARG_SEGMENT_PTR,219,9260
  KERNEL_CODE_PROPERTY(220,9323
  KERNEL_CODE_PROPERTY(ENABLE_SGPR_DISPATCH_ID,220,9323
  KERNEL_CODE_PROPERTY(221,9378
  KERNEL_CODE_PROPERTY(ENABLE_SGPR_FLAT_SCRATCH_INIT,221,9378
  KERNEL_CODE_PROPERTY(222,9439
  KERNEL_CODE_PROPERTY(ENABLE_SGPR_PRIVATE_SEGMENT_SIZE,222,9439
  KERNEL_CODE_PROPERTY(223,9503
  KERNEL_CODE_PROPERTY(RESERVED0,223,9503
  KERNEL_CODE_PROPERTY(224,9544
  KERNEL_CODE_PROPERTY(ENABLE_WAVEFRONT_SIZE32,224,9544
  KERNEL_CODE_PROPERTY(225,9610
  KERNEL_CODE_PROPERTY(USES_DYNAMIC_STACK,225,9610
  KERNEL_CODE_PROPERTY(226,9661
  KERNEL_CODE_PROPERTY(RESERVED1,226,9661
#undef KERNEL_CODE_PROPERTY228,9706
#define KERNARG_PRELOAD_SPEC(231,9769
enum : int32_t 233,9918
  KERNARG_PRELOAD_SPEC(234,9935
  KERNARG_PRELOAD_SPEC(LENGTH,234,9935
  KERNARG_PRELOAD_SPEC(235,9973
  KERNARG_PRELOAD_SPEC(OFFSET,235,9973
#undef KERNARG_PRELOAD_SPEC237,10014
struct kernel_descriptor_t 240,10100
  uint32_t group_segment_fixed_size;241,10129
  uint32_t private_segment_fixed_size;242,10166
  uint32_t kernarg_size;243,10205
  uint8_t reserved0[reserved0244,10230
  int64_t kernel_code_entry_byte_offset;245,10254
  uint8_t reserved1[reserved1246,10295
  uint32_t compute_pgm_rsrc3;247,10320
  uint32_t compute_pgm_rsrc1;248,10372
  uint32_t compute_pgm_rsrc2;249,10402
  uint16_t kernel_code_properties;250,10432
  uint16_t kernarg_preload;251,10467
  uint8_t reserved3[reserved3252,10495
enum : uint32_t 255,10523
  GROUP_SEGMENT_FIXED_SIZE_OFFSET 256,10541
  PRIVATE_SEGMENT_FIXED_SIZE_OFFSET 257,10580
  KERNARG_SIZE_OFFSET 258,10621
  RESERVED0_OFFSET 259,10648
  KERNEL_CODE_ENTRY_BYTE_OFFSET_OFFSET 260,10673
  RESERVED1_OFFSET 261,10718
  COMPUTE_PGM_RSRC3_OFFSET 262,10743
  COMPUTE_PGM_RSRC1_OFFSET 263,10776
  COMPUTE_PGM_RSRC2_OFFSET 264,10809
  KERNEL_CODE_PROPERTIES_OFFSET 265,10842
  KERNARG_PRELOAD_OFFSET 266,10880
  RESERVED3_OFFSET 267,10911

/usr/include/llvm/Support/AutoConvert.h,133
#define LLVM_SUPPORT_AUTOCONVERT_H15,602
#define CCSID_IBM_1047 23,739
#define CCSID_UTF_8 24,767
#define CCSID_ISO8859_1 25,792

/usr/include/llvm/Support/Automaton.h,1315
#define LLVM_SUPPORT_AUTOMATON_H27,1300
using NfaPath 39,1535
struct NfaStatePair 46,1883
  uint64_t FromDfaState,47,1905
  uint64_t FromDfaState, ToDfaState;47,1905
namespace internal 55,2124
class NfaTranscriber 58,2254
  ArrayRef<NfaStatePair> TransitionInfo;62,2427
  struct PathSegment 67,2638
    uint64_t State;68,2661
    PathSegment *Tail;Tail69,2681
  SpecificBumpPtrAllocator<PathSegment> Allocator;74,2866
  std::deque<PathSegment *> Heads;77,2975
  SmallVector<SmallVector80,3072
  SmallVector<NfaPath, 4> Paths;80,3072
  PathSegment *makePathSegment(makePathSegment83,3148
  void transition(91,3396
  NfaTranscriber(113,4355
  ArrayRef<NfaStatePair> getTransitionInfo(118,4470
  void reset(122,4555
  void transition(130,4731
  ArrayRef<NfaPath> getPaths(139,5046
template <typename ActionT> class Automaton 160,5660
  using MapTy 168,6170
  using MapTy = std::map<std::pair<uint64_t, ActionT>, std::pair<std::pair168,6170
  std::shared_ptr<MapTy> M;169,6257
  std::shared_ptr<internal::NfaTranscriber> Transcriber;172,6426
  uint64_t State 174,6517
  bool Transcribe;176,6625
  Automaton(191,7345
  Automaton(203,7870
  void reset(212,8245
  void enableTranscription(220,8463
  bool add(233,8979
  bool canAdd(244,9302
  ArrayRef<NfaPath> getNfaPaths(252,9596

/usr/include/llvm/Support/BinaryByteStream.h,2037
#define LLVM_SUPPORT_BINARYBYTESTREAM_H11,563
class BinaryByteStream 30,1192
  BinaryByteStream(33,1279
  BinaryByteStream(35,1385
  llvm::endianness getEndian(38,1516
  Error readBytes(40,1582
  Error readLongestContiguousChunk(48,1830
  uint64_t getLength(56,2088
  ArrayRef<uint8_t> data(58,2145
  StringRef str(60,2196
  llvm::endianness Endian;66,2355
  ArrayRef<uint8_t> Data;67,2382
class MemoryBufferByteStream 74,2664
  MemoryBufferByteStream(76,2729
  std::unique_ptr<MemoryBuffer> MemBuffer;81,2938
class MutableBinaryByteStream 88,3261
  MutableBinaryByteStream(91,3370
  llvm::endianness getEndian(95,3532
  Error readBytes(99,3625
  Error readLongestContiguousChunk(104,3796
  uint64_t getLength(109,3997
  Error writeBytes(111,4070
  Error commit(123,4434
  MutableArrayRef<uint8_t> data(125,4490
  MutableArrayRef<uint8_t> Data;128,4557
  BinaryByteStream ImmutableStream;129,4590
class AppendingBinaryByteStream 134,4782
  std::vector<uint8_t> Data;135,4846
  llvm::endianness Endian 136,4875
  AppendingBinaryByteStream(140,4979
  void clear(142,5053
  llvm::endianness getEndian(144,5087
  Error readBytes(146,5153
  void insert(155,5422
  Error readLongestContiguousChunk(159,5553
  uint64_t getLength(168,5823
  Error writeBytes(170,5880
  Error commit(191,6732
  BinaryStreamFlags getFlags(194,6832
  MutableArrayRef<uint8_t> data(196,6914
class FileBufferByteStream 201,7055
  class StreamImpl 203,7123
    StreamImpl(205,7187
    Error commit(213,7515
    uint8_t *getBufferStart(getBufferStart221,7765
    uint8_t *getBufferEnd(getBufferEnd224,7895
    std::unique_ptr<FileOutputBuffer> FileBuffer;227,7980
  FileBufferByteStream(231,8044
  llvm::endianness getEndian(235,8201
  Error readBytes(237,8277
  Error readLongestContiguousChunk(242,8437
  uint64_t getLength(247,8627
  Error writeBytes(249,8689
  Error commit(253,8807
  uint8_t *getBufferStart(getBufferStart256,8912
  uint8_t *getBufferEnd(getBufferEnd259,9031
  StreamImpl Impl;262,9105

/usr/include/llvm/Support/BinaryItemStream.h,178
#define LLVM_SUPPORT_BINARYITEMSTREAM_H10,410
template <typename T> struct BinaryItemTraits 21,654
template <typename T,33,1296
template <typename T, typename Traits 33,1296

/usr/include/llvm/Support/BinaryStream.h,459
#define LLVM_SUPPORT_BINARYSTREAM_H10,406
enum BinaryStreamFlags 20,622
  BSF_None 21,647
  BSF_Write 22,663
  BSF_Append 23,709
  LLVM_MARK_AS_BITMASK_ENUM(24,769
  LLVM_MARK_AS_BITMASK_ENUM(/* LargestValue = */ BSF_Append)24,769
class BinaryStream 34,1308
  virtual BinaryStreamFlags getFlags(55,2078
  Error checkOffsetForRead(58,2156
class WritableBinaryStream 72,2826
  BinaryStreamFlags getFlags(85,3352
  Error checkOffsetForWrite(88,3432

/usr/include/llvm/Support/BinaryStreamReader.h,799
#define LLVM_SUPPORT_BINARYSTREAMREADER_H10,412
class BinaryStreamReader 29,1107
  explicit BinaryStreamReader(32,1176
  explicit BinaryStreamReader(33,1228
  explicit BinaryStreamReader(34,1281
  explicit BinaryStreamReader(35,1361
  Error readLongestContiguousChunk(49,1977
  Error readBytes(58,2456
  template <typename T> Error readInteger(67,2900
  template <typename T> Error readEnum(80,3301
  template <typename T> Error readObject(160,6870
  Error readArray(178,7710
  template <typename T,207,8781
  Error readArray(208,8817
  Error readArray(226,9550
  bool empty(244,10033
  void setOffset(245,10088
  uint64_t getOffset(246,10137
  uint64_t getLength(247,10185
  uint64_t bytesRemaining(248,10245
  std::pair<std::pair264,10812
  BinaryStreamRef Stream;268,10906

/usr/include/llvm/Support/BinaryStreamRef.h,1217
#define LLVM_SUPPORT_BINARYSTREAMREF_H10,409
template <class RefType, class StreamType> class BinaryStreamRefBase 23,726
  explicit BinaryStreamRefBase(26,843
  BinaryStreamRefBase(32,1048
  BinaryStreamRefBase(36,1291
  llvm::endianness getEndian(46,1775
  uint64_t getLength(48,1851
  RefType drop_front(58,2164
  RefType drop_back(76,2695
  RefType keep_front(96,3258
  RefType keep_back(102,3452
  RefType drop_symmetric(109,3655
  RefType slice(115,3867
  bool valid(119,3974
  friend bool operator==(operator==121,4032
  Error checkOffsetForRead(132,4314
  std::shared_ptr<StreamType> SharedImpl;140,4650
  std::optional<uint64_t> Length;143,4757
class BinaryStreamRef153,5332
  BinaryStreamRef(157,5521
struct BinarySubstreamRef 196,7269
  uint64_t Offset 197,7297
  BinaryStreamRef StreamData;198,7358
  BinarySubstreamRef slice(200,7404
  BinarySubstreamRef drop_front(204,7565
  BinarySubstreamRef keep_front(207,7654
  std::pair<std::pair209,7729
  std::pair<BinarySubstreamRef, BinarySubstreamRef> split(209,7729
  uint64_t size(213,7875
  bool empty(214,7934
class WritableBinaryStreamRef217,7983
  WritableBinaryStreamRef(221,8205
  Error checkOffsetForWrite(225,8412

/usr/include/llvm/Support/BinaryStreamWriter.h,745
#define LLVM_SUPPORT_BINARYSTREAMWRITER_H10,412
class BinaryStreamWriter 30,1145
  explicit BinaryStreamWriter(33,1214
  explicit BinaryStreamWriter(34,1274
  explicit BinaryStreamWriter(35,1335
  Error writeBytes(50,1954
  template <typename T> Error writeInteger(58,2327
  template <typename T> Error writeEnum(67,2663
  template <typename T> Error writeObject(128,5357
  template <typename T> Error writeArray(144,6144
  template <typename T,160,6762
  Error writeArray(161,6798
  template <typename T> Error writeArray(169,7115
  std::pair<std::pair174,7306
  void setOffset(176,7386
  uint64_t getOffset(177,7435
  uint64_t getLength(178,7483
  uint64_t bytesRemaining(179,7543
  WritableBinaryStreamRef Stream;183,7667

/usr/include/llvm/Support/BlockFrequency.h,535
#define LLVM_SUPPORT_BLOCKFREQUENCY_H14,542
class BlockFrequency 25,744
  uint64_t Frequency;26,767
  BlockFrequency(29,798
  explicit BlockFrequency(30,835
  static BlockFrequency max(33,966
  uint64_t getFrequency(37,1122
  BlockFrequency operator*operator42,1318
  BlockFrequency &operator>>=(operator>>=85,2680
  bool operator<(97,2951
  bool operator<=(operator<=101,3039
  bool operator>(105,3129
  bool operator>=(operator>=109,3217
  bool operator==(operator==113,3307
  bool operator!=(operator!=117,3397

/usr/include/llvm/Support/CFGDiff.h,246
#define LLVM_SUPPORT_CFGDIFF_H15,612
auto reverse_if_helper(42,1484
template <bool B,46,1607
template <bool B, typename Range> auto reverse_if(46,1607
template <typename NodePtr,57,2169
template <typename NodePtr, bool InverseGraph 57,2169

/usr/include/llvm/Support/Casting.h,7499
#define LLVM_SUPPORT_CASTING_H15,614
template <typename From> struct simplify_type 34,1294
  static SimpleType &getSimplifiedValue(getSimplifiedValue38,1448
template <typename From> struct simplify_type<simplify_type41,1519
  using NonConstSimpleType 42,1579
  using SimpleType 43,1650
  using RetType 44,1730
  static RetType getSimplifiedValue(47,1819
template <typename To,63,2461
template <typename To, typename From,63,2461
template <typename To, typename From, typename Enabler 63,2461
template <typename To,68,2683
  static inline bool doit(70,2796
template <typename To,73,2857
template <typename To, typename From> struct isa_impl_cl 73,2857
  static inline bool doit(74,2916
template <typename To,79,3011
  static inline bool doit(80,3086
template <typename To,85,3181
  static inline bool doit(87,3273
template <typename To,93,3440
  static inline bool doit(94,3511
template <typename To,100,3658
  static inline bool doit(101,3734
template <typename To,107,3881
  static inline bool doit(108,3958
template <typename To,114,4105
  static inline bool doit(116,4187
template <typename To,122,4334
template <typename To, typename From,122,4334
struct isa_impl_wrap 123,4393
  static bool doit(126,4527
template <typename To,133,4755
  static bool doit(136,4909
template <class To, class From> struct cast_retty_impl 149,5371
  using ret_type 150,5428
  using ret_type 153,5556
  using ret_type 157,5687
  using ret_type 161,5823
  using ret_type 165,5985
  using PointerType 171,6160
  using ResultType 172,6230
  using ret_type 175,6296
template <class To, class From, class SimpleFrom> struct cast_retty_wrap 178,6348
  using ret_type 182,6597
  using ret_type = typename cast_retty<To, SimpleFrom>::ret_type;ret_type182,6597
  using ret_type 187,6820
template <class To, class From> struct cast_retty 190,6891
  using ret_type 191,6943
      To, From,192,6988
      To, From, typename simplify_type<From>::SimpleType>::ret_type;ret_type192,6988
template <class To, class From, class SimpleFrom> struct cast_convert_val 202,7374
  static typename cast_retty<cast_retty204,7517
  static typename cast_retty<To, From>::ret_type doit(204,7517
  static typename cast_retty<To, FromTy>::ret_type doit(213,7960
  static typename cast_retty<To, FromTy *>::ret_type doit(222,8317
template <class X> struct is_simple_type 232,8678
  static const bool value 233,8721
template <typename To,252,9382
template <typename To, typename From,252,9382
template <typename To, typename From, typename Enable 252,9382
template <typename To,265,9891
  static inline bool isPossible(267,9978
template <typename To,277,10337
  static inline bool isPossible(279,10456
template <typename To> struct NullableValueCastFailed 301,11581
  static To castFailed(302,11637
template <typename To,308,11920
template <typename To, typename From,308,11920
struct DefaultDoCastIfPossible 309,11976
  static To doCastIfPossible(310,12009
namespace detail 317,12156
template <typename OptionalDerived,320,12306
using SelfType 321,12360
                                    Default,322,12435
template <typename To,328,12741
template <typename To, typename From,328,12741
template <typename To, typename From, typename Derived 328,12741
template <typename To,342,13344
template <typename To, typename From,342,13344
template <typename To, typename From, typename Derived 342,13344
template <typename To,364,14252
template <typename To, typename From,364,14252
template <typename To, typename From, typename Derived 364,14252
template <typename To,387,15168
template <typename To, typename From,387,15168
struct ConstStrippingForwardingCast 388,15226
  using DecayedFrom 390,15343
  using NonConstFrom 392,15479
      std::conditional_t<std::is_pointer_v<From>, DecayedFrom 393,15502
  static inline bool isPossible(395,15584
  static inline decltype(399,15701
  static inline decltype(401,15782
  static inline decltype(405,15901
template <typename To,422,16588
template <typename To, typename From,422,16588
struct ForwardToPointerCast 423,16646
  static inline bool isPossible(424,16676
  static inline decltype(428,16768
template <typename To,475,18509
template <typename To, typename From,475,18509
template <typename To, typename From, typename Enable 475,18509
template <typename To,502,19584
  using Self 504,19698
  using SimpleFrom 505,19733
  using SimplifiedSelf 506,19796
  static inline bool isPossible(508,19848
  static inline decltype(513,19988
  static inline decltype(517,20121
  static inline decltype(521,20213
template <typename To,532,20625
struct CastInfo<To, std::unique_ptr<From>> : public UniquePtrCast<UniquePtrCast533,20663
template <typename To,538,20971
struct CastInfo<To, std::optional<From>> : public OptionalValueCast<OptionalValueCast539,21009
template <typename To,547,21315
[[nodiscard]] inline bool isa(548,21353
template <typename First,552,21457
template <typename First, typename Second,552,21457
template <typename First, typename Second, typename... Rest,552,21457
[[nodiscard]] inline bool isa(553,21533
template <typename To,564,21967
[[nodiscard]] inline decltype(565,22005
template <typename To,570,22187
[[nodiscard]] inline decltype(571,22225
template <typename To,576,22395
[[nodiscard]] inline decltype(577,22433
template <typename To,582,22605
[[nodiscard]] inline decltype(583,22643
constexpr bool IsNullable 593,23062
template <typename T,602,23508
template <typename T, typename Enable 602,23508
template <typename T> struct ValueIsPresent<ValueIsPresent609,23799
  using UnwrappedType 610,23863
  static inline bool isPresent(611,23890
  static inline decltype(614,23980
  using UnwrappedType 621,24234
  static inline bool isPresent(622,24261
  static inline decltype(623,24332
namespace detail 626,24399
template <typename T> inline bool isPresent(629,24565
template <typename T> inline decltype(635,24820
template <typename To,648,25396
[[nodiscard]] inline decltype(649,25434
template <typename To,654,25631
[[nodiscard]] inline decltype(655,25669
template <typename To,660,25854
[[nodiscard]] inline decltype(661,25892
template <typename To,669,26153
[[nodiscard]] inline decltype(670,26191
template <typename... X,677,26508
[[nodiscard]] inline bool isa_and_present(678,26542
template <typename... X,684,26677
[[nodiscard]] inline bool isa_and_nonnull(685,26711
[[nodiscard]] inline auto cast_if_present(692,26936
template <class X, class Y> [[nodiscard]] inline auto cast_if_present(699,27200
template <class X, class Y> [[nodiscard]] inline auto cast_if_present(706,27480
[[nodiscard]] inline auto cast_if_present(714,27790
template <class X, class Y> auto cast_or_null(723,28167
template <class X, class Y> auto cast_or_null(727,28266
template <class X, class Y> auto cast_or_null(731,28359
template <class X, class Y> auto cast_or_null(735,28452
template <class X, class Y> auto dyn_cast_if_present(741,28716
template <class X, class Y> auto dyn_cast_if_present(747,28941
template <class X, class Y> auto dyn_cast_if_present(753,29148
template <class X, class Y> auto dyn_cast_or_null(762,29520
template <class X, class Y> auto dyn_cast_or_null(766,29627
template <class X, class Y> auto dyn_cast_or_null(770,29728
unique_dyn_cast(781,30268
[[nodiscard]] inline auto unique_dyn_cast(788,30416
unique_dyn_cast_or_null(796,30748
[[nodiscard]] inline auto unique_dyn_cast_or_null(803,30899

/usr/include/llvm/Support/Chrono.h,1828
#define LLVM_SUPPORT_CHRONO_H10,400
class UtcClock 38,1363
inline std::time_t toTimeT(50,1737
inline std::time_t toTimeT(57,1951
toTimePoint(65,2231
toTimePoint(72,2433
struct format_provider<format_provider92,3058
template <> struct format_provider<format_provider97,3216
namespace detail 102,3422
template <typename Period> struct unit 103,3441
template <typename Period> struct unit { static const char value[value103,3441
template <typename Period> const char unit<Period>::value[value104,3512
template <> struct unit<unit106,3579
template <> struct unit<std::ratio<3600>> { static const char value[value106,3579
template <> struct unit<unit107,3653
template <> struct unit<std::ratio<60>> { static const char value[value107,3653
template <> struct unit<unit108,3725
template <> struct unit<std::ratio<1>> { static const char value[value108,3725
template <> struct unit<unit109,3796
template <> struct unit<std::milli> { static const char value[value109,3796
template <> struct unit<unit110,3864
template <> struct unit<std::micro> { static const char value[value110,3864
template <> struct unit<unit111,3932
template <> struct unit<std::nano> { static const char value[value111,3932
template <typename Rep,138,4988
struct format_provider<format_provider139,5029
  typedef std::chrono::duration<Rep,Rep141,5099
  typedef std::chrono::duration<Rep, Period> Dur;141,5099
  typedef std::conditional_t<std::chrono::treat_as_floating_point<Rep>::value,value142,5149
                             double,143,5228
      InternalRep;144,5275
  template <typename AsPeriod> static InternalRep getAs(146,5295
  static std::pair<std::pair151,5475
  static std::pair<InternalRep, StringRef> consumeUnit(151,5475
  static bool consumeShowUnit(169,6185
  static void format(181,6463

/usr/include/llvm/Support/CodeGen.h,1993
#define LLVM_SUPPORT_CODEGEN_H15,592
    enum Model 25,786
    enum Model { Static,25,786
    enum Model { Static, PIC_,25,786
    enum Model { Static, PIC_, DynamicNoPIC,25,786
    enum Model { Static, PIC_, DynamicNoPIC, ROPI,25,786
    enum Model { Static, PIC_, DynamicNoPIC, ROPI, RWPI,25,786
    enum Model { Static, PIC_, DynamicNoPIC, ROPI, RWPI, ROPI_RWPI 25,786
    enum Model 31,953
    enum Model { Tiny,31,953
    enum Model { Tiny, Small,31,953
    enum Model { Tiny, Small, Kernel,31,953
    enum Model { Tiny, Small, Kernel, Medium,31,953
    enum Model { Tiny, Small, Kernel, Medium, Large 31,953
    enum Level 36,1076
    enum Level { NotPIC=36,1076
    enum Level { NotPIC=0, SmallPIC=36,1076
    enum Level { NotPIC=0, SmallPIC=1, BigPIC=36,1076
    enum Level 40,1155
    enum Level { Default=40,1155
    enum Level { Default=0, Small=40,1155
    enum Level { Default=0, Small=1, Large=40,1155
    enum Model 45,1248
      GeneralDynamic,46,1265
      LocalDynamic,47,1287
      InitialExec,48,1307
      LocalExec49,1326
  enum class CodeGenOptLevel 54,1396
    None 55,1427
    Less 56,1455
    Default 57,1483
    Aggressive 58,1516
  enum class CodeGenFileType 83,2380
    AssemblyFile,84,2411
    ObjectFile,85,2429
    Null 86,2445
  enum class FramePointerKind 90,2546
  enum class FramePointerKind { None,90,2546
  enum class FramePointerKind { None, NonLeaf,90,2546
  enum class FramePointerKind { None, NonLeaf, All 90,2546
  namespace ZeroCallUsedRegs 93,2658
  enum class ZeroCallUsedRegsKind 98,2802
    Skip 100,2891
    UsedGPRArg 102,2974
    UsedGPR 104,3073
    UsedArg 106,3172
    Used 108,3257
    AllGPRArg 110,3327
    AllGPR 112,3397
    AllArg 114,3468
    All 116,3524
  enum class UWTableKind 120,3577
    None 121,3604
    Sync 122,3650
    Async 123,3698
    Default 124,3763
  enum class FunctionReturnThunksKind 127,3786
    Keep 128,3841
    Extern 129,3889
    Invalid 130,3965

/usr/include/llvm/Support/CommandLine.h,14941
#define LLVM_SUPPORT_COMMANDLINE_H20,924
namespace cl 53,1769
using VersionPrinterTy 76,3005
enum NumOccurrencesFlag 113,4708
  Optional 114,4781
  ZeroOrMore 115,4833
  Required 116,4895
  OneOrMore 117,4948
  ConsumeAfter 126,5444
enum ValueExpected 129,5470
  ValueOptional 131,5575
  ValueRequired 132,5634
  ValueDisallowed 133,5695
enum OptionHidden 136,5768
  NotHidden 137,5833
  Hidden 138,5898
  ReallyHidden 139,5960
enum FormattingFlags 156,6652
  NormalFormatting 157,6675
  Positional 158,6721
  Prefix 159,6793
  AlwaysPrefix 160,6866
enum MiscFlags 163,6948
  CommaSeparated 164,7019
  PositionalEatsArgs 165,7094
  Sink 166,7169
  Grouping 172,7516
  DefaultOption 175,7556
class OptionCategory 180,7667
  StringRef const Name;182,7699
  StringRef const Description;183,7723
  OptionCategory(188,7791
  StringRef getName(194,7957
  StringRef getDescription(195,8002
class SubCommand 203,8247
  StringRef Name;205,8275
  StringRef Description;206,8293
  SubCommand(213,8399
  StringRef getName(230,8838
  StringRef getDescription(231,8883
  SmallVector<SmallVector233,8943
  SmallVector<Option *, 4> PositionalOpts;233,8943
  SmallVector<SmallVector234,8986
  SmallVector<Option *, 4> SinkOpts;234,8986
  StringMap<Option *> OptionsMap;235,9023
  Option *ConsumeAfterOpt ConsumeAfterOpt237,9058
class SubCommandGroup 246,9375
  SmallVector<SmallVector247,9399
  SmallVector<SubCommand *, 4> Subs;247,9399
  SubCommandGroup(250,9445
  ArrayRef<SubCommand *> getSubCommands(252,9518
class Option 257,9671
  virtual enum ValueExpected getValueExpectedFlagDefault(267,10010
  uint16_t NumOccurrences;274,10199
  uint16_t Occurrences 277,10382
  uint16_t Value 280,10551
  uint16_t HiddenFlag 281,10573
  uint16_t Formatting 282,10621
  uint16_t Misc 283,10672
  uint16_t FullyInitialized 284,10693
  uint16_t Position;285,10758
  uint16_t AdditionalVals;286,10836
  StringRef ArgStr;289,10921
  StringRef HelpStr;290,10991
  StringRef ValueStr;291,11055
  SmallVector<SmallVector292,11131
      Categories;293,11166
  SmallPtrSet<SmallPtrSet294,11244
  SmallPtrSet<SubCommand *, 1> Subs;294,11244
  inline enum NumOccurrencesFlag getNumOccurrencesFlag(296,11325
  inline enum ValueExpected getValueExpectedFlag(300,11444
  inline enum OptionHidden getOptionHiddenFlag(304,11588
  inline enum FormattingFlags getFormattingFlag(308,11692
  inline unsigned getMiscFlags(312,11800
  inline unsigned getPosition(313,11856
  inline unsigned getNumAdditionalVals(314,11915
  bool hasArgStr(317,12027
  bool isPositional(318,12080
  bool isSink(319,12158
  bool isDefaultOption(320,12218
  bool isConsumeAfter(322,12297
  void setDescription(330,12554
  void setValueStr(331,12606
  void setNumOccurrencesFlag(332,12656
  void setValueExpectedFlag(333,12737
  void setHiddenFlag(334,12806
  void setFormattingFlag(335,12872
  void setMiscFlag(336,12941
  void setPosition(337,12993
  void addSubCommand(339,13085
  explicit Option(342,13154
  inline void setNumAdditionalVals(350,13511
  virtual void getExtraOptionNames(393,14968
  bool error(402,15403
  inline int getNumOccurrences(406,15510
struct desc 416,15855
  StringRef Desc;417,15869
  desc(419,15888
  void apply(421,15926
struct value_desc 425,16058
  StringRef Desc;426,16078
  value_desc(428,16097
  void apply(430,16141
template <class Ty> struct initializer 436,16420
  const Ty &Init;Init437,16461
  initializer(438,16479
  template <class Opt> void apply(440,16524
template <class Ty> struct list_initializer 443,16605
  ArrayRef<Ty> Inits;444,16651
  list_initializer(445,16673
  template <class Opt> void apply(447,16729
template <class Ty> initializer<Ty> init(450,16812
list_initializer<Ty> list_init(455,16924
template <class Ty> struct LocationClass 462,17205
  Ty &Loc;Loc463,17248
  LocationClass(465,17260
  template <class Opt> void apply(467,17296
template <class Ty> LocationClass<Ty> location(470,17375
struct cat 475,17540
  OptionCategory &Category;Category476,17553
  cat(478,17582
  template <class Opt> void apply(480,17625
struct sub 484,17761
  SubCommand *Sub Sub485,17774
  SubCommandGroup *Group Group486,17803
  sub(488,17840
  sub(489,17874
  template <class Opt> void apply(491,17916
template <typename R,502,18238
template <typename R, typename Ty> struct cb 502,18238
  cb(505,18313
  template <typename Opt> void apply(507,18356
namespace detail 510,18434
struct callback_traits 512,18475
template <typename R,514,18554
template <typename R, typename C,514,18554
struct callback_traits<callback_traits515,18606
callback(530,19298
struct GenericOptionValue 539,19628
struct OptionValueBase 557,20144
  using WrapperType 559,20242
  bool hasValue(561,20288
  const DataType &getValue(getValue563,20331
  template <class DT> void setValue(566,20476
  bool compare(569,20591
  bool compare(571,20655
template <class DataType> class OptionValueCopy 580,20827
  DataType Value;581,20905
  bool Valid 582,20923
  bool hasValue(592,21148
  const DataType &getValue(getValue594,21191
  void setValue(599,21296
  bool compare(605,21417
  bool compare(607,21492
struct OptionValueBase<DataType, false> : OptionValueCopy<OptionValueCopy618,21795
  template <class DT> OptionValue<DataType> &operator=(operator=637,22385
enum boolOrDefault 644,22556
enum boolOrDefault { BOU_UNSET,644,22556
enum boolOrDefault { BOU_UNSET, BOU_TRUE,644,22556
enum boolOrDefault { BOU_UNSET, BOU_TRUE, BOU_FALSE 644,22556
struct OptionValue<OptionValue646,22623
  using WrapperType 648,22710
  OptionValue(652,22780
  OptionValue<cl::boolOrDefault> &operator=(operator=654,22846
struct OptionValue<OptionValue664,23011
  using WrapperType 665,23082
  OptionValue(669,23144
  OptionValue<std::string> &operator=(operator=671,23204
struct OptionEnumValue 685,23541
  StringRef Name;686,23566
  int Value;687,23584
  StringRef Description;688,23597
#define clEnumVal(691,23626
#define clEnumValN(693,23768
class ValuesClass 699,24056
  SmallVector<SmallVector703,24276
  SmallVector<OptionEnumValue, 4> Values;703,24276
  ValuesClass(706,24327
  template <class Opt> void apply(709,24417
template <typename... OptsTy> ValuesClass values(718,24769
class generic_parser_base 734,25541
  class GenericOptionInfo 736,25580
    GenericOptionInfo(738,25618
    StringRef Name;740,25717
    StringRef HelpStr;741,25737
  generic_parser_base(745,25774
  void printOptionDiff(780,27006
  void initialize(786,27237
  void getExtraOptionNames(788,27261
  enum ValueExpected getValueExpectedFlagDefault(797,27651
  Option &Owner;Owner821,28391
template <class DataType> class parser 830,28772
  class OptionInfo 832,28853
    OptionInfo(834,28911
    OptionValue<DataType> V;837,29026
  SmallVector<SmallVector839,29060
  SmallVector<OptionInfo, 8> Values;839,29060
  parser(842,29106
  using parser_data_type 844,29155
  unsigned getNumOptions(847,29256
  StringRef getOption(848,29334
  StringRef getDescription(849,29410
  const GenericOptionValue &getOptionValue(getOptionValue854,29541
  bool parse(859,29669
  void addLiteralOption(878,30145
  void removeLiteralOption(890,30514
class basic_parser_impl 900,30805
  basic_parser_impl(902,30889
  enum ValueExpected getValueExpectedFlagDefault(906,30966
  void getExtraOptionNames(910,31056
  void initialize(912,31117
  virtual StringRef getValueName(926,31622
template <class DataType> class basic_parser 939,32022
  using parser_data_type 941,32104
  using OptVal 942,32141
  basic_parser(944,32182
template <> class parser<parser951,32335
  parser(953,32404
  void initialize(958,32544
  enum ValueExpected getValueExpectedFlagDefault(960,32568
  StringRef getValueName(965,32693
template <> class parser<parser978,33082
  parser(980,33169
  enum ValueExpected getValueExpectedFlagDefault(985,33318
  StringRef getValueName(990,33443
template <> class parser<parser1003,33831
  parser(1005,33898
  StringRef getValueName(1011,34098
template <> class parser<long> final : public basic_parser<basic_parser1024,34471
template <> class parser<parser1045,35127
  parser(1047,35206
  StringRef getValueName(1053,35412
template <> class parser<parser1066,35796
  parser(1068,35873
  StringRef getValueName(1074,36078
class parser<unsigned long> final : public basic_parser<basic_parser1088,36478
class parser<parser1110,37180
  parser(1112,37265
  StringRef getValueName(1119,37493
template <> class parser<parser1132,37885
  parser(1134,37958
  StringRef getValueName(1140,38161
template <> class parser<parser1153,38541
  parser(1155,38612
  StringRef getValueName(1161,38814
  parser(1176,39282
  bool parse(1179,39351
  StringRef getValueName(1185,39529
template <> class parser<parser1198,39918
  parser(1200,39987
  bool parse(1203,40056
  StringRef getValueName(1209,40224
void printOptionDiff(1224,40785
template <class ParserDT, class ValDT> struct OptionDiffPrinter 1232,41149
  void print(1233,41215
  void print(1242,41579
void printOptionDiff(1251,41930
template <class Mod> struct applicator 1267,42662
  template <class Opt> static void opt(1268,42703
template <unsigned n> struct applicator<applicator1272,42827
  template <class Opt> static void opt(1273,42878
template <unsigned n> struct applicator<applicator1277,42971
  template <class Opt> static void opt(1278,43028
template <> struct applicator<applicator1282,43121
  template <class Opt> static void opt(1283,43165
template <> struct applicator<applicator1288,43259
  static void opt(1289,43311
template <> struct applicator<applicator1294,43404
  static void opt(1295,43451
template <> struct applicator<applicator1298,43534
  static void opt(1299,43580
template <> struct applicator<applicator1302,43655
  static void opt(1303,43704
template <> struct applicator<applicator1306,43786
  static void opt(1307,43829
void apply(1316,44131
template <class Opt, class Mod> void apply(1321,44239
template <class DataType, bool ExternalStorage,1330,44605
class opt_storage 1331,44667
  DataType *Location Location1332,44687
  OptionValue<DataType> Default;1333,44751
  void check_location(1335,44785
  bool setLocation(1344,45064
  template <class T> void setValue(1352,45253
  DataType &getValue(getValue1359,45406
  const DataType &getValue(getValue1363,45479
  operator DataType(operator DataType1368,45565
  const OptionValue<DataType> &getDefault(getDefault1370,45623
  DataType Value;1400,46595
  OptionValue<DataType> Default;1401,46613
  opt_storage(1405,46734
  template <class T> void setValue(1407,46785
  DataType &getValue(getValue1412,46911
  DataType getValue(1413,46952
  const OptionValue<DataType> &getDefault(getDefault1415,46999
  operator DataType(operator DataType1417,47070
  DataType operator->(1420,47175
template <class DataType, bool ExternalStorage 1426,47344
  template <class T, class = std::enable_if_t<std::enable_if_t1469,48767
  template <class T, class = std::enable_if_t<std::enable_if_t1478,49026
  template <class T> DataType &operator=(operator=1498,49564
  StorageClass *Location Location1532,50643
  std::vector<OptionValue<DataType>> Default 1533,50711
  bool DefaultAssigned 1535,50802
  void clear(1540,50872
  bool setLocation(1542,50891
  template <class T> void addValue(1549,51067
  const std::vector<OptionValue<DataType>> &getDefault(getDefault1558,51360
  void assignDefault(1562,51450
  void overwriteDefault(1563,51501
  bool isDefaultAssigned(1564,51556
  std::vector<DataType> Storage;1576,52099
  std::vector<OptionValue<DataType>> Default;1577,52132
  bool DefaultAssigned 1578,52178
  using iterator 1581,52219
  iterator begin(1583,52281
  iterator end(1584,52328
  using const_iterator 1586,52372
  const_iterator begin(1588,52446
  const_iterator end(1589,52505
  using size_type 1591,52561
  size_type size(1593,52625
  bool empty(1595,52678
  void push_back(1597,52728
  void push_back(1598,52798
  using reference 1600,52864
  using const_reference 1601,52927
  void clear(1606,53142
  iterator erase(1610,53185
  iterator erase(1611,53253
  iterator erase(1615,53359
  iterator erase(1616,53421
  iterator insert(1620,53515
  iterator insert(1623,53621
  iterator insert(1627,53723
  iterator insert(1630,53823
  reference front(1634,53919
  const_reference front(1635,53967
  operator std::vector<DataType> vector<DataType>1637,54028
  operator ArrayRef<DataType>(operator ArrayRef<DataType>1638,54085
  std::vector<DataType> *operator&(operator&1639,54143
  const std::vector<DataType> *operator&(operator&1640,54201
  template <class T> void addValue(1642,54272
  const std::vector<OptionValue<DataType>> &getDefault(getDefault1648,54442
  void assignDefault(1652,54532
  void overwriteDefault(1653,54583
  bool isDefaultAssigned(1654,54638
struct multi_val 1761,57991
  unsigned AdditionalVals;1762,58010
  explicit multi_val(1763,58037
  template <typename D,1765,58094
  template <typename D, typename S,1765,58094
  void apply(1766,58142
template <class DataType, class StorageClass> class bits_storage 1776,58498
  unsigned *Location Location1777,58565
  template <class T> static unsigned Bit(1779,58628
  bool setLocation(1789,58897
  template <class T> void addValue(1796,59069
  unsigned getBits(1803,59292
  void clear(1805,59336
  template <class T> bool isSet(1810,59397
  unsigned Bits{Bits1819,59709
  template <class T> static unsigned Bit(1821,59760
  template <class T> void addValue(1829,60000
  unsigned getBits(1831,60068
  void clear(1833,60107
  template <class T> bool isSet(1835,60137
class alias 1920,62685
  Option *AliasFor;AliasFor1921,62715
  bool handleOccurrence(1923,62736
  bool addOccurrence(1928,62919
  void printOptionValue(1938,63310
  void setDefault(1941,63396
  ValueExpected getValueExpectedFlagDefault(1943,63454
  void done(1947,63567
  void setAliasFor(1964,64096
  explicit alias(1971,64271
struct aliasopt 1979,64454
  Option &Opt;Opt1980,64472
  explicit aliasopt(1982,64488
  void apply(1984,64532
struct extrahelp 1990,64795
  StringRef morehelp;1991,64814
using TokenizerCallback 2125,70920
class ExpansionContext 2143,71779
  StringSaver Saver;2145,71858
  TokenizerCallback Tokenizer;2148,71936
  vfs::FileSystem *FS;FS2151,72039
  StringRef CurrentDir;2155,72177
  ArrayRef<StringRef> SearchDirs;2158,72253
  bool RelativeNames 2162,72384
  bool MarkEOLs 2166,72521
  bool InConfigFile 2169,72595
  ExpansionContext &setMarkEOLs(setMarkEOLs2177,72821
  ExpansionContext &setRelativeNames(setRelativeNames2182,72904
  ExpansionContext &setCurrentDir(setCurrentDir2187,72997
  ExpansionContext &setSearchDirs(setSearchDirs2192,73089
  ExpansionContext &setVFS(setVFS2197,73191

/usr/include/llvm/Support/Compiler.h,5670
#define LLVM_SUPPORT_COMPILER_H16,692
# define __has_feature(27,853
# define __has_extension(31,913
# define __has_attribute(35,975
# define __has_builtin(39,1035
# define __has_include(43,1093
# define LLVM_HAS_CPP_ATTRIBUTE(50,1373
# define LLVM_HAS_CPP_ATTRIBUTE(52,1437
#  define LLVM_GNUC_PREREQ(61,1709
#  define LLVM_GNUC_PREREQ(65,1927
#  define LLVM_GNUC_PREREQ(68,2061
#define LLVM_MSC_PREREQ(94,2905
#define LLVM_MSC_PREREQ(104,3125
#define LLVM_ATTRIBUTE_VISIBILITY_HIDDEN 118,3795
#define LLVM_ATTRIBUTE_VISIBILITY_DEFAULT 119,3866
#define LLVM_ATTRIBUTE_VISIBILITY_HIDDEN 121,3973
#define LLVM_ATTRIBUTE_VISIBILITY_DEFAULT 122,4052
#define LLVM_ATTRIBUTE_VISIBILITY_HIDDEN124,4139
#define LLVM_ATTRIBUTE_VISIBILITY_DEFAULT125,4180
#define LLVM_LIBRARY_VISIBILITY 131,4363
#define LLVM_EXTERNAL_VISIBILITY 133,4498
#define LLVM_EXTERNAL_VISIBILITY135,4571
#define LLVM_LIBRARY_VISIBILITY138,4617
#define LLVM_EXTERNAL_VISIBILITY139,4649
#define LLVM_PREFETCH(143,4712
#define LLVM_PREFETCH(145,4799
#define LLVM_ATTRIBUTE_USED 149,4875
#define LLVM_ATTRIBUTE_USED151,4935
#define LLVM_DEPRECATED(155,4994
#define LLVM_DEPRECATED(157,5072
#define LLVM_SUPPRESS_DEPRECATED_DECLARATIONS_PUSH 162,5198
#define LLVM_SUPPRESS_DEPRECATED_DECLARATIONS_POP 165,5426
#define LLVM_SUPPRESS_DEPRECATED_DECLARATIONS_PUSH 168,5563
#define LLVM_SUPPRESS_DEPRECATED_DECLARATIONS_POP 171,5762
#define LLVM_SUPPRESS_DEPRECATED_DECLARATIONS_PUSH174,5875
#define LLVM_SUPPRESS_DEPRECATED_DECLARATIONS_POP175,5926
#define LLVM_ATTRIBUTE_REINITIALIZES 187,6390
#define LLVM_ATTRIBUTE_REINITIALIZES189,6458
#define LLVM_ATTRIBUTE_UNUSED 201,6945
#define LLVM_ATTRIBUTE_UNUSED203,7009
#define LLVM_ATTRIBUTE_WEAK 209,7193
#define LLVM_ATTRIBUTE_WEAK211,7253
#define LLVM_READNONE 218,7494
#define LLVM_READNONE220,7549
#define LLVM_READONLY 225,7672
#define LLVM_READONLY227,7726
#define LLVM_ATTRIBUTE_MINSIZE 231,7785
#define LLVM_ATTRIBUTE_MINSIZE233,7847
#define LLVM_LIKELY(237,7943
#define LLVM_UNLIKELY(238,8006
#define LLVM_LIKELY(240,8078
#define LLVM_UNLIKELY(241,8111
#define LLVM_ATTRIBUTE_NOINLINE 247,8301
#define LLVM_ATTRIBUTE_NOINLINE 249,8383
#define LLVM_ATTRIBUTE_NOINLINE251,8442
#define LLVM_ATTRIBUTE_ALWAYS_INLINE 257,8672
#define LLVM_ATTRIBUTE_ALWAYS_INLINE 259,8771
#define LLVM_ATTRIBUTE_ALWAYS_INLINE 261,8828
#define LLVM_ATTRIBUTE_NODEBUG 268,9077
#define LLVM_ATTRIBUTE_NODEBUG270,9139
#define LLVM_ATTRIBUTE_RETURNS_NONNULL 274,9215
#define LLVM_ATTRIBUTE_RETURNS_NONNULL 276,9311
#define LLVM_ATTRIBUTE_RETURNS_NONNULL278,9370
#define LLVM_ATTRIBUTE_RETURNS_NOALIAS 284,9571
#define LLVM_ATTRIBUTE_RETURNS_NOALIAS 286,9662
#define LLVM_ATTRIBUTE_RETURNS_NOALIAS288,9728
#define LLVM_FALLTHROUGH 293,9932
#define LLVM_FALLTHROUGH 295,10020
#define LLVM_FALLTHROUGH 297,10101
#define LLVM_FALLTHROUGH 299,10204
#define LLVM_FALLTHROUGH301,10258
#define LLVM_REQUIRE_CONSTANT_INITIALIZATION 307,10473
#define LLVM_REQUIRE_CONSTANT_INITIALIZATION310,10605
#define LLVM_GSL_OWNER 316,10797
#define LLVM_GSL_OWNER318,10841
#define LLVM_GSL_POINTER 324,11017
#define LLVM_GSL_POINTER326,11065
#define LLVM_CTOR_NODISCARD 330,11147
#define LLVM_CTOR_NODISCARD332,11195
#define LLVM_EXTENSION 338,11348
#define LLVM_EXTENSION340,11391
# define LLVM_BUILTIN_UNREACHABLE 351,11876
# define LLVM_BUILTIN_UNREACHABLE 353,11958
# define LLVM_BUILTIN_TRAP 359,12200
# define LLVM_BUILTIN_TRAP 365,12563
# define LLVM_BUILTIN_TRAP 367,12611
# define LLVM_BUILTIN_DEBUGTRAP 374,12869
# define LLVM_BUILTIN_DEBUGTRAP 379,13128
# define LLVM_BUILTIN_DEBUGTRAP384,13349
# define LLVM_ASSUME_ALIGNED(390,13534
# define LLVM_ASSUME_ALIGNED(392,13640
# define LLVM_ASSUME_ALIGNED(395,13764
# define LLVM_PACKED(417,14131
# define LLVM_PACKED_START 418,14201
# define LLVM_PACKED_END 419,14252
# define LLVM_PACKED(421,14305
# define LLVM_PACKED_START 422,14355
# define LLVM_PACKED_END 423,14407
# define LLVM_MEMORY_SANITIZER_BUILD 429,14609
# define LLVM_NO_SANITIZE_MEMORY_ATTRIBUTE 431,14687
# define LLVM_MEMORY_SANITIZER_BUILD 433,14772
# define __msan_allocated_memory(434,14811
# define __msan_unpoison(435,14853
# define LLVM_NO_SANITIZE_MEMORY_ATTRIBUTE436,14887
# define LLVM_ADDRESS_SANITIZER_BUILD 442,15120
# define LLVM_ADDRESS_SANITIZER_BUILD 458,15640
# define __asan_poison_memory_region(459,15680
# define __asan_unpoison_memory_region(460,15726
#define LLVM_HWADDRESS_SANITIZER_BUILD 466,15937
#define LLVM_HWADDRESS_SANITIZER_BUILD 468,15984
# define LLVM_THREAD_SANITIZER_BUILD 474,16211
# define LLVM_THREAD_SANITIZER_BUILD 476,16256
# define TsanHappensBefore(497,17024
# define TsanHappensAfter(500,17166
# define TsanIgnoreWritesBegin(503,17319
# define TsanIgnoreWritesEnd(506,17435
# define TsanHappensBefore(508,17516
# define TsanHappensAfter(509,17547
# define TsanIgnoreWritesBegin(510,17577
# define TsanIgnoreWritesEnd(511,17610
#define LLVM_NO_SANITIZE(517,17761
#define LLVM_NO_SANITIZE(519,17833
#define LLVM_DUMP_METHOD 529,18279
#define LLVM_DUMP_METHOD 531,18354
#define LLVM_PRETTY_FUNCTION 540,18758
#define LLVM_PRETTY_FUNCTION 542,18845
#define LLVM_PRETTY_FUNCTION 544,18900
#define LLVM_THREAD_LOCAL 560,19647
#define LLVM_THREAD_LOCAL 564,19831
#define LLVM_THREAD_LOCAL569,20007
#define LLVM_ENABLE_EXCEPTIONS 575,20159
#define LLVM_ENABLE_EXCEPTIONS 577,20241
#define LLVM_ENABLE_EXCEPTIONS 579,20321
#define LLVM_NO_PROFILE_INSTRUMENT_FUNCTION 585,20512
#define LLVM_NO_PROFILE_INSTRUMENT_FUNCTION588,20649
#define LLVM_PREFERRED_TYPE(594,20812
#define LLVM_PREFERRED_TYPE(596,20884

/usr/include/llvm/Support/Debug.h,243
#define LLVM_SUPPORT_DEBUG_H29,1459
#define DEBUG_WITH_TYPE(64,2804
#define isCurrentDebugType(69,2978
#define setCurrentDebugType(70,3016
#define setCurrentDebugTypes(71,3079
#define DEBUG_WITH_TYPE(72,3157
#define LLVM_DEBUG(101,4296

/usr/include/llvm/Support/DynamicLibrary.h,908
#define LLVM_SUPPORT_DYNAMICLIBRARY_H14,549
class DynamicLibrary 33,1293
  static char Invalid;37,1528
  void *Data;Data40,1630
  explicit DynamicLibrary(43,1653
  void *getOSSpecificHandle(getOSSpecificHandle46,1762
  bool isValid(49,1876
  void *getAddressOfSymbol(getAddressOfSymbol57,2315
  static DynamicLibrary getPermanentLibrary(70,2977
  static DynamicLibrary addPermanentLibrary(78,3372
  static bool LoadLibraryPermanently(86,3780
  static DynamicLibrary getLibrary(101,4553
  static void closeLibrary(110,5011
  enum SearchOrdering 112,5061
    SO_Linker,116,5285
    SO_LoadedFirst,118,5379
    SO_LoadedLast,121,5549
    SO_LoadOrder 124,5717
  static SearchOrdering SearchOrder;126,5743
  static void *SearchForAddressOfSymbol(SearchForAddressOfSymbol135,6239
  static void *SearchForAddressOfSymbol(SearchForAddressOfSymbol138,6348
  static void AddSymbol(146,6679

/usr/include/llvm/Support/ELFAttributeParser.h,715
#define LLVM_SUPPORT_ELFATTRIBUTEPARSER_H10,412
class ELFAttributeParser 24,688
  StringRef vendor;25,715
  std::unordered_map<std::unordered_map26,735
  std::unordered_map<unsigned, unsigned> attributes;26,735
  std::unordered_map<std::unordered_map27,788
  std::unordered_map<unsigned, StringRef> attributesStr;27,788
  ScopedPrinter *sw;sw32,916
  TagNameMap tagToStringMap;33,937
  DataExtractor de{de34,966
  DataExtractor::Cursor cursor{cursor35,1016
  void setAttributeString(45,1398
  virtual ~ELFAttributeParser(50,1509
  ELFAttributeParser(54,1665
  ELFAttributeParser(57,1809
  std::optional<unsigned> getAttributeValue(62,2007
  std::optional<StringRef> getAttributeString(68,2192

/usr/include/llvm/Support/Endian.h,4710
#define LLVM_SUPPORT_ENDIAN_H14,567
enum {aligned aligned29,886
enum {aligned = 0, unaligned 29,886
struct PickAlignment 35,1041
 enum { value 36,1064
template <typename value_type,51,1437
[[nodiscard]] inline value_type byte_swap(52,1487
template <typename value_type,57,1644
template <typename value_type, std::size_t alignment 57,1644
template <typename value_type,68,2007
template <typename value_type, endianness endian,68,2007
[[nodiscard]] inline value_type read(69,2080
template <typename value_type,75,2301
template <typename value_type, std::size_t alignment,75,2301
[[nodiscard]] inline value_type readNext(76,2371
template <typename value_type,83,2609
template <typename value_type, endianness endian,83,2609
template <typename value_type, endianness endian, std::size_t alignment,83,2609
[[nodiscard]] inline value_type readNext(85,2708
template <typename value_type,90,2899
template <typename value_type, std::size_t alignment 90,2899
template<typename value_type,98,3232
         endianness endian,99,3262
inline void write(101,3322
using make_unsigned_t 106,3463
template <typename value_type,110,3657
template <typename value_type, endianness endian,110,3657
[[nodiscard]] inline value_type readAtBitAlignment(111,3730
template <typename value_type,145,5082
template <typename value_type, endianness endian,145,5082
inline void writeAtBitAlignment(146,5155
namespace detail 197,7235
template <typename ValueType,199,7255
template <typename ValueType, endianness Endian,199,7255
template <typename ValueType, endianness Endian, std::size_t Alignment,199,7255
          std::size_t ALIGN 200,7327
struct packed_endian_specific_integral 201,7401
  explicit packed_endian_specific_integral(208,7624
  operator value_type(operator value_type210,7701
  void operator=(operator=215,7828
  packed_endian_specific_integral &operator+=(operator+=220,7961
  packed_endian_specific_integral &operator-=(operator-=225,8083
  packed_endian_specific_integral &operator|=(operator|=230,8205
  packed_endian_specific_integral &operator&=(operator&=235,8327
  } Value;243,8521
  struct ref 246,8541
    explicit ref(247,8556
    operator value_type(operator value_type249,8599
    void operator=(operator=253,8703
    void *Ptr;Ptr258,8830
using ulittle16_t 264,8881
using ulittle32_t 267,9037
using ulittle64_t 270,9193
using little16_t 274,9350
using little32_t 277,9504
using little64_t 280,9658
using aligned_ulittle16_t 284,9813
using aligned_ulittle32_t 287,9975
using aligned_ulittle64_t 290,10137
using aligned_little16_t 294,10300
using aligned_little32_t 297,10460
using aligned_little64_t 300,10620
using ubig16_t 304,10781
using ubig32_t 307,10931
using ubig64_t 310,11081
using big16_t 314,11232
using big32_t 317,11380
using big64_t 320,11528
using aligned_ubig16_t 324,11677
using aligned_ubig32_t 327,11833
using aligned_ubig64_t 330,11989
using aligned_big16_t 334,12146
using aligned_big32_t 337,12300
using aligned_big64_t 340,12454
using unaligned_uint16_t 344,12609
using unaligned_uint32_t 347,12772
using unaligned_uint64_t 350,12935
using unaligned_int16_t 354,13099
using unaligned_int32_t 357,13260
using unaligned_int64_t 360,13421
using little_t 365,13605
using big_t 369,13773
using aligned_little_t 373,13942
using aligned_big_t 377,14116
namespace endian 380,14219
template <typename T,382,14239
template <typename T, endianness E> [[nodiscard]] inline T read(382,14239
[[nodiscard]] inline uint16_t read16(386,14402
[[nodiscard]] inline uint32_t read32(389,14503
[[nodiscard]] inline uint64_t read64(392,14604
template <endianness E> [[nodiscard]] inline uint16_t read16(396,14706
template <endianness E> [[nodiscard]] inline uint32_t read32(399,14817
template <endianness E> [[nodiscard]] inline uint64_t read64(402,14928
[[nodiscard]] inline uint16_t read16le(406,15040
[[nodiscard]] inline uint32_t read32le(409,15144
[[nodiscard]] inline uint64_t read64le(412,15248
[[nodiscard]] inline uint16_t read16be(415,15352
[[nodiscard]] inline uint32_t read32be(418,15453
[[nodiscard]] inline uint64_t read64be(421,15554
template <typename T,425,15656
template <typename T, endianness E> inline void write(425,15656
inline void write16(429,15799
inline void write32(432,15886
inline void write64(435,15973
template <endianness E> inline void write16(439,16061
template <endianness E> inline void write32(442,16158
template <endianness E> inline void write64(445,16255
inline void write16le(449,16353
inline void write32le(452,16443
inline void write64le(455,16533
inline void write16be(458,16623
inline void write32be(461,16710
inline void write64be(464,16797

/usr/include/llvm/Support/EndianStream.h,396
#define LLVM_SUPPORT_ENDIANSTREAM_H15,584
inline void write(37,1151
inline void write<write43,1342
inline void write<write48,1487
inline void write(54,1679
inline void write(61,1868
struct Writer 67,2121
  raw_ostream &OS;OS68,2137
  endianness Endian;69,2156
  Writer(70,2177
  template <typename value_type> void write(71,2250
  template <typename value_type> void write(74,2362

/usr/include/llvm/Support/Error.h,6621
#define LLVM_SUPPORT_ERROR_H14,549
class ErrorInfoBase 45,1311
  virtual void log(50,1430
  static const void *classID(classID67,1941
  virtual bool isA(74,2207
  template <typename ErrorInfoT> bool isA(79,2361
  static char ID;86,2492
class [[nodiscard]] Error 160,5719
  Error(179,6457
  Error(194,6900
  Error(201,7133
  Error &operator=(operator=213,7600
  ~Error(230,8055
  explicit operator bool(operator bool238,8307
  template <typename ErrT> bool isA(244,8466
  const void* dynamicClassID(250,8664
  void assertIsChecked(266,9223
  ErrorInfoBase *getPtr(getPtr273,9377
  void setPtr(283,9626
  bool getChecked(294,9944
  void setChecked(302,10105
  std::unique_ptr<ErrorInfoBase> takePayload(311,10367
  friend raw_ostream &operator<<(operator<<318,10530
  ErrorInfoBase *Payload Payload326,10698
class ErrorSuccess final : public Error 332,10913
inline ErrorSuccess Error::success(success334,10958
template <typename ErrT,338,11107
template <typename ErrT, typename... ArgTs> Error make_error(338,11107
template <typename ThisErrT,351,11542
template <typename ThisErrT, typename ParentErrT 351,11542
inline Error joinErrors(431,14133
template <class T> class [[nodiscard]] Expected 474,15678
  static constexpr bool isRef 478,15837
  using wrap 480,15894
  using error_type 482,15962
  using storage_type 485,16024
  using storage_type = std::conditional_t<isRef, wrap,485,16024
  using value_type 486,16083
  using reference 489,16117
  using const_reference 490,16167
  using pointer 491,16229
  using const_pointer 492,16277
  Expected(496,16408
  Expected(515,17101
  Expected(528,17486
  Expected(533,17692
  explicit Expected(541,17985
  Expected &operator=(operator=548,18197
  ~Expected(554,18326
  explicit operator bool(operator bool563,18516
  reference get(571,18690
  const_reference get(577,18819
  template <typename ErrT> bool errorIsA(593,19283
  Error takeError(601,19648
  pointer operator->(609,19867
  const_pointer operator->(615,20009
  reference operator*(621,20159
  const_reference operator*(627,20294
  static bool compareThisIfSameType(634,20417
  static bool compareThisIfSameType(639,20539
  template <class OtherT> void moveConstruct(643,20624
  template <class OtherT> void moveAssign(656,21006
  pointer toPointer(666,21231
  const_pointer toPointer(668,21281
  pointer toPointer(670,21349
  const_pointer toPointer(672,21405
  storage_type *getStorage(getStorage674,21479
  const storage_type *getStorage(getStorage679,21638
  error_type *getErrorStorage(getErrorStorage684,21815
  const error_type *getErrorStorage(getErrorStorage689,21977
  void setUnchecked(695,22220
  [[noreturn]] LLVM_ATTRIBUTE_NOINLINE void fatalUncheckedExpected(702,22350
  void assertIsChecked(715,22851
    AlignedCharArrayUnion<storage_type> TStorage;723,23008
    AlignedCharArrayUnion<error_type> ErrorStorage;724,23058
  bool HasError 726,23115
  bool Unchecked 728,23172
inline void cantFail(749,23859
T cantFail(777,24744
T& cantFail(808,25714
class ErrorHandlerTraits828,26222
template <typename ErrT> class ErrorHandlerTraits<ErrorHandlerTraits833,26416
  static bool appliesTo(835,26495
  static Error apply(840,26616
template <typename ErrT> class ErrorHandlerTraits<ErrorHandlerTraits847,26855
  static bool appliesTo(849,26933
  static Error apply(854,27054
class ErrorHandlerTraits<ErrorHandlerTraits863,27356
  static bool appliesTo(865,27425
  static Error apply(870,27546
class ErrorHandlerTraits<ErrorHandlerTraits879,27883
  static bool appliesTo(881,27951
  static Error apply(886,28072
template <typename C,895,28402
template <typename C, typename RetT,895,28402
class ErrorHandlerTraits<ErrorHandlerTraits896,28454
template <typename C,900,28634
template <typename C, typename RetT,900,28634
class ErrorHandlerTraits<ErrorHandlerTraits901,28686
template <typename C,905,28866
template <typename C, typename RetT,905,28866
class ErrorHandlerTraits<ErrorHandlerTraits906,28918
template <typename C,910,29104
template <typename C, typename RetT,910,29104
class ErrorHandlerTraits<ErrorHandlerTraits911,29156
template <typename C,916,29357
template <typename C, typename RetT,916,29357
class ErrorHandlerTraits<ErrorHandlerTraits917,29409
template <typename C,922,29634
template <typename C, typename RetT,922,29634
class ErrorHandlerTraits<ErrorHandlerTraits923,29686
inline Error handleErrorImpl(926,29823
template <typename HandlerT,930,29933
Error handleErrorImpl(931,29985
Error handleErrors(947,30854
void handleAllErrors(970,31624
inline void handleAllErrors(976,31865
template <typename T,1004,32854
template <typename T, typename RecoveryFtor,1004,32854
Expected<T> handleExpected(1005,32922
inline void consumeError(1041,34451
template <typename T> std::optional<T> expectedToOptional(1052,34930
template <typename T> std::optional<T> expectedToStdOptional(1059,35099
inline bool errorToBool(1071,35542
class ErrorAsOutParameter 1102,36886
  ErrorAsOutParameter(1104,36922
  ~ErrorAsOutParameter(1110,37055
  Error *Err;Err1117,37179
class ExpectedAsOutParameter 1124,37304
  ExpectedAsOutParameter(1126,37343
  ~ExpectedAsOutParameter(1132,37466
  Expected<T> *ValOrErr;ValOrErr1138,37560
class ECError 1146,37800
  void setErrorCode(1152,37930
  std::error_code convertToErrorCode(1153,37989
  void log(1154,38058
  static char ID;1157,38159
  ECError(1161,38212
  std::error_code EC;1163,38255
template <typename T> Expected<T> errorOrToExpected(1184,39129
template <typename T> ErrorOr<T> expectedToErrorOr(1191,39337
class StringError 1221,40500
  static char ID;1223,40560
  const std::string &getMessage(getMessage1234,40864
  std::string Msg;1237,40930
  std::error_code EC;1238,40949
  const bool PrintMsgOnly 1239,40971
inline Error createStringError(1244,41077
inline Error createStringError(1254,41409
inline Error createStringError(1259,41556
inline Error createFileError(1325,43588
inline Error createFileError(1331,43832
inline Error createFileError(1337,44077
inline Error createFileError(1343,44311
class ExitOnError 1353,44620
  ExitOnError(1356,44686
  void setBanner(1361,44932
  void setExitCodeMapper(1364,45049
  void operator()(operator()1369,45247
  template <typename T> T operator()(operator()1373,45450
  template <typename T> T& operator()(operator()1380,45713
  void checkError(1386,45837
  std::string Banner;1394,46022
  std::function<int(const Error &)> GetExitCode;1395,46044
inline LLVMErrorRef wrap(1399,46161
inline Error unwrap(1404,46336

/usr/include/llvm/Support/FileSystem.h,6340
#define LLVM_SUPPORT_FILESYSTEM_H27,1364
enum class file_type 66,2209
  status_error,67,2232
  file_not_found,68,2248
  regular_file,69,2266
  directory_file,70,2282
  symlink_file,71,2300
  block_file,72,2316
  character_file,73,2330
  fifo_file,74,2348
  socket_file,75,2361
  type_unknown76,2376
struct space_info 80,2430
  uint64_t capacity;81,2450
  uint64_t free;82,2471
  uint64_t available;83,2488
enum perms 86,2514
  no_perms 87,2527
  owner_read 88,2543
  owner_write 89,2564
  owner_exe 90,2586
  owner_all 91,2606
  group_read 92,2658
  group_write 93,2678
  group_exe 94,2699
  group_all 95,2718
  others_read 96,2770
  others_write 97,2790
  others_exe 98,2811
  others_all 99,2830
  all_read 100,2886
  all_write 101,2938
  all_exe 102,2994
  all_all 103,3042
  set_uid_on_exe 104,3090
  set_gid_on_exe 105,3116
  sticky_bit 106,3142
  all_perms 107,3164
  perms_not_known 108,3234
class basic_file_status 137,4256
  time_t fs_st_atime 140,4321
  time_t fs_st_mtime 141,4347
  uint32_t fs_st_atime_nsec 142,4373
  uint32_t fs_st_mtime_nsec 143,4406
  uid_t fs_st_uid 144,4439
  gid_t fs_st_gid 145,4462
  off_t fs_st_size 146,4485
  uint32_t LastAccessedTimeHigh 148,4534
  uint32_t LastAccessedTimeLow 149,4571
  uint32_t LastWriteTimeHigh 150,4607
  uint32_t LastWriteTimeLow 151,4641
  uint32_t FileSizeHigh 152,4674
  uint32_t FileSizeLow 153,4703
  file_type Type 155,4740
  perms Perms 156,4784
  explicit basic_file_status(161,4860
  basic_file_status(164,4950
  basic_file_status(172,5371
  file_type type(184,5938
  perms permissions(185,5980
  uint32_t getUser(203,6743
  uint32_t getGroup(204,6792
  uint64_t getSize(205,6842
  uint32_t getUser(207,6917
  uint32_t getGroup(211,7004
  uint64_t getSize(215,7092
  void type(221,7205
  void permissions(222,7244
class file_status 226,7349
  dev_t fs_st_dev 230,7481
  nlink_t fs_st_nlinks 231,7504
  ino_t fs_st_ino 232,7532
  uint32_t NumLinks 234,7580
  uint32_t VolumeSerialNumber 235,7605
  uint64_t PathHash 236,7640
  explicit file_status(242,7711
  file_status(245,7808
  file_status(253,8237
inline std::error_code resize_file_before_mapping_readwrite(416,14981
enum class AccessMode 448,15894
enum class AccessMode { Exist,448,15894
enum class AccessMode { Exist, Write,448,15894
enum class AccessMode { Exist, Write, Execute 448,15894
inline bool exists(461,16280
inline bool can_write(475,16641
inline bool equivalent(504,17632
inline bool is_local(523,18353
inline bool is_local(530,18607
inline bool is_directory(560,19794
inline bool is_regular_file(582,20673
inline bool is_symlink_file(606,21552
inline std::error_code file_size(689,24877
inline std::error_code setLastAccessAndModificationTime(708,25626
enum CreationDisposition 727,26283
  CD_CreateAlways 731,26470
  CD_CreateNew 736,26633
  CD_OpenExisting 741,26817
  CD_OpenAlways 746,27015
enum FileAccess 749,27040
  FA_Read 750,27069
  FA_Write 751,27084
enum OpenFlags 754,27104
  OF_None 755,27132
  OF_Text 759,27250
  OF_CRLF 763,27406
  OF_TextWithCRLF 768,27612
  OF_Append 771,27700
  OF_Delete 775,27821
  OF_ChildInherit 779,27936
  OF_UpdateAtime 783,28052
class TempFile 848,31047
  bool Done 849,31064
  std::string TmpName;862,31555
  int FD 865,31610
  bool RemoveOnClose 869,31699
inline OpenFlags operator|(929,34148
inline OpenFlags &operator|=(operator|=933,34253
inline FileAccess operator|(938,34339
inline FileAccess &operator|=(operator|=942,34448
inline file_t convertFDToNativeFile(991,36699
enum : size_t 1016,37734
enum : size_t { DefaultReadChunkSize 1016,37734
openFileForWrite(1063,39941
inline Expected<file_t> openNativeFileForWrite(1082,40877
inline std::error_code openFileForReadWrite(1104,42050
inline Expected<file_t> openNativeFileForReadWrite(1124,43093
class FileLocker 1224,47688
  int FD;1225,47707
  FileLocker(1226,47742
  FileLocker(1231,47865
  ~FileLocker(1232,47920
  FileLocker &operator=(operator=1236,47982
  std::error_code unlock(1242,48131
class mapped_file_region 1267,48935
  enum mapmode 1269,48970
    readonly,1270,48987
    readwrite,1271,49055
    priv 1272,49131
  size_t Size 1277,49257
  void *Mapping Mapping1278,49276
  sys::fs::file_t FileHandle 1280,49317
  mapmode Mode 1282,49364
  void copyFrom(1284,49392
  void moveFromImpl(1293,49584
  mapped_file_region(1305,49863
  mapped_file_region &operator=(operator=1306,49937
  ~mapped_file_region(1319,50400
  explicit operator bool(operator bool1322,50482
  void unmap(1325,50549
  void dontNeed(1329,50623
class directory_entry 1352,51267
  std::string Path;1358,51651
  file_type Type 1359,51671
  bool FollowSymlinks 1360,51751
  basic_file_status Status;1361,51832
  explicit directory_entry(1364,51902
  const std::string &path(path1375,52386
  file_type type(1383,52843
  bool operator==(operator==1390,53010
  bool operator!=(operator!=1391,53091
namespace detail 1398,53387
  struct DirIterState 1407,53686
    ~DirIterState(1408,53710
    directory_entry CurrentEntry;1413,53815
class directory_iterator 1421,54078
  std::shared_ptr<detail::DirIterState> State;1422,54105
  bool FollowSymlinks 1423,54152
  explicit directory_iterator(1426,54191
  explicit directory_iterator(1435,54568
  directory_iterator &increment(increment1447,55009
  const directory_entry &operator*(operator*1452,55134
  const directory_entry *operator->(operator->1453,55209
  bool operator==(operator==1455,55287
  bool operator!=(operator!=1465,55605
namespace detail 1470,55698
  struct RecDirIterState 1473,55774
    std::stack<std::stack1474,55801
    std::stack<directory_iterator, std::vector<directory_iterator>> Stack;1474,55801
class recursive_directory_iterator 1483,56086
  std::shared_ptr<detail::RecDirIterState> State;1484,56123
  bool Follow;1485,56173
  explicit recursive_directory_iterator(1489,56241
  recursive_directory_iterator &increment(increment1499,56670
  const directory_entry &operator*(operator*1536,57786
  const directory_entry *operator->(operator->1537,57861
  int level(1541,58013
  bool no_push_request(1544,58131
  void pop(1548,58252
  void no_push(1568,58872
  bool operator==(operator==1570,58926
  bool operator!=(operator!=1574,59029

/usr/include/llvm/Support/FormatCommon.h,414
#define LLVM_SUPPORT_FORMATCOMMON_H10,406
enum class AlignStyle 17,581
enum class AlignStyle { Left,17,581
enum class AlignStyle { Left, Center,17,581
enum class AlignStyle { Left, Center, Right 17,581
struct FmtAlign 19,629
  detail::format_adapter &Adapter;Adapter20,647
  AlignStyle Where;21,682
  size_t Amount;22,702
  char Fill;23,719
  FmtAlign(25,733
  void format(29,909
  void fill(69,1975

/usr/include/llvm/Support/GenericDomTree.h,4834
#define LLVM_SUPPORT_GENERICDOMTREE_H25,1112
template <class NodeT> class DomTreeNodeBase 54,1809
  NodeT *TheBB;TheBB61,2141
  DomTreeNodeBase *IDom;IDom62,2157
  unsigned Level;63,2182
  SmallVector<SmallVector64,2200
  SmallVector<DomTreeNodeBase *, 4> Children;64,2200
  mutable unsigned DFSNumIn 65,2246
  mutable unsigned DFSNumOut 66,2280
  DomTreeNodeBase(69,2325
  using iterator 72,2446
  using iterator = typename SmallVector<DomTreeNodeBase *, 4>::iterator;iterator72,2446
  using const_iterator 73,2519
      typename SmallVector<DomTreeNodeBase *, 4>::const_iterator;const_iterator74,2544
  iterator begin(76,2611
  iterator end(77,2659
  const_iterator begin(78,2703
  const_iterator end(79,2763
  DomTreeNodeBase *const &back(back81,2820
  DomTreeNodeBase *&back(back82,2887
  iterator_range<iterator> children(84,2943
  iterator_range<const_iterator> children(85,3020
  NodeT *getBlock(getBlock89,3116
  DomTreeNodeBase *getIDom(getIDom90,3160
  unsigned getLevel(91,3212
  std::unique_ptr<DomTreeNodeBase> addChild(93,3259
  bool isLeaf(99,3400
  size_t getNumChildren(100,3451
  void clearAllChildren(102,3512
  bool compare(104,3561
  void setIDom(124,4077
  unsigned getDFSNumIn(144,4702
  unsigned getDFSNumOut(145,4754
  bool DominatedBy(150,4912
  void UpdateLevel(155,5070
raw_ostream &operator<<(operator<<174,5538
void PrintDomTree(187,5871
namespace DomTreeBuilder 196,6224
template <typename NodeT> struct DomTreeNodeTraits 226,7418
  using NodeType 227,7471
  using NodePtr 228,7497
  using ParentPtr 229,7524
  using ParentType 232,7706
  static NodeT *getEntryNode(getEntryNode234,7762
  static ParentPtr getParent(235,7838
template <typename NodeT,242,8089
class DominatorTreeBase 243,8131
  using NodeTrait 247,8317
  using NodeType 248,8363
  using NodePtr 249,8412
  using ParentPtr 250,8459
  using ParentType 253,8624
  static constexpr bool IsPostDominator 254,8679
  using UpdateType 256,8733
  using UpdateKind 257,8776
  static constexpr UpdateKind Insert 258,8814
  static constexpr UpdateKind Delete 259,8873
  enum class VerificationLevel 261,8933
  enum class VerificationLevel { Fast,261,8933
  enum class VerificationLevel { Fast, Basic,261,8933
  enum class VerificationLevel { Fast, Basic, Full 261,8933
  SmallVector<SmallVector265,9072
  SmallVector<NodeT *, IsPostDom ? 4 : 1> Roots;265,9072
  using DomTreeNodeMapType 267,9122
  DomTreeNodeMapType DomTreeNodes;269,9216
  DomTreeNodeBase<NodeT> *RootNode RootNode270,9251
  ParentPtr Parent 271,9297
  mutable bool DFSInfoValid 273,9328
  mutable unsigned int SlowQueries 274,9365
  DominatorTreeBase(281,9514
  DominatorTreeBase &operator=(operator=291,9807
  using root_iterator 310,10438
  using const_root_iterator 311,10507
  root_iterator root_begin(313,10589
  const_root_iterator root_begin(314,10644
  root_iterator root_end(315,10711
  const_root_iterator root_end(316,10762
  size_t root_size(318,10826
  iterator_range<root_iterator> roots(320,10879
  iterator_range<const_root_iterator> roots(323,10974
  bool isPostDominator(329,11155
  bool compare(333,11340
  DomTreeNodeBase<NodeT> *getNode(getNode367,12451
  DomTreeNodeBase<NodeT> *getRootNode(getRootNode386,13156
  const DomTreeNodeBase<NodeT> *getRootNode(getRootNode387,13217
  void getDescendants(390,13347
  bool properlyDominates(408,13965
  bool isReachableFromEntry(421,14376
  bool isReachableFromEntry(427,14597
  bool dominates(432,14791
  NodeT *getRoot(getRoot477,16056
  NodeT *findNearestCommonDominator(findNearestCommonDominator484,16297
  const NodeT *findNearestCommonDominator(findNearestCommonDominator514,17326
  bool isVirtualRoot(522,17691
  void applyUpdates(561,19763
  void applyUpdates(572,20343
  void insertEdge(601,21803
  void deleteEdge(619,22544
  DomTreeNodeBase<NodeT> *addNewBlock(addNewBlock636,23138
  DomTreeNodeBase<NodeT> *setNewRoot(setNewRoot649,23662
  void changeImmediateDominator(672,24477
  void changeImmediateDominator(679,24724
  void eraseNode(686,25073
  void splitBlock(717,26020
  void print(726,26211
  void updateDFSNumbers(749,26946
  void recalculate(795,28388
  void recalculate(800,28490
  bool verify(819,29372
  void reset(823,29493
  void addRoot(833,29664
  DomTreeNodeBase<NodeT> *createChild(createChild835,29722
  DomTreeNodeBase<NodeT> *createNode(createNode841,29940
  void Split(850,30235
  bool dominatedBySlowTreeWalk(902,32068
  void wipe(923,32874
using DomTreeBase 931,32992
using PostDomTreeBase 934,33064
template <typename NodeT,938,33256
bool DominatorTreeBase<NodeT, IsPostDom>::dominates(dominates939,33298
template <typename NodeT,950,33722
bool DominatorTreeBase<NodeT, IsPostDom>::properlyDominates(properlyDominates951,33764

/usr/include/llvm/Support/GenericDomTreeConstruction.h,3119
#define LLVM_SUPPORT_GENERICDOMTREECONSTRUCTION_H38,1721
#define DEBUG_TYPE 49,2020
struct SemiNCAInfo 55,2133
  struct InfoRec 64,2520
    SmallVector<SmallVector70,2664
    SmallVector<unsigned, 4> ReverseChildren;70,2664
  DenseMap<DenseMap76,2861
  DenseMap<NodePtr, InfoRec> NodeToInfo;76,2861
  struct BatchUpdateInfo 80,3004
    BatchUpdateInfo(82,3093
    GraphDiffT &PreViewCFG;PreViewCFG89,3435
    GraphDiffT *PostViewCFG;PostViewCFG90,3463
    const size_t NumLegalized;91,3492
  BatchUpdateInfo *BatchUpdates;BatchUpdates94,3529
  SemiNCAInfo(98,3675
  void clear(100,3733
  static SmallVector<SmallVector108,4026
  static SmallVector<NodePtr, 8> getChildren(108,4026
  static SmallVector<SmallVector115,4250
  static SmallVector<NodePtr, 8> getChildren(115,4250
  NodePtr getIDom(126,4602
  TreeNodePtr getNodeForBlock(133,4769
  static bool AlwaysDescend(148,5253
  struct BlockNamePrinter 150,5317
    NodePtr N;151,5345
    BlockNamePrinter(153,5361
    BlockNamePrinter(154,5411
    friend raw_ostream &operator<<(operator<<156,5487
  unsigned runDFS(179,6343
  unsigned eval(239,8876
  void runSemiNCA(271,10005
  void addVirtualRoot(321,12006
  static bool HasForwardSuccessors(334,12541
  static NodePtr GetEntryNode(339,12711
  static RootsT FindRoots(347,13048
  static void RemoveRedundantRoots(503,20060
  void doFullDFSWalk(543,21715
  static void CalculateFromScratch(555,22057
  void attachNewSubtree(594,23555
  void reattachExistingSubtree(615,24354
  struct InsertionInfo 627,24800
    struct Compare 628,24825
      bool operator()(operator()629,24846
    std::priority_queue<std::priority_queue636,25092
        Bucket;638,25191
    SmallDenseSet<SmallDenseSet639,25207
    SmallDenseSet<TreeNodePtr, 8> Visited;639,25207
    SmallVector<SmallVector640,25250
    SmallVector<TreeNodePtr, 8> Affected;640,25250
    SmallVector<SmallVector642,25331
    SmallVector<TreeNodePtr, 8> VisitedUnaffected;642,25331
  static void InsertEdge(646,25395
  static bool UpdateRootsBeforeInsertion(676,26516
  static bool isPermutation(694,27277
  static void UpdateRootsAfterUpdate(708,27789
  static void InsertReachable(734,28920
  static void UpdateInsertion(840,33591
  static void InsertUnreachable(860,34395
  static void ComputeUnreachableDominators(885,35648
  static void DeleteEdge(910,36532
  static void DeleteReachable(963,38549
  static bool HasProperSupport(1004,40211
  static void DeleteUnreachable(1028,41178
  static void EraseNode(1127,44957
  static void ApplyUpdates(1146,45470
  static void ApplyNextUpdate(1195,47565
  bool verifyRoots(1221,48660
  bool verifyReachability(1260,49787
  static bool VerifyLevels(1296,50721
  static bool VerifyDFSNumbers(1328,51777
  bool verifyParentProperty(1464,57341
  bool verifySiblingProperty(1498,58468
  static bool IsSameAsFreshTree(1537,59698
void Calculate(1557,60237
void CalculateWithUpdates(1562,60360
void InsertEdge(1573,60909
void DeleteEdge(1580,61159
void ApplyUpdates(1587,61409
bool Verify(1596,61789
#undef DEBUG_TYPE1624,62714

/usr/include/llvm/Support/GenericIteratedDominanceFrontier.h,1096
#define LLVM_SUPPORT_GENERICITERATEDDOMINANCEFRONTIER_H24,1020
template <class NodeTy, bool IsPostDom> struct ChildrenGetterTy 38,1425
  ChildrenTy get(42,1597
template <class NodeTy, bool IsPostDom> class IDFCalculatorBase 56,2110
  using OrderedNodeTy 58,2184
      std::conditional_t<IsPostDom, Inverse<Inverse59,2208
  using ChildrenGetterTy 60,2274
  IDFCalculatorBase(63,2366
  IDFCalculatorBase(65,2441
  void setDefiningBlocks(74,2898
  void setLiveInBlocks(83,3297
  void resetLiveInBlocks(90,3528
  DominatorTreeBase<DominatorTreeBase104,3982
  DominatorTreeBase<NodeTy, IsPostDom> &DT;DT104,3982
  ChildrenGetterTy ChildrenGetter;105,4026
  bool useLiveIn 106,4061
  const SmallPtrSetImpl<NodeTy *> *LiveInBlocks;LiveInBlocks107,4087
  const SmallPtrSetImpl<NodeTy *> *DefBlocks;DefBlocks108,4136
namespace IDFCalculatorDetail 115,4368
typename ChildrenGetterTy<ChildrenGetterTy118,4441
ChildrenGetterTy<ChildrenGetterTy119,4498
ChildrenGetterTy<NodeTy, IsPostDom>::get(get119,4498
void IDFCalculatorBase<NodeTy, IsPostDom>::calculate(calculate130,4829

/usr/include/llvm/Support/GenericLoopInfo.h,4006
#define LLVM_SUPPORT_GENERICLOOPINFO_H41,1889
template <class BlockT, class LoopT> class LoopBase 59,2439
  LoopT *ParentLoop;ParentLoop60,2493
  std::vector<LoopT *> SubLoops;62,2561
  std::vector<BlockT *> Blocks;65,2665
  SmallPtrSet<SmallPtrSet67,2698
  SmallPtrSet<const BlockT *, 8> DenseBlockSet;67,2698
  const LoopBase<LoopBase75,2929
  unsigned getLoopDepth(82,3234
  BlockT *getHeader(getHeader90,3468
  LoopT *getParentLoop(getParentLoop99,3886
  const LoopT *getOutermostLoop(getOutermostLoop103,4075
  LoopT *getOutermostLoop(getOutermostLoop110,4242
  void setParentLoop(118,4443
  bool contains(124,4633
  bool contains(134,4911
  template <class InstT> bool contains(140,5116
  const std::vector<LoopT *> &getSubLoops(getSubLoops145,5287
  std::vector<LoopT *> &getSubLoopsVector(getSubLoopsVector149,5422
  typedef typename std::vector<LoopT *>::const_iterator iterator;153,5551
      typename std::vector<LoopT *>::const_reverse_iterator reverse_iterator;155,5627
  iterator begin(156,5705
  iterator end(157,5764
  reverse_iterator rbegin(158,5819
  reverse_iterator rend(159,5888
  bool isInnermost(167,6232
  bool isOutermost(170,6422
  ArrayRef<BlockT *> getBlocks(173,6551
  typedef typename ArrayRef<BlockT *>::const_iterator block_iterator;177,6673
  block_iterator block_begin(178,6743
  block_iterator block_end(179,6812
  inline iterator_range<block_iterator> blocks(180,6877
  unsigned getNumBlocks(187,7177
  std::vector<BlockT *> &getBlocksVector(getBlocksVector194,7438
  SmallPtrSetImpl<const BlockT *> &getBlocksSet(getBlocksSet200,7664
  const SmallPtrSetImpl<const BlockT *> &getBlocksSet(getBlocksSet206,7864
  bool isInvalid(217,8436
  bool isLoopExiting(227,8697
  bool isLoopLatch(241,9265
  unsigned getNumBackEdges(248,9575
  typedef std::pair<BlockT BlockT301,11983
  typedef std::pair<BlockT *, BlockT *> Edge;301,11983
  void getLoopLatches(326,13120
  static void getInnerLoopsInPreorder(337,13551
  SmallVector<SmallVector353,14227
  SmallVector<const LoopT *, 4> getLoopsInPreorder(353,14227
  SmallVector<SmallVector360,14520
  SmallVector<LoopT *, 4> getLoopsInPreorder(360,14520
  void addChildLoop(387,15803
  LoopT *removeChildLoop(removeChildLoop396,16223
  LoopT *removeChildLoop(removeChildLoop408,16756
  void addBlockEntry(415,17054
  void reverseBlock(422,17274
  void reserveBlocks(428,17472
  void moveToHeader(435,17749
  void removeBlockFromLoop(452,18269
  bool isAnnotatedParallel(471,18844
  LoopBase(481,19151
  explicit LoopBase(483,19190
  ~LoopBase(497,19859
raw_ostream &operator<<(operator<<512,20141
template <class BlockT, class LoopT> class LoopInfoBase 522,20444
  DenseMap<DenseMap524,20576
  DenseMap<const BlockT *, LoopT *> BBMap;524,20576
  std::vector<LoopT *> TopLevelLoops;525,20619
  BumpPtrAllocator LoopAllocator;526,20657
  ~LoopInfoBase(536,20891
  LoopInfoBase(538,20931
  LoopInfoBase &operator=(operator=545,21225
  void releaseMemory(557,21516
  template <typename... ArgsTy> LoopT *AllocateLoop(AllocateLoop566,21673
  typedef typename std::vector<LoopT *>::const_iterator iterator;574,21968
      typename std::vector<LoopT *>::const_reverse_iterator reverse_iterator;576,22044
  iterator begin(577,22122
  iterator end(578,22181
  reverse_iterator rbegin(579,22236
  reverse_iterator rend(580,22305
  bool empty(581,22370
  SmallVector<SmallVector588,22664
  SmallVector<SmallVector598,23074
  LoopT *getLoopFor(getLoopFor602,23279
  unsigned getLoopDepth(609,23576
  bool isLoopHeader(615,23751
  const std::vector<LoopT *> &getTopLevelLoops(getTopLevelLoops621,23911
  std::vector<LoopT *> &getTopLevelLoopsVector(getTopLevelLoopsVector624,24027
  LoopT *removeLoop(removeLoop629,24269
  void changeLoopFor(640,24684
  void changeTopLevelLoop(650,24902
  void addTopLevelLoop(659,25284
  void removeBlock(667,25593
  static bool isNotAlreadyContainedIn(679,25829
  void destroy(706,26881

/usr/include/llvm/Support/GenericLoopInfoImpl.h,2602
#define LLVM_SUPPORT_GENERICLOOPINFOIMPL_H15,646
BlockT *LoopBase<BlockT, LoopT>::getExitingBlock(getExitingBlock48,1839
void LoopBase<BlockT, LoopT>::getExitBlocks(getExitBlocks64,2530
std::pair<BlockT *, bool> getExitBlockHelper(77,3036
bool LoopBase<BlockT, LoopT>::hasNoExitBlocks(hasNoExitBlocks95,3913
BlockT *LoopBase<BlockT, LoopT>::getExitBlock(getExitBlock107,4300
bool LoopBase<BlockT, LoopT>::hasDedicatedExits(hasDedicatedExits112,4444
void getUniqueExitBlocksHelper(128,5098
void LoopBase<BlockT, LoopT>::getUniqueExitBlocks(getUniqueExitBlocks142,5664
void LoopBase<BlockT, LoopT>::getUniqueNonLatchExitBlocks(getUniqueNonLatchExitBlocks149,5920
BlockT *LoopBase<BlockT, LoopT>::getUniqueExitBlock(getUniqueExitBlock158,6282
void LoopBase<BlockT, LoopT>::getExitEdges(getExitEdges164,6504
namespace detail 174,6859
using has_hoist_check 176,6902
using detect_has_hoist_check 179,6990
template <class BlockT> bool isLegalToHoistInto(183,7185
BlockT *LoopBase<BlockT, LoopT>::getLoopPreheader(getLoopPreheader199,7839
BlockT *LoopBase<BlockT, LoopT>::getLoopPredecessor(getLoopPredecessor224,8820
BlockT *LoopBase<BlockT, LoopT>::getLoopLatch(getLoopLatch245,9576
void LoopBase<BlockT, LoopT>::addBasicBlockToLoop(addBasicBlockToLoop271,10483
void LoopBase<BlockT, LoopT>::replaceChildLoopWith(replaceChildLoopWith301,11567
void LoopBase<BlockT, LoopT>::verifyLoop(verifyLoop315,12217
void LoopBase<BlockT, LoopT>::verifyLoopNest(verifyLoopNest391,14963
void LoopBase<BlockT, LoopT>::print(print403,15351
static void discoverAndMapSubloop(447,16748
  typedef GraphTraits<Inverse<BlockT *>> InvBlockTraits;450,16961
template <class BlockT, class LoopT> class PopulateLoopsDFS 503,18948
  typedef GraphTraits<BlockT *> BlockTraits;504,19010
  typedef typename BlockTraits::ChildIteratorType SuccIterTy;505,19055
  LoopInfoBase<LoopInfoBase507,19118
  LoopInfoBase<BlockT, LoopT> *LI;LI507,19118
  PopulateLoopsDFS(510,19162
void PopulateLoopsDFS<BlockT, LoopT>::traverse(traverse520,19413
void PopulateLoopsDFS<BlockT, LoopT>::insertIntoLoop(insertIntoLoop529,19822
void LoopInfoBase<BlockT, LoopT>::analyze(analyze566,21464
LoopInfoBase<BlockT, LoopT>::getLoopsInPreorder(getLoopsInPreorder595,22674
LoopInfoBase<BlockT, LoopT>::getLoopsInReverseSiblingPreorder(getLoopsInReverseSiblingPreorder613,23415
void LoopInfoBase<BlockT, LoopT>::print(print638,24412
bool compareVectors(650,24814
void addInnerLoopsToHeadersMap(657,24977
static void compareLoops(667,25340
void LoopInfoBase<BlockT, LoopT>::verify(verify707,26888

/usr/include/llvm/Support/GlobPattern.h,602
#define LLVM_SUPPORT_GLOBPATTERN_H14,540
class GlobPattern 51,2104
  create(58,2409
  bool match(60,2534
  StringRef Prefix;73,2878
  struct SubGlobPattern 75,2899
    static Expected<SubGlobPattern> create(77,2973
    bool match(79,3091
    struct Bracket 83,3261
      size_t NextOffset;84,3282
      BitVector Bytes;85,3307
    SmallVector<Bracket,Bracket87,3337
    SmallVector<Bracket, 0> Brackets;87,3337
    SmallVector<char,char88,3375
    SmallVector<char, 0> Pat;88,3375
  SmallVector<SubGlobPattern,SubGlobPattern90,3410
  SmallVector<SubGlobPattern, 1> SubGlobs;90,3410

/usr/include/llvm/Support/HashBuilder.h,1800
#define LLVM_SUPPORT_HASHBUILDER_H16,675
struct IsHashableData35,1141
template <typename HasherT> class HashBuilderBase 41,1350
public:public42,1402
  HasherT &getHasher(getHasher46,1521
  void update(53,1772
  void update(60,2055
  template <typename HasherT_ 66,2234
  template <typename HasherT_ 71,2402
  explicit HashBuilderBase(76,2532
  explicit HashBuilderBase(79,2631
  std::optional<HasherT> OptionalHasher;84,2795
  HasherT &Hasher;Hasher85,2836
template <typename HasherT,138,5300
class HashBuilder 139,5357
  explicit HashBuilder(141,5419
  explicit HashBuilder(143,5531
  std::enable_if_t<std::enable_if_t148,5723
  add(149,5803
  template <typename T> HashBuilder &add(add166,6148
  HashBuilder &add(add196,7117
  using HasAddHashT 208,7606
  std::enable_if_t<std::enable_if_t294,10596
                       !hashbuilder_detail::IsHashableData<T>::value,value295,10653
  add(297,10757
  template <typename T1,302,10831
  HashBuilder &add(add303,10869
  template <typename... Ts> HashBuilder &add(add307,10970
  std::enable_if_t<(sizeof...(Ts) > 1), HashBuilder &> add(323,11384
  HashBuilder &addRange(addRange328,11537
  template <typename RangeT> HashBuilder &addRange(addRange333,11694
  HashBuilder &addRangeElements(addRangeElements338,11867
  HashBuilder &addRangeElements(addRangeElements345,12115
  using HasByteSwapT 350,12262
  std::enable_if_t<std::enable_if_t354,12472
  adjustForEndiannessAndAdd(355,12543
  HashBuilder &addRangeElementsImpl(addRangeElementsImpl366,12983
  addRangeElementsImpl(378,13438
namespace hashbuilder_detail 385,13659
class HashCodeHasher 386,13690
  HashCodeHasher(388,13721
  void update(389,13753
  hash_code Code;393,13881
using HashCodeHashBuilder 396,13903
hash_value(406,14278

/usr/include/llvm/Support/JSON.h,7446
#define LLVM_SUPPORT_JSON_H47,2134
class Object 98,4037
  using Storage = DenseMap<ObjectKey, Value,99,4052
  Storage M;100,4129
  iterator begin(115,4541
  const_iterator begin(116,4582
  iterator end(117,4635
  const_iterator end(118,4672
  bool empty(120,4722
  size_t size(121,4765
  void clear(123,4809
  std::pair<std::pair124,4839
  std::pair<std::pair126,4909
  std::pair<iterator, bool> try_emplace(126,4909
  std::pair<std::pair130,5074
  std::pair<iterator, bool> try_emplace(130,5074
  void erase(134,5244
  iterator find(136,5286
  const_iterator find(137,5340
inline bool operator!=(operator!=158,6327
class Array 164,6526
  std::vector<Value> V;165,6540
  using value_type 168,6573
  using iterator 169,6601
  using const_iterator 170,6650
  template <typename Collection> explicit Array(174,6790
inline bool operator!=(operator!=209,7779
class Value 288,11024
  enum Kind 290,11046
    Null,291,11060
    Boolean,292,11070
    Number,295,11219
    String,296,11231
    Array,297,11243
    Object,298,11254
  Value(302,11352
  Value(303,11393
  Value(305,11488
  Value(309,11614
  Value(310,11676
  Value(314,11809
  Value(316,11945
  Value(323,12168
  Value(325,12264
  Value(327,12395
  Value(334,12612
  Value(335,12660
  template <typename T,338,12822
  template <typename T, typename 338,12822
            bool 339,12900
  template <typename T,345,13016
  template <typename T, typename 345,13016
  template <typename T,352,13258
  template <typename T, typename 352,13258
            typename 353,13334
            typename 354,13401
  template <typename T,359,13600
            typename 360,13624
            double 361,13694
  template <typename T,366,13873
            typename 367,13897
            Value 369,14017
  Value &operator=(operator=372,14091
  Value &operator=(operator=377,14182
  ~Value(382,14279
  Kind kind(384,14306
  std::optional<std::nullptr_t> getAsNull(407,14782
  std::optional<bool> getAsBoolean(412,14922
  std::optional<double> getAsNumber(417,15061
  std::optional<int64_t> getAsInteger(427,15416
  std::optional<uint64_t> getAsUINT64(445,16038
  std::optional<llvm::StringRef> getAsString(455,16292
  const json::Object *getAsObject(getAsObject462,16529
  json::Object *getAsObject(getAsObject465,16651
  const json::Array *getAsArray(getAsArray468,16761
  json::Array *getAsArray(getAsArray471,16879
  template <typename T,485,17335
  template <typename T, typename... U> void create(485,17335
  template <typename T> T &as(as500,18213
  enum ValueType 509,18523
    T_Null,510,18553
    T_Boolean,511,18565
    T_Double,512,18580
    T_Integer,513,18594
    T_UINT64,514,18609
    T_StringRef,515,18623
    T_String,516,18640
    T_Object,517,18654
    T_Array,518,18668
  mutable ValueType Type;521,18728
  mutable llvm::AlignedCharArrayUnion<llvm::AlignedCharArrayUnion522,18754
      Union;525,18958
inline bool operator!=(operator!=530,19078
inline Value &Array::front(front535,19303
inline const Value &Array::front(front536,19354
inline Value &Array::back(back537,19417
inline const Value &Array::back(back538,19466
inline Value *Array::data(data539,19527
inline const Value *Array::data(data540,19576
inline typename Array::iterator Array::begin(begin542,19638
inline typename Array::const_iterator Array::begin(begin543,19707
inline typename Array::iterator Array::end(end544,19788
inline typename Array::const_iterator Array::end(end545,19853
inline bool Array::empty(empty547,19931
inline size_t Array::size(size548,19986
inline void Array::reserve(reserve549,20041
inline void Array::clear(clear551,20097
inline void Array::push_back(push_back552,20139
inline void Array::push_back(push_back553,20204
template <typename... Args> inline void Array::emplace_back(emplace_back554,20275
inline void Array::pop_back(pop_back557,20396
inline typename Array::iterator Array::insert(insert558,20444
inline typename Array::iterator Array::insert(insert561,20553
inline typename Array::iterator Array::insert(insert565,20691
inline typename Array::iterator Array::emplace(emplace569,20827
inline bool operator==(operator==572,20958
class ObjectKey 578,21284
  ObjectKey(580,21310
  ObjectKey(581,21366
  ObjectKey(588,21610
  ObjectKey(594,21802
  ObjectKey(596,21906
  ObjectKey(598,21979
  ObjectKey(599,22026
  ObjectKey &operator=(operator=600,22104
  operator llvm::StringRef(StringRef611,22346
  std::string str(612,22398
  std::unique_ptr<std::string> Owned;617,22570
  llvm::StringRef Data;618,22608
inline bool operator==(operator==621,22636
inline bool operator!=(operator!=624,22754
inline bool operator<(627,22841
struct Object::KV 631,22946
  ObjectKey K;632,22966
  Value V;633,22981
inline Object::Object(Object636,22996
inline std::pair<Object::iterator, bool> Object::insert(insert643,23212
inline bool Object::erase(erase646,23332
class Path 653,23604
  Path(663,23936
  Path index(665,24037
  Path field(667,24164
  class Segment 672,24395
    uintptr_t Pointer;673,24413
    unsigned Offset;674,24436
    Segment(678,24493
    Segment(679,24559
    Segment(682,24713
    bool isField(684,24773
    StringRef field(685,24823
    unsigned index(688,24932
    Root *root(root689,24978
  const Path *Parent;Parent692,25053
  Segment Seg;693,25075
  Path(695,25091
class Path::Root 700,25290
  llvm::StringRef Name;701,25309
  llvm::StringLiteral ErrorMessage;702,25333
  std::vector<Path::Segment> ErrorPath;703,25369
  Root(708,25516
inline bool fromJSON(729,26281
inline bool fromJSON(737,26477
inline bool fromJSON(745,26654
inline bool fromJSON(753,26835
inline bool fromJSON(761,27013
inline bool fromJSON(769,27191
inline bool fromJSON(777,27373
bool fromJSON(786,27577
bool fromJSON(798,27840
bool fromJSON(811,28185
template <typename T> Value toJSON(825,28607
class ObjectMapper 840,29115
  ObjectMapper(843,29222
  operator bool(operator bool850,29429
  template <typename T> bool map(854,29565
  template <typename T> bool map(865,30038
  template <typename T> bool mapOptional(876,30489
  const Object *O;O884,30751
  Path P;885,30770
class ParseError 893,31008
  const char *Msg;Msg894,31064
  unsigned Line,895,31083
  unsigned Line, Column,895,31083
  unsigned Line, Column, Offset;895,31083
  static char ID;898,31125
  ParseError(899,31143
  void log(901,31286
  std::error_code convertToErrorCode(904,31421
Expected<T> parse(912,31689
class OStream 977,33679
  using Block 979,33704
  explicit OStream(981,33805
  ~OStream(985,33943
  void flush(992,34210
  void array(1001,34581
  void object(1007,34737
  void rawValue(1015,35005
  void rawValue(1020,35135
  void attribute(1032,35691
  void attributeArray(1036,35886
  void attributeObject(1040,36082
  void attributeImpl(1057,36554
  enum Context 1067,36743
    Singleton,1068,36760
    Array,1069,36810
    Object,1070,36821
    RawValue,1071,36833
  struct State 1073,36901
  llvm::SmallVector<llvm::SmallVector1077,36979
  llvm::SmallVector<State, 16> Stack;1077,36979
  llvm::StringRef PendingComment;1078,37033
  llvm::raw_ostream &OS;OS1079,37067
  unsigned IndentSize;1080,37092
  unsigned Indent 1081,37115
inline llvm::raw_ostream &operator<<(operator<<1087,37349
template <> struct format_provider<format_provider1096,37680

/usr/include/llvm/Support/KnownBits.h,2210
#define LLVM_SUPPORT_KNOWNBITS_H15,587
struct KnownBits 23,748
  APInt Zero;24,767
  APInt One;25,781
  KnownBits(29,872
  KnownBits(37,1107
  unsigned getBitWidth(40,1219
  bool hasConflict(47,1454
  bool isConstant(50,1568
  const APInt &getConstant(getConstant57,1831
  bool isUnknown(63,2009
  void resetAll(66,2119
  bool isZero(72,2234
  bool isAllOnes(78,2390
  void setAllZero(84,2578
  void setAllOnes(90,2726
  bool isNegative(96,2858
  bool isNonNegative(99,2978
  bool isNonZero(102,3098
  bool isStrictlyPositive(105,3208
  void makeNegative(110,3330
  void makeNonNegative(115,3417
  APInt getMinValue(120,3544
  APInt getSignedMinValue(126,3727
  APInt getMaxValue(136,4022
  APInt getSignedMaxValue(142,4207
  KnownBits trunc(152,4503
  KnownBits anyext(158,4754
  KnownBits zext(163,4942
  KnownBits sext(171,5237
  KnownBits anyextOrTrunc(177,5445
  KnownBits zextOrTrunc(187,5744
  KnownBits sextOrTrunc(197,6039
  void insertBits(210,6457
  KnownBits extractBits(216,6704
  KnownBits concat(224,7068
  unsigned countMinTrailingZeros(233,7419
  unsigned countMinTrailingOnes(236,7546
  unsigned countMinLeadingZeros(239,7671
  unsigned countMinLeadingOnes(242,7796
  unsigned countMinSignBits(246,7953
  unsigned countMaxSignificantBits(260,8420
  unsigned countMaxTrailingZeros(265,8586
  unsigned countMaxTrailingOnes(268,8722
  unsigned countMaxLeadingZeros(271,8858
  unsigned countMaxLeadingOnes(274,8992
  unsigned countMinPopulation(277,9113
  unsigned countMaxPopulation(280,9239
  unsigned countMaxActiveBits(287,9513
  static KnownBits makeConstant(292,9656
  KnownBits intersectWith(302,10048
  KnownBits unionWith(312,10476
  LLVM_DEPRECATED(317,10635
  static bool haveNoCommonBitsSet(323,10873
  KnownBits byteSwap(446,16321
  KnownBits reverseBits(450,16412
  bool operator==(operator==462,16860
  bool operator!=(operator!=466,16966
inline KnownBits operator&(477,17312
inline KnownBits operator&(482,17409
inline KnownBits operator|(487,17519
inline KnownBits operator|(492,17616
inline KnownBits operator^(497,17726
inline KnownBits operator^(502,17823
inline raw_ostream &operator<<(operator<<507,17933

/usr/include/llvm/Support/LEB128.h,257
#define LLVM_SUPPORT_LEB128_H15,576
namespace llvm 19,646
inline unsigned encodeSLEB128(52,1725
inline unsigned encodeULEB128(80,2651
inline unsigned encodeULEB128(104,3319
inline uint64_t decodeULEB128(131,4076
inline int64_t decodeSLEB128(165,5081

/usr/include/llvm/Support/LLVMDriver.h,175
#define LLVM_SUPPORT_LLVMDRIVER_H10,404
struct ToolContext 14,457
  const char *Path;Path15,478
  const char *PrependArg;PrependArg16,498
  bool NeedsPrependArg;22,856

/usr/include/llvm/Support/MD5.h,403
#define LLVM_SUPPORT_MD5_H29,1023
class MD5 41,1251
  struct MD5Result 43,1271
    SmallString<32> digest(44,1325
    uint64_t high(53,1602
    std::pair<std::pair57,1742
    std::pair<uint64_t, uint64_t> words(57,1742
  typedef uint32_t MD5_u32plus;91,2843
    uint8_t buffer[buffer101,3083
    MD5_u32plus block[block102,3107
  } InternalState;103,3134
inline uint64_t MD5Hash(109,3284

/usr/include/llvm/Support/MathExtras.h,2753
#define LLVM_SUPPORT_MATHEXTRAS_H14,560
template <typename T> T maskTrailingOnes(65,3756
template <typename T> T maskLeadingOnes(74,4130
template <typename T> T maskTrailingZeros(80,4369
template <typename T> T maskLeadingZeros(86,4607
static const unsigned char BitReverseTable256[BitReverseTable25693,4851
#define R2(94,4906
#define R4(95,4958
#define R6(96,5026
#undef R298,5120
#undef R499,5130
#undef R6100,5140
template <typename T> T reverseBits(104,5186
constexpr inline uint32_t Hi_32(136,6249
constexpr inline uint32_t Lo_32(141,6393
constexpr inline uint64_t Make_64(146,6554
template <unsigned N> constexpr inline bool isInt(151,6727
template <unsigned N,165,7220
constexpr inline bool isShiftedInt(166,7254
template <unsigned N> constexpr inline bool isUInt(174,7606
template <unsigned N,189,8126
constexpr inline bool isShiftedUInt(190,8160
inline uint64_t maxUIntN(201,8640
inline int64_t minIntN(212,9012
inline int64_t maxIntN(219,9217
inline bool isUIntN(228,9557
inline bool isIntN(233,9717
constexpr inline bool isMask_32(240,10010
constexpr inline bool isMask_64(246,10257
constexpr inline bool isShiftedMask_32(252,10515
constexpr inline bool isShiftedMask_64(258,10741
constexpr inline bool isPowerOf2_32(264,10967
constexpr inline bool isPowerOf2_64(269,11134
inline bool isShiftedMask_32(278,11552
inline bool isShiftedMask_64(291,12083
template <size_t kValue> constexpr inline size_t CTLog2(302,12404
template <> constexpr inline size_t CTLog2<CTLog2308,12613
inline unsigned Log2_32(313,12856
inline unsigned Log2_64(319,13044
inline unsigned Log2_32_Ceil(326,13305
inline unsigned Log2_64_Ceil(332,13501
constexpr inline uint64_t MinAlign(338,13725
constexpr inline uint64_t NextPowerOf2(349,14130
inline uint64_t PowerOf2Ceil(361,14462
inline uint64_t alignTo(377,14888
inline uint64_t alignToPowerOf2(382,15041
inline uint64_t alignTo(403,15871
template <uint64_t Align> constexpr inline uint64_t alignTo(411,16201
inline uint64_t divideCeil(417,16439
inline uint64_t divideNearest(422,16627
inline uint64_t alignDown(428,16883
template <unsigned B> constexpr inline int32_t SignExtend32(436,17176
inline int32_t SignExtend32(444,17500
template <unsigned B> constexpr inline int64_t SignExtend64(452,17794
inline int64_t SignExtend64(460,18118
std::enable_if_t<std::is_unsigned_v<T>, T> AbsoluteDifference(469,18438
SaturatingAdd(478,18846
std::enable_if_t<std::is_unsigned_v<T>, T> SaturatingAdd(493,19301
SaturatingMultiply(507,19947
SaturatingMultiplyAdd(553,21438
std::enable_if_t<std::is_signed_v<T>, T> AddOverflow(571,21982
std::enable_if_t<std::is_signed_v<T>, T> SubOverflow(597,22783
std::enable_if_t<std::is_signed_v<T>, T> MulOverflow(623,23617

/usr/include/llvm/Support/MemAlloc.h,218
#define LLVM_SUPPORT_MEMALLOC_H17,702
namespace llvm 23,830
LLVM_ATTRIBUTE_RETURNS_NONNULL inline void *safe_calloc(safe_calloc38,1293
LLVM_ATTRIBUTE_RETURNS_NONNULL inline void *safe_realloc(safe_realloc52,1829

/usr/include/llvm/Support/OnDiskHashTable.h,4482
#define LLVM_SUPPORT_ONDISKHASHTABLE_H14,575
template <typename Info> class OnDiskChainedHashTableGenerator 58,2386
  class Item 60,2490
    typename Info::key_type Key;62,2515
    typename Info::data_type Data;63,2548
    Item *Next;Next64,2583
    const typename Info::hash_value_type Hash;65,2599
    Item(67,2647
  typedef typename Info::offset_type offset_type;72,2835
  offset_type NumBuckets;73,2885
  offset_type NumEntries;74,2911
  llvm::SpecificBumpPtrAllocator<Item> BA;75,2937
  struct Bucket 78,3040
    offset_type Off;79,3058
    unsigned Length;80,3079
    Item *Head;Head81,3100
  Bucket *Buckets;Buckets84,3122
  void insert(88,3206
  void resize(96,3441
  void insert(115,3945
  void insert(124,4205
  bool contains(133,4544
  offset_type Emit(142,4894
  offset_type Emit(150,5116
  OnDiskChainedHashTableGenerator(224,8012
  ~OnDiskChainedHashTableGenerator(232,8315
template <typename Info> class OnDiskChainedHashTable 273,10287
  const typename Info::offset_type NumBuckets;274,10343
  const typename Info::offset_type NumEntries;275,10390
  const unsigned char *const Buckets;276,10437
  const unsigned char *const Base;277,10475
  Info InfoObj;278,10510
  typedef Info InfoType;281,10535
  typedef typename Info::internal_key_type internal_key_type;282,10560
  typedef typename Info::external_key_type external_key_type;283,10622
  typedef typename Info::data_type data_type;284,10684
  typedef typename Info::hash_value_type hash_value_type;285,10730
  typedef typename Info::offset_type offset_type;286,10788
  OnDiskChainedHashTable(288,10839
  static std::pair<std::pair301,11486
  readNumBucketsAndEntries(302,11531
  offset_type getNumBuckets(315,12045
  offset_type getNumEntries(316,12104
  const unsigned char *getBase(getBase317,12163
  const unsigned char *getBuckets(getBuckets318,12219
  bool isEmpty(320,12282
  class iterator 322,12334
    internal_key_type Key;323,12353
    const unsigned char *const Data;324,12380
    const offset_type Len;325,12417
    Info *InfoObj;InfoObj326,12444
    iterator(329,12474
    iterator(330,12541
    data_type operator*(334,12704
    const unsigned char *getDataPtr(getDataPtr336,12783
    offset_type getDataLen(337,12844
    bool operator==(operator==339,12896
    bool operator!=(operator!=340,12968
  iterator find(344,13098
  iterator find_hashed(351,13418
  iterator end(408,15246
  Info &getInfoObj(getInfoObj410,15293
  static OnDiskChainedHashTable *Create(Create421,15727
class OnDiskIterableChainedHashTable 436,16396
  const unsigned char *Payload;Payload437,16473
  typedef OnDiskChainedHashTable<Info>          base_type;440,16514
  typedef typename base_type::internal_key_type internal_key_type;441,16573
  typedef typename base_type::external_key_type external_key_type;442,16640
  typedef typename base_type::data_type         data_type;443,16707
  typedef typename base_type::hash_value_type   hash_value_type;444,16766
  typedef typename base_type::offset_type       offset_type;445,16831
  class iterator_base 449,16952
    const unsigned char *Ptr;Ptr450,16976
    offset_type NumItemsInBucketLeft;451,17006
    offset_type NumEntriesLeft;452,17044
    typedef external_key_type value_type;455,17087
    iterator_base(457,17130
    iterator_base(459,17279
    friend bool operator==(operator==462,17370
    friend bool operator!=(operator!=465,17504
    void advance(470,17670
    const unsigned char *getItem(getItem492,18514
  OnDiskIterableChainedHashTable(498,18654
  class key_iterator 507,19130
    Info *InfoObj;InfoObj508,19176
    typedef external_key_type value_type;511,19206
    key_iterator(513,19249
    key_iterator(516,19416
    key_iterator &operator++(operator++518,19468
    key_iterator operator++(522,19550
    internal_key_type getInternalKey(528,19674
    value_type operator*(538,19948
  key_iterator key_begin(543,20051
  key_iterator key_end(546,20162
  iterator_range<key_iterator> keys(548,20215
  class data_iterator 553,20377
    Info *InfoObj;InfoObj554,20424
    typedef data_type value_type;557,20454
    data_iterator(559,20489
    data_iterator(562,20658
    data_iterator &operator++(operator++564,20711
    data_iterator operator++(568,20810
    value_type operator*(574,20936
  data_iterator data_begin(586,21294
  data_iterator data_end(589,21408
  iterator_range<data_iterator> data(591,21464
  Create(609,22205

/usr/include/llvm/Support/PGOOptions.h,953
#define LLVM_SUPPORT_PGOOPTIONS_H15,539
struct PGOOptions 27,757
  enum PGOAction 28,777
  enum PGOAction { NoAction,28,777
  enum PGOAction { NoAction, IRInstr,28,777
  enum PGOAction { NoAction, IRInstr, IRUse,28,777
  enum PGOAction { NoAction, IRInstr, IRUse, SampleUse 28,777
  enum CSPGOAction 29,835
  enum CSPGOAction { NoCSAction,29,835
  enum CSPGOAction { NoCSAction, CSIRInstr,29,835
  enum CSPGOAction { NoCSAction, CSIRInstr, CSIRUse 29,835
  PGOOptions(30,890
  PGOOptions(37,1310
  ~PGOOptions(38,1344
  PGOOptions &operator=operator39,1361
  std::string ProfileFile;41,1407
  std::string CSProfileGenFile;42,1434
  std::string ProfileRemappingFile;43,1466
  std::string MemoryProfile;44,1502
  PGOAction Action;45,1531
  CSPGOAction CSAction;46,1551
  bool DebugInfoForProfiling;47,1575
  bool PseudoProbeForProfiling;48,1605
  bool AtomicCounterUpdate;49,1637
  IntrusiveRefCntPtr<vfs::FileSystem> FS;50,1665

/usr/include/llvm/Support/RISCVAttributes.h,449
#define LLVM_SUPPORT_RISCVATTRIBUTES_H18,713
enum AttrType 27,879
  STACK_ALIGN 29,953
  ARCH 30,972
  UNALIGNED_ACCESS 31,984
  PRIV_SPEC 32,1008
  PRIV_SPEC_MINOR 33,1025
  PRIV_SPEC_REVISION 34,1049
enum StackAlign 37,1080
enum StackAlign { ALIGN_4 37,1080
enum StackAlign { ALIGN_4 = 4, ALIGN_8 37,1080
enum StackAlign { ALIGN_4 = 4, ALIGN_8 = 8, ALIGN_16 37,1080
enum { NOT_ALLOWED 39,1142
enum { NOT_ALLOWED = 0, ALLOWED 39,1142

/usr/include/llvm/Support/RISCVISAInfo.h,890
#define LLVM_SUPPORT_RISCVISAINFO_H10,406
class RISCVISAInfo 23,666
  struct ExtensionVersion 29,881
    unsigned Major;30,909
    unsigned Minor;31,929
  static bool compareExtension(34,955
  struct ExtensionComparator 37,1080
    bool operator(38,1111
  typedef std::map<std::string,std::string45,1351
  typedef std::map<std::string, ExtensionVersion,45,1351
      OrderedExtensionMap;46,1422
  RISCVISAInfo(48,1450
  const OrderedExtensionMap &getExtensions(getExtensions75,2867
  unsigned getXLen(77,2936
  unsigned getFLen(78,2980
  unsigned getMinVLen(79,3024
  unsigned getMaxVLen(80,3074
  unsigned getMaxELen(81,3122
  unsigned getMaxELenFp(82,3172
  RISCVISAInfo(98,3842
  unsigned XLen;101,3942
  unsigned FLen;102,3959
  unsigned MinVLen;103,3976
  unsigned MaxELen,104,3996
  unsigned MaxELen, MaxELenFp;104,3996
  OrderedExtensionMap Exts;106,4028

/usr/include/llvm/Support/RWMutex.h,1114
#define LLVM_SUPPORT_RWMUTEX_H14,540
#define LLVM_USE_RW_MUTEX_IMPL23,729
class RWMutexImpl 31,875
  explicit RWMutexImpl(37,1015
  ~RWMutexImpl(48,1261
  bool lock_shared(59,1612
  bool unlock_shared(64,1807
  bool lock(71,2121
  bool unlock(76,2308
template <bool mt_only> class SmartRWMutex 91,2711
  std::shared_mutex impl;93,2793
  RWMutexImpl impl;95,2825
  unsigned readers 97,2852
  unsigned writers 98,2876
  bool lock_shared(101,2909
  bool unlock_shared(113,3212
  bool lock(126,3590
  bool unlock(139,3940
typedef SmartRWMutex<false> RWMutex;153,4308
using SmartScopedReader 158,4460
template <bool mt_only> struct SmartScopedReader 160,4539
  SmartRWMutex<mt_only> &mutex;mutex161,4590
  explicit SmartScopedReader(163,4623
  ~SmartScopedReader(167,4721
typedef SmartScopedReader<false> ScopedReader;170,4781
using SmartScopedWriter 175,4943
template <bool mt_only> struct SmartScopedWriter 177,5015
  SmartRWMutex<mt_only> &mutex;mutex178,5066
  explicit SmartScopedWriter(180,5099
  ~SmartScopedWriter(184,5190
typedef SmartScopedWriter<false> ScopedWriter;187,5243

/usr/include/llvm/Support/Regex.h,427
#define LLVM_SUPPORT_REGEX_H17,761
  class Regex 28,947
    enum RegexFlags 30,973
      NoFlags 31,1006
      IgnoreCase 33,1100
      Newline 39,1494
      BasicRegex 43,1685
      LLVM_MARK_AS_BITMASK_ENUM(45,1708
      LLVM_MARK_AS_BITMASK_ENUM(BasicRegex)45,1708
    Regex(48,1760
    Regex(53,1982
    Regex(54,2038
    bool isValid(67,2426
    struct llvm_regex *preg;preg109,4411
    int error;110,4440

/usr/include/llvm/Support/SourceMgr.h,2129
#define LLVM_SUPPORT_SOURCEMGR_H16,675
class SourceMgr 31,1010
  enum DiagKind 33,1036
    DK_Error,34,1054
    DK_Warning,35,1068
    DK_Remark,36,1084
    DK_Note,37,1099
  struct SrcBuffer 46,1398
    std::unique_ptr<MemoryBuffer> Buffer;48,1459
    SMLoc IncludeLoc;75,2765
  std::vector<SrcBuffer> Buffers;85,3024
  std::vector<std::string> IncludeDirectories;88,3135
  bool isValidBufferID(93,3254
  ArrayRef<std::string> getIncludeDirs(104,3632
  void setIncludeDirs(106,3711
  void setDiagHandler(112,3953
  DiagHandlerTy getDiagHandler(117,4066
  void *getDiagContext(getDiagContext118,4129
  const SrcBuffer &getBufferInfo(getBufferInfo120,4185
  const MemoryBuffer *getMemoryBuffer(getMemoryBuffer125,4302
  unsigned getNumBuffers(130,4437
  unsigned getMainFileID(132,4498
  SMLoc getParentIncludeLoc(137,4581
  unsigned AddNewSourceBuffer(144,4807
  void takeSourceBuffersFrom(157,5329
  unsigned FindLineNumber(196,7027
  std::pair<std::pair202,7271
class SMFixIt 256,9762
  SMRange Range;257,9778
  std::string Text;259,9796
  SMFixIt(264,9874
  StringRef getText(267,9973
  SMRange getRange(268,10018
  bool operator<(270,10064
class SMDiagnostic 281,10546
  const SourceMgr *SM SM282,10567
  SMLoc Loc;283,10600
  std::string Filename;284,10613
  int LineNo 285,10637
  int ColumnNo 286,10655
  SourceMgr::DiagKind Kind 287,10675
  std::string Message,288,10725
  std::string Message, LineContents;288,10725
  std::vector<std::vector289,10762
  std::vector<std::pair<unsigned, unsigned>> Ranges;289,10762
  SmallVector<SmallVector290,10815
  SmallVector<SMFixIt, 4> FixIts;290,10815
  SMDiagnostic(296,10988
  const SourceMgr *getSourceMgr(getSourceMgr305,11442
  SMLoc getLoc(306,11497
  StringRef getFilename(307,11536
  int getLineNo(308,11589
  int getColumnNo(309,11632
  SourceMgr::DiagKind getKind(310,11679
  StringRef getMessage(311,11734
  StringRef getLineContents(312,11785
  ArrayRef<ArrayRef313,11846
  ArrayRef<std::pair<unsigned, unsigned>> getRanges(313,11846
  void addFixIt(315,11926
  ArrayRef<SMFixIt> getFixIts(317,11992

/usr/include/llvm/Support/SpecialCaseList.h,553
#define LLVM_SUPPORT_SPECIALCASELIST_H13,558
class SpecialCaseList 69,2626
  class Matcher 118,4728
    StringMap<StringMap126,5004
    StringMap<std::pair<GlobPattern, unsigned>> Globs;126,5004
    std::vector<std::vector127,5059
    std::vector<std::pair<std::unique_ptr<Regex>, unsigned>> RegExes;127,5059
  using SectionEntries 130,5135
  struct Section 132,5192
    Section(133,5211
    Section(134,5285
    std::unique_ptr<Matcher> SectionMatcher;136,5342
    SectionEntries Entries;137,5387
  StringMap<Section> Sections;140,5421

/usr/include/llvm/Support/StringSaver.h,42
#define LLVM_SUPPORT_STRINGSAVER_H10,405

/usr/include/llvm/Support/SwapByteOrder.h,189
#define LLVM_SUPPORT_SWAPBYTEORDER_H15,595
inline double getSwappedBytes(51,2082
inline std::enable_if_t<std::is_enum_v<T>, T> getSwappedBytes(56,2227
inline void swapByteOrder(61,2385

/usr/include/llvm/Support/ThreadSafeAllocator.h,323
#define LLVM_SUPPORT_THREADSAFEALLOCATOR_H10,413
template <class AllocatorType> class ThreadSafeAllocator 26,1045
  struct LockGuard 27,1104
    LockGuard(28,1125
    std::atomic_flag &Flag;Flag34,1388
  auto Allocate(38,1430
  auto Allocate(42,1544
  template <typename FnT,48,1705
  AllocatorType Alloc;56,1891

/usr/include/llvm/Support/TrailingObjects.h,3410
#define LLVM_SUPPORT_TRAILINGOBJECTS_H47,2012
template <typename First, typename... Rest> class AlignmentCalcHelper 62,2416
    FirstAlignment 65,2506
    RestAlignment 66,2543
    Alignment 71,2627
template <typename First> class AlignmentCalcHelper<AlignmentCalcHelper75,2716
  enum { Alignment 77,2785
class TrailingObjectsBase 81,2877
  template <typename T> struct OverloadToken 88,3204
template <typename Ty1,94,3403
template <typename Ty1, typename Ty2> struct ExtractSecondType 94,3403
  typedef Ty2 type;95,3468
template <int Align,106,3915
template <int Align, typename BaseTy,106,3915
template <int Align, typename BaseTy, typename TopTrailingObj,106,3915
template <int Align, typename BaseTy, typename TopTrailingObj, typename PrevTy,106,3915
class TrailingObjectsImpl 108,4026
template <int Align,113,4163
template <int Align, typename BaseTy,113,4163
template <int Align, typename BaseTy, typename TopTrailingObj,113,4163
template <int Align, typename BaseTy, typename TopTrailingObj, typename PrevTy,113,4163
          typename NextTy,114,4243
  typedef TrailingObjectsImpl<Align,Align120,4522
  typedef TrailingObjectsImpl<Align, BaseTy,120,4522
  typedef TrailingObjectsImpl<Align, BaseTy, TopTrailingObj,120,4522
  typedef TrailingObjectsImpl<Align, BaseTy, TopTrailingObj, NextTy,120,4522
      ParentType;121,4603
  struct RequiresRealignment 123,4622
    static const bool value 124,4653
  static constexpr bool requiresRealignment(127,4724
  using ParentType::getTrailingObjectsImpl;133,4891
  getTrailingObjectsImpl(145,5509
  getTrailingObjectsImpl(160,6092
  static constexpr size_t additionalSizeToAllocImpl(176,6816
template <int Align,189,7328
template <int Align, typename BaseTy,189,7328
template <int Align, typename BaseTy, typename TopTrailingObj,189,7328
template <typename BaseTy,211,8153
class TrailingObjects 212,8205
  template <int A,218,8553
  template <int A, typename B,218,8553
  template <int A, typename B, typename T,218,8553
  template <int A, typename B, typename T, typename P,218,8553
  template <typename... Tys> class Foo 221,8687
      trailing_objects_internal::AlignmentCalcHelper<TrailingTys...>::Alignment,Alignment224,8789
      BaseTy,225,8870
      BaseTy, TrailingObjects<TrailingObjects225,8870
      BaseTy, TrailingObjects<BaseTy, TrailingTys...>, BaseTy,225,8870
      ParentType;226,8949
  using TrailingObjectsBase 227,8967
  using ParentType::getTrailingObjectsImpl;229,9046
  static void verifyTrailingObjectsAssertions(235,9350
  getTrailingObjectsImpl(241,9568
  getTrailingObjectsImpl(247,9722
  callNumTrailingObjects(260,10298
  static size_t callNumTrailingObjects(266,10456
  using ParentType::OverloadToken;274,10753
  using OverloadToken 279,10972
  template <typename T> const T *getTrailingObjects(getTrailingObjects285,11245
  template <typename T> T *getTrailingObjects(getTrailingObjects297,11791
  additionalSizeToAlloc(314,12655
  totalSizeToAlloc(326,13214
  template <typename... Tys> struct FixedSizeStorage 352,14286
    template <size_t... Counts> struct with_counts 353,14341
      enum { Size 354,14394
      struct type 355,14453
  class FixedSizeStorageOwner 362,14615
    FixedSizeStorageOwner(364,14657
    ~FixedSizeStorageOwner(365,14704
    BaseTy *get(get370,14817
    const BaseTy *get(get371,14849
    BaseTy *const p;379,15186

/usr/include/llvm/Support/TypeName.h,39
#define LLVM_SUPPORT_TYPENAME_H10,402

/usr/include/llvm/Support/TypeSize.h,2648
#define LLVM_SUPPORT_TYPESIZE_H16,708
class StackOffset 33,1168
  StackOffset(37,1234
  static StackOffset getFixed(42,1361
  static StackOffset getScalable(43,1429
  static StackOffset get(44,1506
  int64_t getFixed(49,1649
  int64_t getScalable(52,1746
  explicit operator bool(82,2710
template <typename LeafTy, typename ValueTy> class FixedOrScalableQuantity 88,2859
  constexpr FixedOrScalableQuantity(97,3084
  friend constexpr LeafTy operator*operator135,4210
  operator-(142,4433
  constexpr bool operator==(operator==148,4525
  constexpr bool operator!=(operator!=152,4667
  constexpr bool isZero(156,4809
  constexpr bool isNonZero(158,4868
  explicit operator bool(operator bool160,4930
  constexpr LeafTy getWithIncrement(163,5033
  constexpr ScalarTy getKnownMinValue(168,5207
  constexpr bool isScalable(171,5352
  constexpr bool isKnownEven(176,5634
  constexpr bool isKnownMultipleOf(180,5852
  constexpr ScalarTy getFixedValue(187,6183
  static constexpr bool isKnownLT(203,6862
  static constexpr bool isKnownGT(210,7136
  static constexpr bool isKnownLE(217,7410
  static constexpr bool isKnownGE(224,7685
  constexpr LeafTy divideCoefficientBy(239,8427
  constexpr LeafTy multiplyCoefficientBy(243,8557
  constexpr LeafTy coefficientNextPowerOf2(247,8689
  hasKnownScalarFactor(256,9023
  getKnownScalarFactor(264,9344
  void print(270,9576
class ElementCount284,10033
  constexpr ElementCount(286,10124
  constexpr ElementCount(289,10235
  constexpr ElementCount(294,10372
  static constexpr ElementCount getFixed(296,10431
  static constexpr ElementCount getScalable(299,10535
  static constexpr ElementCount get(302,10641
  constexpr bool isScalar(307,10786
  constexpr bool isVector(311,10907
class TypeSize 319,11207
  TypeSize(320,11286
  constexpr TypeSize(324,11398
  constexpr TypeSize(326,11461
  static constexpr TypeSize get(329,11572
  static constexpr TypeSize getFixed(332,11685
  static constexpr TypeSize getScalable(335,11787
  friend constexpr TypeSize operator*(367,13191
  friend constexpr TypeSize operator*(370,13303
  friend constexpr TypeSize operator*(373,13420
  friend constexpr TypeSize operator*(376,13536
  friend constexpr TypeSize operator*(379,13638
  friend constexpr TypeSize operator*(382,13745
  friend constexpr TypeSize operator*(385,13851
inline constexpr TypeSize alignTo(399,14392
template <typename LeafTy,406,14668
operator<<(408,14735
  static inline ElementCount getEmptyKey(415,14924
  static inline ElementCount getTombstoneKey(418,15016
  static unsigned getHashValue(421,15113
  static bool isEqual(428,15313

/usr/include/llvm/Support/VersionTuple.h,1299
#define LLVM_SUPPORT_VERSIONTUPLE_H15,615
class VersionTuple 29,981
  unsigned Major 30,1002
  unsigned Minor 32,1026
  unsigned HasMinor 33,1049
  unsigned Subminor 35,1075
  unsigned HasSubminor 36,1101
  unsigned Build 38,1130
  unsigned HasBuild 39,1153
  constexpr VersionTuple(42,1187
  explicit constexpr VersionTuple(46,1330
  explicit constexpr VersionTuple(50,1500
  explicit constexpr VersionTuple(54,1689
  explicit constexpr VersionTuple(59,1937
  bool empty(66,2309
  unsigned getMajor(71,2446
  std::optional<unsigned> getMinor(74,2547
  std::optional<unsigned> getSubminor(81,2718
  std::optional<unsigned> getBuild(88,2895
  VersionTuple withoutBuild(95,3089
  VersionTuple withMajorReplaced(103,3327
  VersionTuple normalize(108,3529
  friend bool operator==(operator==123,3971
  friend bool operator!=(operator!=132,4319
  friend bool operator<(140,4577
  friend bool operator>(149,4932
  friend bool operator<=(operator<=158,5211
  friend bool operator>=(operator>=167,5493
  template <typename HasherT,175,5721
template <> struct DenseMapInfo<DenseMapInfo194,6398
  static inline VersionTuple getEmptyKey(195,6446
  static inline VersionTuple getTombstoneKey(196,6526
  static unsigned getHashValue(199,6616
  static bool isEqual(211,7038

/usr/include/llvm/Support/VirtualFileSystem.h,7609
#define LLVM_SUPPORT_VIRTUALFILESYSTEM_H15,571
class Status 47,1287
  std::string Name;48,1302
  llvm::sys::fs::UniqueID UID;49,1322
  llvm::sys::TimePoint<> MTime;50,1353
  uint32_t User;51,1385
  uint32_t Group;52,1402
  uint64_t Size;53,1420
  llvm::sys::fs::perms Perms;55,1511
  StringRef getName(87,2953
  llvm::sys::fs::file_type getType(91,3056
  llvm::sys::fs::perms getPermissions(92,3116
  llvm::sys::TimePoint<> getLastModificationTime(93,3180
  llvm::sys::fs::UniqueID getUniqueID(94,3255
  uint32_t getUser(95,3317
  uint32_t getGroup(96,3361
  uint64_t getSize(97,3407
class File 113,3794
  virtual llvm::ErrorOr<std::string> getName(124,4142
  virtual void setPath(145,4826
class directory_entry 150,4999
  std::string Path;151,5023
  llvm::sys::fs::file_type Type 152,5043
  directory_entry(156,5157
  llvm::StringRef path(159,5270
  llvm::sys::fs::file_type type(160,5318
namespace detail 163,5379
struct DirIterImpl 167,5518
  directory_entry CurrentEntry;174,5763
class directory_iterator 181,5930
  std::shared_ptr<detail::DirIterImpl> Impl;182,5957
  directory_iterator(185,6047
  directory_iterator &increment(increment196,6450
  const directory_entry &operator*(operator*204,6725
  const directory_entry *operator->(operator->205,6799
  bool operator==(operator==207,6876
  bool operator!=(operator!=212,7067
namespace detail 219,7179
struct RecDirIterState 222,7253
  std::stack<std::stack223,7278
  std::stack<directory_iterator, std::vector<directory_iterator>> Stack;223,7278
class recursive_directory_iterator 231,7544
  FileSystem *FS;FS232,7581
      State;234,7642
  const directory_entry &operator*(operator*246,8018
  const directory_entry *operator->(operator->247,8093
  bool operator==(operator==249,8171
  bool operator!=(operator!=252,8289
  int level(257,8448
  void no_push(263,8607
class FileSystem 267,8703
  enum class PrintType 321,11107
  enum class PrintType { Summary,321,11107
  enum class PrintType { Summary, Contents,321,11107
  enum class PrintType { Summary, Contents, RecursiveContents 321,11107
  void print(322,11172
  virtual void printImpl(332,11437
  void printIndent(338,11615
class OverlayFileSystem 366,12867
  using FileSystemList 367,12913
  FileSystemList FSList;371,13076
  using iterator 389,13843
  using const_iterator 390,13896
  using reverse_iterator 391,13961
  using const_reverse_iterator 392,14014
  using range 393,14079
  using const_range 394,14121
  iterator overlays_begin(397,14247
  const_iterator overlays_begin(398,14303
  iterator overlays_end(401,14450
  const_iterator overlays_end(402,14502
  reverse_iterator overlays_rbegin(405,14639
  const_reverse_iterator overlays_rbegin(406,14703
  reverse_iterator overlays_rend(409,14857
  const_reverse_iterator overlays_rend(410,14917
  range overlays_range(412,14990
  const_range overlays_range(413,15049
class ProxyFileSystem 423,15419
  explicit ProxyFileSystem(425,15471
  llvm::ErrorOr<Status> status(428,15563
  openFileForRead(432,15696
  directory_iterator dir_begin(435,15786
  llvm::ErrorOr<std::string> getCurrentWorkingDirectory(438,15906
  std::error_code setCurrentWorkingDirectory(441,16030
  std::error_code getRealPath(444,16158
  std::error_code isLocal(448,16331
  FileSystem &getUnderlyingFS(getUnderlyingFS453,16455
  IntrusiveRefCntPtr<FileSystem> FS;456,16519
namespace detail 461,16586
struct NewInMemoryNodeInfo 466,16652
  llvm::sys::fs::UniqueID DirUID;467,16681
  StringRef Path;468,16715
  StringRef Name;469,16733
  time_t ModificationTime;470,16751
  std::unique_ptr<llvm::MemoryBuffer> Buffer;471,16778
  uint32_t User;472,16824
  uint32_t Group;473,16841
  llvm::sys::fs::file_type Type;474,16859
  llvm::sys::fs::perms Perms;475,16892
class NamedNodeOrError 480,16956
  ErrorOr<ErrorOr481,16981
      Value;482,17056
  NamedNodeOrError(485,17078
  NamedNodeOrError(488,17224
  NamedNodeOrError(489,17278
  StringRef getName(491,17328
  explicit operator bool(operator bool492,17383
  operator std::error_code(error_code493,17453
  std::error_code getError(494,17517
  const detail::InMemoryNode *operator*(operator*495,17581
class InMemoryFileSystem 501,17714
  std::unique_ptr<detail::InMemoryDirectory> Root;502,17761
  std::string WorkingDirectory;503,17812
  bool UseNormalizedPaths 504,17844
  using MakeNodeFn 506,17879
  static constexpr size_t MaxSymlinkDepth 559,20614
  bool useNormalizedPaths(587,22056
  llvm::ErrorOr<std::string> getCurrentWorkingDirectory(594,22349
struct YAMLVFSEntry 624,23659
  template <typename T1,625,23681
  YAMLVFSEntry(626,23719
  std::string VPath;629,23892
  std::string RPath;630,23913
  bool IsDirectory 631,23934
class RedirectingFileSystem 742,28268
  enum EntryKind 744,28331
  enum EntryKind { EK_Directory,744,28331
  enum EntryKind { EK_Directory, EK_DirectoryRemap,744,28331
  enum EntryKind { EK_Directory, EK_DirectoryRemap, EK_File 744,28331
  enum NameKind 745,28394
  enum NameKind { NK_NotSet,745,28394
  enum NameKind { NK_NotSet, NK_External,745,28394
  enum NameKind { NK_NotSet, NK_External, NK_Virtual 745,28394
  enum class RedirectKind 748,28493
    Fallthrough,752,28702
    Fallback,755,28832
    RedirectOnly758,28939
  enum class RootRelativeKind 762,29009
    CWD,764,29106
    OverlayDir767,29207
  class Entry 771,29273
    EntryKind Kind;772,29289
    std::string Name;773,29309
    Entry(776,29342
    StringRef getName(779,29439
    EntryKind getKind(780,29486
  class DirectoryEntry 784,29604
    std::vector<std::unique_ptr<Entry>> Contents;785,29644
    Status S;786,29694
    DirectoryEntry(790,29792
    DirectoryEntry(796,30045
    Status getStatus(799,30147
    void addContent(801,30185
    Entry *getLastContent(getLastContent805,30292
    iterator contents_begin(809,30413
    iterator contents_end(810,30472
    static bool classof(812,30528
  class RemapEntry 817,30724
    std::string ExternalContentsPath;818,30760
    NameKind UseName;819,30798
    RemapEntry(822,30834
    StringRef getExternalContentsPath(828,31054
    bool useExternalName(831,31215
    NameKind getUseName(836,31403
    static bool classof(838,31456
  class DirectoryRemapEntry 853,31826
    DirectoryRemapEntry(855,31886
    static bool classof(859,32081
  class FileEntry 865,32256
    FileEntry(867,32306
    static bool classof(870,32457
  struct LookupResult 874,32616
    llvm::SmallVector<llvm::SmallVector876,32692
    llvm::SmallVector<Entry *, 32> Parents;876,32692
    Entry *E;E879,32790
    std::optional<std::string> ExternalRedirect;885,32998
    std::optional<StringRef> getExternalRedirect(894,33337
  bool pathComponentMatches(942,35498
  std::vector<std::unique_ptr<Entry>> Roots;949,35790
  std::string WorkingDirectory;952,35892
  IntrusiveRefCntPtr<FileSystem> ExternalFS;955,35979
  std::string OverlayFileDir;961,36324
  bool CaseSensitive 969,36526
  bool IsRelativeOverlay 973,36734
  bool UseExternalNames 977,36915
  RedirectKind Redirection 981,37052
  RootRelativeKind RootRelative 985,37222
class YAMLVFSWriter 1066,40710
  std::vector<YAMLVFSEntry> Mappings;1067,40732
  std::optional<bool> IsCaseSensitive;1068,40770
  std::optional<bool> IsOverlayRelative;1069,40809
  std::optional<bool> UseExternalNames;1070,40850
  std::string OverlayDir;1071,40890
  void setCaseSensitivity(1081,41172
  void setUseExternalNames(1085,41262
  void setOverlayDir(1087,41344
  const std::vector<YAMLVFSEntry> &getMappings(getMappings1092,41477

/usr/include/llvm/Support/Win64EH.h,3007
#define LLVM_SUPPORT_WIN64EH_H16,682
enum UnwindOpcodes 26,927
  UOP_PushNonVol 30,1177
  UOP_AllocLarge,31,1199
  UOP_AllocSmall,32,1217
  UOP_SetFPReg,33,1235
  UOP_SaveNonVol,34,1251
  UOP_SaveNonVolBig,35,1269
  UOP_Epilog,36,1290
  UOP_SpareCode,37,1304
  UOP_SaveXMM128,38,1321
  UOP_SaveXMM128Big,39,1339
  UOP_PushMachFrame,40,1360
  UOP_AllocMedium,43,1533
  UOP_SaveR19R20X,44,1552
  UOP_SaveFPLRX,45,1571
  UOP_SaveFPLR,46,1588
  UOP_SaveReg,47,1604
  UOP_SaveRegX,48,1619
  UOP_SaveRegP,49,1635
  UOP_SaveRegPX,50,1651
  UOP_SaveLRPair,51,1668
  UOP_SaveFReg,52,1686
  UOP_SaveFRegX,53,1702
  UOP_SaveFRegP,54,1719
  UOP_SaveFRegPX,55,1736
  UOP_SetFP,56,1754
  UOP_AddFP,57,1767
  UOP_Nop,58,1780
  UOP_End,59,1791
  UOP_SaveNext,60,1802
  UOP_TrapFrame,61,1818
  UOP_Context,62,1835
  UOP_ECContext,63,1850
  UOP_ClearUnwoundToCall,64,1867
  UOP_PACSignLR,65,1893
  UOP_SaveAnyRegI,66,1910
  UOP_SaveAnyRegIP,67,1929
  UOP_SaveAnyRegD,68,1949
  UOP_SaveAnyRegDP,69,1968
  UOP_SaveAnyRegQ,70,1988
  UOP_SaveAnyRegQP,71,2007
  UOP_SaveAnyRegIX,72,2027
  UOP_SaveAnyRegIPX,73,2047
  UOP_SaveAnyRegDX,74,2068
  UOP_SaveAnyRegDPX,75,2088
  UOP_SaveAnyRegQX,76,2109
  UOP_SaveAnyRegQPX,77,2129
  UOP_AllocHuge,88,2733
  UOP_WideAllocMedium,89,2750
  UOP_WideAllocLarge,90,2773
  UOP_WideAllocHuge,91,2795
  UOP_WideSaveRegMask,93,2817
  UOP_SaveSP,94,2840
  UOP_SaveRegsR4R7LR,95,2854
  UOP_WideSaveRegsR4R11LR,96,2876
  UOP_SaveFRegD8D15,97,2903
  UOP_SaveRegMask,98,2924
  UOP_SaveLR,99,2943
  UOP_SaveFRegD0D15,100,2957
  UOP_SaveFRegD16D31,101,2978
  UOP_WideNop,103,3030
  UOP_EndNop,105,3075
  UOP_WideEndNop,106,3089
  UOP_Custom,109,3255
union UnwindCode 114,3373
    uint8_t CodeOffset;116,3403
    uint8_t UnwindOpAndOpInfo;117,3427
  } u;118,3458
  support::ulittle16_t FrameOffset;119,3465
  uint8_t getUnwindOp(121,3502
  uint8_t getOpInfo(124,3577
  UNW_ExceptionHandler 132,3758
  UNW_TerminateHandler 135,3880
  UNW_ChainInfo 138,4007
struct RuntimeFunction 142,4109
  support::ulittle32_t StartAddress;143,4134
  support::ulittle32_t EndAddress;144,4171
  support::ulittle32_t UnwindInfoOffset;145,4206
struct UnwindInfo 149,4301
  uint8_t VersionAndFlags;150,4321
  uint8_t PrologSize;151,4348
  uint8_t NumCodes;152,4370
  uint8_t FrameRegisterAndOffset;153,4390
  UnwindCode UnwindCodes[UnwindCodes154,4424
  uint8_t getVersion(156,4454
  uint8_t getFlags(159,4524
  uint8_t getFrameRegister(162,4599
  uint8_t getFrameOffset(165,4682
  void *getLanguageSpecificData(getLanguageSpecificData178,5232
  const void *getLanguageSpecificData(getLanguageSpecificData183,5410
  uint32_t getLanguageSpecificHandlerOffset(188,5616
  void setLanguageSpecificHandlerOffset(194,5850
  void *getExceptionData(getExceptionData200,6054
  RuntimeFunction *getChainedFunctionEntry(getChainedFunctionEntry206,6280
  const RuntimeFunction *getChainedFunctionEntry(getChainedFunctionEntry211,6452

/usr/include/llvm/Support/WithColor.h,768
#define LLVM_SUPPORT_WITHCOLOR_H10,403
enum class HighlightColor 27,695
  Address,28,723
  String,29,734
  Tag,30,744
  Attribute,31,751
  Enumerator,32,764
  Macro,33,778
  Error,34,787
  Warning,35,796
  Note,36,807
  Remark37,815
enum class ColorMode 40,828
  Auto,43,950
  Enable,47,1124
  Disable,49,1156
class WithColor 54,1258
  using AutoDetectFunctionType 56,1284
  LLVM_CTOR_NODISCARD WithColor(71,2163
  raw_ostream &get(get79,2432
  operator raw_ostream operator raw_ostream80,2468
  template <typename T> WithColor &operator<<(operator<<81,2510
  template <typename T> WithColor &operator<<(operator<<85,2599
  raw_ostream &OS;OS143,5050
  ColorMode Mode;144,5069
  static AutoDetectFunctionType AutoDetectFunction;146,5088

/usr/include/llvm/Support/X86DisassemblerDecoderCommon.h,2919
#define LLVM_SUPPORT_X86DISASSEMBLERDECODERCOMMON_H17,721
#define INSTRUCTIONS_SYM 24,857
#define CONTEXTS_SYM 25,913
#define ONEBYTE_SYM 26,958
#define TWOBYTE_SYM 27,1008
#define THREEBYTE38_SYM 28,1058
#define THREEBYTE3A_SYM 29,1116
#define XOP8_MAP_SYM 30,1174
#define XOP9_MAP_SYM 31,1222
#define XOPA_MAP_SYM 32,1270
#define THREEDNOW_MAP_SYM 33,1318
#define MAP4_SYM 34,1372
#define MAP5_SYM 35,1416
#define MAP6_SYM 36,1460
#define MAP7_SYM 37,1504
#define INSTRUCTIONS_STR 39,1549
#define CONTEXTS_STR 40,1607
#define ONEBYTE_STR 41,1654
#define TWOBYTE_STR 42,1706
#define THREEBYTE38_STR 43,1758
#define THREEBYTE3A_STR 44,1818
#define XOP8_MAP_STR 45,1878
#define XOP9_MAP_STR 46,1928
#define XOPA_MAP_STR 47,1978
#define THREEDNOW_MAP_STR 48,2028
#define MAP4_STR 49,2084
#define MAP5_STR 50,2130
#define MAP6_STR 51,2176
#define MAP7_STR 52,2222
enum attributeBits 57,2496
  ATTR_NONE 58,2517
  ATTR_64BIT 59,2537
  ATTR_XS 60,2562
  ATTR_XD 61,2584
  ATTR_REXW 62,2606
  ATTR_OPSIZE 63,2630
  ATTR_ADSIZE 64,2656
  ATTR_VEX 65,2682
  ATTR_VEXL 66,2705
  ATTR_EVEX 67,2729
  ATTR_EVEXL2 68,2753
  ATTR_EVEXK 69,2779
  ATTR_EVEXKZ 70,2805
  ATTR_EVEXB 71,2832
  ATTR_REX2 72,2858
  ATTR_EVEXNF 73,2883
  ATTR_max 74,2910
#define INSTRUCTION_CONTEXTS 82,3221
#define ENUM_ENTRY(323,22659
enum InstructionContext 324,22690
enum InstructionContext { INSTRUCTION_CONTEXTS 324,22690
enum InstructionContext { INSTRUCTION_CONTEXTS IC_max 324,22690
#undef ENUM_ENTRY325,22747
enum OpcodeType 329,22880
  ONEBYTE 330,22898
  TWOBYTE 331,22913
  THREEBYTE_38 332,22928
  THREEBYTE_3A 333,22948
  XOP8_MAP 334,22968
  XOP9_MAP 335,22984
  XOPA_MAP 336,23000
  THREEDNOW_MAP 337,23016
  MAP4 338,23037
  MAP5 339,23049
  MAP6 340,23061
  MAP7 341,23074
typedef uint16_t InstrUID;351,23518
#define MODRMTYPES 369,24558
#define ENUM_ENTRY(376,24989
enum ModRMDecisionType 377,25014
enum ModRMDecisionType { MODRMTYPES 377,25014
enum ModRMDecisionType { MODRMTYPES MODRM_max 377,25014
#undef ENUM_ENTRY378,25063
#define CASE_ENCODING_RM 380,25082
#define CASE_ENCODING_VSIB 389,25674
#define ENCODINGS 399,26315
#define ENUM_ENTRY(440,29543
enum OperandEncoding 441,29571
enum OperandEncoding { ENCODINGS 441,29571
enum OperandEncoding { ENCODINGS ENCODING_max 441,29571
#undef ENUM_ENTRY442,29620
#define TYPES 445,29692
#define ENUM_ENTRY(482,32565
enum OperandType 483,32593
enum OperandType { TYPES 483,32593
enum OperandType { TYPES TYPE_max 483,32593
#undef ENUM_ENTRY484,32630
struct OperandSpecifier 487,32717
  uint8_t encoding;488,32743
  uint8_t type;489,32763
static const unsigned X86_MAX_OPERANDS 492,32783
enum DisassemblerMode 497,33004
enum DisassemblerMode { MODE_16BIT,497,33004
enum DisassemblerMode { MODE_16BIT, MODE_32BIT,497,33004
enum DisassemblerMode { MODE_16BIT, MODE_32BIT, MODE_64BIT 497,33004

/usr/include/llvm/Support/X86FoldTablesUtils.h,640
#define LLVM_SUPPORT_X86FOLDTABLESUTILS_H10,412
  TB_INDEX_0 16,559
  TB_INDEX_1 17,577
  TB_INDEX_2 18,595
  TB_INDEX_3 19,613
  TB_INDEX_4 20,631
  TB_INDEX_MASK 21,649
  TB_NO_REVERSE 25,805
  TB_NO_FORWARD 30,1009
  TB_FOLDED_LOAD 32,1036
  TB_FOLDED_STORE 33,1063
  TB_FOLDED_BCAST 34,1091
  TB_ALIGN_SHIFT 39,1259
  TB_ALIGN_1 40,1281
  TB_ALIGN_16 41,1317
  TB_ALIGN_32 42,1354
  TB_ALIGN_64 43,1391
  TB_ALIGN_MASK 44,1428
  TB_BCAST_TYPE_SHIFT 48,1521
  TB_BCAST_W 49,1565
  TB_BCAST_D 50,1606
  TB_BCAST_Q 51,1647
  TB_BCAST_SS 52,1688
  TB_BCAST_SD 53,1730
  TB_BCAST_SH 54,1772
  TB_BCAST_MASK 55,1814

/usr/include/llvm/Support/YAMLParser.h,2465
#define LLVM_SUPPORT_YAMLPARSER_H37,1194
class Stream 86,2591
  bool validate(101,3005
  std::unique_ptr<Scanner> scanner;114,3337
  std::unique_ptr<Document> CurrentDoc;115,3373
class Node 119,3456
  enum NodeKind 123,3503
    NK_Null,124,3521
    NK_Scalar,125,3534
    NK_BlockScalar,126,3549
    NK_KeyValue,127,3569
    NK_Mapping,128,3586
    NK_Sequence,129,3602
    NK_Alias130,3619
  void *operator new(operator new141,3916
  void operator delete(operator delete146,4079
  StringRef getAnchor(155,4402
  StringRef getRawTag(159,4551
  SMRange getSourceRange(165,4737
  void setSourceRange(166,4794
  virtual void skip(176,5093
  unsigned int getType(178,5119
  std::unique_ptr<Document> &Doc;Doc181,5181
  SMRange SourceRange;182,5215
  unsigned int TypeID;187,5270
  StringRef Anchor;188,5293
  StringRef Tag;190,5353
template <class BaseT, class ValueT> class basic_collection_iterator 333,9383
  using iterator_category 335,9462
  using value_type 336,9515
  using difference_type 337,9544
  using pointer 338,9586
  using reference 339,9618
  basic_collection_iterator(342,9694
  ValueT *operator->(operator->344,9746
  ValueT &operator*(operator*349,9892
  operator ValueT operator ValueT355,10054
  bool operator==(operator==367,10514
  bool operator!=(operator!=376,10792
  basic_collection_iterator &operator++(operator++380,10897
  BaseT *Base Base390,11141
typename CollectionType::iterator begin(395,11282
template <class CollectionType> void skip(403,11518
  enum MappingType 423,12122
    MT_Block,424,12143
    MT_Flow,425,12157
    MT_Inline 426,12170
  enum SequenceType 471,13322
    ST_Block,472,13344
    ST_Flow,473,13358
    ST_Indentless481,13514
class Document 536,14918
  Node *getRoot(getRoot548,15233
  const std::map<std::map554,15327
  const std::map<StringRef, StringRef> &getTagMap(getTagMap554,15327
  Stream &stream;stream561,15504
  BumpPtrAllocator NodeAllocator;565,15652
  Node *Root;Root569,15775
  std::map<std::map572,15834
  std::map<StringRef, StringRef> TagMap;572,15834
class document_iterator 593,16338
  document_iterator(596,16405
  bool operator==(operator==598,16469
  bool operator!=(operator!=604,16642
  document_iterator operator++(608,16735
  Document &operator*(operator*619,16993
  std::unique_ptr<Document> &operator->(operator->621,17036
  bool isAtEnd(624,17105
  std::unique_ptr<Document> *Doc Doc626,17155

/usr/include/llvm/Support/YAMLTraits.h,6311
#define LLVM_SUPPORT_YAMLTRAITS_H10,404
enum class NodeKind 42,1137
  Scalar,43,1169
  Map,44,1179
  Sequence,45,1186
struct EmptyContext 48,1202
struct MappingTraits 61,1615
template <class T, class Context> struct MappingContextTraits 84,2425
template <typename T,106,3302
template <typename T, typename Enable 106,3302
template <typename T,122,3913
template <typename T, typename Enable 122,3913
enum class QuotingType 130,4274
enum class QuotingType { None,130,4274
enum class QuotingType { None, Single,130,4274
enum class QuotingType { None, Single, Double 130,4274
template <typename T,148,4990
template <typename T, typename Enable 148,4990
struct BlockScalarTraits 179,6145
template <typename T> struct TaggedScalarTraits 215,7479
template<typename T,245,8561
template<typename T, typename EnableIf 245,8561
template<typename T,258,9036
template<typename T, typename EnableIf 258,9036
struct DocumentListTraits 267,9301
struct CustomMappingTraits 277,9673
template <typename T> struct PolymorphicTraits 299,10390
struct has_ScalarEnumerationTraits313,10823
  using Signature_enumeration 315,10860
  static bool const value 323,11066
struct has_ScalarBitSetTraits329,11234
  using Signature_bitset 331,11266
  static bool const value 339,11457
struct has_ScalarTraits344,11610
  using Signature_input 346,11636
  using Signature_output 347,11699
  using Signature_mustQuote 348,11767
  static bool const value 358,12091
struct has_BlockScalarTraits364,12267
  using Signature_input 366,12298
  using Signature_output 367,12363
  static bool const value 376,12633
template <class T> struct has_TaggedScalarTraits 381,12787
  using Signature_input 382,12838
  using Signature_output 383,12914
  using Signature_mustQuote 385,13036
  static bool const value 394,13369
template <class T, class Context> struct has_MappingTraits 399,13535
  using Signature_mapping 400,13596
  static bool const value 408,13803
  using Signature_mapping 414,14018
  static bool const value 421,14213
template <class T, class Context> struct has_MappingValidateTraits 425,14362
  using Signature_validate 426,14431
  static bool const value 434,14648
  using Signature_validate 440,14883
  static bool const value 447,15088
template <class T, class Context> struct has_MappingEnumInputTraits 451,15238
  using Signature_validate 452,15308
  static bool const value 459,15507
  using Signature_validate 465,15744
  static bool const value 472,15943
struct has_SequenceMethodTraits477,16093
  using Signature_size 479,16127
  static bool const value 487,16314
struct has_CustomMappingTraits492,16471
  using Signature_input 494,16504
  static bool const value 502,16709
template <typename T,509,16997
template <typename T, bool Enabled 509,16997
  struct Fallback 520,17347
  struct Fallback { bool flow;520,17347
  struct Derived 521,17381
  static bool const value 529,17556
struct has_SequenceTraits 534,17693
struct has_DocumentListTraits539,17911
  using Signature_size 541,17943
  static bool const value 549,18132
template <class T> struct has_PolymorphicTraits 552,18215
  using Signature_getKind 553,18265
  static bool const value 560,18458
inline bool isNumeric(563,18542
  enum ParseState 609,20184
    Default,610,20204
    FoundDot,611,20217
    FoundExponent,612,20231
inline bool isNull(658,21084
inline bool isBool(663,21214
inline QuotingType needsQuotes(674,21761
#define LLVM_YAML_STRONG_TYPEDEF(1719,56487
struct ScalarTraits<ScalarTraits1744,57843
  static QuotingType mustQuote(1747,57983
struct ScalarTraits<ScalarTraits1751,58070
  static QuotingType mustQuote(1754,58213
struct ScalarTraits<ScalarTraits1758,58300
  static QuotingType mustQuote(1761,58443
struct ScalarTraits<ScalarTraits1765,58530
  static QuotingType mustQuote(1768,58673
template <> struct ScalarTraits<ScalarTraits1771,58749
  static QuotingType mustQuote(1774,58939
operator>>(1780,59181
operator>>(1796,59642
operator>>(1807,59952
operator>>(1817,60258
operator>>(1827,60554
operator>>(1837,60854
operator>>(1847,61155
operator<<(1855,61436
operator<<(1873,62010
operator<<(1887,62398
operator<<(1901,62793
operator<<(1915,63179
operator<<(1930,63572
operator<<(1947,64231
template <bool B> struct IsFlowSequenceBase 1952,64345
template <> struct IsFlowSequenceBase<IsFlowSequenceBase1953,64393
template <> struct IsFlowSequenceBase<true> { static const bool flow 1953,64393
template <typename T,1955,64474
template <typename T, typename U 1955,64474
    : public std::true_type 1960,64653
template <typename T,1962,64686
template <typename T, bool B> struct IsResizableBase 1962,64686
  using type 1963,64741
  static type &element(element1965,64781
  using type 1973,64982
  static type &element(element1975,65022
template <typename T,1985,65283
struct SequenceTraitsImpl1986,65316
  static size_t size(1988,65418
template <bool> struct CheckIsBool 1993,65573
template <bool> struct CheckIsBool { static const bool value 1993,65573
struct SequenceTraits<SequenceTraits1998,65790
template <typename T,2002,65984
    : SequenceTraitsImpl<SequenceTraitsImpl2006,66138
    : SequenceTraitsImpl<SequenceTraitsImpl2011,66361
    : SequenceTraitsImpl<SequenceTraitsImpl2016,66585
  static const bool flow 2021,66822
template<> struct SequenceElementTraits<SequenceElementTraits2025,66905
  static const bool flow 2026,66960
template<> struct SequenceElementTraits<SequenceElementTraits2028,66997
  static const bool flow 2029,67050
template<> struct SequenceElementTraits<SequenceElementTraits2031,67087
  static const bool flow 2032,67166
template <typename T> struct StdMapStringCustomMappingTraitsImpl 2036,67276
  using map_type 2037,67343
  static void inputOne(2039,67389
  static void output(2043,67515
#define LLVM_YAML_IS_SEQUENCE_VECTOR_IMPL(2052,67687
#define LLVM_YAML_IS_SEQUENCE_VECTOR(2067,68691
#define LLVM_YAML_IS_FLOW_SEQUENCE_VECTOR(2072,68935
#define LLVM_YAML_DECLARE_MAPPING_TRAITS(2075,69065
#define LLVM_YAML_DECLARE_ENUM_TRAITS(2084,69637
#define LLVM_YAML_DECLARE_BITSET_TRAITS(2093,70209
#define LLVM_YAML_DECLARE_SCALAR_TRAITS(2102,70781
#define LLVM_YAML_IS_DOCUMENT_LIST_VECTOR(2115,71628
#define LLVM_YAML_IS_STRING_MAP(2129,72540

/usr/include/llvm/Support/raw_ostream.h,4051
#define LLVM_SUPPORT_RAW_OSTREAM_H14,537
class raw_ostream 52,1500
  enum class OStreamKind 55,1573
    OK_OStream,56,1600
    OK_FDStream,57,1616
  OStreamKind Kind;61,1648
  char *OutBufStart,OutBufStart81,2591
  char *OutBufStart, *OutBufEnd,OutBufEnd81,2591
  char *OutBufStart, *OutBufEnd, *OutBufCur;OutBufCur81,2591
  bool ColorEnabled 82,2636
  raw_ostream *TiedStream TiedStream86,2790
  enum class BufferKind 88,2828
    Unbuffered 89,2854
    InternalBuffer,90,2874
    ExternalBuffer91,2894
  } BufferMode;92,2913
  enum class Colors 96,2998
    BLACK 97,3020
    RED,98,3035
    GREEN,99,3044
    YELLOW,100,3055
    BLUE,101,3067
    MAGENTA,102,3077
    CYAN,103,3090
    WHITE,104,3100
    SAVEDCOLOR,105,3111
    RESET,106,3127
  static constexpr Colors BLACK 109,3144
  static constexpr Colors RED 110,3193
  static constexpr Colors GREEN 111,3238
  static constexpr Colors YELLOW 112,3287
  static constexpr Colors BLUE 113,3338
  static constexpr Colors MAGENTA 114,3385
  static constexpr Colors CYAN 115,3438
  static constexpr Colors WHITE 116,3485
  static constexpr Colors SAVEDCOLOR 117,3534
  static constexpr Colors RESET 118,3593
  explicit raw_ostream(120,3643
  uint64_t tell(134,4154
  OStreamKind get_kind(136,4229
  virtual void reserveExtraSpace(147,4784
  void SetBufferSize(154,5023
  size_t GetBufferSize(159,5149
  void SetUnbuffered(172,5751
  size_t GetNumBytesInBuffer(177,5852
  void flush(185,6122
  raw_ostream &operator<<(operator<<190,6202
  raw_ostream &operator<<(operator<<197,6338
  raw_ostream &operator<<(operator<<204,6483
  raw_ostream &operator<<(operator<<211,6626
  raw_ostream &operator<<(operator<<240,7700
  raw_ostream &operator<<(operator<<247,7920
  raw_ostream &operator<<(operator<<252,8102
  raw_ostream &operator<<(operator<<256,8208
  raw_ostream &operator<<(operator<<266,8528
  raw_ostream &operator<<(operator<<270,8637
  using uuid_t 283,9012
  virtual bool is_displayed(334,11228
  virtual bool has_colors(338,11422
  virtual void enable_colors(342,11622
  bool colors_enabled(344,11692
  void tie(348,11879
  void SetBuffer(378,13130
  const char *getBufferStart(getBufferStart387,13476
template <typename OStream,416,14674
                     std::is_base_of_v<std::is_base_of_v418,14764
operator<<(420,14855
class raw_pwrite_stream 428,15165
  explicit raw_pwrite_stream(433,15326
  void pwrite(436,15488
class raw_fd_ostream 454,16075
  int FD;455,16125
  bool ShouldClose;456,16135
  bool SupportsSeeking 457,16155
  bool IsRegularFile 458,16187
  mutable std::optional<bool> HasColors;459,16217
  bool IsWindowsConsole 464,16410
  std::error_code EC;467,16451
  uint64_t pos 469,16474
  uint64_t current_pos(478,16773
  void error_detected(487,17033
  int get_fd(490,17129
  void inc_pos(493,17220
  bool supportsSeeking(527,18718
  bool isRegularFile(529,18778
  std::error_code error(539,19085
  bool has_error(545,19400
  void clear_error(556,19859
class raw_fd_stream 611,21810
class raw_string_ostream 644,23213
  std::string &OS;OS645,23261
  uint64_t current_pos(652,23482
  explicit raw_string_ostream(655,23553
  std::string &str(str662,23797
  void reserveExtraSpace(664,23834
class raw_svector_ostream 674,24294
  SmallVectorImpl<char> &OS;OS675,24349
  explicit raw_svector_ostream(690,24839
  StringRef str(699,25054
  void reserveExtraSpace(701,25123
class raw_null_ostream 707,25267
class buffer_ostream 721,25723
  raw_ostream &OS;OS722,25775
  SmallVector<SmallVector723,25794
  SmallVector<char, 0> Buffer;723,25794
  buffer_ostream(728,25861
  ~buffer_ostream(729,25936
class buffer_unique_ostream 732,25986
  std::unique_ptr<raw_ostream> OS;733,26045
  SmallVector<SmallVector734,26080
  SmallVector<char, 0> Buffer;734,26080
  buffer_unique_ostream(739,26147
  ~buffer_unique_ostream(745,26448
template <typename T,761,27116
template <typename T, typename 761,27116
raw_ostream &operator<<(operator<<763,27261

/usr/include/llvm/Support/raw_socket_stream.h,314
#define LLVM_SUPPORT_RAW_SOCKET_STREAM_H15,590
class WSABalancer 26,832
  WSABalancer(28,860
  ~WSABalancer(29,877
class ListeningSocket 33,916
  int FD;34,940
  std::string SocketPath;35,950
  WSABalancer _;38,1045
class raw_socket_stream 49,1363
  uint64_t current_pos(50,1412
  WSABalancer _;52,1480

/usr/include/llvm/TableGen/Automaton.td,158
class GenericAutomaton 54,2699
  string TransitionClass;57,2872
  list<string> SymbolFields;81,3833
class Transition 85,3909
  bits<32> NewState;94,4267

/usr/include/llvm/TableGen/Main.h,36
#define LLVM_TABLEGEN_MAIN_H14,549

/usr/include/llvm/TableGen/SetTheory.h,295
#define LLVM_TABLEGEN_SETTHEORY_H48,1996
class SetTheory 65,2302
  class Operator 71,2473
  class Expander 86,3008
  ExpandMap Expansions;99,3384
  StringMap<std::unique_ptr<Operator>> Operators;102,3443
  StringMap<std::unique_ptr<Expander>> Expanders;105,3530
  void evaluate(132,4473

/usr/include/llvm/TableGen/StringMatcher.h,224
#define LLVM_TABLEGEN_STRINGMATCHER_H14,544
class StringMatcher 30,1000
  StringRef StrVariableName;35,1098
  const std::vector<StringPair> &Matches;Matches36,1127
  raw_ostream &OS;OS37,1169
  StringMatcher(40,1197

/usr/include/llvm/TableGen/DirectiveEmitter.h,2038
#define LLVM_TABLEGEN_DIRECTIVEEMITTER_H2,41
class DirectiveLanguage 16,432
  explicit DirectiveLanguage(18,466
  StringRef getName(24,657
  StringRef getCppNamespace(26,728
  StringRef getDirectivePrefix(30,821
  StringRef getClausePrefix(34,920
  StringRef getClauseEnumSetClass(38,1013
  StringRef getFlangClauseBaseClass(42,1118
  bool hasMakeEnumAvailableInNamespace(46,1227
  bool hasEnableBitmaskEnumInNamespace(50,1344
  std::vector<Record *> getDirectives(54,1461
  std::vector<Record *> getClauses(58,1572
  const llvm::Record *Def;Def65,1721
  const llvm::RecordKeeper &Records;Records66,1748
  std::vector<Record *> getDirectiveLanguages(68,1786
class BaseRecord 75,2005
  explicit BaseRecord(77,2032
  StringRef getName(79,2094
  StringRef getAlternativeName(81,2165
  std::string getFormattedName(87,2372
  bool isDefault(94,2558
  StringRef getRecordName(97,2658
  const llvm::Record *Def;Def100,2731
class Directive 105,2896
  explicit Directive(107,2942
  std::vector<Record *> getAllowedClauses(109,3010
  std::vector<Record *> getAllowedOnceClauses(113,3123
  std::vector<Record *> getAllowedExclusiveClauses(117,3244
  std::vector<Record *> getRequiredClauses(121,3375
class Clause 128,3622
  explicit Clause(130,3665
  StringRef getClangClass(133,3751
  StringRef getFlangClass(138,3861
  std::string getFormattedParserClassName(147,4217
  StringRef getEnumName(165,4666
  std::vector<Record *> getClauseVals(169,4758
  bool isValueOptional(173,4872
  bool isValueList(175,4954
  StringRef getDefaultValue(177,5028
  bool isImplicit(181,5121
  std::vector<StringRef> getAliases(183,5193
  StringRef getPrefix(187,5296
  bool isPrefixOptional(189,5371
class VersionedClause 196,5602
  explicit VersionedClause(198,5634
  Clause getClause(201,5769
  int64_t getMinVersion(203,5846
  int64_t getMaxVersion(205,5924
  const llvm::Record *Def;Def208,6011
class ClauseVal 211,6042
  explicit ClauseVal(213,6088
  int getValue(215,6156
  bool isUserVisible(217,6220

/usr/include/llvm/TableGen/Error.h,37
#define LLVM_TABLEGEN_ERROR_H15,592

/usr/include/llvm/TableGen/Parser.h,38
#define LLVM_TABLEGEN_PARSER_H14,568

/usr/include/llvm/TableGen/Record.h,15561
#define LLVM_TABLEGEN_RECORD_H15,617
class RecTy 59,1700
  enum RecTyKind 62,1775
    BitRecTyKind,63,1794
    BitsRecTyKind,64,1812
    IntRecTyKind,65,1831
    StringRecTyKind,66,1849
    ListRecTyKind,67,1870
    DagRecTyKind,68,1889
    RecordRecTyKind69,1907
  RecTyKind Kind;73,1942
  RecordKeeper &RK;RK75,2007
  ListRecTy *ListTy ListTy77,2087
  RecTy(80,2127
  RecTyKind getRecTyKind(83,2218
  RecordKeeper &getRecordKeeper(getRecordKeeper86,2323
  void print(89,2426
inline raw_ostream &operator<<(operator<<104,2930
class BitRecTy 110,3064
  BitRecTy(113,3132
  static bool classof(116,3199
  std::string getAsString(122,3335
class BitsRecTy 128,3511
  unsigned Size;129,3544
  explicit BitsRecTy(131,3562
  static bool classof(135,3669
  unsigned getNumBits(141,3820
class IntRecTy 149,4039
  IntRecTy(152,4107
  static bool classof(155,4174
  std::string getAsString(161,4310
class StringRecTy 167,4478
  StringRecTy(170,4549
  static bool classof(173,4622
class ListRecTy 186,5008
  RecTy *ElementTy;ElementTy189,5082
  explicit ListRecTy(191,5103
  static bool classof(195,5211
  static ListRecTy *get(get199,5305
  RecTy *getElementType(getElementType200,5366
class DagRecTy 210,5618
  DagRecTy(213,5686
  static bool classof(216,5753
class RecordRecTy final : public RecTy,229,6154
class RecordRecTy final : public RecTy, public FoldingSetNode,229,6154
  void operator delete(operator delete244,6655
class Init 281,7886
  enum InitKind 296,8552
    IK_First,297,8580
    IK_FirstTypedInit,298,8632
    IK_BitInit,299,8655
    IK_BitsInit,300,8671
    IK_DagInit,301,8688
    IK_DefInit,302,8704
    IK_FieldInit,303,8720
    IK_IntInit,304,8738
    IK_ListInit,305,8754
    IK_FirstOpInit,306,8771
    IK_BinOpInit,307,8791
    IK_TernOpInit,308,8809
    IK_UnOpInit,309,8828
    IK_LastOpInit,310,8845
    IK_CondOpInit,311,8864
    IK_FoldOpInit,312,8883
    IK_IsAOpInit,313,8902
    IK_ExistsOpInit,314,8920
    IK_AnonymousNameInit,315,8941
    IK_StringInit,316,8967
    IK_VarInit,317,8986
    IK_VarBitInit,318,9002
    IK_VarDefInit,319,9021
    IK_LastTypedInit,320,9040
    IK_UnsetInit,321,9062
    IK_ArgumentInit,322,9080
  const InitKind Kind;326,9116
  uint8_t Opc;329,9151
  InitKind getKind(336,9297
  explicit Init(342,9451
  virtual bool isComplete(350,9703
  virtual bool isConcrete(354,9882
  void print(357,9959
  virtual std::string getAsUnquotedString(364,10202
  virtual Init *convertInitializerBitRange(convertInitializerBitRange384,11142
  virtual RecTy *getFieldType(getFieldType391,11415
  virtual Init *resolveReferences(resolveReferences399,11779
inline raw_ostream &operator<<(operator<<407,11978
class TypedInit 413,12175
  RecTy *ValueTy;ValueTy414,12207
  explicit TypedInit(417,12237
  static bool classof(424,12436
  RecTy *getType(getType430,12616
  RecordKeeper &getRecordKeeper(getRecordKeeper433,12718
class UnsetInit 447,13257
  RecordKeeper &RK;RK451,13377
  UnsetInit(453,13398
  static bool classof(459,13563
  RecordKeeper &getRecordKeeper(getRecordKeeper467,13784
  Init *getBit(getBit472,13942
  bool isComplete(477,14106
  bool isConcrete(479,14160
  std::string getAsString(482,14262
using ArgAuxType 486,14351
class ArgumentInit 487,14402
  enum Kind 489,14468
    Positional,490,14482
    Named,491,14498
  Init *Value;Value495,14524
  ArgAuxType Aux;496,14539
  explicit ArgumentInit(499,14569
  static bool classof(506,14794
  RecordKeeper &getRecordKeeper(getRecordKeeper508,14876
  bool isPositional(512,15012
  bool isNamed(513,15078
  Init *getValue(getValue515,15135
  unsigned getIndex(516,15178
  Init *getName(getName520,15305
  ArgumentInit *cloneWithValue(cloneWithValue524,15413
  std::string getAsString(529,15592
  bool isComplete(538,15884
  bool isConcrete(539,15937
  Init *getBit(getBit540,15990
  Init *getCastTo(getCastTo541,16065
  Init *convertInitializerTo(convertInitializerTo542,16142
class BitsInit final : public TypedInit,580,17217
class BitsInit final : public TypedInit, public FoldingSetNode,580,17217
  void operator delete(operator delete592,17637
class IntInit 631,18744
  int64_t Value;632,18779
  explicit IntInit(634,18797
  static bool classof(641,19002
  int64_t getValue(647,19138
  bool isConcrete(652,19317
  Init *getBit(getBit655,19414
class AnonymousNameInit 661,19597
  unsigned Value;662,19642
  explicit AnonymousNameInit(664,19661
  static bool classof(671,19930
  unsigned getValue(677,20085
  Init *getBit(getBit685,20269
class StringInit 691,20440
  enum StringFormat 693,20486
    SF_String,694,20508
    SF_Code,695,20543
  StringRef Value;699,20595
  StringFormat Format;700,20614
  explicit StringInit(702,20638
  static bool classof(709,20897
  static StringFormat determineFormat(716,21094
  StringRef getValue(720,21248
  StringFormat getFormat(721,21295
  bool hasCodeFormat(722,21347
  bool isConcrete(726,21464
  std::string getAsString(728,21517
  std::string getAsUnquotedString(735,21685
  Init *getBit(getBit739,21774
class ListInit final : public TypedInit,746,21934
class ListInit final : public TypedInit, public FoldingSetNode,746,21934
  void operator delete(operator delete762,22421
class OpInit 811,23978
  explicit OpInit(813,24023
  static bool classof(820,24197
class UnOpInit 836,24647
  enum UnaryOp 838,24711
    TOLOWER,839,24738
    TOUPPER,840,24751
    CAST,841,24764
    NOT,842,24774
    HEAD,843,24783
    TAIL,844,24793
    SIZE,845,24803
    EMPTY,846,24813
    GETDAGOP,847,24824
    LOG2,848,24838
    REPR849,24848
  Init *LHS;LHS853,24872
  UnOpInit(855,24886
  static bool classof(862,25083
  OpInit *clone(clone871,25346
  unsigned getNumOperands(877,25575
  Init *getOperand(getOperand879,25633
  UnaryOp getOpcode(884,25774
  Init *getOperand(getOperand885,25827
class BinOpInit 897,26167
  enum BinaryOp 899,26232
    ADD,900,26260
    SUB,901,26269
    MUL,902,26278
    DIV,903,26287
    AND,904,26296
    OR,905,26305
    XOR,906,26313
    SHL,907,26322
    SRA,908,26331
    SRL,909,26340
    LISTCONCAT,910,26349
    LISTSPLAT,911,26365
    LISTREMOVE,912,26380
    LISTELEM,913,26396
    LISTSLICE,914,26410
    RANGEC,915,26425
    STRCONCAT,916,26437
    INTERLEAVE,917,26452
    CONCAT,918,26468
    EQ,919,26480
    NE,920,26488
    LE,921,26496
    LT,922,26504
    GE,923,26512
    GT,924,26520
    GETDAGARG,925,26528
    GETDAGNAME,926,26543
    SETDAGOP,927,26559
  Init *LHS,LHS931,26588
  Init *LHS, *RHS;RHS931,26588
  BinOpInit(933,26608
  static bool classof(940,26835
  OpInit *clone(clone952,27244
  unsigned getNumOperands(958,27482
  Init *getOperand(getOperand959,27539
  BinaryOp getOpcode(967,27746
  Init *getLHS(getLHS968,27801
  Init *getRHS(getRHS969,27840
class TernOpInit 983,28235
  enum TernaryOp 985,28301
    SUBST,986,28330
    FOREACH,987,28341
    FILTER,988,28354
    IF,989,28366
    DAG,990,28374
    RANGE,991,28383
    SUBSTR,992,28394
    FIND,993,28406
    SETDAGARG,994,28416
    SETDAGNAME,995,28431
  Init *LHS,LHS999,28462
  Init *LHS, *MHS,MHS999,28462
  Init *LHS, *MHS, *RHS;RHS999,28462
  TernOpInit(1001,28488
  static bool classof(1009,28756
  OpInit *clone(clone1020,29097
  unsigned getNumOperands(1027,29377
  Init *getOperand(getOperand1028,29434
  TernaryOp getOpcode(1037,29671
  Init *getLHS(getLHS1038,29728
  Init *getMHS(getMHS1039,29767
  Init *getRHS(getRHS1040,29806
  bool isComplete(1046,29980
class CondOpInit final : public TypedInit,1058,30344
class CondOpInit final : public TypedInit, public FoldingSetNode,1058,30344
class FoldOpInit 1133,32736
  Init *Start;Start1135,32806
  Init *List;List1136,32821
  Init *A;A1137,32835
  Init *B;B1138,32846
  Init *Expr;Expr1139,32857
  FoldOpInit(1141,32872
  static bool classof(1149,33160
  bool isComplete(1160,33539
class IsAOpInit 1170,33815
  RecTy *CheckType;CheckType1172,33884
  Init *Expr;Expr1173,33904
  IsAOpInit(1175,33919
  static bool classof(1183,34186
  bool isComplete(1193,34486
class ExistsOpInit 1204,34785
  RecTy *CheckType;CheckType1206,34857
  Init *Expr;Expr1207,34877
  ExistsOpInit(1209,34892
  static bool classof(1217,35177
  bool isComplete(1227,35519
class VarInit 1237,35790
  Init *VarName;VarName1238,35825
  explicit VarInit(1240,35843
  static bool classof(1247,36026
  Init *getNameInit(getNameInit1255,36229
  std::string getNameInitAsString(1257,36278
  std::string getAsString(1270,36761
class DefInit 1311,37990
  Record *Def;Def1314,38049
  static bool classof(1322,38191
  Record *getDef(getDef1330,38364
  bool isConcrete(1336,38540
  Init *getBit(getBit1339,38637
class VarDefInit final : public TypedInit,1346,38835
                         public FoldingSetNode,1347,38878
  void operator delete(operator delete1362,39335
class FieldInit 1401,40479
  Init *Rec;Rec1402,40516
  StringInit *FieldName;FieldName1403,40574
  FieldInit(1405,40629
  static bool classof(1421,41126
  Init *getRecord(getRecord1427,41262
  StringInit *getFieldName(getFieldName1428,41304
  std::string getAsString(1436,41536
class DagInit final : public TypedInit,1444,41852
class DagInit final : public TypedInit, public FoldingSetNode,1444,41852
class RecordVal 1543,45334
  enum FieldKind 1547,45384
    FK_Normal,1548,45403
    FK_NonconcreteOK,1549,45451
    FK_TemplateArg,1550,45527
  Init *Name;Name1554,45588
  SMLoc Loc;1555,45602
  PointerIntPair<PointerIntPair1556,45657
  PointerIntPair<RecTy *, 2, FieldKind> TyAndKind;1556,45657
  Init *Value;Value1557,45708
  bool IsUsed 1558,45723
  SmallVector<SMRange> ReferenceLocs;1561,45795
  RecordKeeper &getRecordKeeper(getRecordKeeper1568,45999
  Init *getNameInit(getNameInit1574,46198
  std::string getNameInitAsString(1577,46294
  const SMLoc &getLoc(getLoc1582,46464
  bool isNonconcreteOK(1585,46568
  bool isTemplateArg(1590,46692
  RecTy *getType(getType1595,46827
  Init *getValue(getValue1601,47025
  void addReferenceLoc(1610,47282
  ArrayRef<SMRange> getReferenceLocs(1613,47403
  void setUsed(1617,47594
  bool isUsed(1618,47639
inline raw_ostream &operator<<(operator<<1626,47836
class Record 1631,47947
  struct AssertionInfo 1633,47970
    SMLoc Loc;1634,47995
    Init *Condition;Condition1635,48010
    Init *Message;Message1636,48031
    AssertionInfo(1640,48189
  struct DumpInfo 1644,48318
    SMLoc Loc;1645,48338
    Init *Message;Message1646,48353
    DumpInfo(1650,48511
  enum RecordKind 1653,48588
  enum RecordKind { RK_Def,1653,48588
  enum RecordKind { RK_Def, RK_AnonymousDef,1653,48588
  enum RecordKind { RK_Def, RK_AnonymousDef, RK_Class,1653,48588
  enum RecordKind { RK_Def, RK_AnonymousDef, RK_Class, RK_MultiClass 1653,48588
  Init *Name;Name1656,48670
  SmallVector<SmallVector1660,48854
  SmallVector<SMLoc, 4> Locs;1660,48854
  SmallVector<SmallVector1661,48884
  SmallVector<SMLoc, 0> ForwardDeclarationLocs;1661,48884
  SmallVector<SmallVector1662,48932
  SmallVector<SMRange, 0> ReferenceLocs;1662,48932
  SmallVector<SmallVector1663,48973
  SmallVector<Init *, 0> TemplateArgs;1663,48973
  SmallVector<SmallVector1664,49012
  SmallVector<RecordVal, 0> Values;1664,49012
  SmallVector<SmallVector1665,49048
  SmallVector<AssertionInfo, 0> Assertions;1665,49048
  SmallVector<SmallVector1666,49092
  SmallVector<DumpInfo, 0> Dumps;1666,49092
  SmallVector<SmallVector1670,49265
  SmallVector<std::pair<Record *, SMRange>, 0> SuperClasses;1670,49265
  RecordKeeper &TrackedRecords;TrackedRecords1673,49378
  DefInit *CorrespondingDefInit CorrespondingDefInit1676,49458
  unsigned ID;1679,49525
  RecordKind Kind;1681,49541
  explicit Record(1687,49616
  explicit Record(1694,49886
  Record(1701,50298
  unsigned getID(1709,50618
  StringRef getName(1711,50659
  Init *getNameInit(getNameInit1713,50735
  std::string getNameInitAsString(1717,50787
  ArrayRef<SMLoc> getLoc(1723,50949
  void appendLoc(1724,50999
  ArrayRef<SMLoc> getForwardDeclarationLocs(1726,51053
  void appendReferenceLoc(1731,51191
  ArrayRef<SMRange> getReferenceLocs(1734,51315
  bool isClass(1745,51653
  bool isMultiClass(1747,51706
  bool isAnonymous(1749,51769
  ArrayRef<Init *> getTemplateArgs(1751,51833
  ArrayRef<RecordVal> getValues(1755,51908
  ArrayRef<AssertionInfo> getAssertions(1757,51968
  ArrayRef<DumpInfo> getDumps(1758,52039
  ArrayRef<ArrayRef1760,52096
  ArrayRef<std::pair<Record *, SMRange>>  getSuperClasses(1760,52096
  bool isTemplateArg(1770,52465
  const RecordVal *getValue(getValue1774,52562
  const RecordVal *getValue(getValue1780,52722
  RecordVal *getValue(getValue1784,52837
  RecordVal *getValue(getValue1788,52971
  void addTemplateArg(1792,53103
  void addValue(1797,53247
  void removeValue(1802,53394
  void removeValue(1811,53667
  void addAssertion(1815,53763
  void addDump(1819,53899
  void appendAssertions(1823,53992
  void appendDumps(1827,54082
  bool isSubClassOf(1833,54244
  bool isSubClassOf(1840,54406
  void addSuperClass(1852,54757
  RecordKeeper &getRecords(getRecords1873,55653
  bool isValueUnset(1891,56207
class RecordKeeper 1963,59666
  using RecordMap 1964,59687
  using RecordMap = std::map<std::string, std::unique_ptr<std::unique_ptr1964,59687
  using GlobalMap 1965,59768
  using GlobalMap = std::map<std::string, Init 1965,59768
  detail::RecordKeeperImpl &getImpl(getImpl1972,59941
  const std::string getInputFilename(1975,60045
  const RecordMap &getClasses(getClasses1978,60147
  const RecordMap &getDefs(getDefs1981,60243
  const GlobalMap &getGlobals(getGlobals1984,60335
  Record *getClass(getClass1987,60444
  Record *getDef(getDef1993,60639
  Init *getGlobal(getGlobal1999,60833
  void saveInputFilename(2006,61043
  void addClass(2010,61127
  void addDef(2017,61375
  void addExtraGlobal(2024,61616
  void startPhaseTiming(2034,61944
  void stopPhaseTiming(2052,62474
  std::string InputFilename;2082,63572
  RecordMap Classes,2083,63601
  RecordMap Classes, Defs;2083,63601
  mutable StringMap<std::vector<Record *>> ClassRecordsMap;2084,63628
  GlobalMap ExtraGlobals;2085,63688
  TimerGroup *TimingGroup TimingGroup2090,63906
  Timer *LastTimer LastTimer2091,63943
  bool BackendTimer 2092,63973
  std::unique_ptr<detail::RecordKeeperImpl> Impl;2095,64066
struct LessRecord 2099,64175
  bool operator()(operator()2100,64195
struct LessRecordByID 2109,64570
  bool operator()(operator()2110,64594
struct LessRecordFieldName 2117,64777
  bool operator()(operator()2118,64806
struct LessRecordRegister 2123,64956
  struct RecordParts 2124,64984
    SmallVector<SmallVector2125,65007
    SmallVector<std::pair< bool, StringRef>, 4> Parts;2125,65007
    RecordParts(2127,65063
    size_t size(2148,65710
    std::pair<std::pair2150,65754
    std::pair<bool, StringRef> getPart(2150,65754
  bool operator()(operator()2156,65891
class Resolver 2213,68305
  Record *CurRec;CurRec2214,68322
  bool IsFinal 2215,68340
  explicit Resolver(2218,68373
  Record *getCurrentRecord(getCurrentRecord2221,68463
  virtual bool keepUnsetBits(2230,68938
  bool isFinal(2235,69190
  void setFinal(2237,69234
  struct MappedValue 2242,69363
    Init *V;V2243,69386
    bool Resolved;2244,69399
    MappedValue(2246,69419
    MappedValue(2247,69470

/usr/include/llvm/TableGen/SearchableTable.td,628
class GenericEnum 33,1603
  string FilterClass;36,1734
  string NameField;42,1948
  string ValueField;49,2253
class GenericTable 58,2571
  string FilterClass;61,2695
  string FilterClassField 67,2963
  string CppTypeName 71,3126
  list<string> Fields;107,4461
  list<string> PrimaryKey;110,4546
  string PrimaryKeyName;113,4631
  bit PrimaryKeyEarlyOut 116,4687
class SearchIndex 123,4942
  GenericTable Table;125,5007
  list<string> Key;128,5072
  bit EarlyOut 137,5501
class SearchableTable 141,5571
  list<string> SearchableFields;142,5595
  string EnumNameField 143,5628
  string EnumValueField;144,5661

/usr/include/llvm/TableGen/StringToOffsetTable.h,285
#define LLVM_TABLEGEN_STRINGTOOFFSETTABLE_H10,414
class StringToOffsetTable 24,894
  StringMap<unsigned> StringOffset;25,922
  std::string AggregateString;26,958
  bool Empty(29,998
  unsigned GetOrAddStringOffset(31,1053
  void EmitString(44,1477
  void EmitCharArray(83,2672

/usr/include/llvm/TableGen/TableGenBackend.h,204
#define LLVM_TABLEGEN_TABLEGENBACKEND_H14,540
struct OptCreatorT 29,877
struct Opt 35,982
  Opt(36,995
template <class EmitterC> class OptClass 43,1187
  static void run(44,1236
  OptClass(47,1324

/usr/include/llvm/Target/GlobalISel/RegisterBank.td,68
  string Name 13,520
  list<RegisterClass> RegisterClasses 14,542

/usr/include/llvm/Target/GlobalISel/Combine.td,1012
def root : GIDefKind;27,1033
def defs;29,1056
def pattern;31,1067
def match;32,1080
def apply;33,1091
def wip_match_opcode;35,1103
class GICombine 38,1185
  list<GICombine> Rules 41,1292
class GICombineGroup<GICombineGroup45,1404
  let Rules 51,1807
    : GICombineGroup<GICombineGroup56,1933
class GIDefMatchData<GIDefMatchData65,2322
  string Type 67,2410
class GICombineRule<dag defs, dag match, dag apply> : GICombine 70,2435
def gi_mo;93,3228
def gi_imm;94,3239
  dag InOperands 108,3857
  dag OutOperands 109,3881
  list<dag> Alternatives 110,3907
class GITypeOf<GITypeOf127,4449
  string OpName 128,4497
def GIReplaceReg : GIBuiltinInst;152,5203
def GIEraseRoot : GIBuiltinInst;165,5563
class MIFlagEnum<MIFlagEnum171,5779
  string EnumName 172,5815
def MIFlags;183,6157
def combines_for_extload: GICombineGroup<GICombineGroup232,8146
def commute_constant_to_rhs : GICombineGroup<GICombineGroup457,18206
def right_identity_one : GICombineGroup<GICombineGroup496,19272

/usr/include/llvm/Target/GlobalISel/SelectionDAGCompat.td,6613
  Instruction I 23,1111
  SDNode Node 24,1132
  bit CheckMMOIsNonAtomic 29,1375
  bit CheckMMOIsAtomic 30,1410
  Instruction IfSignExtend 36,1711
  Instruction IfZeroExtend 37,1743
  Instruction IfFloatingPoint 41,1874
  Instruction IfConvergent 45,2069
def : GINodeEquiv<GINodeEquiv49,2168
def : GINodeEquiv<GINodeEquiv50,2205
def : GINodeEquiv<GINodeEquiv51,2238
def : GINodeEquiv<GINodeEquiv52,2271
def : GINodeEquiv<GINodeEquiv53,2306
def : GINodeEquiv<GINodeEquiv56,2444
def : GINodeEquiv<GINodeEquiv58,2556
def : GINodeEquiv<GINodeEquiv59,2595
def : GINodeEquiv<GINodeEquiv60,2637
def : GINodeEquiv<GINodeEquiv61,2683
def : GINodeEquiv<GINodeEquiv62,2730
def : GINodeEquiv<GINodeEquiv63,2768
def : GINodeEquiv<GINodeEquiv64,2799
def : GINodeEquiv<GINodeEquiv65,2830
def : GINodeEquiv<GINodeEquiv66,2861
def : GINodeEquiv<GINodeEquiv67,2896
def : GINodeEquiv<GINodeEquiv68,2931
def : GINodeEquiv<GINodeEquiv69,2964
def : GINodeEquiv<GINodeEquiv70,2997
def : GINodeEquiv<GINodeEquiv71,3030
def : GINodeEquiv<GINodeEquiv72,3063
def : GINodeEquiv<GINodeEquiv73,3094
def : GINodeEquiv<GINodeEquiv74,3123
def : GINodeEquiv<GINodeEquiv75,3154
def : GINodeEquiv<GINodeEquiv76,3185
def : GINodeEquiv<GINodeEquiv77,3217
def : GINodeEquiv<GINodeEquiv78,3249
def : GINodeEquiv<GINodeEquiv79,3288
def : GINodeEquiv<GINodeEquiv80,3327
def : GINodeEquiv<GINodeEquiv81,3366
def : GINodeEquiv<GINodeEquiv82,3405
def : GINodeEquiv<GINodeEquiv83,3444
def : GINodeEquiv<GINodeEquiv84,3483
def : GINodeEquiv<GINodeEquiv85,3522
def : GINodeEquiv<GINodeEquiv86,3561
def : GINodeEquiv<GINodeEquiv87,3606
def : GINodeEquiv<GINodeEquiv88,3651
def : GINodeEquiv<GINodeEquiv89,3690
def : GINodeEquiv<GINodeEquiv90,3729
def : GINodeEquiv<GINodeEquiv91,3774
def : GINodeEquiv<GINodeEquiv92,3819
def : GINodeEquiv<GINodeEquiv93,3856
def : GINodeEquiv<GINodeEquiv94,3889
def : GINodeEquiv<GINodeEquiv95,3927
def : GINodeEquiv<GINodeEquiv96,3966
def : GINodeEquiv<GINodeEquiv97,4007
def : GINodeEquiv<GINodeEquiv98,4048
def : GINodeEquiv<GINodeEquiv99,4089
def : GINodeEquiv<GINodeEquiv100,4130
def : GINodeEquiv<GINodeEquiv101,4163
def : GINodeEquiv<GINodeEquiv102,4196
def : GINodeEquiv<GINodeEquiv103,4227
def : GINodeEquiv<GINodeEquiv104,4260
def : GINodeEquiv<GINodeEquiv105,4293
def : GINodeEquiv<GINodeEquiv106,4326
def : GINodeEquiv<GINodeEquiv107,4359
def : GINodeEquiv<GINodeEquiv108,4392
def : GINodeEquiv<GINodeEquiv109,4427
def : GINodeEquiv<GINodeEquiv110,4464
def : GINodeEquiv<GINodeEquiv111,4499
def : GINodeEquiv<GINodeEquiv112,4536
def : GINodeEquiv<GINodeEquiv113,4587
def : GINodeEquiv<GINodeEquiv115,4633
def : GINodeEquiv<GINodeEquiv119,4734
def : GINodeEquiv<GINodeEquiv120,4777
def : GINodeEquiv<GINodeEquiv121,4820
def : GINodeEquiv<GINodeEquiv122,4867
def : GINodeEquiv<GINodeEquiv123,4912
def : GINodeEquiv<GINodeEquiv124,4957
let IfConvergent 127,5083
def : GINodeEquiv<GINodeEquiv132,5281
def : GINodeEquiv<GINodeEquiv133,5310
def : GINodeEquiv<GINodeEquiv134,5345
def : GINodeEquiv<GINodeEquiv135,5390
def : GINodeEquiv<GINodeEquiv136,5423
def : GINodeEquiv<GINodeEquiv137,5456
def : GINodeEquiv<GINodeEquiv138,5489
def : GINodeEquiv<GINodeEquiv139,5522
def : GINodeEquiv<GINodeEquiv140,5577
def : GINodeEquiv<GINodeEquiv141,5632
def : GINodeEquiv<GINodeEquiv142,5667
def : GINodeEquiv<GINodeEquiv143,5720
def : GINodeEquiv<GINodeEquiv144,5773
def : GINodeEquiv<GINodeEquiv145,5822
def : GINodeEquiv<GINodeEquiv146,5857
def : GINodeEquiv<GINodeEquiv147,5890
def : GINodeEquiv<GINodeEquiv148,5923
def : GINodeEquiv<GINodeEquiv149,5956
def : GINodeEquiv<GINodeEquiv150,5991
def : GINodeEquiv<GINodeEquiv151,6028
def : GINodeEquiv<GINodeEquiv152,6063
def : GINodeEquiv<GINodeEquiv153,6108
def : GINodeEquiv<GINodeEquiv154,6154
def : GINodeEquiv<GINodeEquiv155,6200
def : GINodeEquiv<GINodeEquiv156,6254
def : GINodeEquiv<GINodeEquiv157,6299
def : GINodeEquiv<GINodeEquiv158,6342
def : GINodeEquiv<GINodeEquiv159,6375
def : GINodeEquiv<GINodeEquiv160,6408
def : GINodeEquiv<GINodeEquiv161,6441
def : GINodeEquiv<GINodeEquiv162,6474
def : GINodeEquiv<GINodeEquiv163,6505
def : GINodeEquiv<GINodeEquiv164,6544
def : GINodeEquiv<GINodeEquiv165,6583
def : GINodeEquiv<GINodeEquiv166,6632
def : GINodeEquiv<GINodeEquiv167,6681
def : GINodeEquiv<GINodeEquiv168,6722
def : GINodeEquiv<GINodeEquiv169,6763
def : GINodeEquiv<GINodeEquiv170,6820
def : GINodeEquiv<GINodeEquiv171,6853
def : GINodeEquiv<GINodeEquiv172,6886
def : GINodeEquiv<GINodeEquiv173,6923
def : GINodeEquiv<GINodeEquiv174,6962
def : GINodeEquiv<GINodeEquiv175,7015
def : GINodeEquiv<GINodeEquiv176,7068
def : GINodeEquiv<GINodeEquiv177,7121
def : GINodeEquiv<GINodeEquiv178,7182
def : GINodeEquiv<GINodeEquiv179,7243
def : GINodeEquiv<GINodeEquiv180,7296
def : GINodeEquiv<GINodeEquiv181,7349
def : GINodeEquiv<GINodeEquiv182,7402
def : GINodeEquiv<GINodeEquiv183,7455
def : GINodeEquiv<GINodeEquiv185,7507
def : GINodeEquiv<GINodeEquiv186,7554
def : GINodeEquiv<GINodeEquiv187,7601
def : GINodeEquiv<GINodeEquiv188,7648
def : GINodeEquiv<GINodeEquiv189,7695
def : GINodeEquiv<GINodeEquiv190,7742
def : GINodeEquiv<GINodeEquiv191,7787
def : GINodeEquiv<GINodeEquiv192,7836
def : GINodeEquiv<GINodeEquiv201,8383
def : GINodeEquiv<GINodeEquiv207,8518
def : GINodeEquiv<GINodeEquiv218,9095
def : GINodeEquiv<GINodeEquiv219,9162
def : GINodeEquiv<GINodeEquiv224,9274
def : GINodeEquiv<GINodeEquiv231,9450
def : GINodeEquiv<GINodeEquiv232,9504
def : GINodeEquiv<GINodeEquiv233,9554
def : GINodeEquiv<GINodeEquiv234,9607
def : GINodeEquiv<GINodeEquiv235,9660
def : GINodeEquiv<GINodeEquiv236,9713
def : GINodeEquiv<GINodeEquiv237,9768
def : GINodeEquiv<GINodeEquiv238,9819
def : GINodeEquiv<GINodeEquiv239,9872
def : GINodeEquiv<GINodeEquiv240,9925
def : GINodeEquiv<GINodeEquiv241,9978
def : GINodeEquiv<GINodeEquiv242,10033
def : GINodeEquiv<GINodeEquiv243,10088
def : GINodeEquiv<GINodeEquiv244,10143
def : GINodeEquiv<GINodeEquiv245,10198
def : GINodeEquiv<GINodeEquiv246,10253
def : GINodeEquiv<GINodeEquiv247,10308
def : GINodeEquiv<GINodeEquiv248,10373
def : GINodeEquiv<GINodeEquiv249,10438
def : GINodeEquiv<GINodeEquiv250,10480
class GIComplexPatternEquiv<GIComplexPatternEquiv254,10664
  ComplexPattern SelDAGEquivalent 255,10717
class GISDNodeXFormEquiv<GISDNodeXFormEquiv260,10903
  SDNodeXForm SelDAGEquivalent 261,10950

/usr/include/llvm/Target/GlobalISel/Target.td,259
def s32 : LLT;23,994
def s64 : LLT;24,1009
def v2s32 : LLT;25,1024
def v4s16 : LLT;26,1041
def v8s8 : LLT;27,1058
  LLT Type 40,1566
  string MatcherFn 48,1926
class GICustomOperandRenderer<GICustomOperandRenderer57,2335
  string RendererFn 67,2878

/usr/include/llvm/Target/CodeGenCWrappers.h,104
#define LLVM_TARGET_CODEGENCWRAPPERS_H16,703
namespace llvm 23,872
inline LLVMCodeModel wrap(47,1443

/usr/include/llvm/Target/TargetCallingConv.td,2053
class CCCustom<CCCustom18,659
  string FuncName 19,698
class CCPredicateAction<CCPredicateAction24,857
  CCAction SubAction 25,906
class CCIfType<list<ValueType> vts, CCAction A> : CCPredicateAction<CCPredicateAction30,1025
class CCIf<string predicate, CCAction A> : CCPredicateAction<CCPredicateAction35,1176
class CCIfByVal<CCIfByVal41,1368
class CCIfPreallocated<CCIfPreallocated46,1538
class CCIfSwiftSelf<CCIfSwiftSelf51,1716
class CCIfSwiftAsync<CCIfSwiftAsync56,1890
class CCIfSwiftError<CCIfSwiftError61,2066
class CCIfCFGuardTarget<CCIfCFGuardTarget66,2248
class CCIfConsecutiveRegs<CCIfConsecutiveRegs71,2442
class CCIfInReg<CCIfInReg80,2792
class CCIfNest<CCIfNest84,2957
class CCIfSplit<CCIfSplit88,3122
class CCIfSRet<CCIfSRet92,3287
class CCIfVarArg<CCIfVarArg95,3419
class CCIfNotVarArg<CCIfNotVarArg98,3559
class CCIfPtr<CCIfPtr107,3991
class CCAssignToReg<CCAssignToReg112,4248
  list<Register> RegList 113,4305
                              list<Register> shadowList> : CCAction 119,4533
class CCAssignToStack<int size, int align> : CCAction 128,4975
                                list<Register> shadowList> : CCAction 138,5361
    : CCAssignToReg<CCAssignToReg148,5800
class CCPassByVal<int size, int align> : CCAction 156,6091
class CCPromoteToType<CCPromoteToType163,6289
  ValueType DestTy 164,6342
class CCPromoteToUpperBitsInType<CCPromoteToUpperBitsInType169,6529
  ValueType DestTy 170,6593
class CCBitConvertToType<CCBitConvertToType175,6734
  ValueType DestTy 176,6790
class CCTruncToType<CCTruncToType181,6924
  ValueType DestTy 182,6975
class CCPassIndirect<CCPassIndirect187,7118
  ValueType DestTy 188,7170
class CCDelegateTo<CCDelegateTo193,7330
  CallingConv CC 194,7378
class CallingConv<CallingConv199,7514
  list<CCAction> Actions 200,7558
  bit Entry 204,7734
  bit Custom 206,7756
class CustomCallingConv 211,7931
  let Custom 212,7975
class CalleeSavedRegs<CalleeSavedRegs222,8406
  dag SaveList 223,8441
  dag OtherPreserved;229,8763

/usr/include/llvm/Target/TargetIntrinsicInfo.h,185
#define LLVM_TARGET_TARGETINTRINSICINFO_H14,579
class TargetIntrinsicInfo 29,898
  TargetIntrinsicInfo(33,1051
  virtual ~TargetIntrinsicInfo(34,1076
  unsigned lookupName(49,1788

/usr/include/llvm/Target/TargetItinerary.td,909
def NoBypass : Bypass;32,1592
class ReservationKind<ReservationKind34,1616
  int Value 35,1653
def Required : ReservationKind<ReservationKind38,1675
def Reserved : ReservationKind<ReservationKind39,1710
class InstrStage<int cycles, list<FuncUnit> units,56,2460
                 int timeinc 57,2511
def NoItinerary : InstrItinClass;79,3588
class InstrItinData<InstrItinClass Class, list<InstrStage> stages,109,5273
                    list<int> operandcycles 110,5340
class ProcessorItineraries<list<FuncUnit> fu, list<Bypass> bp,125,5928
  list<FuncUnit> FU 127,6045
  list<Bypass> BP 128,6071
  list<InstrItinData> IID 129,6095
  string PacketizerNamespace 140,6819
def NoItineraries : ProcessorItineraries<ProcessorItineraries146,7070
  FuncUnit TheComboFunc 153,7422
  list<FuncUnit> FuncList 154,7459
class ComboFuncUnits<ComboFuncUnits159,7655
  list<ComboFuncData> CFD 160,7703

/usr/include/llvm/Target/TargetLoweringObjectFile.h,1588
#define LLVM_TARGET_TARGETLOWERINGOBJECTFILE_H15,604
class TargetLoweringObjectFile 45,1146
  virtual ~TargetLoweringObjectFile(75,2144
  Mangler &getMangler(getMangler77,2184
  virtual void Initialize(82,2445
  virtual void emitPersonalityValue(84,2514
  void emitCGProfileMetadata(91,2844
  virtual MCSection *getSectionForConstant(getSectionForConstant98,3126
  virtual bool shouldPutJumpTableInFunctionSection(139,5066
  unsigned getLSDAEncoding(169,6709
  unsigned getTTypeEncoding(170,6769
  unsigned getCallSiteEncoding(171,6831
  virtual MCSection *getStaticDtorSection(getStaticDtorSection181,7187
  virtual const MCExpr *getDebugThreadLocalSymbol(getDebugThreadLocalSymbol188,7471
  bool supportDSOLocalEquivalentLowering(198,7928
  virtual const MCExpr *lowerDSOLocalEquivalent(lowerDSOLocalEquivalent202,8030
  bool supportIndirectSymViaGOTPCRel(209,8367
  bool supportGOTPCRelWithOffset(215,8575
  bool supportDebugThreadLocalLocation(220,8723
  virtual MCRegister getStaticBase(225,8886
  virtual const MCExpr *getIndirectSymViaRWPI(getIndirectSymViaRWPI228,9012
  virtual const MCExpr *getIndirectSymViaGOTPCRel(getIndirectSymViaGOTPCRel233,9175
  virtual MCSection *getSectionForCommandLines(getSectionForCommandLines244,9747
  getSectionForFunctionDescriptor(251,10008
  virtual MCSection *getSectionForTOCEntry(getSectionForTOCEntry259,10327
  getSectionForExternalReference(267,10639
  virtual MCSymbol *getTargetSymbol(getTargetSymbol274,10908
  virtual MCSymbol *getFunctionEntryPointSymbol(getFunctionEntryPointSymbol282,11234

/usr/include/llvm/Target/CGPassBuilderOption.h,1105
#define LLVM_TARGET_CGPASSBUILDEROPTION_H15,617
enum class RunOutliner 22,738
enum class RunOutliner { TargetDefault,22,738
enum class RunOutliner { TargetDefault, AlwaysOutline,22,738
enum class RunOutliner { TargetDefault, AlwaysOutline, NeverOutline 22,738
enum class RegAllocType 23,809
enum class RegAllocType { Default,23,809
enum class RegAllocType { Default, Basic,23,809
enum class RegAllocType { Default, Basic, Fast,23,809
enum class RegAllocType { Default, Basic, Fast, Greedy,23,809
enum class RegAllocType { Default, Basic, Fast, Greedy, PBQP 23,809
struct CGPassBuilderOption 27,968
  std::optional<bool> OptimizeRegAlloc;28,997
  std::optional<bool> EnableIPRA;29,1037
  std::optional<GlobalISelAbortMode> EnableGlobalISelAbort;56,1955
  std::string FSProfileFile;57,2015
  std::string FSRemappingFile;58,2044
  std::optional<bool> VerifyMachineCode;60,2076
  std::optional<bool> EnableFastISelOption;61,2117
  std::optional<bool> EnableGlobalISelOption;62,2161
  std::optional<bool> DebugifyAndStripAll;63,2207
  std::optional<bool> DebugifyCheckAndStripAll;64,2250

/usr/include/llvm/Target/GenericOpcodes.td,11716
class GenericInstruction 18,762
  let isPreISelOpcode 19,817
  TypedOperand variadicOpsType 23,981
class ConstrainedInstruction<ConstrainedInstruction30,1252
  let OutOperandList 32,1335
  let InOperandList 33,1383
  let isCommutable 34,1430
  let hasSideEffects 38,1563
  let mayRaiseFPException 39,1592
def G_ANYEXT : GenericInstruction 44,1721
def G_SEXT : GenericInstruction 52,1985
def G_SEXT_INREG : GenericInstruction 66,2732
def G_ZEXT : GenericInstruction 74,3016
def G_TRUNC : GenericInstruction 83,3308
def G_IMPLICIT_DEF : GenericInstruction 89,3458
def G_PHI : GenericInstruction 95,3604
def G_FRAME_INDEX : GenericInstruction 101,3754
def G_GLOBAL_VALUE : GenericInstruction 107,3913
def G_CONSTANT_POOL : GenericInstruction 113,4072
def G_INTTOPTR : GenericInstruction 119,4232
def G_PTRTOINT : GenericInstruction 125,4385
def G_BITCAST : GenericInstruction 131,4538
def G_CONSTANT : GenericInstruction 138,4727
def G_FCONSTANT : GenericInstruction 145,4919
def G_VASTART : GenericInstruction 151,5075
def G_VAARG : GenericInstruction 158,5240
def G_CTLZ : GenericInstruction 166,5452
def G_CTLZ_ZERO_UNDEF : GenericInstruction 172,5601
def G_CTTZ : GenericInstruction 178,5761
def G_CTTZ_ZERO_UNDEF : GenericInstruction 184,5910
def G_CTPOP : GenericInstruction 190,6070
def G_BSWAP : GenericInstruction 196,6220
def G_BITREVERSE : GenericInstruction 202,6370
def G_ADDRSPACE_CAST : GenericInstruction 208,6525
def G_BLOCK_ADDR : GenericInstruction 214,6684
def G_JUMP_TABLE : GenericInstruction 220,6840
def G_DYN_STACKALLOC : GenericInstruction 226,6997
def G_STACKSAVE : GenericInstruction 232,7172
def G_STACKRESTORE : GenericInstruction 238,7315
def G_FREEZE : GenericInstruction 244,7461
def G_LROUND: GenericInstruction 250,7612
def G_LLROUND: GenericInstruction 256,7762
def G_ADD : GenericInstruction 267,8112
def G_SUB : GenericInstruction 275,8325
def G_MUL : GenericInstruction 283,8542
def G_SDIV : GenericInstruction 291,8759
def G_UDIV : GenericInstruction 299,8980
def G_SREM : GenericInstruction 307,9200
def G_UREM : GenericInstruction 315,9422
def G_SDIVREM : GenericInstruction 323,9655
def G_UDIVREM : GenericInstruction 331,9905
def G_AND : GenericInstruction 339,10135
def G_OR : GenericInstruction 347,10347
def G_XOR : GenericInstruction 355,10559
def G_SHL : GenericInstruction 363,10771
def G_LSHR : GenericInstruction 370,10965
def G_ASHR : GenericInstruction 377,11163
def G_FSHL : GenericInstruction 385,11477
def G_FSHR : GenericInstruction 393,11804
def G_ROTR : GenericInstruction 400,12003
def G_ROTL : GenericInstruction 407,12188
def G_ICMP : GenericInstruction 414,12382
def G_FCMP : GenericInstruction 421,12597
def G_SELECT : GenericInstruction 428,12792
def G_PTR_ADD : GenericInstruction 435,12996
def G_PTRMASK : GenericInstruction 443,13263
def G_SMIN : GenericInstruction 450,13465
def G_SMAX : GenericInstruction 458,13690
def G_UMIN : GenericInstruction 466,13917
def G_UMAX : GenericInstruction 474,14144
def G_ABS : GenericInstruction 482,14369
def G_UADDO : GenericInstruction 493,14749
def G_UADDE : GenericInstruction 501,15025
def G_SADDO : GenericInstruction 508,15275
def G_SADDE : GenericInstruction 516,15549
def G_USUBO : GenericInstruction 523,15804
def G_USUBE : GenericInstruction 529,16055
def G_SSUBO : GenericInstruction 536,16308
def G_SSUBE : GenericInstruction 543,16558
def G_UMULO : GenericInstruction 550,16816
def G_SMULO : GenericInstruction 558,17082
def G_UMULH : GenericInstruction 567,17401
def G_SMULH : GenericInstruction 576,17700
def G_UADDSAT : GenericInstruction 588,18113
def G_SADDSAT : GenericInstruction 596,18345
def G_USUBSAT : GenericInstruction 604,18582
def G_SSUBSAT : GenericInstruction 612,18818
def G_USHLSAT : GenericInstruction 620,19055
def G_SSHLSAT : GenericInstruction 628,19290
def G_SMULFIX : GenericInstruction 640,19812
def G_UMULFIX : GenericInstruction 647,20027
def G_SMULFIXSAT : GenericInstruction 657,20426
def G_UMULFIXSAT : GenericInstruction 664,20644
def G_SDIVFIX : GenericInstruction 675,21108
def G_UDIVFIX : GenericInstruction 682,21324
def G_SDIVFIXSAT : GenericInstruction 692,21724
def G_UDIVFIXSAT : GenericInstruction 699,21943
def G_FNEG : GenericInstruction 710,22354
def G_FPEXT : GenericInstruction 716,22503
def G_FPTRUNC : GenericInstruction 722,22653
def G_FPTOSI : GenericInstruction 728,22805
def G_FPTOUI : GenericInstruction 734,22956
def G_SITOFP : GenericInstruction 740,23107
def G_UITOFP : GenericInstruction 746,23258
def G_FABS : GenericInstruction 752,23409
def G_FCOPYSIGN : GenericInstruction 758,23558
def G_FCANONICALIZE : GenericInstruction 764,23726
def G_IS_FPCLASS: GenericInstruction 771,23947
def G_FMINNUM : GenericInstruction 784,24383
def G_FMAXNUM : GenericInstruction 791,24576
def G_FMINNUM_IEEE : GenericInstruction 802,25029
def G_FMAXNUM_IEEE : GenericInstruction 809,25227
def G_FMINIMUM : GenericInstruction 819,25645
def G_FMAXIMUM : GenericInstruction 826,25839
def G_FADD : GenericInstruction 838,26250
def G_FSUB : GenericInstruction 846,26467
def G_FMUL : GenericInstruction 854,26688
def G_FMA : GenericInstruction 863,26978
def G_FMAD : GenericInstruction 872,27319
def G_FDIV : GenericInstruction 880,27547
def G_FREM : GenericInstruction 887,27735
def G_FPOW : GenericInstruction 894,27932
def G_FPOWI : GenericInstruction 901,28152
def G_FEXP : GenericInstruction 908,28365
def G_FEXP2 : GenericInstruction 915,28564
def G_FEXP10 : GenericInstruction 922,28765
def G_FLOG : GenericInstruction 929,28964
def G_FLOG2 : GenericInstruction 936,29161
def G_FLOG10 : GenericInstruction 943,29360
def G_FLDEXP : GenericInstruction 950,29538
def G_FFREXP : GenericInstruction 957,29727
def G_FCEIL : GenericInstruction 964,29931
def G_FCOS : GenericInstruction 971,30119
def G_FSIN : GenericInstruction 978,30304
def G_FSQRT : GenericInstruction 988,30644
def G_FFLOOR : GenericInstruction 995,30831
def G_FRINT : GenericInstruction 1002,31024
def G_FNEARBYINT : GenericInstruction 1009,31223
def G_GET_FPENV : GenericInstruction 1024,31793
def G_SET_FPENV : GenericInstruction 1031,31974
def G_RESET_FPENV : GenericInstruction 1038,32163
def G_GET_FPMODE : GenericInstruction 1045,32337
def G_SET_FPMODE : GenericInstruction 1052,32521
def G_RESET_FPMODE : GenericInstruction 1059,32722
def G_INTRINSIC_FPTRUNC_ROUND : GenericInstruction 1068,33049
def G_INTRINSIC_TRUNC : GenericInstruction 1074,33238
def G_INTRINSIC_ROUND : GenericInstruction 1080,33399
def G_INTRINSIC_LRINT : GenericInstruction 1086,33560
def G_INTRINSIC_ROUNDEVEN : GenericInstruction 1092,33720
def G_READCYCLECOUNTER : GenericInstruction 1098,33885
def G_LOAD : GenericInstruction 1113,34530
def G_SEXTLOAD : GenericInstruction 1121,34796
def G_ZEXTLOAD : GenericInstruction 1129,35066
def G_INDEXED_LOAD : GenericInstruction 1139,35470
def G_INDEXED_SEXTLOAD : GenericInstruction 1147,35792
def G_INDEXED_ZEXTLOAD : GenericInstruction 1155,36118
def G_STORE : GenericInstruction 1163,36428
def G_INDEXED_STORE : GenericInstruction 1171,36694
def G_ATOMIC_CMPXCHG_WITH_SUCCESS : GenericInstruction 1181,37070
def G_ATOMIC_CMPXCHG : GenericInstruction 1191,37429
class G_ATOMICRMW_OP 1201,37755
  let OutOperandList 1202,37799
  let InOperandList 1203,37844
  let hasSideEffects 1204,37898
  let mayLoad 1205,37928
  let mayStore 1206,37950
def G_ATOMICRMW_XCHG : G_ATOMICRMW_OP;1209,37976
def G_ATOMICRMW_ADD : G_ATOMICRMW_OP;1210,38015
def G_ATOMICRMW_SUB : G_ATOMICRMW_OP;1211,38053
def G_ATOMICRMW_AND : G_ATOMICRMW_OP;1212,38091
def G_ATOMICRMW_NAND : G_ATOMICRMW_OP;1213,38129
def G_ATOMICRMW_OR : G_ATOMICRMW_OP;1214,38168
def G_ATOMICRMW_XOR : G_ATOMICRMW_OP;1215,38205
def G_ATOMICRMW_MAX : G_ATOMICRMW_OP;1216,38243
def G_ATOMICRMW_MIN : G_ATOMICRMW_OP;1217,38281
def G_ATOMICRMW_UMAX : G_ATOMICRMW_OP;1218,38319
def G_ATOMICRMW_UMIN : G_ATOMICRMW_OP;1219,38358
def G_ATOMICRMW_FADD : G_ATOMICRMW_OP;1220,38397
def G_ATOMICRMW_FSUB : G_ATOMICRMW_OP;1221,38436
def G_ATOMICRMW_FMAX : G_ATOMICRMW_OP;1222,38475
def G_ATOMICRMW_FMIN : G_ATOMICRMW_OP;1223,38514
def G_ATOMICRMW_UINC_WRAP : G_ATOMICRMW_OP;1224,38553
def G_ATOMICRMW_UDEC_WRAP : G_ATOMICRMW_OP;1225,38597
def G_FENCE : GenericInstruction 1227,38642
def G_PREFETCH : GenericInstruction 1234,38862
def G_EXTRACT : GenericInstruction 1249,39472
def G_UNMERGE_VALUES : GenericInstruction 1261,40019
def G_INSERT : GenericInstruction 1269,40299
def G_MERGE_VALUES : GenericInstruction 1279,40758
def G_BUILD_VECTOR : GenericInstruction 1289,41128
def G_BUILD_VECTOR_TRUNC : GenericInstruction 1298,41439
def G_CONCAT_VECTORS : GenericInstruction 1305,41672
def G_INTRINSIC : GenericInstruction 1312,41881
def G_INTRINSIC_W_SIDE_EFFECTS : GenericInstruction 1319,42075
def G_INTRINSIC_CONVERGENT : GenericInstruction 1328,42342
def G_INTRINSIC_CONVERGENT_W_SIDE_EFFECTS : GenericInstruction 1336,42585
def G_BR : GenericInstruction 1350,43053
def G_BRCOND : GenericInstruction 1360,43297
def G_BRINDIRECT : GenericInstruction 1369,43532
def G_BRJT : GenericInstruction 1380,43820
def G_INVOKE_REGION_START : GenericInstruction 1392,44209
def G_READ_REGISTER : GenericInstruction 1399,44408
def G_WRITE_REGISTER : GenericInstruction 1409,44732
def G_INSERT_VECTOR_ELT : GenericInstruction 1424,45263
def G_EXTRACT_VECTOR_ELT : GenericInstruction 1431,45476
def G_SHUFFLE_VECTOR: GenericInstruction 1441,45811
class VectorReduction 1451,46178
  let OutOperandList 1452,46223
  let InOperandList 1453,46265
  let hasSideEffects 1454,46303
def G_VECREDUCE_SEQ_FADD : GenericInstruction 1457,46336
def G_VECREDUCE_SEQ_FMUL : GenericInstruction 1463,46509
def G_VECREDUCE_FADD : VectorReduction;1469,46682
def G_VECREDUCE_FMUL : VectorReduction;1470,46722
def G_VECREDUCE_FMAX : VectorReduction;1472,46763
def G_VECREDUCE_FMIN : VectorReduction;1473,46803
def G_VECREDUCE_FMAXIMUM : VectorReduction;1474,46843
def G_VECREDUCE_FMINIMUM : VectorReduction;1475,46887
def G_VECREDUCE_ADD : VectorReduction;1477,46932
def G_VECREDUCE_MUL : VectorReduction;1478,46971
def G_VECREDUCE_AND : VectorReduction;1479,47010
def G_VECREDUCE_OR : VectorReduction;1480,47049
def G_VECREDUCE_XOR : VectorReduction;1481,47087
def G_VECREDUCE_SMAX : VectorReduction;1482,47126
def G_VECREDUCE_SMIN : VectorReduction;1483,47166
def G_VECREDUCE_UMAX : VectorReduction;1484,47206
def G_VECREDUCE_UMIN : VectorReduction;1485,47246
def G_STRICT_FADD : ConstrainedInstruction<ConstrainedInstruction1491,47484
def G_STRICT_FSUB : ConstrainedInstruction<ConstrainedInstruction1492,47536
def G_STRICT_FMUL : ConstrainedInstruction<ConstrainedInstruction1493,47588
def G_STRICT_FDIV : ConstrainedInstruction<ConstrainedInstruction1494,47640
def G_STRICT_FREM : ConstrainedInstruction<ConstrainedInstruction1495,47692
def G_STRICT_FMA : ConstrainedInstruction<ConstrainedInstruction1496,47744
def G_STRICT_FSQRT : ConstrainedInstruction<ConstrainedInstruction1497,47794
def G_STRICT_FLDEXP : ConstrainedInstruction<ConstrainedInstruction1498,47848
def G_MEMCPY : GenericInstruction 1504,48089
def G_MEMCPY_INLINE : GenericInstruction 1512,48336
def G_MEMMOVE : GenericInstruction 1520,48565
def G_MEMSET : GenericInstruction 1528,48813
def G_BZERO : GenericInstruction 1535,49034
def G_SBFX : GenericInstruction 1548,49570
def G_UBFX : GenericInstruction 1556,49890
def G_ASSERT_ZEXT : GenericInstruction 1568,50335
def G_ASSERT_SEXT : GenericInstruction 1576,50595
def G_ASSERT_ALIGN : GenericInstruction 1583,50828
def G_CONSTANT_FOLD_BARRIER : GenericInstruction 1590,51071

/usr/include/llvm/Target/Target.td,11169
  string Features 30,1323
  list<Predicate> Predicates 33,1401
class HwModeSelect<HwModeSelect46,1978
  list<HwMode> Modes 47,2016
    : HwModeSelect<HwModeSelect56,2404
    : HwModeSelect<Ms>, ValueType<ValueType56,2404
    : HwModeSelect<scalar.Modes>, PtrValueType<PtrValueType67,2920
  int RegSize 74,3184
  int SpillSize 75,3238
  int SpillAlignment 76,3294
  let ComposedOf 130,5547
class RegAltNameIndex 135,5691
  string Namespace 136,5715
  RegAltNameIndex FallbackRegAltNameIndex 140,5889
def NoRegAltName : RegAltNameIndex;142,5938
class Register<string n, list<string> altNames 146,6128
class RegisterWithSubRegs<string n, list<Register> subregs> : Register<Register220,9775
class DAGOperand 228,10158
  string OperandNamespace 229,10177
  string DecoderMethod 230,10213
class RegisterClass<string namespace, list<ValueType> regTypes,238,10505
class RegisterClass<string namespace, list<ValueType> regTypes, int alignment,238,10505
                    dag regList,239,10584
                    dag regList, RegAltNameIndex idx 239,10584
def sequence;382,17007
def decimate;383,17021
def interleave;384,17035
class RegisterTuples<list<SubRegIndex> Indices, list<dag> Regs,411,18131
                     list<string> RegNames 412,18195
class RegisterCategory<RegisterCategory434,19177
  list<RegisterClass> Classes 436,19304
class DwarfRegNum<DwarfRegNum444,19676
  list<int> DwarfNumbers 451,20151
class DwarfRegAlias<DwarfRegAlias458,20464
      Register DwarfAlias 459,20500
                       list<SubtargetFeature> i 466,20739
class Deprecated<Deprecated498,21820
  SubtargetFeature DeprecatedFeatureMask 499,21861
class ComplexDeprecationPredicate<ComplexDeprecationPredicate504,21997
  string ComplexDeprecationPredicate 505,22045
class InstructionEncoding 518,22473
  int Size;520,22535
  string DecoderNamespace 524,22665
  list<Predicate> Predicates 527,22768
  string DecoderMethod 529,22804
  bit hasCompleteDecoder 553,24137
class Instruction 569,24794
  string Namespace 570,24836
  dag OutOperandList;572,24862
  dag InOperandList;573,24936
  string AsmString 574,25010
  EncodingByHwMode EncodingInfos;578,25220
  list<dag> Pattern;582,25365
  list<Register> Uses 587,25487
  list<Register> Defs 588,25560
  list<Predicate> Predicates 592,25726
  int Size 596,25866
  int CodeSize 600,25968
  int AddedComplexity 603,26041
  bit isPreISelOpcode 607,26170
  bit isReturn 611,26294
  bit isBranch 612,26371
  bit isEHScopeReturn 613,26448
  bit isIndirectBranch 614,26522
  bit isCompare 615,26597
  bit isMoveImm 616,26678
  bit isMoveReg 617,26763
  bit isBitcast 618,26847
  bit isSelect 619,26925
  bit isBarrier 620,27002
  bit isCall 621,27085
  bit isAdd 622,27160
  bit isTrap 623,27235
  bit canFoldAsLoad 624,27310
  bit mayLoad 625,27392
  bit mayStore 626,27472
  bit mayRaiseFPException 627,27553
  bit isConvertibleToThreeAddress 628,27634
  bit isCommutable 629,27718
  bit isTerminator 630,27795
  bit isReMaterializable 631,27880
  bit isPredicable 632,27956
  bit isUnpredicable 635,28174
  bit hasDelaySlot 637,28330
  bit usesCustomInserter 638,28407
  bit hasPostISelHook 639,28479
  bit hasCtrlDep 640,28558
  bit isNotDuplicable 641,28637
  bit isConvergent 642,28716
  bit isAuthenticated 643,28783
  bit isAsCheapAsAMove 644,28864
  bit hasExtraSrcRegAllocReq 645,28946
  bit hasExtraDefRegAllocReq 646,29030
  bit isRegSequence 647,29111
  bit isPseudo 650,29332
  bit isMeta 653,29549
  bit isExtractSubreg 656,29765
  bit isInsertSubreg 659,29990
  bit variadicOpsAreDefs 662,30213
  bit hasSideEffects 666,30408
  bit isCodeGenOnly 685,31369
  bit isAsmParserOnly 688,31478
  bit hasNoSchedulingInfo 693,31681
  InstrItinClass Itinerary 695,31717
  list<SchedReadWrite> SchedRW;698,31851
  string Constraints 700,31884
  string DisableEncoding 704,32081
  string PostEncoderMethod 706,32113
  bits<64> TSFlags 709,32227
  string AsmMatchConverter 714,32297
  string TwoOperandAliasConstraint 721,32661
  string AsmVariantName 727,32943
  bit UseNamedOperandTable 734,33157
  bit UseLogicalOperandMappings 742,33574
  bit FastISelShouldIgnore 748,33871
  bit HasPositionOrder 753,34099
class CompressPat<dag input, dag output, list<Predicate> predicates 759,34307
class AdditionalEncoding<AdditionalEncoding773,34886
  Instruction AliasOf 774,34950
class PseudoInstExpansion<PseudoInstExpansion780,35136
  dag ResultInst 781,35176
  bit isPseudo 782,35239
class Predicate<Predicate787,35416
  string CondString 788,35447
  bit AssemblerMatcherPredicate 793,35703
  dag AssemblerCondDag;809,36694
  string PredicateName 813,36870
  bit RecomputePerFunction 819,37131
class Requires<Requires827,37385
  list<Predicate> Predicates 828,37425
def ops;836,37829
def outs;837,37838
def ins;838,37848
def variable_ops;842,37955
def ascend;850,38318
def descend;855,38560
def operand;859,38733
def slice;865,38975
def encoder;875,39518
def decoder;876,39531
class PointerLikeRegClass<PointerLikeRegClass882,39853
  int RegClassKind 883,39891
def ptr_rc : PointerLikeRegClass<PointerLikeRegClass891,40197
def unknown : unknown_class;896,40395
class AsmOperandClass 909,41050
  string Name 911,41153
  list<AsmOperandClass> SuperClasses 914,41214
  string PredicateMethod 921,41543
  string RenderMethod 928,41892
  string ParserMethod 934,42220
  string DiagnosticType 939,42461
  string DiagnosticString 943,42585
  bit IsOptional 952,43017
  string DefaultMethod 959,43428
def ImmAsmOperand : AsmOperandClass 962,43459
class Operand<Operand969,43737
  ValueType Type 970,43780
  string PrintMethod 971,43803
  string EncoderMethod 972,43842
  bit hasCompleteDecoder 973,43871
  string OperandType 974,43904
  dag MIOperandInfo 975,43946
  code MCOperandPredicate;980,44177
  AsmOperandClass ParserMatchClass 990,44745
let OperandType 1025,46250
class TypedOperand<TypedOperand1039,46655
  let OperandType 1040,46706
  bit IsPointer 1041,46730
  bit IsImmediate 1042,46755
let IsPointer 1052,47068
  let IsImmediate 1064,47587
def zero_reg;1069,47691
def undef_tied_input;1073,47826
  : Operand<Operand1086,48492
  : OperandWithDefaultOps<OperandWithDefaultOps1095,48847
  : OperandWithDefaultOps<ty, AlwaysVal>, PredicateOp 1095,48847
  : OperandWithDefaultOps<OperandWithDefaultOps1103,49197
class InstrInfo 1111,49403
  bit isLittleEndianEncoding 1116,49723
  bit guessInstructionProperties 1127,50224
class StandardPseudoInstruction 1136,50624
  let mayLoad 1137,50672
  let mayStore 1138,50695
  let isCodeGenOnly 1139,50719
  let isPseudo 1140,50747
  let hasNoSchedulingInfo 1141,50770
  let Namespace 1142,50804
def PHI : StandardPseudoInstruction 1144,50840
def INLINEASM : StandardPseudoInstruction 1150,51025
def INLINEASM_BR : StandardPseudoInstruction 1156,51243
def CFI_INSTRUCTION : StandardPseudoInstruction 1165,51603
def EH_LABEL : StandardPseudoInstruction 1174,51854
def GC_LABEL : StandardPseudoInstruction 1183,52098
def ANNOTATION_LABEL : StandardPseudoInstruction 1192,52342
def KILL : StandardPseudoInstruction 1200,52573
def EXTRACT_SUBREG : StandardPseudoInstruction 1207,52760
def INSERT_SUBREG : StandardPseudoInstruction 1213,52970
def IMPLICIT_DEF : StandardPseudoInstruction 1220,53236
def SUBREG_TO_REG : StandardPseudoInstruction 1229,53495
def COPY_TO_REGCLASS : StandardPseudoInstruction 1235,53720
def DBG_VALUE : StandardPseudoInstruction 1242,53960
def DBG_VALUE_LIST : StandardPseudoInstruction 1249,54161
def DBG_INSTR_REF : StandardPseudoInstruction 1256,54368
def DBG_PHI : StandardPseudoInstruction 1263,54577
def DBG_LABEL : StandardPseudoInstruction 1270,54770
def REG_SEQUENCE : StandardPseudoInstruction 1277,54973
def COPY : StandardPseudoInstruction 1284,55210
def BUNDLE : StandardPseudoInstruction 1292,55455
def LIFETIME_START : StandardPseudoInstruction 1298,55629
def LIFETIME_END : StandardPseudoInstruction 1305,55838
def PSEUDO_PROBE : StandardPseudoInstruction 1312,56043
def ARITH_FENCE : StandardPseudoInstruction 1319,56288
def STACKMAP : StandardPseudoInstruction 1328,56531
def PATCHPOINT : StandardPseudoInstruction 1336,56782
def STATEPOINT : StandardPseudoInstruction 1345,57115
def LOAD_STACK_GUARD : StandardPseudoInstruction 1354,57376
def PREALLOCATED_SETUP : StandardPseudoInstruction 1362,57609
def PREALLOCATED_ARG : StandardPseudoInstruction 1368,57796
def LOCAL_ESCAPE : StandardPseudoInstruction 1374,58004
def FAULTING_OP : StandardPseudoInstruction 1383,58376
def PATCHABLE_OP : StandardPseudoInstruction 1393,58667
def PATCHABLE_FUNCTION_ENTER : StandardPseudoInstruction 1401,58896
def PATCHABLE_RET : StandardPseudoInstruction 1408,59123
def PATCHABLE_FUNCTION_EXIT : StandardPseudoInstruction 1417,59410
def PATCHABLE_TAIL_CALL : StandardPseudoInstruction 1425,59702
def PATCHABLE_EVENT_CALL : StandardPseudoInstruction 1433,59960
def PATCHABLE_TYPED_EVENT_CALL : StandardPseudoInstruction 1443,60280
def FENTRY_CALL : StandardPseudoInstruction 1453,60620
def ICALL_BRANCH_FUNNEL : StandardPseudoInstruction 1463,60891
def MEMBARRIER : StandardPseudoInstruction 1469,61071
def JUMP_TABLE_DEBUG_INFO : StandardPseudoInstruction 1477,61266
class AsmParser 1496,61862
  string AsmParserClassName 1500,62045
  string AsmParserInstCleanup 1505,62321
  bit ShouldEmitMatchRegisterName 1509,62469
  bit ShouldEmitMatchRegisterAltName 1517,62825
  bit AllowDuplicateRegisterNames 1525,63260
  bit HasMnemonicFirst 1529,63424
  bit ReportMultipleNearMisses 1537,63781
  string OperandParserMethod 1542,63993
  bit CallCustomParserForAllOperands 1547,64221
def DefaultAsmParser : AsmParser;1549,64269
class AsmParserVariant 1556,64588
  int Variant 1560,64789
  string Name 1563,64871
  string CommentDelimiter 1568,65063
  string RegisterPrefix 1574,65351
  string TokenizingCharacters 1577,65448
  string SeparatorCharacters 1580,65547
  string BreakCharacters 1583,65648
def DefaultAsmParserVariant : AsmParserVariant;1585,65681
def any_of;1588,65798
def all_of;1589,65810
  string FromToken 1610,66693
  string ToToken 1611,66720
class AsmWriter 1683,69903
  string AsmWriterClassName 1687,70086
  int PassSubtarget 1692,70289
  int Variant 1700,70734
def DefaultAsmWriter : AsmWriter;1702,70755
class Target 1708,70939
  InstrInfo InstructionSet;1710,71021
  list<AsmParser> AssemblyParsers 1713,71124
  list<AsmParserVariant> AssemblyParserVariants 1717,71276
  list<AsmWriter> AssemblyWriters 1720,71428
  int AllowRegisterRenaming 1726,71735
class Processor<string n, ProcessorItineraries pi, list<SubtargetFeature> f,1734,72034
                list<SubtargetFeature> tunef 1735,72111
class ProcessorModel<string n, SchedMachineModel m, list<SubtargetFeature> f,1765,73262
                     list<SubtargetFeature> tunef 1766,73340
class InstrMapping 1776,73733
  string FilterClass;1779,73896
  list<string> RowFields 1795,74705
  list<string> ColFields 1803,75110
  list<string> KeyCol 1809,75399
  list<list<string> > ValueCols 1817,75763

/usr/include/llvm/Target/TargetInstrPredicate.td,1706
  MCInstPredicate Pred 86,3769
class MCOperandPredicate<MCOperandPredicate91,3943
  int OpIndex 92,3999
  int FirstIndex 110,4801
  int SecondIndex 111,4827
class CheckRegOperand<int Index, Register R> : CheckOperandBase<CheckOperandBase128,5551
  int ImmVal 145,6267
class CheckImmOperand_s<int Index, string Value> : CheckOperandBase<CheckOperandBase151,6511
class CheckImmOperandLT<int Index, int Imm> : CheckOperandBase<CheckOperandBase159,6857
class CheckImmOperandGT<int Index, int Imm> : CheckOperandBase<CheckOperandBase167,7196
class CheckImmOperandLE<int Index, int Imm> : CheckNot<CheckNot175,7544
class CheckImmOperandGE<int Index, int Imm> : CheckNot<CheckNot181,7888
  int NumOps 196,8623
class CheckOpcode<CheckOpcode203,8890
  list<Instruction> ValidOpcodes 204,8955
  string CodeBlock 217,9548
class CheckPredicateSequence<CheckPredicateSequence222,9717
  list<MCInstPredicate> Predicates 223,9795
  MCInstPredicate Pred 248,10856
  list<Instruction> Opcodes 255,11207
  MCStatement CaseStmt 256,11246
                              MCStatement default> : MCStatement 264,11605
  string FunctionName 271,11854
  MCStatement Body 272,11884
    : FunctionPredicateBase<FunctionPredicateBase286,12453
    : FunctionPredicateBase<Name, body>, MCInstPredicate;286,12453
class CheckFunctionPredicate<string MCInstFn, string MachineInstrFn> : MCInstPredicate 297,12988
                                  list<int> operands 336,14716
                       list<int> BrokenDeps 349,15344
  STIPredicateDecl Declaration 391,17270
  list<InstructionEquivalenceClass> Classes 392,17316
  SchedMachineModel SchedModel 393,17371
let UpdatesOpcodeMask 398,17566

/usr/include/llvm/Target/TargetMachine.h,4250
#define LLVM_TARGET_TARGETMACHINE_H14,563
using legacy::PassManagerBase;65,1798
namespace yaml 68,1858
class TargetMachine 78,2163
  const Target &TheTarget;TheTarget85,2461
  const DataLayout DL;93,2837
  Triple TargetTriple;97,2969
  std::string TargetCPU;98,2992
  std::string TargetFS;99,3017
  Reloc::Model RM 101,3042
  CodeModel::Model CMModel 102,3077
  uint64_t LargeDataThreshold 103,3124
  CodeGenOptLevel OptLevel 104,3159
  std::unique_ptr<const MCAsmInfo> AsmInfo;107,3263
  std::unique_ptr<const MCRegisterInfo> MRI;108,3307
  std::unique_ptr<const MCInstrInfo> MII;109,3352
  std::unique_ptr<const MCSubtargetInfo> STI;110,3394
  unsigned RequireStructuredCFG 112,3441
  unsigned O0WantsFastISel 113,3478
  std::optional<PGOOptions> PGOOption;116,3538
  mutable TargetOptions Options;119,3586
  const Target &getTarget(getTarget125,3748
  const Triple &getTargetTriple(getTargetTriple127,3805
  StringRef getTargetCPU(128,3870
  StringRef getTargetFeatureString(129,3925
  void setTargetFeatureString(130,3989
  virtual const TargetSubtargetInfo *getSubtargetImpl(getSubtargetImpl134,4206
  virtual TargetLoweringObjectFile *getObjFileLowering(getObjFileLowering137,4310
  createMachineFunctionInfo(143,4490
  virtual yaml::MachineFunctionInfo *createDefaultFuncInfoYAML(createDefaultFuncInfoYAML150,4778
  convertFuncInfoToYAML(157,5017
  virtual bool parseMachineFunctionInfo(162,5179
  template <typename STC> const STC &getSubtarget(getSubtarget172,5659
  const DataLayout createDataLayout(177,5826
  bool isCompatibleDataLayout(184,6173
  unsigned getPointerSize(191,6396
  unsigned getPointerSizeInBits(195,6482
  unsigned getProgramPointerSize(199,6580
  unsigned getAllocaPointerSize(203,6687
  const MCAsmInfo *getMCAsmInfo(getMCAsmInfo213,7054
  const MCRegisterInfo *getMCRegisterInfo(getMCRegisterInfo215,7121
  const MCInstrInfo *getMCInstrInfo(getMCInstrInfo216,7193
  const MCSubtargetInfo *getMCSubtargetInfo(getMCSubtargetInfo217,7259
  virtual const TargetIntrinsicInfo *getIntrinsicInfo(getIntrinsicInfo220,7412
  bool requiresStructuredCFG(224,7501
  void setRequiresStructuredCFG(225,7571
  CodeModel::Model getCodeModel(233,7923
  void setCodeModel(239,8113
  void setLargeDataThreshold(241,8173
  void setFastISel(263,8926
  bool getO0WantsFastISel(264,8995
  void setO0WantsFastISel(265,9051
  void setGlobalISel(266,9120
  void setGlobalISelAbort(267,9193
  void setMachineOutliner(270,9287
  void setSupportsDefaultOutlining(273,9376
  void setSupportsDebugEntryValues(276,9477
  void setCFIFixup(280,9579
  bool getAIXExtendedAltivecABI(282,9649
  bool getUniqueSectionNames(286,9744
  bool getUniqueBasicBlockSectionNames(289,9894
  bool getDataSections(295,10111
  bool getFunctionSections(301,10299
  bool getIgnoreXCOFFVisibility(307,10502
  bool getXCOFFTracebackTable(313,10700
  llvm::BasicBlockSection getBBSectionsType(317,10890
  const MemoryBuffer *getBBSectionsFuncListBuf(getBBSectionsFuncListBuf322,11059
  virtual bool isNoopAddrSpaceCast(327,11234
  void setPGOOption(331,11333
  const std::optional<PGOOptions> &getPGOOption(getPGOOption332,11411
  virtual unsigned getAssumedAddrSpace(340,11791
  virtual std::pair<std::pair349,12259
  getPredicatedAddrSpace(350,12304
  virtual void registerPassBuilderCallbacks(369,13084
  virtual void registerDefaultAliasAnalyses(374,13370
  addPassesToEmitFile(383,13839
  virtual bool addPassesToEmitMC(395,14362
  virtual bool targetSchedulesPostRAScheduling(406,14811
  static constexpr unsigned DefaultSjLjDataSize 413,15166
  virtual unsigned getSjLjDataSize(414,15220
  static std::pair<std::pair416,15296
  virtual unsigned getAddressSpaceForPseudoSourceKind(420,15506
class LLVMTargetMachine 428,15724
  virtual Error buildCodeGenPipeline(458,17106
  virtual std::pair<std::pair468,17671
  virtual std::pair<StringRef, bool> getPassNameFromLegacyName(468,17671
  virtual bool isMachineVerifierClean(485,18523
  virtual bool usesPhysRegsForValues(503,19515
  virtual bool useIPRA(507,19722
  virtual int unqualifiedInlineAsmVariant(513,19922
  virtual void registerMachineRegisterInfoCallback(516,20030
getEffectiveCodeModel(524,20432

/usr/include/llvm/Target/TargetOptions.h,3761
#define LLVM_TARGET_TARGETOPTIONS_H15,583
    enum ABIType 28,828
      Default,29,847
      Soft,30,929
      Hard 31,959
    enum FPOpFusionMode 36,1026
      Fast,37,1052
      Standard,38,1121
      Strict 39,1201
    enum JumpTableType 44,1275
      Single,45,1300
      Arity,46,1379
      Simplified,47,1454
      Full 50,1666
    enum Model 55,1769
      POSIX,56,1786
      Single 57,1817
  enum class BasicBlockSection 61,1874
    All,62,1907
    List,64,2060
    Labels,67,2288
    Preset,70,2477
    None 73,2696
  enum class EABI 76,2750
    Unknown,77,2770
    Default,78,2783
    EABI4,79,2827
    EABI5,80,2901
    GNU81,2912
  enum class DebuggerKind 97,3760
    Default,98,3788
    GDB,99,3836
    LLDB,100,3879
    SCE,101,3923
    DBX 102,3985
  enum class GlobalISelAbortMode 107,4137
    Disable,108,4172
    Enable,109,4214
    DisableWithDiag 110,4255
  enum class SwiftAsyncFramePointerMode 114,4414
    DeploymentBased,117,4563
    Always,119,4612
    Never,121,4651
  enum CodeObjectVersionKind 126,4781
    COV_None,127,4812
    COV_2 128,4826
    COV_3 129,4859
    COV_4 130,4892
    COV_5 131,4909
  class TargetOptions 134,4932
    TargetOptions(136,4966
    std::pair<std::pair165,6786
    std::pair<int, int> BinutilsVersion{BinutilsVersion165,6786
    unsigned UnsafeFPMath 172,7193
    unsigned NoInfsFPMath 178,7504
    unsigned NoNaNsFPMath 184,7813
    unsigned NoTrappingFPMath 189,8049
    unsigned NoSignedZerosFPMath 195,8346
    unsigned ApproxFuncFPMath 201,8633
    unsigned EnableAIXExtendedAltivecABI 207,8975
    unsigned HonorSignDependentRoundingFPMathOption 216,9549
    unsigned NoZerosInBSS 222,9841
    unsigned GuaranteedTailCallOpt 230,10334
    unsigned StackSymbolOrdering 236,10649
    unsigned EnableFastISel 241,10855
    unsigned EnableGlobalISel 244,10964
    unsigned UseInitArray 257,11485
    unsigned DisableIntegratedAS 260,11559
    unsigned RelaxELFRelocations 265,11715
    unsigned FunctionSections 268,11801
    unsigned DataSections 271,11879
    unsigned IgnoreXCOFFVisibility 274,11963
    unsigned XCOFFTracebackTable 277,12040
    unsigned UniqueSectionNames 279,12079
    unsigned UniqueBasicBlockSectionNames 282,12168
    unsigned TrapUnreachable 285,12297
    unsigned NoTrapAfterNoreturn 289,12469
    unsigned TLSSize 292,12574
    unsigned EmulatedTLS 296,12716
    unsigned EnableTLSDESC 299,12806
    unsigned EnableIPRA 302,12909
    unsigned EmitStackSizeSection 305,13005
    unsigned EnableMachineOutliner 308,13087
    unsigned EnableMachineFunctionSplitter 311,13178
    unsigned SupportsDefaultOutlining 314,13291
    unsigned EmitAddrsig 317,13376
    std::shared_ptr<MemoryBuffer> BBSectionsFuncListBuf;324,13653
    unsigned EmitCallSiteInfo 329,13939
    unsigned SupportsDebugEntryValues 331,14044
     unsigned EnableDebugEntryValues 336,14392
    unsigned ValueTrackingVariableLocations 344,14760
    unsigned ForceDwarfFrameSection 347,14850
    unsigned XRayFunctionIndex 350,14933
    unsigned DebugStrictDwarf 354,15088
    unsigned Hotpatch 357,15174
    unsigned PPCGenScalarMASSEntries 360,15242
    unsigned JMCInstrument 363,15328
    unsigned EnableCFIFixup 366,15395
    unsigned MisExpect 370,15523
    unsigned XCOFFReadOnlyPointers 374,15666
    std::string StackUsageOutput;379,15889
    DenormalMode FPDenormalMode;422,17939
    DenormalMode FP32DenormalMode;426,18067
    void setFPDenormalMode(429,18113
    void setFP32DenormalMode(433,18197
    DenormalMode getRawFPDenormalMode(437,18285
    DenormalMode getRawFP32DenormalMode(441,18369
    MCTargetOptions MCOptions;451,18658
    std::string ObjectFilenameForDebug;456,18863

/usr/include/llvm/Target/TargetPfmCounters.td,982
class PfmCounter<PfmCounter14,600
  string Counter 18,822
    : PfmCounter<PfmCounter23,961
class ValidationEvent 34,1466
  int EventNumber 35,1509
def InstructionRetired  : ValidationEvent<ValidationEvent38,1546
def L1DCacheLoadMiss : ValidationEvent<ValidationEvent39,1592
def L1DCacheStoreMiss : ValidationEvent<ValidationEvent40,1635
def L1ICacheLoadMiss : ValidationEvent<ValidationEvent41,1679
def DataTLBLoadMiss : ValidationEvent<ValidationEvent42,1722
def DataTLBStoreMiss : ValidationEvent<ValidationEvent43,1764
def InstructionTLBLoadMiss : ValidationEvent<ValidationEvent44,1807
    : PfmCounter<PfmCounter51,2143
class ProcPfmCounters 59,2384
  PfmCounter CycleCounter 61,2485
  PfmCounter UopsCounter 63,2601
  list<PfmIssueCounter> IssueCounters 65,2723
  list<PfmValidationCounter> ValidationCounters 68,2882
  string CpuName 73,3053
  ProcPfmCounters Counters 74,3082
class PfmCountersDefaultBinding<PfmCountersDefaultBinding78,3189

/usr/include/llvm/Target/TargetSchedule.td,3754
def instrs;58,2769
def instregex;64,3023
class SchedMachineModel 76,3490
  int IssueWidth 77,3516
  int MicroOpBufferSize 78,3589
  int LoopMicroOpBufferSize 79,3658
  int LoadLatency 81,3806
  int HighLatency 82,3871
  int MispredictPenalty 83,3946
  ProcessorItineraries Itineraries 86,4053
  bit PostRAScheduler 88,4106
  bit CompleteModel 97,4646
  bit FullInstRWOverlapCheck 103,4911
  list<Predicate> UnsupportedFeatures 117,5479
  bit NoModel 119,5524
  bit EnableIntervals 124,5768
def NoSchedModel : SchedMachineModel 127,5802
  ProcResourceKind Kind 188,8580
  int NumUnits 189,8612
  ProcResourceKind Super 190,8634
  int BufferSize 191,8664
  SchedMachineModel SchedModel 192,8687
def EponymousProcResourceKind : ProcResourceKind;198,8902
  list<ProcResource> Resources 206,9217
  SchedMachineModel SchedModel 207,9261
  int BufferSize 208,9297
class Sched<Sched225,10119
  list<SchedReadWrite> SchedRW 226,10163
  int Repeat 248,11012
  SchedMachineModel SchedModel 249,11032
class ProcWriteResources<ProcWriteResources255,11180
  list<ProcResourceKind> ProcResources 256,11241
  list<int> ReleaseAtCycles 260,11466
  list<int> AcquireAtCycles 264,11672
  int Latency 265,11706
  int NumMicroOps 266,11725
  bit BeginGroup 267,11748
  bit EndGroup 268,11774
  bit Unsupported 271,11900
  bit SingleIssue 274,12049
  bit RetireOOO 278,12283
  SchedMachineModel SchedModel 279,12308
  : ProcWriteResources<ProcWriteResources316,14323
  list<SchedWrite> ValidWrites 331,14879
  bit Unsupported 334,15022
  SchedMachineModel SchedModel 335,15049
class ReadAdvance<SchedRead read, int cycles, list<SchedWrite> writes 348,15621
class SchedReadAdvance<int cycles, list<SchedWrite> writes 355,15887
def ReadDefault : SchedRead;359,16068
def NoReadAdvance : SchedReadAdvance<SchedReadAdvance360,16097
class PredicateProlog<PredicateProlog365,16308
  code Code 366,16340
class MCSchedPredicate<MCSchedPredicate374,16562
  MCInstPredicate Pred 375,16627
  SchedMachineModel SchedModel 376,16655
class SchedPredicate<SchedPredicate385,16987
  SchedMachineModel SchedModel 386,17042
  code Predicate 387,17078
def NoSchedPred : MCSchedPredicate<MCSchedPredicate393,17329
  SchedPredicateBase Predicate 405,18034
  list<SchedReadWrite> Selected 406,18073
class SchedVariant<SchedVariant410,18168
  list<SchedVar> Variants 411,18214
  bit Variadic 412,18252
  SchedMachineModel SchedModel 413,18276
class SchedWriteVariant<SchedWriteVariant423,18679
class SchedReadVariant<SchedReadVariant432,19007
  list<SchedReadWrite> OperandReadWrites 441,19339
  dag Instrs 442,19386
  SchedMachineModel SchedModel 443,19412
  bit Unsupported 445,19513
  list<InstrItinClass> MatchedItinClasses 454,19860
  list<SchedReadWrite> OperandReadWrites 455,19909
  SchedMachineModel SchedModel 456,19956
  SchedReadWrite MatchRW 467,20393
  SchedReadWrite AliasRW 468,20427
  SchedMachineModel SchedModel 469,20461
class RegisterFile<int numPhysRegs, list<RegisterClass> Classes 550,24816
  int ReorderBufferSize 573,26059
  int MaxRetirePerCycle 574,26097
  SchedMachineModel SchedModel 575,26139
class MemoryQueue<MemoryQueue580,26309
  ProcResourceKind QueueDescriptor 581,26350
  SchedMachineModel SchedModel 582,26391
  FusionTarget Target 601,27058
  code Predicate 609,27416
  : FusionPredicate<FusionPredicate614,27569
  int FirstOpIdx 629,28339
  int SecondOpIdx 630,28370
class WildcardPred<WildcardPred638,28524
  bit ReturnValue 639,28577
def WildcardFalse : WildcardPred<WildcardPred641,28604
def WildcardTrue : WildcardPred<WildcardPred642,28641
  list<FusionPredicate> Predicates 663,29381
                   list<FusionPredicate> prolog 685,30056

/usr/include/llvm/Target/TargetSelectionDAG.td,11210
class SDTypeConstraint<SDTypeConstraint21,839
  int OperandNum 22,875
class SDTCisVT<int OpNum, ValueType vt> : SDTypeConstraint<SDTypeConstraint26,961
  int OtherOperandNum 43,1584
class SDTCisVTSmallerThanOp<int OpNum, int OtherOp> : SDTypeConstraint<SDTypeConstraint48,1738
class SDTCisOpSmallerThanOp<int SmallOp, int BigOp> : SDTypeConstraint<SDTypeConstraint52,1854
  : SDTypeConstraint<SDTypeConstraint59,2155
  : SDTypeConstraint<SDTypeConstraint66,2396
class SDTCVecEltisVT<int OpNum, ValueType vt> : SDTypeConstraint<SDTypeConstraint72,2543
class SDTCisSameNumEltsAs<int OpNum, int OtherOp> : SDTypeConstraint<SDTypeConstraint78,2731
class SDTCisSameSizeAs<int OpNum, int OtherOp> : SDTypeConstraint<SDTypeConstraint83,2915
  int NumResults 99,3549
  int NumOperands 100,3580
  list<SDTypeConstraint> Constraints 101,3613
def SDTIntLeaf: SDTypeProfile<SDTypeProfile105,3689
def SDTFPLeaf : SDTypeProfile<SDTypeProfile106,3764
def SDTPtrLeaf: SDTypeProfile<SDTypeProfile107,3841
def SDTOther  : SDTypeProfile<SDTypeProfile108,3915
def SDTUNDEF  : SDTypeProfile<SDTypeProfile109,3989
def SDTUnaryOp  : SDTypeProfile<SDTypeProfile110,4066
def SDTPtrAddOp : SDTypeProfile<SDTypeProfile112,4147
def SDTIntBinOp : SDTypeProfile<SDTypeProfile115,4256
def SDTIntShiftOp : SDTypeProfile<SDTypeProfile118,4392
def SDTIntShiftDOp: SDTypeProfile<SDTypeProfile121,4506
def SDTIntSatNoShOp : SDTypeProfile<SDTypeProfile124,4637
def SDTIntBinHiLoOp : SDTypeProfile<SDTypeProfile127,4744
def SDTIntScaledBinOp : SDTypeProfile<SDTypeProfile130,4900
def SDTFPBinOp : SDTypeProfile<SDTypeProfile134,5046
def SDTFPSignOp : SDTypeProfile<SDTypeProfile137,5168
def SDTFPTernaryOp : SDTypeProfile<SDTypeProfile140,5277
def SDTIntUnaryOp : SDTypeProfile<SDTypeProfile143,5422
def SDTIntBitCountUnaryOp : SDTypeProfile<SDTypeProfile146,5517
def SDTIntExtendOp : SDTypeProfile<SDTypeProfile149,5616
def SDTIntTruncOp  : SDTypeProfile<SDTypeProfile152,5771
def SDTFPUnaryOp  : SDTypeProfile<SDTypeProfile155,5913
def SDTFPRoundOp  : SDTypeProfile<SDTypeProfile158,6015
def SDTFPExtendOp  : SDTypeProfile<SDTypeProfile161,6157
def SDIsFPClassOp : SDTypeProfile<SDTypeProfile164,6300
def SDTIntToFPOp : SDTypeProfile<SDTypeProfile167,6431
def SDTFPToIntOp : SDTypeProfile<SDTypeProfile170,6551
def SDTFPToIntSatOp : SDTypeProfile<SDTypeProfile173,6671
def SDTFPExpOp : SDTypeProfile<SDTypeProfile176,6820
def SDTGetFPStateOp : SDTypeProfile<SDTypeProfile179,6925
def SDTSetFPStateOp : SDTypeProfile<SDTypeProfile182,7013
def SDTExtInreg : SDTypeProfile<SDTypeProfile185,7101
def SDTExtInvec : SDTypeProfile<SDTypeProfile189,7251
def SDTFreeze : SDTypeProfile<SDTypeProfile193,7401
def SDTSetCC : SDTypeProfile<SDTypeProfile197,7465
def SDTSelect : SDTypeProfile<SDTypeProfile201,7580
def SDTVSelect : SDTypeProfile<SDTypeProfile205,7694
def SDTSelectCC : SDTypeProfile<SDTypeProfile209,7851
def SDTBr : SDTypeProfile<SDTypeProfile214,7998
def SDTBrCC : SDTypeProfile<SDTypeProfile218,8076
def SDTBrcond : SDTypeProfile<SDTypeProfile222,8196
def SDTBrind : SDTypeProfile<SDTypeProfile226,8292
def SDTCatchret : SDTypeProfile<SDTypeProfile230,8367
def SDTNone : SDTypeProfile<SDTypeProfile234,8473
def SDTUBSANTrap : SDTypeProfile<SDTypeProfile236,8531
def SDTLoad : SDTypeProfile<SDTypeProfile238,8594
def SDTStore : SDTypeProfile<SDTypeProfile242,8668
def SDTIStore : SDTypeProfile<SDTypeProfile246,8743
def SDTMaskedStore: SDTypeProfile<SDTypeProfile250,8862
def SDTMaskedLoad: SDTypeProfile<SDTypeProfile254,9019
def SDTMaskedGather : SDTypeProfile<SDTypeProfile259,9196
def SDTMaskedScatter : SDTypeProfile<SDTypeProfile264,9380
def SDTVecShuffle : SDTypeProfile<SDTypeProfile269,9545
def SDTVecSlice : SDTypeProfile<SDTypeProfile272,9632
def SDTVecExtract : SDTypeProfile<SDTypeProfile275,9752
def SDTVecInsert : SDTypeProfile<SDTypeProfile278,9857
def SDTVecReduce : SDTypeProfile<SDTypeProfile281,9981
def SDTFPVecReduce : SDTypeProfile<SDTypeProfile284,10078
def SDTVecReverse : SDTypeProfile<SDTypeProfile288,10178
def SDTSubVecExtract : SDTypeProfile<SDTypeProfile292,10278
def SDTSubVecInsert : SDTypeProfile<SDTypeProfile295,10386
def SDTPrefetch : SDTypeProfile<SDTypeProfile299,10514
def SDTAtomicFence : SDTypeProfile<SDTypeProfile303,10646
def SDTAtomic3 : SDTypeProfile<SDTypeProfile306,10729
def SDTAtomic2 : SDTypeProfile<SDTypeProfile309,10842
def SDTFPAtomic2 : SDTypeProfile<SDTypeProfile313,10936
def SDTAtomicStore : SDTypeProfile<SDTypeProfile317,11031
def SDTAtomicLoad : SDTypeProfile<SDTypeProfile320,11109
  string SDClass 336,11694
  let Properties 337,11722
  SDTypeProfile TypeProfile 338,11748
def set;342,11832
def implicit;343,11841
def node;344,11855
def srcvalue;345,11865
def SDT_assert : SDTypeProfile<SDTypeProfile776,36769
  SDNode Opcode 820,38458
  code XFormFunction 821,38481
def NOOP_SDNodeXForm : SDNodeXForm<SDNodeXForm824,38522
class PatFrags<dag ops, list<dag> frags,841,39309
class PatFrags<dag ops, list<dag> frags, code pred 841,39309
class GISelFlags 928,42887
  bit GIIgnoreCopies 929,42906
 : PatFrag<PatFrag941,43401
def immAllOnesV  : SDPatternOperator;1013,46474
def immAllZerosV : SDPatternOperator;1014,46549
def null_frag : SDPatternOperator;1030,47344
  let IsLoad 1034,47462
  let IsUnindexed 1035,47483
  let IsLoad 1038,47576
  let IsNonExtLoad 1039,47597
  let IsLoad 1044,47726
  let IsAnyExtLoad 1045,47747
  let IsLoad 1048,47846
  let IsSignExtLoad 1049,47867
  let IsLoad 1052,47967
  let IsZeroExtLoad 1053,47988
  let IsLoad 1057,48084
  let MemoryVT 1058,48105
  let IsLoad 1061,48193
  let MemoryVT 1062,48214
  let IsLoad 1065,48302
  let MemoryVT 1066,48323
  let IsLoad 1069,48412
  let MemoryVT 1070,48433
  let IsLoad 1073,48522
  let MemoryVT 1074,48543
  let IsLoad 1077,48632
  let MemoryVT 1078,48653
  let IsLoad 1081,48742
  let MemoryVT 1082,48763
  let IsLoad 1085,48852
  let MemoryVT 1086,48873
  let IsLoad 1090,48965
  let MemoryVT 1091,48986
  let IsLoad 1094,49076
  let MemoryVT 1095,49097
  let IsLoad 1098,49187
  let MemoryVT 1099,49208
  let IsLoad 1102,49299
  let MemoryVT 1103,49320
  let IsLoad 1106,49411
  let MemoryVT 1107,49432
  let IsLoad 1111,49524
  let MemoryVT 1112,49545
  let IsLoad 1115,49635
  let MemoryVT 1116,49656
  let IsLoad 1119,49746
  let MemoryVT 1120,49767
  let IsLoad 1123,49858
  let MemoryVT 1124,49879
  let IsLoad 1127,49970
  let MemoryVT 1128,49991
  let IsLoad 1132,50082
  let ScalarMemoryVT 1133,50103
  let IsLoad 1136,50198
  let ScalarMemoryVT 1137,50219
  let IsLoad 1140,50314
  let ScalarMemoryVT 1141,50335
  let IsLoad 1144,50431
  let ScalarMemoryVT 1145,50452
  let IsLoad 1148,50548
  let ScalarMemoryVT 1149,50569
  let IsLoad 1152,50665
  let ScalarMemoryVT 1153,50686
  let IsLoad 1156,50782
  let ScalarMemoryVT 1157,50803
  let IsLoad 1161,50902
  let ScalarMemoryVT 1162,50923
  let IsLoad 1165,51020
  let ScalarMemoryVT 1166,51041
  let IsLoad 1169,51138
  let ScalarMemoryVT 1170,51159
  let IsLoad 1173,51257
  let ScalarMemoryVT 1174,51278
  let IsLoad 1178,51377
  let ScalarMemoryVT 1179,51398
  let IsLoad 1182,51495
  let ScalarMemoryVT 1183,51516
  let IsLoad 1186,51613
  let ScalarMemoryVT 1187,51634
  let IsLoad 1190,51732
  let ScalarMemoryVT 1191,51753
  let IsStore 1197,51919
  let IsUnindexed 1198,51941
  let IsStore 1202,52078
  let IsTruncStore 1203,52100
  let IsStore 1209,52275
  let IsTruncStore 1210,52297
  let IsStore 1214,52445
  let MemoryVT 1215,52467
  let IsTruncStore 1216,52488
  let IsStore 1220,52638
  let MemoryVT 1221,52660
  let IsTruncStore 1222,52682
  let IsStore 1226,52832
  let MemoryVT 1227,52854
  let IsTruncStore 1228,52876
  let IsStore 1232,53026
  let MemoryVT 1233,53048
  let IsTruncStore 1234,53070
  let IsStore 1238,53220
  let MemoryVT 1239,53242
  let IsStore 1243,53387
  let MemoryVT 1244,53409
  let IsStore 1248,53554
  let MemoryVT 1249,53576
  let IsStore 1254,53722
  let ScalarMemoryVT 1255,53744
  let IsStore 1260,53897
  let ScalarMemoryVT 1261,53919
  let IsStore 1266,54073
  let ScalarMemoryVT 1267,54095
  let IsStore 1273,54284
  let IsTruncStore 1274,54306
  let IsStore 1285,54744
  let IsTruncStore 1286,54766
  let IsStore 1295,55222
  let MemoryVT 1296,55244
  let IsStore 1300,55419
  let MemoryVT 1301,55441
  let IsStore 1305,55618
  let MemoryVT 1306,55640
  let IsStore 1310,55818
  let MemoryVT 1311,55840
  let IsStore 1315,56018
  let MemoryVT 1316,56040
  let IsStore 1320,56218
  let ScalarMemoryVT 1321,56240
  let IsStore 1325,56425
  let ScalarMemoryVT 1326,56447
  let IsStore 1342,57181
  let MemoryVT 1343,57203
  let IsStore 1347,57381
  let MemoryVT 1348,57403
  let IsStore 1352,57583
  let MemoryVT 1353,57605
  let IsStore 1357,57786
  let MemoryVT 1358,57808
  let IsStore 1362,57989
  let MemoryVT 1363,58011
  let IsStore 1367,58192
  let ScalarMemoryVT 1368,58214
  let IsStore 1372,58402
  let ScalarMemoryVT 1373,58424
multiclass binary_atomic_op<binary_atomic_op1648,71870
defm atomic_load_add  : binary_atomic_op<binary_atomic_op1704,73720
defm atomic_swap      : binary_atomic_op<binary_atomic_op1705,73779
defm atomic_load_sub  : binary_atomic_op<binary_atomic_op1706,73834
defm atomic_load_and  : binary_atomic_op<binary_atomic_op1707,73893
defm atomic_load_clr  : binary_atomic_op<binary_atomic_op1708,73952
defm atomic_load_or   : binary_atomic_op<binary_atomic_op1709,74011
defm atomic_load_xor  : binary_atomic_op<binary_atomic_op1710,74069
defm atomic_load_nand : binary_atomic_op<binary_atomic_op1711,74128
defm atomic_load_min  : binary_atomic_op<binary_atomic_op1712,74188
defm atomic_load_max  : binary_atomic_op<binary_atomic_op1713,74247
defm atomic_load_umin : binary_atomic_op<binary_atomic_op1714,74306
defm atomic_load_umax : binary_atomic_op<binary_atomic_op1715,74366
defm atomic_cmp_swap  : ternary_atomic_op<ternary_atomic_op1716,74426
  let IsAtomic 1721,74615
  let IsZeroExtLoad 1722,74682
  let IsAtomic 1728,74847
  let IsSignExtLoad 1729,74914
  let IsAtomic 1735,75029
  let MemoryVT 1736,75052
  let IsAtomic 1742,75161
  let MemoryVT 1743,75184
  let IsAtomic 1749,75294
  let MemoryVT 1750,75317
  let IsAtomic 1755,75426
  let MemoryVT 1756,75449
  let IsAtomic 1761,75558
  let MemoryVT 1762,75625
  let IsAtomic 1767,75734
  let MemoryVT 1768,75801
  let IsAtomic 1773,75910
  let MemoryVT 1774,75977
  let IsAtomic 1779,76086
  let MemoryVT 1780,76153
  let IsAtomic 1915,82023
  let MemoryVT 1916,82046
  let IsAtomic 1922,82179
  let MemoryVT 1923,82202
  let IsAtomic 1929,82336
  let MemoryVT 1930,82359
  let IsAtomic 1936,82493
  let MemoryVT 1937,82516
  dag             PatternToMatch 1952,83127
  list<dag>       ResultInstrs 1953,83179
  list<Predicate> Predicates 1954,83229
  int             AddedComplexity 1955,83309
class Pat<dag pattern, dag result> : Pattern<Pattern1960,83501
                     list<SDNode> roots 1974,84184

/usr/include/llvm/TargetParser/CSKYTargetParser.h,2811
#define LLVM_TARGETPARSER_CSKYTARGETPARSER_H16,653
enum ArchExtKind 27,847
  AEK_INVALID 28,877
  AEK_NONE 29,896
  AEK_FPUV2SF 30,912
  AEK_FPUV2DF 31,936
  AEK_FDIVDU 32,960
  AEK_FPUV3HI 33,983
  AEK_FPUV3HF 34,1007
  AEK_FPUV3SF 35,1031
  AEK_FPUV3DF 36,1055
  AEK_FLOATE1 37,1079
  AEK_FLOAT1E2 38,1103
  AEK_FLOAT1E3 39,1128
  AEK_FLOAT3E4 40,1154
  AEK_FLOAT7E60 41,1180
  AEK_HWDIV 42,1207
  AEK_STLD 43,1230
  AEK_PUSHPOP 44,1252
  AEK_EDSP 45,1277
  AEK_DSP1E2 46,1299
  AEK_DSPE60 47,1323
  AEK_DSPV2 48,1347
  AEK_DSPSILAN 49,1370
  AEK_ELRW 50,1396
  AEK_TRUST 51,1418
  AEK_JAVA 52,1441
  AEK_CACHE 53,1463
  AEK_NVIC 54,1486
  AEK_DOLOOP 55,1508
  AEK_HIGHREG 56,1532
  AEK_SMART 57,1557
  AEK_VDSP2E3 58,1580
  AEK_VDSP2E60F 59,1605
  AEK_VDSPV2 60,1632
  AEK_HARDTP 61,1659
  AEK_SOFTTP 62,1686
  AEK_ISTACK 63,1713
  AEK_CONSTPOOL 64,1740
  AEK_STACKSIZE 65,1770
  AEK_CCRT 66,1800
  AEK_VDSPV1 67,1825
  AEK_E1 68,1852
  AEK_E2 69,1875
  AEK_2E3 70,1898
  AEK_MP 71,1922
  AEK_3E3R1 72,1945
  AEK_3E3R2 73,1971
  AEK_3E3R3 74,1997
  AEK_3E7 75,2023
  AEK_MP1E2 76,2047
  AEK_7E10 77,2073
  AEK_10E60 78,2098
enum MultiArchExtKind 83,2166
  MAEK_E1 84,2201
  MAEK_E2 85,2244
  MAEK_2E3 86,2286
  MAEK_MP 87,2330
  MAEK_3E3R1 88,2373
  MAEK_3E3R2 89,2405
  MAEK_3E7 90,2474
  MAEK_MP1E2 91,2519
  MAEK_7E10 92,2568
  MAEK_10E60 93,2615
enum CSKYFPUKind 96,2682
#define CSKY_FPU(97,2701
  FK_LAST99,2777
enum class FPUVersion 103,2806
  NONE,104,2830
  FPV2,105,2838
  FPV3,106,2846
enum class ArchKind 110,2873
#define CSKY_ARCH(111,2895
struct ExtName 117,3036
  const char *NameCStr;NameCStr118,3053
  size_t NameLength;119,3077
  uint64_t ID;120,3098
  const char *Feature;Feature121,3113
  const char *NegFeature;NegFeature122,3136
  StringRef getName(124,3163
const CSKY::ExtName CSKYARCHExtNames[CSKYARCHExtNames127,3239
#define CSKY_ARCH_EXT_NAME(128,3282
template <typename T> struct CpuNames 134,3491
  const char *NameCStr;NameCStr135,3531
  size_t NameLength;136,3555
  T ArchID;137,3576
  uint64_t defaultExt;138,3588
  StringRef getName(140,3612
const CpuNames<CSKY::ArchKind> CPUNames[CPUNames142,3687
#define CSKY_CPU_NAME(143,3733
struct FPUName 151,4051
  const char *NameCStr;NameCStr152,4068
  size_t NameLength;153,4092
  CSKYFPUKind ID;154,4113
  FPUVersion FPUVer;155,4131
  StringRef getName(157,4153
static const FPUName FPUNames[FPUNames160,4229
#define CSKY_FPU(161,4265
template <typename T> struct ArchNames 166,4431
  const char *NameCStr;NameCStr167,4472
  size_t NameLength;168,4496
  T ID;169,4517
  uint64_t archBaseExt;170,4525
  StringRef getName(171,4549
const ArchNames<CSKY::ArchKind> ARCHNames[ARCHNames173,4624
#define CSKY_ARCH(174,4672

/usr/include/llvm/TargetParser/Host.h,207
#define LLVM_TARGETPARSER_HOST_H14,546
  namespace detail 62,2382
  namespace x86 72,2910
  enum class VendorSignatures 73,2928
    UNKNOWN,74,2960
    GENUINE_INTEL,75,2973
    AUTHENTIC_AMD,76,2992

/usr/include/llvm/TargetParser/LoongArchTargetParser.h,477
#define LLVM_TARGETPARSER_LOONGARCHTARGETPARSER_H15,629
enum FeatureKind 25,795
  FK_64BIT 27,855
  FK_FP32 30,942
  FK_FP64 33,1028
  FK_LSX 36,1092
  FK_LASX 39,1164
  FK_LBT 42,1242
  FK_LVZ 45,1315
  FK_UAL 48,1379
struct FeatureInfo 51,1402
  StringRef Name;52,1423
  FeatureKind Kind;53,1441
enum class ArchKind 56,1465
#define LOONGARCH_ARCH(57,1487
struct ArchInfo 61,1579
  StringRef Name;62,1597
  ArchKind Kind;63,1615
  uint32_t Features;64,1632

/usr/include/llvm/TargetParser/AArch64TargetParser.h,5797
#define LLVM_TARGETPARSER_AARCH64TARGETPARSER_H15,629
enum CPUFeatures 37,1129
  FEAT_RNG,38,1148
  FEAT_FLAGM,39,1160
  FEAT_FLAGM2,40,1174
  FEAT_FP16FML,41,1189
  FEAT_DOTPROD,42,1205
  FEAT_SM4,43,1221
  FEAT_RDM,44,1233
  FEAT_LSE,45,1245
  FEAT_FP,46,1257
  FEAT_SIMD,47,1268
  FEAT_CRC,48,1281
  FEAT_SHA1,49,1293
  FEAT_SHA2,50,1306
  FEAT_SHA3,51,1319
  FEAT_AES,52,1332
  FEAT_PMULL,53,1344
  FEAT_FP16,54,1358
  FEAT_DIT,55,1371
  FEAT_DPB,56,1383
  FEAT_DPB2,57,1395
  FEAT_JSCVT,58,1408
  FEAT_FCMA,59,1422
  FEAT_RCPC,60,1435
  FEAT_RCPC2,61,1448
  FEAT_FRINTTS,62,1462
  FEAT_DGH,63,1478
  FEAT_I8MM,64,1490
  FEAT_BF16,65,1503
  FEAT_EBF16,66,1516
  FEAT_RPRES,67,1530
  FEAT_SVE,68,1544
  FEAT_SVE_BF16,69,1556
  FEAT_SVE_EBF16,70,1573
  FEAT_SVE_I8MM,71,1591
  FEAT_SVE_F32MM,72,1608
  FEAT_SVE_F64MM,73,1626
  FEAT_SVE2,74,1644
  FEAT_SVE_AES,75,1657
  FEAT_SVE_PMULL128,76,1673
  FEAT_SVE_BITPERM,77,1694
  FEAT_SVE_SHA3,78,1714
  FEAT_SVE_SM4,79,1731
  FEAT_SME,80,1747
  FEAT_MEMTAG,81,1759
  FEAT_MEMTAG2,82,1774
  FEAT_MEMTAG3,83,1790
  FEAT_SB,84,1806
  FEAT_PREDRES,85,1817
  FEAT_SSBS,86,1833
  FEAT_SSBS2,87,1846
  FEAT_BTI,88,1860
  FEAT_LS64,89,1872
  FEAT_LS64_V,90,1885
  FEAT_LS64_ACCDATA,91,1900
  FEAT_WFXT,92,1921
  FEAT_SME_F64,93,1934
  FEAT_SME_I64,94,1950
  FEAT_SME2,95,1966
  FEAT_RCPC3,96,1979
  FEAT_MOPS,97,1993
  FEAT_MAX,98,2006
  FEAT_EXT 99,2018
  FEAT_INIT100,2035
enum ArchExtKind 109,2328
  AEK_NONE 110,2358
  AEK_CRC 111,2383
  AEK_CRYPTO 112,2423
  AEK_FP 113,2448
  AEK_SIMD 114,2485
  AEK_FP16 115,2527
  AEK_PROFILE 116,2566
  AEK_RAS 117,2604
  AEK_LSE 118,2656
  AEK_SVE 119,2694
  AEK_DOTPROD 120,2733
  AEK_RCPC 121,2775
  AEK_RDM 122,2815
  AEK_SM4 123,2853
  AEK_SHA3 124,2901
  AEK_SHA2 125,2953
  AEK_AES 126,3005
  AEK_FP16FML 127,3055
  AEK_RAND 128,3093
  AEK_MTE 129,3131
  AEK_SSBS 130,3180
  AEK_SB 131,3231
  AEK_PREDRES 132,3268
  AEK_SVE2 133,3310
  AEK_SVE2AES 134,3349
  AEK_SVE2SM4 135,3410
  AEK_SVE2SHA3 136,3452
  AEK_SVE2BITPERM 137,3495
  AEK_TME 138,3541
  AEK_BF16 139,3579
  AEK_I8MM 140,3618
  AEK_F32MM 141,3657
  AEK_F64MM 142,3697
  AEK_LS64 143,3737
  AEK_BRBE 144,3808
  AEK_PAUTH 145,3847
  AEK_FLAGM 146,3887
  AEK_SME 147,3927
  AEK_SMEF64F64 148,3965
  AEK_SMEI16I64 149,4010
  AEK_HBC 150,4055
  AEK_MOPS 151,4093
  AEK_PERFMON 152,4132
  AEK_SME2 153,4172
  AEK_SVE2p1 154,4211
  AEK_SME2p1 155,4252
  AEK_B16B16 156,4293
  AEK_SMEF16F16 157,4334
  AEK_CSSC 158,4378
  AEK_RCPC3 159,4417
  AEK_THE 160,4458
  AEK_D128 161,4496
  AEK_LSE128 162,4535
  AEK_SPECRES2 163,4576
  AEK_RASv2 164,4619
  AEK_ITE 165,4659
  AEK_GCS 166,4697
  AEK_FPMR 167,4735
  AEK_FP8 168,4774
  AEK_FAMINMAX 169,4812
  AEK_FP8FMA 170,4855
  AEK_SSVE_FP8FMA 171,4896
  AEK_FP8DOT2 172,4942
  AEK_SSVE_FP8DOT2 173,4984
  AEK_FP8DOT4 174,5031
  AEK_SSVE_FP8DOT4 175,5073
  AEK_LUT 176,5120
  AEK_SME_LUTv2 177,5158
  AEK_SMEF8F16 178,5202
  AEK_SMEF8F32 179,5246
  AEK_SMEFA64 180,5290
  AEK_CPA 181,5333
  AEK_PAUTHLR 182,5371
  AEK_TLBIW 183,5414
  AEK_JSCVT 184,5454
  AEK_FCMA 185,5494
  AEK_NUM_EXTENSIONS186,5533
using ExtensionBitset 188,5557
struct ExtensionInfo 195,5879
  StringRef Name;196,5902
  ArchExtKind ID;197,5973
  StringRef Feature;199,6123
  StringRef NegFeature;200,6191
  CPUFeatures CPUFeature;201,6260
  StringRef DependentFeatures;203,6405
  unsigned FmvPriority;205,6534
  static constexpr unsigned MaxFMVPriority 206,6589
inline constexpr ExtensionInfo Extensions[Extensions213,6857
struct ExtensionSet 316,15304
  ExtensionBitset Enabled;318,15378
  ExtensionBitset Touched;321,15561
  const ArchInfo *BaseArch;BaseArch324,15707
  ExtensionSet(326,15736
struct ExtensionDependency 362,17482
  ArchExtKind Earlier;363,17511
  ArchExtKind Later;364,17534
inline constexpr ExtensionDependency ExtensionDependencies[ExtensionDependencies370,17705
enum ArchProfile 417,18907
enum ArchProfile { AProfile 417,18907
enum ArchProfile { AProfile = 'A', RProfile 417,18907
enum ArchProfile { AProfile = 'A', RProfile = 'R', InvalidProfile 417,18907
struct ArchInfo 420,19041
  VersionTuple Version;421,19059
  ArchProfile Profile;422,19124
  StringRef Name;423,19174
  StringRef ArchFeature;424,19240
      DefaultExts;426,19332
  bool operator==(operator==428,19398
  bool operator!=(operator!=431,19488
  bool implies(445,20038
  bool is_superset(462,20702
  StringRef getSubArch(467,20853
inline constexpr ArchInfo ARMV8A 474,21051
inline constexpr ArchInfo ARMV8_1A 476,21250
inline constexpr ArchInfo ARMV8_2A 478,21489
inline constexpr ArchInfo ARMV8_3A 480,21694
inline constexpr ArchInfo ARMV8_4A 482,21959
inline constexpr ArchInfo ARMV8_5A 484,22168
inline constexpr ArchInfo ARMV8_6A 485,22286
inline constexpr ArchInfo ARMV8_7A 487,22511
inline constexpr ArchInfo ARMV8_8A 488,22629
inline constexpr ArchInfo ARMV8_9A 490,22853
inline constexpr ArchInfo ARMV9A 492,23102
inline constexpr ArchInfo ARMV9_1A 494,23341
inline constexpr ArchInfo ARMV9_2A 496,23564
inline constexpr ArchInfo ARMV9_3A 497,23682
inline constexpr ArchInfo ARMV9_4A 499,23906
inline constexpr ArchInfo ARMV9_5A 501,24155
inline constexpr ArchInfo ARMV8R 504,24485
static constexpr std::array<const ArchInfo *, 17> ArchInfos 510,24860
struct CpuInfo 517,25155
  StringRef Name;518,25172
  const ArchInfo &Arch;Arch519,25221
      DefaultExtensions;521,25272
  AArch64::ExtensionBitset getImpliedExtensions(524,25412
inline constexpr CpuInfo CpuInfos[CpuInfos532,25619
struct CpuAlias 817,39410
  StringRef Alias;818,39428
  StringRef Name;819,39447
inline constexpr CpuAlias CpuAliases[CpuAliases822,39469

/usr/include/llvm/TargetParser/ARMTargetParser.h,2871
#define LLVM_TARGETPARSER_ARMTARGETPARSER_H15,647
enum ArchExtKind 31,1015
  AEK_INVALID 32,1045
  AEK_NONE 33,1068
  AEK_CRC 34,1091
  AEK_CRYPTO 35,1119
  AEK_FP 36,1147
  AEK_HWDIVTHUMB 37,1175
  AEK_HWDIVARM 38,1203
  AEK_MP 39,1231
  AEK_SIMD 40,1259
  AEK_SEC 41,1287
  AEK_VIRT 42,1315
  AEK_DSP 43,1343
  AEK_FP16 44,1372
  AEK_RAS 45,1401
  AEK_DOTPROD 46,1430
  AEK_SHA2 47,1459
  AEK_AES 48,1488
  AEK_FP16FML 49,1517
  AEK_SB 50,1546
  AEK_FP_DP 51,1575
  AEK_LOB 52,1604
  AEK_BF16 53,1633
  AEK_I8MM 54,1662
  AEK_CDECP0 55,1691
  AEK_CDECP1 56,1720
  AEK_CDECP2 57,1749
  AEK_CDECP3 58,1778
  AEK_CDECP4 59,1807
  AEK_CDECP5 60,1836
  AEK_CDECP6 61,1865
  AEK_CDECP7 62,1894
  AEK_PACBTI 63,1923
  AEK_OS 65,1981
  AEK_IWMMXT 66,2013
  AEK_IWMMXT2 67,2045
  AEK_MAVERICK 68,2077
  AEK_XSCALE 69,2109
struct ExtName 73,2178
  StringRef Name;74,2195
  uint64_t ID;75,2213
  StringRef Feature;76,2228
  StringRef NegFeature;77,2249
const ExtName ARCHExtNames[ARCHExtNames80,2277
#define ARM_ARCH_EXT_NAME(81,2310
  StringRef Name;89,2600
  uint64_t ID;90,2618
} HWDivNames[HWDivNames91,2633
#define ARM_HW_DIV_NAME(92,2652
enum class ArchKind 97,2748
#define ARM_ARCH(98,2770
struct CpuNames 108,3242
  StringRef Name;109,3260
  ArchKind ArchID;110,3278
  bool Default;111,3297
  uint64_t DefaultExtensions;112,3355
const CpuNames CPUNames[CPUNames115,3389
#define ARM_CPU_NAME(116,3419
enum FPUKind 122,3603
#define ARM_FPU(123,3618
  FK_LAST125,3719
enum class FPUVersion 129,3748
  NONE,130,3772
  VFPV2,131,3780
  VFPV3,132,3789
  VFPV3_FP16,133,3798
  VFPV4,134,3812
  VFPV5,135,3821
  VFPV5_FULLFP16,136,3830
enum class FPURestriction 140,3907
  None 141,3935
  D16,142,3967
  SP_D16 143,4004
inline bool isDoublePrecision(146,4081
inline bool has32Regs(150,4198
enum class NeonSupportLevel 155,4365
  None 156,4395
  Neon,157,4420
  Crypto 158,4442
enum class ProfileKind 162,4500
enum class ProfileKind { INVALID 162,4500
enum class ProfileKind { INVALID = 0, A,162,4500
enum class ProfileKind { INVALID = 0, A, R,162,4500
enum class ProfileKind { INVALID = 0, A, R, M 162,4500
struct FPUName 168,4765
  StringRef Name;169,4782
  FPUKind ID;170,4800
  FPUVersion FPUVer;171,4814
  NeonSupportLevel NeonSupport;172,4835
  FPURestriction Restriction;173,4867
static const FPUName FPUNames[FPUNames176,4901
#define ARM_FPU(177,4937
struct ArchNames 189,5536
  StringRef Name;190,5555
  StringRef CPUAttr;191,5573
  StringRef ArchFeature;192,5628
  FPUKind DefaultFPU;193,5653
  uint64_t ArchBaseExtensions;194,5675
  ArchKind ID;195,5706
  ARMBuildAttrs::CPUArch ArchAttr;196,5721
  StringRef getSubArch(199,5838
static const ArchNames ARMArchNames[ARMArchNames202,5907
#define ARM_ARCH(203,5949
inline ArchKind &operator--(operator--210,6289

/usr/include/llvm/TargetParser/ARMTargetParserCommon.h,668
#define LLVM_TARGETPARSER_ARMTARGETPARSERCOMMON_H14,574
enum class ISAKind 21,692
enum class ISAKind { INVALID 21,692
enum class ISAKind { INVALID = 0, ARM,21,692
enum class ISAKind { INVALID = 0, ARM, THUMB,21,692
enum class ISAKind { INVALID = 0, ARM, THUMB, AARCH64 21,692
enum class EndianKind 23,750
enum class EndianKind { INVALID 23,750
enum class EndianKind { INVALID = 0, LITTLE,23,750
enum class EndianKind { INVALID = 0, LITTLE, BIG 23,750
struct ParsedBranchProtection 40,1303
  StringRef Scope;41,1335
  StringRef Key;42,1354
  bool BranchTargetEnforcement;43,1371
  bool BranchProtectionPAuthLR;44,1403
  bool GuardedControlStack;45,1435

/usr/include/llvm/TargetParser/RISCVTargetParser.h,53
#define LLVM_TARGETPARSER_RISCVTARGETPARSER_H15,594

/usr/include/llvm/TargetParser/SubtargetFeature.h,1437
#define LLVM_TARGETPARSER_SUBTARGETFEATURE_H18,851
class FeatureBitset 41,1485
  static_assert(42,1507
  std::array<std::array44,1607
  std::array<uint64_t, MAX_SUBTARGET_WORDS> Bits{Bits44,1607
  constexpr FeatureBitset(47,1671
  constexpr FeatureBitset(52,1816
  FeatureBitset &set(set57,1925
  constexpr FeatureBitset &set(set62,2029
  constexpr FeatureBitset &reset(reset67,2142
  constexpr FeatureBitset &flip(flip72,2260
  constexpr bool test(82,2511
  constexpr size_t size(84,2575
  bool any(86,2643
  bool none(89,2734
  size_t count(90,2773
  constexpr FeatureBitset &operator^=(operator^=97,2901
  constexpr FeatureBitset operator^(103,3082
  constexpr FeatureBitset &operator&=(operator&=109,3229
  constexpr FeatureBitset operator&(114,3402
  constexpr FeatureBitset &operator|=(operator|=120,3549
  constexpr FeatureBitset operator|(126,3730
  constexpr FeatureBitset operator~(132,3877
  bool operator==(operator==139,4027
  bool operator!=(operator!=143,4163
  bool operator < operator <145,4242
class FeatureBitArray 156,4554
  constexpr FeatureBitArray(158,4609
  const FeatureBitset &getAsBitset(getAsBitset161,4718
class SubtargetFeatures 174,5259
  std::vector<std::string> Features;175,5285
  const std::vector<std::string> &getFeatures(getFeatures189,5703
  static bool hasFlag(201,6069
  static StringRef StripFlag(210,6341
  static inline bool isEnabled(215,6494

/usr/include/llvm/TargetParser/TargetParser.h,1889
#define LLVM_TARGETPARSER_TARGETPARSER_H15,646
enum GPUKind 35,1386
  GK_NONE 37,1442
  GK_R600 40,1486
  GK_R630 41,1501
  GK_RS880 42,1516
  GK_RV670 43,1532
  GK_RV710 44,1548
  GK_RV730 45,1564
  GK_RV770 46,1580
  GK_CEDAR 47,1596
  GK_CYPRESS 48,1612
  GK_JUNIPER 49,1630
  GK_REDWOOD 50,1649
  GK_SUMO 51,1668
  GK_BARTS 52,1684
  GK_CAICOS 53,1701
  GK_CAYMAN 54,1719
  GK_TURKS 55,1737
  GK_R600_FIRST 57,1755
  GK_R600_LAST 58,1782
  GK_GFX600 61,1840
  GK_GFX601 62,1858
  GK_GFX602 63,1876
  GK_GFX700 65,1895
  GK_GFX701 66,1913
  GK_GFX702 67,1931
  GK_GFX703 68,1949
  GK_GFX704 69,1967
  GK_GFX705 70,1985
  GK_GFX801 72,2004
  GK_GFX802 73,2022
  GK_GFX803 74,2040
  GK_GFX805 75,2058
  GK_GFX810 76,2076
  GK_GFX900 78,2095
  GK_GFX902 79,2113
  GK_GFX904 80,2131
  GK_GFX906 81,2149
  GK_GFX908 82,2167
  GK_GFX909 83,2185
  GK_GFX90A 84,2203
  GK_GFX90C 85,2221
  GK_GFX940 86,2239
  GK_GFX941 87,2257
  GK_GFX942 88,2275
  GK_GFX1010 90,2294
  GK_GFX1011 91,2313
  GK_GFX1012 92,2332
  GK_GFX1013 93,2351
  GK_GFX1030 94,2370
  GK_GFX1031 95,2389
  GK_GFX1032 96,2408
  GK_GFX1033 97,2427
  GK_GFX1034 98,2446
  GK_GFX1035 99,2465
  GK_GFX1036 100,2484
  GK_GFX1100 102,2504
  GK_GFX1101 103,2523
  GK_GFX1102 104,2542
  GK_GFX1103 105,2561
  GK_GFX1150 106,2580
  GK_GFX1151 107,2599
  GK_GFX1200 109,2619
  GK_GFX1201 110,2639
  GK_AMDGCN_FIRST 112,2660
  GK_AMDGCN_LAST 113,2691
struct IsaVersion 117,2768
  unsigned Major;118,2788
  unsigned Minor;119,2806
  unsigned Stepping;120,2824
enum ArchFeatureKind 125,2943
  FEATURE_NONE 126,2977
  FEATURE_FMA 129,3072
  FEATURE_LDEXP 130,3096
  FEATURE_FP64 131,3122
  FEATURE_FAST_FMA_F32 134,3170
  FEATURE_FAST_DENORMAL_F32 135,3203
  FEATURE_WAVE32 138,3274
  FEATURE_XNACK 141,3327
  FEATURE_SRAMECC 144,3382
  FEATURE_WGP 147,3439

/usr/include/llvm/TargetParser/Triple.h,9460
#define LLVM_TARGETPARSER_TRIPLE_H10,405
#undef NetBSD17,621
#undef mips18,635
#undef sparc19,647
class Triple 44,1689
  enum ArchType 46,1712
    UnknownArch,47,1730
    arm,49,1748
    armeb,50,1812
    aarch64,51,1859
    aarch64_be,52,1915
    aarch64_32,53,1971
    arc,54,2036
    avr,55,2077
    bpfel,56,2131
    bpfeb,57,2205
    csky,58,2276
    dxil,59,2310
    hexagon,60,2362
    loongarch32,61,2402
    loongarch64,62,2457
    m68k,63,2512
    mips,64,2563
    mipsel,65,2619
    mips64,66,2682
    mips64el,67,2750
    msp430,68,2828
    ppc,69,2866
    ppcle,70,2902
    ppc64,71,2956
    ppc64le,72,3001
    r600,73,3045
    amdgcn,74,3099
    riscv32,75,3143
    riscv64,76,3191
    sparc,77,3239
    sparcv9,78,3275
    sparcel,79,3315
    systemz,80,3399
    tce,81,3437
    tcele,82,3493
    thumb,83,3565
    thumbeb,84,3627
    x86,85,3678
    x86_64,86,3715
    xcore,87,3760
    xtensa,88,3796
    nvptx,89,3837
    nvptx64,90,3874
    le32,91,3911
    le64,92,3981
    amdil,93,4051
    amdil64,94,4080
    hsail,95,4130
    hsail64,96,4163
    spir,97,4217
    spir64,98,4293
    spirv,99,4369
    spirv32,100,4427
    spirv64,101,4478
    kalimba,102,4529
    shave,103,4577
    lanai,104,4639
    wasm32,105,4682
    wasm64,106,4738
    renderscript32,107,4794
    renderscript64,108,4837
    ve,109,4880
    LastArchType 110,4931
  enum SubArchType 112,4958
    NoSubArch,113,4979
    ARMSubArch_v9_5a,115,4995
    ARMSubArch_v9_4a,116,5017
    ARMSubArch_v9_3a,117,5039
    ARMSubArch_v9_2a,118,5061
    ARMSubArch_v9_1a,119,5083
    ARMSubArch_v9,120,5105
    ARMSubArch_v8_9a,121,5124
    ARMSubArch_v8_8a,122,5146
    ARMSubArch_v8_7a,123,5168
    ARMSubArch_v8_6a,124,5190
    ARMSubArch_v8_5a,125,5212
    ARMSubArch_v8_4a,126,5234
    ARMSubArch_v8_3a,127,5256
    ARMSubArch_v8_2a,128,5278
    ARMSubArch_v8_1a,129,5300
    ARMSubArch_v8,130,5322
    ARMSubArch_v8r,131,5341
    ARMSubArch_v8m_baseline,132,5361
    ARMSubArch_v8m_mainline,133,5390
    ARMSubArch_v8_1m_mainline,134,5419
    ARMSubArch_v7,135,5450
    ARMSubArch_v7em,136,5469
    ARMSubArch_v7m,137,5490
    ARMSubArch_v7s,138,5510
    ARMSubArch_v7k,139,5530
    ARMSubArch_v7ve,140,5550
    ARMSubArch_v6,141,5571
    ARMSubArch_v6m,142,5590
    ARMSubArch_v6k,143,5610
    ARMSubArch_v6t2,144,5630
    ARMSubArch_v5,145,5651
    ARMSubArch_v5te,146,5670
    ARMSubArch_v4t,147,5691
    AArch64SubArch_arm64e,149,5712
    AArch64SubArch_arm64ec,150,5739
    KalimbaSubArch_v3,152,5768
    KalimbaSubArch_v4,153,5791
    KalimbaSubArch_v5,154,5814
    MipsSubArch_r6,156,5838
    PPCSubArch_spe,158,5859
    SPIRVSubArch_v10,161,5931
    SPIRVSubArch_v11,162,5953
    SPIRVSubArch_v12,163,5975
    SPIRVSubArch_v13,164,5997
    SPIRVSubArch_v14,165,6019
    SPIRVSubArch_v15,166,6041
    SPIRVSubArch_v16,167,6063
  enum VendorType 169,6090
    UnknownVendor,170,6110
    Apple,172,6130
    PC,173,6141
    SCEI,174,6149
    Freescale,175,6159
    IBM,176,6174
    ImaginationTechnologies,177,6183
    MipsTechnologies,178,6212
    NVIDIA,179,6234
    CSR,180,6246
    AMD,181,6255
    Mesa,182,6264
    SUSE,183,6274
    OpenEmbedded,184,6284
    LastVendorType 185,6302
  enum OSType 187,6341
    UnknownOS,188,6357
    Darwin,190,6373
    DragonFly,191,6385
    FreeBSD,192,6400
    Fuchsia,193,6413
    IOS,194,6426
    KFreeBSD,195,6435
    Linux,196,6449
    Lv2,197,6460
    MacOSX,198,6483
    NetBSD,199,6495
    OpenBSD,200,6507
    Solaris,201,6520
    UEFI,202,6533
    Win32,203,6543
    ZOS,204,6554
    Haiku,205,6563
    RTEMS,206,6574
    NaCl,207,6585
    AIX,208,6618
    CUDA,209,6627
    NVCL,210,6658
    AMDHSA,211,6691
    PS4,212,6726
    PS5,213,6735
    ELFIAMCU,214,6744
    TvOS,215,6758
    WatchOS,216,6788
    DriverKit,217,6821
    XROS,218,6856
    Mesa3D,219,6886
    AMDPAL,220,6898
    HermitCore,221,6933
    Hurd,222,6985
    WASI,223,7013
    Emscripten,224,7060
    ShaderModel,225,7076
    LiteOS,226,7116
    Serenity,227,7128
    Vulkan,228,7142
    LastOSType 229,7176
  enum EnvironmentType 231,7205
    UnknownEnvironment,232,7230
    GNU,234,7255
    GNUABIN32,235,7264
    GNUABI64,236,7279
    GNUEABI,237,7293
    GNUEABIHF,238,7306
    GNUF32,239,7321
    GNUF64,240,7333
    GNUSF,241,7345
    GNUX32,242,7356
    GNUILP32,243,7368
    CODE16,244,7382
    EABI,245,7394
    EABIHF,246,7404
    Android,247,7416
    Musl,248,7429
    MuslEABI,249,7439
    MuslEABIHF,250,7453
    MuslX32,251,7469
    MSVC,253,7483
    Itanium,254,7493
    Cygnus,255,7506
    CoreCLR,256,7518
    Simulator,257,7531
    MacABI,258,7604
    Pixel,264,7889
    Vertex,265,7900
    Geometry,266,7912
    Hull,267,7926
    Domain,268,7936
    Compute,269,7948
    Library,270,7961
    RayGeneration,271,7974
    Intersection,272,7993
    AnyHit,273,8011
    ClosestHit,274,8023
    Miss,275,8039
    Callable,276,8049
    Mesh,277,8063
    Amplification,278,8073
    OpenHOS,280,8093
    LastEnvironmentType 282,8107
  enum ObjectFormatType 284,8146
    UnknownObjectFormat,285,8172
    COFF,287,8198
    DXContainer,288,8208
    ELF,289,8225
    GOFF,290,8234
    MachO,291,8244
    SPIRV,292,8255
    Wasm,293,8266
    XCOFF,294,8276
  std::string Data;298,8302
  ArchType Arch{Arch301,8351
  SubArchType SubArch{SubArch304,8410
  VendorType Vendor{Vendor307,8466
  OSType OS{OS310,8516
  EnvironmentType Environment{Environment313,8567
  ObjectFormatType ObjectFormat{ObjectFormat316,8631
  bool operator==(operator==331,9062
  bool operator!=(operator!=338,9324
  std::string normalize(353,9855
  ArchType getArch(360,10025
  SubArchType getSubArch(363,10129
  VendorType getVendor(366,10232
  OSType getOS(369,10342
  bool hasEnvironment(372,10454
  EnvironmentType getEnvironment(377,10584
  ObjectFormatType getObjectFormat(386,10895
  unsigned getOSMajorVersion(396,11255
  const std::string &str(str423,12345
  const std::string &getTriple(getTriple425,12396
  bool isOSVersionLT(475,14178
  bool isOSVersionLT(486,14517
  bool isMacOSX(497,15008
  bool isiOS(506,15416
  bool isTvOS(511,15527
  bool isWatchOS(516,15631
  bool isWatchABI(520,15702
  bool isXROS(525,15822
  bool isDriverKit(528,15922
  bool isOSzOS(530,15991
  bool isOSDarwin(533,16127
  bool isSimulatorEnvironment(537,16238
  bool isMacCatalystEnvironment(541,16333
  bool isTargetMachineMac(546,16487
  bool isOSNetBSD(551,16672
  bool isOSOpenBSD(555,16743
  bool isOSFreeBSD(559,16816
  bool isOSFuchsia(563,16889
  bool isOSDragonFly(567,16962
  bool isOSSolaris(569,17033
  bool isOSIAMCU(573,17106
  bool isOSUnknown(577,17178
  bool isGNUEnvironment(579,17247
  bool isOSHaiku(590,17731
  bool isUEFI(595,17836
  bool isOSWindows(600,17940
  bool isKnownWindowsMSVCEnvironment(605,18052
  bool isWindowsMSVCEnvironment(610,18213
  bool isWindowsArm64EC(616,18436
  bool isWindowsCoreCLREnvironment(621,18577
  bool isWindowsItaniumEnvironment(625,18692
  bool isWindowsCygwinEnvironment(629,18807
  bool isWindowsGNUEnvironment(633,18920
  bool isOSCygMing(638,19069
  bool isOSMSVCRT(643,19240
  bool isOSNaCl(649,19436
  bool isOSLinux(654,19540
  bool isOSKFreeBSD(659,19649
  bool isOSHurd(664,19760
  bool isOSWASI(669,19863
  bool isOSEmscripten(674,19972
  bool isOSGlibc(679,20090
  bool isOSAIX(686,20293
  bool isOSSerenity(690,20358
  bool isOSBinFormatELF(695,20488
  bool isOSBinFormatCOFF(700,20628
  bool isOSBinFormatGOFF(705,20770
  bool isOSBinFormatMachO(708,20896
  bool isOSBinFormatWasm(713,21040
  bool isOSBinFormatXCOFF(718,21183
  bool isOSBinFormatDXContainer(723,21334
  bool isPS4(728,21486
  bool isPS5(735,21685
  bool isPS(742,21881
  bool isAndroid(745,21975
  bool isAndroidVersionLT(747,22049
  bool isMusl(760,22474
  bool isOHOSFamily(770,22875
  bool isOpenHOS(772,22944
  bool isOSLiteOS(774,23018
  bool isDXIL(777,23123
  bool isShaderModelOS(781,23190
  bool isVulkanOS(785,23271
  bool isShaderStageEnvironment(787,23336
  bool isSPIR(800,23967
  bool isSPIRV(805,24127
  bool isSPIRVLogical(811,24320
  bool isNVPTX(816,24453
  bool isAMDGCN(821,24595
  bool isAMDGPU(823,24660
  bool isThumb(828,24825
  bool isARM(833,24989
  bool isTargetEHABICompatible(839,25169
  bool isArmT32(852,25697
  bool isArmMClass(872,26233
  bool isAArch64(887,26648
  bool isAArch64(894,26906
  bool isLoongArch32(905,27277
  bool isLoongArch64(908,27404
  bool isLoongArch(911,27541
  bool isMIPS32(914,27687
  bool isMIPS64(919,27858
  bool isMIPS(924,28041
  bool isPPC(929,28175
  bool isPPC32(935,28417
  bool isPPC64(940,28588
  bool isPPC64ELFv2ABI(945,28760
  bool isPPC32SecurePlt(953,29074
  bool isRISCV32(962,29447
  bool isRISCV64(965,29563
  bool isRISCV(968,29689
  bool isSPARC32(971,29824
  bool isSPARC64(976,29988
  bool isSPARC(979,30096
  bool isSystemZ(982,30202
  bool isX86(987,30330
  bool isVE(992,30463
  bool isWasm(997,30583
  bool isCSKY(1002,30721
  bool isArm64e(1007,30858
  bool isX32(1013,31029
  bool isBPF(1019,31201
  bool supportsCOMDAT(1024,31345
  bool hasDefaultEmulatedTLS(1032,31610
  bool hasDefaultTLSDESC(1039,31893
  bool hasDefaultDataSections(1045,32087
  bool hasDLLImportExport(1050,32247

/usr/include/llvm/TargetParser/X86TargetParser.def,1850
X86_FEATURE 177,8302
X86_FEATURE 178,8347
X86_FEATURE 179,8393
X86_FEATURE 180,8438
X86_FEATURE 181,8481
X86_FEATURE 182,8529
X86_FEATURE 183,8580
X86_FEATURE 184,8628
X86_FEATURE 185,8676
X86_FEATURE 186,8724
X86_FEATURE 187,8774
X86_FEATURE 189,8883
X86_FEATURE 190,8929
X86_FEATURE 191,8973
X86_FEATURE 192,9016
X86_FEATURE 193,9061
X86_FEATURE 194,9107
X86_FEATURE 195,9155
X86_FEATURE 196,9199
X86_FEATURE 197,9246
X86_FEATURE 198,9288
X86_FEATURE 199,9334
X86_FEATURE 200,9377
X86_FEATURE 201,9422
X86_FEATURE 202,9467
X86_FEATURE 203,9516
X86_FEATURE 204,9563
X86_FEATURE 205,9609
X86_FEATURE 206,9656
X86_FEATURE 207,9699
X86_FEATURE 208,9748
X86_FEATURE 209,9799
X86_FEATURE 210,9845
X86_FEATURE 211,9892
X86_FEATURE 212,9937
X86_FEATURE 213,9982
X86_FEATURE 214,10027
X86_FEATURE 215,10073
X86_FEATURE 216,10116
X86_FEATURE 217,10160
X86_FEATURE 218,10209
X86_FEATURE 219,10252
X86_FEATURE 220,10295
X86_FEATURE 221,10340
X86_FEATURE 222,10383
X86_FEATURE 223,10431
X86_FEATURE 224,10476
X86_FEATURE 225,10520
X86_FEATURE 226,10570
X86_FEATURE 227,10617
X86_FEATURE 228,10665
X86_FEATURE 229,10708
X86_FEATURE 230,10753
X86_FEATURE 231,10799
X86_FEATURE 232,10847
X86_FEATURE 234,10958
X86_FEATURE 235,11004
X86_FEATURE 236,11050
X86_FEATURE 237,11098
X86_FEATURE 238,11147
X86_FEATURE 239,11199
X86_FEATURE 240,11246
X86_FEATURE 241,11293
X86_FEATURE 242,11344
X86_FEATURE 243,11390
X86_FEATURE 244,11433
X86_FEATURE 245,11476
X86_FEATURE 246,11528
X86_FEATURE 247,11575
X86_FEATURE 248,11626
X86_FEATURE 249,11677
X86_FEATURE 250,11724
X86_FEATURE 251,11768
X86_FEATURE 252,11817
X86_FEATURE 253,11860
X86_FEATURE 254,11903
X86_FEATURE 255,11947
X86_FEATURE 257,12066
X86_FEATURE 258,12142
X86_FEATURE 259,12221
X86_FEATURE 260,12297
X86_FEATURE 261,12356

/usr/include/llvm/TargetParser/X86TargetParser.h,2459
#define LLVM_TARGETPARSER_X86TARGETPARSER_H14,577
enum ProcessorVendors 28,927
  VENDOR_DUMMY,29,962
#define X86_VENDOR(30,978
  VENDOR_OTHER33,1070
enum ProcessorTypes 38,1216
  CPU_TYPE_DUMMY,39,1249
#define X86_CPU_TYPE(40,1267
  CPU_TYPE_MAX43,1361
enum ProcessorSubtypes 48,1507
  CPU_SUBTYPE_DUMMY,49,1543
#define X86_CPU_SUBTYPE(50,1564
  CPU_SUBTYPE_MAX53,1661
enum ProcessorFeatures 58,1815
#define X86_FEATURE(59,1840
  CPU_FEATURE_MAX,61,1939
#define X86_MICROARCH_LEVEL(63,1959
enum CPUKind 67,2091
  CK_None,68,2106
  CK_i386,69,2117
  CK_i486,70,2128
  CK_WinChipC6,71,2139
  CK_WinChip2,72,2155
  CK_C3,73,2170
  CK_i586,74,2179
  CK_Pentium,75,2190
  CK_PentiumMMX,76,2204
  CK_PentiumPro,77,2221
  CK_i686,78,2238
  CK_Pentium2,79,2249
  CK_Pentium3,80,2264
  CK_PentiumM,81,2279
  CK_C3_2,82,2294
  CK_Yonah,83,2305
  CK_Pentium4,84,2317
  CK_Prescott,85,2332
  CK_Nocona,86,2347
  CK_Core2,87,2360
  CK_Penryn,88,2372
  CK_Bonnell,89,2385
  CK_Silvermont,90,2399
  CK_Goldmont,91,2416
  CK_GoldmontPlus,92,2431
  CK_Tremont,93,2450
  CK_Gracemont,94,2464
  CK_Nehalem,95,2480
  CK_Westmere,96,2494
  CK_SandyBridge,97,2509
  CK_IvyBridge,98,2527
  CK_Haswell,99,2543
  CK_Broadwell,100,2557
  CK_SkylakeClient,101,2573
  CK_SkylakeServer,102,2593
  CK_Cascadelake,103,2613
  CK_Cooperlake,104,2631
  CK_Cannonlake,105,2648
  CK_IcelakeClient,106,2665
  CK_Rocketlake,107,2685
  CK_IcelakeServer,108,2702
  CK_Tigerlake,109,2722
  CK_SapphireRapids,110,2738
  CK_Alderlake,111,2759
  CK_Raptorlake,112,2775
  CK_Meteorlake,113,2792
  CK_Arrowlake,114,2809
  CK_ArrowlakeS,115,2825
  CK_Lunarlake,116,2842
  CK_Pantherlake,117,2858
  CK_Sierraforest,118,2876
  CK_Grandridge,119,2895
  CK_Graniterapids,120,2912
  CK_GraniterapidsD,121,2932
  CK_Emeraldrapids,122,2953
  CK_Clearwaterforest,123,2973
  CK_KNL,124,2996
  CK_KNM,125,3006
  CK_Lakemont,126,3016
  CK_K6,127,3031
  CK_K6_2,128,3040
  CK_K6_3,129,3051
  CK_Athlon,130,3062
  CK_AthlonXP,131,3075
  CK_K8,132,3090
  CK_K8SSE3,133,3099
  CK_AMDFAM10,134,3112
  CK_BTVER1,135,3127
  CK_BTVER2,136,3140
  CK_BDVER1,137,3153
  CK_BDVER2,138,3166
  CK_BDVER3,139,3179
  CK_BDVER4,140,3192
  CK_ZNVER1,141,3205
  CK_ZNVER2,142,3218
  CK_ZNVER3,143,3231
  CK_ZNVER4,144,3244
  CK_x86_64,145,3257
  CK_x86_64_v2,146,3270
  CK_x86_64_v3,147,3286
  CK_x86_64_v4,148,3302
  CK_Geode,149,3318

/usr/include/llvm/Testing/ADT/StringMap.h,89
#define LLVM_TESTING_ADT_STRINGMAP_H_10,408
std::ostream &operator<<(operator<<24,795

/usr/include/llvm/Testing/ADT/StringMapEntry.h,786
#define LLVM_TESTING_ADT_STRINGMAPENTRY_H_10,413
std::ostream &operator<<(operator<<33,1063
namespace detail 43,1354
class StringMapEntryMatcherImpl46,1410
  template <typename KeyMatcherT,51,1588
  StringMapEntryMatcherImpl(52,1646
  void DescribeTo(59,1952
  void DescribeNegationTo(66,2149
  MatchAndExplain(74,2376
  const testing::Matcher<const std::string &> KeyMatcher;95,3321
  const testing::Matcher<const ValueT &> ValueMatcher;96,3379
template <typename KeyMatcherT,99,3438
class StringMapEntryMatcher 100,3494
  StringMapEntryMatcher(102,3532
  operator testing::Matcher<StringMapEntryT>(Matcher<StringMapEntryT>106,3689
  const KeyMatcherT KM;112,3887
  const ValueMatcherT VM;113,3911
template <typename KeyMatcherT,120,4107
IsStringMapEntry(122,4221

/usr/include/llvm/Testing/Annotations/Annotations.h,843
#define LLVM_TESTING_SUPPORT_ANNOTATIONS_H9,412
class Annotations 53,2291
  struct Range 57,2435
    friend bool operator!=(operator!=64,2629
  llvm::StringRef code(72,2937
  std::pair<std::pair78,3233
  std::vector<std::vector84,3589
  llvm::StringMap<llvm::StringMap90,3944
  std::pair<std::pair97,4312
  std::vector<std::vector105,4742
  llvm::StringMap<llvm::StringMap110,5038
  std::string Code;113,5115
  struct Annotation 115,5196
    size_t Begin;116,5218
    bool isPoint(118,5257
    llvm::StringRef Name;119,5312
    llvm::StringRef Payload;120,5338
  std::vector<Annotation> All;122,5372
  llvm::StringMap<llvm::StringMap124,5440
  llvm::StringMap<llvm::SmallVector<size_t, 1>> Points;124,5440
  llvm::StringMap<llvm::StringMap125,5496
  llvm::StringMap<llvm::SmallVector<size_t, 1>> Ranges;125,5496

/usr/include/llvm/Testing/Support/Error.h,1460
#define LLVM_TESTING_SUPPORT_ERROR_H10,407
template <typename T> ExpectedHolder<T> TakeExpected(26,763
class ValueMatchesMono31,890
  explicit ValueMatchesMono(34,989
  bool MatchAndExplain(37,1082
  void DescribeTo(52,1519
  void DescribeNegationTo(58,1658
  testing::Matcher<T> Matcher;65,1826
class ValueMatchesPoly 69,1882
  explicit ValueMatchesPoly(71,1915
  operator testing::Matcher<const Matcher<const74,2008
  M Matcher;80,2183
class ErrorMatchesMono 84,2226
  explicit ErrorMatchesMono(86,2315
  bool MatchAndExplain(89,2433
  void DescribeTo(111,2970
  void DescribeNegationTo(119,3162
  std::optional<testing::Matcher<InfoT &>> Matcher;128,3401
class ErrorMessageMatches131,3457
  explicit ErrorMessageMatches(134,3553
  bool MatchAndExplain(138,3683
  void DescribeTo(148,4068
  void DescribeNegationTo(153,4201
  testing::Matcher<std::vector<std::string>> Matcher;159,4362
#define EXPECT_THAT_ERROR(163,4442
#define ASSERT_THAT_ERROR(165,4576
#define EXPECT_THAT_EXPECTED(189,5443
#define ASSERT_THAT_EXPECTED(191,5580
MATCHER(194,5718
MATCHER(195,5767
testing::Matcher<const detail::ErrorHolder &> Failed(198,5841
template <typename InfoT,202,5974
testing::Matcher<const detail::ErrorHolder &> Failed(203,6012
testing::Matcher<const detail::ErrorHolder &> FailedWithMessage(209,6216
testing::Matcher<const detail::ErrorHolder &> FailedWithMessageArray(216,6452
detail::ValueMatchesPoly<M> HasValue(221,6623

/usr/include/llvm/Testing/Support/SupportHelpers.h,1061
#define LLVM_TESTING_SUPPORT_SUPPORTHELPERS_H10,416
struct ErrorHolder 25,782
  std::vector<std::shared_ptr<ErrorInfoBase>> Infos;26,803
  bool Success(28,857
template <typename T> struct ExpectedHolder 31,910
  ExpectedHolder(32,977
  Expected<T> &Exp;Exp35,1079
inline void PrintTo(38,1103
void PrintTo(53,1451
template <class InnerMatcher> class ValueIsMatcher 61,1692
  explicit ValueIsMatcher(63,1753
  operator ::testing::Matcher<const Matcher<const67,1866
  InnerMatcher ValueMatcher;97,2792
detail::ValueIsMatcher<InnerMatcher> ValueIs(104,3015
namespace unittest 107,3159
class TempDir 113,3351
  SmallString<128> Path;114,3367
  explicit TempDir(122,3630
  ~TempDir(140,4142
  StringRef path(153,4467
  const char *c_str(c_str156,4567
  SmallString<128> path(160,4742
class TempLink 173,5188
  SmallString<128> Path;174,5205
  TempLink(178,5301
  ~TempLink(185,5484
  StringRef path(198,5791
class TempFile 203,5932
  SmallString<128> Path;204,5949
  TempFile(213,6240
  ~TempFile(235,6845
  StringRef path(248,7152

/usr/include/llvm/TextAPI/Architecture.h,138
#define LLVM_TEXTAPI_ARCHITECTURE_H14,546
enum Architecture 27,790
#define ARCHINFO(28,820
#undef ARCHINFO30,919
  AK_unknown,31,935

/usr/include/llvm/TextAPI/Platform.h,39
#define LLVM_TEXTAPI_PLATFORM_H13,544

/usr/include/llvm/TextAPI/Target.h,405
#define LLVM_TEXTAPI_TARGET_H10,400
class Target 28,925
  Target(31,970
  explicit Target(34,1135
  Architecture Arch;42,1410
  PlatformType Platform;43,1431
  VersionTuple MinDeployment;44,1456
inline bool operator==(operator==47,1490
inline bool operator!=(operator!=52,1703
inline bool operator<(56,1793
inline bool operator==(operator==61,2004
inline bool operator!=(operator!=65,2102

/usr/include/llvm/TextAPI/ArchitectureSet.h,1220
#define LLVM_TEXTAPI_ARCHITECTURESET_H14,529
class ArchitectureSet 29,775
  ArchSetType ArchSet{ArchSet35,929
  constexpr ArchitectureSet(39,1005
  ArchitectureSet(40,1068
  static ArchitectureSet All(43,1200
  void set(45,1273
  ArchitectureSet clear(51,1397
  bool has(56,1515
  bool contains(60,1611
  bool empty(66,1743
  ArchSetType rawValue(68,1790
  bool hasX86(70,1842
  template <typename Ty> class arch_iterator 74,1933
    ArchSetType Index;83,2207
    Ty *ArchSet;ArchSet84,2230
    void findNextSetBit(86,2248
    arch_iterator(98,2475
    Architecture operator*(104,2669
    arch_iterator &operator++(operator++106,2750
    arch_iterator operator++(111,2835
    bool operator==(operator==117,2944
    bool operator!=(operator!=121,3074
  ArchitectureSet operator&(124,3156
  ArchitectureSet operator|(128,3251
  ArchitectureSet &operator|=(operator|=132,3346
  ArchitectureSet &operator|=(operator|=137,3453
  bool operator==(operator==142,3549
  bool operator!=(operator!=146,3639
  bool operator<(150,3729
  iterator begin(155,3918
  iterator end(156,3960
  const_iterator begin(158,4014
  const_iterator end(159,4068
inline ArchitectureSet operator|(166,4253

/usr/include/llvm/TextAPI/DylibReader.h,69
#define LLVM_TEXTAPI_DYLIBREADER_H14,540
struct ParseOption 23,767

/usr/include/llvm/TextAPI/InterfaceFile.h,4322
#define LLVM_TEXTAPI_INTERFACEFILE_H15,645
enum class ObjCConstraintType 33,1149
  None 35,1213
  Retain_Release 38,1248
  Retain_Release_For_Simulator 41,1307
  Retain_Release_Or_GC 44,1388
  GC 47,1443
enum FileType 53,1526
  Invalid 55,1578
  MachO_DynamicLibrary 58,1636
  MachO_DynamicLibrary_Stub 61,1723
  MachO_Bundle 64,1796
  TBD_V1 67,1883
  TBD_V2 70,1970
  TBD_V3 73,2057
  TBD_V4 76,2144
  TBD_V5 79,2231
  All 81,2272
  LLVM_MARK_AS_BITMASK_ENUM(83,2308
  LLVM_MARK_AS_BITMASK_ENUM(/*LargestValue=*/All)All83,2308
class InterfaceFileRef 89,2419
  InterfaceFileRef(93,2485
  InterfaceFileRef(95,2558
  StringRef getInstallName(98,2692
  template <typename RangeT> void addTargets(101,2793
  bool hasTarget(106,2935
  using const_target_iterator 110,3025
  using const_target_range 111,3085
  const_target_range targets(112,3159
  ArchitectureSet getArchitectures(114,3219
  PlatformSet getPlatforms(118,3311
  bool operator==(operator==120,3385
  bool operator!=(operator!=124,3524
  bool operator<(128,3663
  std::string InstallName;133,3809
  TargetList Targets;134,3836
namespace MachO 139,3889
class InterfaceFile 142,3940
  InterfaceFile(144,3970
  InterfaceFile(147,4077
  void setPath(151,4267
  StringRef getPath(156,4460
  void setFileType(164,4686
  FileType getFileType(169,4802
  ArchitectureSet getArchitectures(174,4934
  PlatformSet getPlatforms(181,5097
  bool hasTarget(191,5386
  template <typename RangeT> void addTargets(200,5633
  const_target_range targets(207,5911
  void setInstallName(217,6339
  StringRef getInstallName(222,6480
  void setCurrentVersion(225,6586
  PackedVersion getCurrentVersion(228,6711
  void setCompatibilityVersion(231,6833
  PackedVersion getCompatibilityVersion(236,6982
  void setSwiftABIVersion(239,7112
  uint8_t getSwiftABIVersion(242,7235
  void setTwoLevelNamespace(245,7376
  bool isTwoLevelNamespace(248,7502
  void setOSLibNotForSharedCache(251,7647
  bool isOSLibNotForSharedCache(256,7815
  void setApplicationExtensionSafe(259,7962
  bool isApplicationExtensionSafe(262,8099
  bool hasSimulatorSupport(265,8223
  void setSimulatorSupport(268,8337
  void setObjCConstraint(271,8441
  ObjCConstraintType getObjCConstraint(276,8575
  const std::vector<std::vector287,9004
  const std::vector<std::pair<Target, std::string>> &umbrellas(umbrellas287,9004
  const std::vector<InterfaceFileRef> &allowableClients(allowableClients306,9758
  const std::vector<InterfaceFileRef> &reexportedLibraries(reexportedLibraries319,10203
  InterfaceFile *getParent(getParent329,10578
  const std::vector<std::shared_ptr<InterfaceFile>> &documents(documents334,10736
  const std::vector<std::vector346,11150
  const std::vector<std::pair<Target, std::string>> &rpaths(rpaths346,11150
  std::optional<const Symbol *> getSymbol(354,11383
  template <typename RangeT,362,11678
  void addSymbol(375,12276
  void addSymbol(386,12715
  size_t symbolsCount(393,12980
  const_symbol_range symbols(398,13181
  const_filtered_symbol_range exports(399,13253
  const_filtered_symbol_range reexports(400,13334
  const_filtered_symbol_range undefineds(403,13425
  bool operator!=(operator!=444,14981
  llvm::BumpPtrAllocator Allocator;447,15065
  StringRef copyString(448,15101
  TargetList Targets;457,15366
  std::string Path;458,15388
  FileType FileKind{FileKind459,15408
  std::string InstallName;460,15448
  PackedVersion CurrentVersion;461,15475
  PackedVersion CompatibilityVersion;462,15507
  uint8_t SwiftABIVersion{SwiftABIVersion463,15545
  bool IsTwoLevelNamespace{IsTwoLevelNamespace464,15575
  bool IsOSLibNotForSharedCache{IsOSLibNotForSharedCache465,15610
  bool IsAppExtensionSafe{IsAppExtensionSafe466,15650
  bool HasSimSupport{HasSimSupport467,15684
  std::vector<std::vector469,15777
  std::vector<std::pair<Target, std::string>> ParentUmbrellas;469,15777
  std::vector<InterfaceFileRef> AllowableClients;470,15840
  std::vector<InterfaceFileRef> ReexportedLibraries;471,15890
  std::vector<std::shared_ptr<InterfaceFile>> Documents;472,15943
  std::vector<std::vector473,16000
  std::vector<std::pair<Target, std::string>> RPaths;473,16000
  std::unique_ptr<SymbolSet> SymbolsSet;474,16054
typename C::iterator addEntry(480,16232

/usr/include/llvm/TextAPI/PackedVersion.h,539
#define LLVM_TEXTAPI_PACKEDVERSION_H14,539
class PackedVersion 27,746
  uint32_t Version{Version28,768
  constexpr PackedVersion(32,839
  PackedVersion(33,911
  PackedVersion(36,1057
  bool empty(45,1320
  unsigned getMajor(48,1408
  unsigned getMinor(51,1517
  unsigned getSubminor(54,1637
  bool parse32(56,1696
  std::pair<std::pair57,1727
  bool operator<(59,1776
  bool operator==(operator==61,1856
  bool operator!=(operator!=63,1938
  uint32_t rawValue(65,2020
inline raw_ostream &operator<<(operator<<72,2143

/usr/include/llvm/TextAPI/Record.h,1558
#define LLVM_TEXTAPI_RECORD_H15,544
enum class RecordLinkage 31,861
  Unknown 33,920
  Internal 36,982
  Undefined 39,1066
  Rexported 42,1151
  Exported 45,1192
class Record 50,1300
  Record(53,1345
  bool isWeakDefined(56,1488
  bool isWeakReferenced(60,1599
  bool isThreadLocalValue(64,1719
  bool isData(69,1856
  bool isText(73,1946
  bool isInternal(77,2036
  bool isUndefined(78,2109
  bool isExported(79,2184
  bool isRexported(80,2258
  StringRef getName(82,2334
  SymbolFlags getFlags(83,2379
  StringRef Name;89,2518
  RecordLinkage Linkage;90,2536
  SymbolFlags Flags;91,2561
class GlobalRecord 97,2692
  enum class Kind 99,2737
    Unknown 100,2767
    Variable 101,2784
    Function 102,2802
  GlobalRecord(105,2826
      : Record({Name, Linkage, Flags}), GV(107,2923
  bool isFunction(109,2974
  bool isVariable(110,3033
  void setKind(111,3092
  Kind GV;117,3181
class ObjCIVarRecord 121,3245
  ObjCIVarRecord(123,3292
  static std::string createScopedName(126,3403
template <typename V,131,3533
template <typename V, typename K 131,3533
class ObjCContainerRecord 138,3860
  ObjCContainerRecord(140,3912
  RecordMap<ObjCIVarRecord> IVars;148,4216
class ObjCCategoryRecord 153,4372
  ObjCCategoryRecord(155,4436
  StringRef ClassToExtend;160,4607
class ObjCInterfaceRecord 164,4687
  ObjCInterfaceRecord(166,4752
  bool hasExceptionAttribute(170,4928
  bool HasEHType;175,5112
  llvm::MapVector<llvm::MapVector177,5194
  llvm::MapVector<StringRef, ObjCCategoryRecord *> Categories;177,5194

/usr/include/llvm/TextAPI/RecordVisitor.h,348
#define LLVM_TEXTAPI_RECORDVISITOR_H14,533
class RecordVisitor 23,744
  virtual ~RecordVisitor(25,774
  virtual void visitObjCInterface(28,857
  virtual void visitObjCCategory(29,921
class SymbolConverter 35,1146
  SymbolConverter(37,1201
  SymbolSet *Symbols;Symbols46,1637
  const Target Targ;47,1659
  const bool RecordUndefs;48,1680

/usr/include/llvm/TextAPI/RecordsSlice.h,1147
#define LLVM_TEXTAPI_RECORDSLICE_H15,559
class RecordsSlice 28,911
  RecordsSlice(30,940
  const llvm::Triple &getTriple(getTriple32,1039
  const Target &getTarget(getTarget34,1137
  bool hasBinaryAttrs(128,5070
  bool empty(131,5168
  struct BinaryAttrs 139,5382
    std::vector<StringRef> AllowableClients;140,5405
    std::vector<StringRef> RexportedLibraries;141,5450
    std::vector<StringRef> RPaths;142,5497
    StringRef ParentUmbrella;143,5532
    StringRef InstallName;144,5562
    StringRef UUID;145,5589
    StringRef Path;146,5609
    llvm::MachO::PackedVersion CurrentVersion;148,5668
    llvm::MachO::PackedVersion CompatVersion;149,5715
  const llvm::Triple TargetTriple;164,6131
  const Target TAPITarget;166,6225
  llvm::BumpPtrAllocator StringAllocator;169,6311
  void updateLinkage(176,6554
  void updateFlags(184,6781
  RecordMap<GlobalRecord> Globals;186,6851
  RecordMap<ObjCInterfaceRecord> Classes;187,6886
  RecordMap<RecordMap188,6928
  RecordMap<ObjCCategoryRecord, std::pair<StringRef, StringRef>> Categories;188,6928
  std::unique_ptr<BinaryAttrs> BA{BA190,7006
using Records 193,7054

/usr/include/llvm/TextAPI/Symbol.h,1809
#define LLVM_TEXTAPI_SYMBOL_H10,400
enum class SymbolFlags 24,686
  None 26,736
  ThreadLocalValue 29,793
  WeakDefined 32,850
  WeakReferenced 35,910
  Undefined 38,957
  Rexported 41,1004
  Data 44,1056
  Text 47,1106
  LLVM_MARK_AS_BITMASK_ENUM(49,1139
  LLVM_MARK_AS_BITMASK_ENUM(/*LargestValue=*/Text)Text49,1139
enum class SymbolKind 54,1215
  GlobalSymbol,55,1249
  ObjectiveCClass,56,1265
  ObjectiveCClassEHType,57,1284
  ObjectiveCInstanceVariable,58,1309
constexpr StringLiteral ObjC1ClassNamePrefix 61,1343
constexpr StringLiteral ObjC2ClassNamePrefix 62,1411
constexpr StringLiteral ObjC2MetaClassNamePrefix 63,1476
constexpr StringLiteral ObjC2EHTypePrefix 64,1549
constexpr StringLiteral ObjC2IVarPrefix 65,1612
using TargetList 67,1672
typename C::iterator addEntry(71,1804
class Symbol 82,2114
  Symbol(84,2137
  void addTarget(87,2296
  SymbolKind getKind(88,2369
  StringRef getName(89,2415
  ArchitectureSet getArchitectures(90,2460
  SymbolFlags getFlags(93,2551
  bool isWeakDefined(95,2601
  bool isWeakReferenced(99,2712
  bool isThreadLocalValue(103,2832
  bool isUndefined(108,2969
  bool isReexported(112,3074
  bool isData(116,3180
  bool isText(120,3270
  bool hasArchitecture(124,3360
  bool hasTarget(128,3472
  using const_target_iterator 132,3568
  using const_target_range 133,3628
  const_target_range targets(134,3702
  using const_filtered_target_iterator 136,3762
  using const_filtered_target_range 139,3920
  void dump(145,4181
  bool operator!=(operator!=150,4276
  bool operator<(152,4344
  StringRef Name;157,4460
  TargetList Targets;158,4478
  SymbolKind Kind;159,4500
  SymbolFlags Flags;160,4519
struct SimpleSymbol 164,4606
  StringRef Name;165,4628
  SymbolKind Kind;166,4646
  bool operator<(168,4666

/usr/include/llvm/TextAPI/SymbolSet.h,1264
#define LLVM_TEXTAPI_SYMBOLSET_H10,402
struct SymbolsMapKey 25,786
  MachO::SymbolKind Kind;26,809
  StringRef Name;27,835
  SymbolsMapKey(29,854
template <> struct DenseMapInfo<DenseMapInfo32,947
  static inline SymbolsMapKey getEmptyKey(33,996
  static inline SymbolsMapKey getTombstoneKey(37,1119
  static unsigned getHashValue(42,1285
  static bool isEqual(46,1418
template <typename DerivedT,51,1575
template <typename DerivedT, typename KeyInfoT,51,1575
bool operator==(operator==52,1641
template <typename DerivedT,66,2125
template <typename DerivedT, typename KeyInfoT,66,2125
bool operator!=(operator!=67,2191
namespace MachO 74,2494
class SymbolSet 76,2513
  llvm::BumpPtrAllocator Allocator;78,2540
  StringRef copyString(79,2576
  SymbolsMapType Symbols;88,2906
  size_t size(96,3152
  template <typename RangeT,98,3202
  struct const_symbol_iterator112,3796
    const_symbol_iterator(120,4110
    reference operator*(123,4202
    pointer operator->(124,4256
  const_symbol_range symbols(136,4661
  const_filtered_symbol_range exports(141,4809
  const_filtered_symbol_range reexports(151,5176
  const_filtered_symbol_range undefineds(161,5530
  bool operator!=(operator!=172,5869
  void *allocate(allocate174,5950

/usr/include/llvm/TextAPI/TextAPIError.h,372
#define LLVM_TEXTAPI_TEXTAPIERROR_H15,550
enum class TextAPIErrorCode 20,644
  NoSuchArchitecture,21,674
  EmptyResults,22,696
  GenericFrontendError,23,712
  InvalidInputFormat,24,736
  UnsupportedTarget25,758
class TextAPIError 28,782
  static char ID;30,850
  TextAPIErrorCode EC;31,868
  std::string Msg;32,891
  TextAPIError(34,911
  TextAPIError(35,959

/usr/include/llvm/TextAPI/TextAPIReader.h,636
#define LLVM_TEXTAPI_TEXTAPIREADER_H10,407
public:public24,609
  static 32,990
  static Expected<Expected32,990
  static Expected<FileType>FileType32,990
  static Expected<FileType> canRead(32,990
  static Expected<FileType> canRead(MemoryBufferRef 32,990
  static Expected<FileType> canRead(MemoryBufferRef InputBuffer)32,990
  static 38,1208
  static Expected<Expected38,1208
  static Expected<std::unique_ptr<std::unique_ptr38,1208
  static Expected<std::unique_ptr<InterfaceFile>InterfaceFile38,1208
  get(39,1258
  get(MemoryBufferRef 39,1258
  get(MemoryBufferRef InputBuffer)39,1258
  TextAPIReader(41,1295

/usr/include/llvm/TextAPI/TextAPIWriter.h,150
#define LLVM_TEXTAPI_TEXTAPIWRITER_H10,407
class TextAPIWriter 22,591
  static Error writeToStream(33,969
  static FileType parseFileType(40,1274

/usr/include/llvm/TextAPI/Utils.h,91
#define LLVM_TEXTAPI_UTILS_H14,546
#define PATH_MAX 21,696
namespace llvm::MachO 24,726

/usr/include/llvm/ToolDrivers/llvm-dlltool/DlltoolDriver.h,61
#define LLVM_TOOLDRIVERS_LLVM_DLLTOOL_DLLTOOLDRIVER_H15,596

/usr/include/llvm/ToolDrivers/llvm-lib/LibDriver.h,53
#define LLVM_TOOLDRIVERS_LLVM_LIB_LIBDRIVER_H15,634

/usr/include/llvm/Transforms/AggressiveInstCombine/AggressiveInstCombine.h,148
#define LLVM_TRANSFORMS_AGGRESSIVEINSTCOMBINE_AGGRESSIVEINSTCOMBINE_H16,688
class AggressiveInstCombinePass22,811
  PreservedAnalyses run(25,907

/usr/include/llvm/Transforms/Coroutines/CoroCleanup.h,152
#define LLVM_TRANSFORMS_COROUTINES_COROCLEANUP_H15,592
struct CoroCleanupPass 23,709
  PreservedAnalyses run(24,767
  static bool isRequired(25,831

/usr/include/llvm/Transforms/Coroutines/CoroConditionalWrapper.h,264
#define LLVM_TRANSFORMS_COROUTINES_COROCONDITIONALWRAPPER_H10,430
struct CoroConditionalWrapper 20,672
  CoroConditionalWrapper(21,744
  PreservedAnalyses run(22,792
  static bool isRequired(23,855
  void printPipeline(24,899
  ModulePassManager PM;28,1027

/usr/include/llvm/Transforms/Coroutines/CoroEarly.h,149
#define LLVM_TRANSFORMS_COROUTINES_COROEARLY_H18,794
struct CoroEarlyPass 26,909
  PreservedAnalyses run(27,963
  static bool isRequired(28,1026

/usr/include/llvm/Transforms/Coroutines/CoroElide.h,148
#define LLVM_TRANSFORMS_COROUTINES_COROELIDE_H17,720
struct CoroElidePass 25,837
  PreservedAnalyses run(26,891
  static bool isRequired(27,958

/usr/include/llvm/Transforms/Coroutines/CoroSplit.h,246
#define LLVM_TRANSFORMS_COROUTINES_COROSPLIT_H16,663
struct CoroSplitPass 24,848
  const std::function<bool(Instruction &)> MaterializableCallback;25,902
  CoroSplitPass(28,1015
  static bool isRequired(35,1371
  bool OptimizeFrame;38,1471

/usr/include/llvm/Transforms/IPO/AlwaysInliner.h,211
#define LLVM_TRANSFORMS_IPO_ALWAYSINLINER_H15,572
class AlwaysInlinerPass 32,1177
  bool InsertLifetime;33,1245
  AlwaysInlinerPass(36,1277
  PreservedAnalyses run(39,1368
  static bool isRequired(40,1429

/usr/include/llvm/Transforms/IPO/Annotation2Metadata.h,128
#define LLVM_TRANSFORMS_IPO_ANNOTATION2METADATA_H15,596
struct Annotation2MetadataPass 24,784
  PreservedAnalyses run(25,865

/usr/include/llvm/Transforms/IPO/ArgumentPromotion.h,187
#define LLVM_TRANSFORMS_IPO_ARGUMENTPROMOTION_H10,418
class ArgumentPromotionPass 23,817
  unsigned MaxElements;24,893
  ArgumentPromotionPass(27,926
  PreservedAnalyses run(29,1008

/usr/include/llvm/Transforms/IPO/CalledValuePropagation.h,135
#define LLVM_TRANSFORMS_IPO_CALLEDVALUEPROPAGATION_H20,1021
class CalledValuePropagationPass26,1127
  PreservedAnalyses run(29,1225

/usr/include/llvm/Transforms/IPO/ConstantMerge.h,117
#define LLVM_TRANSFORMS_IPO_CONSTANTMERGE_H20,944
class ConstantMergePass 29,1130
  PreservedAnalyses run(31,1206

/usr/include/llvm/Transforms/IPO/CrossDSOCFI.h,111
#define LLVM_TRANSFORMS_IPO_CROSSDSOCFI_H15,652
class CrossDSOCFIPass 20,746
  PreservedAnalyses run(22,818

/usr/include/llvm/Transforms/IPO/DeadArgumentElimination.h,607
#define LLVM_TRANSFORMS_IPO_DEADARGUMENTELIMINATION_H20,956
class DeadArgumentEliminationPass38,1324
  struct RetOrArg 44,1592
    const Function *F;F45,1612
    unsigned Idx;46,1635
    bool IsArg;47,1653
    RetOrArg(49,1670
    bool operator==(operator==58,2030
    std::string getDescription(62,2143
  enum Liveness 73,2651
  enum Liveness { Live,73,2651
  enum Liveness { Live, MaybeLive 73,2651
  DeadArgumentEliminationPass(75,2689
  RetOrArg createRet(81,2894
  RetOrArg createArg(86,3017
  UseMap Uses;106,3869
  LiveSet LiveValues;112,4047
  LiveFuncSet LiveFunctions;115,4144

/usr/include/llvm/Transforms/IPO/ElimAvailExtern.h,131
#define LLVM_TRANSFORMS_IPO_ELIMAVAILEXTERN_H15,637
class EliminateAvailableExternallyPass24,825
  PreservedAnalyses run(27,935

/usr/include/llvm/Transforms/IPO/ExtractGV.h,228
#define LLVM_TRANSFORMS_IPO_EXTRACTGV_H10,410
class ExtractGVPass 17,535
  SetVector<GlobalValue *> Named;19,604
  bool deleteStuff;20,638
  bool keepConstInit;21,658
  ExtractGVPass(24,689
  PreservedAnalyses run(26,804

/usr/include/llvm/Transforms/IPO/ForceFunctionAttrs.h,126
#define LLVM_TRANSFORMS_IPO_FORCEFUNCTIONATTRS_H14,628
struct ForceFunctionAttrsPass 23,843
  PreservedAnalyses run(24,915

/usr/include/llvm/Transforms/IPO/FunctionAttrs.h,213
#define LLVM_TRANSFORMS_IPO_FUNCTIONATTRS_H16,604
struct PostOrderFunctionAttrsPass 49,1913
  PostOrderFunctionAttrsPass(50,1993
  bool SkipNonRecursive;59,2368
class ReversePostOrderFunctionAttrsPass72,2988

/usr/include/llvm/Transforms/IPO/GlobalDCE.h,830
#define LLVM_TRANSFORMS_IPO_GLOBALDCE_H18,851
class GlobalDCEPass 36,1224
  GlobalDCEPass(38,1292
  PreservedAnalyses run(40,1371
  void printPipeline(42,1433
  SmallPtrSet<GlobalValue*GlobalValue48,1592
  SmallPtrSet<GlobalValue*, 32> AliveGlobals;48,1592
  DenseMap<GlobalValue GlobalValue51,1685
  DenseMap<GlobalValue *, SmallPtrSet<GlobalValue GlobalValue51,1685
  DenseMap<GlobalValue *, SmallPtrSet<GlobalValue *, 4>> GVDependencies;51,1685
  std::unordered_map<std::unordered_map54,1813
      ConstantDependenciesCache;55,1877
  std::unordered_multimap<std::unordered_multimap58,1959
  std::unordered_multimap<Comdat *, GlobalValue *> ComdatMembers;58,1959
  DenseMap<DenseMap61,2080
      TypeIdMap;62,2155
  SmallPtrSet<SmallPtrSet66,2310
  SmallPtrSet<GlobalValue *, 32> VFESafeVTables;66,2310

/usr/include/llvm/Transforms/IPO/GlobalOpt.h,107
#define LLVM_TRANSFORMS_IPO_GLOBALOPT_H16,688
class GlobalOptPass 25,854
  PreservedAnalyses run(27,922

/usr/include/llvm/Transforms/IPO/GlobalSplit.h,112
#define LLVM_TRANSFORMS_IPO_GLOBALSPLIT_H17,798
class GlobalSplitPass 26,955
  PreservedAnalyses run(28,1027

/usr/include/llvm/Transforms/IPO/IROutliner.h,2225
#define LLVM_TRANSFORMS_IPO_IROUTLINER_H42,1422
struct OutlinableRegion 63,2133
  DenseMap<unsigned,unsigned85,3191
  DenseMap<unsigned, unsigned> ExtractedArgToAgg;85,3191
  DenseMap<unsigned,unsigned86,3241
  DenseMap<unsigned, unsigned> AggArgToExtracted;86,3241
  DenseMap<Value Value93,3639
  DenseMap<Value *, Value *> RemappedArguments;93,3639
  DenseMap<Value Value106,4156
  DenseMap<Value *, BasicBlock *> PHIBlocks;106,4156
  DenseMap<unsigned,unsigned112,4487
  DenseMap<unsigned, Constant *> AggArgToConstant;112,4487
  SmallVector<unsigned,unsigned117,4763
  SmallVector<unsigned, 4> GVNStores;117,4763
  OutlinableRegion(153,6001
  void splitCandidate(161,6317
  void reattachCandidate(167,6604
  Value *findCorrespondingValueIn(findCorrespondingValueIn175,6952
  BasicBlock *findCorrespondingBlockIn(findCorrespondingBlockIn183,7365
  InstructionCost getBenefit(190,7670
class IROutliner 199,8174
  IROutliner(201,8201
  bool OutlineFromLinkODRs 317,13528
  bool CostModel 322,13772
  DenseSet<unsigned> Outlined;326,13929
  function_ref<TargetTransformInfo &(Function &)> getTTI;329,14027
  DenseMap<DenseMap334,14290
  DenseMap<Value *, Value *> OutputMappings;334,14290
  function_ref<IRSimilarityIdentifier &(Module &)> getIRSI;337,14408
  function_ref<OptimizationRemarkEmitter &(Function &)> getORE;340,14521
  SpecificBumpPtrAllocator<CodeExtractor> ExtractorAllocator;343,14650
  SpecificBumpPtrAllocator<OutlinableRegion> RegionAllocator;346,14780
  SpecificBumpPtrAllocator<IRInstructionData> InstDataAllocator;349,14910
  struct InstructionAllowed 354,15214
    bool visitBranchInst(357,15328
    bool visitPHINode(358,15396
    bool visitAllocaInst(360,15487
    bool visitVAArgInst(364,15743
    bool visitLandingPadInst(367,15891
    bool visitFuncletPadInst(368,15959
    bool visitDbgInfoIntrinsic(372,16187
    bool IntrinsicInst(375,16350
    bool visitCallInst(378,16547
    bool visitFreezeInst(414,18278
    bool visitInvokeInst(416,18417
    bool visitCallBrInst(418,18556
    bool visitTerminator(420,18659
    bool visitInstruction(421,18718
  InstructionAllowed InstructionClassifier;440,19392
class IROutlinerPass 444,19477

/usr/include/llvm/Transforms/IPO/InferFunctionAttrs.h,126
#define LLVM_TRANSFORMS_IPO_INFERFUNCTIONATTRS_H16,643
struct InferFunctionAttrsPass 25,875
  PreservedAnalyses run(26,947

/usr/include/llvm/Transforms/IPO/Inliner.h,787
#define LLVM_TRANSFORMS_IPO_INLINER_H10,408
class InlinerPass 35,1569
  InlinerPass(37,1633
  PreservedAnalyses run(42,1850
  void printPipeline(45,1991
  InlineAdvisor &getAdvisor(getAdvisor49,2119
  std::unique_ptr<InlineAdvisor> OwnedAdvisor;51,2269
  const bool OnlyMandatory;52,2316
  const ThinOrFullLTOPhase LTOPhase;53,2344
class ModuleInlinerWrapperPass61,2747
  CGSCCPassManager &getPM(getPM75,3350
  template <class T> void addModulePass(78,3453
  template <class T> void addLateModulePass(83,3600
  const InlineParams Params;91,3828
  const InlineContext IC;92,3857
  const InliningAdvisorMode Mode;93,3883
  const unsigned MaxDevirtIterations;94,3917
  CGSCCPassManager PM;96,4019
  ModulePassManager MPM;97,4042
  ModulePassManager AfterCGMPM;98,4067

/usr/include/llvm/Transforms/IPO/Internalize.h,276
#define LLVM_TRANSFORMS_IPO_INTERNALIZE_H22,1004
class InternalizePass 34,1331
  struct ComdatInfo 35,1395
  const std::function<bool(const GlobalValue &)> MustPreserveGV;46,1749
  StringSet<> AlwaysPreserved;48,1892
  InternalizePass(63,2563
internalizeModule(75,2977

/usr/include/llvm/Transforms/IPO/LoopExtractor.h,203
#define LLVM_TRANSFORMS_IPO_LOOPEXTRACTOR_H17,757
struct LoopExtractorPass 23,854
  LoopExtractorPass(24,923
  PreservedAnalyses run(25,991
  void printPipeline(26,1054
  unsigned NumLoops;30,1182

/usr/include/llvm/Transforms/IPO/LowerTypeTests.h,1074
#define LLVM_TRANSFORMS_IPO_LOWERTYPETESTS_H15,612
struct BitSetInfo 33,921
  std::set<uint64_t> Bits;35,989
  uint64_t ByteOffset;38,1090
  uint64_t BitSize;41,1151
  unsigned AlignLog2;46,1350
  bool isSingleOffset(48,1373
  bool isAllOnes(52,1439
struct BitSetBuilder 61,1600
  SmallVector<SmallVector62,1623
  SmallVector<uint64_t, 16> Offsets;62,1623
  uint64_t Min 63,1660
  uint64_t Max 64,1715
  void addOffset(68,1766
struct GlobalLayoutBuilder 126,4399
  std::vector<std::vector<uint64_t>> Fragments;129,4570
  std::vector<uint64_t> FragmentMap;132,4670
  GlobalLayoutBuilder(134,4708
struct ByteArrayBuilder 174,6385
  std::vector<uint8_t> Bytes;176,6446
  enum { BitsPerByte 178,6477
  uint64_t BitAllocs[BitAllocs181,6571
  ByteArrayBuilder(183,6607
class LowerTypeTestsPass 200,7275
  bool UseCommandLine 201,7345
  ModuleSummaryIndex *ExportSummary ExportSummary203,7377
  const ModuleSummaryIndex *ImportSummary ImportSummary204,7424
  bool DropTypeTests 205,7477
  LowerTypeTestsPass(208,7515
  LowerTypeTestsPass(209,7564

/usr/include/llvm/Transforms/IPO/MergeFunctions.h,117
#define LLVM_TRANSFORMS_IPO_MERGEFUNCTIONS_H16,693
class MergeFunctionsPass 25,837
  PreservedAnalyses run(27,915

/usr/include/llvm/Transforms/IPO/ModuleInliner.h,373
#define LLVM_TRANSFORMS_IPO_MODULEINLINER_H10,414
class ModuleInlinerPass 27,1157
  ModuleInlinerPass(29,1233
  PreservedAnalyses run(35,1562
  InlineAdvisor &getAdvisor(getAdvisor38,1632
  std::unique_ptr<InlineAdvisor> OwnedAdvisor;40,1764
  const InlineParams Params;41,1811
  const InliningAdvisorMode Mode;42,1840
  const ThinOrFullLTOPhase LTOPhase;43,1874

/usr/include/llvm/Transforms/IPO/PartialInlining.h,118
#define LLVM_TRANSFORMS_IPO_PARTIALINLINING_H15,625
class PartialInlinerPass 24,788
  PreservedAnalyses run(26,866

/usr/include/llvm/Transforms/IPO/SCCP.h,292
#define LLVM_TRANSFORMS_IPO_SCCP_H21,859
struct IPSCCPOptions 35,1300
  bool AllowFuncSpec;36,1323
  IPSCCPOptions(38,1346
  IPSCCPOptions &setFuncSpec(setFuncSpec41,1479
class IPSCCPPass 48,1639
  IPSCCPOptions Options;49,1693
  IPSCCPPass(54,1754
  bool isFuncSpecEnabled(58,1877

/usr/include/llvm/Transforms/IPO/StripDeadPrototypes.h,129
#define LLVM_TRANSFORMS_IPO_STRIPDEADPROTOTYPES_H17,770
struct StripDeadPrototypesPass 26,937
  PreservedAnalyses run(27,1011

/usr/include/llvm/Transforms/IPO/StripSymbols.h,333
#define LLVM_TRANSFORMS_IPO_STRIPSYMBOLS_H23,934
struct StripSymbolsPass 29,1030
  PreservedAnalyses run(30,1090
struct StripNonDebugSymbolsPass 33,1157
  PreservedAnalyses run(34,1233
struct StripDebugDeclarePass 37,1300
  PreservedAnalyses run(38,1370
struct StripDeadDebugInfoPass 41,1437
  PreservedAnalyses run(42,1509

/usr/include/llvm/Transforms/IPO/SyntheticCountsPropagation.h,136
#define LLVM_TRANSFORMS_IPO_SYNTHETICCOUNTSPROPAGATION_H10,427
class SyntheticCountsPropagation17,551
  PreservedAnalyses run(20,649

/usr/include/llvm/Transforms/IPO/ThinLTOBitcodeWriter.h,275
#define LLVM_TRANSFORMS_IPO_THINLTOBITCODEWRITER_H17,786
class ThinLTOBitcodeWriterPass25,923
  raw_ostream &OS;OS27,1009
  raw_ostream *ThinLinkOS;ThinLinkOS28,1028
  ThinLTOBitcodeWriterPass(33,1158
  PreservedAnalyses run(36,1270
  static bool isRequired(38,1334

/usr/include/llvm/Transforms/IPO/Attributor.h,44579
#define LLVM_TRANSFORMS_IPO_ATTRIBUTOR_H98,6022
enum class GPUAddressSpace 165,7970
  Generic 166,8010
  Global 167,8025
  Shared 168,8039
  Constant 169,8053
  Local 170,8069
enum ValueScope 179,8373
  Intraprocedural 180,8401
  Interprocedural 181,8424
  AnyScope 182,8447
struct ValueAndContext 185,8499
  using Base 186,8573
  ValueAndContext(187,8629
  ValueAndContext(188,8675
  ValueAndContext(189,8748
  Value *getValue(getValue191,8823
  const Instruction *getCtxI(getCtxI192,8873
struct RangeTy 236,10933
  int64_t Offset 237,10950
  int64_t Size 238,10981
  RangeTy(240,11011
  static RangeTy getUnknown(242,11106
  bool offsetOrSizeAreUnknown(245,11224
  bool offsetAndSizeAreUnknown(251,11433
  bool isUnassigned(256,11603
  bool mayOverlap(264,11902
  RangeTy &operator&=(operator&=274,12268
  inline static bool OffsetLessThan(299,13013
  static constexpr int64_t Unassigned 309,13470
  static constexpr int64_t Unknown 310,13547
inline raw_ostream &operator<<(operator<<313,13625
inline bool operator==(operator==318,13759
inline bool operator!=(operator!=322,13874
struct DenseMapInfo<DenseMapInfo406,18421
  using Base 408,18517
  static inline AA::ValueAndContext getEmptyKey(409,18573
  static inline AA::ValueAndContext getTombstoneKey(412,18661
  static unsigned getHashValue(415,18757
  static bool isEqual(419,18863
struct DenseMapInfo<DenseMapInfo426,19029
  using Base 427,19104
  static inline AA::ValueScope getEmptyKey(428,19148
  static inline AA::ValueScope getTombstoneKey(431,19247
  static unsigned getHashValue(434,19354
  static bool isEqual(438,19451
struct DenseMapInfo<DenseMapInfo444,19585
  using super 446,19673
  static inline const AA::InstExclusionSetTy *getEmptyKey(getEmptyKey447,19711
  static inline const AA::InstExclusionSetTy *getTombstoneKey(getTombstoneKey450,19855
  static unsigned getHashValue(454,20016
  static bool isEqual(461,20235
enum class ChangeStatus 483,20903
  CHANGED,484,20929
  UNCHANGED,485,20940
enum class DepClassTy 493,21188
  REQUIRED,494,21212
  OPTIONAL,495,21278
  NONE,496,21341
struct AADepGraphNode 501,21479
  using DepTy 504,21550
  using DepSetTy 505,21603
  DepSetTy Deps;510,21785
  static AADepGraphNode *DepGetVal(DepGetVal512,21803
  static AbstractAttribute *DepGetValAA(DepGetValAA513,21883
  operator AbstractAttribute operator AbstractAttribute517,22000
  using iterator 520,22084
  using aaiterator 521,22162
  aaiterator begin(524,22251
  aaiterator end(525,22323
  iterator child_begin(526,22391
  iterator child_end(527,22463
  void print(529,22532
  virtual void print(530,22592
  DepSetTy &getDeps(getDeps533,22686
struct AADepGraph 544,23017
  using DepTy 548,23091
  static AADepGraphNode *DepGetVal(DepGetVal549,23130
  using iterator 550,23210
  AADepGraphNode SyntheticRoot;556,23501
  AADepGraphNode *GetEntryNode(GetEntryNode557,23533
  iterator begin(559,23594
  iterator end(560,23653
struct IRPosition 580,24375
  using CallBaseContext 583,24488
  enum Kind 586,24571
    IRP_INVALID,587,24592
    IRP_FLOAT,588,24636
    IRP_RETURNED,590,24793
    IRP_CALL_SITE_RETURNED,591,24860
    IRP_FUNCTION,592,24936
    IRP_CALL_SITE,593,25006
    IRP_ARGUMENT,594,25086
    IRP_CALL_SITE_ARGUMENT,595,25157
  IRPosition(601,25421
  static const IRPosition value(604,25531
  static const IRPosition inst(616,26125
  static const IRPosition function(623,26458
  static const IRPosition returned(630,26796
  static const IRPosition argument(637,27127
  static const IRPosition callsite_function(643,27410
  static const IRPosition callsite_returned(648,27611
  static const IRPosition callsite_argument(653,27836
  static const IRPosition callsite_argument(660,28163
  function_scope(676,28848
  bool operator==(operator==686,29209
  bool operator!=(operator!=689,29319
  Value &getAnchorValue(getAnchorValue697,29774
  Function *getAssociatedFunction(getAssociatedFunction711,30147
  bool isFnInterfaceKind(729,30873
  bool isFunctionScope(741,31172
  Function *getAnchorScope(getAnchorScope752,31429
  Instruction *getCtxI(getCtxI764,31777
  Value &getAssociatedValue(getAssociatedValue778,32264
  Type *getAssociatedType(getAssociatedType787,32644
  int getCalleeArgNo(798,33188
  int getCallSiteArgNo(807,33648
  unsigned getAttrIdx(812,33814
  Value *getAttrListAnchor(getAttrListAnchor833,34559
  AttributeList getAttrList(840,34790
  void setAttrList(847,35056
  unsigned getNumArgs(855,35373
  Value *getArg(getArg866,35795
  Kind getPositionKind(876,36191
  bool isAnyCallSitePosition(896,36835
  bool isArgumentPosition(908,37168
  IRPosition stripCallBaseContext(919,37442
  const CallBaseContext *getCallBaseContext(getCallBaseContext926,37624
  bool hasCallBaseContext(929,37754
  static const IRPosition EmptyKey;934,37870
  static const IRPosition TombstoneKey;935,37906
  operator void operator void939,38020
  explicit IRPosition(943,38140
  explicit IRPosition(949,38361
  int getArgNo(985,39598
  explicit IRPosition(1004,40267
  Value *getAsValuePtr(getAsValuePtr1016,40636
  Use *getAsUsePtr(getAsUsePtr1024,40929
  static bool isReturnPosition(1032,41210
  bool isReturnPosition(1038,41411
    ENC_VALUE 1047,41806
    ENC_RETURNED_VALUE 1048,41828
    ENC_FLOATING_FUNCTION 1049,41859
    ENC_CALL_SITE_ARGUMENT_USE 1050,41893
  static constexpr int NumEncodingBits 1055,42091
  PointerIntPair<PointerIntPair1060,42307
  PointerIntPair<void *, NumEncodingBits, char> Enc;1060,42307
  const CallBaseContext *CBContext CBContext1064,42430
  char getEncodingBits(1067,42509
template <> struct DenseMapInfo<DenseMapInfo1071,42627
  static inline IRPosition getEmptyKey(1072,42673
  static inline IRPosition getTombstoneKey(1073,42747
  static unsigned getHashValue(1076,42835
  static bool isEqual(1081,43032
class SubsumingPositionIterator 1110,44206
  SmallVector<SmallVector1111,44240
  SmallVector<IRPosition, 4> IRPositions;1111,44240
  using iterator 1112,44282
  iterator begin(1116,44395
  iterator end(1117,44446
struct AnalysisGetter 1121,44538
  template <typename,typename1133,45296
  template <typename, typename 1133,45296
  typename Analysis::Result *getAnalysis(getAnalysis1137,45417
  void invalidateAnalyses(1161,46346
  AnalysisGetter(1166,46455
  AnalysisGetter(1168,46572
  FunctionAnalysisManager *FAM FAM1173,46712
  Pass *LegacyPass LegacyPass1174,46754
  bool CachedOnly 1178,46903
constexpr bool AnalysisGetter::HasLegacyWrapper<AnalysisGetter::HasLegacyWrapper1182,46963
struct InformationCache 1197,47736
  InformationCache(1198,47762
  ~InformationCache(1219,48637
  static void foreachUse(1236,49283
  const SetVector<Function *> *const CGSCC 1255,49925
  using InstructionVectorTy 1258,50022
  using OpcodeInstMapTy 1261,50148
  OpcodeInstMapTy &getOpcodeInstMapForFunction(getOpcodeInstMapForFunction1265,50328
  InstructionVectorTy &getReadOrWriteInstsForFunction(getReadOrWriteInstsForFunction1270,50515
  MustBeExecutedContextExplorer *getMustBeExecutedContextExplorer(getMustBeExecutedContextExplorer1275,50677
  TargetLibraryInfo *getTargetLibraryInfoForFunction(getTargetLibraryInfoForFunction1280,50823
  bool isInvolvedInMustTailCall(1286,51065
  bool isOnlyUsedByAssume(1291,51243
  void invalidateAnalyses(1297,51435
  typename AP::Result *getAnalysisResultForFunction(getAnalysisResultForFunction1301,51588
  const DataLayout &getDL(getDL1307,51833
  const RetainedKnowledgeMap &getKnowledgeMap(getKnowledgeMap1310,51955
  getOrCreateUniqueBlockExecutionSet(1314,52114
  bool stackIsAccessibleByOtherThreads(1326,52576
  bool targetIsGPU(1329,52687
  struct FunctionInfo 1339,53000
    OpcodeInstMapTy OpcodeInstMap;1344,53183
    InstructionVectorTy RWInsts;1348,53309
    bool CalledViaMustTail;1351,53392
    bool ContainsMustTailCall;1354,53466
  DenseMap<DenseMap1358,53559
  DenseMap<const Function *, FunctionInfo *> FuncInfoMap;1358,53559
  FunctionInfo &getFunctionInfo(getFunctionInfo1361,53696
  SmallVector<Function *> IndirectlyCallableFunctions;1372,54014
  const DataLayout &DL;DL1381,54419
  BumpPtrAllocator &Allocator;Allocator1384,54515
  MustBeExecutedContextExplorer *Explorer Explorer1387,54583
  RetainedKnowledgeMap KnowledgeMap;1390,54704
  SetVector<const Instruction *> AssumeOnlyValues;1393,54818
  DenseSet<const AA::InstExclusionSetTy *> BESets;1396,54913
  AnalysisGetter &AG;AG1399,54993
  SmallPtrSet<SmallPtrSet1402,55050
  SmallPtrSet<const Function *, 8> InlineableFunctions;1402,55050
  Triple TargetTriple;1405,55155
struct AttributorConfig 1413,55378
  AttributorConfig(1415,55405
  bool IsModulePass 1424,56005
  bool DeleteFns 1427,56111
  bool RewriteSignatures 1430,56196
  bool DefaultInitializeLiveInternals 1434,56373
  bool UseLiveness 1437,56492
  bool IsClosedWorldModule 1441,56635
  std::function<void(Attributor &A, const Function &F)> InitializationCallback 1444,56745
      IndirectCalleeSpecializationCallback 1451,57097
  CallGraphUpdater &CGUpdater;CGUpdater1454,57225
  DenseSet<const char *> *Allowed Allowed1457,57320
  std::optional<unsigned> MaxFixpointIterations;1460,57424
  using OptimizationRemarkGetter 1464,57559
  OptimizationRemarkGetter OREGetter 1466,57655
  const char *PassName PassName1470,57784
  using IPOAmendableCBTy 1472,57819
  IPOAmendableCBTy IPOAmendableCB;1473,57885
struct Attributor 1507,59793
  const AAType *getAAFor(getAAFor1550,61960
  const AAType *getOrCreateAAFor(getOrCreateAAFor1562,62572
  const AAType *getOrCreateAAFor(getOrCreateAAFor1632,64806
  AAType *lookupAAFor(lookupAAFor1640,65138
  template <typename AAType> AAType &registerAA(registerAA1691,67691
  InformationCache &getInfoCache(getInfoCache1712,68566
  bool isModulePass(1715,68685
  bool shouldSpecializeCallSiteForCallee(1719,68853
  bool isRunOn(1732,69434
  bool isRunOn(1733,69494
  template <typename AAType> bool shouldUpdateAA(1737,69589
  bool shouldInitialize(1773,70959
  bool isFunctionIPOAmendable(1811,72562
  void markLiveInternalFunction(1820,72921
  void removeCallSite(1831,73339
  bool changeUseAfterManifest(1840,73610
  bool changeAfterManifest(1854,74204
  void changeToUnreachableAfterManifest(1875,75095
  void registerInvokeWithDeadSuccessor(1882,75374
  void deleteAfterManifest(1888,75610
  void deleteAfterManifest(1892,75821
  void registerManifestAddedBasicBlock(1896,76011
  void deleteAfterManifest(1901,76178
private:private1943,78419
  DenseMap<DenseMap1957,79140
  DenseMap<Value *, AttributeList> AttrsMap;1957,79140
  std::optional<Constant *> getAssumedConstant(1965,79551
  std::optional<Value *> getAssumedSimplified(1973,79980
  std::optional<Value *> getAssumedSimplified(1979,80340
  using SimplifictionCallbackTy 2014,82386
  void registerSimplificationCallback(2016,82521
  bool hasSimplificationCallback(2022,82781
  using GlobalVariableSimplifictionCallbackTy 2029,83077
  void registerGlobalVariableSimplificationCallback(2032,83243
  bool hasGlobalVariableSimplificationCallback(2039,83522
  getAssumedInitializerFromCallBack(2047,83889
  using VirtualUseCallbackTy 2060,84529
  void registerVirtualUseCallback(2062,84628
  DenseMap<DenseMap2069,84884
      SimplificationCallbacks;2070,84948
  DenseMap<DenseMap2074,85085
      GlobalVariableSimplificationCallbacks;2076,85186
  DenseMap<DenseMap2078,85232
      VirtualUseCallbacks;2079,85296
  template <typename RemarkKind,2165,89514
  void emitRemark(2166,89572
  template <typename RemarkKind,2186,90161
  void emitRemark(2187,90219
  struct ArgumentReplacementInfo 2210,91108
    Attributor &getAttributor(getAttributor2238,92569
    const Function &getReplacedFn(getReplacedFn2239,92621
    const Argument &getReplacedArg(getReplacedArg2240,92686
    unsigned getNumReplacementArgs(2241,92753
    const SmallVectorImpl<Type *> &getReplacementTypes(getReplacementTypes2242,92832
    ArgumentReplacementInfo(2252,93167
    Attributor &A;A2262,93725
    const Function &ReplacedFn;ReplacedFn2265,93799
    const Argument &ReplacedArg;ReplacedArg2268,93910
    const SmallVector<SmallVector2271,94002
    const SmallVector<Type *, 8> ReplacementTypes;2271,94002
    const CalleeRepairCBTy CalleeRepairCB;2274,94108
    const ACSRepairCBTy ACSRepairCB;2277,94221
  bool checkForAllCallLikeInstructions(2368,98738
  const DataLayout &getDataLayout(getDataLayout2441,102347
  BumpPtrAllocator &Allocator;Allocator2444,102491
  const SmallSetVector<SmallSetVector2446,102523
  const SmallSetVector<Function *, 8> &getModifiedFunctions(getModifiedFunctions2446,102523
  using AAMapKeyTy 2496,104574
  DenseMap<DenseMap2497,104632
  DenseMap<AAMapKeyTy, AbstractAttribute *> AAMap;2497,104632
  DenseMap<DenseMap2501,104772
      ArgumentReplacementMap;2502,104853
  SetVector<Function *> &Functions;Functions2505,104943
  InformationCache &InfoCache;InfoCache2508,105056
  AADepGraph DG;2511,105130
  SmallSetVector<SmallSetVector2515,105253
  SmallSetVector<Function *, 8> CGModifiedFunctions;2515,105253
  struct DepInfo 2519,105406
    const AbstractAttribute *FromAA;FromAA2520,105425
    const AbstractAttribute *ToAA;ToAA2521,105462
    DepClassTy DepClass;2522,105497
  using DependenceVector 2532,106039
  SmallVector<SmallVector2533,106091
  SmallVector<DependenceVector *, 16> DependenceStack;2533,106091
  DenseSet<const Function *> VisitedFunctions;2536,106227
  SmallMapVector<SmallMapVector2540,106401
  SmallMapVector<Use *, Value *, 32> ToBeChangedUses;2540,106401
  SmallMapVector<SmallMapVector2544,106584
      ToBeChangedValues;2545,106648
  SmallSetVector<SmallSetVector2548,106753
  SmallSetVector<WeakVH, 16> ToBeChangedToUnreachableInsts;2548,106753
  SmallSetVector<SmallSetVector2551,106885
  SmallSetVector<WeakVH, 16> InvokeWithDeadSuccessor;2551,106885
  enum class AttributorPhase 2555,107085
    SEEDING,2556,107116
    UPDATE,2557,107129
    MANIFEST,2558,107141
    CLEANUP,2559,107155
  } Phase 2560,107168
  unsigned InitializationChainLength 2563,107288
  SmallPtrSet<SmallPtrSet2568,107420
  SmallPtrSet<BasicBlock *, 8> ManifestAddedBlocks;2568,107420
  SmallSetVector<SmallSetVector2569,107472
  SmallSetVector<Function *, 8> ToBeDeletedFunctions;2569,107472
  SmallSetVector<SmallSetVector2570,107526
  SmallSetVector<BasicBlock *, 8> ToBeDeletedBlocks;2570,107526
  SmallSetVector<SmallSetVector2571,107579
  SmallSetVector<WeakVH, 8> ToBeDeletedInsts;2571,107579
  SmallSetVector<SmallSetVector2576,107726
  SmallSetVector<AbstractAttribute *, 16> QueryAAsAwaitingUpdate;2576,107726
  const AttributorConfig Configuration;2579,107857
struct AbstractState 2602,108922
template <typename base_ty,2640,110581
template <typename base_ty, base_ty BestState,2640,110581
struct IntegerStateBase 2641,110648
  using base_t 2642,110697
  IntegerStateBase(2645,110756
  static constexpr base_t getBestState(2648,110866
  static constexpr base_t getBestState(2649,110929
  static constexpr base_t getWorstState(2654,111081
  static constexpr base_t getWorstState(2655,111146
  bool isValidState(2661,111367
  bool isAtFixpoint(2664,111484
  ChangeStatus indicateOptimisticFixpoint(2667,111608
  ChangeStatus indicatePessimisticFixpoint(2673,111783
  base_t getKnown(2679,111937
  base_t getAssumed(2682,112023
  operator==(operator==2686,112116
  operator!=(operator!=2693,112342
  void operator^=(operator^=2700,112636
  void operator+=(operator+=2707,112938
  void operator|=(operator|=2711,113060
  void operator&=(operator&=2715,113185
  base_t Known 2733,113867
  base_t Assumed 2736,113965
template <typename base_ty 2740,114069
template <typename base_ty 2802,116284
template <typename base_ty 2851,118067
struct BooleanState 2886,119319
  using super 2887,119386
  using super = IntegerStateBase<bool, true,2887,119386
  using base_t 2888,119439
  BooleanState(2891,119511
  void setAssumed(2894,119634
  void setKnown(2897,119749
  bool isAssumed(2903,119877
  bool isKnown(2906,119977
  void handleNewAssumedValue(2909,120033
  void handleNewKnownValue(2913,120130
  void joinOR(2917,120234
  void joinAND(2921,120357
struct IntegerRangeState 2928,120517
  uint32_t BitWidth;2931,120608
  ConstantRange Assumed;2934,120694
  ConstantRange Known;2937,120788
  IntegerRangeState(2939,120812
  IntegerRangeState(2943,120975
  static ConstantRange getWorstState(2948,121173
  static ConstantRange getBestState(2953,121333
  static ConstantRange getBestState(2956,121440
  uint32_t getBitWidth(2961,121600
  bool isValidState(2964,121693
  bool isAtFixpoint(2969,121826
  ChangeStatus indicateOptimisticFixpoint(2972,121950
  ChangeStatus indicatePessimisticFixpoint(2978,122123
  ConstantRange getKnown(2984,122277
  ConstantRange getAssumed(2987,122370
  void unionAssumed(2990,122475
  void unionAssumed(2996,122663
  void intersectKnown(3001,122803
  void intersectKnown(3007,122981
  bool operator==(operator==3012,123110
  IntegerRangeState operator^=(operator^=3019,123426
  IntegerRangeState operator&=(operator&=3026,123631
template <typename BaseTy> struct SetState 3040,124159
  struct SetContents 3043,124370
    SetContents(3045,124468
    SetContents(3048,124585
    SetContents(3051,124687
    const DenseSet<BaseTy> &getSet(getSet3054,124809
    bool isUniversal(3056,124869
    bool empty(3058,124921
    bool getIntersection(3062,125134
    bool getUnion(3082,125716
    bool Universal;3096,126144
    DenseSet<BaseTy> Set;3099,126214
  SetState(3102,126246
  SetState(3106,126424
  bool isValidState(3110,126569
  bool isAtFixpoint(3113,126676
  ChangeStatus indicateOptimisticFixpoint(3116,126798
  ChangeStatus indicatePessimisticFixpoint(3123,127000
  const SetContents &getKnown(getKnown3130,127182
  const SetContents &getAssumed(getAssumed3133,127280
  bool setContains(3136,127394
  bool getIntersection(3142,127629
  bool getUnion(3157,128172
  SetContents Known;3161,128302
  SetContents Assumed;3164,128372
  bool IsAtFixedpoint;3166,128396
template <typename StateTy,3170,128499
template <typename StateTy, typename BaseType,3170,128499
struct StateWrapper 3171,128559
  using StateType 3173,128669
  StateWrapper(3175,128699
  StateType &getState(getState3179,128837
  const StateType &getState(getState3182,128933
template <Attribute::AttrKind AK,3186,129079
template <Attribute::AttrKind AK, typename BaseType,3186,129079
struct IRAttribute 3187,129149
  IRAttribute(3188,129188
  static bool hasTrivialInitializer(3193,129405
  static constexpr Attribute::AttrKind IRAttributeKind 3196,129538
  static bool isImpliedByUndef(3200,129703
  static bool isImpliedByPoison(3204,129858
  static bool isImpliedByIR(3206,129910
  ChangeStatus manifest(3219,130499
  Attribute::AttrKind getAttrKind(3230,130995
  virtual void getDeducedAttributes(3233,131102
struct AbstractAttribute 3282,134188
  using StateType 3283,134258
  AbstractAttribute(3285,134294
  static constexpr Attribute::AttrKind IRAttributeKind 3291,134480
  static bool classof(3299,134890
  static bool hasTrivialInitializer(3303,135067
  static bool requiresCalleeForCallBase(3307,135270
  static bool requiresNonAsmForCallBase(3310,135411
  static bool requiresCallersForArgOrFunction(3314,135564
  static bool isValidIRPositionForInit(3317,135693
  static bool isValidIRPositionForUpdate(3322,135856
  virtual void initialize(3346,137211
  virtual bool isQueryAA(3354,137675
  const IRPosition &getIRPosition(getIRPosition3361,137923
  IRPosition &getIRPosition(getIRPosition3362,137984
  void print(3366,138090
  void dump(3369,138263
  virtual ChangeStatus manifest(3397,139352
template <typename base_ty,3426,140513
template <typename base_ty, base_ty BestState,3426,140513
operator<<(3428,140594
struct AttributorPass 3436,140897
struct AttributorCGSCCPass 3439,141026
struct AttributorLightPass 3446,141356
struct AttributorLightCGSCCPass3452,141609
ChangeStatus clampStateAndIndicateChange(3462,142053
struct AANoUnwind3473,142513
  AANoUnwind(3477,142688
  bool isAssumedNoUnwind(3480,142805
  bool isKnownNoUnwind(3483,142905
  const std::string getName(3489,143143
  const char *getIdAddr(getIdAddr3492,143255
  static bool classof(3495,143391
  static const char ID;3500,143530
struct AANoSync3503,143558
  AANoSync(3507,143727
  static bool isImpliedByIR(3509,143799
  static bool isValidIRPositionForInit(3540,144930
  bool isAssumedNoSync(3548,145225
  bool isKnownNoSync(3551,145323
  const std::string getName(3572,146350
  const char *getIdAddr(getIdAddr3575,146460
  static bool classof(3578,146594
  static const char ID;3583,146733
struct AAMustProgress3587,146815
  AAMustProgress(3591,147002
  static bool isImpliedByIR(3593,147080
  bool isAssumedMustProgress(3603,147632
  bool isKnownMustProgress(3606,147758
  const std::string getName(3613,148047
  const char *getIdAddr(getIdAddr3616,148163
  static bool classof(3620,148309
  static const char ID;3625,148448
struct AANonNull3629,148530
  AANonNull(3633,148702
  static bool hasTrivialInitializer(3636,148827
  static bool isImpliedByUndef(3641,149042
  static bool isValidIRPositionForInit(3644,149148
  bool isAssumedNonNull(3656,149689
  bool isKnownNonNull(3659,149810
  const std::string getName(3665,150046
  const char *getIdAddr(getIdAddr3668,150157
  static bool classof(3671,150292
  static const char ID;3676,150431
struct AANoRecurse3680,150500
  AANoRecurse(3684,150678
  bool isAssumedNoRecurse(3687,150798
  bool isKnownNoRecurse(3690,150901
  const std::string getName(3696,151141
  const char *getIdAddr(getIdAddr3699,151254
  static bool classof(3702,151391
  static const char ID;3707,151530
struct AAWillReturn3711,151600
  AAWillReturn(3715,151781
  static bool isImpliedByIR(3717,151857
  static bool isImpliedByMustprogressAndReadonly(3733,152639
  bool isAssumedWillReturn(3751,153329
  bool isKnownWillReturn(3754,153434
  const std::string getName(3760,153676
  const char *getIdAddr(getIdAddr3763,153790
  static bool classof(3766,153928
  static const char ID;3771,154067
struct AAUndefinedBehavior3775,154145
  using Base 3777,154233
  AAUndefinedBehavior(3778,154295
  bool isAssumedToCauseUB(3781,154425
  bool isKnownToCauseUB(3787,154680
  const std::string getName(3797,155115
  const char *getIdAddr(getIdAddr3800,155236
  static bool classof(3804,155386
  static const char ID;3809,155525
struct AAIntraFnReachability3813,155622
  using Base 3815,155712
  AAIntraFnReachability(3816,155774
  const std::string getName(3830,156475
  const char *getIdAddr(getIdAddr3833,156598
  static bool classof(3837,156751
  static const char ID;3842,156890
struct AANoAlias3846,156972
  AANoAlias(3850,157144
  static bool isValidIRPositionForInit(3853,157271
  static bool requiresCallersForArgOrFunction(3865,157792
  bool isAssumedNoAlias(3868,157925
  bool isKnownNoAlias(3871,158046
  const std::string getName(3877,158282
  const char *getIdAddr(getIdAddr3880,158393
  static bool classof(3883,158528
  static const char ID;3888,158667
struct AANoFree3892,158732
  AANoFree(3896,158901
  static bool isImpliedByIR(3899,159010
  static bool isValidIRPositionForInit(3910,159544
  bool isAssumedNoFree(3918,159838
  bool isKnownNoFree(3921,159935
  const std::string getName(3927,160169
  const char *getIdAddr(getIdAddr3930,160279
  static bool classof(3933,160413
  static const char ID;3938,160552
struct AANoReturn3942,160619
  AANoReturn(3946,160794
  bool isAssumedNoReturn(3949,160939
  bool isKnownNoReturn(3952,161067
  const std::string getName(3958,161305
  const char *getIdAddr(getIdAddr3961,161417
  static bool classof(3964,161553
  static const char ID;3969,161692
struct AAIsDead3973,161779
  using Base 3975,161874
  AAIsDead(3976,161954
  static bool isValidIRPositionForInit(3979,162073
    HAS_NO_EFFECT 3988,162438
    IS_REMOVABLE 3989,162466
    IS_DEAD 3991,162494
  virtual bool isRemovableStore(4018,163587
  template <typename T> bool isLiveInstSet(4022,163756
  static bool mayCatchAsynchronousExceptions(4039,164320
  virtual bool isEdgeDead(4048,164689
  const std::string getName(4053,164831
  const char *getIdAddr(getIdAddr4056,164941
  static bool classof(4059,165075
  static const char ID;4064,165214
struct DerefState 4070,165311
  static DerefState getBestState(4072,165348
  static DerefState getBestState(4073,165408
  static DerefState getWorstState(4076,165542
  static DerefState getWorstState(4081,165656
  IncIntegerState<> DerefBytesState;4086,165797
  std::map<std::map4094,166153
  std::map<int64_t, uint64_t> AccessedBytesMap;4094,166153
  void computeKnownDerefBytesFromAccessedMap(4115,166765
  BooleanState GlobalState;4127,167181
  bool isValidState(4130,167250
  bool isAtFixpoint(4133,167371
  ChangeStatus indicateOptimisticFixpoint(4139,167577
  ChangeStatus indicatePessimisticFixpoint(4146,167827
  void takeKnownDerefBytesMaximum(4153,168062
  void takeAssumedDerefBytesMinimum(4161,168289
  void addAccessedBytes(4166,168432
  bool operator==(operator==4175,168713
  bool operator!=(operator!=4181,168902
  DerefState operator^=(operator^=4184,169013
  DerefState operator+=(operator+=4191,169198
  DerefState operator&=(operator&=4198,169383
  DerefState operator|=(operator|=4205,169568
struct AADereferenceable4213,169778
  AADereferenceable(4217,169972
  static bool isValidIRPositionForInit(4220,170107
  bool isAssumedGlobal(4228,170423
  bool isKnownGlobal(4232,170588
  uint32_t getAssumedDereferenceableBytes(4235,170697
  uint32_t getKnownDereferenceableBytes(4240,170837
  const std::string getName(4249,171167
  const char *getIdAddr(getIdAddr4252,171286
  static bool classof(4256,171435
  static const char ID;4261,171574
using AAAlignmentStateType 4264,171602
struct AAAlign4267,171742
  AAAlign(4271,171920
  static bool isValidIRPositionForInit(4274,172045
  Align getAssumedAlign(4281,172295
  Align getKnownAlign(4284,172390
  const std::string getName(4287,172490
  const char *getIdAddr(getIdAddr4290,172599
  static bool classof(4293,172732
  static const char ID;4301,173012
struct AAInstanceInfo 4308,173252
  AAInstanceInfo(4309,173331
  bool isKnownUniqueForAnalysis(4316,173714
  bool isAssumedUniqueForAnalysis(4322,174044
  const std::string getName(4329,174341
  const char *getIdAddr(getIdAddr4332,174457
  static bool classof(4336,174603
  static const char ID;4341,174742
struct AANoCapture4345,174826
  AANoCapture(4350,175004
  static bool isValidIRPositionForInit(4364,175691
    NOT_CAPTURED_IN_MEM 4373,176067
    NOT_CAPTURED_IN_INT 4374,176101
    NOT_CAPTURED_IN_RET 4375,176135
    NO_CAPTURE_MAYBE_RETURNED 4379,176301
    NO_CAPTURE 4383,176505
  bool isKnownNoCapture(4389,176703
  bool isAssumedNoCapture(4393,176872
  bool isKnownNoCaptureMaybeReturned(4397,177088
  bool isAssumedNoCaptureMaybeReturned(4403,177336
  const std::string getName(4411,177623
  const char *getIdAddr(getIdAddr4414,177736
  static bool classof(4417,177873
  static const char ID;4422,178012
struct ValueSimplifyStateType 4425,178040
  ValueSimplifyStateType(4427,178096
  static ValueSimplifyStateType getBestState(4429,178144
  static ValueSimplifyStateType getBestState(4432,178244
  static ValueSimplifyStateType getWorstState(4437,178415
  getWorstState(4443,178597
  bool isValidState(4448,178730
  bool isAtFixpoint(4451,178841
  ValueSimplifyStateType getAssumed(4454,178950
  const ValueSimplifyStateType &getAssumed(getAssumed4455,179006
  ChangeStatus indicatePessimisticFixpoint(4458,179134
  ChangeStatus indicateOptimisticFixpoint(4463,179297
  ValueSimplifyStateType operator^=(operator^=4468,179439
  bool operator==(operator==4474,179599
  Type *Ty;Ty4484,179918
  BooleanState BS;4490,180092
  std::optional<Value *> SimplifiedAssociatedValue;4496,180388
struct AAValueSimplify4500,180509
  using Base 4502,180611
  using Base = StateWrapper<ValueSimplifyStateType, AbstractAttribute,4502,180611
  AAValueSimplify(4503,180691
  const std::string getName(4511,181026
  const char *getIdAddr(getIdAddr4514,181143
  static bool classof(4518,181290
  static const char ID;4523,181429
struct AAHeapToStack 4537,181837
  using Base 4538,181915
  AAHeapToStack(4539,181977
  const std::string getName(4552,182568
  const char *getIdAddr(getIdAddr4555,182683
  static bool classof(4558,182822
  static const char ID;4563,182961
struct AAPrivatizablePtr4576,183508
  using Base 4578,183594
  AAPrivatizablePtr(4579,183656
  static bool isValidIRPositionForInit(4582,183784
  bool isAssumedPrivatizablePtr(4589,184079
  bool isKnownPrivatizablePtr(4592,184214
  static bool requiresCallersForArgOrFunction(4595,184337
  const std::string getName(4607,184866
  const char *getIdAddr(getIdAddr4610,184985
  static bool classof(4614,185134
  static const char ID;4619,185273
struct AAMemoryBehavior4624,185404
  AAMemoryBehavior(4629,185583
  static bool hasTrivialInitializer(4632,185715
  static bool isValidIRPositionForInit(4635,185826
    NO_READS 4645,186236
    NO_WRITES 4646,186259
    NO_ACCESSES 4647,186283
    BEST_STATE 4649,186324
  bool isKnownReadNone(4655,186548
  bool isAssumedReadNone(4659,186725
  bool isKnownReadOnly(4663,186907
  bool isAssumedReadOnly(4667,187085
  bool isKnownWriteOnly(4671,187250
  bool isAssumedWriteOnly(4675,187413
  const std::string getName(4682,187714
  const char *getIdAddr(getIdAddr4685,187832
  static bool classof(4689,187980
  static const char ID;4694,188119
struct AAMemoryLocation4699,188280
  using MemoryLocationsKind 4704,188462
  AAMemoryLocation(4706,188512
  static bool requiresCalleeForCallBase(4709,188648
  static bool hasTrivialInitializer(4712,188760
  static bool isValidIRPositionForInit(4715,188871
    ALL_LOCATIONS 4725,189219
    NO_LOCAL_MEM 4726,189242
    NO_CONST_MEM 4727,189269
    NO_GLOBAL_INTERNAL_MEM 4728,189296
    NO_GLOBAL_EXTERNAL_MEM 4729,189333
    NO_GLOBAL_MEM 4730,189370
    NO_ARGUMENT_MEM 4731,189439
    NO_INACCESSIBLE_MEM 4732,189469
    NO_MALLOCED_MEM 4733,189503
    NO_UNKOWN_MEM 4734,189533
    NO_LOCATIONS 4735,189561
    VALID_STATE 4740,189821
    BEST_STATE 4742,189858
  bool isKnownReadNone(4748,190080
  bool isAssumedReadNone(4752,190241
  bool isKnowStackOnly(4758,190440
  bool isAssumedStackOnly(4764,190642
  bool isKnownInaccessibleMemOnly(4770,190888
  bool isAssumedInaccessibleMemOnly(4776,191149
  bool isKnownArgMemOnly(4782,191397
  bool isAssumedArgMemOnly(4788,191630
  bool isKnownInaccessibleOrArgMemOnly(4795,191907
  bool isAssumedInaccessibleOrArgMemOnly(4803,192227
  bool mayAccessArgMem(4810,192511
  bool isAssumedSpecifiedMemOnly(4814,192712
  MemoryLocationsKind getAssumedNotAccessedLocation(4820,192915
  inverseLocation(4830,193407
  enum AccessKind 4839,193830
    NONE 4840,193850
    READ 4841,193864
    WRITE 4842,193883
    READ_WRITE 4843,193903
  const std::string getAsStr(4862,194669
  const std::string getName(4867,194843
  const char *getIdAddr(getIdAddr4870,194961
  static bool classof(4874,195109
  static const char ID;4879,195248
struct AAValueConstantRange4883,195328
  using Base 4885,195432
  using Base = StateWrapper<IntegerRangeState, AbstractAttribute,4885,195432
  AAValueConstantRange(4886,195509
  static bool isValidIRPositionForInit(4890,195693
  static bool requiresCallersForArgOrFunction(4897,195971
  IntegerRangeState &getState(getState4900,196081
  const IntegerRangeState &getState(getState4901,196140
  getAssumedConstant(4922,197077
  const std::string getName(4935,197550
  const char *getIdAddr(getIdAddr4938,197672
  static bool classof(4942,197824
  static const char ID;4947,197963
template <typename MemberTy> struct PotentialValuesState 4958,198500
  using SetTy 4959,198575
  PotentialValuesState(4961,198621
  PotentialValuesState(4963,198696
  bool isValidState(4967,198835
  bool isAtFixpoint(4970,198956
  ChangeStatus indicatePessimisticFixpoint(4973,199092
  ChangeStatus indicateOptimisticFixpoint(4978,199265
  PotentialValuesState &getAssumed(getAssumed4983,199410
  const PotentialValuesState &getAssumed(getAssumed4984,199465
  const SetTy &getAssumedSet(getAssumedSet4988,199659
  bool undefIsContained(4994,199864
  bool operator==(operator==4999,200013
  static unsigned MaxPotentialValues;5011,200453
  static PotentialValuesState getBestState(5014,200554
  static PotentialValuesState getBestState(5018,200645
  static PotentialValuesState getWorstState(5023,200817
  void unionAssumed(5028,200957
  void unionAssumed(5031,201081
  void unionAssumedWithUndef(5034,201200
  PotentialValuesState operator^=(operator^=5037,201292
  PotentialValuesState operator&=(operator&=5043,201445
  bool contains(5049,201598
  SetTy &getAssumedSet(getAssumedSet5054,201710
  void checkAndInvalidate(5062,201965
  void reduceUndefValue(5071,202219
  void insert(5074,202340
  void unionWith(5082,202489
  void unionWithUndef(5098,202929
  void intersectWith(5104,203045
  BooleanState IsValidState;5124,203588
  SetTy Set;5127,203655
  bool UndefIsContained;5130,203696
struct DenormalFPMathState 5133,203725
  struct DenormalState 5134,203777
    bool operator==(operator==5138,203910
    bool operator!=(operator!=5142,204033
    bool isValid(5146,204156
    unionDenormalKind(5151,204282
    static DenormalMode unionAssumed(5162,204632
    DenormalState unionWith(5167,204869
  DenormalState Known;5175,205124
  bool IsAtFixedpoint 5178,205204
  DenormalState getKnown(5182,205272
  DenormalState getAssumed(5186,205414
  bool isValidState(5188,205468
  bool isModeFixed(5194,205640
  bool isAtFixpoint(5201,205904
  ChangeStatus indicateFixpoint(5205,205975
  ChangeStatus indicateOptimisticFixpoint(5211,206149
  ChangeStatus indicatePessimisticFixpoint(5215,206240
  DenormalFPMathState operator^=(operator^=5219,206332
using PotentialConstantIntValuesState 5225,206476
using PotentialLLVMValuesState 5226,206545
struct AAPotentialConstantValues5248,207643
  using Base 5250,207756
  AAPotentialConstantValues(5251,207837
  static bool isValidIRPositionForInit(5254,207973
  static bool requiresCallersForArgOrFunction(5261,208251
  PotentialConstantIntValuesState &getState(getState5264,208361
  const PotentialConstantIntValuesState &getState(getState5265,208434
  getAssumedConstant(5275,208822
  const std::string getName(5294,209418
  const char *getIdAddr(getIdAddr5299,209551
  static bool classof(5303,209708
  static const char ID;5308,209847
struct AAPotentialValues5311,209875
  using Base 5313,209973
  AAPotentialValues(5314,210047
  static bool requiresCallersForArgOrFunction(5317,210182
  PotentialLLVMValuesState &getState(getState5320,210292
  const PotentialLLVMValuesState &getState(getState5321,210358
  const std::string getName(5333,210933
  const char *getIdAddr(getIdAddr5336,211052
  static bool classof(5340,211201
  static const char ID;5345,211340
struct AANoUndef5356,211641
  AANoUndef(5360,211813
  static bool isImpliedByUndef(5363,211926
  static bool isImpliedByPoison(5366,212019
  bool isAssumedNoUndef(5374,212383
  bool isKnownNoUndef(5377,212504
  const std::string getName(5383,212740
  const char *getIdAddr(getIdAddr5386,212851
  static bool classof(5389,212986
  static const char ID;5394,213125
struct AANoFPClass5397,213153
  using Base 5403,213368
  using Base = StateWrapper<BitIntegerState<uint32_t, fcAllFlags,5403,213368
  AANoFPClass(5406,213492
  static bool isValidIRPositionForInit(5409,213621
  FPClassTest getAssumedNoFPClass(5422,214040
  const std::string getName(5430,214324
  const char *getIdAddr(getIdAddr5433,214437
  static bool classof(5436,214574
  static const char ID;5441,214713
class AACallEdgeIterator5450,214992
  AACallEdgeIterator(5453,215142
  Attributor &A;A5460,215320
struct AACallGraphNode 5465,215393
  AACallGraphNode(5466,215418
  iterator_range<AACallEdgeIterator> optimisticEdgesRange(5473,215678
  Attributor &A;A5480,215970
struct AACallEdges 5486,216157
  using Base 5488,216271
  AACallEdges(5490,216334
  static bool requiresNonAsmForCallBase(5494,216484
  AACallEdgeIterator optimisticEdgesBegin(5506,216912
  AACallEdgeIterator optimisticEdgesEnd(5511,217087
  const std::string getName(5519,217397
  const char *getIdAddr(getIdAddr5522,217510
  static bool classof(5525,217648
  static const char ID;5530,217787
struct AttributorCallGraph 5534,217880
  AttributorCallGraph(5535,217934
  AACallEdgeIterator optimisticEdgesBegin(5538,218040
  AACallEdgeIterator optimisticEdgesEnd(5542,218161
  void populateAll(5547,218322
template <> struct GraphTraits<GraphTraits5557,218495
  using NodeRef 5558,218547
  using ChildIteratorType 5559,218584
  static AACallEdgeIterator child_begin(5561,218633
  static AACallEdgeIterator child_end(5565,218744
struct GraphTraits<GraphTraits5571,218866
  using nodes_iterator 5573,218954
  static AACallGraphNode *getEntryNode(getEntryNode5575,219000
  static AACallEdgeIterator nodes_begin(5579,219116
  static AACallEdgeIterator nodes_end(5583,219231
struct DOTGraphTraits<DOTGraphTraits5589,219357
  DOTGraphTraits(5590,219435
  std::string getNodeLabel(5592,219509
  static bool isNodeHidden(5598,219762
struct AAExecutionDomain5605,219981
  using Base 5607,220067
  AAExecutionDomain(5608,220129
  struct ExecutionDomainTy 5611,220271
    void addAssumeInst(5615,220410
    void addAlignedBarrier(5619,220511
    void clearAssumeInstAndAlignedBarriers(5623,220611
    BarriersSetTy AlignedBarriers;5632,220920
    AssumesSetTy EncounteredAssumes;5633,220955
  const std::string getName(5641,221235
  const char *getIdAddr(getIdAddr5644,221355
  bool isExecutedByInitialThreadOnly(5647,221483
  virtual std::pair<std::pair5663,222304
  static bool classof(5673,222760
  static const char ID;5678,222899
struct AAInterFnReachability5682,222999
  using Base 5684,223089
  AAInterFnReachability(5686,223152
  bool canReach(5689,223299
  const std::string getName(5707,224028
  const char *getIdAddr(getIdAddr5710,224151
  static bool classof(5713,224289
  static const char ID;5718,224428
struct AANonConvergent 5723,224545
  using Base 5724,224625
  AANonConvergent(5726,224688
  bool isAssumedNotConvergent(5733,225003
  bool isKnownNotConvergent(5736,225115
  const std::string getName(5739,225214
  const char *getIdAddr(getIdAddr5742,225331
  static bool classof(5746,225479
  static const char ID;5751,225618
struct AAPointerInfo 5755,225696
  AAPointerInfo(5756,225746
  static bool isValidIRPositionForInit(5759,225868
  enum AccessKind 5765,226092
    AK_MUST 5767,226172
    AK_MAY 5768,226194
    AK_R 5771,226282
    AK_W 5772,226301
    AK_RW 5773,226320
    AK_ASSUMPTION 5778,226537
    AK_MAY_READ 5781,226609
    AK_MAY_WRITE 5782,226642
    AK_MAY_READ_WRITE 5783,226676
    AK_MUST_READ 5784,226722
    AK_MUST_WRITE 5785,226757
    AK_MUST_READ_WRITE 5786,226793
  struct RangeList 5790,226887
    VecTy Ranges;5799,227353
    RangeList(5801,227372
    RangeList(5802,227429
    iterator begin(5812,227795
    iterator end(5813,227843
    const_iterator begin(5814,227887
    const_iterator end(5815,227947
    void push_back(5819,228084
    static void set_difference(5826,228356
    unsigned size(5832,228622
    bool operator==(operator==5834,228675
    bool merge(5840,229027
    std::pair<std::pair5871,229864
    std::pair<iterator, bool> insert(5871,229864
    std::pair<std::pair5892,230697
    std::pair<iterator, bool> insert(5892,230697
    void addToAllOffsets(5897,230864
    bool isUnique(5908,231183
    const RangeTy &getUnique(getUnique5913,231348
    bool isUnknown(5919,231541
    iterator setUnknown(5930,231860
    bool isUnassigned(5937,232046
  struct Access 5941,232142
    Access(5942,232160
    Access(5948,232413
    Access(5958,232812
    bool operator==(operator==5968,233212
    bool operator!=(operator!=5972,233397
    Access &operator&=(operator&=5974,233467
    void verify(5998,234463
    AccessKind getKind(6008,234872
    bool isRead(6011,234967
    bool isWrite(6014,235063
    bool isWriteOrAssumption(6017,235160
    bool isAssumption(6020,235291
    bool isMustAccess(6022,235356
    bool isMayAccess(6029,235582
    Instruction *getLocalInst(getLocalInst6038,235925
    Instruction *getRemoteInst(getRemoteInst6041,236045
    bool isWrittenValueYetUndetermined(6044,236164
    bool isWrittenValueUnknown(6047,236303
    void setWrittenValueUnknown(6052,236455
    Type *getType(getType6055,236575
    Value *getWrittenValue(getWrittenValue6058,236658
    std::optional<Value *> getContent(6066,236937
    bool hasUniqueRange(6068,237004
    const AA::RangeTy &getUniqueRange(getUniqueRange6069,237066
    void addRange(6074,237264
    const RangeList &getRanges(getRanges6082,237483
    const_iterator begin(6085,237596
    const_iterator end(6086,237656
    Instruction *LocalI;LocalI6091,237844
    Instruction *RemoteI;RemoteI6094,237922
    std::optional<Value *> Content;6098,238062
    RangeList Ranges;6101,238163
    AccessKind Kind;6104,238259
    Type *Ty;Ty6108,238380
  const std::string getName(6115,238586
  const char *getIdAddr(getIdAddr6118,238701
  using OffsetBinsTy 6120,238759
  using OffsetBinsTy = DenseMap<AA::RangeTy, SmallSet<SmallSet6120,238759
  using const_bin_iterator 6121,238828
  static bool classof(6150,240538
  static const char ID;6155,240677
struct AAAssumptionInfo6161,240839
  using Base 6164,240978
      StateWrapper<SetState<StringRef>, AbstractAttribute,6165,240993
  AAAssumptionInfo(6167,241075
  const std::string getName(6179,241597
  const char *getIdAddr(getIdAddr6182,241715
  static bool classof(6186,241863
  static const char ID;6191,242002
struct AAUnderlyingObjects 6195,242103
  AAUnderlyingObjects(6196,242152
  static bool isValidIRPositionForInit(6199,242280
  static bool requiresCallersForArgOrFunction(6206,242565
  const std::string getName(6213,242871
  const char *getIdAddr(getIdAddr6216,242992
  static bool classof(6220,243144
  static const char ID;6225,243283
struct AAAddressSpace 6237,243757
  AAAddressSpace(6238,243836
  static bool isValidIRPositionForInit(6242,244008
  static bool requiresCallersForArgOrFunction(6249,244293
  const std::string getName(6261,244834
  const char *getIdAddr(getIdAddr6264,244950
  static bool classof(6268,245098
  static const int32_t NoAddressSpace 6273,245261
  static const char ID;6276,245350
struct AAAllocationInfo 6279,245378
  AAAllocationInfo(6280,245459
  static bool isValidIRPositionForInit(6284,245633
  const std::string getName(6297,246156
  const char *getIdAddr(getIdAddr6300,246274
  static bool classof(6304,246422
  constexpr static const std::optional<TypeSize> HasNoAllocationSize 6308,246517
  static const char ID;6311,246640
struct AAGlobalValueInfo6315,246742
  AAGlobalValueInfo(6317,246828
  static bool isValidIRPositionForInit(6321,247003
  const std::string getName(6338,247661
  const char *getIdAddr(getIdAddr6341,247780
  static bool classof(6345,247929
  static const char ID;6350,248068
struct AAIndirectCallInfo6354,248166
  AAIndirectCallInfo(6356,248253
  static bool isValidIRPositionForInit(6360,248429
  const std::string getName(6377,249213
  const char *getIdAddr(getIdAddr6380,249333
  static bool classof(6386,249574
  static const char ID;6391,249713
struct AADenormalFPMath6396,249884
  using Base 6398,249976
  AADenormalFPMath(6400,250046
  const std::string getName(6407,250353
  const char *getIdAddr(getIdAddr6410,250471
  static bool classof(6414,250620
  static const char ID;6419,250759
enum AttributorRunOption 6425,250902
  NONE 6426,250929
  MODULE 6427,250941
  CGSCC 6428,250960
  ALL 6429,250978
namespace AA 6432,251005
template <Attribute::AttrKind AK,6434,251100
template <Attribute::AttrKind AK, typename AAType 6434,251100
#define CASE(6441,251478
#undef CASE6469,253114

/usr/include/llvm/Transforms/IPO/BlockExtractor.h,242
#define LLVM_TRANSFORMS_IPO_BLOCKEXTRACTOR_H15,596
struct BlockExtractorPass 24,731
  BlockExtractorPass(25,795
  PreservedAnalyses run(27,916
  std::vector<std::vector<BasicBlock *>> GroupsOfBlocks;30,989
  bool EraseFunctions;31,1046

/usr/include/llvm/Transforms/IPO/EmbedBitcodePass.h,388
#define LLVM_TRANSFORMS_IPO_EMBEDBITCODEPASS_H19,906
struct EmbedBitcodeOptions 27,1032
  EmbedBitcodeOptions(28,1061
  EmbedBitcodeOptions(29,1124
  bool IsThinLTO;31,1247
  bool EmitLTOSummary;32,1265
class EmbedBitcodePass 37,1399
  bool IsThinLTO;38,1465
  bool EmitLTOSummary;39,1483
  EmbedBitcodePass(42,1515
  EmbedBitcodePass(44,1625
  static bool isRequired(49,1808

/usr/include/llvm/Transforms/IPO/FunctionImport.h,955
#define LLVM_TRANSFORMS_IPO_FUNCTIONIMPORT_H10,415
class FunctionImporter 32,966
  enum ImportFailureReason 40,1308
    None,41,1337
    GlobalVar,45,1522
    NotLive,47,1601
    TooLarge,49,1667
    InterposableLinkage,52,1774
    LocalLinkageNotInModule,56,1998
    NotEligible,60,2258
    NoInline64,2497
  struct ImportFailureInfo 69,2643
    ValueInfo VI;72,2804
    CalleeInfo::HotnessType MaxHotness;74,2901
    ImportFailureReason Reason;77,3070
    unsigned Attempts;79,3170
    ImportFailureInfo(80,3193
               std::tuple<std::tuple91,3789
  FunctionImporter(110,4748
  const ModuleSummaryIndex &Index;Index120,5224
  ModuleLoaderTy ModuleLoader;123,5323
  bool ClearDSOLocalOnDeclarations;127,5446
class FunctionImportPass 131,5518
enum class PrevailingType 168,7397
enum class PrevailingType { Yes,168,7397
enum class PrevailingType { Yes, No,168,7397
enum class PrevailingType { Yes, No, Unknown 168,7397

/usr/include/llvm/Transforms/IPO/FunctionSpecialization.h,2079
#define LLVM_TRANSFORMS_IPO_FUNCTIONSPECIALIZATION_H75,3799
using SpecMap 92,4550
struct SpecSig 102,4926
  SmallVector<SmallVector106,5054
  SmallVector<ArgInfo, 4> Args;106,5054
  bool operator==(operator==108,5087
struct Spec 121,5421
  Function *F;F123,5459
  Function *Clone Clone126,5540
  SpecSig Sig;129,5601
  unsigned Score;132,5659
  SmallVector<CallBase *> CallSites;135,5733
  Spec(137,5771
  Spec(139,5863
struct Bonus 143,5960
  unsigned CodeSize 144,5975
  unsigned Latency 145,6000
  Bonus(149,6047
  Bonus &operator+=(operator+=160,6458
  Bonus operator+(166,6578
  bool operator==(operator==170,6692
class InstCostVisitor 175,6806
  const DataLayout &DL;DL176,6880
  BlockFrequencyInfo &BFI;BFI177,6904
  TargetTransformInfo &TTI;TTI178,6931
  SCCPSolver &Solver;Solver179,6959
  ConstMap KnownConstants;181,6982
  DenseSet<BasicBlock *> DeadBlocks;183,7079
  DenseSet<Instruction *> VisitedPHIs;185,7155
  SmallVector<Instruction *> PendingPHIs;190,7496
  ConstMap::iterator LastVisited;192,7539
  InstCostVisitor(195,7582
  bool isBlockExecutable(199,7766
  Constant *visitInstruction(visitInstruction236,9168
class FunctionSpecializer 249,9681
  SCCPSolver &Solver;Solver252,9735
  Module &M;M254,9758
  FunctionAnalysisManager *FAM;FAM257,9827
  std::function<BlockFrequencyInfo &(Function &)> GetBFI;260,9935
  std::function<const TargetLibraryInfo &(Function &)> GetTLI;261,9993
  std::function<TargetTransformInfo &(Function &)> GetTTI;262,10056
  std::function<AssumptionCache &(Function &)> GetAC;263,10115
  SmallPtrSet<SmallPtrSet265,10170
  SmallPtrSet<Function *, 32> Specializations;265,10170
  SmallPtrSet<SmallPtrSet266,10217
  SmallPtrSet<Function *, 32> FullySpecialized;266,10217
  DenseMap<DenseMap267,10265
  DenseMap<Function *, CodeMetrics> FunctionMetrics;267,10265
  DenseMap<DenseMap268,10318
  DenseMap<Function *, unsigned> FunctionGrowth;268,10318
  unsigned NGlobals 269,10367
  FunctionSpecializer(272,10401
  InstCostVisitor getInstCostVisitorFor(285,10896

/usr/include/llvm/Transforms/IPO/HotColdSplitting.h,265
#define LLVM_TRANSFORMS_IPO_HOTCOLDSPLITTING_H13,560
class HotColdSplitting 34,1072
  HotColdSplitting(36,1105
  bool run(42,1526
  bool isFunctionCold(45,1559
  function_ref<AssumptionCache *(Function &)> LookupAC;63,2616
class HotColdSplittingPass 67,2710

/usr/include/llvm/Transforms/IPO/MemProfContextDisambiguation.h,304
#define LLVM_TRANSFORMS_IPO_MEMPROF_CONTEXT_DISAMBIGUATION_H16,691
class MemProfContextDisambiguation28,973
  bool processModule(31,1146
  bool applyImport(37,1350
  const ModuleSummaryIndex *ImportSummary;ImportSummary40,1457
  std::unique_ptr<ModuleSummaryIndex> ImportSummaryForTesting;44,1640

/usr/include/llvm/Transforms/IPO/OpenMPOpt.h,255
#define LLVM_TRANSFORMS_IPO_OPENMPOPT_H10,410
class OpenMPOptPass 42,1213
  OpenMPOptPass(45,1310
  const ThinOrFullLTOPhase LTOPhase 50,1453
class OpenMPOptCGSCCPass 53,1521
  OpenMPOptCGSCCPass(56,1633
  const ThinOrFullLTOPhase LTOPhase 62,1858

/usr/include/llvm/Transforms/IPO/ProfiledCallGraph.h,1610
#define LLVM_TRANSFORMS_IPO_PROFILEDCALLGRAPH_H10,418
struct ProfiledCallGraphEdge 24,748
  ProfiledCallGraphEdge(25,779
  ProfiledCallGraphNode *Source;Source28,964
  ProfiledCallGraphNode *Target;Target29,997
  uint64_t Weight;30,1030
  operator ProfiledCallGraphNode 34,1153
struct ProfiledCallGraphNode 37,1219
  struct ProfiledCallGraphEdgeComparer 42,1482
    bool operator(43,1523
  using edge 49,1693
  using edges 50,1731
  using iterator 51,1794
  using const_iterator 52,1830
  ProfiledCallGraphNode(54,1881
  FunctionId Name;57,1960
  edges Edges;58,1979
class ProfiledCallGraph 61,1998
  using iterator 63,2032
  ProfiledCallGraph(66,2122
  ProfiledCallGraph(80,2652
  iterator begin(133,4894
  iterator end(134,4944
  ProfiledCallGraphNode *getEntryNode(getEntryNode135,4990
  void addProfiledFunction(137,5051
  void addProfiledCall(150,5550
  void addProfiledCalls(170,6263
  void trimColdEges(192,7121
  ProfiledCallGraphNode Root;208,7461
  std::list<ProfiledCallGraphNode> ProfiledCallGraphNodeList;210,7539
  HashKeyMap<HashKeyMap211,7601
      ProfiledFunctions;212,7666
template <> struct GraphTraits<GraphTraits217,7726
  using NodeType 218,7784
  using NodeRef 219,7826
  using EdgeType 220,7869
  using ChildIteratorType 221,7904
  static NodeRef getEntryNode(223,7959
  static ChildIteratorType child_begin(224,8020
  static ChildIteratorType child_end(225,8099
struct GraphTraits<GraphTraits229,8190
  static NodeRef getEntryNode(231,8282
  static ChildIteratorType nodes_begin(235,8375
  static ChildIteratorType nodes_end(239,8470

/usr/include/llvm/Transforms/IPO/SampleContextTracker.h,1551
#define LLVM_TRANSFORMS_IPO_SAMPLECONTEXTTRACKER_H16,613
class ContextTrieNode 34,1089
  ContextTrieNode(36,1121
  ContextTrieNode *getChildContext(getChildContext42,1432
  ContextTrieNode *getHottestChildContext(getHottestChildContext44,1555
  ContextTrieNode *getOrCreateChildContext(getOrCreateChildContext45,1628
  void removeChildContext(48,1835
  std::map<std::map49,1914
  std::map<std::map64,2485
  std::map<uint64_t, ContextTrieNode> AllChildContext;64,2485
  ContextTrieNode *ParentContext;ParentContext67,2574
  FunctionId FuncName;70,2648
  FunctionSamples *FuncSamples;FuncSamples73,2714
  std::optional<uint32_t> FuncSize;76,2786
  LineLocation CallSiteLoc;79,2864
class SampleContextTracker 89,3432
  using ContextSamplesTy 91,3469
  getContextNodeForProfile(137,6095
  HashKeyMap<HashKeyMap143,6294
      &getFuncToCtxtProfiles(getFuncToCtxtProfiles144,6357
  class Iterator 148,6426
    std::queue<ContextTrieNode *> NodeQueue;151,6639
    explicit Iterator(155,6730
    Iterator &operator++(operator++156,6801
    bool operator==(operator==165,7082
    ContextTrieNode *operator*(operator*173,7354
  Iterator begin(179,7509
  Iterator end(180,7563
  void setContextNode(204,8694
  HashKeyMap<HashKeyMap208,8888
      FuncToCtxtProfiles;209,8951
  std::unordered_map<std::unordered_map212,9045
      ProfileToNodeMap;213,9110
  const DenseMap<DenseMap216,9210
  const DenseMap<uint64_t, StringRef> *GUIDToFuncNameMap;GUIDToFuncNameMap216,9210
  ContextTrieNode RootContext;219,9306

/usr/include/llvm/Transforms/IPO/SampleProfile.h,295
#define LLVM_TRANSFORMS_IPO_SAMPLEPROFILE_H15,581
namespace vfs 34,1081
class SampleProfileLoaderPass 39,1177
  std::string ProfileFileName;49,1546
  std::string ProfileRemappingFileName;50,1577
  const ThinOrFullLTOPhase LTOPhase;51,1617
  IntrusiveRefCntPtr<vfs::FileSystem> FS;52,1654

/usr/include/llvm/Transforms/IPO/SampleProfileProbe.h,613
#define LLVM_TRANSFORMS_IPO_SAMPLEPROFILEPROBE_H16,594
class PseudoProbeVerifier 47,1696
  FuncProbeFactorMap FunctionProbeFactors;58,2093
class SampleProfileProber 73,2643
  Function *getFunction(getFunction80,2899
  uint64_t getFunctionHash(81,2945
  Function *F;F88,3210
  std::string CurModuleUniqueId;92,3316
  uint64_t FunctionHash;95,3414
  BlockIdMap BlockProbeIds;98,3494
  InstructionIdMap CallProbeIds;101,3579
  uint32_t LastProbeId;104,3680
class SampleProfileProbePass 107,3708
  TargetMachine *TM;TM108,3786
  SampleProfileProbePass(111,3816
class PseudoProbeUpdatePass 127,4758

/usr/include/llvm/Transforms/IPO/WholeProgramDevirt.h,1459
#define LLVM_TRANSFORMS_IPO_WHOLEPROGRAMDEVIRT_H15,628
struct AccumBitVector 39,1207
  std::vector<uint8_t> Bytes;40,1231
  std::vector<uint8_t> BytesUsed;43,1341
  std::pair<std::pair45,1376
  std::pair<uint8_t *, uint8_t *> getPtrToData(45,1376
  void setLE(55,1738
  void setBE(67,2129
  void setBit(78,2518
struct VTableBits 88,2822
  GlobalVariable *GV;GV90,2866
  uint64_t ObjectSize 93,2931
  AccumBitVector Before;99,3218
  AccumBitVector After;102,3304
struct TypeMemberInfo 106,3395
  VTableBits *Bits;Bits108,3455
  uint64_t Offset;111,3556
  bool operator<(113,3576
struct VirtualCallTarget 119,3781
  VirtualCallTarget(123,3896
  GlobalValue *Fn;Fn127,4104
  const TypeMemberInfo *TM;TM131,4219
  uint64_t RetVal;135,4397
  bool IsBigEndian;138,4456
  bool WasDevirt;141,4546
  uint64_t minBeforeBytes(147,4847
  uint64_t minAfterBytes(154,5234
  uint64_t allocatedBeforeBytes(158,5417
  uint64_t allocatedAfterBytes(164,5627
  void setBeforeBit(169,5801
  void setAfterBit(175,6016
  void setBeforeBytes(183,6343
  void setAfterBytes(192,6685
struct WholeProgramDevirtPass 223,8107
  ModuleSummaryIndex *ExportSummary;ExportSummary224,8186
  const ModuleSummaryIndex *ImportSummary;ImportSummary225,8223
  bool UseCommandLine 226,8266
  WholeProgramDevirtPass(227,8297
  WholeProgramDevirtPass(229,8404
struct VTableSlotSummary 237,8715
  StringRef TypeID;238,8742
  uint64_t ByteOffset;239,8762

/usr/include/llvm/Transforms/InstCombine/InstCombine.h,576
#define LLVM_TRANSFORMS_INSTCOMBINE_INSTCOMBINE_H17,745
#define DEBUG_TYPE 23,883
namespace llvm 26,972
struct InstCombineOptions 30,1054
  InstCombineOptions &setUseLoopInfo(setUseLoopInfo38,1304
  InstCombineOptions &setVerifyFixpoint(setVerifyFixpoint43,1403
  InstCombineOptions &setMaxIterations(setMaxIterations48,1508
class InstCombinePass 54,1618
  InstructionWorklist Worklist;56,1691
  InstCombineOptions Options;57,1723
class InstructionCombiningPass 71,2198
  InstructionWorklist Worklist;72,2253
  static char ID;75,2294
#undef DEBUG_TYPE98,2973

/usr/include/llvm/Transforms/InstCombine/InstCombiner.h,114
#define LLVM_TRANSFORMS_INSTCOMBINE_INSTCOMBINER_H19,810
#define DEBUG_TYPE 31,1188
#undef DEBUG_TYPE555,22374

/usr/include/llvm/Transforms/Instrumentation/AddressSanitizerOptions.h,345
#define LLVM_TRANSFORMS_INSTRUMENTATION_ADDRESSSANITIZEROPTIONS_H11,587
enum class AsanDtorKind 16,719
  None,17,745
  Global,18,798
  Invalid,19,842
enum class AsanCtorKind 23,939
  None,24,965
  Global25,973
enum class AsanDetectStackUseAfterReturnMode 29,1033
  Never,30,1080
  Runtime,31,1133
  Always,33,1272
  Invalid,34,1326

/usr/include/llvm/Transforms/Instrumentation/BlockCoverageInference.h,225
#define LLVM_TRANSFORMS_INSTRUMENTATION_BLOCKCOVERAGEINFERENCE_H16,668
class BlockCoverageInference 29,942
  BlockCoverageInference(35,1072
  bool shouldInstrumentBlock(38,1210
  static std::string getBlockNames(79,2881

/usr/include/llvm/Transforms/Instrumentation/BoundsChecking.h,163
#define LLVM_TRANSFORMS_INSTRUMENTATION_BOUNDSCHECKING_H10,427
struct BoundsCheckingPass 19,671
  PreservedAnalyses run(20,735
  static bool isRequired(21,802

/usr/include/llvm/Transforms/Instrumentation/ControlHeightReduction.h,182
#define LLVM_TRANSFORMS_INSTRUMENTATION_CONTROLHEIGHTREDUCTION_H15,655
class ControlHeightReductionPass 21,773
  ControlHeightReductionPass(24,873
  PreservedAnalyses run(25,905

/usr/include/llvm/Transforms/Instrumentation/DataFlowSanitizer.h,215
#define LLVM_TRANSFORMS_INSTRUMENTATION_DATAFLOWSANITIZER_H9,429
class DataFlowSanitizerPass 18,592
  std::vector<std::string> ABIListFiles;20,677
  DataFlowSanitizerPass(23,727
  static bool isRequired(27,934

/usr/include/llvm/Transforms/Instrumentation/GCOVProfiler.h,184
#define LLVM_TRANSFORMS_INSTRUMENTATION_GCOVPROFILER_H13,588
class GCOVProfilerPass 20,780
  GCOVProfilerPass(22,854
  PreservedAnalyses run(23,953
  GCOVOptions GCOVOpts;26,1026

/usr/include/llvm/Transforms/Instrumentation/HWAddressSanitizer.h,654
#define LLVM_TRANSFORMS_INSTRUMENTATION_HWADDRESSSANITIZER_H14,675
struct HWAddressSanitizerOptions 24,881
  HWAddressSanitizerOptions(25,916
  HWAddressSanitizerOptions(27,1004
  bool CompileKernel;31,1228
  bool Recover;32,1250
  bool DisableOptimization;33,1266
class HWAddressSanitizerPass 39,1516
  explicit HWAddressSanitizerPass(41,1602
  static bool isRequired(44,1763
  HWAddressSanitizerOptions Options;49,1935
namespace HWASanAccessInfo 52,1976
  AccessSizeShift 58,2184
  IsWriteShift 59,2217
  RecoverShift 60,2237
  MatchAllShift 61,2257
  HasMatchAllShift 62,2289
  CompileKernelShift 63,2314
enum { RuntimeMask 66,2345

/usr/include/llvm/Transforms/Instrumentation/InstrOrderFile.h,129
#define LLVM_TRANSFORMS_INSTRUMENTATION_INSTRORDERFILE_H12,508
class InstrOrderFilePass 20,691
  PreservedAnalyses run(22,769

/usr/include/llvm/Transforms/Instrumentation/KCFI.h,142
#define LLVM_TRANSFORMS_INSTRUMENTATION_KCFI_H15,638
class KCFIPass 20,737
  static bool isRequired(22,795
  PreservedAnalyses run(23,839

/usr/include/llvm/Transforms/Instrumentation/MemorySanitizer.h,512
#define LLVM_TRANSFORMS_INSTRUMENTATION_MEMORYSANITIZER_H14,562
struct MemorySanitizerOptions 24,765
  MemorySanitizerOptions(25,797
  MemorySanitizerOptions(26,876
  MemorySanitizerOptions(28,1018
  bool Kernel;30,1132
  int TrackOrigins;31,1147
  bool Recover;32,1167
  bool EagerChecks;33,1183
struct MemorySanitizerPass 42,1499
  MemorySanitizerPass(43,1572
  PreservedAnalyses run(45,1649
  void printPipeline(46,1712
  static bool isRequired(48,1830
  MemorySanitizerOptions Options;51,1884

/usr/include/llvm/Transforms/Instrumentation/PoisonChecking.h,162
#define LLVM_TRANSFORMS_INSTRUMENTATION_POISONCHECKING_H10,427
struct PoisonCheckingPass 16,537
  PreservedAnalyses run(17,608
  PreservedAnalyses run(18,671

/usr/include/llvm/Transforms/Instrumentation/SanitizerBinaryMetadata.h,917
#define LLVM_TRANSFORMS_INSTRUMENTATION_SANITIZERBINARYMETADATA_H13,578
struct SanitizerBinaryMetadataOptions 23,831
inline constexpr int kSanitizerBinaryMetadataAtomicsBit 30,989
inline constexpr int kSanitizerBinaryMetadataUARBit 31,1050
inline constexpr int kSanitizerBinaryMetadataUARHasSizeBit 32,1107
inline constexpr uint64_t kSanitizerBinaryMetadataAtomics 34,1172
inline constexpr uint64_t kSanitizerBinaryMetadataUAR 36,1277
inline constexpr uint64_t kSanitizerBinaryMetadataUARHasSize 38,1374
inline constexpr char kSanitizerBinaryMetadataCoveredSection[kSanitizerBinaryMetadataCoveredSection41,1486
inline constexpr char kSanitizerBinaryMetadataAtomicsSection[kSanitizerBinaryMetadataAtomicsSection43,1572
class SanitizerBinaryMetadataPass50,1837
  static bool isRequired(57,2139
  const SanitizerBinaryMetadataOptions Options;60,2193
  const ArrayRef<std::string> IgnorelistFiles;61,2241

/usr/include/llvm/Transforms/Instrumentation/SanitizerCoverage.h,332
#define LLVM_TRANSFORMS_INSTRUMENTATION_SANITIZERCOVERAGE_H16,639
class SanitizerCoveragePass 30,1173
  explicit SanitizerCoveragePass(32,1257
  static bool isRequired(47,1986
  SanitizerCoverageOptions Options;50,2040
  std::unique_ptr<SpecialCaseList> Allowlist;52,2077
  std::unique_ptr<SpecialCaseList> Blocklist;53,2123

/usr/include/llvm/Transforms/Instrumentation/ThreadSanitizer.h,275
#define LLVM_TRANSFORMS_INSTRUMENTATION_THREADSANITIZER_H14,563
struct ThreadSanitizerPass 27,992
  PreservedAnalyses run(28,1065
  static bool isRequired(29,1133
struct ModuleThreadSanitizerPass35,1265
  PreservedAnalyses run(37,1352
  static bool isRequired(38,1415

/usr/include/llvm/Transforms/Instrumentation/AddressSanitizer.h,527
#define LLVM_TRANSFORMS_INSTRUMENTATION_ADDRESSSANITIZER_H14,662
struct AddressSanitizerOptions 23,876
class AddressSanitizerPass 39,1480
  static bool isRequired(48,2035
  AddressSanitizerOptions Options;51,2089
  bool UseGlobalGC;52,2124
  bool UseOdrIndicator;53,2144
  AsanDtorKind DestructorKind;54,2168
  AsanCtorKind ConstructorKind;55,2199
struct ASanAccessInfo 58,2235
  const int32_t Packed;59,2259
  const uint8_t AccessSizeIndex;60,2283
  const bool IsWrite;61,2316
  const bool CompileKernel;62,2338

/usr/include/llvm/Transforms/Instrumentation/AddressSanitizerCommon.h,449
#define LLVM_TRANSFORMS_INSTRUMENTATION_ADDRESSSANITIZERCOMMON_H14,613
class InterestingMemoryOperand 25,899
  Use *PtrUse;PtrUse27,940
  bool IsWrite;28,955
  Type *OpType;OpType29,971
  MaybeAlign Alignment;31,1037
  Value *MaybeMask;MaybeMask33,1123
  Value *MaybeEVL;MaybeEVL35,1199
  Value *MaybeStride;MaybeStride37,1283
  InterestingMemoryOperand(39,1306
  Instruction *getInsn(getInsn51,1922
  Value *getPtr(getPtr53,1997

/usr/include/llvm/Transforms/Instrumentation/CFGMST.h,1080
#define LLVM_TRANSFORMS_INSTRUMENTATION_CFGMST_H15,606
#define DEBUG_TYPE 31,1117
template <class Edge, class BBInfo> class CFGMST 39,1314
  Function &F;F40,1365
  std::vector<std::unique_ptr<Edge>> AllEdges;44,1472
  DenseMap<DenseMap47,1581
  DenseMap<const BasicBlock *, std::unique_ptr<BBInfo>> BBInfos;47,1581
  BranchProbabilityInfo *const BPI;53,1811
  BlockFrequencyInfo *const BFI;54,1847
  const bool InstrumentFuncEntry;57,1933
  BBInfo *findAndCompressGroup(findAndCompressGroup60,2044
  bool unionGroups(68,2357
  void handleCoroSuspendEdge(87,2917
  void buildEdges(113,4063
  void sortEdgesByWeight(219,8051
  void computeMinimumSpanningTree(228,8387
  void dumpEdges(257,9258
  Edge &addEdge(addEdge276,10012
  CFGMST(294,10687
  const std::vector<std::unique_ptr<Edge>> &allEdges(allEdges306,11166
  std::vector<std::unique_ptr<Edge>> &allEdges(allEdges310,11255
  size_t numEdges(312,11326
  size_t bbInfoSize(314,11381
  BBInfo &getBBInfo(getBBInfo317,11485
  BBInfo *findBBInfo(findBBInfo324,11709
#undef DEBUG_TYPE 334,11905

/usr/include/llvm/Transforms/Instrumentation/CGProfile.h,143
#define LLVM_TRANSFORMS_INSTRUMENTATION_CGPROFILE_H13,586
class CGProfilePass 19,704
  CGProfilePass(21,772
  PreservedAnalyses run(22,818

/usr/include/llvm/Transforms/Instrumentation/InstrProfiling.h,175
#define LLVM_TRANSFORMS_INSTRUMENTATION_INSTRPROFILING_H14,605
class InstrProfilingLoweringPass25,945
  InstrProfilingLoweringPass(33,1217
  PreservedAnalyses run(36,1339

/usr/include/llvm/Transforms/Instrumentation/MemProfiler.h,322
#define LLVM_TRANSFORMS_INSTRUMENTATION_MEMPROFILER_H13,555
class MemProfilerPass 33,1163
  static bool isRequired(37,1332
class ModuleMemProfilerPass 42,1507
  static bool isRequired(46,1690
class MemProfUsePass 49,1738
  std::string MemoryProfileFileName;56,2015
  IntrusiveRefCntPtr<vfs::FileSystem> FS;57,2052

/usr/include/llvm/Transforms/Instrumentation/PGOInstrumentation.h,653
#define LLVM_TRANSFORMS_INSTRUMENTATION_PGOINSTRUMENTATION_H16,639
namespace vfs 33,992
class PGOInstrumentationGenCreateVar43,1420
  PGOInstrumentationGenCreateVar(46,1526
  std::string CSInstrName;51,1699
class PGOInstrumentationGen 55,1797
  PGOInstrumentationGen(57,1881
  bool IsCS;62,2067
class PGOInstrumentationUse 66,2154
  std::string ProfileFileName;75,2518
  std::string ProfileRemappingFileName;76,2549
  bool IsCS;78,2642
  IntrusiveRefCntPtr<vfs::FileSystem> FS;79,2655
class PGOIndirectCallPromotion 83,2748
  PGOIndirectCallPromotion(85,2838
  bool InLTO;91,3034
  bool SamplePGO;92,3048
class PGOMemOPSizeOpt 96,3138

/usr/include/llvm/Transforms/Scalar/ADCE.h,103
#define LLVM_TRANSFORMS_SCALAR_ADCE_H17,796
struct ADCEPass 31,1235
  PreservedAnalyses run(32,1279

/usr/include/llvm/Transforms/Scalar/AlignmentFromAssumptions.h,237
#define LLVM_TRANSFORMS_SCALAR_ALIGNMENTFROMASSUMPTIONS_H18,854
struct AlignmentFromAssumptionsPass29,1045
  PreservedAnalyses run(31,1140
  bool runImpl(34,1230
  bool extractAlignmentInfo(40,1403
  bool processAssumption(42,1548

/usr/include/llvm/Transforms/Scalar/AnnotationRemarks.h,160
#define LLVM_TRANSFORMS_SCALAR_ANNOTATIONREMARKS_H15,586
struct AnnotationRemarksPass 23,707
  PreservedAnalyses run(24,784
  static bool isRequired(25,851

/usr/include/llvm/Transforms/Scalar/BDCE.h,101
#define LLVM_TRANSFORMS_SCALAR_BDCE_H17,737
struct BDCEPass 26,893
  PreservedAnalyses run(27,937

/usr/include/llvm/Transforms/Scalar/CallSiteSplitting.h,127
#define LLVM_TRANSFORMS_SCALAR_CALLSITESPLITTING_H10,417
struct CallSiteSplittingPass 18,538
  PreservedAnalyses run(20,646

/usr/include/llvm/Transforms/Scalar/ConstraintElimination.h,133
#define LLVM_TRANSFORMS_SCALAR_CONSTRAINTELIMINATION_H10,425
class ConstraintEliminationPass16,533
  PreservedAnalyses run(19,629

/usr/include/llvm/Transforms/Scalar/CorrelatedValuePropagation.h,144
#define LLVM_TRANSFORMS_SCALAR_CORRELATEDVALUEPROPAGATION_H10,430
struct CorrelatedValuePropagationPass18,560
  PreservedAnalyses run(20,652

/usr/include/llvm/Transforms/Scalar/DCE.h,143
#define LLVM_TRANSFORMS_SCALAR_DCE_H14,566
class DCEPass 23,711
  PreservedAnalyses run(25,767
class RedundantDbgInstEliminationPass28,838

/usr/include/llvm/Transforms/Scalar/DFAJumpThreading.h,125
#define LLVM_TRANSFORMS_SCALAR_DFAJUMPTHREADING_H14,574
struct DFAJumpThreadingPass 22,694
  PreservedAnalyses run(23,762

/usr/include/llvm/Transforms/Scalar/DeadStoreElimination.h,117
#define LLVM_TRANSFORMS_SCALAR_DEADSTOREELIMINATION_H18,752
class DSEPass 28,1018
  PreservedAnalyses run(30,1074

/usr/include/llvm/Transforms/Scalar/DivRemPairs.h,115
#define LLVM_TRANSFORMS_SCALAR_DIVREMPAIRS_H15,634
struct DivRemPairsPass 23,847
  PreservedAnalyses run(25,920

/usr/include/llvm/Transforms/Scalar/EarlyCSE.h,194
#define LLVM_TRANSFORMS_SCALAR_EARLYCSE_H15,575
struct EarlyCSEPass 30,1112
  EarlyCSEPass(31,1164
  PreservedAnalyses run(34,1277
  void printPipeline(35,1344
  bool UseMemorySSA;38,1463

/usr/include/llvm/Transforms/Scalar/FlattenCFG.h,113
#define LLVM_TRANSFORMS_SCALAR_FLATTENCFG_H15,650
struct FlattenCFGPass 20,746
  PreservedAnalyses run(21,802

/usr/include/llvm/Transforms/Scalar/Float2Int.h,648
#define LLVM_TRANSFORMS_SCALAR_FLOAT2INT_H15,648
class Float2IntPass 31,984
  PreservedAnalyses run(33,1052
  bool runImpl(36,1142
  void findRoots(39,1206
  void seen(40,1262
  ConstantRange badRange(41,1308
  ConstantRange unknownRange(42,1336
  ConstantRange validateRange(43,1368
  MapVector<MapVector51,1617
  MapVector<Instruction *, ConstantRange> SeenInsts;51,1617
  SmallSetVector<SmallSetVector52,1670
  SmallSetVector<Instruction *, 8> Roots;52,1670
  EquivalenceClasses<Instruction *> ECs;53,1712
  MapVector<MapVector54,1753
  MapVector<Instruction *, Value *> ConvertedInsts;54,1753
  LLVMContext *Ctx;Ctx55,1805

/usr/include/llvm/Transforms/Scalar/GVNExpression.h,3577
#define LLVM_TRANSFORMS_SCALAR_GVNEXPRESSION_H17,601
enum ExpressionType 42,1183
  ET_Base,43,1205
  ET_Constant,44,1216
  ET_Variable,45,1231
  ET_Dead,46,1246
  ET_Unknown,47,1257
  ET_BasicStart,48,1271
  ET_Basic,49,1288
  ET_AggregateValue,50,1300
  ET_Phi,51,1321
  ET_MemoryStart,52,1331
  ET_Call,53,1349
  ET_Load,54,1360
  ET_Store,55,1371
  ET_MemoryEnd,56,1383
  ET_BasicEnd57,1399
class Expression 60,1417
  ExpressionType EType;62,1445
  unsigned Opcode;63,1469
  mutable hash_code HashVal 64,1488
  Expression(67,1530
  static unsigned getEmptyKey(73,1745
  static unsigned getTombstoneKey(74,1793
  bool operator!=(operator!=76,1846
  bool operator==(operator==77,1925
  hash_code getComputedHash(91,2458
  virtual bool equals(100,2810
  virtual bool exactlyEquals(104,2987
  unsigned getOpcode(108,3132
  void setOpcode(109,3180
  ExpressionType getExpressionType(110,3235
  virtual hash_code getHashValue(113,3367
  virtual void printInternal(116,3456
  void print(122,3652
inline raw_ostream &operator<<(operator<<131,3797
class BasicExpression 136,3899
  using RecyclerType 138,3952
  using RecyclerCapacity 139,3999
  Value **Operands Operands141,4051
  unsigned MaxOperands;142,4081
  unsigned NumOperands 143,4105
  Type *ValueType ValueType144,4133
  BasicExpression(147,4171
  BasicExpression(149,4261
  static bool classof(156,4551
  void swapOperands(163,4787
  Value *getOperand(getOperand167,4897
  void setOperand(173,5071
  unsigned getNumOperands(179,5259
  using op_iterator 181,5318
  using const_op_iterator 182,5350
  op_iterator op_begin(184,5395
  op_iterator op_end(185,5441
  const_op_iterator op_begin(186,5499
  const_op_iterator op_end(187,5557
  iterator_range<op_iterator> operands(188,5627
  iterator_range<const_op_iterator> operands(191,5736
  void op_push_back(195,5864
  bool op_empty(200,6078
  void allocateOperands(202,6137
  void deallocateOperands(206,6356
  void setType(210,6484
  Type *getType(getType211,6527
  bool equals(213,6574
  hash_code getHashValue(222,6882
  void printInternal(228,7090
class op_inserter 243,7475
  using Container 245,7504
  Container *BE;BE247,7542
  using iterator_category 250,7568
  using value_type 251,7622
  using difference_type 252,7649
  using pointer 253,7681
  using reference 254,7705
  explicit op_inserter(256,7732
  explicit op_inserter(257,7787
  op_inserter &operator=(operator=259,7842
  op_inserter &operator*(operator*263,7930
  op_inserter &operator++(operator++264,7975
  op_inserter &operator++(operator++265,8021
class MemoryExpression 268,8074
  const MemoryAccess *MemoryLeader;MemoryLeader270,8133
  MemoryExpression(273,8178
  static bool classof(280,8527
  hash_code getHashValue(285,8684
  bool equals(289,8811
  const MemoryAccess *getMemoryLeader(getMemoryLeader297,9060
  void setMemoryLeader(298,9131
class int_op_inserter 480,15340
  using Container 482,15373
  Container *AVE;AVE484,15420
  using iterator_category 487,15447
  using value_type 488,15501
  using difference_type 489,15528
  using pointer 490,15560
  using reference 491,15584
  explicit int_op_inserter(493,15611
  explicit int_op_inserter(494,15680
  int_op_inserter &operator=(operator=496,15749
  int_op_inserter &operator*(operator*500,15852
  int_op_inserter &operator++(operator++501,15901
  int_op_inserter &operator++(operator++502,15951
class DeadExpression final : public Expression 541,17032
class ConstantExpression final : public Expression 588,18505

/usr/include/llvm/Transforms/Scalar/GuardWidening.h,152
#define LLVM_TRANSFORMS_SCALAR_GUARDWIDENING_H16,680
struct GuardWideningPass 27,874
  PreservedAnalyses run(28,943
  PreservedAnalyses run(29,1010

/usr/include/llvm/Transforms/Scalar/IndVarSimplify.h,177
#define LLVM_TRANSFORMS_SCALAR_INDVARSIMPLIFY_H15,592
class IndVarSimplifyPass 25,771
  bool WidenIndVars;27,884
  IndVarSimplifyPass(30,914
  PreservedAnalyses run(31,993

/usr/include/llvm/Transforms/Scalar/InductiveRangeCheckElimination.h,126
#define LLVM_TRANSFORMS_SCALAR_INDUCTIVERANGECHECKELIMINATION_H15,613
class IRCEPass 21,730
  PreservedAnalyses run(23,788

/usr/include/llvm/Transforms/Scalar/InferAddressSpaces.h,195
#define LLVM_TRANSFORMS_SCALAR_INFERADDRESSSPACES_H10,422
struct InferAddressSpacesPass 16,527
  InferAddressSpacesPass(17,599
  InferAddressSpacesPass(18,627
  PreservedAnalyses run(19,676

/usr/include/llvm/Transforms/Scalar/InstSimplifyPass.h,122
#define LLVM_TRANSFORMS_SCALAR_INSTSIMPLIFYPASS_H15,598
class InstSimplifyPass 32,1291
  PreservedAnalyses run(34,1365

/usr/include/llvm/Transforms/Scalar/JumpThreading.h,1071
#define LLVM_TRANSFORMS_SCALAR_JUMPTHREADING_H15,557
enum ConstantPreference 59,1770
enum ConstantPreference { WantInteger,59,1770
enum ConstantPreference { WantInteger, WantBlockAddress 59,1770
class JumpThreadingPass 78,2462
  Function *F F79,2530
  FunctionAnalysisManager *FAM FAM80,2555
  TargetLibraryInfo *TLI TLI81,2597
  TargetTransformInfo *TTI TTI82,2633
  LazyValueInfo *LVI LVI83,2671
  AAResults *AA AA84,2703
  std::unique_ptr<DomTreeUpdater> DTU;85,2730
  std::optional<BlockFrequencyInfo *> BFI;86,2769
  std::optional<BranchProbabilityInfo *> BPI;87,2812
  bool ChangedSinceLastAnalysisUpdate 88,2858
  bool HasGuards 89,2905
  SmallPtrSet<SmallPtrSet91,2971
  SmallPtrSet<const BasicBlock *, 16> LoopHeaders;91,2971
  SmallSet<SmallSet93,3028
  SmallSet<AssertingVH<const BasicBlock>, 16> LoopHeaders;93,3028
  unsigned BBDupThreshold;96,3095
  unsigned DefaultBBDupThreshold;97,3122
  DomTreeUpdater *getDomTreeUpdater(getDomTreeUpdater112,3631
  DenseMap<DenseMap118,3946
  computeValueKnownInPredecessors(135,4866

/usr/include/llvm/Transforms/Scalar/LICM.h,416
#define LLVM_TRANSFORMS_SCALAR_LICM_H33,1837
struct LICMOptions 48,2163
  unsigned MssaOptCap;49,2184
  unsigned MssaNoAccForPromotionCap;50,2207
  bool AllowSpeculation;51,2244
  LICMOptions(53,2270
  LICMOptions(58,2427
class LICMPass 66,2722
  LICMOptions Opts;67,2772
  LICMPass(70,2801
  LICMPass(74,3020
class LNICMPass 84,3370
  LICMOptions Opts;85,3422
  LNICMPass(88,3451
  LNICMPass(92,3674

/usr/include/llvm/Transforms/Scalar/LoopBoundSplit.h,122
#define LLVM_TRANSFORMS_SCALAR_LOOPBOUNDSPLIT_H10,418
class LoopBoundSplitPass 34,1252
  PreservedAnalyses run(36,1330

/usr/include/llvm/Transforms/Scalar/LoopDataPrefetch.h,124
#define LLVM_TRANSFORMS_SCALAR_LOOPDATAPREFETCH_H14,590
class LoopDataPrefetchPass 23,771
  PreservedAnalyses run(28,928

/usr/include/llvm/Transforms/Scalar/LoopDeletion.h,116
#define LLVM_TRANSFORMS_SCALAR_LOOPDELETION_H14,567
class LoopDeletionPass 24,744
  PreservedAnalyses run(28,851

/usr/include/llvm/Transforms/Scalar/LoopDistribute.h,120
#define LLVM_TRANSFORMS_SCALAR_LOOPDISTRIBUTE_H17,767
class LoopDistributePass 25,885
  PreservedAnalyses run(27,963

/usr/include/llvm/Transforms/Scalar/LoopFlatten.h,114
#define LLVM_TRANSFORMS_SCALAR_LOOPFLATTEN_H14,565
class LoopFlattenPass 23,744
  PreservedAnalyses run(27,848

/usr/include/llvm/Transforms/Scalar/LoopFuse.h,108
#define LLVM_TRANSFORMS_SCALAR_LOOPFUSE_H15,558
class LoopFusePass 23,670
  PreservedAnalyses run(25,736

/usr/include/llvm/Transforms/Scalar/LoopIdiomRecognize.h,211
#define LLVM_TRANSFORMS_SCALAR_LOOPIDIOMRECOGNIZE_H16,681
struct DisableLIRP 28,952
  static bool All;30,1019
  static bool Memset;33,1076
  static bool Memcpy;36,1136
class LoopIdiomRecognizePass 40,1202

/usr/include/llvm/Transforms/Scalar/LoopInstSimplify.h,124
#define LLVM_TRANSFORMS_SCALAR_LOOPINSTSIMPLIFY_H14,584
class LoopInstSimplifyPass 25,803
  PreservedAnalyses run(27,885

/usr/include/llvm/Transforms/Scalar/LoopInterchange.h,123
#define LLVM_TRANSFORMS_SCALAR_LOOPINTERCHANGE_H10,419
struct LoopInterchangePass 20,603
  PreservedAnalyses run(21,676

/usr/include/llvm/Transforms/Scalar/LoopLoadElimination.h,131
#define LLVM_TRANSFORMS_SCALAR_LOOPLOADELIMINATION_H17,688
struct LoopLoadEliminationPass 27,897
  PreservedAnalyses run(28,978

/usr/include/llvm/Transforms/Scalar/LoopPassManager.h,2661
#define LLVM_TRANSFORMS_SCALAR_LOOPPASSMANAGER_H37,1654
  PassManager(81,3230
  PassManager &operator=(operator=86,3423
      addPass(107,4446
      addPass(121,5063
      addPass(139,5918
      addPass(154,6595
  bool isEmpty(166,7172
  static bool isRequired(168,7253
  size_t getNumLoopPasses(170,7298
  size_t getNumLoopNestPasses(171,7362
  using LoopPassConceptT 174,7446
  using LoopNestPassConceptT 177,7598
  BitVector IsLoopNestPass;183,7879
  std::vector<std::unique_ptr<LoopPassConceptT>> LoopPasses;184,7907
  std::vector<std::unique_ptr<LoopNestPassConceptT>> LoopNestPasses;185,7968
  template <typename IRUnitT,190,8229
  static const Loop &getLoopFromIR(getLoopFromIR204,8921
  static const Loop &getLoopFromIR(getLoopFromIR205,8979
typedef PassManager<Loop,Loop215,9326
typedef PassManager<Loop, LoopAnalysisManager,215,9326
    LoopPassManager;217,9438
  PreservedAnalyses run(228,9972
  void printPipeline(233,10195
using RequireAnalysisLoopPass 243,10554
class LPMUpdater 262,11517
  bool skipCurrentLoop(270,11855
  void markLoopAsDeleted(282,12412
  void setParentLoop(291,12715
  void addChildLoops(303,13104
  void addSiblingLoops(330,14235
  void revisitCurrentLoop(351,15002
  bool isLoopNestChanged(359,15211
  void markLoopNestChanged(365,15377
  SmallPriorityWorklist<SmallPriorityWorklist373,15585
  SmallPriorityWorklist<Loop *, 4> &Worklist;Worklist373,15585
  LoopAnalysisManager &LAM;LAM376,15693
  Loop *CurrentL;CurrentL378,15722
  bool SkipCurrentLoop;379,15740
  const bool LoopNestMode;380,15764
  bool LoopNestChanged;381,15791
  Loop *ParentL;ParentL386,15967
  LPMUpdater(389,15992
template <typename IRUnitT,396,16272
std::optional<PreservedAnalyses> LoopPassManager::runSinglePass(runSinglePass397,16316
class FunctionToLoopPassAdaptor434,18159
  using PassConceptT 437,18255
      detail::PassConcept<Loop, LoopAnalysisManager,438,18278
  explicit FunctionToLoopPassAdaptor(441,18404
  static bool isRequired(459,19324
  bool isLoopNestMode(461,19369
  std::unique_ptr<PassConceptT> Pass;464,19434
  FunctionPassManager LoopCanonicalizationFPM;466,19473
  bool UseMemorySSA 468,19521
  bool UseBlockFrequencyInfo 469,19550
  bool UseBranchProbabilityInfo 470,19588
  const bool LoopNestMode;471,19629
createFunctionToLoopPassAdaptor(481,19973
inline std::enable_if_t<!is_detected<HasRunOnLoopT, LoopNestPassT>::value,value498,20893
createFunctionToLoopPassAdaptor(500,21019
createFunctionToLoopPassAdaptor<createFunctionToLoopPassAdaptor521,22049
class PrintLoopPass 541,22970
  raw_ostream &OS;OS542,23030
  std::string Banner;543,23049

/usr/include/llvm/Transforms/Scalar/LoopPredication.h,122
#define LLVM_TRANSFORMS_SCALAR_LOOPPREDICATION_H15,626
class LoopPredicationPass 25,841
  PreservedAnalyses run(27,921

/usr/include/llvm/Transforms/Scalar/LoopReroll.h,112
#define LLVM_TRANSFORMS_SCALAR_LOOPREROLL_H10,414
class LoopRerollPass 17,563
  PreservedAnalyses run(19,633

/usr/include/llvm/Transforms/Scalar/LoopRotation.h,251
#define LLVM_TRANSFORMS_SCALAR_LOOPROTATION_H14,567
class LoopRotatePass 24,786
  LoopRotatePass(26,856
  PreservedAnalyses run(28,956
  void printPipeline(31,1088
  const bool EnableHeaderDuplication;35,1216
  const bool PrepareForLTO;36,1254

/usr/include/llvm/Transforms/Scalar/LoopSimplifyCFG.h,124
#define LLVM_TRANSFORMS_SCALAR_LOOPSIMPLIFYCFG_H17,791
class LoopSimplifyCFGPass 28,1039
  PreservedAnalyses run(30,1119

/usr/include/llvm/Transforms/Scalar/LoopSink.h,110
#define LLVM_TRANSFORMS_SCALAR_LOOPSINK_H14,559
class LoopSinkPass 33,1319
  PreservedAnalyses run(35,1385

/usr/include/llvm/Transforms/Scalar/LoopStrengthReduce.h,131
#define LLVM_TRANSFORMS_SCALAR_LOOPSTRENGTHREDUCE_H22,1033
class LoopStrengthReducePass 33,1256
  PreservedAnalyses run(35,1342

/usr/include/llvm/Transforms/Scalar/LoopUnrollAndJamPass.h,197
#define LLVM_TRANSFORMS_SCALAR_LOOPUNROLLANDJAMPASS_H10,424
class LoopUnrollAndJamPass 20,655
  const int OptLevel;21,729
  explicit LoopUnrollAndJamPass(24,760
  PreservedAnalyses run(25,834

/usr/include/llvm/Transforms/Scalar/LoopUnrollPass.h,1196
#define LLVM_TRANSFORMS_SCALAR_LOOPUNROLLPASS_H10,418
class LoopFullUnrollPass 26,786
  const int OptLevel;27,856
  const bool OnlyWhenForced;32,1092
  const bool ForgetSCEV;37,1352
  explicit LoopFullUnrollPass(40,1386
struct LoopUnrollOptions 61,2261
  std::optional<bool> AllowPartial;62,2288
  std::optional<bool> AllowPeeling;63,2324
  std::optional<bool> AllowRuntime;64,2360
  std::optional<bool> AllowUpperBound;65,2396
  std::optional<bool> AllowProfileBasedPeeling;66,2435
  std::optional<unsigned> FullUnrollMaxCount;67,2483
  int OptLevel;68,2529
  bool OnlyWhenForced;73,2759
  const bool ForgetSCEV;78,3013
  LoopUnrollOptions(80,3039
  LoopUnrollOptions &setPartial(setPartial87,3343
  LoopUnrollOptions &setRuntime(setRuntime93,3512
  LoopUnrollOptions &setPeeling(setPeeling99,3651
  LoopUnrollOptions &setUpperBound(setUpperBound106,3835
  LoopUnrollOptions &setOptLevel(setOptLevel112,4014
  LoopUnrollOptions &setProfileBasedPeeling(setProfileBasedPeeling118,4154
  LoopUnrollOptions &setFullUnrollMaxCount(setFullUnrollMaxCount124,4301
class LoopUnrollPass 133,4629
  LoopUnrollOptions UnrollOpts;134,4691
  explicit LoopUnrollPass(139,4874

/usr/include/llvm/Transforms/Scalar/LoopVersioningLICM.h,128
#define LLVM_TRANSFORMS_SCALAR_LOOPVERSIONINGLICM_H10,422
class LoopVersioningLICMPass 19,604
  PreservedAnalyses run(21,690

/usr/include/llvm/Transforms/Scalar/LowerAtomicPass.h,151
#define LLVM_TRANSFORMS_SCALAR_LOWERATOMICPASS_H15,622
class LowerAtomicPass 22,792
  PreservedAnalyses run(24,864
  static bool isRequired(25,929

/usr/include/llvm/Transforms/Scalar/LowerConstantIntrinsics.h,140
#define LLVM_TRANSFORMS_SCALAR_LOWERCONSTANTINTRINSICS_H16,621
struct LowerConstantIntrinsicsPass 24,748
  PreservedAnalyses run(37,1350

/usr/include/llvm/Transforms/Scalar/LowerExpectIntrinsic.h,134
#define LLVM_TRANSFORMS_SCALAR_LOWEREXPECTINTRINSIC_H16,614
struct LowerExpectIntrinsicPass 24,738
  PreservedAnalyses run(32,1193

/usr/include/llvm/Transforms/Scalar/LowerGuardIntrinsic.h,131
#define LLVM_TRANSFORMS_SCALAR_LOWERGUARDINTRINSIC_H15,684
struct LowerGuardIntrinsicPass 21,790
  PreservedAnalyses run(22,864

/usr/include/llvm/Transforms/Scalar/LowerMatrixIntrinsics.h,255
#define LLVM_TRANSFORMS_SCALAR_LOWERMATRIXINTRINSICS_H14,577
class LowerMatrixIntrinsicsPass19,684
  bool Minimal;21,772
  LowerMatrixIntrinsicsPass(24,797
  PreservedAnalyses run(25,869
  void printPipeline(26,936
  static bool isRequired(28,1054

/usr/include/llvm/Transforms/Scalar/LowerWidenableCondition.h,139
#define LLVM_TRANSFORMS_SCALAR_LOWERWIDENABLECONDITION_H14,613
struct LowerWidenableConditionPass 20,723
  PreservedAnalyses run(21,805

/usr/include/llvm/Transforms/Scalar/MakeGuardsExplicit.h,132
#define LLVM_TRANSFORMS_SCALAR_MAKEGUARDSEXPLICIT_H34,1561
struct MakeGuardsExplicitPass 40,1666
  PreservedAnalyses run(41,1745

/usr/include/llvm/Transforms/Scalar/MergeICmps.h,112
#define LLVM_TRANSFORMS_SCALAR_MERGEICMPS_H10,398
struct MergeICmpsPass18,512
  PreservedAnalyses run(20,572

/usr/include/llvm/Transforms/Scalar/MergedLoadStoreMotion.h,409
#define LLVM_TRANSFORMS_SCALAR_MERGEDLOADSTOREMOTION_H24,1186
struct MergedLoadStoreMotionOptions 31,1351
  bool SplitFooterBB;32,1389
  MergedLoadStoreMotionOptions(33,1411
  MergedLoadStoreMotionOptions &splitFooterBB(splitFooterBB36,1511
class MergedLoadStoreMotionPass42,1622
  MergedLoadStoreMotionOptions Options;44,1710
  MergedLoadStoreMotionPass(47,1759
  MergedLoadStoreMotionPass(49,1858

/usr/include/llvm/Transforms/Scalar/NaryReassociate.h,1434
#define LLVM_TRANSFORMS_SCALAR_NARYREASSOCIATE_H79,3101
class NaryReassociatePass 102,3558
  PreservedAnalyses run(104,3638
  bool runImpl(107,3728
  bool doOneIteration(114,4042
  Instruction *tryReassociate(tryReassociate117,4115
  Instruction *tryReassociateGEP(tryReassociateGEP120,4223
  GetElementPtrInst *tryReassociateGEPAtIndex(tryReassociateGEPAtIndex129,4673
  GetElementPtrInst *tryReassociateGEPAtIndex(tryReassociateGEPAtIndex134,4964
  Instruction *tryReassociateBinaryOp(tryReassociateBinaryOp139,5233
  Instruction *tryReassociateBinaryOp(tryReassociateBinaryOp143,5383
  Instruction *tryReassociatedBinaryOp(tryReassociatedBinaryOp146,5563
  bool matchTernaryOp(150,5735
  const SCEV *getBinarySCEV(getBinarySCEV153,5847
  Instruction *findClosestMatchingDominator(findClosestMatchingDominator158,6073
  Instruction *matchAndReassociateMinOrMax(matchAndReassociateMinOrMax166,6510
  Value *tryReassociateMinOrMax(tryReassociateMinOrMax171,6693
  bool requiresSignExtension(178,7088
  AssumptionCache *AC;AC180,7157
  const DataLayout *DL;DL181,7180
  DominatorTree *DT;DT182,7204
  ScalarEvolution *SE;SE183,7225
  TargetLibraryInfo *TLI;TLI184,7248
  TargetTransformInfo *TTI;TTI185,7274
  DenseMap<const SCEV 196,7625
  DenseMap<const SCEV *, SmallVector<WeakTrackingVH,WeakTrackingVH196,7625
  DenseMap<const SCEV *, SmallVector<WeakTrackingVH, 2>> SeenExprs;196,7625

/usr/include/llvm/Transforms/Scalar/NewGVN.h,104
#define LLVM_TRANSFORMS_SCALAR_NEWGVN_H15,584
class NewGVNPass 23,694
  PreservedAnalyses run(26,794

/usr/include/llvm/Transforms/Scalar/PartiallyInlineLibCalls.h,137
#define LLVM_TRANSFORMS_SCALAR_PARTIALLYINLINELIBCALLS_H16,696
class PartiallyInlineLibCallsPass22,821
  PreservedAnalyses run(25,921

/usr/include/llvm/Transforms/Scalar/PlaceSafepoints.h,173
#define LLVM_TRANSFORMS_SCALAR_PLACESAFEPOINTS_H51,2859
class PlaceSafepointsPass 59,2987
  PreservedAnalyses run(61,3067
  bool runImpl(63,3135
  void cleanup(65,3195

/usr/include/llvm/Transforms/Scalar/Reg2Mem.h,107
#define LLVM_TRANSFORMS_SCALAR_REG2MEM_H14,557
class RegToMemPass 20,651
  PreservedAnalyses run(22,717

/usr/include/llvm/Transforms/Scalar/RewriteStatepointsForGC.h,166
#define LLVM_TRANSFORMS_SCALAR_REWRITESTATEPOINTSFORGC_H17,729
struct RewriteStatepointsForGC 29,943
  PreservedAnalyses run(30,1024
  bool runOnFunction(32,1088

/usr/include/llvm/Transforms/Scalar/SCCP.h,102
#define LLVM_TRANSFORMS_SCALAR_SCCP_H21,851
class SCCPPass 29,1030
  PreservedAnalyses run(31,1088

/usr/include/llvm/Transforms/Scalar/ScalarizeMaskedMemIntrin.h,140
#define LLVM_TRANSFORMS_SCALAR_SCALARIZEMASKEDMEMINTRIN_H17,757
struct ScalarizeMaskedMemIntrinPass23,868
  PreservedAnalyses run(25,963

/usr/include/llvm/Transforms/Scalar/SeparateConstOffsetFromGEP.h,237
#define LLVM_TRANSFORMS_SCALAR_SEPARATECONSTOFFSETFROMGEP_H10,430
class SeparateConstOffsetFromGEPPass16,543
  bool LowerGEP;18,641
  SeparateConstOffsetFromGEPPass(21,667
  void printPipeline(22,747
  PreservedAnalyses run(24,865

/usr/include/llvm/Transforms/Scalar/SimplifyCFG.h,238
#define LLVM_TRANSFORMS_SCALAR_SIMPLIFYCFG_H15,625
class SimplifyCFGPass 29,1184
  SimplifyCFGOptions Options;30,1248
  SimplifyCFGPass(37,1541
  SimplifyCFGPass(40,1615
  PreservedAnalyses run(43,1712
  void printPipeline(45,1780

/usr/include/llvm/Transforms/Scalar/Sink.h,103
#define LLVM_TRANSFORMS_SCALAR_SINK_H15,641
class SinkingPass 24,808
  PreservedAnalyses run(26,872

/usr/include/llvm/Transforms/Scalar/StraightLineStrengthReduce.h,143
#define LLVM_TRANSFORMS_SCALAR_STRAIGHTLINESTRENGTHREDUCE_H10,428
class StraightLineStrengthReducePass16,541
  PreservedAnalyses run(19,647

/usr/include/llvm/Transforms/Scalar/StructurizeCFG.h,121
#define LLVM_TRANSFORMS_SCALAR_STRUCTURIZECFG_H10,418
struct StructurizeCFGPass 15,518
  PreservedAnalyses run(16,582

/usr/include/llvm/Transforms/Scalar/TLSVariableHoist.h,465
#define LLVM_TRANSFORMS_SCALAR_TLSVARIABLEHOIST_H62,2241
struct TLSUser 84,2824
  Instruction *Inst;Inst85,2841
  unsigned OpndIdx;86,2862
  TLSUser(88,2883
struct TLSCandidate 92,3019
  SmallVector<TLSUser,TLSUser93,3041
  SmallVector<TLSUser, 8> Users;93,3041
  void addUser(96,3131
class TLSVariableHoistPass 103,3259
  DominatorTree *DT;DT111,3503
  LoopInfo *LI;LI112,3524
  using TLSCandMapType 115,3609
  TLSCandMapType TLSCandMap;116,3687

/usr/include/llvm/Transforms/Scalar/TailRecursionElimination.h,132
#define LLVM_TRANSFORMS_SCALAR_TAILRECURSIONELIMINATION_H53,3048
struct TailCallElimPass 61,3176
  PreservedAnalyses run(62,3236

/usr/include/llvm/Transforms/Scalar/WarnMissedTransforms.h,136
#define LLVM_TRANSFORMS_SCALAR_WARNMISSEDTRANSFORMS_H14,584
class WarnMissedTransformationsPass20,723
  PreservedAnalyses run(25,882

/usr/include/llvm/Transforms/Scalar/ConstantHoisting.h,1899
#define LLVM_TRANSFORMS_SCALAR_CONSTANTHOISTING_H37,1960
struct ConstantUser 70,2807
  Instruction *Inst;Inst71,2829
  unsigned OpndIdx;72,2850
  ConstantUser(74,2871
using ConstantUseListType 77,2953
struct ConstantCandidate 80,3066
  ConstantUseListType Uses;81,3093
  ConstantInt *ConstInt;ConstInt85,3353
  ConstantExpr *ConstExpr;ConstExpr86,3378
  unsigned CumulativeCost 87,3405
  ConstantCandidate(89,3437
  void addUser(93,3622
struct RebasedConstantInfo 101,3917
  ConstantUseListType Uses;102,3946
  Constant *Offset;Offset103,3974
  Type *Ty;Ty104,3994
  RebasedConstantInfo(106,4007
using RebasedConstantListType 110,4154
struct ConstantInfo 113,4275
  ConstantInt *BaseInt;BaseInt117,4529
  ConstantExpr *BaseExpr;BaseExpr118,4553
  RebasedConstantListType RebasedConstants;119,4579
class ConstantHoistingPass 124,4658
  void cleanup(133,5004
  using ConstPtrUnionType 146,5326
  using ConstCandMapType 147,5399
  const TargetTransformInfo *TTI;TTI149,5466
  DominatorTree *DT;DT150,5500
  BlockFrequencyInfo *BFI;BFI151,5521
  LLVMContext *Ctx;Ctx152,5548
  const DataLayout *DL;DL153,5568
  BasicBlock *Entry;Entry154,5592
  ProfileSummaryInfo *PSI;PSI155,5613
  bool OptForSize;156,5640
  using ConstCandVecType 159,5724
  using GVCandVecMapType 160,5795
  ConstCandVecType ConstIntCandVec;161,5869
  GVCandVecMapType ConstGEPCandMap;162,5905
  using ConstInfoVecType 165,5999
  using GVInfoVecMapType 166,6068
  ConstInfoVecType ConstIntInfoVec;167,6142
  GVInfoVecMapType ConstGEPInfoMap;168,6178
  MapVector<MapVector171,6272
  MapVector<Instruction *, Instruction *> ClonedCastMap;171,6272
  struct UserAdjustment 203,8122
    Constant *Offset;Offset204,8148
    Type *Ty;Ty205,8170
    Instruction *MatInsertPt;MatInsertPt206,8184
    const consthoist::ConstantUser User;207,8214
    UserAdjustment(208,8255

/usr/include/llvm/Transforms/Scalar/GVN.h,2899
#define LLVM_TRANSFORMS_SCALAR_GVN_H16,693
struct GVNOptions 74,2295
  std::optional<bool> AllowPRE;75,2315
  std::optional<bool> AllowLoadPRE;76,2347
  std::optional<bool> AllowLoadInLoopPRE;77,2383
  std::optional<bool> AllowLoadPRESplitBackedge;78,2425
  std::optional<bool> AllowMemDep;79,2474
  GVNOptions &setPRE(setPRE84,2575
  GVNOptions &setLoadPRE(setLoadPRE90,2698
  GVNOptions &setLoadInLoopPRE(setLoadInLoopPRE95,2790
  GVNOptions &setLoadPRESplitBackedge(setLoadPRESplitBackedge101,2953
  GVNOptions &setMemDep(setMemDep107,3146
class GVNPass 117,3379
  GVNOptions Options;118,3427
  GVNPass(123,3480
  void markInstructionForDeletion(133,3863
  DominatorTree &getDominatorTree(getDominatorTree138,3969
  AAResults *getAliasAnalysis(getAliasAnalysis139,4027
  MemoryDependenceResults &getMemDep(getMemDep140,4099
  class ValueTable 151,4520
    DenseMap<DenseMap152,4541
    DenseMap<Value *, uint32_t> valueNumbering;152,4541
    DenseMap<DenseMap153,4589
    DenseMap<Expression, uint32_t> expressionNumbering;153,4589
    std::vector<Expression> Expressions;161,4969
    std::vector<uint32_t> ExprIdx;162,5010
    DenseMap<DenseMap165,5123
    DenseMap<uint32_t, PHINode *> NumberingPhi;165,5123
    PhiTranslateMap PhiTranslateTable;170,5314
    std::pair<std::pair188,6115
    void setAliasAnalysis(209,6971
    AAResults *getAliasAnalysis(getAliasAnalysis210,7023
    void setMemDep(211,7078
    void setDomTree(212,7137
    uint32_t getNextUnusedValueNumber(213,7187
  MemoryDependenceResults *MD MD221,7393
  DominatorTree *DT DT222,7434
  const TargetLibraryInfo *TLI TLI223,7465
  AssumptionCache *AC AC224,7507
  SetVector<BasicBlock *> DeadBlocks;225,7540
  OptimizationRemarkEmitter *ORE ORE226,7578
  ImplicitControlFlowTracking *ICF ICF227,7622
  LoopInfo *LI LI228,7668
  MemorySSAUpdater *MSSAU MSSAU229,7694
  ValueTable VN;231,7732
  struct LeaderTableEntry 235,7870
    Value *Val;Val236,7898
    const BasicBlock *BB;BB237,7914
    LeaderTableEntry *Next;Next238,7940
  DenseMap<DenseMap240,7973
  DenseMap<uint32_t, LeaderTableEntry> LeaderTable;240,7973
  BumpPtrAllocator TableAllocator;241,8025
  SmallMapVector<SmallMapVector246,8248
  SmallMapVector<Value *, Value *, 4> ReplaceOperandsWithMap;246,8248
  SmallVector<SmallVector247,8310
  SmallVector<Instruction *, 8> InstrsToErase;247,8310
  DenseMap<DenseMap251,8459
  DenseMap<AssertingVH<BasicBlock>, uint32_t> BlockRPONumber;251,8459
  bool InvalidBlockRPONumbers 256,8753
  using LoadDepVect 258,8792
  using AvailValInBlkVect 259,8850
  using UnavailBlkVect 260,8923
  void addToLeaderTable(268,9335
  void removeFromLeaderTable(285,9823
  SmallVector<SmallVector313,10495
  SmallVector<std::pair<Instruction *, unsigned>, 4> toSplit;313,10495
struct GVNHoistPass 383,13705
struct GVNSinkPass 390,13996

/usr/include/llvm/Transforms/Scalar/IVUsersPrinter.h,220
#define LLVM_TRANSFORMS_SCALAR_IVUSERSPRINTER_H10,418
class IVUsersPrinterPass 21,663
  raw_ostream &OS;OS22,733
  explicit IVUsersPrinterPass(25,761
  PreservedAnalyses run(26,820
  static bool isRequired(28,951

/usr/include/llvm/Transforms/Scalar/InferAlignment.h,121
#define LLVM_TRANSFORMS_SCALAR_INFERALIGNMENT_H15,619
struct InferAlignmentPass 21,720
  PreservedAnalyses run(22,791

/usr/include/llvm/Transforms/Scalar/LoopAccessAnalysisPrinter.h,244
#define LLVM_TRANSFORMS_SCALAR_LOOPACCESSANALYSISPRINTER_H10,429
class LoopAccessInfoPrinterPass20,675
  raw_ostream &OS;OS22,763
  explicit LoopAccessInfoPrinterPass(25,791
  PreservedAnalyses run(26,857
  static bool isRequired(27,924

/usr/include/llvm/Transforms/Scalar/MemCpyOptimizer.h,737
#define LLVM_TRANSFORMS_SCALAR_MEMCPYOPTIMIZER_H15,638
class MemCpyOptPass 42,1133
  PreservedAnalyses run(54,1461
  bool runImpl(57,1555
  bool processStore(63,1766
  bool processStoreOfLoad(64,1829
  bool processMemSet(66,1960
  bool processMemCpy(67,2025
  bool processMemMove(68,2089
  bool performCallSlotOptzn(69,2128
  bool processMemCpyMemCpyDependence(73,2404
  bool processMemSetMemCpyDependence(75,2533
  bool performMemCpyToMemSetOptzn(77,2669
  bool processByValArgument(79,2799
  bool processImmutArgument(80,2858
  Instruction *tryMergingIntoMemset(tryMergingIntoMemset81,2917
  bool moveUp(83,3039
  bool performStackMoveOptzn(84,3105
  void eraseInstruction(88,3316
  bool iterateOnFunction(89,3357

/usr/include/llvm/Transforms/Scalar/Reassociate.h,886
#define LLVM_TRANSFORMS_SCALAR_REASSOCIATE_H23,1023
struct ValueEntry 46,1572
  unsigned Rank;47,1592
  Value *Op;Op48,1609
  ValueEntry(50,1623
struct Factor 59,1928
  Value *Base;Base60,1944
  unsigned Power;61,1959
  Factor(63,1978
class ReassociatePass 71,2139
  using OrderedSet 73,2211
  DenseMap<DenseMap77,2325
  DenseMap<BasicBlock *, unsigned> RankMap;77,2325
  DenseMap<DenseMap78,2369
  DenseMap<AssertingVH<Value>, unsigned> ValueRankMap;78,2369
  OrderedSet RedoInsts;79,2424
  static const unsigned GlobalReassociateLimit 82,2498
  static const unsigned NumBinaryOps 83,2551
  struct PairMapValue 86,2654
    WeakVH Value1;87,2678
    WeakVH Value2;88,2697
    unsigned Score;89,2716
    bool isValid(90,2736
  DenseMap<DenseMap92,2795
  DenseMap<std::pair<Value *, Value *>, PairMapValue> PairMap[PairMap92,2795
  bool MadeChange;94,2873

/usr/include/llvm/Transforms/Scalar/SROA.h,335
#define LLVM_TRANSFORMS_SCALAR_SROA_H16,697
enum class SROAOptions 24,805
enum class SROAOptions : bool { ModifyCFG,24,805
enum class SROAOptions : bool { ModifyCFG, PreserveCFG 24,805
class SROAPass 26,864
  const SROAOptions PreserveCFG;27,914
  SROAPass(32,1087
  PreservedAnalyses run(35,1163
  void printPipeline(37,1231

/usr/include/llvm/Transforms/Scalar/Scalarizer.h,474
#define LLVM_TRANSFORMS_SCALAR_SCALARIZER_H19,871
struct ScalarizerPassOptions 28,1005
  std::optional<bool> ScalarizeVariableInsertExtract;33,1297
  std::optional<bool> ScalarizeLoadStore;34,1351
  std::optional<unsigned> ScalarizeMinBits;35,1393
class ScalarizerPass 38,1441
  ScalarizerPassOptions Options;39,1503
  ScalarizerPass(43,1575
  void setScalarizeVariableInsertExtract(47,1721
  void setScalarizeLoadStore(50,1832
  void setScalarizeMinBits(51,1913

/usr/include/llvm/Transforms/Scalar/SimpleLoopUnswitch.h,245
#define LLVM_TRANSFORMS_SCALAR_SIMPLELOOPUNSWITCH_H10,422
class SimpleLoopUnswitchPass 66,2844
  bool NonTrivial;67,2922
  bool Trivial;68,2941
  SimpleLoopUnswitchPass(71,2966
  PreservedAnalyses run(74,3090
  void printPipeline(77,3222

/usr/include/llvm/Transforms/Scalar/SpeculativeExecution.h,295
#define LLVM_TRANSFORMS_SCALAR_SPECULATIVEEXECUTION_H63,2300
class SpeculativeExecutionPass69,2433
  SpeculativeExecutionPass(72,2527
  PreservedAnalyses run(74,2592
  void printPipeline(76,2660
  bool runImpl(80,2800
  bool runOnBasicBlock(83,2865
  bool considerHoistingFromTo(84,2904

/usr/include/llvm/Transforms/Utils/AMDGPUEmitPrintf.h,56
#define LLVM_TRANSFORMS_UTILS_AMDGPUEMITPRINTF_H15,612

/usr/include/llvm/Transforms/Utils/ASanStackFrameLayout.h,511
#define LLVM_TRANSFORMS_UTILS_ASANSTACKFRAMELAYOUT_H13,588
struct ASanStackVariableDescription 30,1180
  const char *Name;Name31,1218
  uint64_t Size;33,1358
  size_t LifetimeSize;34,1415
  uint64_t Alignment;36,1552
  AllocaInst *AI;AI37,1618
  size_t Offset;38,1667
  unsigned Line;40,1795
struct ASanStackFrameLayout 44,1893
  uint64_t Granularity;45,1923
  uint64_t FrameAlignment;46,1974
  uint64_t FrameSize;47,2037
SmallVector<uint8_t,uint8_t66,2962
SmallVector<uint8_t,uint8_t73,3290

/usr/include/llvm/Transforms/Utils/AddDiscriminators.h,158
#define LLVM_TRANSFORMS_UTILS_ADDDISCRIMINATORS_H16,714
class AddDiscriminatorsPass 24,834
  PreservedAnalyses run(26,918
  static bool isRequired(27,985

/usr/include/llvm/Transforms/Utils/BreakCriticalEdges.h,129
#define LLVM_TRANSFORMS_UTILS_BREAKCRITICALEDGES_H18,834
struct BreakCriticalEdgesPass 25,954
  PreservedAnalyses run(26,1033

/usr/include/llvm/Transforms/Utils/BypassSlowDivision.h,428
#define LLVM_TRANSFORMS_UTILS_BYPASSSLOWDIVISION_H18,874
struct DivRemMapKey 30,1095
  bool SignedOp;31,1117
  AssertingVH<Value> Dividend;32,1134
  AssertingVH<Value> Divisor;33,1165
  DivRemMapKey(37,1225
template <> struct DenseMapInfo<DenseMapInfo41,1372
  static bool isEqual(42,1420
  static DivRemMapKey getEmptyKey(47,1621
  static DivRemMapKey getTombstoneKey(51,1714
  static unsigned getHashValue(55,1810

/usr/include/llvm/Transforms/Utils/CallGraphUpdater.h,466
#define LLVM_TRANSFORMS_UTILS_CALLGRAPHUPDATER_H16,666
class CallGraphUpdater 29,1053
  SmallPtrSet<Function Function36,1455
  SmallPtrSet<Function *, 16> ReplacedFunctions;36,1455
  SmallVector<Function Function37,1504
  SmallVector<Function *, 16> DeadFunctions;37,1504
  SmallVector<Function Function38,1549
  SmallVector<Function *, 16> DeadFunctionsInComdats;38,1549
  ~CallGraphUpdater(58,1971
  void initialize(63,2135
  void initialize(67,2237

/usr/include/llvm/Transforms/Utils/CallPromotionUtils.h,58
#define LLVM_TRANSFORMS_UTILS_CALLPROMOTIONUTILS_H15,606

/usr/include/llvm/Transforms/Utils/CanonicalizeAliases.h,129
#define LLVM_TRANSFORMS_UTILS_CANONICALIZEALIASES_H14,545
class CanonicalizeAliasesPass 23,709
  PreservedAnalyses run(27,837

/usr/include/llvm/Transforms/Utils/CanonicalizeFreezeInLoops.h,140
#define LLVM_TRANSFORMS_UTILS_CANONICALIZEFREEZEINLOOPS_H14,573
class CanonicalizeFreezeInLoopsPass24,822
  PreservedAnalyses run(27,926

/usr/include/llvm/Transforms/Utils/Cloning.h,1053
#define LLVM_TRANSFORMS_UTILS_CLONING_H18,821
struct ClonedCodeInfo 61,2144
  std::vector<WeakTrackingVH> OperandBundleCallSites;77,2920
  DenseMap<DenseMap82,3202
  DenseMap<const Value *, const Value *> OrigVMap;82,3202
  bool isSimplified(86,3285
enum class CloneFunctionChangeType 137,5909
  LocalChangesOnly,138,5946
  GlobalChanges,139,5966
  DifferentModule,140,5983
  ClonedModule,141,6002
class InlineFunctionInfo 202,9302
  explicit InlineFunctionInfo(204,9337
  function_ref<AssumptionCache &(Function &)> GetAssumptionCache;214,9852
  ProfileSummaryInfo *PSI;PSI215,9918
  BlockFrequencyInfo *CallerBFI,CallerBFI216,9945
  BlockFrequencyInfo *CallerBFI, *CalleeBFI;CalleeBFI216,9945
  SmallVector<SmallVector220,10089
  SmallVector<AllocaInst *, 4> StaticAllocas;220,10089
  SmallVector<SmallVector224,10269
  SmallVector<WeakTrackingVH, 8> InlinedCalls;224,10269
  SmallVector<SmallVector231,10565
  SmallVector<CallBase *, 8> InlinedCallSites;231,10565
  bool UpdateProfile;235,10768
  void reset(237,10791

/usr/include/llvm/Transforms/Utils/CountVisits.h,152
#define LLVM_TRANSFORMS_UTILS_COUNT_VISITS_H10,415
struct CountVisitsPass 19,562
  PreservedAnalyses run(20,620
  StringMap<uint32_t> Counts;23,695

/usr/include/llvm/Transforms/Utils/CtorUtils.h,49
#define LLVM_TRANSFORMS_UTILS_CTORUTILS_H14,574

/usr/include/llvm/Transforms/Utils/Debugify.h,2718
#define LLVM_TRANSFORMS_UTILS_DEBUGIFY_H15,589
using DebugFnMap 26,906
using DebugInstMap 28,998
using DebugVarMap 29,1069
using WeakInstValueMap 30,1147
struct DebugInfoPerPass 34,1290
  DebugFnMap DIFunctions;36,1379
  DebugInstMap DILocations;38,1484
  WeakInstValueMap InstToDelete;41,1617
  DebugVarMap DIVariables;43,1726
namespace llvm 46,1757
enum class DebugifyMode 93,4117
enum class DebugifyMode { NoDebugify,93,4117
enum class DebugifyMode { NoDebugify, SyntheticDebugInfo,93,4117
enum class DebugifyMode { NoDebugify, SyntheticDebugInfo, OriginalDebugInfo 93,4117
class NewPMDebugifyPass 104,4612
  llvm::StringRef NameOfWrappedPass;105,4686
  DebugInfoPerPass *DebugInfoBeforePass DebugInfoBeforePass106,4723
  enum DebugifyMode Mode 107,4774
  NewPMDebugifyPass(109,4835
struct DebugifyStatistics 121,5310
  unsigned NumDbgValuesMissing 123,5374
  unsigned NumDbgValuesExpected 126,5448
  unsigned NumDbgLocsMissing 129,5543
  unsigned NumDbgLocsExpected 132,5641
  float getMissingValueRatio(135,5729
  float getEmptyLocationRatio(140,5909
using DebugifyStatsMap 146,6084
class NewPMCheckDebugifyPass162,6828
  llvm::StringRef NameOfWrappedPass;164,6916
  llvm::StringRef OrigDIVerifyBugsReportFilePath;165,6953
  DebugifyStatsMap *StatsMap;StatsMap166,7003
  DebugInfoPerPass *DebugInfoBeforePass;DebugInfoBeforePass167,7033
  enum DebugifyMode Mode;168,7074
  bool Strip;169,7100
  NewPMCheckDebugifyPass(171,7122
namespace llvm 185,7747
class DebugifyEachInstrumentation 188,7836
  void setDIStatsMap(198,8252
  const DebugifyStatsMap &getDebugifyStatsMap(getDebugifyStatsMap199,8327
  void setDebugInfoBeforePass(201,8460
  DebugInfoPerPass &getDebugInfoPerPass(getDebugInfoPerPass204,8565
  void setOrigDIVerifyBugsReportFilePath(206,8641
  StringRef getOrigDIVerifyBugsReportFilePath(209,8775
  void setDebugifyMode(213,8879
  bool isSyntheticDebugInfo(215,8938
  bool isOriginalDebugInfoMode(218,9033
class DebugifyCustomPassManager 227,9328
  StringRef OrigDIVerifyBugsReportFilePath;228,9391
  DebugifyStatsMap *DIStatsMap DIStatsMap229,9435
  DebugInfoPerPass *DebugInfoBeforePass DebugInfoBeforePass230,9477
  enum DebugifyMode Mode 231,9528
  using super 234,9590
  void add(236,9628
  void setDIStatsMap(276,11130
  void setDebugInfoBeforePass(278,11260
  void setOrigDIVerifyBugsReportFilePath(281,11363
  StringRef getOrigDIVerifyBugsReportFilePath(284,11497
  void setDebugifyMode(288,11601
  bool isSyntheticDebugInfo(290,11660
  bool isOriginalDebugInfoMode(293,11755
  const DebugifyStatsMap &getDebugifyStatsMap(getDebugifyStatsMap297,11853
  DebugInfoPerPass &getDebugInfoPerPass(getDebugInfoPerPass298,11931

/usr/include/llvm/Transforms/Utils/EntryExitInstrumenter.h,263
#define LLVM_TRANSFORMS_UTILS_ENTRYEXITINSTRUMENTER_H16,729
struct EntryExitInstrumenterPass24,853
  EntryExitInstrumenterPass(26,942
  PreservedAnalyses run(28,1022
  void printPipeline(30,1090
  bool PostInlining;33,1209
  static bool isRequired(35,1231

/usr/include/llvm/Transforms/Utils/EscapeEnumerator.h,375
#define LLVM_TRANSFORMS_UTILS_ESCAPEENUMERATOR_H15,617
class EscapeEnumerator 29,1094
  Function &F;F30,1119
  const char *CleanupBBName;CleanupBBName31,1134
  Function::iterator StateBB,33,1164
  Function::iterator StateBB, StateE;33,1164
  IRBuilder<> Builder;34,1202
  bool HandleExceptions;36,1246
  DomTreeUpdater *DTU;DTU38,1272
  EscapeEnumerator(41,1304

/usr/include/llvm/Transforms/Utils/Evaluator.h,1554
#define LLVM_TRANSFORMS_UTILS_EVALUATOR_H14,534
class Evaluator 37,1220
  class MutableValue 43,1459
    PointerUnion<Constant Constant44,1482
    PointerUnion<Constant *, MutableAggregate *> Val;44,1482
    void clear(45,1536
    bool makeMutable(46,1554
    MutableValue(49,1589
    MutableValue(51,1681
    ~MutableValue(55,1778
    Type *getType(getType57,1812
    Constant *toConstant(toConstant63,1982
    Constant *read(read69,2158
  struct MutableAggregate 73,2301
    Type *Ty;Ty74,2329
    SmallVector<MutableValue> Elements;75,2343
    MutableAggregate(77,2384
    Constant *toConstant(toConstant78,2427
  ~Evaluator(87,2602
  DenseMap<DenseMap102,3285
  DenseMap<GlobalVariable *, Constant *> getMutatedInitializers(102,3285
  const SmallPtrSetImpl<GlobalVariable *> &getInvariants(getInvariants109,3530
  Constant *getVal(getVal117,3773
  void setVal(124,3981
  std::deque<std::deque147,4968
  std::deque<DenseMap<Value*, Constant*>> ValueStack;147,4968
  SmallVector<SmallVector151,5173
  SmallVector<Function*, 4> CallStack;151,5173
  DenseMap<DenseMap156,5400
  DenseMap<GlobalVariable *, MutableValue> MutatedMemory;156,5400
  SmallVector<SmallVector161,5642
  SmallVector<std::unique_ptr<GlobalVariable>, 32> AllocaTmps;161,5642
  SmallPtrSet<SmallPtrSet165,5795
  SmallPtrSet<GlobalVariable*, 8> Invariants;165,5795
  SmallPtrSet<SmallPtrSet169,5964
  SmallPtrSet<Constant*, 8> SimpleConstants;169,5964
  const DataLayout &DL;DL171,6010
  const TargetLibraryInfo *TLI;TLI172,6034

/usr/include/llvm/Transforms/Utils/FixIrreducible.h,120
#define LLVM_TRANSFORMS_UTILS_FIXIRREDUCIBLE_H10,417
struct FixIrreduciblePass 15,516
  PreservedAnalyses run(16,580

/usr/include/llvm/Transforms/Utils/FunctionImportUtils.h,681
#define LLVM_TRANSFORMS_UTILS_FUNCTIONIMPORTUTILS_H15,658
class FunctionImportGlobalProcessing 25,964
  Module &M;M27,1072
  const ModuleSummaryIndex &ImportIndex;ImportIndex30,1166
  SetVector<GlobalValue *> *GlobalsToImport;GlobalsToImport34,1333
  bool ClearDSOLocalOnDeclarations;53,2263
  SmallPtrSet<GlobalValue GlobalValue57,2414
  SmallPtrSet<GlobalValue *, 4> Used;57,2414
  DenseMap<const Comdat 62,2617
  DenseMap<const Comdat *, Comdat *> RenamedComdats;62,2617
  bool shouldPromoteLocalToGlobal(65,2743
  bool isNonRenamableLocal(71,3021
  bool isModuleExporting(77,3277
  bool doImportAsDefinition(81,3483
  FunctionImportGlobalProcessing(101,4439

/usr/include/llvm/Transforms/Utils/GlobalStatus.h,261
#define LLVM_TRANSFORMS_UTILS_GLOBALSTATUS_H10,415
struct GlobalStatus 30,1006
  enum StoredType 42,1363
    NotStored,44,1458
    InitializerStored,48,1624
    StoredOnce,54,1904
    Stored58,2021
  Value *getStoredOnceValue(getStoredOnceValue67,2382

/usr/include/llvm/Transforms/Utils/GuardUtils.h,50
#define LLVM_TRANSFORMS_UTILS_GUARDUTILS_H13,587

/usr/include/llvm/Transforms/Utils/HelloWorld.h,111
#define LLVM_TRANSFORMS_UTILS_HELLOWORLD_H10,413
class HelloWorldPass 16,509
  PreservedAnalyses run(18,579

/usr/include/llvm/Transforms/Utils/InjectTLIMappings.h,121
#define LLVM_TRANSFORMS_UTILS_INJECTTLIMAPPINGS_H14,605
class InjectTLIMappings 20,723
  PreservedAnalyses run(22,799

/usr/include/llvm/Transforms/Utils/InstructionNamer.h,124
#define LLVM_TRANSFORMS_UTILS_INSTRUCTIONNAMER_H10,419
struct InstructionNamerPass 15,520
  PreservedAnalyses run(16,588

/usr/include/llvm/Transforms/Utils/InstructionWorklist.h,747
#define LLVM_TRANSFORMS_UTILS_INSTRUCTIONWORKLIST_H10,422
class InstructionWorklist 25,878
  SmallVector<Instruction Instruction26,906
  SmallVector<Instruction *, 256> Worklist;26,906
  DenseMap<Instruction Instruction27,950
  DenseMap<Instruction *, unsigned> WorklistMap;27,950
  SmallSetVector<Instruction Instruction31,1193
  SmallSetVector<Instruction *, 16> Deferred;31,1193
  bool isEmpty(39,1410
  void add(44,1628
  void addValue(51,1871
  void push(58,2089
  void pushValue(68,2362
  Instruction *popDeferred(popDeferred73,2462
  void reserve(79,2582
  void remove(85,2728
  Instruction *removeOne(removeOne96,3042
  void pushUsersToWorkList(106,3352
  void handleUseCountDecrement(112,3530
  void zap(123,3902

/usr/include/llvm/Transforms/Utils/IntegerDivision.h,55
#define LLVM_TRANSFORMS_UTILS_INTEGERDIVISION_H17,786

/usr/include/llvm/Transforms/Utils/LCSSA.h,104
#define LLVM_TRANSFORMS_UTILS_LCSSA_H30,1264
class LCSSAPass 37,1401
  PreservedAnalyses run(39,1461

/usr/include/llvm/Transforms/Utils/LibCallsShrinkWrap.h,159
#define LLVM_TRANSFORMS_UTILS_LIBCALLSSHRINKWRAP_H12,505
class LibCallsShrinkWrapPass 18,609
  static StringRef name(20,695
  PreservedAnalyses run(22,759

/usr/include/llvm/Transforms/Utils/LoopPeel.h,48
#define LLVM_TRANSFORMS_UTILS_LOOPPEEL_H15,597

/usr/include/llvm/Transforms/Utils/LoopRotationUtils.h,57
#define LLVM_TRANSFORMS_UTILS_LOOPROTATIONUTILS_H14,587

/usr/include/llvm/Transforms/Utils/LoopSimplify.h,118
#define LLVM_TRANSFORMS_UTILS_LOOPSIMPLIFY_H39,1880
class LoopSimplifyPass 53,2154
  PreservedAnalyses run(55,2228

/usr/include/llvm/Transforms/Utils/LoopVersioning.h,980
#define LLVM_TRANSFORMS_UTILS_LOOPVERSIONING_H16,696
    RuntimePointerCheck;32,1116
class LoopVersioning 41,1404
  void versionLoop(64,2454
  Loop *getVersionedLoop(getVersionedLoop73,2962
  Loop *getNonVersionedLoop(getNonVersionedLoop77,3146
  void annotateInstWithNoAlias(108,4525
  Loop *VersionedLoop;VersionedLoop114,4743
  ValueToValueMapTy VMap;121,5014
  SmallVector<SmallVector124,5099
  SmallVector<RuntimePointerCheck, 4> AliasChecks;124,5099
  const SCEVPredicate &Preds;Preds127,5208
  DenseMap<DenseMap131,5325
  DenseMap<const Value *, const RuntimeCheckingPtrGroup *> PtrToGroup;131,5325
  DenseMap<DenseMap134,5462
  DenseMap<const RuntimeCheckingPtrGroup *, MDNode *> GroupToScope;134,5462
  DenseMap<DenseMap137,5605
      GroupToNonAliasingScopeList;138,5659
  const LoopAccessInfo &LAI;LAI141,5716
  LoopInfo *LI;LI142,5745
  DominatorTree *DT;DT143,5761
  ScalarEvolution *SE;SE144,5782
class LoopVersioningPass 150,5991

/usr/include/llvm/Transforms/Utils/LowerAtomic.h,51
#define LLVM_TRANSFORMS_UTILS_LOWERATOMIC_H15,617

/usr/include/llvm/Transforms/Utils/LowerGlobalDtors.h,123
#define LLVM_TRANSFORMS_UTILS_LOWERGLOBALDTORS_H15,705
class LowerGlobalDtorsPass 21,807
  PreservedAnalyses run(23,889

/usr/include/llvm/Transforms/Utils/LowerIFunc.h,111
#define LLVM_TRANSFORMS_UTILS_LOWERIFUNC_H10,413
class LowerIFuncPass 19,729
  PreservedAnalyses run(23,830

/usr/include/llvm/Transforms/Utils/LowerInvoke.h,113
#define LLVM_TRANSFORMS_UTILS_LOWERINVOKE_H16,817
class LowerInvokePass 22,914
  PreservedAnalyses run(24,986

/usr/include/llvm/Transforms/Utils/LowerMemIntrinsics.h,58
#define LLVM_TRANSFORMS_UTILS_LOWERMEMINTRINSICS_H15,607

/usr/include/llvm/Transforms/Utils/LowerSwitch.h,114
#define LLVM_TRANSFORMS_UTILS_LOWERSWITCH_H16,701
struct LowerSwitchPass 21,797
  PreservedAnalyses run(22,862

/usr/include/llvm/Transforms/Utils/MatrixUtils.h,412
#define LLVM_TRANSFORMS_UTILS_MATRIXUTILS_H14,564
struct TileInfo 31,972
  unsigned NumRows;33,1026
  unsigned NumColumns;36,1086
  unsigned NumInner;40,1227
  struct MatrixLoop 46,1392
  MatrixLoop RowLoop;55,1641
  MatrixLoop ColumnLoop;57,1704
  MatrixLoop KLoop;59,1778
  TileInfo(61,1799
  BasicBlock *CreateTiledLoops(CreateTiledLoops73,2298
  static BasicBlock *CreateLoop(CreateLoop82,2759

/usr/include/llvm/Transforms/Utils/Mem2Reg.h,105
#define LLVM_TRANSFORMS_UTILS_MEM2REG_H15,609
class PromotePass 23,719
  PreservedAnalyses run(25,783

/usr/include/llvm/Transforms/Utils/MemoryOpRemark.h,908
#define LLVM_TRANSFORMS_UTILS_MEMORYOPREMARK_H15,650
struct MemoryOpRemark 35,1170
  OptimizationRemarkEmitter &ORE;ORE36,1194
  StringRef RemarkPass;37,1228
  const DataLayout &DL;DL38,1252
  const TargetLibraryInfo &TLI;TLI39,1276
  MemoryOpRemark(41,1309
  virtual ~MemoryOpRemark(45,1512
  static bool canHandle(48,1614
  void visit(50,1692
  enum RemarkKind 55,1800
  enum RemarkKind { RK_Store,55,1800
  enum RemarkKind { RK_Store, RK_Unknown,55,1800
  enum RemarkKind { RK_Store, RK_Unknown, RK_IntrinsicCall,55,1800
  enum RemarkKind { RK_Store, RK_Unknown, RK_IntrinsicCall, RK_Call 55,1800
  virtual DiagnosticKind diagnosticKind(58,1925
  struct VariableInfo 84,3074
    std::optional<StringRef> Name;85,3098
    std::optional<uint64_t> Size;86,3133
    bool isEmpty(87,3167
struct AutoInitRemark 97,3649
  AutoInitRemark(98,3697
  DiagnosticKind diagnosticKind(108,4135

/usr/include/llvm/Transforms/Utils/MemoryTaggingSupport.h,907
#define LLVM_TRANSFORMS_UTILS_MEMORYTAGGINGSUPPORT_H13,601
struct AllocaInfo 50,2165
  AllocaInst *AI;AI51,2185
  SmallVector<SmallVector52,2203
  SmallVector<IntrinsicInst *, 2> LifetimeStart;52,2203
  SmallVector<SmallVector53,2252
  SmallVector<IntrinsicInst *, 2> LifetimeEnd;53,2252
  SmallVector<SmallVector54,2299
  SmallVector<DbgVariableIntrinsic *, 2> DbgVariableIntrinsics;54,2299
struct StackInfo 57,2367
  MapVector<MapVector58,2386
  MapVector<AllocaInst *, AllocaInfo> AllocasToInstrument;58,2386
  SmallVector<SmallVector59,2445
  SmallVector<Instruction *, 4> UnrecognizedLifetimes;59,2445
  SmallVector<SmallVector60,2500
  SmallVector<Instruction *, 8> RetVec;60,2500
  bool CallsReturnTwice 61,2540
class StackInfoBuilder 64,2577
  StackInfoBuilder(66,2610
  StackInfo &get(get70,2761
  StackInfo Info;73,2808
  const StackSafetyGlobalInfo *SSI;SSI74,2826

/usr/include/llvm/Transforms/Utils/MetaRenamer.h,114
#define LLVM_TRANSFORMS_UTILS_METARENAMER_H16,667
struct MetaRenamerPass 21,763
  PreservedAnalyses run(22,821

/usr/include/llvm/Transforms/Utils/MoveAutoInit.h,115
#define LLVM_TRANSFORMS_UTILS_MOVEAUTOINIT_H17,724
class MoveAutoInitPass 23,822
  PreservedAnalyses run(25,896

/usr/include/llvm/Transforms/Utils/PromoteMemToReg.h,55
#define LLVM_TRANSFORMS_UTILS_PROMOTEMEMTOREG_H15,632

/usr/include/llvm/Transforms/Utils/RelLookupTableConverter.h,139
#define LLVM_TRANSFORMS_UTILS_RELLOOKUPTABLECONVERTER_H52,2249
class RelLookupTableConverterPass61,2436
  PreservedAnalyses run(66,2580

/usr/include/llvm/Transforms/Utils/SSAUpdaterBulk.h,664
#define LLVM_TRANSFORMS_UTILS_SSAUPDATERBULK_H14,552
class SSAUpdaterBulk 39,1359
  struct RewriteInfo 40,1382
    DenseMap<BasicBlock BasicBlock41,1405
    DenseMap<BasicBlock *, Value *> Defines;41,1405
    SmallVector<Use Use42,1450
    SmallVector<Use *, 4> Uses;42,1450
    StringRef Name;43,1482
    Type *Ty;Ty44,1502
    RewriteInfo(46,1545
  SmallVector<RewriteInfo,RewriteInfo48,1609
  SmallVector<RewriteInfo, 4> Rewrites;48,1609
  PredIteratorCache PredCache;50,1650
  Value *computeValueAt(computeValueAt52,1682
  unsigned AddVariable(63,2170
  void AddAvailableValue(67,2327
  void AddUse(71,2521
  void RewriteAllUses(80,2919

/usr/include/llvm/Transforms/Utils/SSAUpdaterImpl.h,939
#define LLVM_TRANSFORMS_UTILS_SSAUPDATERIMPL_H15,617
#define DEBUG_TYPE 23,837
class SSAUpdaterImpl 30,962
  UpdaterT *Updater;Updater32,994
  class BBInfo 42,1402
    BlkT *BB;BB45,1477
    ValT AvailableVal;48,1527
    BBInfo *DefBB;DefBB51,1598
    BBInfo(68,1936
  AvailableValsTy *AvailableVals;AvailableVals74,2092
  SmallVectorImpl<PhiT *> *InsertedPHIs;InsertedPHIs76,2127
  BBMapTy BBMap;81,2265
  BumpPtrAllocator Allocator;82,2282
  explicit SSAUpdaterImpl(85,2321
  ValT GetValue(93,2737
  BBInfo *BuildBlockList(BuildBlockList115,3455
  BBInfo *IntersectDominators(IntersectDominators214,6990
  void FindDominators(240,8077
  bool IsDefInDomFrontier(282,9593
  void FindPHIPlacement(294,10060
  bool FindSingularVal(329,11214
  void FindAvailableVals(353,12156
  void FindExistingPHI(415,14392
  bool CheckIfPHIMatches(430,14901
  void RecordMatchingPHIs(477,16497
#undef DEBUG_TYPE 491,16904

/usr/include/llvm/Transforms/Utils/SampleProfileLoaderBaseUtil.h,293
#define LLVM_TRANSFORMS_UTILS_SAMPLEPROFILELOADERBASEUTIL_H16,624
namespace sampleprofutil 33,1095
class SampleCoverageTracker 35,1123
  uint64_t getTotalUsedSamples(44,1593
  void clear(48,1777
  void setProfAccForSymsInList(52,1852
  FunctionSamplesCoverageMap SampleCoverage;68,2546

/usr/include/llvm/Transforms/Utils/SanitizerStats.h,607
#define LLVM_TRANSFORMS_UTILS_SANITIZERSTATS_H14,582
enum { kSanitizerStatKindBits 22,818
enum SanitizerStatKind 24,856
  SanStat_CFI_VCall,25,881
  SanStat_CFI_NVCall,26,902
  SanStat_CFI_DerivedCast,27,924
  SanStat_CFI_UnrelatedCast,28,951
  SanStat_CFI_ICall,29,980
struct SanitizerStatReport 32,1005
  SanitizerStatReport(33,1034
  void create(37,1188
  void finish(40,1319
  Module *M;M43,1346
  GlobalVariable *ModuleStatsGV;ModuleStatsGV44,1359
  ArrayType *StatTy;StatTy45,1392
  StructType *EmptyModuleStatsTy;EmptyModuleStatsTy46,1413
  std::vector<Constant *> Inits;48,1448

/usr/include/llvm/Transforms/Utils/SimplifyCFGOptions.h,808
#define LLVM_TRANSFORMS_UTILS_SIMPLIFYCFGOPTIONS_H17,787
struct SimplifyCFGOptions 23,881
  SimplifyCFGOptions &bonusInstThreshold(bonusInstThreshold37,1336
  SimplifyCFGOptions &forwardSwitchCondToPhi(forwardSwitchCondToPhi41,1436
  SimplifyCFGOptions &convertSwitchRangeToICmp(convertSwitchRangeToICmp45,1545
  SimplifyCFGOptions &convertSwitchToLookupTable(convertSwitchToLookupTable49,1658
  SimplifyCFGOptions &needCanonicalLoops(needCanonicalLoops53,1775
  SimplifyCFGOptions &hoistCommonInsts(hoistCommonInsts57,1875
  SimplifyCFGOptions &sinkCommonInsts(sinkCommonInsts61,1972
  SimplifyCFGOptions &setAssumptionCache(setAssumptionCache65,2067
  SimplifyCFGOptions &setSimplifyCondBranch(setSimplifyCondBranch69,2172
  SimplifyCFGOptions &speculateBlocks(speculateBlocks74,2277

/usr/include/llvm/Transforms/Utils/SimplifyIndVar.h,305
#define LLVM_TRANSFORMS_UTILS_SIMPLIFYINDVAR_H16,727
class IVVisitor 34,1131
  virtual void anchor(38,1198
  const DominatorTree *getDomTree(getDomTree44,1292
struct WideIVInfo 64,2331
  PHINode *NarrowIV NarrowIV65,2351
  Type *WidestNativeType WidestNativeType68,2424
  bool IsSigned 71,2502

/usr/include/llvm/Transforms/Utils/SimplifyLibCalls.h,1811
#define LLVM_TRANSFORMS_UTILS_SIMPLIFYLIBCALLS_H15,642
class FortifiedLibCallSimplifier 39,1462
  const TargetLibraryInfo *TLI;TLI41,1506
  bool OnlyLowerUnknownSize;42,1538
  FortifiedLibCallSimplifier(45,1576
  Value *optimizeCall(optimizeCall52,1904
  Value *optimizeMemCpyChk(optimizeMemCpyChk55,1969
  Value *optimizeMemMoveChk(optimizeMemMoveChk56,2029
  Value *optimizeMemSetChk(optimizeMemSetChk57,2090
  Value *optimizeStrpCpyChk(optimizeStrpCpyChk60,2225
  Value *optimizeStrpNCpyChk(optimizeStrpNCpyChk61,2300
  Value *optimizeStrLenChk(optimizeStrLenChk62,2376
  Value *optimizeMemPCpyChk(optimizeMemPCpyChk63,2436
  Value *optimizeMemCCpyChk(optimizeMemCCpyChk64,2497
  Value *optimizeSNPrintfChk(optimizeSNPrintfChk65,2558
  Value *optimizeSPrintfChk(optimizeSPrintfChk66,2620
  Value *optimizeStrCatChk(optimizeStrCatChk67,2680
  Value *optimizeStrLCat(optimizeStrLCat68,2740
  Value *optimizeStrNCatChk(optimizeStrNCatChk69,2798
  Value *optimizeStrLCpyChk(optimizeStrLCpyChk70,2859
  Value *optimizeVSNPrintfChk(optimizeVSNPrintfChk71,2920
  Value *optimizeVSPrintfChk(optimizeVSPrintfChk72,2983
  bool isFortifiedCallFoldable(92,3869
class LibCallSimplifier 101,4401
  FortifiedLibCallSimplifier FortifiedSimplifier;103,4436
  const DataLayout &DL;DL104,4486
  const TargetLibraryInfo *TLI;TLI105,4510
  AssumptionCache *AC;AC106,4542
  OptimizationRemarkEmitter &ORE;ORE107,4565
  BlockFrequencyInfo *BFI;BFI108,4599
  ProfileSummaryInfo *PSI;PSI109,4626
  bool UnsafeFPShrink 110,4653
  function_ref<void(Instruction *, Value *)> Replacer;111,4684
  function_ref<void(Instruction *)> Eraser;112,4739
  static void replaceAllUsesWithDefault(118,4957
  static void eraseFromParentDefault(123,5145
  void substituteInParent(132,5524

/usr/include/llvm/Transforms/Utils/SizeOpts.h,344
#define LLVM_TRANSFORMS_UTILS_SIZEOPTS_H14,569
enum class PGSOQueryType 34,1171
  IRPass,35,1198
  Test,36,1257
  Other,37,1301
static inline bool isPGSOColdCodeOnly(40,1326
template <typename FuncT,50,1792
bool shouldFuncOptimizeForSizeImpl(51,1833
template <typename BlockTOrBlockFreq,71,2651
bool shouldOptimizeForSizeImpl(72,2704

/usr/include/llvm/Transforms/Utils/SplitModule.h,51
#define LLVM_TRANSFORMS_UTILS_SPLITMODULE_H16,698

/usr/include/llvm/Transforms/Utils/StripGCRelocates.h,119
#define LLVM_TRANSFORMS_UTILS_STRIPGCRELOCATES_H10,419
class StripGCRelocates 18,538
  PreservedAnalyses run(20,612

/usr/include/llvm/Transforms/Utils/StripNonLineTableDebugInfo.h,142
#define LLVM_TRANSFORMS_UTILS_STRIPNONLINETABLEDEBUGINFO_H10,429
class StripNonLineTableDebugInfoPass18,556
  PreservedAnalyses run(21,662

/usr/include/llvm/Transforms/Utils/UnifyLoopExits.h,119
#define LLVM_TRANSFORMS_UTILS_UNIFYLOOPEXITS_H10,415
class UnifyLoopExitsPass 16,515
  PreservedAnalyses run(18,593

/usr/include/llvm/Transforms/Utils/VNCoercion.h,50
#define LLVM_TRANSFORMS_UTILS_VNCOERCION_H22,948

/usr/include/llvm/Transforms/Utils/AssumeBundleBuilder.h,128
#define LLVM_TRANSFORMS_UTILS_ASSUMEBUNDLEBUILDER_H17,755
struct AssumeSimplifyPass 58,2429
struct AssumeBuilderPass 64,2690

/usr/include/llvm/Transforms/Utils/BasicBlockUtils.h,1187
#define LLVM_TRANSFORMS_UTILS_BASICBLOCKUTILS_H15,623
struct CriticalEdgeSplittingOptions 145,6876
  DominatorTree *DT;DT146,6914
  PostDominatorTree *PDT;PDT147,6935
  LoopInfo *LI;LI148,6961
  MemorySSAUpdater *MSSAU;MSSAU149,6977
  CriticalEdgeSplittingOptions(159,7395
  CriticalEdgeSplittingOptions &setMergeIdenticalEdges(setMergeIdenticalEdges165,7692
  CriticalEdgeSplittingOptions &setKeepOneInputPHIs(setKeepOneInputPHIs170,7806
  CriticalEdgeSplittingOptions &setPreserveLCSSA(setPreserveLCSSA175,7914
  CriticalEdgeSplittingOptions &setIgnoreUnreachableDests(setIgnoreUnreachableDests180,8016
  CriticalEdgeSplittingOptions &unsetPreserveLoopSimplify(unsetPreserveLoopSimplify185,8136
SplitCriticalEdge(230,10568
inline BasicBlock *SplitBlock(SplitBlock287,13260
inline BasicBlock *SplitBlock(SplitBlock306,14300
inline BasicBlock *splitBlockBefore(splitBlockBefore321,15247
inline Instruction *SplitBlockAndInsertIfThen(SplitBlockAndInsertIfThen423,20642
inline Instruction *SplitBlockAndInsertIfElse(SplitBlockAndInsertIfElse443,21781
inline void SplitBlockAndInsertIfThenElse(478,23129
inline void SplitBlockAndInsertIfThenElse(526,25379

/usr/include/llvm/Transforms/Utils/BuildLibCalls.h,53
#define LLVM_TRANSFORMS_UTILS_BUILDLIBCALLS_H15,639

/usr/include/llvm/Transforms/Utils/CodeExtractor.h,1238
#define LLVM_TRANSFORMS_UTILS_CODEEXTRACTOR_H15,599
class CodeExtractorAnalysisCache 46,1417
  SmallVector<AllocaInst AllocaInst48,1487
  SmallVector<AllocaInst *, 16> Allocas;48,1487
  DenseMap<BasicBlock BasicBlock51,1603
  DenseMap<BasicBlock *, DenseSet<Value *>> BaseMemAddrs;51,1603
  DenseSet<BasicBlock *> SideEffectingBlocks;55,1755
  void findSideEffectInfoForBlock(57,1802
  CodeExtractorAnalysisCache(60,1862
  ArrayRef<AllocaInst *> getAllocas(65,2114
  bool doesBlockContainClobberOfAddr(69,2308
  class CodeExtractor 85,3095
    using ValueSet 86,3119
    DominatorTree *const DT;89,3216
    const bool AggregateArgs;90,3245
    BlockFrequencyInfo *BFI;BFI91,3275
    BranchProbabilityInfo *BPI;BPI92,3304
    AssumptionCache *AC;AC93,3336
    BasicBlock *AllocationBlock;AllocationBlock98,3559
    bool AllowVarArgs;101,3645
    SetVector<BasicBlock *> Blocks;104,3745
    unsigned NumExitBlocks 105,3781
    Type *RetTy;RetTy106,3848
    SmallVector<SmallVector110,3958
    SmallVector<BasicBlock *, 4> OldTargets;110,3958
    std::string Suffix;115,4212
    bool ArgsInZeroAddressSpace;119,4328
    struct LifetimeMarkerInfo 238,10375
    ValueSet ExcludeArgsFromAggregate;245,10560

/usr/include/llvm/Transforms/Utils/CodeLayout.h,371
#define LLVM_TRANSFORMS_UTILS_CODELAYOUT_H15,579
namespace llvm::codelayout 22,693
struct EdgeCount 26,769
  uint64_t src;27,788
  uint64_t dst;28,804
  uint64_t count;29,820
struct CDSortConfig 62,2600
  unsigned CacheEntries 64,2651
  unsigned CacheSize 66,2720
  unsigned MaxChainSize 68,2794
  double DistancePower 70,2883
  double FrequencyScale 72,2971

/usr/include/llvm/Transforms/Utils/CodeMoverUtils.h,54
#define LLVM_TRANSFORMS_UTILS_CODEMOVERUTILS_H18,742

/usr/include/llvm/Transforms/Utils/DXILUpgrade.h,113
#define LLVM_TRANSFORMS_UTILS_DXILUPGRADE_H10,414
class DXILUpgradePass 17,575
  PreservedAnalyses run(19,647

/usr/include/llvm/Transforms/Utils/FunctionComparator.h,735
#define LLVM_TRANSFORMS_UTILS_FUNCTIONCOMPARATOR_H15,652
class GlobalNumberState 54,2071
  struct Config 55,2097
    enum { FollowRAUW 56,2147
  using ValueNumberMap = ValueMap<GlobalValue *, uint64_t,62,2411
  ValueNumberMap GlobalNumbers;63,2479
  uint64_t getNumber(71,2640
  void erase(80,2890
  void clear(84,2964
class FunctionComparator 93,3304
  FunctionComparator(95,3339
  void beginCompare(104,3613
  const Function *FnL,FnL324,14202
  const Function *FnL, *FnR;FnR324,14202
  int cmpGEPs(344,15179
  mutable DenseMap<DenseMap382,17250
  mutable DenseMap<const Value*, int> sn_mapL,382,17250
  mutable DenseMap<const Value*, int> sn_mapL, sn_mapR;382,17250
  GlobalNumberState* GlobalNumbers;385,17341

/usr/include/llvm/Transforms/Utils/Local.h,45
#define LLVM_TRANSFORMS_UTILS_LOCAL_H15,580

/usr/include/llvm/Transforms/Utils/LoopConstrainer.h,1029
#define LLVM_TRANSFORMS_UTILS_LOOP_CONSTRAINER_H10,419
struct LoopStructure 34,1132
  template <typename M> LoopStructure map(65,2095
class LoopConstrainer 95,3496
  struct SubRanges 104,3968
    std::optional<const SCEV *> LowLimit;105,3989
    std::optional<const SCEV *> HighLimit;106,4031
  struct ClonedLoop 111,4166
    std::vector<BasicBlock *> Blocks;113,4213
    ValueToValueMapTy Map;116,4325
    LoopStructure Structure;119,4411
  struct RewrittenRangeInfo 124,4570
    std::vector<PHINode *> PHIValuesAtPseudoExit;127,4678
  Function &F;F190,7742
  LLVMContext &Ctx;Ctx191,7757
  ScalarEvolution &SE;SE192,7777
  DominatorTree &DT;DT193,7800
  LoopInfo &LI;LI194,7821
  function_ref<void(Loop *, bool)> LPMAddNewLoop;195,7837
  Loop &OriginalLoop;OriginalLoop198,7950
  BasicBlock *OriginalPreheader OriginalPreheader200,7973
  BasicBlock *MainLoopPreheader MainLoopPreheader204,8119
  Type *RangeTy;RangeTy207,8219
  LoopStructure MainLoopStructure;211,8340
  SubRanges SR;213,8376

/usr/include/llvm/Transforms/Utils/LoopUtils.h,971
#define LLVM_TRANSFORMS_UTILS_LOOPUTILS_H14,556
    RuntimePointerCheck;48,1416
class SinkAndHoistLICMFlags 118,4399
  void setIsSink(127,4731
  bool getIsSink(128,4772
  bool tooManyMemoryAccesses(129,4810
  bool tooManyClobberingCalls(130,4872
  void incrementClobberingCalls(131,4953
  unsigned LicmMssaOptCap;136,5095
  unsigned LicmMssaNoAccForPromotionCap;137,5122
  bool IsSink;138,5163
enum TransformationMode 275,12945
  TM_Unspecified,278,13068
  TM_Enable,281,13164
  TM_Disable,284,13226
  TM_Force 287,13293
  TM_ForcedByUser 292,13487
  TM_SuppressedByUser 298,13831
enum ReplaceExitVal 452,21697
  NeverRepl,453,21719
  OnlyCheapRepl,454,21732
  NoHardUse,455,21749
  UnusedIndVarInLoop,456,21762
  AlwaysRepl457,21784
struct IVConditionInfo 530,25865
  SmallVector<Instruction *> InstToDuplicate;533,25985
  Constant *KnownValue KnownValue536,26103
  bool PathIsNoop 540,26274
  BasicBlock *ExitForPath ExitForPath544,26433

/usr/include/llvm/Transforms/Utils/MisExpect.h,49
#define LLVM_TRANSFORMS_UTILS_MISEXPECT_H18,826

/usr/include/llvm/Transforms/Utils/ModuleUtils.h,51
#define LLVM_TRANSFORMS_UTILS_MODULEUTILS_H14,563

/usr/include/llvm/Transforms/Utils/NameAnonGlobals.h,153
#define LLVM_TRANSFORMS_UTILS_NAMEANONGLOBALS_H15,606
class NameAnonGlobalPass 22,772
  PreservedAnalyses run(26,885
  static bool isRequired(28,949

/usr/include/llvm/Transforms/Utils/PredicateInfo.h,1767
#define LLVM_TRANSFORMS_UTILS_PREDICATEINFO_H51,1895
enum PredicateType 70,2298
enum PredicateType { PT_Branch,70,2298
enum PredicateType { PT_Branch, PT_Assume,70,2298
enum PredicateType { PT_Branch, PT_Assume, PT_Switch 70,2298
struct PredicateConstraint 74,2497
  CmpInst::Predicate Predicate;75,2526
  Value *OtherOp;OtherOp76,2558
class PredicateBase 81,2699
  PredicateType Type;83,2764
  Value *OriginalOp;OriginalOp87,2979
  Value *RenamedOp;RenamedOp91,3169
  Value *Condition;Condition93,3240
  static bool classof(99,3436
  PredicateBase(108,3728
class PredicateAssume 115,4026
  IntrinsicInst *AssumeInst;AssumeInst117,4081
  PredicateAssume(118,4110
  static bool classof(121,4289
class PredicateWithEdge 129,4543
  BasicBlock *From;From131,4600
  BasicBlock *To;To132,4620
  static bool classof(134,4670
  PredicateWithEdge(139,4794
class PredicateBranch 145,5027
  bool TrueEdge;148,5167
  PredicateBranch(149,5184
  static bool classof(154,5441
class PredicateSwitch 159,5532
  Value *CaseValue;CaseValue161,5591
  SwitchInst *Switch;Switch163,5648
  PredicateSwitch(164,5670
  static bool classof(170,5977
class PredicateInfo 177,6156
  const PredicateBase *getPredicateInfoFor(getPredicateInfoFor187,6366
  Function &F;F197,6641
  iplist<PredicateBase> AllInfos;200,6732
  DenseMap<DenseMap205,6939
  DenseMap<const Value *, const PredicateBase *> PredicateMap;205,6939
  SmallSet<SmallSet207,7077
  SmallSet<AssertingVH<Function>, 20> CreatedDeclarations;207,7077
class PredicateInfoPrinterPass211,7179
  raw_ostream &OS;OS213,7265
  explicit PredicateInfoPrinterPass(216,7293
  static bool isRequired(218,7425
struct PredicateInfoVerifierPass 222,7513
  static bool isRequired(224,7658

/usr/include/llvm/Transforms/Utils/SCCPSolver.h,396
#define LLVM_TRANSFORMS_UTILS_SCCPSOLVER_H15,589
struct ArgInfo 41,1197
  Argument *Formal;Formal42,1214
  Constant *Actual;Actual43,1273
  ArgInfo(45,1339
  friend hash_code hash_value(53,1593
class SCCPSolver 65,1954
  std::unique_ptr<SCCPInstVisitor> Visitor;66,1973
  const MapVector<MapVector140,4845
  const DenseMap<DenseMap144,5021
  const SmallPtrSet<SmallPtrSet148,5212

/usr/include/llvm/Transforms/Utils/SSAUpdater.h,472
#define LLVM_TRANSFORMS_UTILS_SSAUPDATER_H14,544
class SSAUpdater 40,1169
  std::string ProtoName;52,1538
  SmallVectorImpl<PHINode *> *InsertedPHIs;InsertedPHIs56,1662
class LoadAndStorePromoter 150,5437
  SSAUpdater &SSA;SSA152,5477
  virtual void doExtraRewritesBeforeFinalDeletion(175,6399
  virtual void replaceLoadWithValue(179,6565
  virtual void instructionDeleted(182,6684
  virtual void updateDebugInfo(185,6811
  virtual bool shouldDelete(189,6974

/usr/include/llvm/Transforms/Utils/SampleProfileInference.h,2421
#define LLVM_TRANSFORMS_UTILS_SAMPLEPROFILEINFERENCE_H15,597
struct FlowBlock 26,835
  uint64_t Index;27,854
  uint64_t Weight{Weight28,872
  bool HasUnknownWeight{HasUnknownWeight29,894
  bool IsUnlikely{IsUnlikely30,925
  uint64_t Flow{Flow31,951
  std::vector<FlowJump *> SuccJumps;32,971
  std::vector<FlowJump *> PredJumps;33,1008
  bool isEntry(36,1100
  bool isExit(39,1206
struct FlowJump 43,1312
  uint64_t Source;44,1330
  uint64_t Target;45,1349
  uint64_t Weight{Weight46,1368
  bool HasUnknownWeight{HasUnknownWeight47,1390
  bool IsUnlikely{IsUnlikely48,1421
  uint64_t Flow{Flow49,1447
struct FlowFunction 53,1533
  std::vector<FlowBlock> Blocks;55,1591
  std::vector<FlowJump> Jumps;57,1662
  uint64_t Entry{Entry59,1729
struct ProfiParams 65,1979
  bool EvenFlowDistribution{EvenFlowDistribution67,2077
  bool RebalanceUnknown{RebalanceUnknown70,2171
  bool JoinIslands{JoinIslands73,2257
  unsigned CostBlockInc{CostBlockInc76,2338
  unsigned CostBlockDec{CostBlockDec79,2420
  unsigned CostBlockZeroInc{CostBlockZeroInc82,2515
  unsigned CostBlockEntryInc{CostBlockEntryInc85,2609
  unsigned CostBlockEntryDec{CostBlockEntryDec88,2704
  unsigned CostBlockUnknownInc{CostBlockUnknownInc91,2800
  unsigned CostJumpInc{CostJumpInc94,2888
  unsigned CostJumpFTInc{CostJumpFTInc97,2981
  unsigned CostJumpDec{CostJumpDec100,3063
  unsigned CostJumpFTDec{CostJumpFTDec103,3156
  unsigned CostJumpUnknownInc{CostJumpUnknownInc106,3247
  unsigned CostJumpUnknownFTInc{CostJumpUnknownFTInc109,3356
  const int64_t CostUnlikely 112,3442
template <typename FT> class SampleProfileInference 119,3650
  using NodeRef 121,3712
  using BasicBlockT 122,3767
  using FunctionT 123,3821
  using Edge 124,3845
  using BlockWeightMap 125,3913
  using EdgeWeightMap 126,3979
  using BlockEdgeMap 127,4029
      DenseMap<const BasicBlockT *, SmallVector<SmallVector128,4052
  SampleProfileInference(130,4127
  const FunctionT &F;F153,5193
  BlockEdgeMap &Successors;Successors156,5266
  BlockWeightMap &SampleBlockWeights;SampleBlockWeights159,5344
void SampleProfileInference<BT>::apply(apply163,5409
FlowFunction SampleProfileInference<BT>::createFlowFunction(createFlowFunction242,8062
inline void SampleProfileInference<BT>::findUnlikelyJumps(findUnlikelyJumps301,9807
inline bool SampleProfileInference<BT>::isExit(isExit306,10000

/usr/include/llvm/Transforms/Utils/SampleProfileLoaderBaseImpl.h,4842
#define LLVM_TRANSFORMS_UTILS_SAMPLEPROFILELOADERBASEIMPL_H16,624
namespace vfs 51,1815
#define DEBUG_TYPE 55,1869
namespace afdo_detail 57,1911
template <> struct IRTraits<IRTraits60,1980
  static Function &getFunction(getFunction74,2598
  static const BasicBlock *getEntryBB(getEntryBB75,2656
  static pred_range getPredecessors(78,2751
  static succ_range getSuccessors(79,2832
class PseudoProbeManager 87,3113
  DenseMap<DenseMap88,3140
  DenseMap<uint64_t, PseudoProbeDescriptor> GUIDToProbeDescMap;88,3140
  PseudoProbeManager(91,3213
  const PseudoProbeDescriptor *getDesc(getDesc105,3783
  const PseudoProbeDescriptor *getDesc(getDesc110,3959
  const PseudoProbeDescriptor *getDesc(getDesc114,4088
  bool profileIsHashMismatched(118,4238
  bool moduleIsProbed(123,4452
  bool profileIsValid(127,4564
template <typename FT> class SampleProfileLoaderBaseImpl 147,5108
  SampleProfileLoaderBaseImpl(149,5175
  void dump(152,5391
  using NodeRef 154,5426
  using BT 155,5481
  using InstructionT 156,5526
  using BasicBlockT 157,5599
  using BlockFrequencyInfoT 158,5670
  using FunctionT 160,5763
  using LoopT 161,5830
  using LoopInfoPtrT 162,5889
  using DominatorTreePtrT 163,5962
  using PostDominatorTreePtrT 165,6051
  using PostDominatorTreeT 167,6148
  using OptRemarkEmitterT 169,6239
  using OptRemarkAnalysisT 171,6328
  using PredRangeT 173,6419
  using SuccRangeT 174,6488
  using BlockWeightMap 176,6558
  using EquivalenceClassMap 177,6624
  using Edge 179,6712
  using EdgeWeightMap 180,6780
  using BlockEdgeMap 181,6830
      DenseMap<const BasicBlockT *, SmallVector<SmallVector182,6853
  Function &getFunction(getFunction188,7022
  const BasicBlockT *getEntryBB(getEntryBB191,7120
  PredRangeT getPredecessors(194,7231
  SuccRangeT getSuccessors(197,7342
  mutable DenseMap<DenseMap206,7757
      DILocation2SampleMap;207,7821
  BlockWeightMap BlockWeights;241,9471
  EdgeWeightMap EdgeWeights;247,9661
  SmallPtrSet<SmallPtrSet250,9739
  SmallPtrSet<const BasicBlockT *, 32> VisitedBlocks;250,9739
  SmallSet<SmallSet253,9841
  SmallSet<Edge, 32> VisitedEdges;253,9841
  EquivalenceClassMap EquivalenceClass;261,10178
  DominatorTreePtrT DT;264,10273
  PostDominatorTreePtrT PDT;265,10297
  LoopInfoPtrT LI;266,10326
  BlockEdgeMap Predecessors;269,10398
  BlockEdgeMap Successors;272,10478
  SampleCoverageTracker CoverageTracker;275,10538
  std::unique_ptr<SampleProfileReader> Reader;278,10609
  std::map<std::map283,10893
  std::map<SampleContext, FunctionSamples> OutlineFunctionSamples;283,10893
  std::unique_ptr<PseudoProbeManager> ProbeManager;286,11029
  FunctionSamples *Samples Samples289,11137
  std::string Filename;292,11216
  std::string RemappingFilename;295,11291
  IntrusiveRefCntPtr<vfs::FileSystem> FS;298,11377
  ProfileSummaryInfo *PSI PSI301,11477
  OptRemarkEmitterT *ORE ORE304,11582
void SampleProfileLoaderBaseImpl<BT>::clearFunctionData(clearFunctionData309,11725
void SampleProfileLoaderBaseImpl<BT>::printEdgeWeight(printEdgeWeight331,12240
void SampleProfileLoaderBaseImpl<BT>::printBlockEquivalence(printBlockEquivalence341,12603
void SampleProfileLoaderBaseImpl<BT>::printBlockWeight(printBlockWeight353,13039
SampleProfileLoaderBaseImpl<BT>::getInstWeight(getInstWeight374,13819
SampleProfileLoaderBaseImpl<BT>::getInstWeightImpl(getInstWeightImpl382,14049
SampleProfileLoaderBaseImpl<BT>::getProbeWeight(getProbeWeight429,15721
SampleProfileLoaderBaseImpl<BT>::getBlockWeight(getBlockWeight493,18280
bool SampleProfileLoaderBaseImpl<BT>::computeBlockWeights(computeBlockWeights513,18850
const FunctionSamples *SampleProfileLoaderBaseImpl<BT>::findFunctionSamples(findFunctionSamples539,19674
void SampleProfileLoaderBaseImpl<BT>::findEquivalencesFor(findEquivalencesFor576,21119
void SampleProfileLoaderBaseImpl<BT>::findEquivalenceClasses(findEquivalenceClasses620,22885
uint64_t SampleProfileLoaderBaseImpl<BT>::visitEdge(visitEdge681,25110
bool SampleProfileLoaderBaseImpl<BT>::propagateThroughEdges(propagateThroughEdges707,26037
void SampleProfileLoaderBaseImpl<BT>::buildEdges(buildEdges857,32546
void SampleProfileLoaderBaseImpl<BT>::propagateWeights(propagateWeights897,34062
void SampleProfileLoaderBaseImpl<FT>::applyProfi(applyProfi952,36009
bool SampleProfileLoaderBaseImpl<BT>::computeAndPropagateWeights(computeAndPropagateWeights1006,38568
void SampleProfileLoaderBaseImpl<BT>::initWeightPropagation(initWeightPropagation1028,39116
void SampleProfileLoaderBaseImpl<BT>::finalizeWeightPropagation(finalizeWeightPropagation1056,40214
void SampleProfileLoaderBaseImpl<BT>::emitCoverageRemarks(emitCoverageRemarks1076,41114
unsigned SampleProfileLoaderBaseImpl<BT>::getFunctionLoc(getFunctionLoc1118,42971
#undef DEBUG_TYPE1135,43509

/usr/include/llvm/Transforms/Utils/ScalarEvolutionExpander.h,3059
#define LLVM_TRANSFORMS_UTILS_SCALAREVOLUTIONEXPANDER_H14,593
struct SCEVOperand 33,1277
  explicit SCEVOperand(34,1298
  unsigned ParentOpcode;37,1463
  int OperandIdx;39,1536
  const SCEV* S;41,1591
class SCEVExpander 50,1878
  ScalarEvolution &SE;SE51,1943
  const DataLayout &DL;DL52,1966
  const char *IVName;IVName55,2068
  bool PreserveLCSSA;58,2165
  DenseMap<DenseMap61,2258
      InsertedExpressions;62,2328
  DenseSet<AssertingVH<Value>> InsertedValues;65,2427
  DenseSet<AssertingVH<Value>> InsertedPostIncValues;66,2474
  SmallPtrSet<SmallPtrSet71,2706
  SmallPtrSet<Value *, 16> ReusedValues;71,2706
  SmallVector<SmallVector74,2788
  SmallVector<WeakVH, 2> InsertedIVs;74,2788
  DenseMap<DenseMap77,2888
  DenseMap<const SCEV *, const Loop *> RelevantLoops;77,2888
  PostIncLoopSet PostIncLoops;83,3247
  const Loop *IVIncInsertLoop;IVIncInsertLoop87,3410
  Instruction *IVIncInsertPos;IVIncInsertPos91,3548
  DenseSet<AssertingVH<PHINode>> ChainedPhis;94,3624
  bool CanonicalMode;103,4092
  bool LSRMode;108,4292
  typedef IRBuilder<InstSimplifyFolder,InstSimplifyFolder110,4309
  typedef IRBuilder<InstSimplifyFolder, IRBuilderCallbackInserter> BuilderType;110,4309
  BuilderType Builder;111,4389
  class SCEVInsertPointGuard 118,4729
    IRBuilderBase &Builder;Builder119,4760
    AssertingVH<BasicBlock> Block;120,4788
    BasicBlock::iterator Point;121,4823
    DebugLoc DbgLoc;122,4855
    SCEVExpander *SE;SE123,4876
    SCEVInsertPointGuard(129,5051
    ~SCEVInsertPointGuard(135,5296
    BasicBlock::iterator GetInsertPoint(145,5714
    void SetInsertPoint(146,5780
  SmallVector<SmallVector151,5970
  SmallVector<SCEVInsertPointGuard *, 8> InsertPointGuards;151,5970
  const char *DebugType;DebugType154,6070
  explicit SCEVExpander(161,6216
  ~SCEVExpander(174,6770
  void setDebugType(180,6934
  void clear(186,7199
  ScalarEvolution *getSE(getSE195,7393
  const SmallVectorImpl<WeakVH> &getInsertedIVs(getInsertedIVs196,7436
  SmallVector<SmallVector199,7594
  SmallVector<Instruction *, 32> getAllInsertedInstructions(199,7594
  bool isHighCostExpansion(225,8447
  Value *expandCodeFor(expandCodeFor280,11374
  void setIVIncInsertPos(313,13067
  void setPostInc(322,13425
  void clearPostInc(329,13632
  void disableCanonicalMode(340,13994
  void enableLSRMode(342,14052
  void setInsertPoint(348,14370
  void setInsertPoint(353,14464
  void clearInsertPoint(359,14716
  void SetCurrentDebugLocation(362,14840
  DebugLoc getCurrentDebugLocation(367,15003
  bool isInsertedInstruction(374,15315
  void setChainedPhi(378,15443
  LLVMContext &getContext(getContext396,16290
  Value *expand(expand437,18406
  Value *expand(expand441,18512
  Value *visitConstant(visitConstant452,18858
  Value *visitUnknown(visitUnknown482,19659
class SCEVExpanderCleaner 506,20582
  SCEVExpander &Expander;Expander507,20610
  bool ResultUsed;511,20767
  SCEVExpanderCleaner(514,20795
  ~SCEVExpanderCleaner(517,20891
  void markResultUsed(520,20989

/usr/include/llvm/Transforms/Utils/SymbolRewriter.h,524
#define LLVM_TRANSFORMS_UTILS_SYMBOLREWRITER_H33,1613
class RewriteDescriptor 67,2639
  enum class Type 69,2673
    Invalid,70,2693
    Function,71,2725
    GlobalVariable,72,2791
    NamedAlias,73,2871
  Type getType(80,3118
  explicit RewriteDescriptor(85,3218
  const Type Kind;88,3278
using RewriteDescriptorList 91,3301
class RewriteMapParser 93,3379
class RewriteSymbolPass 116,4471
  RewriteSymbolPass(118,4547
  RewriteSymbolPass(120,4598
  SymbolRewriter::RewriteDescriptorList Descriptors;132,4871

/usr/include/llvm/Transforms/Utils/UnifyFunctionExitNodes.h,134
#define LLVM_TRANSFORMS_UTILS_UNIFYFUNCTIONEXITNODES_H15,626
class UnifyFunctionExitNodesPass22,757
  PreservedAnalyses run(25,855

/usr/include/llvm/Transforms/Utils/UnrollLoop.h,611
#define LLVM_TRANSFORMS_UTILS_UNROLLLOOP_H16,662
enum class LoopUnrollResult 54,1735
  Unmodified,56,1798
  PartiallyUnrolled,61,2002
  FullyUnrolled65,2124
struct UnrollLoopOptions 68,2144
  unsigned Count;69,2171
  bool Force;70,2189
  bool Runtime;71,2203
  bool AllowExpensiveTripCount;72,2219
  bool UnrollRemainder;73,2251
  bool ForgetAllSCEV;74,2275
class UnrollCostEstimator 122,4732
  InstructionCost LoopSize;123,4760
  bool NotDuplicatable;124,4788
  unsigned NumInlineCandidates;127,4821
  bool Convergent;128,4853
  bool canUnroll(135,5102
  uint64_t getRolledLoopSize(137,5179

/usr/include/llvm/Transforms/Utils/ValueMapper.h,785
#define LLVM_TRANSFORMS_UTILS_VALUEMAPPER_H15,656
class ValueMapTypeRemapper 40,1247
  virtual void anchor(41,1276
class ValueMaterializer 53,1621
enum RemapFlags 69,2173
  RF_None 70,2191
  RF_NoModuleLevelChanges 75,2409
  RF_IgnoreMissingLocals 93,3306
  RF_ReuseAndMutateDistinctMDs 99,3577
  RF_NullMapMissingGlobalValues 103,3756
inline RemapFlags operator|(106,3797
class ValueMapper 148,5715
  void *pImpl;pImpl149,5735
inline Value *MapValue(MapValue217,8783
inline Metadata *MapMetadata(MapMetadata239,9870
inline MDNode *MapMetadata(MapMetadata247,10281
inline void RemapInstruction(262,10984
inline void RemapDPValue(270,11405
inline void RemapDPValueRange(278,11816
inline void RemapFunction(291,12545
inline Constant *MapValue(MapValue299,12929

/usr/include/llvm/Transforms/Vectorize/LoadStoreVectorizer.h,133
#define LLVM_TRANSFORMS_VECTORIZE_LOADSTOREVECTORIZER_H10,426
class LoadStoreVectorizerPass 18,563
  PreservedAnalyses run(20,651

/usr/include/llvm/Transforms/Vectorize/SLPVectorizer.h,1208
#define LLVM_TRANSFORMS_VECTORIZE_SLPVECTORIZER_H19,934
struct SLPVectorizerPass 57,1790
  using StoreList 58,1859
  using StoreListMap 59,1908
  using GEPList 60,1962
  using GEPListMap 61,2017
  using InstSetVector 62,2067
  ScalarEvolution *SE SE64,2126
  TargetTransformInfo *TTI TTI65,2159
  TargetLibraryInfo *TLI TLI66,2197
  AAResults *AA AA67,2233
  LoopInfo *LI LI68,2260
  DominatorTree *DT DT69,2286
  AssumptionCache *AC AC70,2317
  DemandedBits *DB DB71,2350
  const DataLayout *DL DL72,2380
  PreservedAnalyses run(75,2423
  bool runImpl(78,2513
  void collectSeedInstructions(91,3182
  bool tryToVectorizeList(96,3396
  bool tryToVectorize(100,3594
  bool tryToVectorize(104,3757
  bool vectorizeStoreChains(108,3922
  bool vectorizeGEPIndices(112,4077
  bool vectorizeHorReduction(122,4627
  bool vectorizeRootInstruction(130,5054
  bool vectorizeInsertValueInst(135,5321
  bool vectorizeInsertElementInst(139,5523
  bool vectorizeCmpInsts(144,5749
  bool vectorizeInserts(149,5980
  bool vectorizeChainsInBlock(154,6205
  bool vectorizeStoreChain(156,6280
  bool vectorizeStores(159,6418
  StoreListMap Stores;162,6573
  GEPListMap GEPs;165,6678

/usr/include/llvm/Transforms/Vectorize/VectorCombine.h,185
#define LLVM_TRANSFORMS_VECTORIZE_VECTORCOMBINE_H16,688
class VectorCombinePass 23,863
  bool TryEarlyFoldsOnly;26,1037
  VectorCombinePass(29,1072
  PreservedAnalyses run(32,1173

/usr/include/llvm/Transforms/Vectorize/LoopVectorizationLegality.h,3998
#define LLVM_TRANSFORMS_VECTORIZE_LOOPVECTORIZATIONLEGALITY_H27,1152
class LoopVectorizeHints 60,2316
  enum HintKind 61,2343
    HK_WIDTH,62,2361
    HK_INTERLEAVE,63,2375
    HK_FORCE,64,2394
    HK_ISVECTORIZED,65,2408
    HK_PREDICATE,66,2429
    HK_SCALABLE67,2447
  struct Hint 71,2534
    const char *Name;Name72,2550
    unsigned Value;73,2572
    HintKind Kind;74,2643
    Hint(76,2663
    bool validate(79,2772
  Hint Width;83,2838
  Hint Interleave;86,2892
  Hint Force;89,2939
  Hint IsVectorized;92,2979
  Hint Predicate;95,3024
  Hint Scalable;98,3115
  static StringRef Prefix(101,3172
  enum ForceKind 107,3321
    FK_Undefined 108,3340
    FK_Disabled 109,3382
    FK_Enabled 110,3428
  enum ScalableForceKind 113,3479
    SK_Unspecified 115,3528
    SK_FixedWidthOnly 117,3607
    SK_PreferScalable 121,3864
  LoopVectorizeHints(124,3896
  void setAlreadyVectorized(129,4152
  bool allowVectorization(131,4184
  unsigned getInterleave(142,4555
  unsigned getIsVectorized(151,4873
  unsigned getPredicate(152,4939
  enum ForceKind getForce(153,4999
  bool isScalableVectorizationDisabled(161,5272
  bool isPotentiallyUnsafe(176,5953
  void setPotentiallyUnsafe(185,6434
  const Loop *TheLoop;TheLoop195,6761
  OptimizationRemarkEmitter &ORE;ORE198,6831
class LoopVectorizationRequirements 213,7690
  void addExactFPMathInst(216,7813
  Instruction *getExactFPInst(getExactFPInst221,7920
  Instruction *ExactFPMathInst ExactFPMathInst224,7990
class LoopVectorizationLegality 240,8901
  LoopVectorizationLegality(242,8943
  using ReductionList 254,9632
  using InductionList 258,9796
  using RecurrenceSet 262,9972
  PHINode *getPrimaryInduction(getPrimaryInduction284,11043
  const ReductionList &getReductionVars(getReductionVars287,11163
  const InductionList &getInductionVars(getInductionVars290,11292
  RecurrenceSet &getFixedOrderRecurrences(getFixedOrderRecurrences293,11424
  Type *getWidestInductionType(getWidestInductionType296,11544
  bool isReductionVariable(328,12982
  const RuntimePointerChecking *getRuntimePointerChecking(getRuntimePointerChecking363,14703
  const LoopAccessInfo *getLAI(getLAI367,14821
  bool isSafeForAnyVectorWidth(369,14877
  uint64_t getMaxSafeVectorWidthInBits(373,14982
  bool isMaskRequired(379,15188
  bool hasVectorCallVariants(385,15396
  unsigned getNumStores(387,15467
  unsigned getNumLoads(388,15531
  PredicatedScalarEvolution *getPredicatedScalarEvolution(getPredicatedScalarEvolution390,15594
  Loop *getLoop(getLoop394,15684
  LoopInfo *getLoopInfo(getLoopInfo396,15729
  AssumptionCache *getAssumptionCache(getAssumptionCache398,15777
  ScalarEvolution *getScalarEvolution(getScalarEvolution400,15839
  DominatorTree *getDominatorTree(getDominatorTree402,15910
  Loop *TheLoop;TheLoop464,19052
  LoopInfo *LI;LI467,19096
  PredicatedScalarEvolution &PSE;PSE474,19427
  TargetTransformInfo *TTI;TTI477,19491
  TargetLibraryInfo *TLI;TLI480,19547
  DominatorTree *DT;DT483,19596
  LoopAccessInfoManager &LAIs;LAIs486,19644
  const LoopAccessInfo *LAI LAI488,19676
  OptimizationRemarkEmitter *ORE;ORE491,19762
  PHINode *PrimaryInduction PrimaryInduction497,19919
  ReductionList Reductions;500,19996
  InductionList Inductions;505,20204
  SmallPtrSet<SmallPtrSet511,20485
  SmallPtrSet<Instruction *, 4> InductionCastsToIgnore;511,20485
  RecurrenceSet FixedOrderRecurrences;514,20602
  Type *WidestIndTy WidestIndTy517,20693
  SmallPtrSet<SmallPtrSet521,20829
  SmallPtrSet<Value *, 4> AllowedExit;521,20829
  LoopVectorizationRequirements *Requirements;Requirements524,20940
  LoopVectorizeHints *Hints;Hints527,21043
  DemandedBits *DB;DB531,21191
  AssumptionCache *AC;AC535,21333
  SmallPtrSet<SmallPtrSet540,21520
  SmallPtrSet<const Instruction *, 8> MaskedOp;540,21520
  BlockFrequencyInfo *BFI;BFI543,21644
  ProfileSummaryInfo *PSI;PSI544,21671
  bool VecCallVariantsFound 550,21953

/usr/include/llvm/Transforms/Vectorize/LoopVectorize.h,1313
#define LLVM_TRANSFORMS_VECTORIZE_LOOPVECTORIZE_H57,2653
struct ShouldRunExtraVectorPasses84,3292
  static AnalysisKey Key;86,3387
  struct Result 87,3413
    bool invalidate(88,3431
  Result run(97,3784
struct ExtraVectorPassManager 104,4108
  PreservedAnalyses run(105,4169
struct LoopVectorizeOptions 114,4458
  bool InterleaveOnlyWhenForced;117,4620
  bool VectorizeOnlyWhenForced;121,4788
  LoopVectorizeOptions(132,5404
  LoopVectorizeOptions(134,5504
  LoopVectorizeOptions &setInterleaveOnlyWhenForced(setInterleaveOnlyWhenForced139,5732
  LoopVectorizeOptions &setVectorizeOnlyWhenForced(setVectorizeOnlyWhenForced144,5859
struct LoopVectorizeResult 151,6035
  bool MadeAnyChange;152,6064
  bool MadeCFGChange;153,6086
  LoopVectorizeResult(155,6109
struct LoopVectorizePass 160,6273
  bool InterleaveOnlyWhenForced;164,6483
  bool VectorizeOnlyWhenForced;168,6651
  ScalarEvolution *SE;SE173,6746
  LoopInfo *LI;LI174,6769
  TargetTransformInfo *TTI;TTI175,6785
  DominatorTree *DT;DT176,6813
  BlockFrequencyInfo *BFI;BFI177,6834
  TargetLibraryInfo *TLI;TLI178,6861
  DemandedBits *DB;DB179,6887
  AssumptionCache *AC;AC180,6907
  LoopAccessInfoManager *LAIs;LAIs181,6930
  OptimizationRemarkEmitter *ORE;ORE182,6961
  ProfileSummaryInfo *PSI;PSI183,6995

/usr/include/llvm/Transforms/ObjCARC.h,366
#define LLVM_TRANSFORMS_OBJCARC_H15,622
struct ObjCARCOptPass 29,890
  PreservedAnalyses run(30,953
struct ObjCARCContractPass 33,1024
  PreservedAnalyses run(34,1097
struct ObjCARCAPElimPass 37,1168
  PreservedAnalyses run(38,1237
struct ObjCARCExpandPass 41,1304
  PreservedAnalyses run(42,1373
struct PAEvalPass 45,1444
  PreservedAnalyses run(46,1499

/usr/include/llvm/Transforms/Utils.h,39
#define LLVM_TRANSFORMS_UTILS_H15,611

/usr/include/llvm/Transforms/HipStdPar/HipStdPar.h,256
#define LLVM_TRANSFORMS_HIPSTDPAR_HIPSTDPAR_H19,817
class HipStdParAcceleratorCodeSelectionPass27,931
  PreservedAnalyses run(30,1049
  static bool isRequired(32,1114
class HipStdParAllocationInterpositionPass35,1162
  static bool isRequired(40,1343

/usr/include/llvm/Transforms/CFGuard.h,275
#define LLVM_TRANSFORMS_CFGUARD_H12,533
class CFGuardPass 20,641
  enum class Mechanism 22,705
  enum class Mechanism { Check,22,705
  enum class Mechanism { Check, Dispatch 22,705
  CFGuardPass(24,750
  PreservedAnalyses run(25,819
  Mechanism GuardMechanism;28,897

/usr/include/llvm/Transforms/IPO.h,127
#define LLVM_TRANSFORMS_IPO_H15,607
enum class PassSummaryAction 52,1885
  None,53,1916
  Import,54,1943
  Export,55,1991

/usr/include/llvm/Transforms/Instrumentation.h,1345
#define LLVM_TRANSFORMS_INSTRUMENTATION_H14,570
struct GCOVOptions 59,2297
  bool EmitNotes;63,2396
  bool EmitData;66,2488
  char Version[Version70,2608
  bool NoRedZone;73,2695
  std::string Filter;79,2856
  std::string Exclude;82,2957
namespace pgo 90,3312
struct InstrProfOptions 111,4238
  bool NoRedZone 113,4331
  bool DoCounterPromotion 116,4393
  bool Atomic 119,4473
  bool UseBFIInPromotion 122,4538
  std::string InstrProfileOutput;125,4620
struct SanitizerCoverageOptions 131,4742
  enum Type 132,4776
    SCK_None 133,4790
    SCK_Function,134,4808
    SCK_BB,135,4826
    SCK_Edge136,4838
  } CoverageType 137,4851
  bool IndirectCalls 138,4880
  bool TraceBB 139,4910
  bool TraceCmp 140,4934
  bool TraceDiv 141,4959
  bool TraceGep 142,4984
  bool Use8bitCounters 143,5009
  bool TracePC 144,5041
  bool TracePCGuard 145,5065
  bool Inline8bitCounters 146,5094
  bool InlineBoolFlag 147,5129
  bool PCTable 148,5160
  bool NoPrune 149,5184
  bool StackDepth 150,5208
  bool TraceLoads 151,5235
  bool TraceStores 152,5262
  bool CollectControlFlow 153,5290
static inline uint64_t calculateCountScale(162,5568
static inline uint32_t scaleBranchCount(172,5881
struct InstrumentationIRBuilder 185,6501
  static void ensureDebugInfo(186,6549
  explicit InstrumentationIRBuilder(193,6802

/usr/include/llvm/Transforms/Scalar.h,40
#define LLVM_TRANSFORMS_SCALAR_H15,613

/usr/include/llvm/WindowsDriver/MSVCPaths.h,228
#define LLVM_WINDOWSDRIVER_MSVCPATHS_H10,409
enum class SubDirectoryType 24,647
  Bin,25,677
  Include,26,684
  Lib,27,695
enum class ToolsetLayout 30,706
  OlderVS,31,733
  VS2017OrNewer,32,744
  DevDivInternal,33,761

/usr/include/llvm/WindowsDriver/MSVCSetupApi.h,1603
#define E_NOTFOUND 39,1528
#define E_FILENOTFOUND 43,1614
enum InstanceState 51,1764
  eNone 55,1879
  eLocal 60,1971
  eRegistered 65,2066
  eNoRebootRequired 70,2165
  eComplete 75,2274
#define __ISetupInstance_FWD_DEFINED__81,2377
typedef struct ISetupInstance ISetupInstance;82,2416
#define __ISetupInstance2_FWD_DEFINED__86,2510
typedef struct ISetupInstance2 ISetupInstance2;87,2550
#define __IEnumSetupInstances_FWD_DEFINED__91,2650
typedef struct IEnumSetupInstances IEnumSetupInstances;92,2694
#define __ISetupConfiguration_FWD_DEFINED__96,2802
typedef struct ISetupConfiguration ISetupConfiguration;97,2846
#define __ISetupConfiguration2_FWD_DEFINED__101,2955
typedef struct ISetupConfiguration2 ISetupConfiguration2;102,3000
#define __ISetupPackageReference_FWD_DEFINED__106,3113
typedef struct ISetupPackageReference ISetupPackageReference;107,3160
#define __ISetupHelper_FWD_DEFINED__111,3267
typedef struct ISetupHelper ISetupHelper;112,3304
#define __SetupConfiguration_FWD_DEFINED__118,3430
typedef class SetupConfiguration SetupConfiguration;121,3493
EXTERN_C const IID IID_ISetupInstance;132,3630
EXTERN_C const IID IID_ISetupInstance2;230,8238
EXTERN_C const IID IID_IEnumSetupInstances;281,10434
EXTERN_C const IID IID_ISetupConfiguration;332,12659
EXTERN_C const IID IID_ISetupConfiguration2;369,14038
EXTERN_C const IID IID_ISetupPackageReference;387,14671
EXTERN_C const IID IID_ISetupHelper;450,17045
EXTERN_C const CLSID CLSID_SetupConfiguration;493,18799
class DECLSPEC_UUID("177F0C4A-1CD3-4DE7-A32C-71DBBB9FA36D") SetupConfiguration;500,19028

/usr/include/llvm/WindowsManifest/WindowsManifestMerger.h,271
#define LLVM_WINDOWSMANIFEST_WINDOWSMANIFESTMERGER_H26,1337
class WindowsManifestError 39,1537
  static char ID;41,1624
  WindowsManifestError(42,1642
  void log(43,1684
class WindowsManifestMerger 49,1761
  std::unique_ptr<WindowsManifestMergerImpl> Impl;61,2095

/usr/include/llvm/WindowsResource/ResourceProcessor.h,527
#define LLVM_INCLUDE_LLVM_SUPPORT_WINDOWS_RESOURCE_PROCESSOR_H10,431
class WindowsResourceProcessor 23,686
  WindowsResourceProcessor(27,770
  void addDefine(29,803
  void addInclude(32,922
  void setVerbose(35,1015
  void setNullAtEnd(36,1072
  Error process(38,1137
  StringRef InputData;42,1235
  std::vector<PathType> IncludeList;43,1258
  std::vector<std::vector44,1295
  std::vector<std::pair<StringRef, StringRef>> PreprocessorDefines;44,1295
  bool IsVerbose,45,1363
  bool IsVerbose, AppendNull;45,1363

/usr/include/llvm/WindowsResource/ResourceScriptToken.h,270
#define LLVM_INCLUDE_LLVM_SUPPORT_WINDOWS_RESOURCE_SCRIPTTOKEN_H17,715
class RCToken 29,1181
  enum class Kind 31,1205
#define TOKEN(32,1225
#define SHORT_TOKEN(33,1251
#undef TOKEN35,1324
#undef SHORT_TOKEN36,1337
  RCToken(39,1362
  uint32_t intValue(42,1466

/usr/include/llvm/WindowsResource/ResourceScriptTokenList.h,14
TOKEN(16,640

/usr/include/llvm/XRay/BlockIndexer.h,362
#define LLVM_XRAY_BLOCKINDEXER_H14,622
class BlockIndexer 26,909
  struct Block 28,961
    uint64_t ProcessID;29,978
    int32_t ThreadID;30,1002
    WallclockRecord *WallclockTime;WallclockTime31,1024
    std::vector<Record *> Records;32,1060
  Index &Indices;Indices39,1260
  Block CurrentBlock{CurrentBlock41,1279
  explicit BlockIndexer(44,1329

/usr/include/llvm/XRay/BlockPrinter.h,346
#define LLVM_XRAY_BLOCKPRINTER_H14,596
class BlockPrinter 23,775
  enum class State 24,819
    Start,25,840
    Preamble,26,851
    Metadata,27,865
    Function,28,879
    Arg,29,893
    CustomEvent,30,902
    End,31,919
  raw_ostream &OS;OS34,934
  RecordPrinter &RP;RP35,953
  explicit BlockPrinter(39,1020
  void reset(54,1607

/usr/include/llvm/XRay/FDRLogBuilder.h,259
#define LLVM_XRAY_FDRLOGBUILDER_H9,403
class LogBuilder 25,837
  std::vector<std::unique_ptr<Record>> Records;26,856
public:public28,905
  template <class R, class... T> LogBuilder &add(add29,913
  std::vector<std::unique_ptr<Record>> consume(34,1054

/usr/include/llvm/XRay/FDRRecordConsumer.h,317
#define LLVM_XRAY_FDRRECORDCONSUMER_H9,407
class RecordConsumer 20,605
class LogBuilderConsumer 28,828
  std::vector<std::unique_ptr<Record>> &Records;Records29,879
  explicit LogBuilderConsumer(32,937
class PipelineConsumer 41,1257
  std::vector<RecordVisitor *> Visitors;42,1306
  PipelineConsumer(45,1356

/usr/include/llvm/XRay/FDRRecordProducer.h,299
#define LLVM_XRAY_FDRRECORDPRODUCER_H9,407
class RecordProducer 19,600
class FileBasedRecordProducer 27,838
  const XRayFileHeader &Header;Header28,894
  DataExtractor &E;E29,926
  uint64_t &OffsetPtr;OffsetPtr30,946
  uint32_t CurrentBufferBytes 31,969
  FileBasedRecordProducer(38,1202

/usr/include/llvm/XRay/FDRRecords.h,4317
#define LLVM_XRAY_FDRRECORDS_H14,637
class Record 31,962
  enum class RecordKind 33,985
    RK_Metadata,34,1011
    RK_Metadata_BufferExtents,35,1028
    RK_Metadata_WallClockTime,36,1059
    RK_Metadata_NewCPUId,37,1090
    RK_Metadata_TSCWrap,38,1116
    RK_Metadata_CustomEvent,39,1141
    RK_Metadata_CustomEventV5,40,1170
    RK_Metadata_CallArg,41,1201
    RK_Metadata_PIDEntry,42,1226
    RK_Metadata_NewBuffer,43,1252
    RK_Metadata_EndOfBuffer,44,1279
    RK_Metadata_TypedEvent,45,1308
    RK_Metadata_LastMetadata,46,1336
    RK_Function,47,1366
  static StringRef kindToString(50,1389
  const RecordKind T;53,1446
  explicit Record(60,1629
  RecordKind getRecordType(62,1672
class MetadataRecord 71,1952
  enum class MetadataType 73,1999
    Unknown,74,2038
    BufferExtents,75,2051
    WallClockTime,76,2070
    NewCPUId,77,2089
    TSCWrap,78,2103
    CustomEvent,79,2116
    CallArg,80,2133
    PIDEntry,81,2146
    NewBuffer,82,2160
    EndOfBuffer,83,2175
    TypedEvent,84,2192
  static constexpr int kMetadataBodySize 88,2225
  const MetadataType MT;92,2316
  explicit MetadataRecord(95,2350
  static bool classof(97,2429
  MetadataType metadataType(102,2606
class BufferExtents 110,2859
  uint64_t Size 111,2905
  BufferExtents(115,2969
  explicit BufferExtents(119,3105
  uint64_t size(124,3277
  static bool classof(128,3362
class WallclockRecord 133,3483
  uint64_t Seconds 134,3531
  uint32_t Nanos 135,3555
  WallclockRecord(139,3620
  explicit WallclockRecord(143,3758
  uint64_t seconds(148,3957
  uint32_t nanos(149,4004
  static bool classof(153,4091
class NewCPUIDRecord 158,4212
  uint16_t CPUId 159,4259
  uint64_t TSC 160,4281
  NewCPUIDRecord(164,4344
  NewCPUIDRecord(168,4471
  uint16_t cpuid(173,4646
  uint64_t tsc(175,4690
  static bool classof(179,4773
class TSCWrapRecord 184,4889
  uint64_t BaseTSC 185,4935
  TSCWrapRecord(189,5002
  explicit TSCWrapRecord(193,5106
  uint64_t tsc(197,5246
  static bool classof(201,5333
class CustomEventRecord 206,5448
  int32_t Size 207,5498
  uint64_t TSC 208,5518
  uint16_t CPU 209,5538
  std::string Data{Data210,5558
  CustomEventRecord(214,5623
  explicit CustomEventRecord(218,5759
  int32_t size(223,6006
  uint64_t tsc(224,6046
  uint16_t cpu(225,6085
  StringRef data(226,6124
  static bool classof(230,6210
class CustomEventRecordV5 235,6329
  int32_t Size 236,6381
  int32_t Delta 237,6401
  std::string Data{Data238,6422
  CustomEventRecordV5(242,6487
  explicit CustomEventRecordV5(246,6627
  int32_t size(251,6858
  int32_t delta(252,6898
  StringRef data(253,6940
  static bool classof(257,7026
class TypedEventRecord 262,7147
  int32_t Size 263,7196
  int32_t Delta 264,7216
  uint16_t EventType 265,7237
  std::string Data{Data266,7263
  TypedEventRecord(270,7328
  explicit TypedEventRecord(274,7461
  int32_t size(279,7697
  int32_t delta(280,7737
  uint16_t eventType(281,7779
  StringRef data(282,7830
  static bool classof(286,7916
class CallArgRecord 291,8034
  uint64_t Arg 292,8080
  CallArgRecord(296,8143
  explicit CallArgRecord(300,8247
  uint64_t arg(304,8383
  static bool classof(308,8466
class PIDRecord 313,8581
  int32_t PID 314,8623
  PIDRecord(318,8685
  explicit PIDRecord(322,8807
  int32_t pid(327,8963
  static bool classof(331,9045
class NewBufferRecord 336,9161
  int32_t TID 337,9209
  NewBufferRecord(341,9271
  explicit NewBufferRecord(345,9401
  int32_t tid(350,9565
  static bool classof(354,9647
class EndBufferRecord 359,9764
  EndBufferRecord(361,9820
  static bool classof(367,9997
class FunctionRecord 372,10116
  RecordTypes Kind;373,10155
  int32_t FuncId 374,10175
  uint32_t Delta 375,10197
  static constexpr unsigned kFunctionRecordSize 378,10254
  FunctionRecord(381,10316
  explicit FunctionRecord(383,10373
  RecordTypes recordType(388,10606
  int32_t functionId(389,10656
  uint32_t delta(390,10704
  static bool classof(394,10791
class RecordVisitor 399,10898
class RecordInitializer 418,11560
  DataExtractor &E;E419,11609
  uint64_t &OffsetPtr;OffsetPtr420,11629
  uint16_t Version;421,11652
  static constexpr uint16_t DefaultVersion 424,11681
  explicit RecordInitializer(426,11731
  explicit RecordInitializer(429,11850

/usr/include/llvm/XRay/FDRTraceExpander.h,207
#define LLVM_XRAY_FDRTRACEEXPANDER_H14,648
class TraceExpander 23,822
  function_ref<void(const XRayRecord &)> C;25,939
  XRayRecord CurrentRecord{CurrentRecord29,1045
  explicit TraceExpander(38,1270

/usr/include/llvm/XRay/FDRTraceWriter.h,157
#define LLVM_XRAY_FDRTRACEWRITER_H13,565
class FDRTraceWriter 29,1211
  explicit FDRTraceWriter(32,1332
  ~FDRTraceWriter(33,1400
  Error visit(35,1422

/usr/include/llvm/XRay/FileHeaderReader.h,44
#define LLVM_XRAY_FILEHEADERREADER_H14,583

/usr/include/llvm/XRay/InstrumentationMap.h,1452
#define LLVM_XRAY_INSTRUMENTATIONMAP_H15,597
struct SledEntry 37,1176
  enum class FunctionKinds 40,1286
  enum class FunctionKinds { ENTRY, EXIT,40,1286
  enum class FunctionKinds { ENTRY, EXIT, TAIL,40,1286
  enum class FunctionKinds { ENTRY, EXIT, TAIL, LOG_ARGS_ENTER,40,1286
  enum class FunctionKinds { ENTRY, EXIT, TAIL, LOG_ARGS_ENTER, CUSTOM_EVENT 40,1286
  uint64_t Address;43,1398
  uint64_t Function;46,1454
  FunctionKinds Kind;49,1500
  bool AlwaysInstrument;52,1587
  unsigned char Version;54,1613
struct YAMLXRaySledEntry 57,1642
  int32_t FuncId;58,1669
  yaml::Hex64 Address;59,1687
  yaml::Hex64 Function;60,1710
  SledEntry::FunctionKinds Kind;61,1734
  bool AlwaysInstrument;62,1767
  std::string FunctionName;63,1792
  unsigned char Version;64,1820
class InstrumentationMap 75,2230
  using FunctionAddressMap 77,2265
  using FunctionAddressReverseMap 78,2333
  using SledContainer 79,2408
  SledContainer Sleds;82,2466
  FunctionAddressMap FunctionAddresses;83,2489
  FunctionAddressReverseMap FunctionIds;84,2529
  const FunctionAddressMap &getFunctionAddresses(getFunctionAddresses90,2727
  const SledContainer &sleds(sleds99,3138
namespace yaml 104,3223
template <> struct ScalarEnumerationTraits<ScalarEnumerationTraits106,3241
  static void enumeration(107,3318
template <> struct MappingTraits<MappingTraits118,3838
  static void mapping(119,3898
  static constexpr bool flow 129,4312

/usr/include/llvm/XRay/Profile.h,767
#define LLVM_XRAY_PROFILE_H14,590
class Profile 51,1804
  struct Data 57,1911
    uint64_t CallCount;58,1927
    uint64_t CumulativeLocalTime;59,1951
  struct Block 62,1991
    ThreadID Thread;63,2008
    std::vector<std::vector64,2029
    std::vector<std::pair<PathID, Data>> PathData;64,2029
  Profile(88,2782
  Profile &operator=(operator=93,2989
  struct TrieNode 117,3581
    std::vector<TrieNode *> Callees{Callees119,3622
  BlockList Blocks;125,3765
  std::list<TrieNode> NodeStorage;128,3829
  SmallVector<SmallVector131,3896
  SmallVector<TrieNode *, 4> Roots;131,3896
  DenseMap<DenseMap134,3987
  DenseMap<PathID, TrieNode *> PathIDMap;134,3987
  const_iterator begin(141,4141
  const_iterator end(142,4199
  bool empty(143,4253

/usr/include/llvm/XRay/RecordPrinter.h,192
#define LLVM_XRAY_RECORDPRINTER_H14,627
class RecordPrinter 22,770
  raw_ostream &OS;OS23,815
  std::string Delim;24,834
  explicit RecordPrinter(27,864
  explicit RecordPrinter(30,959

/usr/include/llvm/XRay/Trace.h,363
#define LLVM_XRAY_TRACE_H13,558
class Trace 46,1548
  XRayFileHeader FileHeader;47,1562
  RecordVector Records;49,1639
  typedef std::vector<XRayRecord>::const_iterator citerator;51,1664
  const XRayFileHeader &getFileHeader(getFileHeader61,2008
  const_iterator begin(63,2078
  const_iterator end(64,2137
  bool empty(65,2192
  size_type size(66,2241

/usr/include/llvm/XRay/XRayRecord.h,499
#define LLVM_XRAY_XRAYRECORD_H15,664
struct XRayFileHeader 27,955
enum class RecordTypes 57,2115
  ENTER,58,2140
  EXIT,59,2149
  TAIL_EXIT,60,2157
  ENTER_ARG,61,2170
  CUSTOM_EVENT,62,2183
  TYPED_EVENT63,2199
struct XRayRecord 69,2449
  uint16_t RecordType;74,2728
  uint16_t CPU;77,2830
  RecordTypes Type;80,2884
  int32_t FuncId;83,2978
  uint64_t TSC;86,3063
  uint32_t TId;89,3134
  uint32_t PId;92,3207
  std::vector<uint64_t> CallArgs;95,3259
  std::string Data;98,3369

/usr/include/llvm/XRay/YAMLXRayRecord.h,1069
#define LLVM_XRAY_YAMLXRAYRECORD_H13,561
struct YAMLXRayFileHeader 23,728
  uint16_t Version;24,756
  uint16_t Type;25,776
  bool ConstantTSC;26,793
  bool NonstopTSC;27,813
  uint64_t CycleFrequency;28,832
struct YAMLXRayRecord 31,863
  uint16_t RecordType;32,887
  uint16_t CPU;33,910
  RecordTypes Type;34,926
  int32_t FuncId;35,946
  std::string Function;36,964
  uint64_t TSC;37,988
  uint32_t TId;38,1004
  uint32_t PId;39,1020
  std::vector<uint64_t> CallArgs;40,1036
  std::string Data;41,1070
struct YAMLXRayTrace 44,1094
  YAMLXRayFileHeader Header;45,1117
  std::vector<YAMLXRayRecord> Records;46,1146
namespace yaml 51,1210
template <> struct ScalarEnumerationTraits<ScalarEnumerationTraits55,1258
  static void enumeration(56,1322
template <> struct MappingTraits<MappingTraits66,1815
  static void mapping(67,1876
template <> struct MappingTraits<MappingTraits76,2210
  static void mapping(77,2267
  static constexpr bool flow 90,2774
template <> struct MappingTraits<MappingTraits93,2815
  static void mapping(94,2871

/usr/include/llvm/XRay/BlockVerifier.h,393
#define LLVM_XRAY_BLOCKVERIFIER_H14,649
class BlockVerifier 21,754
  enum class State 24,888
    Unknown,25,923
    BufferExtents,26,936
    NewBuffer,27,955
    WallClockTime,28,970
    PIDEntry,29,989
    NewCPUId,30,1003
    TSCWrap,31,1017
    CustomEvent,32,1030
    TypedEvent,33,1047
    Function,34,1063
    CallArg,35,1077
    EndOfBuffer,36,1090
    StateMax,37,1107

/usr/include/llvm/XRay/Graph.h,1816
#define LLVM_XRAY_GRAPH_H14,513
  typedef VI VertexIdentifier;77,2716
  typedef std::pair<VI, VI> EdgeIdentifier;78,2747
                                   const EdgeValueType>() const 149,5627
    T &operator*() const 162,6189
  template <bool isConst, bool isOut> class InOutEdgeView 198,7485
    using GraphT = std::conditional_t<isConst, const Graph,202,7678
        std::conditional_t<isConst, const EdgeMapT,204,7775
    InternalEdgeMapT &M;M207,7850
    const VertexIdentifier A;208,7875
    const NeighborLookupT &NL;NL209,7905
    iterator begin(212,7947
    const_iterator cbegin(219,8108
    const_iterator begin(226,8294
    iterator end(228,8349
    const_iterator cend(234,8505
    const_iterator end(241,8687
    size_type size(243,8738
    bool empty(251,8888
    InOutEdgeView(253,8942
  template <bool isConst> class VertexView 273,9773
        std::conditional_t<isConst, ConstVertexIterator,276,9849
    using GraphT = std::conditional_t<isConst, const Graph,278,9971
    GraphT &G;G281,10051
    iterator begin(284,10077
    iterator end(285,10129
    const_iterator cbegin(286,10177
    const_iterator cend(287,10243
    const_iterator begin(288,10305
    const_iterator end(289,10369
    size_type size(290,10429
    bool empty(291,10486
    VertexView(292,10540
  template <bool isConst> class EdgeView 310,11258
        std::conditional_t<isConst, ConstEdgeIterator,313,11332
    using GraphT = std::conditional_t<isConst, const Graph,315,11448
    GraphT &G;G318,11528
    iterator begin(321,11554
    iterator end(322,11603
    const_iterator cbegin(323,11648
    const_iterator cend(324,11711
    const_iterator begin(325,11770
    const_iterator end(326,11831
    size_type size(327,11888
    bool empty(328,11942
    EdgeView(329,11993

/usr/include/llvm/LinkAllIR.h,101
#define LLVM_LINKALLIR_H16,711
  struct ForceVMCoreLinking 35,1238
    ForceVMCoreLinking(36,1268

/usr/include/llvm/Pass.h,1276
#define LLVM_PASS_H29,1378
enum PassManagerType 55,1952
  PMT_Unknown 56,1975
  PMT_ModulePassManager 57,1994
  PMT_CallGraphPassManager,58,2042
  PMT_FunctionPassManager,59,2090
  PMT_LoopPassManager,60,2138
  PMT_RegionPassManager,61,2186
  PMT_Last62,2234
enum PassKind 66,2279
  PT_Region,67,2295
  PT_Loop,68,2308
  PT_Function,69,2319
  PT_CallGraphSCC,70,2334
  PT_Module,71,2353
  PT_PassManager72,2366
enum class ThinOrFullLTOPhase 76,2457
  None,78,2527
  ThinLTOPreLink,80,2574
  ThinLTOPostLink,82,2640
  FullLTOPreLink,84,2689
  FullLTOPostLink86,2756
class Pass 94,3054
  AnalysisResolver *Resolver Resolver95,3067
  const void *PassID;PassID96,3136
  PassKind Kind;97,3158
  explicit Pass(100,3184
  PassKind getPassKind(105,3343
  AnalysisID getPassID(113,3713
  virtual bool doInitialization(119,3900
  virtual bool doFinalization(123,4086
  virtual void assignPassManager(142,5037
  AnalysisResolver *getResolver(getResolver153,5453
class ModulePass 251,10042
  explicit ModulePass(253,10083
class ImmutablePass 282,11207
  explicit ImmutablePass(284,11257
  ImmutablePass *getAsImmutablePass(getAsImmutablePass296,11773
  bool runOnModule(299,11875
class FunctionPass 311,12379
  explicit FunctionPass(313,12422

/usr/include/llvm/PassAnalysisSupport.h,2002
#define LLVM_PASSANALYSISSUPPORT_H23,866
class AnalysisUsage 47,1663
  SmallVector<AnalysisID,AnalysisID56,2000
  SmallVector<AnalysisID, 8> Required;56,2000
  SmallVector<AnalysisID,AnalysisID57,2039
  SmallVector<AnalysisID, 2> RequiredTransitive;57,2039
  SmallVector<AnalysisID,AnalysisID58,2088
  SmallVector<AnalysisID, 2> Preserved;58,2088
  SmallVector<AnalysisID,AnalysisID59,2128
  SmallVector<AnalysisID, 0> Used;59,2128
  void pushUnique(62,2193
  AnalysisUsage &addRequired(addRequired75,2554
  AnalysisUsage &addRequiredTransitive(addRequiredTransitive81,2713
  AnalysisUsage &addPreservedID(addPreservedID88,2902
  AnalysisUsage &addPreservedID(addPreservedID92,3005
  AnalysisUsage &addPreserved(addPreserved98,3213
  AnalysisUsage &addUsedIfAvailableID(addUsedIfAvailableID107,3427
  AnalysisUsage &addUsedIfAvailableID(addUsedIfAvailableID111,3531
  AnalysisUsage &addUsedIfAvailable(addUsedIfAvailable117,3735
  void setPreservesAll(130,4217
  bool getPreservesAll(133,4343
  const VectorType &getRequiredSet(getRequiredSet144,4757
  const VectorType &getRequiredTransitiveSet(getRequiredTransitiveSet145,4821
  const VectorType &getPreservedSet(getPreservedSet148,4911
  const VectorType &getUsedSet(getUsedSet149,4977
class AnalysisResolver 157,5284
  explicit AnalysisResolver(160,5348
  PMDataManager &getPMDataManager(getPMDataManager162,5406
  Pass *findImplPass(findImplPass165,5499
  std::tuple<std::tuple177,5832
  void addAnalysisImplsPair(179,5911
  void clearAnalysisImpls(187,6187
  std::vector<std::vector197,6509
  std::vector<std::pair<AnalysisID, Pass *>> AnalysisImpls;197,6509
  PMDataManager &PM;PM200,6626
AnalysisType *Pass::getAnalysisIfAvailable(getAnalysisIfAvailable211,7180
AnalysisType &Pass::getAnalysis(getAnalysis230,7979
AnalysisType &Pass::getAnalysisID(getAnalysisID236,8192
AnalysisType &Pass::getAnalysis(getAnalysis260,9431
AnalysisType &Pass::getAnalysisID(getAnalysisID267,9677

/usr/include/llvm/PassInfo.h,792
#define LLVM_PASSINFO_H14,537
class PassInfo 30,982
  StringRef PassName;35,1053
  StringRef PassArgument;36,1101
  const void *PassID;PassID37,1169
  const bool IsAnalysis;39,1263
  const bool IsAnalysisGroup;40,1333
  std::vector<const PassInfo *> ItfImpl;41,1404
  PassInfo(47,1635
  PassInfo(55,2111
  StringRef getPassName(62,2403
  StringRef getPassArgument(67,2637
  const void *getTypeInfo(getTypeInfo71,2776
  bool isPassID(74,2900
  bool isAnalysisGroup(78,3061
  bool isAnalysis(79,3120
  bool isCFGOnlyPass(83,3263
  NormalCtor_t getNormalCtor(88,3526
  void setNormalCtor(91,3592
  Pass *createPass(createPass96,3735
  void addInterfaceImplemented(107,4176
  const std::vector<const PassInfo*> &getInterfacesImplemented(getInterfacesImplemented113,4386

/usr/include/llvm/PassRegistry.h,309
#define LLVM_PASSREGISTRY_H17,758
class PassRegistry 37,1383
  mutable sys::SmartRWMutex<true> Lock;38,1404
  MapType PassInfoMap;42,1585
  StringMapType PassInfoStringMap;45,1662
  std::vector<std::unique_ptr<const PassInfo>> ToFree;47,1698
  std::vector<PassRegistrationListener *> Listeners;48,1753

/usr/include/llvm/PassSupport.h,823
#define LLVM_PASSSUPPORT_H25,907
#define INITIALIZE_PASS(38,1147
#define INITIALIZE_PASS_BEGIN(52,2124
#define INITIALIZE_PASS_DEPENDENCY(55,2278
#define INITIALIZE_AG_DEPENDENCY(56,2359
#define INITIALIZE_PASS_END(59,2489
#define INITIALIZE_PASS_WITH_OPTIONS(72,3385
#define INITIALIZE_PASS_WITH_OPTIONS_BEGIN(77,3687
template <typename passName> struct RegisterPass 109,5066
  RegisterPass(111,5183
class RegisterAGBase 138,6530
template <typename Interface,144,6713
template <typename Interface, bool Default 144,6713
#define INITIALIZE_ANALYSIS_GROUP(154,7084
#define INITIALIZE_AG_PASS(168,8061
#define INITIALIZE_AG_PASS_BEGIN(188,9524
#define INITIALIZE_AG_PASS_END(193,9819
struct PassRegistrationListener 215,11364
  virtual void passRegistered(221,11615
  virtual void passEnumerate(229,11950

/usr/include/llvm/InitializePasses.h,39
#define LLVM_INITIALIZEPASSES_H15,597

/usr/include/llvm/LinkAllPasses.h,101
#define LLVM_LINKALLPASSES_H15,619
  struct ForcePassLinking 51,1980
    ForcePassLinking(52,2008

/usr/include/llvm/TextAPI/Architecture.def,0

/usr/include/llvm/TargetParser/RISCVTargetParserDef.inc,0

/usr/include/llvm/TargetParser/ARMTargetParser.def,0

/usr/include/llvm/TargetParser/LoongArchTargetParser.def,0

/usr/include/llvm/TargetParser/CSKYTargetParser.def,0

/usr/include/llvm/Support/TargetOpcodes.def,0

/usr/include/llvm/Support/Extension.def,0

/usr/include/llvm/Support/ConvertEBCDIC.h,0

/usr/include/llvm/ProfileData/MIBEntryDef.inc,0

/usr/include/llvm/IR/VPIntrinsics.def,0

/usr/include/llvm/IR/RuntimeLibcalls.def,0

/usr/include/llvm/IR/Metadata.def,0

/usr/include/llvm/IR/IntrinsicEnums.inc,0

/usr/include/llvm/IR/FixedMetadataKinds.def,0

/usr/include/llvm/IR/Value.def,0

/usr/include/llvm/IR/DebugInfoFlags.def,0

/usr/include/llvm/IR/ConstrainedOps.def,0

/usr/include/llvm/Frontend/OpenMP/OMPKinds.def,0

/usr/include/llvm/Demangle/ItaniumNodes.def,0

/usr/include/llvm/DebugInfo/CodeView/CodeViewSymbols.def,0

/usr/include/llvm/DebugInfo/CodeView/CodeViewTypes.def,0

/usr/include/llvm/DebugInfo/CodeView/CodeViewRegisters.def,0

/usr/include/llvm/DebugInfo/BTF/BTF.def,0

/usr/include/llvm/Config/Targets.def,0

/usr/include/llvm/Config/TargetMCAs.def,0

/usr/include/llvm/Config/TargetExegesis.def,0

/usr/include/llvm/Config/Disassemblers.def,0

/usr/include/llvm/Config/AsmPrinters.def,0

/usr/include/llvm/Config/AsmParsers.def,0

/usr/include/llvm/CodeGen/MachinePassRegistry.def,0

/usr/include/llvm/CodeGen/GenVT.inc,0

/usr/include/llvm/CodeGen/DIEValue.def,0

/usr/include/llvm/BinaryFormat/Swift.def,0

/usr/include/llvm/BinaryFormat/MachO.def,0

/usr/include/llvm/BinaryFormat/DynamicTags.def,0

/usr/include/llvm/BinaryFormat/Dwarf.def,0

/usr/include/llvm/BinaryFormat/DXContainerConstants.def,0

/usr/include/llvm/BinaryFormat/WasmRelocs.def,0

/usr/include/llvm/BinaryFormat/MsgPack.def,0

/usr/include/llvm/BinaryFormat/MinidumpConstants.def,0

/usr/include/llvm/BinaryFormat/ELFRelocs/RISCV.def,0

/usr/include/llvm/BinaryFormat/ELFRelocs/LoongArch.def,0

/usr/include/llvm/BinaryFormat/ELFRelocs/AArch64.def,0

/usr/include/llvm/BinaryFormat/ELFRelocs/x86_64.def,0

/usr/include/llvm/BinaryFormat/ELFRelocs/i386.def,0

/usr/include/llvm/BinaryFormat/ELFRelocs/Xtensa.def,0

/usr/include/llvm/BinaryFormat/ELFRelocs/VE.def,0

/usr/include/llvm/BinaryFormat/ELFRelocs/SystemZ.def,0

/usr/include/llvm/BinaryFormat/ELFRelocs/Sparc.def,0

/usr/include/llvm/BinaryFormat/ELFRelocs/PowerPC64.def,0

/usr/include/llvm/BinaryFormat/ELFRelocs/PowerPC.def,0

/usr/include/llvm/BinaryFormat/ELFRelocs/Mips.def,0

/usr/include/llvm/BinaryFormat/ELFRelocs/MSP430.def,0

/usr/include/llvm/BinaryFormat/ELFRelocs/M68k.def,0

/usr/include/llvm/BinaryFormat/ELFRelocs/Lanai.def,0

/usr/include/llvm/BinaryFormat/ELFRelocs/Hexagon.def,0

/usr/include/llvm/BinaryFormat/ELFRelocs/CSKY.def,0

/usr/include/llvm/BinaryFormat/ELFRelocs/BPF.def,0

/usr/include/llvm/BinaryFormat/ELFRelocs/AVR.def,0

/usr/include/llvm/BinaryFormat/ELFRelocs/ARM.def,0

/usr/include/llvm/BinaryFormat/ELFRelocs/ARC.def,0

/usr/include/llvm/BinaryFormat/ELFRelocs/AMDGPU.def,0

/usr/include/llvm/Analysis/VecFuncs.def,0

/usr/include/llvm/Analysis/TargetLibraryInfo.def,0

/usr/include/llvm/Analysis/ScalarFuncs.def,0

TAGS-libc++-v1,include
