
/usr/include/c++/13/backward/auto_ptr.h,679
#define _BACKWARD_AUTO_PTR_H 31,1275
namespace std _GLIBCXX_VISIBILITY(36,1361
    struct auto_ptr_ref48,1753
      _Tp1* _M_ptr;50,1783
      auto_ptr_ref(53,1825
    class auto_ptr93,3385
      _Tp* _M_ptr;96,3423
      typedef _Tp element_type;100,3492
      auto_ptr(109,3769
      auto_ptr(118,4109
        auto_ptr(131,4595
      ~auto_ptr(176,6163
      operator*operator187,6575
      operator->() const throw(200,6899
      get(217,7381
      release(231,7881
      reset(246,8251
      auto_ptr(270,8956
        operator auto_ptr_ref<_Tp1>() throw(285,9287
        operator auto_ptr<_Tp1>() throw(289,9420
      typedef void element_type;299,9711

/usr/include/c++/13/backward/backward_warning.h,46
#define _BACKWARD_BACKWARD_WARNING_H 29,1251

/usr/include/c++/13/backward/binders.h,660
#define _BACKWARD_BINDERS_H 57,2382
namespace std _GLIBCXX_VISIBILITY(63,2547
    class binder1st108,4725
      _Operation op;113,4878
      typename _Operation::first_argument_type value;114,4899
      binder1st(117,4966
      operator()(operator()122,5132
      operator()(operator()128,5383
      typedef typename _Operation::first_argument_type 138,5778
    class binder2nd144,5999
      _Operation op;149,6151
      typename _Operation::second_argument_type value;150,6172
      binder2nd(153,6240
      operator()(operator()158,6407
      operator()(operator()164,6657
      typedef typename _Operation::second_argument_type 174,7051

/usr/include/c++/13/backward/hash_fun.h,865
#define _BACKWARD_HASH_FUN_H 57,2374
namespace __gnu_cxx _GLIBCXX_VISIBILITY(61,2435
    struct hash 68,2565
    struct hash<hash80,2766
      operator()(operator()83,2808
    struct hash<hash88,2910
      operator()(operator()91,2958
    struct hash<hash96,3060
      operator()(operator()99,3102
    struct hash<hash104,3178
      operator()(operator()107,3229
    struct hash<hash112,3314
      operator()(operator()115,3362
    struct hash<hash120,3447
      operator()(operator()123,3489
    struct hash<hash128,3566
      operator()(operator()131,3617
    struct hash<hash136,3703
      operator()(operator()139,3745
    struct hash<hash144,3821
      operator()(operator()147,3871
    struct hash<hash152,3955
      operator()(operator()155,3996
    struct hash<hash160,4072
      operator()(operator()163,4122

/usr/include/c++/13/backward/hash_map,3654
#define _BACKWARD_HASH_MAP 57,2369
namespace __gnu_cxx _GLIBCXX_VISIBILITY(67,2577
			_EqualKey, _Alloc> _Ht;88,3112
      typedef typename _Ht::key_type 93,3170
      typedef _Tp data_type;94,3217
      typedef _Tp mapped_type;95,3246
      typedef typename _Ht::value_type 96,3277
      typedef typename _Ht::hasher 97,3328
      typedef typename _Ht::key_equal 98,3371
      typedef typename _Ht::size_type 100,3427
      typedef typename _Ht::difference_type 101,3476
      typedef typename _Ht::pointer 102,3537
      typedef typename _Ht::const_pointer 103,3582
      typedef typename _Ht::reference 104,3639
      typedef typename _Ht::const_reference 105,3688
      typedef typename _Ht::iterator 107,3756
      typedef typename _Ht::const_iterator 108,3803
      typedef typename _Ht::allocator_type 110,3869
    operator==(operator==270,8122
    operator!=(operator!=276,8403
          _Ht;307,9523
      typedef typename _Ht::key_type 312,9569
      typedef _Tp data_type;313,9616
      typedef _Tp mapped_type;314,9645
      typedef typename _Ht::value_type 315,9676
      typedef typename _Ht::hasher 316,9727
      typedef typename _Ht::key_equal 317,9770
      typedef typename _Ht::size_type 319,9826
      typedef typename _Ht::difference_type 320,9875
      typedef typename _Ht::pointer 321,9936
      typedef typename _Ht::const_pointer 322,9981
      typedef typename _Ht::reference 323,10038
      typedef typename _Ht::const_reference 324,10087
      typedef typename _Ht::iterator 326,10155
      typedef typename _Ht::const_iterator 327,10202
      typedef typename _Ht::allocator_type 329,10268
    operator==(operator==485,14417
    operator!=(operator!=491,14693
namespace std _GLIBCXX_VISIBILITY(504,15169
    class insert_iterator<insert_iterator511,15423
      typedef __gnu_cxx::hash_map<_Key,_Key515,15540
      typedef __gnu_cxx::hash_map<_Key, _Tp,515,15540
      typedef __gnu_cxx::hash_map<_Key, _Tp, _HashFn,515,15540
      typedef __gnu_cxx::hash_map<_Key, _Tp, _HashFn, _EqKey,515,15540
        _Container;516,15610
      _Container* container;517,15630
      typedef _Container          container_type;520,15672
      typedef output_iterator_tag iterator_category;521,15722
      typedef void                value_type;522,15775
      typedef void                difference_type;523,15821
      typedef void                pointer;524,15872
      typedef void                reference;525,15915
      insert_iterator(527,15967
      insert_iterator(530,16034
      operator=(operator=534,16167
      operator*(541,16327
      operator++(545,16405
      operator++(548,16478
    class insert_iterator<insert_iterator553,16610
      typedef __gnu_cxx::hash_multimap<_Key,_Key557,16729
      typedef __gnu_cxx::hash_multimap<_Key, _Tp,557,16729
      typedef __gnu_cxx::hash_multimap<_Key, _Tp, _HashFn,557,16729
      typedef __gnu_cxx::hash_multimap<_Key, _Tp, _HashFn, _EqKey,557,16729
        _Container;558,16804
      _Container* container;559,16824
      typename _Container::iterator iter;560,16853
      typedef _Container          container_type;563,16908
      typedef output_iterator_tag iterator_category;564,16958
      typedef void                value_type;565,17011
      typedef void                difference_type;566,17057
      typedef void                pointer;567,17108
      typedef void                reference;568,17151
      insert_iterator(570,17197
      insert_iterator(573,17264
      operator=(operator=577,17397
      operator*(584,17557
      operator++(588,17635
      operator++(592,17714

/usr/include/c++/13/backward/hash_set,3527
#define _BACKWARD_HASH_SET 57,2369
namespace __gnu_cxx _GLIBCXX_VISIBILITY(67,2577
      typedef __alloc_traits<_Alloc> _Alloc_traits;91,3260
			_EqualKey, _Alloc> _Ht;95,3395
      typedef typename _Ht::key_type 99,3452
      typedef typename _Ht::value_type 100,3499
      typedef typename _Ht::hasher 101,3550
      typedef typename _Ht::key_equal 102,3593
      typedef typename _Ht::size_type 104,3649
      typedef typename _Ht::difference_type 105,3698
      typedef typename _Alloc_traits::pointer 106,3759
      typedef typename _Alloc_traits::const_pointer 107,3814
      typedef typename _Alloc_traits::reference 108,3881
      typedef typename _Alloc_traits::const_reference 109,3940
      typedef typename _Ht::const_iterator 111,4018
      typedef typename _Ht::const_iterator 112,4071
      typedef typename _Ht::allocator_type 114,4137
    operator==(operator==261,8116
    operator!=(operator!=267,8391
			_EqualKey, _Alloc> _Ht;296,9396
      typedef typename _Ht::key_type 300,9453
      typedef typename _Ht::value_type 301,9500
      typedef typename _Ht::hasher 302,9551
      typedef typename _Ht::key_equal 303,9594
      typedef typename _Ht::size_type 305,9650
      typedef typename _Ht::difference_type 306,9699
      typedef typename _Alloc::pointer 307,9760
      typedef typename _Alloc::const_pointer 308,9808
      typedef typename _Alloc::reference 309,9868
      typedef typename _Alloc::const_reference 310,9920
      typedef typename _Ht::const_iterator 312,9985
      typedef typename _Ht::const_iterator 313,10038
      typedef typename _Ht::allocator_type 315,10104
    operator==(operator==455,13906
    operator!=(operator!=461,14185
namespace std _GLIBCXX_VISIBILITY(474,14655
    class insert_iterator<insert_iterator481,14903
      typedef __gnu_cxx::hash_set<_Value,_Value485,15020
      typedef __gnu_cxx::hash_set<_Value, _HashFcn,485,15020
      typedef __gnu_cxx::hash_set<_Value, _HashFcn, _EqualKey,485,15020
        _Container;486,15091
      _Container* container;487,15111
      typedef _Container          container_type;490,15153
      typedef output_iterator_tag iterator_category;491,15203
      typedef void                value_type;492,15256
      typedef void                difference_type;493,15302
      typedef void                pointer;494,15353
      typedef void                reference;495,15396
      insert_iterator(497,15442
      insert_iterator(500,15515
      operator=(operator=504,15648
      operator*(511,15808
      operator++(515,15892
      operator++(519,15977
    class insert_iterator<insert_iterator524,16103
      typedef __gnu_cxx::hash_multiset<_Value,_Value528,16223
      typedef __gnu_cxx::hash_multiset<_Value, _HashFcn,528,16223
      typedef __gnu_cxx::hash_multiset<_Value, _HashFcn, _EqualKey,528,16223
        _Container;529,16299
      _Container* container;530,16319
      typename _Container::iterator iter;531,16348
      typedef _Container          container_type;534,16403
      typedef output_iterator_tag iterator_category;535,16453
      typedef void                value_type;536,16506
      typedef void                difference_type;537,16552
      typedef void                pointer;538,16603
      typedef void                reference;539,16646
      insert_iterator(541,16698
      insert_iterator(544,16771
      operator=(operator=548,16904
      operator*(555,17064
      operator++(559,17142
      operator++(563,17221

/usr/include/c++/13/backward/hashtable.h,7403
#define _BACKWARD_HASHTABLE_H 57,2397
namespace __gnu_cxx _GLIBCXX_VISIBILITY(69,2712
    struct _Hashtable_node74,2820
      _Hashtable_node* _M_next;76,2853
      _Val _M_val;77,2885
    struct _Hashtable_iterator94,3451
      typedef hashtable<_Val,_Val96,3488
      typedef hashtable<_Val, _Key,96,3488
      typedef hashtable<_Val, _Key, _HashFcn,96,3488
      typedef hashtable<_Val, _Key, _HashFcn, _ExtractKey,96,3488
      typedef hashtable<_Val, _Key, _HashFcn, _ExtractKey, _EqualKey,96,3488
        _Hashtable;97,3566
      typedef _Hashtable_iterator<_Val,_Val98,3586
      typedef _Hashtable_iterator<_Val, _Key,98,3586
      typedef _Hashtable_iterator<_Val, _Key, _HashFcn,98,3586
				  _ExtractKey,99,3642
				  _ExtractKey, _EqualKey,99,3642
        iterator;100,3680
      typedef _Hashtable_const_iterator<_Val,_Val101,3698
      typedef _Hashtable_const_iterator<_Val, _Key,101,3698
      typedef _Hashtable_const_iterator<_Val, _Key, _HashFcn,101,3698
					_ExtractKey,102,3760
					_ExtractKey, _EqualKey,102,3760
        const_iterator;103,3797
      typedef _Hashtable_node<_Val> _Node;104,3821
      typedef std::forward_iterator_tag iterator_category;105,3864
      typedef _Val value_type;106,3923
      typedef std::ptrdiff_t difference_type;107,3954
      typedef std::size_t size_type;108,4000
      typedef _Val& reference;109,4037
      typedef _Val* pointer;110,4068
      _Node* _M_cur;112,4104
      _Hashtable* _M_ht;113,4125
      _Hashtable_iterator(115,4151
      _Hashtable_iterator(118,4247
      operator*(121,4296
      operator->(125,4368
      operator==(operator==135,4514
      operator!=(operator!=139,4611
    struct _Hashtable_const_iterator145,4809
      typedef hashtable<_Val,_Val147,4852
      typedef hashtable<_Val, _Key,147,4852
      typedef hashtable<_Val, _Key, _HashFcn,147,4852
      typedef hashtable<_Val, _Key, _HashFcn, _ExtractKey,147,4852
      typedef hashtable<_Val, _Key, _HashFcn, _ExtractKey, _EqualKey,147,4852
        _Hashtable;148,4930
      typedef _Hashtable_iterator<_Val,_Val149,4950
      typedef _Hashtable_iterator<_Val,_Key,149,4950
      typedef _Hashtable_iterator<_Val,_Key,_HashFcn,149,4950
				  _ExtractKey,150,5004
				  _ExtractKey,_EqualKey,150,5004
        iterator;151,5040
      typedef _Hashtable_const_iterator<_Val,_Val152,5058
      typedef _Hashtable_const_iterator<_Val, _Key,152,5058
      typedef _Hashtable_const_iterator<_Val, _Key, _HashFcn,152,5058
					_ExtractKey,153,5120
					_ExtractKey, _EqualKey,153,5120
        const_iterator;154,5157
      typedef _Hashtable_node<_Val> _Node;155,5181
      typedef std::forward_iterator_tag iterator_category;157,5225
      typedef _Val value_type;158,5284
      typedef std::ptrdiff_t difference_type;159,5315
      typedef std::size_t size_type;160,5361
      typedef const _Val& reference;161,5398
      typedef const _Val* pointer;162,5435
      const _Node* _M_cur;164,5477
      const _Hashtable* _M_ht;165,5504
      _Hashtable_const_iterator(167,5536
      _Hashtable_const_iterator(170,5650
      _Hashtable_const_iterator(172,5689
      operator*(176,5811
      operator->(180,5883
      operator==(operator==190,6041
      operator!=(operator!=194,6144
  enum { _S_num_primes 199,6288
    struct _Hashtable_prime_list202,6352
      static const _PrimeType  __stl_prime_list[__stl_prime_list204,6391
    class hashtable257,8564
      typedef _Key key_type;260,8602
      typedef _Val value_type;261,8631
      typedef _HashFcn hasher;262,8662
      typedef _EqualKey key_equal;263,8693
      typedef std::size_t            size_type;265,8729
      typedef std::ptrdiff_t         difference_type;266,8777
      typedef value_type*       pointer;267,8831
      typedef const value_type* const_pointer;268,8872
      typedef value_type&       reference;269,8919
      typedef const value_type& const_reference;270,8962
      hash_funct(273,9025
      key_eq(277,9093
      typedef _Hashtable_node<_Val> _Node;281,9156
	rebind<value_type>::other allocator_type;285,9279
      get_allocator(288,9344
      typedef __gnu_cxx::__alloc_traits<allocator_type> _Alloc_traits;292,9422
	_Node_Alloc;294,9561
	_Nodeptr_Alloc;296,9644
      typedef std::vector<_Node*_Node297,9661
      typedef std::vector<_Node*, _Nodeptr_Alloc> _Vector_type;297,9661
      _Node_Alloc _M_node_allocator;299,9726
      _M_get_node(302,9777
      _M_put_node(306,9857
      hasher                _M_hash;310,9949
      key_equal             _M_equals;311,9986
      _ExtractKey           _M_get_key;312,10025
      _Vector_type          _M_buckets;313,10065
      size_type             _M_num_elements;314,10105
      typedef _Hashtable_iterator<_Val,_Val317,10169
      typedef _Hashtable_iterator<_Val, _Key,317,10169
      typedef _Hashtable_iterator<_Val, _Key, _HashFcn,317,10169
      typedef _Hashtable_iterator<_Val, _Key, _HashFcn, _ExtractKey,317,10169
				  _EqualKey,318,10238
        iterator;319,10263
      typedef _Hashtable_const_iterator<_Val,_Val320,10281
      typedef _Hashtable_const_iterator<_Val, _Key,320,10281
      typedef _Hashtable_const_iterator<_Val, _Key, _HashFcn,320,10281
      typedef _Hashtable_const_iterator<_Val, _Key, _HashFcn, _ExtractKey,320,10281
					_EqualKey,321,10356
        const_iterator;322,10380
      _Hashtable_iterator<_Val, _Key,325,10425
      _Hashtable_iterator<_Val, _Key, _HashFcn,325,10425
      _Hashtable_iterator<_Val, _Key, _HashFcn, _ExtractKey,325,10425
      _Hashtable_iterator<_Val, _Key, _HashFcn, _ExtractKey, _EqualKey,325,10425
      _Hashtable_const_iterator<_Val, _Key,328,10527
      _Hashtable_const_iterator<_Val, _Key, _HashFcn,328,10527
      _Hashtable_const_iterator<_Val, _Key, _HashFcn, _ExtractKey,328,10527
				_EqualKey,329,10594
      hashtable(332,10631
      hashtable(339,10944
      hashtable(346,11239
      operator= operator=353,11519
      ~hashtable(366,11757
      size(370,11812
      max_size(374,11882
      empty(378,11968
      swap(382,12030
      begin(392,12291
      end(401,12478
      begin(405,12548
      end(414,12753
      bucket_count(425,13067
      max_bucket_count(429,13147
      elems_in_bucket(435,13317
      std::pair<std::pair443,13509
      insert_unique(444,13541
      insert_equal(451,13687
      std::pair<std::pair457,13816
        insert_unique(465,14024
        insert_equal(470,14205
        insert_unique(475,14384
        insert_equal(484,14599
        insert_unique(493,14813
        insert_equal(504,15127
      find(517,15465
      find(529,15766
      count(541,16080
      std::pair<std::pair553,16379
      std::pair<std::pair556,16458
      _M_next_size(582,16959
      _M_initialize_buckets(586,17051
      _M_bkt_num_key(595,17296
      _M_bkt_num(599,17422
      _M_bkt_num_key(603,17539
      _M_bkt_num(607,17662
      _M_new_node(611,17798
      _M_delete_node(629,18134
    operator++(650,18726
    operator++(667,19243
    operator++(678,19561
    operator++(695,20090
    operator==(operator==704,20283
      typedef typename hashtable<hashtable707,20426
    operator!=(operator!=745,21456
      typedef std::pair<iterator, iterator> _Pii;828,24510
      typedef std::pair<const_iterator, const_iterator> _Pii;855,25557

/usr/include/c++/13/backward/strstream,833
#define _BACKWARD_STRSTREAM48,1964
namespace std _GLIBCXX_VISIBILITY(56,2104
  class strstreambuf 62,2302
    typedef char_traits<char>              _Traits;66,2402
    typedef basic_streambuf<char,char67,2454
    typedef basic_streambuf<char, _Traits> _Base;67,2454
    strstreambuf(72,2573
    explicit strstreambuf(73,2614
    explicit strstreambuf(75,2678
    strstreambuf(77,2747
    strstreambuf(79,2815
  class ostrstream 182,5971
    ostrstream(190,6170
    strstreambuf _M_buf;203,6538
  class strstream 207,6590
    typedef char                        char_type;210,6652
    typedef char_traits<char>::int_type int_type;211,6703
    typedef char_traits<char>::pos_type pos_type;212,6753
    typedef char_traits<char>::off_type off_type;213,6803
    strstream(220,7003
    strstreambuf _M_buf;233,7369

/usr/include/c++/13/bits/algorithmfwd.h,135
#define _GLIBCXX_ALGORITHMFWD_H 31,1291
namespace std _GLIBCXX_VISIBILITY(42,1513
#  define __cpp_lib_constexpr_algorithms 195,5067

/usr/include/c++/13/bits/align.h,181
#define _GLIBCXX_ALIGN_H 31,1261
namespace std _GLIBCXX_VISIBILITY(39,1458
#define __cpp_lib_assume_aligned 79,2769
  template<size_t _Align,90,3100
    assume_aligned(93,3201

/usr/include/c++/13/bits/alloc_traits.h,3293
#define _ALLOC_TRAITS_H 31,1263
namespace std _GLIBCXX_VISIBILITY(43,1507
#define __cpp_lib_allocator_traits_is_always_equal 48,1613
  struct __allocator_traits_base51,1698
    template<typename _Tp,53,1735
    template<typename _Tp, typename _Up,53,1735
    template<typename _Tp,62,2041
    struct allocator_traits 105,3486
      typedef _Alloc allocator_type;108,3575
      typedef typename _Alloc::value_type value_type;110,3641
      using pointer = __detected_or_t<value_type*, __pointer,117,3845
    private:private119,3917
      template<typename _A2,134,4399
      template<typename _A2, typename _PtrT,134,4399
      template<typename _A2,138,4544
      template<typename _A2,143,4769
      template<typename _A2, typename _DiffT,143,4769
      template<typename _A2,146,4876
      using const_pointer = typename _Ptr<__c_pointer, const value_type>::type;type157,5257
      using void_pointer = typename _Ptr<__v_pointer, void>::type;type165,5540
      using const_void_pointer = typename _Ptr<__cv_pointer, const void>::type;type173,5828
      using difference_type = typename _Diff<_Alloc, pointer>::type;type181,6114
      using size_type = typename _Size<_Alloc, difference_type>::type;type189,6373
	= __detected_or_t<false_type, __pocca,198,6705
	= __detected_or_t<false_type, __pocma,207,7015
	= __detected_or_t<false_type, __pocs,216,7292
	= typename __detected_or_t<is_empty<_Alloc>, __equal,225,7574
	= typename __detected_or_t<is_empty<_Alloc>, __equal, _Alloc>::type;type225,7574
	-> decltype(236,7958
	_S_allocate(241,8097
      template<typename _Tp,244,8196
	struct __construct_helper245,8244
	  template<typename _Alloc2,247,8274
      template<typename _Tp,258,8565
	  = typename __construct_helper<_Tp, _Args...>::type;type260,8636
      template<typename _Tp,262,8692
	static _GLIBCXX14_CONSTEXPR _Require<_Require263,8740
	_S_construct(264,8810
      template<typename _Tp,268,8996
	_Require<_Require270,9073
	_S_construct(272,9174
      template<typename _Alloc2,282,9453
	-> decltype(286,9613
      template<typename _Alloc2,289,9668
	_S_destroy(291,9749
	-> decltype(298,9952
	_S_max_size(303,10071
	-> decltype(314,10381
	_S_select(319,10556
      allocate(332,10879
      allocate(347,11472
      deallocate(359,11911
      template<typename _Tp,373,12510
	-> decltype(378,12732
	destroy(391,13210
      max_size(404,13693
      select_on_container_copy_construction(416,14172
# define __cpp_lib_constexpr_dynamic_alloc 423,14330
    struct allocator_traits<allocator_traits428,14463
      allocate(481,16063
      allocate(496,16616
      deallocate(516,17192
      template<typename _Up,530,17784
	construct(533,17898
	destroy(554,18519
      max_size(571,18956
      select_on_container_copy_construction(587,19399
    struct allocator_traits<allocator_traits593,19573
      template<typename _Up,656,21658
	construct(659,21772
	destroy(673,22263
      select_on_container_copy_construction(688,22738
      typedef allocator_traits<_Alloc> __traits;729,23806
    struct __is_copy_insertable813,26308
    struct __is_copy_insertable<__is_copy_insertable821,26540
    struct __is_move_insertable830,26897
    struct __is_move_insertable<__is_move_insertable837,27117

/usr/include/c++/13/bits/allocated_ptr.h,403
#define _ALLOCATED_PTR_H 31,1267
namespace std _GLIBCXX_VISIBILITY(40,1446
    struct __allocated_ptr47,1653
      __allocated_ptr(53,1859
      template<typename _Ptr,58,2061
      __allocated_ptr(60,2153
      __allocated_ptr(66,2355
      ~__allocated_ptr(71,2536
      operator=(operator=79,2742
      value_type* get(86,2894
      _Alloc* _M_alloc;89,2970
      pointer _M_ptr;90,2994

/usr/include/c++/13/bits/allocator.h,1563
#define _ALLOCATOR_H 44,1810
#define __cpp_lib_incomplete_container_elements 52,1995
namespace std _GLIBCXX_VISIBILITY(54,2052
      typedef void        value_type;78,2757
      typedef size_t      size_type;79,2795
      typedef ptrdiff_t   difference_type;80,2832
      typedef void*       pointer;84,2981
      typedef const void*void85,3016
	struct rebind88,3088
	{ typedef allocator<_Tp1> other;89,3103
    class allocator 130,4376
      typedef _Tp        value_type;133,4445
      typedef size_t     size_type;134,4482
      typedef ptrdiff_t  difference_type;135,4518
      typedef _Tp*       pointer;139,4627
      typedef const _Tp* const_pointer;140,4661
      typedef _Tp&       reference;141,4701
      typedef const _Tp& const_reference;142,4737
	struct rebind145,4810
	{ typedef allocator<_Tp1> other;146,4825
      allocator(163,5363
      allocator(167,5471
	allocator(178,5782
      ~allocator(184,5937
      allocate(189,6072
      deallocate(203,6424
      operator==(operator==216,6711
      operator!=(operator!=222,6931
    operator==(operator==237,7334
    operator!=(operator!=245,7599
    class allocator<allocator255,7896
      typedef _Tp value_type;258,7945
      template<typename _Up> allocator(259,7975
    class allocator<allocator263,8074
      typedef _Tp value_type;266,8126
      template<typename _Up> allocator(267,8156
    class allocator<allocator271,8255
      typedef _Tp value_type;274,8313
      template<typename _Up> allocator(275,8343
#undef __allocator_base289,8723

/usr/include/c++/13/bits/atomic_base.h,7658
#define _GLIBCXX_ATOMIC_BASE_H 31,1260
#define _GLIBCXX_ALWAYS_INLINE 46,1585
namespace std _GLIBCXX_VISIBILITY(49,1666
  enum class memory_order 62,1913
      relaxed,64,1951
      consume,65,1966
      acquire,66,1981
      release,67,1996
      acq_rel,68,2011
      seq_cst69,2026
  typedef enum memory_order79,2522
      memory_order_relaxed,81,2556
      memory_order_consume,82,2584
      memory_order_acquire,83,2612
      memory_order_release,84,2640
      memory_order_acq_rel,85,2668
      memory_order_seq_cst86,2696
    } memory_order;87,2723
  enum __memory_order_modifier91,2776
      __memory_order_mask 93,2813
      __memory_order_modifier_mask 94,2859
      __memory_order_hle_acquire 95,2908
      __memory_order_hle_release 96,2954
  operator|(101,3047
  operator&(107,3190
# define __cpp_lib_atomic_value_initialization 160,4579
# define _GLIBCXX20_INIT(165,4707
# define _GLIBCXX20_INIT(167,4745
#define ATOMIC_VAR_INIT(171,4794
    typedef bool __atomic_flag_data_type;181,5046
    typedef unsigned char 183,5094
  struct __atomic_flag_base200,5612
#define ATOMIC_FLAG_INIT 209,5745
  struct atomic_flag 212,5795
    constexpr atomic_flag(221,6134
    test_and_set(226,6263
    test_and_set(232,6429
#define __cpp_lib_atomic_flag_test 238,6598
    test(241,6674
    test(249,6918
    wait(258,7197
    notify_one(271,7561
    notify_all(277,7713
    clear(285,7912
    clear(297,8299
    _S_init(310,8719
    struct __atomic_base341,9643
      typedef _ITp 	__int_type;347,9761
      constexpr __atomic_base(362,10299
      operator __int_type(operator __int_type364,10372
      operator __int_type(operator __int_type367,10441
      operator=(operator=371,10536
      operator=(operator=378,10637
      operator++(385,10747
      operator++(389,10827
      operator--(393,10916
      operator--(397,10996
      operator++(401,11085
      operator++(405,11205
      operator--(409,11334
      operator--(413,11454
      operator+=(operator+=417,11583
      operator+=(operator+=421,11719
      operator-=(operator-=425,11864
      operator-=(operator-=429,12000
      operator&=(operator&=433,12145
      operator&=(operator&=437,12281
      operator|=(operator|=441,12426
      operator|=(operator|=445,12561
      operator^=(operator^=449,12705
      operator^=(operator^=453,12841
      is_lock_free(457,12980
      is_lock_free(465,13178
      store(473,13408
      store(485,13802
      load(498,14216
      load(509,14558
      exchange(520,14909
      exchange(528,15107
      compare_exchange_weak(535,15307
      compare_exchange_weak(545,15625
      compare_exchange_weak(556,15959
      compare_exchange_weak(564,16217
      compare_exchange_strong(572,16482
      compare_exchange_strong(582,16804
      compare_exchange_strong(593,17144
      compare_exchange_strong(601,17410
      wait(610,17705
      notify_one(620,17979
      notify_all(626,18139
      fetch_add(633,18336
      fetch_add(638,18520
      fetch_sub(643,18713
      fetch_sub(648,18897
      fetch_and(653,19090
      fetch_and(658,19274
      fetch_or(663,19467
      fetch_or(668,19655
      fetch_xor(673,19852
      fetch_xor(678,20036
    struct __atomic_base<__atomic_base686,20271
      typedef _PTp* 	__pointer_type;689,20322
      _M_type_size(695,20501
      _M_type_size(698,20599
      constexpr __atomic_base(708,21019
      operator __pointer_type(operator __pointer_type710,21096
      operator __pointer_type(operator __pointer_type713,21169
      operator=(operator=717,21272
      operator=(operator=724,21381
      operator++(731,21499
      operator++(735,21583
      operator--(739,21676
      operator--(743,21760
      operator++(747,21853
      operator++(752,21997
      operator--(757,22150
      operator--(762,22294
      operator+=(operator+=767,22447
      operator+=(operator+=772,22606
      operator-=(operator-=777,22774
      operator-=(operator-=782,22933
      is_lock_free(787,23091
      is_lock_free(795,23296
      store(803,23533
      store(817,23937
      load(830,24359
      load(841,24705
      exchange(852,25060
      exchange(860,25266
      compare_exchange_weak(867,25470
      compare_exchange_weak(878,25803
      compare_exchange_strong(889,26145
      compare_exchange_strong(900,26484
      wait(912,26858
      notify_one(923,27149
      notify_all(929,27315
      fetch_add(936,27522
      fetch_add(941,27723
      fetch_sub(946,27933
      fetch_sub(951,28134
  namespace __atomic_impl956,28307
      __maybe_has_padding(962,28443
      __clear_padding(976,28810
      __compare_exchange(992,29301
  namespace __atomic_impl1024,30457
      using _Diff = __conditional_t<is_pointer_v<_Tp>, ptrdiff_t,1028,30576
    template<size_t _Size,1030,30655
      is_lock_free(1032,30731
      store(1040,30959
      load(1047,31179
      exchange(1057,31477
      compare_exchange_weak(1068,31848
      compare_exchange_strong(1078,32190
      wait(1089,32565
      notify_one(1100,32896
      notify_all(1107,33099
      fetch_add(1115,33332
      fetch_sub(1120,33523
      fetch_and(1125,33714
      fetch_or(1130,33904
      fetch_xor(1135,34092
      __add_fetch(1140,34282
      __sub_fetch(1145,34465
      __and_fetch(1150,34648
      __or_fetch(1155,34830
      __xor_fetch(1160,35010
      __fetch_add_flt(1165,35169
      __fetch_sub_flt(1177,35538
      __add_fetch_flt(1189,35907
      __sub_fetch_flt(1202,36285
    struct __atomic_float1216,36730
      __atomic_float(1232,37105
      operator=(operator=1240,37363
      operator=(operator=1247,37465
      is_lock_free(1254,37559
      is_lock_free(1258,37691
      store(1262,37814
      store(1266,37956
      load(1270,38088
      load(1274,38226
      operator _Fp(operator _Fp1277,38345
      operator _Fp(operator _Fp1278,38415
      exchange(1281,38487
      exchange(1286,38661
      compare_exchange_weak(1291,38827
      compare_exchange_weak(1301,39105
      compare_exchange_strong(1311,39392
      compare_exchange_strong(1321,39682
      compare_exchange_weak(1331,39981
      compare_exchange_weak(1340,40270
      compare_exchange_strong(1349,40568
      compare_exchange_strong(1358,40837
      wait(1368,41164
      notify_one(1374,41371
      notify_all(1380,41528
      fetch_add(1387,41700
      fetch_add(1392,41869
      fetch_sub(1397,42047
      fetch_sub(1402,42216
      operator+=(operator+=1407,42394
      operator+=(operator+=1411,42516
      operator-=(operator-=1415,42647
      operator-=(operator-=1419,42769
#undef _GLIBCXX20_INIT1425,42961
      operator=(operator=1460,44034
      operator _Tp(operator _Tp1466,44123
      operator=(operator=1573,47266
      operator _Tp(operator _Tp1579,47355
      operator++(1684,50611
      operator--(1688,50720
      operator++(1692,50806
      operator--(1696,50926
      operator+=(operator+=1700,51046
      operator-=(operator-=1704,51170
      operator&=(operator&=1708,51294
      operator|=(operator|=1712,51418
      operator^=(operator^=1716,51541
      operator=(operator=1748,52410
      operator _Fp(operator _Fp1754,52499
      operator+=(operator+=1844,55228
      operator-=(operator-=1848,55356
      operator=(operator=1877,56183
      operator _Tp*(operator _Tp*1883,56273
      operator++(1973,59089
      operator--(1977,59175
      operator++(1981,59261
      operator--(1987,59390
      operator+=(operator+=1993,59519
      operator-=(operator-=1999,59669

/usr/include/c++/13/bits/atomic_futex.h,394
#define _GLIBCXX_ATOMIC_FUTEX_H 31,1242
#define _GLIBCXX_ALWAYS_INLINE 43,1504
namespace std _GLIBCXX_VISIBILITY(46,1585
  struct __atomic_futex_unsigned_base52,1760
    _M_futex_wait_until(57,1913
    _M_futex_wait_until_steady(63,2153
    static void _M_futex_notify_all(67,2353
    typedef chrono::steady_clock __clock_t;73,2528
    typedef chrono::system_clock __clock_t;290,10525

/usr/include/c++/13/bits/atomic_lockfree_defines.h,492
#define _GLIBCXX_ATOMIC_LOCK_FREE_H 31,1277
#define ATOMIC_BOOL_LOCK_FREE	49,1601
#define ATOMIC_CHAR_LOCK_FREE	50,1660
#define ATOMIC_WCHAR_T_LOCK_FREE	51,1719
#define ATOMIC_CHAR8_T_LOCK_FREE	53,1811
#define ATOMIC_CHAR16_T_LOCK_FREE	55,1882
#define ATOMIC_CHAR32_T_LOCK_FREE	56,1948
#define ATOMIC_SHORT_LOCK_FREE	57,2014
#define ATOMIC_INT_LOCK_FREE	58,2075
#define ATOMIC_LONG_LOCK_FREE	59,2132
#define ATOMIC_LLONG_LOCK_FREE	60,2191
#define ATOMIC_POINTER_LOCK_FREE	61,2252

/usr/include/c++/13/bits/atomic_timed_wait.h,1178
#define _GLIBCXX_ATOMIC_TIMED_WAIT_H 31,1272
namespace std _GLIBCXX_VISIBILITY(46,1555
#define _GLIBCXX_HAVE_PLATFORM_TIMED_WAIT75,2465
    struct __timed_waiter_pool 198,6268
      template<typename _Clock,201,6377
	_M_do_wait_until(203,6430
    struct __timed_backoff_spin_policy222,6953
      __wait_clock_t::time_point _M_deadline;224,6998
      __wait_clock_t::time_point _M_t0;225,7044
      template<typename _Clock,227,7085
	__timed_backoff_spin_policy(228,7132
      operator()(operator()237,7423
      struct __timed_waiter 266,7997
	  __timed_waiter(271,8152
	~__timed_waiter(278,8294
	template<typename _Tp,285,8430
	template<typename _Tp, typename _ValFn,285,8430
		 typename _Clock,286,8471
	  _M_do_wait_until_v(288,8514
	template<typename _Pred,300,8925
		 typename _Clock,301,8951
	  _M_do_wait_until(303,8994
	template<typename _Pred,323,9548
		 typename _Clock,324,9574
	  _M_do_wait_until(326,9617
	template<typename _Tp,337,9930
	template<typename _Tp, typename _ValFn,337,9930
		 typename _Rep,338,9971
	  _M_do_wait_for_v(340,10015
	template<typename _Pred,359,10556
		 typename _Rep,360,10582
	  _M_do_wait_for(362,10626

/usr/include/c++/13/bits/atomic_wait.h,1768
#define _GLIBCXX_ATOMIC_WAIT_H 31,1260
#define __cpp_lib_atomic_wait 52,1744
namespace std _GLIBCXX_VISIBILITY(54,1783
#define _GLIBCXX_HAVE_PLATFORM_WAIT 60,1919
  namespace __detail88,2859
    enum class __futex_wait_flags 91,2917
      __private_flag 94,3004
      __private_flag 96,3038
      __wait 98,3071
      __wake 99,3089
      __wait_bitset 100,3107
      __wake_bitset 101,3132
      __wait_private 102,3158
      __wake_private 103,3206
      __wait_bitset_private 104,3254
      __wake_bitset_private 105,3316
      __bitset_match_any 106,3378
      __platform_wait(111,3454
      __platform_notify(124,3829
    __thread_yield(133,4070
    __thread_relax(141,4230
    struct __default_spin_policy153,4494
      operator()(operator()156,4544
    template<typename _Pred,160,4610
      bool __atomic_compare(187,5147
    struct __waiter_pool_base193,5346
      mutex _M_mtx;202,5676
      __condvar _M_cv;208,5795
      _M_enter_wait(213,5875
      _M_leave_wait(217,5979
      _M_waiting(221,6083
      _M_notify(229,6243
      _S_for(252,6755
    struct __waiter_pool 261,6958
      _M_do_wait(264,7021
      struct __waiter_base283,7518
	__waiter_type& _M_w;287,7582
	__platform_wait_t* _M_addr;288,7604
	  _S_wait_addr(292,7687
	_S_for(301,7932
	  explicit __waiter_base(309,8171
	_M_notify(315,8318
	template<typename _Up,318,8417
	template<typename _Up, typename _ValFn,318,8417
	template<typename _Up,340,9016
	template<typename _Up, typename _ValFn,340,9016
	template<typename _Pred,348,9292
	template<typename _Pred,360,9617
      struct __waiter 369,9883
	  explicit __waiter(374,10020
	~__waiter(381,10175
	template<typename _Tp,387,10259
	  _M_do_wait_v(389,10308
	  _M_do_wait(403,10631

/usr/include/c++/13/bits/basic_ios.h,2304
#define _BASIC_IOS_H 31,1260
namespace std _GLIBCXX_VISIBILITY(41,1465
    class basic_ios 67,2171
      typedef _CharT                                 char_type;76,2462
      typedef typename _Traits::int_type             int_type;77,2526
      typedef typename _Traits::pos_type             pos_type;78,2589
      typedef typename _Traits::off_type             off_type;79,2652
      typedef _Traits                                traits_type;80,2715
      typedef ctype<_CharT>                          __ctype_type;87,2865
      typedef num_put<_CharT,_CharT88,2932
      typedef num_put<_CharT, ostreambuf_iterator<ostreambuf_iterator88,2932
						     __num_put_type;89,3001
      typedef num_get<_CharT,_CharT90,3028
      typedef num_get<_CharT, istreambuf_iterator<istreambuf_iterator90,3028
						     __num_get_type;91,3097
      basic_ostream<basic_ostream96,3175
      basic_ostream<_CharT, _Traits>*                _M_tie;96,3175
      mutable char_type                              _M_fill;97,3236
      mutable bool                                   _M_fill_init;98,3298
      basic_streambuf<basic_streambuf99,3365
      basic_streambuf<_CharT, _Traits>*              _M_streambuf;99,3365
      const __ctype_type*                            _M_ctype;102,3510
      const __num_put_type*                          _M_num_put;104,3595
      const __num_get_type*                          _M_num_get;106,3682
      explicit operator bool(operator bool117,4012
      operator void*(operator void*120,4087
      operator!(125,4201
      rdstate(137,4580
      setstate(157,5173
      _M_setstate(164,5465
      good(180,5876
      eof(190,6116
      fail(201,6452
      bad(211,6715
      exceptions(222,7069
      exceptions(257,8236
      basic_ios(270,8547
      ~basic_ios(282,8942
      basic_ostream<basic_ostream294,9389
      tie(295,9427
      basic_ostream<basic_ostream306,9765
      tie(307,9803
      basic_streambuf<basic_streambuf320,10158
      rdbuf(321,10198
      basic_streambuf<basic_streambuf346,11169
      fill(370,12081
      fill(390,12633
      narrow(430,13812
      widen(449,14430
      basic_ios(460,14720
      move(479,15269
      move(490,15505
      swap(494,15576
      set_rdbuf(505,15863

/usr/include/c++/13/bits/basic_ios.tcc,75
#define _BASIC_IOS_TCC 31,1268
namespace std _GLIBCXX_VISIBILITY(35,1321

/usr/include/c++/13/bits/basic_string.h,11208
#define _BASIC_STRING_H 35,1342
namespace std _GLIBCXX_VISIBILITY(53,1634
# define __cpp_lib_constexpr_string 60,1812
# define __cpp_lib_constexpr_string 63,1976
    class basic_string87,2877
	rebind<_CharT>::other _Char_alloc_type;90,2973
      typedef __gnu_cxx::__alloc_traits<_Char_alloc_type> _Alloc_traits;92,3015
      typedef _Traits					traits_type;96,3117
      typedef typename _Traits::char_type		value_type;97,3156
      typedef _Char_alloc_type				allocator_type;98,3211
      typedef typename _Alloc_traits::size_type		size_type;99,3261
      typedef typename _Alloc_traits::difference_type	difference_type;100,3321
      typedef typename _Alloc_traits::reference		reference;101,3392
      typedef typename _Alloc_traits::const_reference	const_reference;102,3452
      typedef typename _Alloc_traits::pointer		pointer;103,3523
      typedef typename _Alloc_traits::const_pointer	const_pointer;104,3579
      typedef __gnu_cxx::__normal_iterator<pointer,pointer105,3646
      typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;105,3646
      typedef __gnu_cxx::__normal_iterator<const_pointer,const_pointer106,3723
							const_iterator;107,3795
      typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;108,3818
      typedef std::reverse_iterator<iterator>		reverse_iterator;109,3894
    protected:protected114,4095
      typedef basic_string_view<_CharT,_CharT141,4977
      typedef basic_string_view<_CharT, _Traits> __sv_type;141,4977
      template<typename _Tp,143,5038
		 __not_<__not_146,5160
		 __not_<is_convertible<const _Tp&, const _CharT*>>>::value,value147,5220
      _S_to_string_view(153,5396
      struct __sv_wrapper160,5678
	__sv_wrapper(163,5743
	__sv_type _M_sv;165,5801
      basic_string(176,6081
      struct _Alloc_hider 181,6292
	_Alloc_hider(184,6394
	_Alloc_hider(188,6521
	_Alloc_hider(192,6632
	pointer _M_p;196,6745
      _Alloc_hider	_M_dataplus;199,6790
      size_type		_M_string_length;200,6822
      enum { _S_local_capacity 202,6858
	_CharT           _M_local_buf[_M_local_buf206,6935
	size_type        _M_allocated_capacity;207,6990
      _M_data(212,7079
      _M_length(217,7179
      _M_data(222,7296
      _M_local_data(227,7395
      _M_local_data(238,7617
      _M_capacity(249,7848
      _M_set_length(254,7973
      _M_is_local(262,8128
      _M_dispose(280,8474
      _M_destroy(288,8607
        _M_construct_aux(296,9001
          typedef typename iterator_traits<iterator_traits299,9090
        _M_construct_aux(307,9365
      _M_construct_aux_2(311,9515
      _M_get_allocator(336,10262
      _M_get_allocator(341,10373
      _M_init_local_buf(348,10583
      _M_use_local_data(360,10899
    private:private368,11050
	       && !__are_same<__are_same375,11328
	       && !__are_same<__are_same376,11380
	       && !__are_same<__are_same377,11427
	struct __enable_if_not_native_iterator378,11481
	{ typedef basic_string& __type;379,11521
      _M_check(386,11694
      _M_check_length(397,11985
      _M_limit(407,12271
      _M_disjunct(415,12526
      _S_copy(425,12856
      _S_move(435,13073
      _S_assign(445,13290
        _S_copy_chars(458,13670
      _S_copy_chars(466,13904
      _S_copy_chars(471,14087
      _S_copy_chars(477,14288
      _S_copy_chars(482,14456
      _S_compare(488,14641
      basic_string(522,15591
      basic_string(535,15911
      basic_string(547,16221
      basic_string(564,16850
      basic_string(581,17468
      basic_string(599,18106
      basic_string(619,18860
      basic_string(677,21018
      basic_string(706,21925
      basic_string(711,22151
      basic_string(716,22367
      template<typename _InputIterator,754,23507
        basic_string(760,23681
	  typedef typename std::__is_integer<std::__is_integer767,23941
      template<typename _Tp,780,24440
	basic_string(783,24564
      template<typename _Tp,792,24944
	basic_string(795,25035
      ~basic_string(803,25269
      operator=(operator=812,25484
      operator=(operator=823,25752
      operator=(operator=835,26088
      operator=(operator=853,26619
      operator=(operator=921,28648
       _If_sv<_If_sv935,29018
       operator=(operator=936,29052
      operator __sv_type(operator __sv_type944,29251
      begin(955,29556
      begin(964,29825
      end(973,30095
      end(982,30382
      rbegin(992,30730
      rbegin(1002,31080
      rend(1012,31438
      rend(1022,31800
      cbegin(1032,32119
      cend(1041,32403
      crbegin(1051,32765
      crend(1061,33131
      size(1071,33423
      length(1078,33664
      max_size(1084,33864
      resize(1113,35122
      shrink_to_fit(1122,35407
#define __cpp_lib_string_resize_and_overwrite 1128,35520
      capacity(1169,37424
      clear(1211,38781
      empty(1220,39019
      at(1276,41179
      at(1298,41982
      front(1315,42435
	return operator[](0)operator[](01318,42495
	return operator[](0)operator[](01330,42791
      back(1351,43307
      operator+=(operator+=1366,43654
      operator+=(operator+=1376,43932
      operator+=(operator+=1386,44202
      operator+=(operator+=1400,44558
	_If_sv<_If_sv1412,44938
	operator+=(operator+=1413,44966
      append(1424,45254
      append(1442,46008
      append(1455,46482
      append(1469,46873
      append(1487,47415
      append(1498,47794
        append(1518,48466
        _If_sv<_If_sv1529,48854
        append(1530,48889
        _If_sv<_If_sv1545,49450
	append(1546,49485
      push_back(1561,49898
      assign(1577,50382
      assign(1623,51768
      assign(1647,52673
      assign(1664,53398
      assign(1681,53962
      assign(1699,54501
        assign(1718,55175
      assign(1729,55578
	_If_sv<_If_sv1741,55955
	assign(1742,55983
	_If_sv<_If_sv1757,56482
	assign(1758,56510
      insert(1786,57596
      insert(1808,58488
        insert(1853,60250
      insert(1866,60749
      insert(1872,60963
      insert(1894,61753
      insert(1918,62863
      insert(1942,63942
      insert(1962,64814
      insert(1987,65801
      insert(2006,66650
	_If_sv<_If_sv2023,67219
	insert(2024,67247
	_If_sv<_If_sv2040,67796
	insert(2041,67824
      erase(2069,68930
      erase(2089,69568
      erase(2109,70311
      pop_back(2129,70859
      replace(2155,71863
      replace(2178,73031
      replace(2204,74302
      replace(2230,75408
      replace(2255,76497
      replace(2274,77399
      replace(2295,78369
      replace(2318,79345
      replace(2340,80312
        replace(2384,82040
	  typedef typename std::__is_integer<std::__is_integer2390,82273
      replace(2399,82618
      replace(2411,82983
      replace(2423,83360
      replace(2435,83734
      basic_string& replace(2461,84842
	_If_sv<_If_sv2476,85427
	replace(2477,85455
	_If_sv<_If_sv2494,86118
	replace(2495,86146
	_If_sv<_If_sv2516,86909
	replace(2517,86937
	_M_replace_dispatch(2528,87197
      c_str(2595,89417
      data(2608,89904
      data(2620,90278
      get_allocator(2629,90496
      find(2661,91747
	_If_sv<_If_sv2674,92266
	find(2675,92290
      find(2695,92983
      rfind(2727,94217
	_If_sv<_If_sv2740,94752
	rfind(2741,94776
      rfind(2778,96170
      find_first_of(2811,97450
	_If_sv<_If_sv2825,98038
	find_first_of(2826,98062
      find_first_of(2863,99528
      find_first_of(2884,100284
      find_last_of(2900,100961
	_If_sv<_If_sv2914,101554
	find_last_of(2915,101578
      find_last_of(2952,103070
      find_last_of(2973,103826
      find_first_not_of(2988,104491
	_If_sv<_If_sv3002,105090
	find_first_not_of(3003,105114
      find_first_not_of(3040,106625
      find_last_not_of(3075,108004
	_If_sv<_If_sv3089,108616
	find_last_not_of(3090,108640
      find_last_not_of(3127,110185
      substr(3163,111632
      compare(3183,112534
	_If_sv<_If_sv3203,113143
	compare(3204,113161
	_If_sv<_If_sv3228,113958
	compare(3229,113976
	_If_sv<_If_sv3248,114735
	compare(3249,114753
      compare(3280,116077
      compare(3317,117777
      compare(3348,119058
      compare(3383,120573
      compare(3422,122295
      starts_with(3438,122760
      starts_with(3443,122948
      starts_with(3448,123130
      ends_with(3453,123297
      ends_with(3458,123481
      ends_with(3463,123659
      contains(3470,123864
      contains(3475,124046
      contains(3480,124222
      template<typename,typename3485,124424
      template<typename, typename,3485,124424
namespace std _GLIBCXX_VISIBILITY(3492,124620
      typedef typename _Str::allocator_type 3534,126288
      typedef __gnu_cxx::__alloc_traits<allocator_type> _Alloc_traits;3535,126348
    operator+(3553,126983
      typedef basic_string<_CharT, _Traits, _Alloc> _Str;3556,127114
    operator+(3571,127667
      typedef basic_string<_CharT, _Traits, _Alloc> _Str;3575,127805
    operator+(3590,128352
      typedef basic_string<_CharT, _Traits, _Alloc> _Str;3592,128436
    operator+(3607,128984
      typedef basic_string<_CharT, _Traits, _Alloc> _Str;3611,129124
    operator+(3625,129672
      typedef basic_string<_CharT, _Traits, _Alloc> _Str;3627,129758
    operator+(3637,130145
    operator+(3644,130450
    operator+(3651,130777
    operator+(3674,131608
    operator+(3681,131904
    operator+(3688,132196
    operator+(3695,132489
    operator==(operator==3710,132971
    operator==(operator==3727,133569
    operator==(operator==3774,135411
    operator!=(operator!=3788,135859
    operator!=(operator!=3802,136343
    operator!=(operator!=3815,136774
    operator<(3829,137219
    operator<(3843,137697
    operator<(3856,138122
    operator>(3870,138570
    operator>(3884,139046
    operator>(3897,139469
    operator<=(operator<=3911,139932
    operator<=(operator<=3925,140425
    operator<=(operator<=3938,140865
    operator>=(operator>=3952,141333
    operator>=(operator>=3966,141828
    operator>=(operator>=3979,142270
    operator<<(4032,144126
namespace std _GLIBCXX_VISIBILITY(4112,147028
namespace std _GLIBCXX_VISIBILITY(4393,155391
      operator()(operator()4407,155800
  template<> struct __is_fast_hash<__is_fast_hash4453,157295
  template<> struct __is_fast_hash<__is_fast_hash4454,157367
  template<> struct __is_fast_hash<__is_fast_hash4455,157440
  template<> struct __is_fast_hash<__is_fast_hash4456,157515
  template<> struct __is_fast_hash<__is_fast_hash4458,157618
#define __cpp_lib_string_udls 4470,157984
  inline namespace literals4472,158023
  inline namespace string_literals4474,158055
# define _GLIBCXX_STRING_CONSTEXPR 4480,158215
# define _GLIBCXX_STRING_CONSTEXPR4482,158266
    operator""operator"4487,158394
    operator""operator"4492,158581
    operator""operator"4498,158802
    operator""operator"4504,159003
    operator""operator"4509,159199
#undef _GLIBCXX_STRING_CONSTEXPR4512,159306
  namespace __detail::__variant4518,159467
    template<typename _Tp,4524,159723
    template<typename _Tp, typename _Traits,4524,159723
      struct _Never_valueless_alt<_Never_valueless_alt4525,159785

/usr/include/c++/13/bits/basic_string.tcc,1360
#define _BASIC_STRING_TCC 40,1612
namespace std _GLIBCXX_VISIBILITY(46,1701
	struct _Guard185,5746
	  explicit _Guard(188,5788
	  ~_Guard(191,5873
	  basic_string* _M_guarded;193,5933
	struct _Guard236,6972
	  explicit _Guard(239,7014
	  ~_Guard(242,7099
	  basic_string* _M_guarded;244,7159
      struct _Terminator 593,17282
	constexpr ~_Terminator(594,17309
	basic_string* _M_this;595,17369
	size_type _M_r;596,17393
# define _GLIBCXX_STRING_CONSTEXPR 611,17827
# define _GLIBCXX_STRING_CONSTEXPR613,17878
#undef _GLIBCXX_STRING_CONSTEXPR822,24085
    operator>>(827,24268
      typedef basic_istream<_CharT, _Traits>		__istream_type;830,24381
      typedef basic_string<_CharT, _Traits, _Alloc>	__string_type;831,24443
      typedef typename __istream_type::ios_base 832,24510
      typedef typename __istream_type::int_type	833,24578
      typedef typename __string_type::size_type	834,24639
      typedef ctype<_CharT>				__ctype_type;835,24701
      typedef typename __ctype_type::ctype_base 836,24746
      typedef basic_istream<_CharT, _Traits>		__istream_type;902,26806
      typedef basic_string<_CharT, _Traits, _Alloc>	__string_type;903,26868
      typedef typename __istream_type::ios_base 904,26935
      typedef typename __istream_type::int_type	905,27003
      typedef typename __string_type::size_type	906,27064

/usr/include/c++/13/bits/boost_concept_check.h,12640
#define _BOOST_CONCEPT_CHECK_H 40,1634
namespace std  _GLIBCXX_VISIBILITY(47,1792
namespace __gnu_cxx _GLIBCXX_VISIBILITY(63,2151
#define _IsUnused 70,2322
#define _GLIBCXX_CLASS_REQUIRES(89,3146
#define _GLIBCXX_CLASS_REQUIRES2(97,3539
#define _GLIBCXX_CLASS_REQUIRES3(105,4035
#define _GLIBCXX_CLASS_REQUIRES4(113,4624
struct _Aux_require_same 123,5341
struct _Aux_require_same<_Tp,_Tp> { typedef _Tp _Type;126,5393
  struct _SameTypeConcept129,5488
    void __constraints(131,5518
      typedef typename _Aux_require_same<_Aux_require_same132,5545
  struct _IntegerConcept 137,5651
    void __constraints(138,5678
  template <> struct _IntegerConcept<_IntegerConcept142,5762
  template <> struct _IntegerConcept<short> { void __constraints(142,5762
  template <> struct _IntegerConcept<_IntegerConcept143,5835
  template <> struct _IntegerConcept<unsigned short> { void __constraints(143,5835
  template <> struct _IntegerConcept<_IntegerConcept144,5916
  template <> struct _IntegerConcept<int> { void __constraints(144,5916
  template <> struct _IntegerConcept<_IntegerConcept145,5987
  template <> struct _IntegerConcept<unsigned int> { void __constraints(145,5987
  template <> struct _IntegerConcept<_IntegerConcept146,6067
  template <> struct _IntegerConcept<long> { void __constraints(146,6067
  template <> struct _IntegerConcept<_IntegerConcept147,6139
  template <> struct _IntegerConcept<unsigned long> { void __constraints(147,6139
  template <> struct _IntegerConcept<_IntegerConcept148,6220
  template <> struct _IntegerConcept<long long> { void __constraints(148,6220
  template <> struct _IntegerConcept<_IntegerConcept149,6297
                                                { void __constraints(150,6354
  struct _SignedIntegerConcept 153,6455
    void __constraints(154,6488
  template <> struct _SignedIntegerConcept<_SignedIntegerConcept158,6578
  template <> struct _SignedIntegerConcept<short> { void __constraints(158,6578
  template <> struct _SignedIntegerConcept<_SignedIntegerConcept159,6657
  template <> struct _SignedIntegerConcept<int> { void __constraints(159,6657
  template <> struct _SignedIntegerConcept<_SignedIntegerConcept160,6734
  template <> struct _SignedIntegerConcept<long> { void __constraints(160,6734
  template <> struct _SignedIntegerConcept<_SignedIntegerConcept161,6812
  template <> struct _SignedIntegerConcept<long long> { void __constraints(161,6812
  struct _UnsignedIntegerConcept 164,6917
    void __constraints(165,6952
  template <> struct _UnsignedIntegerConcept<_UnsignedIntegerConcept169,7045
    { void __constraints(170,7106
  template <> struct _UnsignedIntegerConcept<_UnsignedIntegerConcept171,7139
    { void __constraints(172,7198
  template <> struct _UnsignedIntegerConcept<_UnsignedIntegerConcept173,7231
    { void __constraints(174,7291
  template <> struct _UnsignedIntegerConcept<_UnsignedIntegerConcept175,7324
    { void __constraints(176,7389
  struct _DefaultConstructibleConcept182,7547
    void __constraints(184,7589
  struct _AssignableConcept190,7722
    void __constraints(192,7754
    void __const_constraints(196,7890
    _Tp __a;199,8023
  struct _CopyConstructibleConcept205,8211
    void __constraints(207,8250
    void __const_constraints(212,8454
    _Tp __b;216,8659
  struct _SGIAssignableConcept221,8780
    void __constraints(223,8815
    void __const_constraints(228,8981
    _Tp __a;232,9139
  struct _ConvertibleConcept236,9194
    void __constraints(238,9227
    _From __x;241,9291
  void __aux_require_boolean_expr(254,9848
  struct _EqualityComparableConcept260,9967
    void __constraints(262,10007
    _Tp __a,265,10086
    _Tp __a, __b;265,10086
  struct _LessThanComparableConcept269,10133
    void __constraints(271,10173
    _Tp __a,274,10251
    _Tp __a, __b;274,10251
  struct _ComparableConcept279,10355
    void __constraints(281,10387
    _Tp __a,287,10602
    _Tp __a, __b;287,10602
#define _GLIBCXX_DEFINE_BINARY_PREDICATE_OP_CONSTRAINT(290,10626
#define _GLIBCXX_DEFINE_BINARY_OPERATOR_CONSTRAINT(301,10921
  _GLIBCXX_DEFINE_BINARY_PREDICATE_OP_CONSTRAINT(<, _LessThanOpConcept)314,11368
  _GLIBCXX_DEFINE_BINARY_PREDICATE_OP_CONSTRAINT(>, _GreaterThanOpConcept)316,11516
  _GLIBCXX_DEFINE_BINARY_OPERATOR_CONSTRAINT(+, _PlusOpConcept)319,11671
  _GLIBCXX_DEFINE_BINARY_OPERATOR_CONSTRAINT(*, _TimesOpConcept)320,11736
  _GLIBCXX_DEFINE_BINARY_OPERATOR_CONSTRAINT(/, _DivideOpConcept)321,11802
  _GLIBCXX_DEFINE_BINARY_OPERATOR_CONSTRAINT(-, _SubtractOpConcept)322,11869
  _GLIBCXX_DEFINE_BINARY_OPERATOR_CONSTRAINT(%, _ModOpConcept)323,11938
#undef _GLIBCXX_DEFINE_BINARY_PREDICATE_OP_CONSTRAINT325,12003
#undef _GLIBCXX_DEFINE_BINARY_OPERATOR_CONSTRAINT326,12057
  struct _GeneratorConcept332,12259
    void __constraints(334,12290
    _Func __f;337,12404
    void __constraints(344,12494
    _Func __f;347,12605
  struct _UnaryFunctionConcept351,12678
    void __constraints(353,12713
    _Func __f;356,12809
    _Arg __arg;357,12824
    _Return __r;358,12840
    void __constraints(363,12952
    _Func __f;366,13047
    _Arg __arg;367,13062
  struct _BinaryFunctionConcept371,13153
    void __constraints(373,13189
    _Func __f;376,13284
    _First __first;377,13299
    _Second __second;378,13319
    _Return __r;379,13341
    void __constraints(385,13484
    _Func __f;388,13579
    _First __first;389,13594
    _Second __second;390,13614
  struct _UnaryPredicateConcept394,13679
    void __constraints(396,13715
    _Func __f;399,13825
    _Arg __arg;400,13840
  struct _BinaryPredicateConcept404,13916
    void __constraints(406,13953
    _Func __f;409,14066
    _First __a;410,14081
    _Second __b;411,14097
  struct _Const_BinaryPredicateConcept 416,14248
    void __constraints(417,14289
    void __const_constraints(420,14354
    _Func __f;425,14593
    _First __a;426,14608
    _Second __b;427,14624
  struct _TrivialIteratorConcept434,14774
    void __constraints(436,14811
    _Tp __i;443,15169
  struct _Mutable_TrivialIteratorConcept447,15211
    void __constraints(449,15256
    _Tp __i,453,15428
    _Tp __i, __j;453,15428
  struct _InputIteratorConcept457,15475
    void __constraints(459,15510
      typedef typename std::iterator_traits<std::iterator_traits462,15641
      typedef typename std::iterator_traits<std::iterator_traits464,15777
      typedef typename std::iterator_traits<std::iterator_traits465,15843
      typedef typename std::iterator_traits<std::iterator_traits466,15906
    _Tp __i;473,16282
  struct _OutputIteratorConcept477,16339
    void __constraints(479,16375
    _Tp __i;485,16691
  struct _Is_vector_bool_iterator492,16915
  { static const bool __value 493,16949
  { static const bool __value 504,17217
  struct _Is_vector_bool_iterator<_Is_vector_bool_iterator508,17316
  { static const bool __value 509,17379
  template <typename _It,512,17475
  template <typename _It, typename _Seq,512,17475
  struct _Is_vector_bool_iterator<_Is_vector_bool_iterator513,17531
  template <class _Tp, bool 516,17652
      typedef typename std::iterator_traits<std::iterator_traits521,17822
  template <class _Tp, bool 528,18028
      typedef typename std::iterator_traits<std::iterator_traits532,18179
      typedef typename std::iterator_traits<std::iterator_traits533,18245
    void __constraints(542,18546
    void __constraints(549,18749
  struct _ForwardIteratorConcept556,18887
    void __constraints(558,18924
      typedef typename std::iterator_traits<std::iterator_traits567,19351
    _Tp __i;571,19472
  struct _Mutable_ForwardIteratorConcept575,19514
    void __constraints(577,19559
      typedef typename std::iterator_traits<std::iterator_traits579,19647
      typedef typename std::iterator_traits<std::iterator_traits580,19713
    _Tp __i;583,19864
  struct _BidirectionalIteratorConcept587,19906
    void __constraints(589,19949
      typedef typename std::iterator_traits<std::iterator_traits596,20341
    _Tp __i;599,20438
  struct _Mutable_BidirectionalIteratorConcept603,20480
    void __constraints(605,20531
    _Tp __i;609,20700
  struct _RandomAccessIteratorConcept614,20743
    void __constraints(616,20785
      typedef typename std::iterator_traits<std::iterator_traits622,21092
    _Tp __a,632,21687
    _Tp __a, __b;632,21687
    _Tp __i,633,21705
    _Tp __i, __j;633,21705
    typename std::iterator_traits<_Tp>::difference_type __n;634,21723
  struct _Mutable_RandomAccessIteratorConcept638,21813
    void __constraints(640,21863
    _Tp __i;644,22037
    typename std::iterator_traits<_Tp>::difference_type __n;645,22050
  struct _ContainerConcept654,22280
    typedef typename _Container::value_type _Value_type;656,22311
    typedef typename _Container::difference_type _Difference_type;657,22368
    typedef typename _Container::size_type _Size_type;658,22435
    typedef typename _Container::const_reference _Const_reference;659,22490
    typedef typename _Container::const_pointer _Const_pointer;660,22557
    typedef typename _Container::const_iterator _Const_iterator;661,22620
    void __constraints(663,22686
    bool __b;673,23006
    _Const_iterator __i;674,23020
    _Size_type __n;675,23045
  struct _Mutable_ContainerConcept679,23101
    typedef typename _Container::value_type _Value_type;681,23140
    typedef typename _Container::reference _Reference;682,23197
    typedef typename _Container::iterator _Iterator;683,23252
    typedef typename _Container::pointer _Pointer;684,23305
    void __constraints(686,23357
    _Iterator __i;695,23652
    _Container __c,696,23671
    _Container __c, __c2;696,23671
  struct _ForwardContainerConcept700,23740
    void __constraints(702,23778
      typedef typename _ForwardContainer::const_iterator 704,23874
  struct _Mutable_ForwardContainerConcept710,24070
    void __constraints(712,24116
      typedef typename _ForwardContainer::iterator 715,24296
  struct _ReversibleContainerConcept721,24485
    typedef typename _ReversibleContainer::const_iterator _Const_iterator;723,24526
      _Const_reverse_iterator;725,24667
    void __constraints(727,24699
  struct _Mutable_ReversibleContainerConcept740,25144
    typedef typename _ReversibleContainer::iterator _Iterator;742,25193
    typedef typename _ReversibleContainer::reverse_iterator _Reverse_iterator;743,25256
    void __constraints(745,25336
    _ReversibleContainer __c;756,25791
  struct _RandomAccessContainerConcept760,25869
    typedef typename _RandomAccessContainer::size_type _Size_type;762,25912
    typedef typename _RandomAccessContainer::const_reference _Const_reference;763,25979
    typedef typename _RandomAccessContainer::const_iterator _Const_iterator;764,26058
      _Const_reverse_iterator;766,26203
    void __constraints(768,26235
    _Size_type __n;778,26622
  struct _Mutable_RandomAccessContainerConcept782,26690
    typedef typename _RandomAccessContainer::size_type _Size_type;784,26741
    typedef typename _RandomAccessContainer::reference _Reference;785,26808
    typedef typename _RandomAccessContainer::iterator _Iterator;786,26875
    typedef typename _RandomAccessContainer::reverse_iterator _Reverse_iterator;787,26940
    void __constraints(789,27022
    _Size_type __i;800,27469
    _RandomAccessContainer __c;801,27489
  struct _SequenceConcept806,27594
    typedef typename _Sequence::reference _Reference;808,27624
    typedef typename _Sequence::const_reference _Const_reference;809,27678
    void __constraints(811,27745
    void __const_constraints(833,28419
    typename _Sequence::value_type __t;836,28530
    typename _Sequence::size_type __n;837,28570
    typename _Sequence::value_type *__first,__first838,28609
    typename _Sequence::value_type *__first, *__last;__last838,28609
    typename _Sequence::iterator __p,839,28663
    typename _Sequence::iterator __p, __q;839,28663
  struct _FrontInsertionSequenceConcept843,28755
    void __constraints(845,28799
    _FrontInsertionSequence __c;851,28957
    typename _FrontInsertionSequence::value_type __t;852,28990
  struct _BackInsertionSequenceConcept856,29092
    typedef typename _BackInsertionSequence::reference _Reference;858,29135
    typedef typename _BackInsertionSequence::const_reference _Const_reference;859,29202
    void __constraints(861,29282
    void __const_constraints(868,29482
    _BackInsertionSequence __c;871,29606
    typename _BackInsertionSequence::value_type __t;872,29638
#undef _IsUnused879,29771

/usr/include/c++/13/bits/c++0x_warning.h,34
#define _CXX0X_WARNING_H 29,1232

/usr/include/c++/13/bits/char_traits.h,4797
#define _CHAR_TRAITS_H 35,1346
# define _GLIBCXX_ALWAYS_INLINE 61,1908
namespace __gnu_cxx _GLIBCXX_VISIBILITY(64,1990
    struct _Char_types84,2824
      typedef unsigned long   int_type;86,2853
      typedef std::streampos  pos_type;88,2913
      typedef std::streamoff  off_type;89,2953
      typedef std::mbstate_t  state_type;90,2993
    struct char_traits111,3860
      typedef _CharT                                    char_type;113,3889
      typedef typename _Char_types<_CharT>::int_type    int_type;114,3956
      typedef typename _Char_types<_CharT>::pos_type    pos_type;116,4042
      typedef typename _Char_types<_CharT>::off_type    off_type;117,4108
      typedef typename _Char_types<_CharT>::state_type  state_type;118,4174
      assign(125,4397
      eq(136,4657
      lt(140,4781
      to_char_type(162,5572
      to_int_type(166,5700
      eq_int_type(170,5823
      eof(175,5984
      not_eof(179,6098
namespace std _GLIBCXX_VISIBILITY(305,9137
# define __cpp_lib_constexpr_char_traits 311,9311
# define __cpp_lib_constexpr_char_traits 314,9484
    struct char_traits 331,10159
    struct char_traits<char_traits337,10290
      typedef char              char_type;339,10325
      typedef int               int_type;340,10368
      typedef streampos         pos_type;342,10430
      typedef streamoff         off_type;343,10472
      typedef mbstate_t         state_type;344,10514
      assign(351,10708
      eq(362,10986
      lt(366,11128
      compare(374,11350
      length(393,11795
      find(403,12058
      move(415,12424
      copy(427,12788
      assign(439,13151
      to_char_type(451,13501
      to_int_type(457,13752
      eq_int_type(461,13921
      eof(466,14100
      not_eof(470,14232
    struct char_traits<char_traits479,14458
      typedef wchar_t           char_type;481,14496
      typedef wint_t            int_type;482,14539
      typedef streamoff         off_type;484,14601
      typedef wstreampos        pos_type;485,14643
      typedef mbstate_t         state_type;486,14685
      assign(493,14879
      eq(504,15157
      lt(508,15299
      compare(512,15441
      length(524,15775
      find(534,16028
      move(546,16354
      copy(558,16684
      assign(570,17013
      to_char_type(582,17329
      to_int_type(586,17462
      eq_int_type(590,17590
      eof(595,17763
      not_eof(599,17881
    struct char_traits<char_traits605,18051
    struct char_traits<char_traits611,18205
      typedef char8_t           char_type;613,18243
      typedef unsigned int      int_type;614,18286
      typedef u8streampos       pos_type;616,18348
      typedef streamoff         off_type;617,18390
      typedef mbstate_t         state_type;618,18432
      assign(625,18626
      eq(636,18904
      lt(640,19046
      compare(644,19188
      length(656,19531
      find(669,19839
      move(681,20205
      copy(693,20569
      assign(705,20932
      to_char_type(717,21282
      to_int_type(721,21415
      eq_int_type(725,21543
      eof(730,21716
      not_eof(734,21832
namespace std _GLIBCXX_VISIBILITY(745,22067
    struct char_traits<char_traits750,22159
      typedef char16_t          char_type;752,22198
      typedef __UINT_LEAST16_TYPE__	    int_type;754,22270
      typedef uint_least16_t    int_type;756,22362
      typedef make_unsigned<char16_t>::type int_type;758,22410
      typedef streamoff         off_type;761,22491
      typedef u16streampos      pos_type;762,22533
      typedef mbstate_t         state_type;763,22575
      assign(770,22769
      eq(781,23029
      lt(785,23153
      compare(789,23286
      length(800,23569
      find(809,23748
      move(818,23977
      copy(831,24366
      assign(844,24754
      to_char_type(852,24939
      eq_int_type(856,25050
      to_int_type(861,25205
      eof(865,25353
      not_eof(869,25451
      to_int_type(873,25596
    struct char_traits<char_traits879,25716
      typedef char32_t          char_type;881,25755
      typedef __UINT_LEAST32_TYPE__	    int_type;883,25827
      typedef uint_least32_t    int_type;885,25919
      typedef make_unsigned<char32_t>::type int_type;887,25967
      typedef streamoff         off_type;890,26048
      typedef u32streampos      pos_type;891,26090
      typedef mbstate_t         state_type;892,26132
      assign(899,26326
      eq(910,26586
      lt(914,26710
      compare(918,26843
      length(929,27126
      find(938,27305
      move(947,27534
      copy(960,27923
      assign(973,28312
      to_char_type(981,28497
      to_int_type(985,28612
      eq_int_type(989,28722
      eof(994,28877
      not_eof(998,28975
  namespace __detail1004,29131
      __char_traits_cmp_cat(1008,29210

/usr/include/c++/13/bits/charconv.h,80
#define _GLIBCXX_CHARCONV_H 31,1290
namespace std _GLIBCXX_VISIBILITY(40,1432

/usr/include/c++/13/bits/chrono.h,13984
#define _GLIBCXX_CHRONO_H 31,1290
namespace std _GLIBCXX_VISIBILITY(47,1582
    struct common_type<common_type103,3155
    struct common_type<common_type112,3511
    struct common_type<common_type121,3837
    struct common_type<common_type149,4626
    struct common_type<common_type156,4951
    struct common_type<common_type162,5240
  namespace chrono168,5396
    template<typename _ToDur,176,5534
    template<typename _ToDur, typename _CF,176,5534
    template<typename _ToDur, typename _CF, typename _CR,176,5534
	    typedef typename _ToDur::rep	184,5809
    template<typename _ToDur,191,6016
    template<typename _ToDur, typename _CF,191,6016
	    typedef typename _ToDur::rep	198,6267
    template<typename _ToDur,203,6384
    template<typename _ToDur, typename _CF,203,6384
	    typedef typename _ToDur::rep	210,6636
    template<typename _ToDur,216,6808
    template<typename _ToDur, typename _CF,216,6808
	    typedef typename _ToDur::rep	223,7060
      struct __is_duration230,7259
    template<typename _Rep,234,7322
      : std::true_type236,7420
	= typename enable_if<__is_duration<_Tp>::value, _Tp>::type;type241,7518
	= typename enable_if<!__is_duration<_Tp>::value, _Tp>::type;type245,7644
    template<typename _Rep,250,7814
      inline constexpr bool __is_duration_v<__is_duration_v251,7860
    template<typename _Clock,254,8019
      inline constexpr bool __is_time_point_v<__is_time_point_v255,8064
    template<typename _ToDur,270,8564
    template<typename _ToDur, typename _Rep,270,8564
      duration_cast(273,8700
      struct treat_as_floating_point305,9776
    template<typename _Tp,349,11202
      is_clock_v<is_clock_v354,11350
			  duration<duration360,11604
		  is_same<is_same361,11661
		  is_same<is_same364,11792
      struct is_clock368,11889
# define __cpp_lib_chrono 374,12005
    template<typename _ToDur,386,12433
    template<typename _ToDur, typename _Rep,386,12433
      floor(388,12558
    template<typename _ToDur,406,13125
    template<typename _ToDur, typename _Rep,406,13125
      ceil(408,13250
    template <typename _ToDur,427,13882
    template <typename _ToDur, typename _Rep,427,13882
      enable_if_t<enable_if_t429,13976
      round(433,14106
    template<typename _Rep,456,14685
      enable_if_t<enable_if_t458,14761
      abs(459,14837
    namespace __detail 467,15016
    namespace __detail { using chrono::ceil;467,15016
    namespace __detail474,15310
      template<typename _Tp,476,15339
	__ceil_impl(478,15397
      template<typename _ToDur,484,15569
      template<typename _ToDur, typename _Rep,484,15569
	ceil(486,15652
      struct duration_values495,15849
	zero(498,15909
	max(502,15971
	min(506,16052
    template<typename _Rep,510,16122
      class duration511,16168
	_S_gcd(523,16562
	template<typename _R1,547,17293
	template<typename _R1, typename _R2,547,17293
	template<typename _Rep2,570,17997
		 __or_<__or_572,18082
	  constexpr explicit duration(573,18137
	template<typename _Rep2,576,18227
	template<typename _Rep2, typename _Period2,576,18227
		 __or_<__or_578,18331
	  constexpr duration(581,18437
	count(589,18661
	constexpr duration<duration594,18720
	operator+(595,18781
	constexpr duration<duration598,18869
	operator-(599,18930
	operator++(603,19051
	operator++(610,19130
	operator--(614,19209
	operator--(621,19288
	operator+=(operator+=625,19367
	operator-=(operator-=632,19479
	operator*=(operator*=639,19591
	operator/=(operator/=646,19694
	  operator%=(operator%=656,19901
	  operator%=(operator%=665,20106
	zero(673,20252
	min(677,20349
	max(681,20444
	rep __r;685,20527
    template<typename _Rep1,692,20632
    template<typename _Rep1, typename _Period1,692,20632
	     typename _Rep2,693,20680
      constexpr typename common_type<common_type694,20721
      operator+(696,20827
	typedef duration<_Rep1, _Period1>			__dur1;699,20933
	typedef duration<_Rep2, _Period2>			__dur2;700,20978
	typedef typename common_type<common_type701,21023
    template<typename _Rep1,706,21192
    template<typename _Rep1, typename _Period1,706,21192
	     typename _Rep2,707,21240
      constexpr typename common_type<common_type708,21281
      operator-(710,21387
	typedef duration<_Rep1, _Period1>			__dur1;713,21493
	typedef duration<_Rep2, _Period2>			__dur2;714,21538
	typedef typename common_type<common_type715,21583
    template<typename _Rep1,727,21971
    template<typename _Rep1, typename _Rep2,727,21971
	enable_if<is_convertible<const _Rep2&, _CRep>::value,value730,22119
	enable_if<is_convertible<const _Rep2&, _CRep>::value, _CRep>::type;type730,22119
    template<typename _Rep1,739,22314
    template<typename _Rep1, typename _Period,739,22314
      constexpr duration<duration740,22377
      operator*(741,22441
	  __cd;744,22589
    template<typename _Rep1,748,22646
    template<typename _Rep1, typename _Rep2,748,22646
      constexpr duration<duration749,22709
      operator*(750,22773
    template<typename _Rep1,753,22873
    template<typename _Rep1, typename _Period,753,22873
      duration<duration755,22952
      operator/(756,23032
	  __cd;759,23180
    template<typename _Rep1,763,23237
    template<typename _Rep1, typename _Period1,763,23237
	     typename _Rep2,764,23285
      constexpr typename common_type<common_type765,23326
      operator/(766,23383
	typedef duration<_Rep1, _Period1>			__dur1;769,23489
	typedef duration<_Rep2, _Period2>			__dur2;770,23534
	typedef typename common_type<common_type771,23579
    template<typename _Rep1,776,23711
    template<typename _Rep1, typename _Period,776,23711
      duration<duration778,23790
      operator%(779,23870
	  __cd;782,24018
    template<typename _Rep1,786,24075
    template<typename _Rep1, typename _Period1,786,24075
	     typename _Rep2,787,24123
      constexpr typename common_type<common_type788,24164
      operator%(790,24270
	typedef duration<_Rep1, _Period1>			__dur1;793,24376
	typedef duration<_Rep2, _Period2>			__dur2;794,24421
	typedef typename common_type<common_type795,24466
    template<typename _Rep1,807,24718
    template<typename _Rep1, typename _Period1,807,24718
	     typename _Rep2,808,24766
      operator==(operator==810,24828
	typedef duration<_Rep1, _Period1>			__dur1;813,24936
	typedef duration<_Rep2, _Period2>			__dur2;814,24981
	typedef typename common_type<common_type815,25026
    template<typename _Rep1,819,25144
    template<typename _Rep1, typename _Period1,819,25144
	     typename _Rep2,820,25192
      operator<(822,25254
	typedef duration<_Rep1, _Period1>			__dur1;825,25360
	typedef duration<_Rep2, _Period2>			__dur2;826,25405
	typedef typename common_type<common_type827,25450
    template<typename _Rep1,832,25602
    template<typename _Rep1, typename _Period1,832,25602
	     typename _Rep2,833,25650
      requires three_way_comparable<three_way_comparable834,25691
      operator<=>(operator<=>836,25777
    template<typename _Rep1,844,26044
    template<typename _Rep1, typename _Period1,844,26044
	     typename _Rep2,845,26092
      operator!=(operator!=847,26154
    template<typename _Rep1,852,26298
    template<typename _Rep1, typename _Period1,852,26298
	     typename _Rep2,853,26346
      operator<=(operator<=855,26408
    template<typename _Rep1,859,26544
    template<typename _Rep1, typename _Period1,859,26544
	     typename _Rep2,860,26592
      operator>(862,26654
    template<typename _Rep1,866,26785
    template<typename _Rep1, typename _Period1,866,26785
	     typename _Rep2,867,26833
      operator>=(operator>=869,26895
# define _GLIBCXX_CHRONO_INT64_T 877,27105
# define _GLIBCXX_CHRONO_INT64_T 879,27175
# define _GLIBCXX_CHRONO_INT64_T 883,27370
#undef _GLIBCXX_CHRONO_INT64_T919,28319
    template<typename _Clock,921,28351
      class time_point922,28396
	typedef _Clock						clock;928,28553
	typedef _Dur						duration;929,28581
	typedef typename duration::rep				rep;930,28610
	typedef typename duration::period			period;931,28650
	constexpr time_point(933,28696
	constexpr explicit time_point(936,28750
	template<typename _Dur2,941,28840
	  constexpr time_point(943,28919
	time_since_epoch(949,29054
	operator++(954,29147
	operator++(961,29217
	operator--(965,29289
	operator--(972,29359
	operator+=(operator+=978,29464
	operator-=(operator-=985,29574
	min(993,29698
	max(997,29785
	duration __d;1001,29858
    template<typename _ToDur,1016,30444
    template<typename _ToDur, typename _Clock,1016,30444
      __enable_if_t<__enable_if_t1018,30541
      time_point_cast(1019,30619
	typedef time_point<_Clock, _ToDur>			__time_point;1021,30686
    template<typename _ToDur,1038,31383
    template<typename _ToDur, typename _Clock,1038,31383
      enable_if_t<enable_if_t1040,31475
      floor(1041,31546
    template<typename _ToDur,1059,32245
    template<typename _ToDur, typename _Clock,1059,32245
      enable_if_t<enable_if_t1061,32337
      ceil(1062,32408
    template<typename _ToDur,1081,33183
    template<typename _ToDur, typename _Clock,1081,33183
		  time_point<time_point1085,33376
      round(1086,33408
    template<typename _Clock,1097,33681
    template<typename _Clock, typename _Dur1,1097,33681
	     typename _Rep2,1098,33727
      constexpr time_point<time_point1099,33768
      operator+(1101,33866
	typedef duration<_Rep2, _Period2>			__dur2;1104,33972
	typedef typename common_type<common_type1105,34017
	typedef time_point<_Clock, __ct>			__time_point;1106,34073
    template<typename _Rep1,1111,34248
    template<typename _Rep1, typename _Period1,1111,34248
	     typename _Clock,1112,34296
      constexpr time_point<time_point1113,34335
      operator+(1115,34433
	typedef duration<_Rep1, _Period1>			__dur1;1118,34539
	typedef typename common_type<common_type1119,34584
	typedef time_point<_Clock, __ct>			__time_point;1120,34640
    template<typename _Clock,1125,34816
    template<typename _Clock, typename _Dur1,1125,34816
	     typename _Rep2,1126,34862
      constexpr time_point<time_point1127,34903
      operator-(1129,35001
	typedef duration<_Rep2, _Period2>			__dur2;1132,35107
	typedef typename common_type<common_type1133,35152
	typedef time_point<_Clock, __ct>			__time_point;1134,35208
    template<typename _Clock,1139,35385
    template<typename _Clock, typename _Dur1,1139,35385
      constexpr typename common_type<common_type1140,35447
      operator-(1141,35504
    template<typename _Clock,1151,35773
    template<typename _Clock, typename _Dur1,1151,35773
      operator==(operator==1153,35856
    template<typename _Clock,1158,36063
    template<typename _Clock, typename _Dur1,1158,36063
      operator<=>(operator<=>1161,36176
    template<typename _Clock,1165,36356
    template<typename _Clock, typename _Dur1,1165,36356
      operator!=(operator!=1167,36439
    template<typename _Clock,1172,36583
    template<typename _Clock, typename _Dur1,1172,36583
      operator<(1174,36666
    template<typename _Clock,1178,36836
    template<typename _Clock, typename _Dur1,1178,36836
      operator<=(operator<=1180,36919
    template<typename _Clock,1184,37055
    template<typename _Clock, typename _Dur1,1184,37055
      operator>(1186,37138
    template<typename _Clock,1190,37269
    template<typename _Clock, typename _Dur1,1190,37269
      operator>=(operator>=1192,37352
    struct system_clock1225,38652
      typedef chrono::nanoseconds				duration;1227,38682
      typedef duration::rep					rep;1228,38729
      typedef duration::period					period;1229,38766
      typedef chrono::time_point<system_clock,system_clock1230,38809
      typedef chrono::time_point<system_clock, duration> 	time_point;1230,38809
      to_time_t(1243,39180
      from_time_t(1250,39361
	typedef chrono::time_point<system_clock, seconds>	__from;1252,39413
    struct steady_clock1265,39731
      typedef chrono::nanoseconds				duration;1267,39761
      typedef duration::rep					rep;1268,39808
      typedef duration::period					period;1269,39845
      typedef chrono::time_point<steady_clock,steady_clock1270,39888
      typedef chrono::time_point<steady_clock, duration>	time_point;1270,39888
    template<> struct is_clock<is_clock1304,40784
    template<> struct is_clock<is_clock1305,40846
    template<> struct is_clock<is_clock1306,40908
#define __cpp_lib_chrono_udls 1316,41256
  inline namespace literals1318,41295
  inline namespace chrono_literals1344,42426
    template<typename _Dur,1352,42609
      constexpr _Dur __check_overflow(1353,42654
    constexpr chrono::duration<chrono::duration1364,43047
    operator""operator"1365,43106
      operator""operator"1371,43341
    constexpr chrono::duration<chrono::duration1375,43496
    operator""mioperator""m1376,43553
      operator""mioperator""m1382,43790
    operator""operator"1387,43993
      operator""operator"1393,44215
    constexpr chrono::duration<chrono::duration1397,44377
    operator""moperator""1398,44428
      operator""moperator""1404,44670
    constexpr chrono::duration<chrono::duration1408,44838
    operator""uoperator""1409,44889
      operator""uoperator""1415,45131
    constexpr chrono::duration<chrono::duration1419,45298
    operator""noperator""1420,45348
      operator""noperator""1426,45587
  namespace chrono1434,45791
  namespace filesystem1441,45929
    struct __file_clock1443,45956
      now(1452,46306
	chrono::file_time<chrono::file_time1458,46451
	from_sys(1459,46508
	chrono::sys_time<chrono::sys_time1465,46662
	to_sys(1466,46718
      static constexpr chrono::seconds _S_epoch_diff{_S_epoch_diff1476,47095
	chrono::time_point<chrono::time_point1482,47246
	_S_from_sys(1483,47318
	chrono::time_point<chrono::time_point1493,47648
	_S_to_sys(1494,47719

/usr/include/c++/13/bits/chrono_io.h,11647
#define _GLIBCXX_CHRONO_IO_H 31,1258
namespace std _GLIBCXX_VISIBILITY(43,1464
#define _GLIBCXX_WIDEN_(69,2171
#define _GLIBCXX_WIDEN(70,2245
#define _GLIBCXX_UNITS_SUFFIX(104,3386
#undef _GLIBCXX_UNITS_SUFFIX136,4681
  template<typename _CharT,146,4896
  template<typename _CharT, typename _Traits,146,4896
	   typename _Rep,147,4942
    operator<<(149,5022
namespace __detail165,5593
    struct __local_time_fmt169,5711
      local_time<_Duration> _M_time;171,5745
      const string* _M_abbrev;172,5782
      const seconds* _M_offset_sec;173,5813
    local_time_format(191,6327
namespace __format200,6573
  __no_timezone_available(204,6650
  __not_valid_for_duration(209,6815
  __invalid_chrono_spec(215,7003
    struct _ChronoSpec 220,7157
      basic_string_view<_CharT> _M_chrono_specs;222,7202
  enum _ChronoParts 228,7468
    _Year 229,7490
    _Year = 1, _Month 229,7490
    _Year = 1, _Month = 2, _Day 229,7490
    _Year = 1, _Month = 2, _Day = 4, _Weekday 229,7490
    _Year = 1, _Month = 2, _Day = 4, _Weekday = 8, _TimeOfDay 229,7490
    _TimeZone 230,7558
    _Date 231,7578
    _DateTime 232,7624
    _ZonedDateTime 233,7660
    _Duration 234,7704
  operator|(238,7771
    struct __formatter_chrono243,7989
	_M_parse(250,8209
      template<typename _Tp,484,13549
	_M_format(486,13638
      _ChronoSpec<_CharT> _M_spec;676,18386
	_M_locale(682,18527
      template<typename _Tp,695,18999
	_M_format_to_ostream(697,19088
      template<typename _Tp,750,20962
	_M_a_A(752,21051
      template<typename _Tp,772,21696
	_M_b_B(774,21785
      template<typename _Tp,793,22430
	_M_c(795,22519
      template<typename _Tp,816,23290
	_M_C_y_Y(818,23379
      template<typename _Tp,868,24842
	_M_D(870,24931
      template<typename _Tp,886,25413
	_M_d_e(888,25502
      template<typename _Tp,918,26346
	_M_F(920,26435
      template<typename _Tp,939,27030
	_M_g_G(941,27119
      template<typename _Tp,955,27635
	_M_H_I(957,27724
      template<typename _Tp,986,28521
	_M_j(988,28610
      template<typename _Tp,1015,29567
	_M_m(1017,29656
      template<typename _Tp,1037,30176
	_M_M(1039,30265
      template<typename _Tp,1059,30792
	_M_p(1061,30881
      template<typename _Tp,1074,31326
	_M_q(1076,31415
      template<typename _Tp,1108,32470
	_M_r(1110,32559
      template<typename _Tp,1126,33120
	_M_R_T(1128,33209
      template<typename _Tp,1153,33900
	_M_S(1155,33989
      template<typename _Tp,1214,35685
	_M_u_w(1216,35774
      template<typename _Tp,1240,36581
	_M_U_V_W(1242,36670
      template<typename _Tp,1291,38494
	_M_x(1293,38583
      template<typename _Tp,1313,39276
	_M_X(1315,39365
      template<typename _Tp,1336,40105
	_M_z(1338,40194
      template<typename _Tp,1378,41446
	_M_Z(1380,41535
      _S_digit(1421,42807
      _S_two_digits(1429,43062
	static decltype(1447,43590
	_S_days(1473,44434
	_S_date(1503,45382
	_S_day(1513,45595
	_S_month(1527,45870
	_S_year(1541,46154
	_S_weekday(1555,46436
	_S_floor_seconds(1575,47033
	_M_locale_fmt(1603,47839
  template<typename _Rep,1618,48245
  template<typename _Rep, typename _Period,1618,48245
    struct formatter<formatter1619,48306
      parse(1622,48444
	typename basic_format_context<basic_format_context1633,48816
	format(1634,48871
      __format::__formatter_chrono<_CharT> _M_f;1641,49067
    struct formatter<formatter1645,49152
	parse(1649,49283
	format(1654,49436
      __format::__formatter_chrono<_CharT> _M_f;1658,49549
    struct formatter<formatter1662,49634
	parse(1666,49767
	format(1671,49922
      __format::__formatter_chrono<_CharT> _M_f;1675,50037
    struct formatter<formatter1679,50122
	parse(1683,50254
	format(1688,50408
      __format::__formatter_chrono<_CharT> _M_f;1692,50522
    struct formatter<formatter1696,50607
	parse(1700,50742
	format(1705,50899
      __format::__formatter_chrono<_CharT> _M_f;1709,51016
    struct formatter<formatter1713,51101
	parse(1717,51244
	format(1722,51401
      __format::__formatter_chrono<_CharT> _M_f;1726,51526
    struct formatter<formatter1730,51611
	parse(1734,51751
	format(1739,51908
      __format::__formatter_chrono<_CharT> _M_f;1743,52030
    struct formatter<formatter1747,52115
	parse(1751,52252
	format(1756,52422
      __format::__formatter_chrono<_CharT> _M_f;1760,52541
    struct formatter<formatter1764,52626
	parse(1768,52768
	format(1773,52938
      __format::__formatter_chrono<_CharT> _M_f;1777,53062
    struct formatter<formatter1781,53147
	parse(1785,53288
	format(1790,53462
      __format::__formatter_chrono<_CharT> _M_f;1794,53585
    struct formatter<formatter1798,53670
	parse(1802,53816
	format(1807,53990
      __format::__formatter_chrono<_CharT> _M_f;1812,54126
    struct formatter<formatter1816,54211
	parse(1820,54349
	format(1825,54520
      __format::__formatter_chrono<_CharT> _M_f;1829,54640
    struct formatter<formatter1833,54725
	parse(1837,54867
	format(1842,55021
      __format::__formatter_chrono<_CharT> _M_f;1846,55145
    struct formatter<formatter1850,55230
	parse(1854,55377
	format(1859,55531
      __format::__formatter_chrono<_CharT> _M_f;1864,55668
    struct formatter<formatter1868,55753
	parse(1872,55899
	format(1877,56053
      __format::__formatter_chrono<_CharT> _M_f;1882,56189
    struct formatter<formatter1886,56274
	parse(1890,56425
	format(1895,56579
      __format::__formatter_chrono<_CharT> _M_f;1900,56720
  template<typename _Rep,1903,56777
  template<typename _Rep, typename _Period,1903,56777
    struct formatter<formatter1904,56838
	parse(1908,57007
	format(1913,57166
      __format::__formatter_chrono<_CharT> _M_f;1918,57325
    struct formatter<formatter1923,57464
	parse(1927,57600
	format(1932,57763
      __format::__formatter_chrono<_CharT> _M_f;1936,57881
    struct formatter<formatter1940,57966
	parse(1944,58104
	format(1949,58267
      __format::__formatter_chrono<_CharT> _M_f;1953,58387
  template<typename _Duration,1957,58451
    struct formatter<formatter1958,58499
	parse(1962,58646
	format(1973,58997
      static constexpr bool __stream_insertable1978,59134
      __format::__formatter_chrono<_CharT> _M_f;1982,59282
  template<typename _Duration,1985,59339
    struct formatter<formatter1986,59387
	parse(1991,59577
	format(1996,59740
      __format::__formatter_chrono<_CharT> _M_f;2017,60549
  template<typename _Duration,2020,60606
    struct formatter<formatter2021,60654
	parse(2026,60844
	format(2031,61007
      __format::__formatter_chrono<_CharT> _M_f;2047,61605
  template<typename _Duration,2050,61662
    struct formatter<formatter2051,61710
	parse(2056,61900
	format(2061,62063
      __format::__formatter_chrono<_CharT> _M_f;2077,62669
  template<typename _Duration,2080,62726
    struct formatter<formatter2081,62774
	parse(2085,62922
	format(2090,63085
      __format::__formatter_chrono<_CharT> _M_f;2098,63290
  template<typename _Duration,2101,63347
    struct formatter<formatter2102,63395
	parse(2106,63544
	format(2111,63702
      __format::__formatter_chrono<_CharT> _M_f;2116,63843
  template<typename _Duration,2119,63900
    struct formatter<formatter2120,63948
	parse(2124,64113
	format(2129,64276
      __format::__formatter_chrono<_CharT> _M_f;2134,64433
  template<typename _Duration,2138,64544
  template<typename _Duration, typename _TimeZonePtr,2138,64544
    struct formatter<formatter2139,64615
	format(2144,64841
  template<typename _Duration,2159,65366
    struct formatter<formatter2160,65414
	format(2165,65625
namespace chrono2170,65781
  template<typename _CharT,2177,65873
  template<typename _CharT, typename _Traits,2177,65873
  template<typename _CharT, typename _Traits, typename _Rep,2177,65873
  template<typename _CharT, typename _Traits, typename _Rep, typename _Period,2177,65873
	   typename _Alloc 2178,65952
    from_stream(2180,66029
  template<typename _CharT,2188,66248
    inline basic_ostream<basic_ostream2189,66294
    operator<<(2190,66337
  template<typename _CharT,2204,66795
    inline basic_ostream<basic_ostream2205,66841
    operator<<(2206,66884
  template<typename _CharT,2223,67442
    inline basic_ostream<basic_ostream2224,67488
    operator<<(2225,67531
  template<typename _CharT,2244,68087
    inline basic_ostream<basic_ostream2245,68133
    operator<<(2246,68176
  template<typename _CharT,2263,68747
    inline basic_ostream<basic_ostream2264,68793
    operator<<(2265,68836
  template<typename _CharT,2288,69643
    inline basic_ostream<basic_ostream2289,69689
    operator<<(2290,69732
  template<typename _CharT,2301,70094
    inline basic_ostream<basic_ostream2302,70140
    operator<<(2303,70183
  template<typename _CharT,2320,70650
    inline basic_ostream<basic_ostream2321,70696
    operator<<(2322,70739
  template<typename _CharT,2337,71167
    inline basic_ostream<basic_ostream2338,71213
    operator<<(2339,71256
  template<typename _CharT,2355,71715
    inline basic_ostream<basic_ostream2356,71761
    operator<<(2357,71804
  template<typename _CharT,2373,72268
    inline basic_ostream<basic_ostream2374,72314
    operator<<(2375,72357
  template<typename _CharT,2392,72827
    inline basic_ostream<basic_ostream2393,72873
    operator<<(2394,72916
  template<typename _CharT,2408,73391
    inline basic_ostream<basic_ostream2409,73437
    operator<<(2410,73480
  template<typename _CharT,2426,73944
    inline basic_ostream<basic_ostream2427,73990
    operator<<(2428,74033
  template<typename _CharT,2446,74567
    inline basic_ostream<basic_ostream2447,74613
    operator<<(2448,74656
  template<typename _CharT,2466,75196
  template<typename _CharT, typename _Traits,2466,75196
    inline basic_ostream<basic_ostream2467,75262
    operator<<(2468,75305
  template<typename _CharT,2476,75615
    basic_ostream<basic_ostream2477,75661
    operator<<(2478,75697
  template<typename _CharT,2487,76012
    basic_ostream<basic_ostream2488,76058
    operator<<(2489,76094
  template<typename _CharT,2507,76517
  template<typename _CharT, typename _Traits,2507,76517
  template<typename _CharT, typename _Traits, typename _Duration,2507,76517
    inline basic_ostream<basic_ostream2509,76610
    operator<<(2510,76653
  template<typename _CharT,2518,76875
  template<typename _CharT, typename _Traits,2518,76875
      && ratio_less_v<ratio_less_v2520,77008
    inline basic_ostream<basic_ostream2521,77072
    operator<<(2522,77115
  template<typename _CharT,2529,77318
    inline basic_ostream<basic_ostream2530,77364
    operator<<(2531,77407
  template<typename _CharT,2539,77587
  template<typename _CharT, typename _Traits,2539,77587
    inline basic_ostream<basic_ostream2540,77653
    operator<<(2541,77696
  template<typename _CharT,2550,77934
  template<typename _CharT, typename _Traits,2550,77934
    inline basic_ostream<basic_ostream2551,78000
    operator<<(2552,78043
  template<typename _CharT,2561,78281
  template<typename _CharT, typename _Traits,2561,78281
    inline basic_ostream<basic_ostream2562,78347
    operator<<(2563,78390
  template<typename _CharT,2573,78629
  template<typename _CharT, typename _Traits,2573,78629
    inline basic_ostream<basic_ostream2574,78695
    operator<<(2575,78738
  template<typename _CharT,2584,78978
  template<typename _CharT, typename _Traits,2584,78978
    inline basic_ostream<basic_ostream2585,79044
    operator<<(2586,79087
#undef _GLIBCXX_WIDEN2594,79313

/usr/include/c++/13/bits/codecvt.h,2023
#define _CODECVT_H 37,1367
namespace std _GLIBCXX_VISIBILITY(44,1495
  class codecvt_base49,1627
    enum result52,1662
      ok,54,1684
      partial,55,1694
      error,56,1709
      noconv57,1722
    class __codecvt_abstract_base71,2107
      typedef codecvt_base::result	result;76,2223
      typedef _InternT			intern_type;77,2266
      typedef _ExternT			extern_type;78,2304
      typedef _StateT			state_type;79,2342
      out(119,4245
      unshift(158,6106
      in(199,8120
      encoding(209,8443
      always_noconv(213,8524
      length(217,8614
      max_length(222,8803
      __codecvt_abstract_base(227,8907
      ~__codecvt_abstract_base(230,8999
    class codecvt277,10487
      typedef codecvt_base::result	result;282,10605
      typedef _InternT			intern_type;283,10648
      typedef _ExternT			extern_type;284,10686
      typedef _StateT			state_type;285,10724
      __c_locale			_M_c_locale_codecvt;288,10776
      static locale::id			id;291,10829
      codecvt(294,10875
      ~codecvt(304,11112
      typedef char			intern_type;348,12414
      typedef char			extern_type;349,12448
      typedef mbstate_t			state_type;350,12482
      typedef wchar_t			intern_type;411,14075
      typedef char			extern_type;412,14112
      typedef mbstate_t			state_type;413,14146
      typedef char16_t			intern_type;475,15715
      typedef char			extern_type;476,15753
      typedef mbstate_t			state_type;477,15787
      typedef char32_t			intern_type;532,17244
      typedef char			extern_type;533,17282
      typedef mbstate_t			state_type;534,17316
      typedef char16_t			intern_type;590,18810
      typedef char8_t			extern_type;591,18848
      typedef mbstate_t			state_type;592,18885
      typedef char32_t			intern_type;647,20354
      typedef char8_t			extern_type;648,20392
      typedef mbstate_t			state_type;649,20429
    class codecvt_byname 699,21764
      codecvt_byname(703,21868
      codecvt_byname(716,22251
      ~codecvt_byname(722,22395

/usr/include/c++/13/bits/concept_check.h,466
#define _CONCEPT_CHECK_H 31,1275
#define __glibcxx_function_requires(48,1853
#define __glibcxx_class_requires(49,1894
#define __glibcxx_class_requires2(50,1934
#define __glibcxx_class_requires3(51,1978
#define __glibcxx_class_requires4(52,2025
#define __glibcxx_function_requires(68,2645
#define __glibcxx_class_requires(70,2792
#define __glibcxx_class_requires2(72,2923
#define __glibcxx_class_requires3(74,3059
#define __glibcxx_class_requires4(76,3199

/usr/include/c++/13/bits/cow_string.h,8072
#define _COW_STRING_H 33,1363
# define __cpp_lib_constexpr_string 41,1586
# define __cpp_lib_constexpr_string 44,1750
namespace std _GLIBCXX_VISIBILITY(47,1802
    class basic_string116,4572
	rebind<_CharT>::other _CharT_alloc_type;119,4668
      typedef __gnu_cxx::__alloc_traits<_CharT_alloc_type> _CharT_alloc_traits;120,4710
      typedef _Traits					    traits_type;124,4819
      typedef typename _Traits::char_type		    value_type;125,4862
      typedef _Alloc					    allocator_type;126,4921
      typedef typename _CharT_alloc_traits::size_type	    size_type;127,4966
      typedef typename _CharT_alloc_traits::difference_type difference_type;128,5035
      typedef typename _CharT_alloc_type::reference	    reference;130,5138
      typedef typename _CharT_alloc_type::const_reference   const_reference;131,5205
      typedef value_type&				    reference;133,5288
      typedef const value_type&				    const_reference;134,5332
      typedef typename _CharT_alloc_traits::pointer	    pointer;136,5395
      typedef typename _CharT_alloc_traits::const_pointer   const_pointer;137,5460
      typedef __gnu_cxx::__normal_iterator<pointer,pointer138,5535
      typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;138,5535
      typedef __gnu_cxx::__normal_iterator<const_pointer,const_pointer139,5612
							    const_iterator;140,5684
      typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;141,5711
      typedef std::reverse_iterator<iterator>		    reverse_iterator;142,5787
      typedef iterator __const_iterator;146,5927
      struct _Rep_base163,6718
	size_type		_M_length;165,6749
	size_type		_M_capacity;166,6772
	_Atomic_word		_M_refcount;167,6797
      struct _Rep 170,6835
	  rebind<char>::other _Raw_bytes_alloc;174,6946
	static const size_type	_S_max_size;189,7605
	static const _CharT	_S_terminal;190,7642
	static size_type _S_empty_rep_storage[_S_empty_rep_storage194,7798
	_S_empty_rep(197,7855
	_M_is_leaked(207,8179
	_M_is_shared(221,8624
	_M_set_leaked(236,9150
	_M_set_sharable(240,9221
	_M_set_length_and_sharable(244,9293
	_M_refdata(259,9727
	_M_grab(263,9808
	_M_dispose(274,10056
	_M_refcopy(303,11097
      struct _Alloc_hider 317,11467
	_Alloc_hider(319,11510
	_CharT* _M_p;322,11609
      mutable _Alloc_hider	_M_dataplus;334,11993
      _M_data(337,12048
      _M_data(341,12139
      _M_rep(345,12240
      _M_ibegin(351,12470
      _M_iend(355,12566
      _M_leak(359,12671
      _M_check(366,12813
      _M_check_length(376,13077
      _M_limit(384,13335
      _M_disjunct(392,13590
      _M_copy(401,13893
      _M_move(410,14101
      _M_assign(419,14309
	_S_copy_chars(431,14678
      _S_copy_chars(438,14871
      _S_copy_chars(442,15027
      _S_copy_chars(447,15201
      _S_copy_chars(451,15342
      _S_compare(456,15500
      _S_empty_rep(475,16016
      typedef basic_string_view<_CharT,_CharT480,16172
      typedef basic_string_view<_CharT, _Traits> __sv_type;480,16172
      template<typename _Tp,482,16233
		 __not_<__not_485,16355
		 __not_<is_convertible<const _Tp&, const _CharT*>>>::value,value486,16415
      _S_to_string_view(491,16564
      struct __sv_wrapper498,16846
	explicit __sv_wrapper(500,16880
	__sv_type _M_sv;501,16946
      basic_string(511,17199
      basic_string(523,17583
      basic_string(536,17928
      basic_string(545,18229
      basic_string(589,19939
      basic_string(627,21339
      basic_string(650,22169
      basic_string(654,22327
      basic_string(658,22481
	basic_string(686,23298
      template<typename _Tp,699,23819
	basic_string(701,23921
      template<typename _Tp,710,24301
	basic_string(712,24370
      ~basic_string(719,24577
      operator=(operator=727,24814
      operator=(operator=735,25048
      operator=(operator=746,25357
      operator=(operator=761,25754
      operator=(operator=774,26098
	_If_sv<_If_sv787,26441
	operator=(operator=788,26469
      operator __sv_type(operator __sv_type795,26629
      begin(805,26910
      begin(816,27170
      end(824,27416
      end(835,27694
      rbegin(844,28018
      rbegin(853,28340
      rend(862,28674
      rend(871,29008
      cbegin(880,29281
      cend(888,29519
      crbegin(897,29835
      crend(906,30155
      size(916,30402
      length(928,30733
      max_size(933,30877
      resize(960,32045
      shrink_to_fit(968,32303
      capacity(978,32551
      clear(1013,33770
      clear(1026,34061
      empty(1035,34273
      at(1089,36315
      at(1111,37124
      front(1128,37543
	return operator[](0)operator[](01131,37594
	return operator[](0)operator[](01142,37844
      back(1161,38259
      operator+=(operator+=1175,38579
      operator+=(operator+=1184,38830
      operator+=(operator+=1193,39073
      operator+=(operator+=1206,39402
	_If_sv<_If_sv1217,39760
	operator+=(operator+=1218,39788
      append(1261,41242
      append(1285,41953
	append(1299,42460
	_If_sv<_If_sv1309,42820
	append(1310,42848
	_If_sv<_If_sv1325,43375
	append(1326,43403
      push_back(1340,43786
      assign(1367,44647
      assign(1389,45445
      assign(1417,46543
      assign(1433,47024
	assign(1446,47533
      assign(1456,47903
	_If_sv<_If_sv1467,48257
	assign(1468,48285
	_If_sv<_If_sv1482,48762
	assign(1483,48790
      insert(1506,49686
	insert(1523,50366
      insert(1534,50813
      insert(1554,51582
      insert(1576,52645
      insert(1617,54463
      insert(1640,55400
      insert(1658,56222
	_If_sv<_If_sv1675,56801
	insert(1676,56829
	_If_sv<_If_sv1691,57358
	insert(1692,57386
      erase(1718,58458
      erase(1734,59003
      pop_back(1763,59961
      replace(1788,60962
      replace(1810,62103
      replace(1855,64267
      replace(1879,65329
      replace(1897,66204
      replace(1916,67124
      replace(1937,68062
      replace(1958,68986
	replace(1982,70057
	  typedef typename std::__is_integer<std::__is_integer1988,70284
      replace(1995,70595
      replace(2005,70922
      replace(2016,71268
      replace(2026,71604
      basic_string& replace(2051,72681
	_If_sv<_If_sv2065,73231
	replace(2066,73259
	_If_sv<_If_sv2082,73900
	replace(2083,73928
	_If_sv<_If_sv2103,74669
	replace(2104,74697
	_M_replace_dispatch(2114,74935
	_S_construct_aux(2135,75700
	  typedef typename iterator_traits<iterator_traits2138,75796
	_S_construct_aux(2146,76069
      _S_construct_aux_2(2152,76260
	_S_construct(2157,76432
	  typedef typename std::__is_integer<std::__is_integer2159,76506
      c_str(2215,78411
      data(2227,78852
      data(2238,79180
      get_allocator(2249,79371
      find(2279,80523
      find(2294,81126
	_If_sv<_If_sv2321,82135
	find(2322,82159
      rfind(2341,82814
      rfind(2372,84072
	_If_sv<_If_sv2399,85113
	rfind(2400,85137
      find_first_of(2420,85840
      find_first_of(2451,87170
      find_first_of(2471,87880
	_If_sv<_If_sv2483,88374
	find_first_of(2484,88398
      find_last_of(2504,89126
      find_last_of(2535,90482
      find_last_of(2555,91192
	_If_sv<_If_sv2567,91693
	find_last_of(2568,91717
      find_first_not_of(2587,92431
      find_first_not_of(2618,93806
	_If_sv<_If_sv2648,94953
	find_first_not_of(2649,94977
      find_last_not_of(2669,95720
      find_last_not_of(2700,97129
	_If_sv<_If_sv2730,98302
	find_last_not_of(2731,98326
      substr(2752,99123
      compare(2771,99979
	_If_sv<_If_sv2790,100547
	compare(2791,100565
	_If_sv<_If_sv2814,101322
	compare(2815,101340
	_If_sv<_If_sv2833,102060
	compare(2834,102078
      compare(2864,103356
      compare(2900,105010
      compare(2930,106245
      compare(2964,107714
      compare(3002,109390
      starts_with(3017,109824
      starts_with(3021,109982
      starts_with(3026,110143
      ends_with(3030,110280
      ends_with(3034,110434
      ends_with(3039,110591
      contains(3045,110766
      contains(3049,110918
      contains(3054,111073

/usr/include/c++/13/bits/cpp_type_traits.h,5918
#define _CPP_TYPE_TRAITS_H 33,1377
namespace std _GLIBCXX_VISIBILITY(69,2771
  struct __true_type 73,2850
  struct __false_type 74,2876
    struct __truth_type77,2921
    { typedef __false_type __type;78,2945
    { typedef __true_type __type;82,3027
    struct __traitor87,3189
      enum { __value 89,3216
      typedef typename __truth_type<__value>::__type __type;90,3283
    struct __are_same95,3419
      enum { __value 97,3447
      typedef __false_type __type;98,3475
      enum { __value 104,3581
      typedef __true_type __type;105,3609
    struct __is_void110,3728
      enum { __value 112,3755
      typedef __false_type __type;113,3783
    struct __is_void<__is_void117,3839
      enum { __value 119,3872
      typedef __true_type __type;120,3900
    struct __is_integer127,3996
      enum { __value 129,4026
      typedef __false_type __type;130,4054
    struct __is_integer<__is_integer138,4348
      enum { __value 140,4384
      typedef __true_type __type;141,4412
    struct __is_integer<__is_integer145,4467
      enum { __value 147,4503
      typedef __true_type __type;148,4531
    struct __is_integer<__is_integer152,4586
      enum { __value 154,4629
      typedef __true_type __type;155,4657
    struct __is_integer<__is_integer159,4712
      enum { __value 161,4757
      typedef __true_type __type;162,4785
    struct __is_integer<__is_integer167,4863
      enum { __value 169,4902
      typedef __true_type __type;170,4930
    struct __is_integer<__is_integer176,5021
      enum { __value 178,5060
      typedef __true_type __type;179,5088
    struct __is_integer<__is_integer185,5177
      enum { __value 187,5217
      typedef __true_type __type;188,5245
    struct __is_integer<__is_integer192,5300
      enum { __value 194,5340
      typedef __true_type __type;195,5368
    struct __is_integer<__is_integer200,5430
      enum { __value 202,5467
      typedef __true_type __type;203,5495
    struct __is_integer<__is_integer207,5550
      enum { __value 209,5596
      typedef __true_type __type;210,5624
    struct __is_integer<__is_integer214,5679
      enum { __value 216,5714
      typedef __true_type __type;217,5742
    struct __is_integer<__is_integer221,5797
      enum { __value 223,5841
      typedef __true_type __type;224,5869
    struct __is_integer<__is_integer228,5924
      enum { __value 230,5960
      typedef __true_type __type;231,5988
    struct __is_integer<__is_integer235,6043
      enum { __value 237,6088
      typedef __true_type __type;238,6116
    struct __is_integer<__is_integer242,6171
      enum { __value 244,6212
      typedef __true_type __type;245,6240
    struct __is_integer<__is_integer249,6295
      enum { __value 251,6345
      typedef __true_type __type;252,6373
#define __INT_N(255,6415
#undef __INT_N284,7050
    struct __is_floating290,7127
      enum { __value 292,7158
      typedef __false_type __type;293,7186
    struct __is_floating<__is_floating298,7303
      enum { __value 300,7341
      typedef __true_type __type;301,7369
    struct __is_floating<__is_floating305,7424
      enum { __value 307,7463
      typedef __true_type __type;308,7491
    struct __is_floating<__is_floating312,7546
      enum { __value 314,7590
      typedef __true_type __type;315,7618
    struct __is_floating<__is_floating320,7701
      enum { __value 322,7742
      typedef __true_type __type;323,7770
    struct __is_floating<__is_floating329,7860
      enum { __value 331,7901
      typedef __true_type __type;332,7929
    struct __is_floating<__is_floating338,8019
      enum { __value 340,8060
      typedef __true_type __type;341,8088
    struct __is_floating<__is_floating347,8179
      enum { __value 349,8221
      typedef __true_type __type;350,8249
    struct __is_floating<__is_floating356,8340
      enum { __value 358,8396
      typedef __true_type __type;359,8424
    struct __is_pointer367,8527
      enum { __value 369,8557
      typedef __false_type __type;370,8585
    struct __is_pointer<__is_pointer374,8653
      enum { __value 376,8689
      typedef __true_type __type;377,8717
    struct __is_arithmetic384,8862
    struct __is_scalar392,9057
    struct __is_char400,9265
      enum { __value 402,9292
      typedef __false_type __type;403,9320
    struct __is_char<__is_char407,9376
      enum { __value 409,9409
      typedef __true_type __type;410,9437
    struct __is_char<__is_char415,9514
      enum { __value 417,9550
      typedef __true_type __type;418,9578
    struct __is_byte423,9652
      enum { __value 425,9679
      typedef __false_type __type;426,9707
    struct __is_byte<__is_byte430,9763
      enum { __value 432,9796
      typedef __true_type __type;433,9824
    struct __is_byte<__is_byte437,9879
      enum { __value 439,9919
      typedef __true_type __type;440,9947
    struct __is_byte<__is_byte444,10002
      enum { __value 446,10044
      typedef __true_type __type;447,10072
      enum { __value 456,10223
      typedef __true_type __type;457,10251
    struct __is_byte<__is_byte463,10350
      enum { __value 465,10386
      typedef __true_type __type;466,10414
    struct __is_nonvolatile_trivially_copyable474,10601
      enum { __value 476,10654
    struct __is_nonvolatile_trivially_copyable<__is_nonvolatile_trivially_copyable483,10925
      enum { __value 485,10992
    struct __memcpyable490,11147
      enum { __value 492,11177
    struct __memcmpable511,11851
      enum { __value 513,11881
    struct __is_memcmp_ordered<__is_memcmp_ordered574,13743
    struct __is_memcmp_ordered_with<__is_memcmp_ordered_with580,13927
    struct __is_memcmp_ordered_with<__is_memcmp_ordered_with588,14233
    struct __is_move_iterator596,14411
      enum { __value 598,14447
      typedef __false_type __type;599,14475

/usr/include/c++/13/bits/cxxabi_forced.h,104
#define _CXXABI_FORCED_H 32,1255
  class __forced_unwind48,1586
    virtual ~__forced_unwind(50,1614

/usr/include/c++/13/bits/cxxabi_init_exception.h,171
#define _CXXABI_INIT_EXCEPTION_H 32,1224
#define _GLIBCXX_CDTOR_CALLABI42,1405
#define _GLIBCXX_HAVE_CDTOR_CALLABI 43,1436
#define _GLIBCXX_HAVE_CDTOR_CALLABI 45,1480

/usr/include/c++/13/bits/deque.tcc,986
#define _DEQUE_TCC 57,2370
namespace std _GLIBCXX_VISIBILITY(61,2424
    operator=(operator=96,3325
      typedef _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*> _Iter;985,29238
      typedef _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr> _Iter;1007,30003
      typedef _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*> _Iter;1052,31720
      typedef typename _Iter::difference_type 1053,31790
      typedef _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr> _Iter;1130,33903
      typedef _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*> _Iter;1174,35647
      typedef typename _Iter::difference_type 1175,35717
      typedef _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr> _Iter;1206,36559
      typedef _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr> _Iter;1248,38297
      typedef typename _Iter::difference_type 1249,38367
      typedef std::__lexicographical_compare<__simple> _Lc;1285,39436
      typedef std::__lexicographical_compare<__simple> _Lc;1342,41597

/usr/include/c++/13/bits/enable_special_members.h,135
#define _ENABLE_SPECIAL_MEMBERS_H 31,1278
namespace std _GLIBCXX_VISIBILITY(37,1371
  struct _Enable_default_constructor_tag42,1473

/usr/include/c++/13/bits/erase_if.h,74
#define _GLIBCXX_ERASE_IF_H 31,1244
# define __cpp_lib_erase_if 44,1435

/usr/include/c++/13/bits/exception.h,155
#define __EXCEPTION_H 32,1227
namespace std _GLIBCXX_VISIBILITY(40,1324
  class exception59,1881
    exception(62,1913
    virtual ~exception(63,1950

/usr/include/c++/13/bits/exception_defines.h,221
#define _EXCEPTION_DEFINES_H 31,1283
# define __try 35,1412
# define __catch(36,1442
# define __throw_exception_again37,1473
# define __try 40,1538
# define __catch(41,1562
# define __throw_exception_again 42,1591

/usr/include/c++/13/bits/exception_ptr.h,917
#define _EXCEPTION_PTR_H32,1281
# define _GLIBCXX_EH_PTR_USED 45,1543
# define _GLIBCXX_EH_PTR_USED47,1605
namespace std _GLIBCXX_VISIBILITY(52,1659
  namespace __exception_ptr83,2352
    using std::rethrow_exception;85,2384
    class exception_ptr97,2778
      void* _M_exception_object;99,2808
      exception_ptr(119,3466
      exception_ptr(123,3554
      typedef void (exception_ptr::*__safe_bool)__safe_bool129,3774
      operator=(operator=140,4069
      explicit operator bool(operator bool162,4681
      operator==(operator==172,5015
      operator!=(operator!=177,5221
    exception_ptr::exception_ptr(189,5559
    exception_ptr::exception_ptr(195,5690
    exception_ptr::~exception_ptr(~exception_ptr205,5928
    exception_ptr::operator=(operator=213,6096
    exception_ptr::swap(swap221,6293
    swap(230,6564
      __dest_thunk(237,6746
#undef _GLIBCXX_EH_PTR_USED288,8143

/usr/include/c++/13/bits/forward_list.h,4356
#define _FORWARD_LIST_H 31,1269
namespace std _GLIBCXX_VISIBILITY(44,1577
  struct _Fwd_list_node_base54,1895
    _Fwd_list_node_base(57,1965
    _M_transfer_after(75,2458
    _M_reverse_after(91,2805
    struct _Fwd_list_node113,3377
      __gnu_cxx::__aligned_buffer<_Tp> _M_storage;118,3477
      _M_valptr(121,3540
      _M_valptr(125,3623
    struct _Fwd_list_iterator135,3827
      typedef _Fwd_list_iterator<_Tp>		_Self;137,3863
      typedef _Fwd_list_node<_Tp>		_Node;138,3909
      typedef _Tp				value_type;140,3952
      typedef _Tp*				pointer;141,3985
      typedef _Tp&				reference;142,4016
      typedef ptrdiff_t				difference_type;143,4049
      typedef std::forward_iterator_tag		iterator_category;144,4093
      _Fwd_list_iterator(146,4154
      _Fwd_list_iterator(150,4228
      operator*(155,4354
      operator->(160,4493
      operator++(164,4607
      operator++(171,4708
      operator==(operator==183,4944
      operator!=(operator!=192,5223
      _M_next(197,5350
      _Fwd_list_node_base* _M_node;205,5505
    struct _Fwd_list_const_iterator214,5680
      typedef _Fwd_list_const_iterator<_Tp>	_Self;216,5722
      typedef const _Fwd_list_node<_Tp>		_Node;217,5773
      typedef _Fwd_list_iterator<_Tp>		iterator;218,5821
      typedef _Tp				value_type;220,5871
      typedef const _Tp*			pointer;221,5904
      typedef const _Tp&			reference;222,5940
      typedef ptrdiff_t				difference_type;223,5978
      typedef std::forward_iterator_tag		iterator_category;224,6022
      _Fwd_list_const_iterator(226,6083
      _Fwd_list_const_iterator(230,6163
      _Fwd_list_const_iterator(233,6262
      operator*(238,6403
      operator->(243,6542
      operator++(247,6656
      operator++(254,6757
      operator==(operator==266,6999
      operator!=(operator!=275,7284
      _M_next(280,7411
      const _Fwd_list_node_base* _M_node;288,7584
    struct _Fwd_list_base295,7732
      typedef __alloc_rebind<_Alloc,_Alloc298,7779
      typedef __alloc_rebind<_Alloc, _Fwd_list_node<_Tp>> _Node_alloc_type;298,7779
      typedef __gnu_cxx::__alloc_traits<_Node_alloc_type> _Node_alloc_traits;299,7855
      struct _Fwd_list_impl301,7934
	_Fwd_list_node_base _M_head;304,8002
	_Fwd_list_impl(306,8033
	_Fwd_list_impl(313,8207
	_Fwd_list_impl(317,8346
      _Fwd_list_impl _M_impl;322,8448
      typedef _Fwd_list_iterator<_Tp>		iterator;325,8491
      typedef _Fwd_list_const_iterator<_Tp>	const_iterator;326,8540
      typedef _Fwd_list_node<_Tp>		_Node;327,8600
      _M_get_Node_allocator(330,8667
      _M_get_Node_allocator(334,8769
      _Fwd_list_base(339,8882
      _Fwd_list_base(343,9007
      ~_Fwd_list_base(353,9337
      _M_get_node(358,9443
	_M_create_node(366,9628
      _M_put_node(389,10144
	typedef typename _Node_alloc_traits::pointer 391,10182
      typedef _Fwd_list_base<_Tp, _Alloc>		_Base;443,12302
      typedef _Fwd_list_node_base			_Node_base;444,12352
      typedef typename _Base::_Node	445,12400
      typedef typename _Base::_Node_alloc_type	446,12445
      typedef typename _Base::_Node_alloc_traits	447,12511
      typedef allocator_traits<__alloc_rebind<_Alloc, _Tp>>	_Alloc_traits;448,12580
      typedef _Tp					value_type;452,12684
      typedef typename _Alloc_traits::pointer	453,12718
      typedef typename _Alloc_traits::const_pointer	454,12774
      typedef value_type&				reference;455,12841
      typedef const value_type&				const_reference;456,12881
      typedef typename _Base::iterator	458,12934
      typedef typename _Base::const_iterator	459,12985
      typedef std::size_t				size_type;460,13047
      typedef std::ptrdiff_t				difference_type;461,13087
      typedef _Alloc					allocator_type;462,13136
      operator=(operator=630,19071
      operator=(operator=649,19745
	  typedef is_assignable<_Tp, decltype(*__first)__first672,20512
# define __cpp_lib_list_remove_return_type 1184,39066
# define _GLIBCXX_FWDLIST_REMOVE_RETURN_TYPE_TAG 1186,39163
# define _GLIBCXX_FWDLIST_REMOVE_RETURN_TYPE_TAG1190,39307
#undef _GLIBCXX_FWDLIST_REMOVE_RETURN_TYPE_TAG1239,41184
    operator<=>(operator<=>1473,48769
    operator<(1496,49582
    operator!=(operator!=1505,49896
    operator>(1513,50135
    operator>=(operator>=1521,50370
    operator<=(operator<=1529,50608

/usr/include/c++/13/bits/forward_list.tcc,252
#define _FORWARD_LIST_TCC 31,1275
namespace std _GLIBCXX_VISIBILITY(33,1304
    operator=(operator=140,4351
# define _GLIBCXX20_ONLY(282,8074
# define _GLIBCXX20_ONLY(284,8120
#undef _GLIBCXX20_ONLY362,10148
    operator==(operator==393,11047

/usr/include/c++/13/bits/fs_dir.h,3468
#define _GLIBCXX_FS_DIR_H 31,1285
namespace std _GLIBCXX_VISIBILITY(44,1596
  class file_status59,1856
    file_status(63,1925
    file_status(66,2000
    file_type  type(77,2400
    perms      permissions(78,2457
    void       type(81,2540
    void       permissions(82,2605
    file_type	_M_type;90,2824
    perms	_M_perms;91,2847
  class directory_entry105,3094
    directory_entry(114,3337
    directory_entry(118,3425
    assign(133,3777
    assign(140,3877
    replace_filename(147,3999
    replace_filename(154,4125
    refresh(161,4273
    refresh(165,4340
    const filesystem::path& path(169,4444
    operator const operator const170,4514
    exists(173,4599
    exists(177,4692
    is_block_file(181,4814
    is_block_file(185,4901
    is_character_file(189,5017
    is_character_file(193,5112
    is_directory(197,5236
    is_directory(201,5326
    is_fifo(205,5445
    is_fifo(209,5525
    is_other(213,5634
    is_other(217,5731
    is_regular_file(221,5857
    is_regular_file(225,5948
    is_socket(229,6068
    is_socket(233,6152
    is_symlink(237,6265
    is_symlink(245,6447
    file_size(253,6663
    file_size(257,6747
    hard_link_count(261,6862
    hard_link_count(265,6958
    last_write_time(269,7090
    last_write_time(274,7192
    status(278,7321
    status(282,7401
    symlink_status(286,7512
    symlink_status(290,7608
    operator==(operator==294,7728
    operator<=>(operator<=>299,7885
    operator!=(operator!=303,8003
    operator< 307,8114
    operator<=(operator<=311,8224
    operator> 315,8335
    operator>=(operator>=319,8445
    template<typename _CharT,330,8772
      operator<<(332,8865
    directory_entry(336,8989
    _M_file_type(342,9177
    _M_file_type(351,9419
    filesystem::path	_M_path;361,9629
  struct __directory_iterator_proxy372,9854
    __directory_iterator_proxy(383,10157
    directory_entry _M_entry;385,10237
  class directory_iterator394,10416
    typedef directory_entry        value_type;397,10457
    typedef ptrdiff_t              difference_type;398,10504
    typedef const directory_entry* pointer;399,10556
    typedef const directory_entry& reference;400,10600
    typedef input_iterator_tag     iterator_category;401,10646
    directory_iterator(406,10751
    directory_iterator(409,10860
    directory_iterator(412,10984
    directory_iterator(415,11108
    const directory_entry* operator->(432,11660
    __directory_iterator_proxy operator++(436,11833
    operator==(operator==444,11990
    bool operator==(operator==454,12343
    operator!=(operator!=460,12492
    std::__shared_ptr<_Dir> _M_dir;470,12761
  class recursive_directory_iterator498,13450
    typedef directory_entry        value_type;501,13501
    typedef ptrdiff_t              difference_type;502,13548
    typedef const directory_entry* pointer;503,13600
    typedef const directory_entry& reference;504,13644
    typedef input_iterator_tag     iterator_category;505,13690
    recursive_directory_iterator(510,13805
    recursive_directory_iterator(513,13934
    recursive_directory_iterator(516,14078
    recursive_directory_iterator(520,14271
    const directory_entry* operator->(536,14850
    __directory_iterator_proxy operator++(547,15253
    operator==(operator==560,15502
    bool operator==(operator==570,15879
    operator!=(operator!=576,16029
    std::__shared_ptr<_Dir_stack> _M_dirs;585,16310

/usr/include/c++/13/bits/fs_fwd.h,2763
#define _GLIBCXX_FS_FWD_H 31,1278
namespace std _GLIBCXX_VISIBILITY(39,1404
  struct space_info66,1993
    uintmax_t capacity;68,2017
    uintmax_t free;69,2041
    uintmax_t available;70,2061
  enum class file_type 78,2277
      none 79,2316
      none = 0, not_found 79,2316
      none = 0, not_found = -1, regular 79,2316
      none = 0, not_found = -1, regular = 1, directory 79,2316
      none = 0, not_found = -1, regular = 1, directory = 2, symlink 79,2316
      block 80,2389
      block = 4, character 80,2389
      block = 4, character = 5, fifo 80,2389
      block = 4, character = 5, fifo = 6, socket 80,2389
      block = 4, character = 5, fifo = 6, socket = 7, unknown 80,2389
  enum class copy_options 84,2522
      none 85,2567
      skip_existing 86,2583
      skip_existing = 1, overwrite_existing 86,2583
      skip_existing = 1, overwrite_existing = 2, update_existing 86,2583
      recursive 87,2653
      copy_symlinks 88,2674
      copy_symlinks = 16, skip_symlinks 88,2674
      directories_only 89,2720
      directories_only = 64, create_symlinks 89,2720
      directories_only = 64, create_symlinks = 128, create_hard_links 89,2720
  operator|(103,3121
  operator^(111,3378
  operator~(119,3635
  operator&=(operator&=126,3843
  operator|=(operator|=130,3956
  operator^=(operator^=134,4069
  enum class perms 140,4225
      none	141,4257
      owner_read	142,4275
      owner_write	143,4301
      owner_exec	144,4328
      owner_all	145,4354
      group_read	146,4380
      group_write	147,4406
      group_exec	148,4433
      group_all	149,4459
      others_read	150,4485
      others_write	151,4512
      others_exec	152,4540
      others_all	153,4567
      all	154,4593
      set_uid	155,4613
      set_gid	156,4637
      sticky_bit	157,4661
      mask	158,4687
      unknown	159,4708
  operator&(165,4788
  operator|(173,5010
  operator^(181,5232
  operator~(189,5454
  operator&=(operator&=196,5634
  operator|=(operator|=200,5726
  operator^=(operator^=204,5818
  enum class perm_options 209,5957
      replace	210,5996
      add	211,6017
      remove	212,6034
      nofollow	213,6054
  operator&(219,6143
  operator|(227,6400
  operator^(235,6657
  operator~(243,6914
  operator&=(operator&=250,7122
  operator|=(operator|=254,7235
  operator^=(operator^=258,7348
  enum class directory_options 263,7498
      none 264,7547
      none = 0, follow_directory_symlink 264,7547
      none = 0, follow_directory_symlink = 1, skip_permission_denied 264,7547
  operator&(270,7698
  operator|(278,7980
  operator^(286,8262
  operator~(294,8544
  operator&=(operator&=301,8772
  operator|=(operator|=305,8900
  operator^=(operator^=309,9028

/usr/include/c++/13/bits/fs_ops.h,78
#define _GLIBCXX_FS_OPS_H 31,1289
namespace std _GLIBCXX_VISIBILITY(37,1366

/usr/include/c++/13/bits/fs_path.h,7189
#define _GLIBCXX_FS_PATH_H 31,1279
# define _GLIBCXX_FILESYSTEM_IS_WINDOWS 54,1755
namespace std _GLIBCXX_VISIBILITY(57,1805
    struct __safe_iterator_traits 94,2710
  template<> struct __safe_iterator_traits<__safe_iterator_traits98,2857
  template<> struct __safe_iterator_traits<__safe_iterator_traits99,2912
  template<> struct __safe_iterator_traits<__safe_iterator_traits100,2973
  template<> struct __safe_iterator_traits<__safe_iterator_traits101,3037
    struct __source_value_type_impl218,6984
  class path293,9347
    using value_type 297,9412
    static constexpr value_type preferred_separator 298,9444
    using value_type 302,9604
    using value_type 304,9652
    static constexpr value_type preferred_separator 306,9690
    using string_type 308,9756
    enum format 311,9867
    enum format : unsigned char { native_format,311,9867
    enum format : unsigned char { native_format, generic_format,311,9867
    enum format : unsigned char { native_format, generic_format, auto_format 311,9867
    path(315,9984
    path(319,10047
    path(324,10186
    template<typename _Source,328,10307
	     typename _Require 329,10338
    template<typename _InputIterator,334,10548
	     typename _Require 335,10586
    template<typename _Source,340,10835
	     typename _Require 341,10866
	     typename _Require2 342,10918
    template<typename _InputIterator,347,11170
	     typename _Require 348,11208
	     typename _Req2 349,11268
      operator=(operator=366,11800
      assign(371,11946
      assign(376,12104
      operator/=(operator/=385,12332
      append(393,12532
      append(401,12743
      operator+=(operator+=417,13218
      concat(425,13437
      concat(433,13638
    void clear(441,13820
    const string_type&  native(452,14138
    const value_type*   c_str(453,14210
    operator string_type(operator string_type454,14289
    template<typename _CharT,456,14347
    template<typename _CharT, typename _Traits 456,14347
	     typename _Allocator 457,14422
      std::basic_string<_CharT, _Traits,458,14474
    template<typename _CharT,475,14978
    template<typename _CharT, typename _Traits 475,14978
	     typename _Allocator 476,15053
      std::basic_string<_CharT, _Traits,477,15105
    [[nodiscard]] bool empty(513,16143
    bool is_relative(523,16593
    using const_iterator 532,16857
    template<typename _CharT,538,17001
      operator<<(540,17099
    template<typename _CharT,547,17294
      operator>>(549,17392
    friend bool operator==(operator==560,17648
    operator<=>(operator<=>566,17859
    friend bool operator!=(operator!=570,18003
    friend bool operator<(574,18134
    friend bool operator<=(operator<=578,18271
    friend bool operator>(582,18401
    friend bool operator>=(operator>=586,18527
    friend path operator/(591,18677
    enum class _Type 599,18841
      _Multi 600,18880
      _Multi = 0, _Root_name,600,18880
      _Multi = 0, _Root_name, _Root_dir,600,18880
      _Multi = 0, _Root_name, _Root_dir, _Filename600,18880
    enum class _Split 605,19001
    enum class _Split { _Stem,605,19001
    enum class _Split { _Stem, _Extension 605,19001
    pair<pair610,19150
      _S_convert(618,19522
      _S_convert_loc(648,20623
      _S_convert_loc(656,20902
    template<typename _CharT,661,21050
    template<typename _CharT, typename _Traits,661,21050
      static basic_string<basic_string662,21119
    _Type _M_type(672,21472
    string_type _M_pathname;674,21536
    struct _List678,21585
      _Type type(691,21907
      void swap(699,22216
      struct _Impl_deleter720,22965
      unique_ptr<unique_ptr724,23050
      unique_ptr<_Impl, _Impl_deleter> _M_impl;724,23050
    _List _M_cmpts;726,23105
  inline void swap(736,23248
  class filesystem_error 747,23496
    std::__shared_ptr<const _Impl> _M_impl;772,24245
namespace __detail776,24320
  __throw_conversion_error(779,24368
    __wstr_from_utf8(789,24633
  template<typename _InputIterator,812,25256
	   typename _Require 813,25292
  template<typename _Source,838,26102
	   typename _Require 839,26131
  struct path::_Cmpt 859,26753
    _Cmpt(863,26857
    size_t _M_pos;865,26887
    struct path::_Codecvt875,27280
    struct path::_Codecvt<path::_Codecvt888,27901
    path::_S_convert(_S_convert896,28167
# define _GLIBCXX_CONV_FROM_UTF8(901,28332
# define _GLIBCXX_CONV_FROM_UTF8(903,28404
#undef _GLIBCXX_CONV_FROM_UTF8933,29218
  class path::iterator942,29371
    using difference_type	945,29408
    using value_type	946,29452
    using reference	947,29482
    using pointer	948,29518
    using iterator_category	949,29552
    iterator(951,29616
    pointer   operator->(957,29823
    iterator  operator++(961,29941
    iterator  operator--(966,30070
    operator==(operator==970,30177
    operator!=(operator!=974,30303
    _M_is_multi(981,30458
    iterator(1014,31352
    iterator(1018,31490
    const path* 		_M_path;1024,31655
    path::_List::const_iterator _M_cur;1025,31682
    bool			_M_at_end;1026,31722
  path::operator=(operator=1031,31800
  path::operator=(operator=1043,32044
  path::assign(assign1047,32150
  path::operator+=(operator+=1051,32253
  path::operator+=(operator+=1058,32358
  path::operator+=(operator+=1065,32462
  path::operator+=(operator+=1072,32594
    path::operator+=(operator+=1080,32761
  path::make_preferred(make_preferred1087,32893
  inline void path::swap(swap1100,33168
  template<typename _CharT,1107,33325
  template<typename _CharT, typename _Traits,1107,33325
    path::_S_str_convert(_S_str_convert1109,33443
  template<typename _CharT,1159,35043
  template<typename _CharT, typename _Traits,1159,35043
    path::string(string1161,35163
  path::string(string1170,35424
  path::wstring(wstring1174,35522
  path::u8string(u8string1179,35635
  path::u8string(u8string1182,35717
  path::u16string(u16string1200,36261
  path::u32string(u32string1203,36343
  template<typename _CharT,1205,36401
  template<typename _CharT, typename _Traits,1205,36401
    path::generic_string(generic_string1207,36526
  path::generic_string(generic_string1247,37552
  path::generic_wstring(generic_wstring1252,37668
  path::generic_u8string(generic_u8string1258,37799
  path::generic_u8string(generic_u8string1262,37899
  path::generic_u16string(generic_u16string1267,37995
  path::generic_u32string(generic_u32string1271,38095
  path::compare(compare1275,38184
  path::compare(compare1279,38311
  path::filename(filename1283,38438
  path::stem(stem1301,38805
  path::extension(extension1310,38991
  path::has_stem(has_stem1319,39195
  path::has_extension(has_extension1326,39329
  path::is_absolute(is_absolute1333,39484
  path::begin(begin1343,39690
  path::end(end1351,39873
  path::iterator::operator++(operator++1359,40050
  path::iterator::operator--(operator--1376,40363
  path::iterator::operator*(operator*1393,40688
  path::iterator::_M_equals(_M_equals1405,40929
  path::_S_compare(_S_compare1421,41481
distance(1431,41706
  advance(1437,41889
    operator()(operator()1450,42259

/usr/include/c++/13/bits/fstream.tcc,234
#define _FSTREAM_TCC 35,1310
namespace std _GLIBCXX_VISIBILITY(43,1449
    operator=(operator=124,4400
	struct __close_sentry257,8745
	  basic_filebuf *__fb;__fb259,8771
	  __close_sentry 260,8795
	  ~__close_sentry 261,8853

/usr/include/c++/13/bits/functexcept.h,75
#define _FUNCTEXCEPT_H 37,1386
namespace std _GLIBCXX_VISIBILITY(42,1477

/usr/include/c++/13/bits/functional_hash.h,838
#define _FUNCTIONAL_HASH_H 31,1281
namespace std _GLIBCXX_VISIBILITY(38,1391
    struct __hash_base51,1673
      typedef _Result     result_type _GLIBCXX17_DEPRECATED;53,1702
      typedef _Arg      argument_type _GLIBCXX17_DEPRECATED;54,1763
    struct hash 102,3117
#define _Cxx_hashtable_define_trivial_hash(115,3459
#undef _Cxx_hashtable_define_trivial_hash199,6160
  struct _Hash_impl201,6203
    hash(204,6245
      hash(210,6446
      __hash_combine(215,6569
  struct _Fnv_hash_impl220,6756
    hash(223,6802
      hash(229,7007
      __hash_combine(234,7130
    struct hash<hash252,7572
      operator()(operator()255,7652
    struct hash<hash264,7862
    struct hash<hash273,8070
      operator()(operator()276,8156
    struct __is_fast_hash 295,8776
    struct __is_fast_hash<__is_fast_hash299,8849

/usr/include/c++/13/bits/gslice.h,618
#define _GSLICE_H 33,1357
namespace std _GLIBCXX_VISIBILITY(37,1405
  class gslice64,2528
    gslice(68,2592
    gslice(80,2950
    gslice(87,3245
    ~gslice(90,3294
    size_t           start(97,3464
    struct _Indexer106,3701
      size_t _M_count;108,3727
      size_t _M_start;109,3750
      valarray<size_t> _M_size;110,3773
      valarray<size_t> _M_stride;111,3805
      valarray<size_t> _M_index;112,3839
      _Indexer(114,3911
      _Indexer(117,4001
      _M_increment_use(121,4095
      _M_decrement_use(125,4162
    _Indexer* _M_index;129,4224
  gslice::operator=(operator=170,5183

/usr/include/c++/13/bits/gslice_array.h,609
#define _GSLICE_ARRAY_H 33,1375
namespace std _GLIBCXX_VISIBILITY(37,1429
    class gslice_array60,2171
      typedef _Tp value_type;63,2212
      gslice_array(69,2428
      _Array<_Tp>    _M_array;124,4982
      const valarray<size_t>& _M_index;125,5013
      gslice_array(129,5089
      gslice_array(133,5199
    gslice_array<_Tp>::operator=(operator=163,5951
    gslice_array<_Tp>::operator=(operator=171,6152
      gslice_array<_Tp>::operator=(operator=180,6398
#undef _DEFINE_VALARRAY_OPERATOR187,6601
#define _DEFINE_VALARRAY_OPERATOR(188,6634
#undef _DEFINE_VALARRAY_OPERATOR217,7736

/usr/include/c++/13/bits/hash_bytes.h,31
#define _HASH_BYTES_H 31,1279

/usr/include/c++/13/bits/hashtable.h,8616
#define _HASHTABLE_H 31,1281
namespace std _GLIBCXX_VISIBILITY(42,1530
    class _Hashtable181,7767
      using __insert_base = __detail::_Insert<_Key, _Value,228,10013
      using __insert_base = __detail::_Insert<_Key, _Value, _Alloc,228,10013
      using __insert_base = __detail::_Insert<_Key, _Value, _Alloc, _ExtractKey,228,10013
					      _Equal,229,10094
					      _Equal, _Hash,229,10094
					      _RangeHash,230,10120
					      _RangeHash, _Unused,230,10120
					      _RehashPolicy,231,10152
	= _Hashtable_enable_default_ctor<_Equal, _Hash,233,10222
      typedef _Key						key_type;236,10293
      typedef _Value						value_type;237,10327
      typedef _Alloc						allocator_type;238,10365
      typedef _Equal						key_equal;239,10407
      typedef typename __value_alloc_traits::pointer		pointer;243,10574
      typedef typename __value_alloc_traits::const_pointer	const_pointer;244,10637
      typedef value_type&					reference;245,10711
      typedef const value_type&					const_reference;246,10752
      using local_iterator = __detail::_Local_iterator<key_type, _Value,252,10934
			_ExtractKey,253,11007
			_ExtractKey, _Hash,253,11007
			_ExtractKey, _Hash, _RangeHash,253,11007
			_ExtractKey, _Hash, _RangeHash, _Unused,253,11007
					     __constant_iterators::value,254,11051
			key_type, _Value,258,11192
			_ExtractKey,259,11213
			_ExtractKey, _Hash,259,11213
			_ExtractKey, _Hash, _RangeHash,259,11213
			_ExtractKey, _Hash, _RangeHash, _Unused,259,11213
			__constant_iterators::value,260,11257
	_Hashtable_base<_Key, _Value,269,11541
	_Hashtable_base<_Key, _Value, _ExtractKey,269,11541
			_Equal,270,11585
			_Equal, _Hash,270,11585
			_Equal, _Hash, _RangeHash,270,11585
			_Equal, _Hash, _RangeHash, _Unused,270,11585
      using __map_base = __detail::_Map_base<_Key, _Value,276,11849
      using __map_base = __detail::_Map_base<_Key, _Value, _Alloc,276,11849
      using __map_base = __detail::_Map_base<_Key, _Value, _Alloc, _ExtractKey,276,11849
					     _Equal,277,11929
					     _Equal, _Hash,277,11929
					     _Equal, _Hash, _RangeHash,277,11929
					     _Equal, _Hash, _RangeHash, _Unused,277,11929
					     _RehashPolicy,278,11975
      using __rehash_base = __detail::_Rehash_base<_Key, _Value,280,12011
      using __rehash_base = __detail::_Rehash_base<_Key, _Value, _Alloc,280,12011
						   _ExtractKey,281,12084
						   _ExtractKey, _Equal,281,12084
						   _Hash,282,12114
						   _Hash, _RangeHash,282,12114
						   _Hash, _RangeHash, _Unused,282,12114
						   _RehashPolicy,283,12151
      using __eq_base = __detail::_Equality<_Key, _Value,285,12186
      using __eq_base = __detail::_Equality<_Key, _Value, _Alloc,285,12186
      using __eq_base = __detail::_Equality<_Key, _Value, _Alloc, _ExtractKey,285,12186
					    _Equal,286,12265
					    _Equal, _Hash,286,12265
					    _Equal, _Hash, _RangeHash,286,12265
					    _Equal, _Hash, _RangeHash, _Unused,286,12265
					    _RehashPolicy,287,12310
      struct _Scoped_node297,12649
	_Scoped_node(300,12740
	  _Scoped_node(305,12911
	~_Scoped_node(311,13103
	__hashtable_alloc* _M_h;316,13276
	__node_ptr _M_node;317,13302
	__conditional_t<__conditional_t322,13380
	__fwd_value_for(324,13471
      struct __hash_code_base_access 331,13682
      { using __hash_code_base::_M_bucket_index;332,13738
      template<typename _Keya,350,14566
      template<typename _Keya, typename _Valuea,350,14566
      template<typename _Keya, typename _Valuea, typename _Alloca,350,14566
	       typename _ExtractKeya,351,14633
	       typename _ExtractKeya, typename _Equala,351,14633
	       typename _Hasha,352,14682
	       typename _Hasha, typename _RangeHasha,352,14682
	       typename _Hasha, typename _RangeHasha, typename _Unuseda,352,14682
	       typename _RehashPolicya,353,14748
	       typename _RehashPolicya, typename _Traitsa,353,14748
      template<typename _Keya,357,14865
      template<typename _Keya, typename _Valuea,357,14865
      template<typename _Keya, typename _Valuea, typename _Alloca,357,14865
	       typename _ExtractKeya,358,14932
	       typename _ExtractKeya, typename _Equala,358,14932
	       typename _Hasha,359,14981
	       typename _Hasha, typename _RangeHasha,359,14981
	       typename _Hasha, typename _RangeHasha, typename _Unuseda,359,14981
	       typename _RehashPolicya,360,15047
      template<typename _Keya,363,15139
      template<typename _Keya, typename _Valuea,363,15139
      template<typename _Keya, typename _Valuea, typename _Alloca,363,15139
	       typename _ExtractKeya,364,15206
	       typename _ExtractKeya, typename _Equala,364,15206
	       typename _Hasha,365,15255
	       typename _Hasha, typename _RangeHasha,365,15255
	       typename _Hasha, typename _RangeHasha, typename _Unuseda,365,15255
	       typename _RehashPolicya,366,15321
	       typename _RehashPolicya, typename _Traitsa,366,15321
      template<typename _Keya,370,15443
      template<typename _Keya, typename _Valuea,370,15443
      template<typename _Keya, typename _Valuea, typename _Alloca,370,15443
	       typename _ExtractKeya,371,15510
	       typename _ExtractKeya, typename _Equala,371,15510
	       typename _Hasha,372,15559
	       typename _Hasha, typename _RangeHasha,372,15559
	       typename _Hasha, typename _RangeHasha, typename _Unuseda,372,15559
	       typename _RehashPolicya,373,15625
	       typename _RehashPolicya, typename _Traitsa,373,15625
      using node_type = _Node_handle<_Key, _Value,382,15917
      __node_base		_M_before_begin;389,16178
      _RehashPolicy		_M_rehash_policy;391,16254
      _M_update_bbegin(402,16731
      _M_update_bbegin(409,16865
      _M_uses_single_bucket(416,16984
      _M_uses_single_bucket(420,17123
      __small_size_threshold(424,17242
      _M_base_alloc(431,17402
      _M_allocate_buckets(434,17463
      _M_deallocate_buckets(446,17724
      _M_deallocate_buckets(455,17937
      _M_begin(464,18224
      template<typename _Ht,473,18511
      _Hashtable(486,18772
      _Hashtable(543,20502
      _Hashtable(549,20669
      _Hashtable(556,20941
	_Hashtable(562,21145
      _Hashtable(571,21452
      operator=(operator=584,21850
      operator=(operator=597,22297
      begin(623,23033
      begin(627,23117
      end(631,23207
      end(635,23286
      cbegin(639,23377
      cend(643,23474
      size(647,23561
      empty(651,23655
      get_allocator(655,23736
      max_size(659,23850
      key_eq(664,23993
      bucket_count(671,24155
      max_bucket_count(675,24242
      bucket_size(679,24328
      bucket(683,24444
      begin(687,24565
      end(694,24720
      begin(698,24848
      end(705,25020
      cbegin(710,25177
      cend(717,25350
      load_factor(721,25476
      __rehash_policy(732,25851
      __rehash_policy(736,25928
      std::pair<std::pair749,26199
      std::pair<std::pair752,26276
#define __cpp_lib_generic_unordered_lookup 756,26398
      template<typename _Kt,758,26450
      template<typename _Kt,764,26630
      template<typename _Kt,770,26822
      template<typename _Kt,776,27010
	pair<pair779,27150
      template<typename _Kt,782,27213
	pair<pair785,27353
      _M_bucket_index(792,27522
      _M_bucket_index(796,27680
      _M_find_node(812,28208
	_M_find_node_tr(823,28512
      pair<pair845,29159
	std::pair<std::pair862,29882
	_M_emplace(867,30003
	_M_emplace(873,30226
      template<typename _Kt,880,30471
      template<typename _Kt, typename _Arg,880,30471
	std::pair<std::pair881,30540
		 __not_<__is_nothrow_invocable<_Hash&, _Kt>>>::value,value887,30738
	  key_type,888,30794
	_S_forward_key(889,30814
      _S_forward_key(893,30907
      _S_forward_key(897,30996
      template<typename _Arg,900,31067
	std::pair<std::pair901,31122
	_M_insert_unique_aux(902,31149
      template<typename _Arg,909,31362
	std::pair<std::pair910,31417
	_M_insert(911,31444
      template<typename _Arg,920,31711
	_M_insert(922,31776
      template<typename _Arg,932,32099
	_M_insert(934,32164
      template<typename _Arg,942,32397
	emplace(960,32849
	emplace_hint(965,32995
      erase(979,33289
      erase(983,33379
      _M_reinsert_node(1002,33899
      _M_reinsert_node_multi(1033,34681
      _M_extract_node(1050,35087
	_M_src_hash_code(1073,35860
      extract(1086,36182
      extract(1095,36410
	_M_merge_unique(1108,36829
	_M_merge_multi(1137,37785
  template<typename, typename, typename> class _Hash_merge_helper 2710,90459

/usr/include/c++/13/bits/hashtable_policy.h,8963
#define _HASHTABLE_POLICY_H 32,1338
namespace std _GLIBCXX_VISIBILITY(42,1785
  struct _Identity85,3277
      operator()(operator()89,3339
  struct _Select1st93,3429
    template<typename _Tp,98,3508
    template<typename _Tp,102,3619
      struct __1st_type<__1st_type107,3771
      operator()(operator()112,3929
	operator()(operator()124,4233
      operator()(operator()132,4425
      operator()(operator()136,4535
	operator()(operator()141,4687
	operator()(operator()146,4854
    struct _NodeBuilder<_NodeBuilder154,5006
      template<typename _Kt,156,5048
      template<typename _Kt, typename _Arg,156,5048
    struct _NodeBuilder<_NodeBuilder167,5355
      template<typename _Kt,169,5396
      template<typename _Kt, typename _Arg,169,5396
    struct _ReuseOrAllocNode182,5822
      _ReuseOrAllocNode(193,6148
      ~_ReuseOrAllocNode(197,6320
	operator()(operator()202,6442
      mutable __node_type* _M_nodes;227,7056
      __hashtable_alloc& _M_h;228,7093
    struct _AllocNode234,7252
      _AllocNode(242,7436
	operator()(operator()247,7548
      __hashtable_alloc& _M_h;251,7666
    struct _Hashtable_traits280,8788
    struct _Hashtable_hash_traits294,9182
      __small_size_threshold(297,9257
  struct _Hash_node_base309,9656
    _Hash_node_base* _M_nxt;311,9685
    _Hash_node_base(313,9715
    _Hash_node_base(315,9762
    struct _Hash_node_value_base324,9964
      typedef _Value value_type;326,10003
      __gnu_cxx::__aligned_buffer<_Value> _M_storage;328,10037
      _M_valptr(332,10143
      _M_valptr(337,10266
      _M_v(342,10389
      _M_v(347,10500
    struct _Hash_node_code_cache355,10666
    struct _Hash_node_code_cache<_Hash_node_code_cache362,10806
    { std::size_t  _M_hash_code;363,10845
    struct _Hash_node_value366,10933
    struct _Hash_node375,11158
      _M_next(380,11275
    struct _Node_iterator_base386,11459
      __node_type* _M_cur;390,11561
      _Node_iterator_base(392,11589
      _Node_iterator_base(393,11639
      _M_incr(397,11728
      operator==(operator==401,11810
      operator!=(operator!=407,12014
    struct _Node_iterator415,12302
				      const value_type*value_type428,12734
      _Node_iterator(436,12929
      operator*(440,13023
      operator->(444,13110
      operator++(448,13211
      operator++(455,13310
    struct _Node_const_iterator465,13568
      typedef _Value					value_type;473,13807
      typedef std::ptrdiff_t				difference_type;474,13844
      typedef std::forward_iterator_tag			iterator_category;475,13893
      typedef const value_type*				pointer;477,13955
      typedef const value_type&				reference;478,13999
      _Node_const_iterator(483,14102
      _Node_const_iterator(486,14186
      operator*(491,14347
      operator->(495,14434
      operator++(499,14541
      operator++(506,14646
  struct _Mod_range_hashing519,14998
    typedef std::size_t first_argument_type;521,15030
    typedef std::size_t second_argument_type;522,15075
    typedef std::size_t result_type;523,15121
    operator()(operator()526,15175
  struct _Default_ranged_hash 536,15629
  struct _Prime_rehash_policy540,15796
    _Prime_rehash_policy(544,15872
    max_load_factor(548,15987
    _M_bkt_for_elements(557,16236
    std::pair<std::pair564,16637
    typedef std::size_t _State;568,16765
    _M_state(571,16809
    _M_reset(575,16871
    _M_reset(579,16933
    float		_M_max_load_factor;584,17049
    mutable std::size_t	_M_next_resize;585,17080
  struct _Mask_range_hashing589,17197
    typedef std::size_t first_argument_type;591,17230
    typedef std::size_t second_argument_type;592,17275
    typedef std::size_t result_type;593,17321
    operator()(operator()596,17375
  struct _Power2_rehash_policy618,18113
    _Power2_rehash_policy(622,18190
    max_load_factor(626,18306
    _M_next_bkt(632,18500
    _M_bkt_for_elements(666,19635
    std::pair<std::pair673,20045
    _M_need_rehash(674,20078
    typedef std::size_t _State;698,20853
    _M_state(701,20897
    _M_reset(705,20968
    _M_reset(709,21030
    float	_M_max_load_factor;714,21155
    std::size_t	_M_next_resize;715,21185
    struct _Insert_base877,27237
      using __hashtable_base = _Hashtable_base<_Key, _Value,880,27282
      using __hashtable_base = _Hashtable_base<_Key, _Value, _ExtractKey,880,27282
					       _Equal,881,27356
					       _Equal, _Hash,881,27356
					       _Equal, _Hash, _RangeHash,881,27356
					       _Unused,882,27395
      using __hashtable = _Hashtable<_Key, _Value,884,27427
      using __hashtable = _Hashtable<_Key, _Value, _Alloc,884,27427
      using __hashtable = _Hashtable<_Key, _Value, _Alloc, _ExtractKey,884,27427
      using __hashtable = _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,884,27427
				     _Hash,885,27507
				     _Hash, _RangeHash,885,27507
				     _Unused,886,27535
				     _Unused, _RehashPolicy,886,27535
	__alloc_rebind<_Alloc, _Hash_node<_Hash_node892,27766
      _M_conjure_hashtable(903,28190
      template<typename _InputIterator,906,28273
      template<typename _InputIterator,911,28447
      using iterator = _Node_iterator<_Value, __constant_iterators::value,917,28634
						  __constant_iterators::value,921,28801
					     std::pair<std::pair925,28937
      insert(929,29017
      insert(937,29220
      template<typename _KType,944,29440
	std::pair<std::pair945,29491
	try_emplace(946,29518
      insert(967,30181
	insert(972,30323
    struct _Hash_code_base1279,41215
      friend struct _Local_iterator_base<_Key, _Value,1286,41444
      friend struct _Local_iterator_base<_Key, _Value, _ExtractKey,1286,41444
					 _Hash,1287,41512
					 _Hash, _RangeHash,1287,41512
					 _Hash, _RangeHash, _Unused,1287,41512
      typedef _Hash					hasher;1290,41567
      hash_function(1293,41613
      typedef std::size_t 				__hash_code;1297,41685
      _Hash_code_base(1303,41875
      _M_hash_code(1306,41962
	_M_hash_code_tr(1315,42217
      _M_hash_code(1323,42438
      _M_hash_code(1327,42584
      _M_bucket_index(1331,42706
      _M_bucket_index(1335,42844
      _M_bucket_index(1346,43226
      _M_store_code(1353,43495
      _M_copy_code(1357,43587
      _M_store_code(1362,43707
      _M_copy_code(1366,43830
      _M_swap(1371,44001
      _M_hash(1375,44126
      operator=(operator=1492,48071
    struct _Local_iterator1536,49172
      using __base_type = _Local_iterator_base<_Key, _Value,1541,49322
      using __base_type = _Local_iterator_base<_Key, _Value, _ExtractKey,1541,49322
					   _Hash,1542,49396
					   _Hash, _RangeHash,1542,49396
					   _Hash, _RangeHash, _Unused,1542,49396
				      const value_type*value_type1548,49619
      _Local_iterator(1556,49894
      operator*(1563,50122
      operator->(1567,50200
      operator++(1571,50293
      operator++(1578,50384
    struct _Local_const_iterator1590,50691
      using __base_type = _Local_iterator_base<_Key, _Value,1595,50847
      using __base_type = _Local_iterator_base<_Key, _Value, _ExtractKey,1595,50847
					   _Hash,1596,50921
					   _Hash, _RangeHash,1596,50921
					   _Hash, _RangeHash, _Unused,1596,50921
      typedef _Value					value_type;1600,51051
      typedef const value_type*				pointer;1601,51088
      typedef const value_type&				reference;1602,51132
      typedef std::ptrdiff_t				difference_type;1603,51178
      typedef std::forward_iterator_tag			iterator_category;1604,51227
      _Local_const_iterator(1608,51331
      _Local_const_iterator(1614,51547
      operator*(1622,51765
      operator->(1626,51843
      operator++(1630,51942
      operator++(1637,52039
    struct _Hashtable_base1658,52582
      typedef _Key					key_type;1664,52798
      typedef _Value					value_type;1665,52831
      typedef _Equal					key_equal;1666,52868
      typedef std::size_t				size_type;1667,52904
      typedef std::ptrdiff_t				difference_type;1668,52944
      using __hash_code_base = _Hash_code_base<_Key, _Value,1673,53099
      using __hash_code_base = _Hash_code_base<_Key, _Value, _ExtractKey,1673,53099
					       _Hash,1674,53173
					       _Hash, _RangeHash,1674,53173
					       _Hash, _RangeHash, _Unused,1674,53173
      _S_equals(1683,53406
      _S_node_equals(1687,53514
      _S_equals(1692,53658
      _S_node_equals(1696,53792
      _Hashtable_base(1703,54015
      _M_key_equals(1708,54150
	_M_key_equals_tr(1720,54526
      _M_equals(1732,54878
	_M_equals_tr(1738,55096
      _M_node_equals(1744,55299
      _M_swap(1753,55573
      _M_eq(1760,55737
    struct _Hashtable_alloc 1912,60687
      template<typename _Val,1919,60902
	_Hashtable_alloc(1945,61963
      _M_node_allocator(1950,62073
      _M_node_allocator(1954,62176
      typedef typename __node_alloc_traits::pointer 2019,64003
      typedef typename __buckets_alloc_traits::pointer 2056,65047

/usr/include/c++/13/bits/indirect_array.h,662
#define _INDIRECT_ARRAY_H 33,1381
namespace std _GLIBCXX_VISIBILITY(37,1437
    class indirect_array62,2298
      typedef _Tp value_type;65,2341
      indirect_array(71,2557
      indirect_array(128,5201
      const size_t	 _M_sz;133,5334
      const _Array<size_t> _M_index;134,5361
      const _Array<_Tp>	 _M_array;135,5398
      indirect_array(138,5459
    indirect_array<_Tp>::operator=(operator=163,6142
    indirect_array<_Tp>::operator=(operator=168,6303
      indirect_array<_Tp>::operator=(operator=174,6514
#undef _DEFINE_VALARRAY_OPERATOR178,6676
#define _DEFINE_VALARRAY_OPERATOR(179,6709
#undef _DEFINE_VALARRAY_OPERATOR206,7744

/usr/include/c++/13/bits/invoke.h,78
#define _GLIBCXX_INVOKE_H 31,1279
namespace std _GLIBCXX_VISIBILITY(42,1459

/usr/include/c++/13/bits/ios_base.h,3676
#define _IOS_BASE_H 35,1312
namespace std _GLIBCXX_VISIBILITY(49,1538
  enum _Ios_Fmtflags 57,1899
      _S_boolalpha 59,1928
      _S_dec 60,1959
      _S_fixed 61,1985
      _S_hex 62,2013
      _S_internal 63,2039
      _S_left 64,2069
      _S_oct 65,2096
      _S_right 66,2122
      _S_scientific 67,2150
      _S_showbase 68,2182
      _S_showpoint 69,2212
      _S_showpos 70,2244
      _S_skipws 71,2274
      _S_unitbuf 72,2303
      _S_uppercase 73,2333
      _S_adjustfield 74,2365
      _S_basefield 75,2423
      _S_floatfield 76,2471
      _S_ios_fmtflags_end 77,2520
      _S_ios_fmtflags_max 78,2558
      _S_ios_fmtflags_min 79,2599
  enum _Ios_Openmode 111,3618
      _S_app 113,3647
      _S_ate 114,3673
      _S_bin 115,3699
      _S_in 116,3725
      _S_out 117,3750
      _S_trunc 118,3776
      _S_noreplace 119,3804
      _S_ios_openmode_end 120,3835
      _S_ios_openmode_max 121,3873
      _S_ios_openmode_min 122,3914
  enum _Ios_Iostate154,4933
      _S_goodbit 156,4960
      _S_badbit 157,4984
      _S_eofbit 158,5013
      _S_failbit	159,5042
      _S_ios_iostate_end 160,5071
      _S_ios_iostate_max 161,5108
      _S_ios_iostate_min 162,5148
  enum _Ios_Seekdir 194,6143
      _S_beg 196,6171
      _S_cur 197,6189
      _S_end 198,6229
      _S_ios_seekdir_end 199,6269
  enum class io_errc 204,6362
  enum class io_errc { stream 204,6362
  class ios_base233,7287
    struct system_error 238,7422
      struct error_code241,7534
	error_code(243,7566
	int		_M_value;245,7599
	const void*	_M_cat;246,7615
      } _M_code;247,7636
    class failure 281,8291
      failure(302,8858
      failure(307,8966
      error_code code(312,9138
      string _M_msg;316,9223
    typedef _Ios_Fmtflags fmtflags;346,9897
    typedef _Ios_Iostate iostate;421,12858
    typedef _Ios_Openmode openmode;452,13891
#define __cpp_lib_ios_noreplace 477,14787
    typedef _Ios_Seekdir seekdir;492,15282
      _GLIBCXX_DEPRECATED_SUGGEST(506,15737
      _GLIBCXX_DEPRECATED_SUGGEST(508,15814
      _GLIBCXX_DEPRECATED_SUGGEST(510,15891
      _GLIBCXX_DEPRECATED_SUGGEST(513,15980
      _GLIBCXX_DEPRECATED_SUGGEST(515,16070
    enum event525,16389
      erase_event,527,16410
      imbue_event,528,16429
      copyfmt_event529,16448
    typedef void (*event_callback)event_callback542,16921
    streamsize		_M_precision;558,17551
    streamsize		_M_width;559,17581
    fmtflags		_M_flags;560,17607
    iostate		_M_exception;561,17631
    iostate		_M_streambuf_state;562,17658
    struct _Callback_list566,17767
      _Callback_list*		_M_next;569,17821
      ios_base::event_callback	_M_fn;570,17853
      int			_M_index;571,17891
      _Atomic_word		_M_refcount;572,17913
      _Callback_list(574,17974
      _M_add_reference(579,18154
      _M_remove_reference(583,18273
     _Callback_list*	_M_callbacks;596,18676
    struct _Words605,18864
      void*	_M_pword;607,18888
      long	_M_iword;608,18910
      _Words(609,18931
    _Words		_M_word_zero;613,19027
    enum { _S_local_word_size 617,19153
    _Words		_M_local_word[_M_local_word618,19190
    int			_M_word_size;621,19264
    _Words*		_M_word;622,19288
    locale		_M_ios_locale;628,19416
    class Init639,19699
      static _Atomic_word	_S_refcount;652,19920
      static bool		_S_synced_with_stdio;653,19959
    flags(662,20188
    flags(673,20491
    setf(689,20905
    setf(706,21402
    unsetf(721,21751
    precision(732,22042
    precision(741,22257
    width(755,22606
    width(764,22805
    getloc(806,24168
    _M_getloc(817,24429
    iword(852,25934
    pword(873,26759

/usr/include/c++/13/bits/istream.tcc,893
#define _ISTREAM_TCC 35,1304
namespace std _GLIBCXX_VISIBILITY(41,1388
    operator>>(129,3691
    operator>>(179,5050
    operator>>(229,6404
    operator>>(975,26296
      typedef basic_istream<_CharT, _Traits>		__istream_type;977,26368
      typedef typename __istream_type::int_type 978,26430
      typedef basic_istream<_CharT, _Traits>		__istream_type;1010,27282
      typedef basic_streambuf<_CharT, _Traits>          __streambuf_type;1011,27344
      typedef typename _Traits::int_type	1012,27418
      typedef _CharT					char_type;1013,27470
      typedef ctype<_CharT>				__ctype_type;1014,27506
      typedef basic_istream<_CharT, _Traits>		__istream_type;1072,29084
      typedef basic_streambuf<_CharT, _Traits>          __streambuf_type;1073,29146
      typedef typename __istream_type::int_type	1074,29220
      typedef ctype<_CharT>				__ctype_type;1075,29281

/usr/include/c++/13/bits/iterator_concepts.h,4985
#define _ITERATOR_CONCEPTS_H 31,1301
namespace std _GLIBCXX_VISIBILITY(40,1506
  struct default_sentinel_t 58,2292
  namespace ranges98,3294
    namespace __cust_imove100,3317
      struct _IMove109,3556
	  struct __result113,3623
	  struct __result<__result118,3740
	  struct __result<__result124,3935
	  _S_noexcept(129,4075
	  operator()(operator()145,4507
    inline namespace __cust158,4855
      inline constexpr __cust_imove::_IMove iter_move{iter_move160,4889
  template<typename> struct incrementable_traits 170,5225
    struct incrementable_traits<incrementable_traits173,5331
    struct incrementable_traits<incrementable_traits177,5441
    struct incrementable_traits<incrementable_traits181,5604
    struct incrementable_traits<incrementable_traits188,5880
    struct incrementable_traits<incrementable_traits197,6159
    struct incrementable_traits<incrementable_traits201,6258
  namespace __detail205,6360
    template<typename _Iter,213,6643
      struct __iter_traits_impl214,6686
    template<typename _Iter,217,6767
    template<typename _Iter,223,6947
      using __iter_traits = typename __iter_traits_impl<_Iter, _Tp>::type;type224,6998
	__iter_traits<_Tp, incrementable_traits<_Tp>>::difference_type;difference_type228,7138
  namespace __detail234,7332
    template<typename> struct __cond_value_type 236,7357
      struct __cond_value_type<__cond_value_type239,7464
  template<typename> struct indirectly_readable_traits 252,7798
    struct indirectly_readable_traits<indirectly_readable_traits255,7884
    struct indirectly_readable_traits<indirectly_readable_traits260,8031
    struct indirectly_readable_traits<indirectly_readable_traits264,8169
    struct indirectly_readable_traits<indirectly_readable_traits269,8320
    struct indirectly_readable_traits<indirectly_readable_traits274,8485
    struct indirectly_readable_traits<indirectly_readable_traits284,8915
    struct indirectly_readable_traits<indirectly_readable_traits292,9244
  namespace __detail295,9297
	__iter_traits<_Tp, indirectly_readable_traits<_Tp>>::value_type;value_type299,9387
  namespace __detail305,9578
	} && copyable<copyable315,9904
	&& requires(338,10818
	struct __ptr391,12400
	struct __ptr<__ptr395,12518
	struct __cat413,13172
	struct __cat<__cat418,13315
	struct __cat<__cat424,13522
	struct __cat<__cat430,13719
	struct __cat<__cat436,13915
	struct __ptr440,14009
	struct __ptr<__ptr444,14127
	struct __ptr<__ptr450,14328
	struct __ref454,14447
	struct __ref<__ref458,14586
	struct __diff478,15276
	struct __diff<__diff484,15427
  namespace __detail497,15774
      struct __iter_concept_impl<__iter_concept_impl505,16046
      struct __iter_concept_impl<__iter_concept_impl512,16408
      struct __iter_concept_impl<__iter_concept_impl520,16815
      struct __iter_concept_impl525,16989
  namespace ranges::__detail572,18614
	|| same_as<_Tp, __max_diff_type> || same_as<same_as607,19432
  namespace __detail 616,19689
  namespace __detail { using ranges::__detail::__is_signed_integer_like;616,19689
  namespace __detail774,26396
    template<typename _Iter,776,26421
      struct __projected777,26466
	struct __type779,26499
    template<weakly_incrementable _Iter,786,26673
	struct __type789,26777
namespace ranges833,28591
  namespace __cust_iswap835,28610
    template<typename _It1,837,28639
    template<typename _Tp,840,28726
    template<typename _Xp,848,29022
      __iter_exchange_move(850,29097
    struct _IterSwap859,29359
    private:private861,29386
	_S_noexcept(864,29465
    public:public880,29982
	requires __adl_iswap<__adl_iswap882,30037
	operator()(operator()889,30348
  inline namespace __cust904,30819
    inline constexpr __cust_iswap::_IterSwap iter_swap{iter_swap906,30849
  template<typename _I1,912,31019
  template<typename _I1, typename _I2 912,31019
  template<typename _I1,924,31411
  template<typename _I1, typename _I2,924,31411
  template<typename _I1, typename _I2, typename _Rel,924,31411
  template<typename _I1, typename _I2, typename _Rel, typename _P1 924,31411
    concept permutable 932,31719
  template<typename _I1,937,31912
  template<typename _I1, typename _I2,937,31912
  template<typename _I1, typename _I2, typename _Out,937,31912
	   typename _Rel 938,31966
  template<typename _Iter,947,32370
  template<typename _Iter, typename _Rel 947,32370
  struct unreachable_sentinel_t952,32568
      operator==(operator==956,32671
  inline constexpr unreachable_sentinel_t unreachable_sentinel{unreachable_sentinel960,32763
  namespace ranges::__cust_access963,32882
    using std::__detail::__class_or_enum;965,32920
	operator()(operator()971,33051
    } inline constexpr __decay_copy{__decay_copy974,33171
      concept __member_begin 977,33238
      concept __adl_begin 987,33528
      __begin(998,33919
  namespace __detail1009,34143
      using __range_iter_t1013,34274

/usr/include/c++/13/bits/list.tcc,253
#define _LIST_TCC 57,2371
namespace std _GLIBCXX_VISIBILITY(59,2392
      typedef _List_node<_Tp>  _Node;69,2626
    operator=(operator=268,7715
# define _GLIBCXX20_ONLY(324,9299
# define _GLIBCXX20_ONLY(326,9345
#undef _GLIBCXX20_ONLY608,16506

/usr/include/c++/13/bits/locale_classes.h,2270
#define _LOCALE_CLASSES_H 35,1304
namespace std _GLIBCXX_VISIBILITY(43,1434
  class locale62,2142
    typedef int	category;67,2225
      has_facet(79,2432
    locale(181,5784
    operator!=(operator!=269,8547
    template<typename _Char,288,9268
    template<typename _Char, typename _Traits,288,9268
    _Impl*		_M_impl;315,10080
    static _Impl*       _S_classic;318,10134
    static _Impl*	_S_global;321,10200
    static const char* const* const _S_categories;327,10423
    enum { _S_categories_size 339,11069
    static __gthread_once_t _S_once;342,11151
    static const id* const _S_twinned_facets[_S_twinned_facets361,11498
  class locale::facet377,11925
    mutable _Atomic_word		_M_refcount;383,12020
    static __c_locale                   _S_c_locale;386,12137
    static const char			_S_c_name[_S_c_name389,12249
    static __gthread_once_t		_S_once;392,12306
    facet(409,12751
    _M_add_reference(452,13667
    _M_remove_reference(456,13773
  class locale::id489,14752
    mutable size_t		_M_index;510,15326
    static _Atomic_word		_S_refcount;513,15389
    id(524,15661
  class locale::_Impl532,15759
    _Atomic_word			_M_refcount;556,16257
    const facet**			_M_facets;557,16289
    size_t				_M_facets_size;558,16320
    const facet**			_M_caches;559,16350
    char**				_M_names;560,16381
    static const locale::id* const	_S_id_ctype[_S_id_ctype561,16405
    static const locale::id* const	_S_id_numeric[_S_id_numeric562,16455
    static const locale::id* const	_S_id_collate[_S_id_collate563,16507
    static const locale::id* const	_S_id_time[_S_id_time564,16559
    static const locale::id* const	_S_id_monetary[_S_id_monetary565,16608
    static const locale::id* const	_S_id_messages[_S_id_messages566,16661
    static const locale::id* const* const _S_facet_categories[_S_facet_categories567,16714
    _M_add_reference(570,16789
    _M_remove_reference(574,16889
    _M_check_same_name(600,17490
      _M_init_facet(624,18104
      _M_init_facet_unchecked(629,18233
      typedef _CharT			char_type;666,19235
      typedef basic_string<_CharT>	string_type;667,19269
      typedef _CharT               char_type;839,24628
      typedef basic_string<_CharT> string_type;840,24674

/usr/include/c++/13/bits/locale_classes.tcc,245
#define _LOCALE_CLASSES_TCC 35,1308
namespace std _GLIBCXX_VISIBILITY(39,1366
    operator()(operator()81,2255
      typedef std::collate<_CharT> __collate_type;84,2392
#define _GLIBCXX_STD_FACET(99,3026
#undef _GLIBCXX_STD_FACET137,4546

/usr/include/c++/13/bits/locale_conv.h,709
#define _LOCALE_CONV_H 31,1275
namespace std _GLIBCXX_VISIBILITY(42,1471
  namespace __detail223,7742
      struct _Scoped_ptr226,7794
	_Scoped_ptr(230,7870
	_Scoped_ptr(234,7927
	~_Scoped_ptr(241,8043
	_Tp* operator->(247,8215
	_Tp& operator*(249,8269
	_Tp* _M_ptr;252,8338
      typedef basic_string<char, char_traits<char>, _Byte_alloc>   byte_string;265,8612
      typedef basic_string<_Elem, char_traits<_Elem>, _Wide_alloc> wide_string;266,8692
      typedef typename _Codecvt::state_type 267,8772
      typedef typename wide_string::traits_type::int_type	268,8834
      typedef basic_streambuf<_Elem, _Tr> _Wide_streambuf;411,13137
      typedef typename _Codecvt::state_type 414,13209

/usr/include/c++/13/bits/locale_facets.h,6119
#define _LOCALE_FACETS_H 35,1302
namespace std _GLIBCXX_VISIBILITY(50,1674
#define  _GLIBCXX_NUM_FACETS 55,1811
#define  _GLIBCXX_NUM_CXX11_FACETS 58,1889
# define _GLIBCXX_NUM_UNICODE_FACETS 62,2028
# define _GLIBCXX_NUM_UNICODE_FACETS 64,2073
#define _GLIBCXX_NUM_LBDL_ALT128_FACETS 69,2244
    struct __pad98,3151
    class __ctype_abstract_base 153,4897
      typedef _CharT char_type;158,5050
      is(172,5493
      is(189,6120
      scan_is(205,6761
      scan_not(221,7417
      toupper(235,7968
      toupper(250,8489
      tolower(264,9019
      tolower(279,9548
      widen(296,10134
      widen(315,10783
      narrow(334,11501
      narrow(356,12428
      __ctype_abstract_base(362,12620
      ~__ctype_abstract_base(365,12701
    class ctype 615,22157
      typedef _CharT			char_type;619,22246
      typedef typename __ctype_abstract_base<_CharT>::mask mask;620,22280
      static locale::id			id;623,22390
      ctype(626,22436
    class ctype<ctype689,24305
      typedef char		char_type;694,24454
      __c_locale		_M_c_locale_ctype;698,24524
      bool			_M_del;699,24561
      __to_type			_M_toupper;700,24582
      __to_type			_M_tolower;701,24612
      const mask*		_M_table;702,24642
      mutable char		_M_widen_ok;703,24671
      mutable char		_M_widen[_M_widen704,24704
      mutable char		_M_narrow[_M_narrow705,24770
      mutable char		_M_narrow_ok;706,24837
      static locale::id        id;711,24983
      toupper(810,28668
      toupper(827,29283
      tolower(843,29898
      tolower(860,30509
      widen(880,31253
      widen(907,32174
      narrow(939,33239
      narrow(972,34531
      table(991,35174
      do_widen(1092,38671
      do_widen(1115,39513
      do_narrow(1142,40492
      do_narrow(1168,41622
    class ctype<ctype1194,42411
      typedef wchar_t		char_type;1199,42564
      typedef wctype_t		__wmask_type;1200,42598
      __c_locale		_M_c_locale_ctype;1203,42652
      bool                      _M_narrow_ok;1206,42740
      char                      _M_narrow[_M_narrow1207,42786
      wint_t                    _M_widen[_M_widen1208,42834
      mask                      _M_bit[_M_bit1211,42955
      __wmask_type              _M_wmask[_M_wmask1212,42999
      static locale::id		id;1217,43123
    class ctype_byname 1486,53000
      typedef typename ctype<_CharT>::mask  mask;1489,53064
      ctype_byname(1496,53229
      ~ctype_byname(1502,53369
    class ctype_byname<ctype_byname1507,53468
    class ctype_byname<ctype_byname1525,53817
namespace std _GLIBCXX_VISIBILITY(1548,54275
  class __num_base1553,54389
	_S_ominus,1560,54550
	_S_oplus,1561,54562
	_S_ox,1562,54573
	_S_oX,1563,54581
	_S_odigits,1564,54589
	_S_odigits_end 1565,54602
	_S_oudigits 1566,54637
	_S_oudigits_end 1567,54668
	_S_oe 1568,54705
	_S_oE 1569,54764
	_S_oend 1570,54823
    static const char* _S_atoms_out;1578,55148
    static const char* _S_atoms_in;1582,55287
      _S_iminus,1586,55339
      _S_iplus,1587,55356
      _S_ix,1588,55372
      _S_iX,1589,55385
      _S_izero,1590,55398
      _S_ie 1591,55414
      _S_iE 1592,55443
      _S_iend 1593,55472
    struct __numpunct_cache 1603,55714
      const char*			_M_grouping;1605,55771
      size_t                            _M_grouping_size;1606,55804
      bool				_M_use_grouping;1607,55862
      const _CharT*			_M_truename;1608,55893
      size_t                            _M_truename_size;1609,55928
      const _CharT*			_M_falsename;1610,55986
      size_t                            _M_falsename_size;1611,56022
      _CharT				_M_decimal_point;1612,56081
      _CharT				_M_thousands_sep;1613,56115
      _CharT				_M_atoms_out[_M_atoms_out1619,56414
      _CharT				_M_atoms_in[_M_atoms_in1625,56718
      bool				_M_allocated;1627,56769
      __numpunct_cache(1629,56798
    class numpunct 1678,58243
      typedef _CharT			char_type;1684,58357
      typedef basic_string<_CharT>	string_type;1685,58391
      typedef __numpunct_cache<_CharT>  __cache_type;1687,58451
      __cache_type*			_M_data;1690,58521
      static locale::id			id;1694,58594
      numpunct(1702,58771
      numpunct(1716,59217
      numpunct(1730,59663
      decimal_point(1744,60125
      thousands_sep(1757,60544
      grouping(1788,61914
      truename(1801,62343
      falsename(1814,62776
      do_decimal_point(1831,63226
      do_thousands_sep(1843,63635
      do_grouping(1856,64090
      do_truename(1869,64533
      do_falsename(1882,64979
    class numpunct_byname 1911,65604
      typedef _CharT			char_type;1914,65674
      typedef basic_string<_CharT>	string_type;1915,65708
      numpunct_byname(1918,65772
      numpunct_byname(1933,66161
      ~numpunct_byname(1939,66307
    class num_get 1960,66980
      typedef _CharT			char_type;1966,67093
      typedef _InIter			iter_type;1967,67127
      static locale::id			id;1971,67204
      num_get(1981,67459
      get(2007,68547
      get(2044,70186
      get(2049,70370
      get(2054,70564
      get(2059,70758
      get(2065,70982
      get(2070,71171
      get(2104,72541
      get(2109,72726
      get(2114,72912
      get(2147,74276
      virtual ~num_get(2153,74482
      typename __gnu_cxx::__enable_if<__gnu_cxx::__enable_if2167,74860
	_M_find(2168,74940
      typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value,__value2189,75510
	_M_find(2191,75601
      do_get(2223,76556
      do_get(2228,76758
      do_get(2233,76970
      do_get(2238,77180
      do_get(2244,77421
      do_get(2249,77628
    class num_put 2318,80309
      typedef _CharT		char_type;2324,80422
      typedef _OutIter		iter_type;2325,80455
      static locale::id		id;2329,80532
      num_put(2339,80786
      put(2357,81450
      put(2399,83430
      put(2403,83577
      put(2409,83766
      put(2413,83918
      put(2462,86125
      put(2466,86274
      put(2487,87009
      ~num_put(2518,87981
      do_put(2538,88658
      do_put(2542,88817
      do_put(2548,89021
      do_put(2553,89191

/usr/include/c++/13/bits/locale_facets.tcc,1071
#define _LOCALE_FACETS_TCC 31,1267
namespace std _GLIBCXX_VISIBILITY(35,1324
    struct __use_cache42,1549
      operator(45,1598
      typedef char_traits<_CharT>			__traits_type;152,4739
      typedef __numpunct_cache<_CharT>                  __cache_type;153,4790
        typedef char_traits<_CharT>			    __traits_type;378,10513
	typedef typename __add_unsigned<__add_unsigned380,10604
	typedef __numpunct_cache<_CharT>                    __cache_type;381,10674
	typedef __gnu_cxx::__numeric_traits<_ValueT> __num_traits;466,12848
	  typedef __numpunct_cache<_CharT>  __cache_type;620,16696
      typedef ios_base::fmtflags        fmtflags;757,20509
      typedef __gnu_cxx::__conditional_type<(sizeof(761,20669
	typedef typename __add_unsigned<__add_unsigned873,23819
	typedef __numpunct_cache<_CharT>	             __cache_type;874,23886
	typedef __numpunct_cache<_CharT>                __cache_type;996,28137
	  typedef __numpunct_cache<_CharT>              __cache_type;1134,32738
      typedef __gnu_cxx::__conditional_type<(sizeof(1205,35019

/usr/include/c++/13/bits/locale_facets_nonio.h,9144
#define _LOCALE_FACETS_NONIO_H 35,1314
namespace std _GLIBCXX_VISIBILITY(41,1410
  class time_base52,1673
    enum dateorder 55,1705
    enum dateorder { no_order,55,1705
    enum dateorder { no_order, dmy,55,1705
    enum dateorder { no_order, dmy, mdy,55,1705
    enum dateorder { no_order, dmy, mdy, ymd,55,1705
    enum dateorder { no_order, dmy, mdy, ymd, ydm 55,1705
    struct __timepunct_cache 59,1792
      static const _CharT*		_S_timezones[_S_timezones62,1904
      const _CharT*			_M_date_format;64,1951
      const _CharT*			_M_date_era_format;65,1989
      const _CharT*			_M_time_format;66,2031
      const _CharT*			_M_time_era_format;67,2069
      const _CharT*			_M_date_time_format;68,2111
      const _CharT*			_M_date_time_era_format;69,2154
      const _CharT*			_M_am;70,2201
      const _CharT*			_M_pm;71,2230
      const _CharT*			_M_am_pm_format;72,2259
      const _CharT*			_M_day1;75,2347
      const _CharT*			_M_day2;76,2378
      const _CharT*			_M_day3;77,2409
      const _CharT*			_M_day4;78,2440
      const _CharT*			_M_day5;79,2471
      const _CharT*			_M_day6;80,2502
      const _CharT*			_M_day7;81,2533
      const _CharT*			_M_aday1;84,2622
      const _CharT*			_M_aday2;85,2654
      const _CharT*			_M_aday3;86,2686
      const _CharT*			_M_aday4;87,2718
      const _CharT*			_M_aday5;88,2750
      const _CharT*			_M_aday6;89,2782
      const _CharT*			_M_aday7;90,2814
      const _CharT*			_M_month01;93,2898
      const _CharT*			_M_month02;94,2932
      const _CharT*			_M_month03;95,2966
      const _CharT*			_M_month04;96,3000
      const _CharT*			_M_month05;97,3034
      const _CharT*			_M_month06;98,3068
      const _CharT*			_M_month07;99,3102
      const _CharT*			_M_month08;100,3136
      const _CharT*			_M_month09;101,3170
      const _CharT*			_M_month10;102,3204
      const _CharT*			_M_month11;103,3238
      const _CharT*			_M_month12;104,3272
      const _CharT*			_M_amonth01;107,3366
      const _CharT*			_M_amonth02;108,3401
      const _CharT*			_M_amonth03;109,3436
      const _CharT*			_M_amonth04;110,3471
      const _CharT*			_M_amonth05;111,3506
      const _CharT*			_M_amonth06;112,3541
      const _CharT*			_M_amonth07;113,3576
      const _CharT*			_M_amonth08;114,3611
      const _CharT*			_M_amonth09;115,3646
      const _CharT*			_M_amonth10;116,3681
      const _CharT*			_M_amonth11;117,3716
      const _CharT*			_M_amonth12;118,3751
      bool				_M_allocated;120,3787
      __timepunct_cache(122,3816
      ~__timepunct_cache(139,4714
      __timepunct_cache(146,4846
    class __timepunct 174,5393
      typedef _CharT			__char_type;178,5472
      typedef __timepunct_cache<_CharT>	__cache_type;179,5508
      __cache_type*			_M_data;182,5578
      __c_locale			_M_c_locale_timepunct;183,5609
      const char*			_M_name_timepunct;184,5651
      static locale::id			id;188,5732
      _M_date_formats(216,6556
      _M_time_formats(224,6746
      _M_date_time_formats(232,6936
      _M_am_pm_format(241,7164
      _M_am_pm_format(246,7282
      _M_am_pm(252,7414
      _M_days(259,7544
      _M_days_abbreviated(271,7832
      _M_months(283,8139
      _M_months_abbreviated(300,8648
namespace std _GLIBCXX_VISIBILITY(354,10021
  struct __time_get_state358,10100
    unsigned int _M_have_I 364,10196
    unsigned int _M_have_wday 365,10228
    unsigned int _M_have_yday 366,10263
    unsigned int _M_have_mon 367,10298
    unsigned int _M_have_mday 368,10332
    unsigned int _M_have_uweek 369,10367
    unsigned int _M_have_wweek 370,10403
    unsigned int _M_have_century 371,10439
    unsigned int _M_is_pm 372,10477
    unsigned int _M_want_century 373,10508
    unsigned int _M_want_xday 374,10546
    unsigned int _M_pad1 375,10581
    unsigned int _M_week_no 376,10611
    unsigned int _M_pad2 377,10644
    int _M_century;378,10675
    int _M_pad3;379,10695
    class time_get 398,11334
      typedef _CharT			char_type;404,11466
      typedef _InIter			iter_type;405,11500
      static locale::id			id;409,11577
      time_get(419,11832
      date_order(436,12471
      get_time(460,13506
      get_date(485,14660
      get_weekday(513,15930
      get_monthname(542,17203
      get_year(568,18352
      iter_type get(589,19196
      ~time_get(623,20613
    class time_get_byname 798,27571
      typedef _CharT			char_type;802,27666
      typedef _InIter			iter_type;803,27700
      time_get_byname(806,27751
      time_get_byname(811,27894
      ~time_get_byname(817,28040
    class time_put 835,28657
      typedef _CharT			char_type;841,28771
      typedef _OutIter			iter_type;842,28805
      static locale::id			id;846,28883
      time_put(856,29138
      put(895,30655
      ~time_put(902,30895
    class time_put_byname 931,31943
      typedef _CharT			char_type;935,32039
      typedef _OutIter			iter_type;936,32073
      time_put_byname(939,32125
      time_put_byname(945,32275
      ~time_put_byname(951,32421
  class money_base966,32944
    enum part 969,32977
    enum part { none,969,32977
    enum part { none, space,969,32977
    enum part { none, space, symbol,969,32977
    enum part { none, space, symbol, sign,969,32977
    enum part { none, space, symbol, sign, value 969,32977
    struct pattern 970,33029
    struct pattern { char field[field970,33029
    static const pattern _S_default_pattern;972,33069
      _S_minus,976,33130
      _S_zero,977,33146
      _S_end 978,33161
    static const char* _S_atoms;983,33292
    struct __moneypunct_cache 992,33598
      const char*			_M_grouping;994,33657
      size_t                            _M_grouping_size;995,33690
      bool				_M_use_grouping;996,33748
      _CharT				_M_decimal_point;997,33779
      _CharT				_M_thousands_sep;998,33813
      const _CharT*			_M_curr_symbol;999,33847
      size_t                            _M_curr_symbol_size;1000,33885
      const _CharT*			_M_positive_sign;1001,33946
      size_t                            _M_positive_sign_size;1002,33986
      const _CharT*			_M_negative_sign;1003,34049
      size_t                            _M_negative_sign_size;1004,34089
      int				_M_frac_digits;1005,34152
      money_base::pattern		_M_pos_format;1006,34181
      money_base::pattern	        _M_neg_format;1007,34223
      _CharT				_M_atoms[_M_atoms1012,34513
      bool				_M_allocated;1014,34560
      __moneypunct_cache(1016,34589
    class moneypunct 1062,35876
      typedef _CharT			char_type;1068,36011
      typedef basic_string<_CharT>	string_type;1069,36045
      typedef __moneypunct_cache<_CharT,_CharT1071,36105
      typedef __moneypunct_cache<_CharT, _Intl>     __cache_type;1071,36105
      __cache_type*			_M_data;1074,36185
      static locale::id			id;1081,36391
      moneypunct(1091,36646
      moneypunct(1104,37012
      moneypunct(1119,37498
      decimal_point(1133,37988
      thousands_sep(1146,38409
      grouping(1176,39762
      curr_symbol(1189,40165
      positive_sign(1206,40806
      negative_sign(1223,41451
      frac_digits(1239,42027
      pos_format(1275,43731
      neg_format(1279,43811
      do_decimal_point(1297,44277
      do_thousands_sep(1309,44686
      do_grouping(1322,45141
      do_curr_symbol(1335,45587
      do_positive_sign(1348,46050
      do_negative_sign(1361,46515
      do_frac_digits(1375,47006
      do_pos_format(1389,47473
      do_neg_format(1403,47938
    class moneypunct_byname 1452,49116
      typedef _CharT			char_type;1455,49197
      typedef basic_string<_CharT>	string_type;1456,49231
      moneypunct_byname(1461,49334
      moneypunct_byname(1476,49736
      ~moneypunct_byname(1482,49886
    class money_get 1506,50624
      typedef _CharT			char_type;1512,50739
      typedef _InIter			iter_type;1513,50773
      typedef basic_string<_CharT>	string_type;1514,50808
      static locale::id			id;1518,50898
      money_get(1528,51153
      get(1558,52573
      get(1589,54037
      ~money_get(1596,54292
    class money_put 1667,56997
      typedef _CharT			char_type;1672,57096
      typedef _OutIter			iter_type;1673,57130
      typedef basic_string<_CharT>	string_type;1674,57166
      static locale::id			id;1678,57256
      money_put(1688,57511
      put(1708,58382
      put(1731,59392
      ~money_put(1738,59622
  struct messages_base1824,62941
    typedef int catalog;1826,62968
    class messages 1853,64043
      typedef _CharT			char_type;1859,64179
      typedef basic_string<_CharT>	string_type;1860,64213
      __c_locale			_M_c_locale_messages;1866,64411
      const char*			_M_name_messages;1867,64452
      static locale::id			id;1871,64532
      open(1908,65666
      get(1944,67150
      close(1955,67474
      _M_convert_to_char(2006,69253
      _M_convert_from_char(2014,69501
    class messages_byname 2037,70010
      typedef _CharT			char_type;2040,70080
      typedef basic_string<_CharT>	string_type;2041,70114
      messages_byname(2048,70280
      ~messages_byname(2054,70426

/usr/include/c++/13/bits/locale_facets_nonio.tcc,828
#define _LOCALE_FACETS_NONIO_TCC 31,1279
namespace std _GLIBCXX_VISIBILITY(35,1342
      struct _Scoped_str74,2376
	size_t _M_len;76,2409
	_CharT* _M_str;77,2425
	_Scoped_str(80,2453
	~_Scoped_str(84,2587
	_M_release(87,2631
	typedef char_traits<_CharT>			  __traits_type;140,4319
	typedef typename string_type::size_type	141,4367
	typedef money_base::part			  part;142,4430
	typedef __moneypunct_cache<_CharT, _Intl>         __cache_type;143,4466
      typedef typename string::size_type 387,11895
	typedef typename string_type::size_type	427,13262
	typedef money_base::part                          part;428,13324
	typedef __moneypunct_cache<_CharT, _Intl>         __cache_type;429,13381
      typedef char_traits<_CharT>		__traits_type;1090,33445
      typedef char_traits<_CharT>		__traits_type;1252,37989

/usr/include/c++/13/bits/localefwd.h,74
#define _LOCALE_FWD_H 35,1310
namespace std _GLIBCXX_VISIBILITY(44,1562

/usr/include/c++/13/bits/mask_array.h,632
#define _MASK_ARRAY_H 33,1369
namespace std _GLIBCXX_VISIBILITY(37,1421
    class mask_array62,2257
      typedef _Tp value_type;65,2296
      mask_array 71,2512
      mask_array(127,5015
      const size_t       _M_sz;130,5103
      const _Array<bool> _M_mask;131,5135
      const _Array<_Tp>  _M_array;132,5169
      mask_array(136,5256
    mask_array<_Tp>::operator=(operator=164,5985
    mask_array<_Tp>::operator=(operator=169,6141
      mask_array<_Tp>::operator=(operator=178,6406
#undef _DEFINE_VALARRAY_OPERATOR185,6614
#define _DEFINE_VALARRAY_OPERATOR(186,6647
#undef _DEFINE_VALARRAY_OPERATOR216,7803

/usr/include/c++/13/bits/max_size_type.h,2977
#define _GLIBCXX_MAX_SIZE_TYPE_H 31,1276
namespace std _GLIBCXX_VISIBILITY(48,1878
    class __max_size_type59,2050
	__max_size_type(66,2213
      __max_size_type(71,2313
      operator bool(79,2543
      operator*operator324,9279
      operator!=(operator!=394,11027
      operator<(398,11170
      operator>(407,11390
      operator<=(operator<=411,11528
      operator>=(operator>=415,11670
      __max_size_type(431,12089
    class __max_diff_type440,12327
	__max_diff_type(447,12490
      __max_diff_type(452,12573
	operator _Tp(operator _Tp458,12750
      operator bool(operator bool462,12845
      operator+(466,12945
      operator-(470,13035
      operator~(474,13144
      operator++(478,13254
      operator++(482,13344
      operator--(490,13471
      operator--(494,13561
      operator+=(operator+=502,13688
      operator-=(operator-=509,13830
      operator*=(operator*=516,13972
      operator/=(operator/=523,14114
      operator%=(operator%=540,14552
      operator<<=(operator<<=551,14793
      operator>>=(operator>>=558,14946
      operator&=(operator&=569,15216
      operator|=(operator|=576,15358
      operator^=(operator^=583,15500
	operator+=(operator+=591,15704
	operator-=(operator-=596,15908
	operator*=(operator*=601,16112
	operator/=(operator/=606,16316
	operator%=(operator%=611,16520
	operator&=(operator&=616,16724
	operator|=(operator|=621,16928
	operator^=(operator^=626,17132
	operator<<=(operator<<=631,17336
	operator>>=(operator>>=636,17542
      operator+(640,17692
      operator-(647,17848
      operator*(654,18004
      operator/(661,18160
      operator%(668,18316
      operator<<(675,18472
      operator>>(682,18630
      operator&(689,18788
      operator|(696,18944
      operator^(703,19100
      operator==(operator==710,19245
      operator<=>(operator<=>715,19438
      operator!=(operator!=726,19760
      operator<(730,19896
      operator>(741,20158
      operator<=(operator<=745,20296
      operator>=(operator>=749,20438
    struct numeric_limits<numeric_limits768,20846
      using _Sp 770,20913
      static constexpr bool is_specialized 771,20966
      static constexpr bool is_signed 772,21017
      static constexpr bool is_integer 773,21064
      static constexpr bool is_exact 774,21111
      static constexpr int digits775,21156
      static constexpr int digits10777,21244
      min(781,21368
      max(785,21437
      lowest(789,21540
    struct numeric_limits<numeric_limits794,21609
      using _Dp 796,21676
      using _Sp 797,21729
      static constexpr bool is_specialized 798,21782
      static constexpr bool is_signed 799,21833
      static constexpr bool is_integer 800,21879
      static constexpr bool is_exact 801,21926
      static constexpr int digits 802,21971
      static constexpr int digits10803,22040
      min(807,22164
      max(811,22246
      lowest(815,22354

/usr/include/c++/13/bits/memory_resource.h,3095
#define _GLIBCXX_MEMORY_RESOURCE_H 31,1295
namespace std _GLIBCXX_VISIBILITY(50,1914
  class memory_resource61,2117
    virtual ~memory_resource(68,2309
    allocate(74,2453
    deallocate(79,2680
    is_equal(85,2875
    do_is_equal(96,3165
    class polymorphic_allocator120,3792
	struct __not_pair 125,3973
      template<typename _Up1,127,4017
	struct __not_pair<pair<_Up1,_Up1128,4062
      polymorphic_allocator(133,4148
      polymorphic_allocator(140,4341
      : _M_resource(142,4435
	polymorphic_allocator(148,4606
      allocate(157,4831
      deallocate(167,5132
      allocate_bytes(173,5341
      deallocate_bytes(178,5504
	allocate_object(184,5720
	deallocate_object(194,5992
      template<typename _Up,197,6099
	new_object(199,6171
	delete_object(216,6487
      template<typename _Tp1,224,6619
	construct(227,6731
      template<typename _Tp1,242,7299
      template<typename _Tp1, typename _Tp2,242,7299
	       typename... _Args1,243,7344
	construct(246,7428
      template<typename _Tp1,261,7934
	construct(264,8015
      template<typename _Tp1,267,8120
      template<typename _Tp1, typename _Tp2,267,8120
      template<typename _Tp1, typename _Tp2, typename _Up,267,8120
	construct(270,8229
      template <typename _Tp1,277,8446
      template <typename _Tp1, typename _Tp2,277,8446
      template <typename _Tp1, typename _Tp2, typename _Up,277,8446
	construct(280,8556
      template<typename _Tp1,287,8761
      template<typename _Tp1, typename _Tp2,287,8761
      template<typename _Tp1, typename _Tp2, typename _Up,287,8761
	construct(290,8870
      template<typename _Tp1,297,9136
	construct(300,9221
	_GLIBCXX20_DEPRECATED_SUGGEST(308,9405
      select_on_container_copy_construction(315,9567
      resource(319,9694
      operator==(operator==327,9955
      operator!=(operator!=334,10190
      template<typename _Ind,344,10516
	_S_construct_p(346,10591
      template<size_t... _Ind,349,10679
	static tuple<tuple350,10729
	_S_construct_p(351,10795
      template<size_t... _Ind,359,10981
	_S_construct_p(361,11080
      memory_resource* _M_resource;366,11244
    operator==(operator==372,11363
    operator!=(operator!=380,11648
    struct allocator_traits<allocator_traits391,11962
      using allocator_type 394,12058
      using value_type 397,12150
      using pointer 400,12221
      using const_pointer 403,12296
      using void_pointer 406,12382
      using const_void_pointer 409,12468
      using difference_type 412,12557
      using size_type 415,12640
      using propagate_on_container_copy_assignment 421,12811
      using propagate_on_container_move_assignment 422,12876
      using propagate_on_container_swap 423,12941
      select_on_container_copy_construction(426,13024
      using is_always_equal 431,13218
	using rebind_alloc 434,13290
	using rebind_traits 437,13375
      allocate(447,13686
      allocate(462,14176
      deallocate(474,14572
      template<typename _Up,488,15164
	construct(490,15225
	destroy(502,15606
      max_size(511,15898

/usr/include/c++/13/bits/memoryfwd.h,73
#define _MEMORYFWD_H 44,1829
namespace std _GLIBCXX_VISIBILITY(50,1909

/usr/include/c++/13/bits/mofunc_impl.h,601
# define _GLIBCXX_MOF_CV31,1281
# define _GLIBCXX_MOF_INV_QUALS 35,1338
# define _GLIBCXX_MOF_REF37,1409
# define _GLIBCXX_MOF_INV_QUALS 38,1435
#define _GLIBCXX_MOF_CV_REF 41,1493
namespace std _GLIBCXX_VISIBILITY(43,1555
      operator=(operator=140,4856
      operator=(operator=149,5126
	operator=(operator=160,5424
      explicit operator bool(operator bool170,5695
      operator()(operator()181,6111
      operator==(operator==202,6724
#undef _GLIBCXX_MOF_CV_REF227,7477
#undef _GLIBCXX_MOF_CV228,7504
#undef _GLIBCXX_MOF_REF229,7527
#undef _GLIBCXX_MOF_INV_QUALS230,7551

/usr/include/c++/13/bits/move.h,363
#define _MOVE_H 31,1275
namespace std _GLIBCXX_VISIBILITY(40,1450
    struct __move_if_noexcept_cond102,3134
# define __cpp_lib_addressof_constexpr 126,3988
#define _GLIBCXX_FWDREF(159,4940
#define _GLIBCXX_MOVE(160,4975
#define _GLIBCXX_FORWARD(161,5021
#define _GLIBCXX_FWDREF(163,5089
#define _GLIBCXX_MOVE(164,5129
#define _GLIBCXX_FORWARD(165,5166

/usr/include/c++/13/bits/move_only_function.h,1226
#define _GLIBCXX_MOVE_ONLY_FUNCTION_H 31,1302
namespace std _GLIBCXX_VISIBILITY(40,1449
#define __cpp_lib_move_only_function 44,1528
  class _Mofunc_base50,1680
    _Mofunc_base(53,1718
    _Mofunc_base(57,1781
    template<typename _Tp,63,1946
      _S_nothrow_init(65,2020
    template<typename _Tp,72,2176
      _M_init(74,2233
    operator=(operator=85,2550
    operator=(operator=94,2788
    ~_Mofunc_base(101,2921
    swap(104,2987
    template<typename _Tp,114,3297
      _S_access(116,3358
    struct _Storage125,3599
      void*       _M_addr(127,3625
      const void* _M_addr(128,3693
      struct _Delegate 131,3833
      struct _Delegate { void (_Storage::*__pfm)(); _Storage* __obj;131,3833
	void* _M_p;133,3919
    static void _S_empty(149,4501
      _S_manage(154,4673
    _Storage _M_storage;176,5149
    _Manager _M_manage;177,5174
  namespace __detail::__variant186,5409
      struct _Never_valueless_alt<_Never_valueless_alt193,5664
#define _GLIBCXX_MOF_CV 202,5882
#define _GLIBCXX_MOF_REF 204,5937
#define _GLIBCXX_MOF_REF 206,5989
#define _GLIBCXX_MOF_CV 208,6042
#define _GLIBCXX_MOF_REF 209,6072
#define _GLIBCXX_MOF_CV 211,6124
#define _GLIBCXX_MOF_REF 212,6154

/usr/include/c++/13/bits/nested_exception.h,361
#define _GLIBCXX_NESTED_EXCEPTION_H 31,1326
namespace std _GLIBCXX_VISIBILITY(42,1503
  class nested_exception59,1894
    exception_ptr _M_ptr;61,1923
    nested_exception(65,2031
    nested_exception(67,2098
    nested_ptr(85,2548
    struct _Nested_exception 92,2664
      explicit _Nested_exception(94,2741
      explicit _Nested_exception(98,2828

/usr/include/c++/13/bits/new_allocator.h,1436
#define _STD_NEW_ALLOCATOR_H 31,1286
namespace std _GLIBCXX_VISIBILITY(41,1472
    class __new_allocator63,2196
      typedef _Tp        value_type;66,2240
      typedef std::size_t     size_type;67,2277
      typedef std::ptrdiff_t  difference_type;68,2318
      typedef _Tp*       pointer;70,2392
      typedef const _Tp* const_pointer;71,2426
      typedef _Tp&       reference;72,2466
      typedef const _Tp& const_reference;73,2502
	struct rebind76,2575
	{ typedef __new_allocator<_Tp1> other;77,2590
      typedef std::true_type propagate_on_container_move_assignment;83,2760
      __new_allocator(88,2905
      __new_allocator(92,3024
	__new_allocator(97,3185
      ~__new_allocator(104,3389
      address(107,3455
      address(111,3569
# define _GLIBCXX_OPERATOR_NEW 116,3729
# define _GLIBCXX_OPERATOR_DELETE 117,3783
# define _GLIBCXX_OPERATOR_NEW 119,3849
# define _GLIBCXX_OPERATOR_DELETE 120,3895
      allocate(126,4110
      deallocate(156,5057
# define _GLIBCXX_SIZED_DEALLOC(159,5165
# define _GLIBCXX_SIZED_DEALLOC(161,5232
#undef _GLIBCXX_SIZED_DEALLOC175,5564
#undef _GLIBCXX_OPERATOR_DELETE176,5594
#undef _GLIBCXX_OPERATOR_NEW177,5626
      max_size(182,5740
      template<typename _Up,186,5845
	construct(189,5935
	destroy(196,6171
      construct(204,6423
      destroy(209,6564
	operator==(operator==215,6732
	operator!=(operator!=222,6978
      _M_max_size(230,7177

/usr/include/c++/13/bits/node_handle.h,2159
#define _NODE_HANDLE 32,1303
# define __cpp_lib_node_extract 37,1381
namespace std _GLIBCXX_VISIBILITY(43,1498
    class _Node_handle_common64,2246
      get_allocator(72,2437
      explicit operator bool(78,2569
      [[nodiscard]] bool empty(80,2646
      constexpr _Node_handle_common(84,2767
      ~_Node_handle_common(86,2830
      _Node_handle_common(92,2906
      operator=(operator=100,3083
      _Node_handle_common(122,3596
      _M_swap(130,3798
      _M_move(152,4309
      _M_reset(163,4627
      typename _AllocTraits::pointer _M_ptr;172,4847
      union _Optional_alloc177,5048
	_Optional_alloc(179,5084
	~_Optional_alloc(180,5107
	_Optional_alloc(185,5236
	operator=(operator=191,5384
	swap(202,5744
	_NodeAlloc& operator*(212,6094
	_NodeAlloc release(215,6212
	struct _Empty 222,6337
	[[__no_unique_address__]] _Empty     _M_empty;224,6358
	[[__no_unique_address__]] _NodeAlloc _M_alloc;225,6406
      [[__no_unique_address__]] _Optional_alloc _M_alloc;228,6464
      template<typename _Key2,230,6523
      template<typename _Key2, typename _Value2,230,6523
      template<typename _Key2, typename _Value2, typename _KeyOfValue,230,6523
	       typename _Compare,231,6594
    class _Node_handle 239,6792
      key(253,7197
      mapped(260,7313
      swap(267,7427
      _Node_handle(283,7794
	_S_pointer_to(310,8501
      _M_key(314,8614
      template<typename _Key2,316,8663
      template<typename _Key2, typename _Value2,316,8663
      template<typename _Key2, typename _Value2, typename _KeyOfValue,316,8663
	       typename _Compare,317,8734
      template<typename _Key2,320,8808
      template<typename _Key2, typename _Value2,320,8808
      template<typename _Key2, typename _Value2, typename _ValueAlloc,320,8808
	       typename _ExtractKey,321,8879
	       typename _ExtractKey, typename _Equal,321,8879
	       typename _Hash,322,8926
	       typename _Hash, typename _RangeHash,322,8926
	       typename _Hash, typename _RangeHash, typename _Unused,322,8926
	       typename _RehashPolicy,323,8989
    struct _Node_insert_return381,10697
      _NodeHandle	node;385,10805

/usr/include/c++/13/bits/ostream.tcc,310
#define _OSTREAM_TCC 35,1305
namespace std _GLIBCXX_VISIBILITY(41,1389
    operator<<(97,2821
    operator<<(111,3350
    operator<<(125,3877
    operator<<(307,8937
	      struct __ptr_guard318,9237
		_CharT *__p;__p320,9272
		__ptr_guard 321,9287
		~__ptr_guard(322,9331
		_CharT* __get(323,9366

/usr/include/c++/13/bits/ostream_insert.h,474
#define _OSTREAM_INSERT_H 31,1281
namespace std _GLIBCXX_VISIBILITY(39,1424
      typedef basic_ostream<_CharT, _Traits>       __ostream_type;50,1697
      typedef typename __ostream_type::ios_base 51,1770
      typedef basic_ostream<_CharT, _Traits>       __ostream_type;62,2107
      typedef typename __ostream_type::ios_base 63,2180
      typedef basic_ostream<_CharT, _Traits>       __ostream_type;82,2709
      typedef typename __ostream_type::ios_base 83,2776

/usr/include/c++/13/bits/parse_numbers.h,1101
#define _GLIBCXX_PARSE_NUMBERS_H 31,1303
namespace std _GLIBCXX_VISIBILITY(42,1526
    struct _Digit_impl 64,2003
      static_assert(66,2068
    struct _Power_help163,4410
      using __next = typename _Power_help<_Base, _Digs...>::type;type165,4439
      using __valid_digit = typename _Digit<_Base, _Dig>::__valid;__valid166,4505
    struct _Power 179,4920
    struct _Power<_Power183,5012
    struct _Number_help189,5227
				  __valid_digit::value ? _Pow / _Base : _Pow,194,5396
    struct _Number215,6136
    struct _Number<_Number220,6266
    struct _Parse_int255,7041
namespace __select_int262,7137
  template<unsigned long long _Val,264,7162
  template<unsigned long long _Val,267,7247
  template<unsigned long long _Val, typename _IntType,267,7247
		      integral_constant<integral_constant270,7449
		      _Select_int_base<_Select_int_base271,7502
    struct _Select_int_base<_Select_int_base275,7590
    using _Select_int 279,7660
	unsigned char,281,7754
	unsigned short,282,7770
	unsigned int,283,7787
	unsigned long,284,7802
      >::type;type286,7838

/usr/include/c++/13/bits/postypes.h,666
#define _GLIBCXX_POSTYPES_H 36,1348
namespace std _GLIBCXX_VISIBILITY(42,1442
  typedef __INT64_TYPE__          streamoff;62,2181
  typedef long long 64,2232
  typedef ptrdiff_t	streamsize;68,2338
    class fpos82,2913
      streamoff	                _M_off;85,2947
      _StateT			_M_state;86,2987
      fpos(93,3255
      fpos(103,3705
      operator streamoff(113,3945
      state(117,4048
      state(122,4162
  typedef fpos<mbstate_t> streampos;204,7025
  typedef fpos<mbstate_t> wstreampos;206,7103
  typedef fpos<mbstate_t> u8streampos;210,7211
  typedef fpos<mbstate_t> u16streampos;215,7327
  typedef fpos<mbstate_t> u32streampos;217,7409

/usr/include/c++/13/bits/predefined_ops.h,2177
#define _GLIBCXX_PREDEFINED_OPS_H	31,1300
  struct _Iter_less_iter39,1401
    template<typename _Iterator1,41,1430
      operator(44,1523
  struct _Iter_less_val53,1724
    _Iter_less_val(58,1827
    _Iter_less_val(63,1898
    template<typename _Iterator,65,1939
      operator(68,2027
  struct _Val_less_iter82,2332
    _Val_less_iter(87,2435
    _Val_less_iter(92,2506
    template<typename _Value,94,2547
      operator(97,2635
  struct _Iter_equal_to_iter111,2940
    template<typename _Iterator1,113,2973
      operator(116,3066
  struct _Iter_equal_to_val125,3280
    template<typename _Iterator,127,3312
      operator(130,3400
    struct _Iter_comp_iter145,3760
      _Compare _M_comp;147,3793
      _Iter_comp_iter(150,3854
      template<typename _Iterator1,154,3938
        operator(157,4037
    struct _Iter_comp_val168,4376
      _Compare _M_comp;170,4408
      _Iter_comp_val(174,4475
      _Iter_comp_val(180,4600
      _Iter_comp_val(187,4769
      template<typename _Iterator,192,4882
	operator()(operator()195,4962
    struct _Val_comp_iter212,5487
      _Compare _M_comp;214,5519
      _Val_comp_iter(218,5586
      _Val_comp_iter(224,5711
      _Val_comp_iter(231,5880
      template<typename _Value,236,5993
	operator()(operator()239,6073
    struct _Iter_equals_val256,6596
      _Value& _M_value;258,6630
      _Iter_equals_val(262,6697
	operator()(operator()269,6832
    struct _Iter_equals_iter280,7106
      _Iterator1 _M_it1;282,7141
      _Iter_equals_iter(286,7209
	operator()(operator()293,7343
    struct _Iter_pred304,7650
      _Predicate _M_pred;306,7678
      _Iter_pred(310,7747
	operator()(operator()317,7891
    struct _Iter_comp_to_val328,8197
      _Compare _M_comp;330,8232
      _Value& _M_value;331,8256
      _Iter_comp_to_val(334,8308
	operator()(operator()341,8493
    struct _Iter_comp_to_iter354,8881
      _Compare _M_comp;356,8917
      _Iterator1 _M_it1;357,8941
      _Iter_comp_to_iter(360,8994
	operator()(operator()367,9178
    struct _Iter_negate381,9597
      _Predicate _M_pred;383,9627
      _Iter_negate(387,9696
	operator()(operator()394,9842

/usr/include/c++/13/bits/ptr_traits.h,750
#define _PTR_TRAITS_H 31,1257
# define __cpp_lib_constexpr_memory 39,1449
# define __cpp_lib_constexpr_memory 41,1521
namespace std _GLIBCXX_VISIBILITY(49,1681
    struct __get_first_arg60,1951
    struct __replace_first_arg71,2407
    struct __ptr_traits_impl 146,4792
      template<typename _Tp,152,4953
      using difference_type = __detected_or_t<ptrdiff_t, __diff_t,163,5276
						__rebind,168,5494
						__rebind, _Ptr,168,5494
						__rebind, _Ptr, _Up>::type;type168,5494
    struct pointer_traits 184,5882
    struct pointer_traits<pointer_traits194,6143
      typedef _Tp* pointer;197,6241
      typedef _Tp  element_type;199,6299
      typedef ptrdiff_t difference_type;201,6401
#define __cpp_lib_to_address 240,7646

/usr/include/c++/13/bits/quoted_string.h,331
#define _GLIBCXX_QUOTED_STRING_H 31,1296
namespace std _GLIBCXX_VISIBILITY(40,1444
      struct _Quoted_string49,1654
	static_assert(51,1690
	_Quoted_string(55,1824
	_String _M_string;62,2000
	_CharT _M_delim;63,2020
	_CharT _M_escape;64,2038
      operator<<(92,2728
      operator<<(117,3473
      operator>>(143,4252

/usr/include/c++/13/bits/random.h,19679
#define _RANDOM_H 32,1262
namespace std _GLIBCXX_VISIBILITY(37,1337
      struct _Adaptor167,4960
	_Adaptor(173,5124
	min(177,5179
	max(181,5234
	operator()(operator()190,5455
	_Engine& _M_g;198,5654
    class linear_congruential_engine264,8056
	  = __detail::_If_seed_seq_for<_Sseq, linear_congruential_engine,273,8381
      typedef _UIntType result_type;278,8537
      linear_congruential_engine(292,9014
      linear_congruential_engine(303,9359
      template<typename _Sseq,312,9641
      min(344,10633
      max(351,10808
      discard(358,10933
      operator()(operator()368,11129
      operator==(operator==386,11713
      template<typename _UIntType1,398,12132
      template<typename _UIntType1, _UIntType1 __a1,398,12132
      template<typename _UIntType1, _UIntType1 __a1, _UIntType1 __c1,398,12132
	       _UIntType1 __m1,399,12202
	       _UIntType1 __m1, typename _CharT,399,12202
      template<typename _UIntType1,418,12988
      template<typename _UIntType1, _UIntType1 __a1,418,12988
      template<typename _UIntType1, _UIntType1 __a1, _UIntType1 __c1,418,12988
	       _UIntType1 __m1,419,13058
	       _UIntType1 __m1, typename _CharT,419,13058
      _UIntType _M_x;426,13313
    operator!=(operator!=443,13902
    class mersenne_twister_engine486,15774
	  = __detail::_If_seed_seq_for<_Sseq, mersenne_twister_engine,517,17342
      typedef _UIntType result_type;522,17495
      mersenne_twister_engine(542,18545
      mersenne_twister_engine(545,18637
      template<typename _Sseq,554,18915
      min(570,19331
      max(577,19488
      operator==(operator==602,20253
      template<typename _UIntType1,619,20915
	       size_t __w1,620,20951
	       size_t __w1, size_t __n1,620,20951
	       size_t __m1,621,20985
	       size_t __m1, size_t __r1,621,20985
	       _UIntType1 __a1,622,21019
	       _UIntType1 __a1, size_t __u1,622,21019
	       _UIntType1 __d1,623,21057
	       _UIntType1 __d1, size_t __s1,623,21057
	       _UIntType1 __b1,624,21095
	       _UIntType1 __b1, size_t __t1,624,21095
	       _UIntType1 __c1,625,21133
	       _UIntType1 __c1, size_t __l1,625,21133
	       _UIntType1 __c1, size_t __l1, _UIntType1 __f1,625,21133
	       typename _CharT,626,21188
      template<typename _UIntType1,645,21933
	       size_t __w1,646,21969
	       size_t __w1, size_t __n1,646,21969
	       size_t __m1,647,22003
	       size_t __m1, size_t __r1,647,22003
	       _UIntType1 __a1,648,22037
	       _UIntType1 __a1, size_t __u1,648,22037
	       _UIntType1 __d1,649,22075
	       _UIntType1 __d1, size_t __s1,649,22075
	       _UIntType1 __b1,650,22113
	       _UIntType1 __b1, size_t __t1,650,22113
	       _UIntType1 __c1,651,22151
	       _UIntType1 __c1, size_t __l1,651,22151
	       _UIntType1 __c1, size_t __l1, _UIntType1 __f1,651,22151
	       typename _CharT,652,22206
      _UIntType _M_x[_M_x662,22531
      size_t    _M_p;663,22565
    operator!=(operator!=685,23339
    class subtract_with_carry_engine711,24258
	  = __detail::_If_seed_seq_for<_Sseq, subtract_with_carry_engine,722,24666
      typedef _UIntType result_type;727,24822
      subtract_with_carry_engine(735,25116
      subtract_with_carry_engine(743,25347
      template<typename _Sseq,752,25621
      min(785,26800
      max(793,27006
      discard(800,27168
      operator==(operator==825,27917
      template<typename _UIntType1,843,28627
      template<typename _UIntType1, size_t __w1,843,28627
      template<typename _UIntType1, size_t __w1, size_t __s1,843,28627
      template<typename _UIntType1, size_t __w1, size_t __s1, size_t __r1,843,28627
	       typename _CharT,844,28702
      template<typename _UIntType1,862,29391
      template<typename _UIntType1, size_t __w1,862,29391
      template<typename _UIntType1, size_t __w1, size_t __s1,862,29391
      template<typename _UIntType1, size_t __w1, size_t __s1, size_t __r1,862,29391
	       typename _CharT,863,29466
      _UIntType  _M_x[_M_x871,29764
      _UIntType  _M_carry;872,29797
      size_t     _M_p;873,29840
    operator!=(operator!=891,30507
    class discard_block_engine908,30981
      typedef typename _RandomNumberEngine::result_type result_type;915,31187
	  = __detail::_If_seed_seq_for<_Sseq, discard_block_engine,919,31308
      discard_block_engine(931,31677
      discard_block_engine(941,31969
      discard_block_engine(951,32298
      discard_block_engine(961,32639
      template<typename _Sseq,969,32849
	: _M_b(__q), _M_n(972,32970
      seed(980,33179
      seed(991,33408
        seed(1004,33710
      base(1015,33932
      min(1022,34116
      max(1029,34306
      discard(1036,34449
      operator==(operator==1060,35172
      template<typename _RandomNumberEngine1,1075,35760
      template<typename _RandomNumberEngine1, size_t __p1,1075,35760
      template<typename _RandomNumberEngine1, size_t __p1, size_t __r1,1075,35760
	       typename _CharT,1076,35832
      template<typename _RandomNumberEngine1,1093,36491
      template<typename _RandomNumberEngine1, size_t __p1,1093,36491
      template<typename _RandomNumberEngine1, size_t __p1, size_t __r1,1093,36491
	       typename _CharT,1094,36563
      _RandomNumberEngine _M_b;1101,36797
      size_t _M_n;1102,36829
    operator!=(operator!=1119,37417
    class independent_bits_engine1134,37922
	  = __detail::_If_seed_seq_for<_Sseq, independent_bits_engine,1143,38264
      typedef _UIntType result_type;1148,38417
      independent_bits_engine(1155,38617
      independent_bits_engine(1165,38906
      independent_bits_engine(1175,39232
      independent_bits_engine(1185,39570
      template<typename _Sseq,1193,39777
      seed(1212,40325
        seed(1222,40612
      base(1230,40817
      min(1237,41001
      max(1244,41167
      discard(1251,41329
      operator==(operator==1276,42076
      template<typename _CharT,1292,42681
	operator>>(1294,42776
      _RandomNumberEngine _M_b;1303,42970
    operator!=(operator!=1321,43599
    operator<<(1341,44378
    class shuffle_order_engine1361,44940
      typedef typename _RandomNumberEngine::result_type result_type;1368,45135
	  = __detail::_If_seed_seq_for<_Sseq, shuffle_order_engine,1372,45256
      shuffle_order_engine(1382,45551
      shuffle_order_engine(1393,45857
      shuffle_order_engine(1404,46200
      shuffle_order_engine(1415,46555
      template<typename _Sseq,1424,46779
      seed(1435,47124
      seed(1446,47360
        seed(1459,47669
      base(1469,47875
      min(1476,48052
      max(1483,48235
      discard(1490,48371
      operator==(operator==1514,49072
      template<typename _RandomNumberEngine1,1531,49707
      template<typename _RandomNumberEngine1, size_t __k1,1531,49707
	       typename _CharT,1532,49766
      template<typename _RandomNumberEngine1,1549,50419
      template<typename _RandomNumberEngine1, size_t __k1,1549,50419
	       typename _CharT,1550,50478
      void _M_initialize(1556,50701
      _RandomNumberEngine _M_b;1563,50824
      result_type _M_v[_M_v1564,50856
      result_type _M_y;1565,50885
    operator!=(operator!=1582,51452
  minstd_rand0;1593,51828
  minstd_rand;1599,51990
    0xefc60000UL, 18, 1812433253UL> mt19937;1615,52447
    6364136223846793005ULL> mt19937_64;1627,52743
    ranlux24_base;1630,52848
    ranlux48_base;1633,52931
  typedef discard_block_engine<ranlux24_base, 223, 23> ranlux24;1635,52951
  typedef discard_block_engine<ranlux48_base, 389, 11> ranlux48;1637,53017
  typedef shuffle_order_engine<minstd_rand0, 256> knuth_b;1639,53083
  typedef minstd_rand0 default_random_engine;1641,53143
  class random_device1650,53369
    typedef unsigned int result_type;1654,53456
    random_device(1658,53550
    random_device(1661,53608
    ~random_device(1663,53677
    min(1667,53751
    max(1671,53851
    entropy(1675,53929
    operator()(operator()1679,54013
	void*      _M_file;1702,54565
	int _M_fd;1704,54618
      mt19937    _M_mt;1706,54639
    operator!=(operator!=1733,55222
      typedef _RealType result_type;1786,57076
      struct param_type1789,57143
	typedef uniform_real_distribution<_RealType> distribution_type;1791,57175
	param_type(1793,57241
	param_type(1796,57286
	a(1803,57422
	b(1807,57465
	operator==(operator==1811,57508
	operator!=(operator!=1816,57690
	_RealType _M_a;1821,57802
	_RealType _M_b;1822,57819
	operator()(operator()1899,59660
	operator()(operator()1904,59835
      operator==(operator==1939,60963
    operator!=(operator!=1961,61587
      typedef _RealType result_type;2023,63637
      struct param_type2026,63704
	typedef normal_distribution<_RealType> distribution_type;2028,63736
	param_type(2030,63796
	param_type(2033,63843
	mean(2040,64013
	stddev(2044,64060
	operator==(operator==2048,64113
	operator!=(operator!=2054,64317
	_RealType _M_mean;2059,64429
	_RealType _M_stddev;2060,64449
	operator()(operator()2136,66244
    operator!=(operator!=2225,69328
      typedef _RealType result_type;2250,70059
      struct param_type2253,70126
	typedef lognormal_distribution<_RealType> distribution_type;2255,70158
	param_type(2257,70221
	param_type(2260,70268
	m(2265,70366
	s(2269,70407
	operator==(operator==2273,70450
	operator!=(operator!=2278,70632
	_RealType _M_m;2283,70744
	_RealType _M_s;2284,70761
	operator()(operator()2351,72223
	operator()(operator()2356,72398
      operator==(operator==2388,73506
    operator!=(operator!=2442,75392
      typedef _RealType result_type;2475,76320
      struct param_type2478,76387
	typedef gamma_distribution<_RealType> distribution_type;2480,76419
	param_type(2483,76523
	param_type(2486,76570
	alpha(2494,76772
	beta(2498,76821
	operator==(operator==2502,76870
	operator!=(operator!=2508,77072
	_RealType _M_alpha;2516,77209
	_RealType _M_beta;2517,77230
	_RealType _M_malpha,2519,77251
	_RealType _M_malpha, _M_a2;2519,77251
	operator()(operator()2598,79126
      operator==(operator==2634,80335
     operator!=(operator!=2687,82168
      typedef _RealType result_type;2717,83016
      struct param_type2720,83083
	typedef chi_squared_distribution<_RealType> distribution_type;2722,83115
	param_type(2724,83180
	param_type(2727,83225
	n(2732,83282
	operator==(operator==2736,83325
	operator!=(operator!=2741,83481
	_RealType _M_n;2746,83593
	typedef typename std::gamma_distribution<std::gamma_distribution2790,84505
	operator()(operator()2814,85119
	operator()(operator()2819,85270
	  typedef typename std::gamma_distribution<std::gamma_distribution2822,85359
      operator==(operator==2865,86850
    operator!=(operator!=2925,89000
      typedef _RealType result_type;2947,89676
      struct param_type2950,89743
	typedef cauchy_distribution<_RealType> distribution_type;2952,89775
	param_type(2954,89835
	param_type(2957,89880
	a(2962,89978
	b(2966,90019
	operator==(operator==2970,90062
	operator!=(operator!=2975,90244
	_RealType _M_a;2980,90356
	_RealType _M_b;2981,90373
	operator()(operator()3048,91816
      operator==(operator==3083,92958
    operator!=(operator!=3105,93565
      typedef _RealType result_type;3162,95469
      struct param_type3165,95536
	typedef fisher_f_distribution<_RealType> distribution_type;3167,95568
	param_type(3169,95630
	param_type(3172,95675
	m(3177,95773
	n(3181,95814
	operator==(operator==3185,95857
	operator!=(operator!=3190,96039
	_RealType _M_m;3195,96151
	_RealType _M_n;3196,96168
	operator()(operator()3267,97729
	operator()(operator()3272,97912
	  typedef typename std::gamma_distribution<std::gamma_distribution3275,98001
      operator==(operator==3315,99366
    operator!=(operator!=3376,101492
      typedef _RealType result_type;3401,102255
      struct param_type3404,102322
	typedef student_t_distribution<_RealType> distribution_type;3406,102354
	param_type(3408,102417
	param_type(3411,102462
	n(3416,102519
	operator==(operator==3420,102562
	operator!=(operator!=3425,102718
	_RealType _M_n;3430,102830
        operator()(operator()3496,104293
	operator()(operator()3501,104487
	  typedef typename std::gamma_distribution<std::gamma_distribution3504,104576
      operator==(operator==3545,105956
    operator!=(operator!=3605,108120
  class bernoulli_distribution3627,108720
    typedef bool result_type;3631,108819
    struct param_type3634,108877
      typedef bernoulli_distribution distribution_type;3636,108905
      param_type(3638,108962
      param_type(3641,109019
      p(3648,109147
      operator==(operator==3652,109205
      operator!=(operator!=3657,109376
      double _M_p;3662,109496
    bernoulli_distribution(3669,109620
    bernoulli_distribution(3678,109928
    bernoulli_distribution(3683,110009
    reset(3693,110215
    p(3699,110321
    param(3706,110457
    param(3714,110649
    min(3721,110821
    max(3728,110997
      operator()(operator()3736,111193
      operator()(operator()3741,111374
    template<typename _ForwardIterator,3752,111667
      __generate(3755,111764
    template<typename _ForwardIterator,3759,111924
      __generate(3762,112021
      __generate(3768,112268
    operator==(operator==3778,112575
  private:private3782,112718
    param_type _M_param;3790,112972
  operator!=(operator!=3799,113169
    operator>>(3830,114258
      typedef _IntType result_type;3858,115046
      struct param_type3861,115112
	typedef binomial_distribution<_IntType> distribution_type;3863,115144
	param_type(3866,115252
	param_type(3869,115297
	t(3879,115488
	p(3883,115526
	operator==(operator==3887,115569
	operator!=(operator!=3892,115751
	_IntType _M_t;3900,115888
	double _M_p;3901,115904
	double _M_q;3903,115919
	double _M_d1,3905,115963
	double _M_d1, _M_d2,3905,115963
	double _M_d1, _M_d2, _M_s1,3905,115963
	double _M_d1, _M_d2, _M_s1, _M_s2,3905,115963
	double _M_d1, _M_d2, _M_s1, _M_s2, _M_c,3905,115963
	       _M_a1,3906,116005
	       _M_a1, _M_a123,3906,116005
	       _M_a1, _M_a123, _M_s,3906,116005
	       _M_a1, _M_a123, _M_s, _M_lf,3906,116005
	       _M_a1, _M_a123, _M_s, _M_lf, _M_lp1p;3906,116005
	bool   _M_easy;3908,116058
	operator()(operator()3980,117633
        operator==(operator==4016,118840
    operator!=(operator!=4081,121031
      typedef _IntType  result_type;4104,121722
      struct param_type4107,121789
	typedef geometric_distribution<_IntType> distribution_type;4109,121821
	param_type(4112,121931
	param_type(4115,121978
	p(4123,122101
	operator==(operator==4127,122144
	operator!=(operator!=4132,122300
	_M_initialize(4138,122418
	double _M_p;4141,122476
	double _M_log_1_p;4143,122491
	operator()(operator()4209,123961
      operator==(operator==4244,125106
    operator!=(operator!=4266,125721
      typedef _IntType result_type;4321,127583
      struct param_type4324,127649
	typedef negative_binomial_distribution<_IntType> distribution_type;4326,127681
	param_type(4328,127751
	param_type(4331,127796
	k(4338,127947
	p(4342,127985
	operator==(operator==4346,128028
	operator!=(operator!=4351,128210
	_IntType _M_k;4356,128322
	double _M_p;4357,128338
      operator==(operator==4468,131392
    operator!=(operator!=4527,133579
      typedef _IntType  result_type;4558,134470
      struct param_type4561,134537
	typedef poisson_distribution<_IntType> distribution_type;4563,134569
	param_type(4566,134675
	param_type(4569,134722
	mean(4577,134839
	operator==(operator==4581,134888
	operator!=(operator!=4586,135050
	double _M_mean;4595,135253
	double _M_lm_thr;4597,135271
	double _M_lfm,4599,135320
	double _M_lfm, _M_sm,4599,135320
	double _M_lfm, _M_sm, _M_d,4599,135320
	double _M_lfm, _M_sm, _M_d, _M_scx,4599,135320
	double _M_lfm, _M_sm, _M_d, _M_scx, _M_1cx,4599,135320
	double _M_lfm, _M_sm, _M_d, _M_scx, _M_1cx, _M_c2b,4599,135320
	double _M_lfm, _M_sm, _M_d, _M_scx, _M_1cx, _M_c2b, _M_cb;4599,135320
	operator()(operator()4665,136820
      operator==(operator==4701,138008
    operator!=(operator!=4759,140021
      typedef _RealType result_type;4790,141130
      struct param_type4793,141197
	typedef exponential_distribution<_RealType> distribution_type;4795,141229
	param_type(4797,141294
	param_type(4800,141341
	lambda(4807,141461
	operator==(operator==4811,141514
	operator!=(operator!=4816,141680
	_RealType _M_lambda;4821,141792
	operator()(operator()4894,143553
	operator()(operator()4899,143728
      operator==(operator==4934,144864
    operator!=(operator!=4956,145486
      typedef _RealType result_type;5012,147405
      struct param_type5015,147472
	typedef weibull_distribution<_RealType> distribution_type;5017,147504
	param_type(5019,147565
	param_type(5022,147612
	a(5027,147712
	b(5031,147753
	operator==(operator==5035,147796
	operator!=(operator!=5040,147978
	_RealType _M_a;5045,148090
	_RealType _M_b;5046,148107
	operator()(operator()5116,149678
      operator==(operator==5151,150821
    operator!=(operator!=5173,151435
      typedef _RealType result_type;5229,153283
      struct param_type5232,153350
	typedef extreme_value_distribution<_RealType> distribution_type;5234,153382
	param_type(5236,153449
	param_type(5239,153496
	a(5244,153596
	b(5248,153637
	operator==(operator==5252,153680
	operator!=(operator!=5257,153862
	_RealType _M_a;5262,153974
	_RealType _M_b;5263,153991
	operator()(operator()5333,155614
      operator==(operator==5368,156763
    operator!=(operator!=5390,157393
      typedef _IntType result_type;5451,159442
      struct param_type5454,159508
	typedef discrete_distribution<_IntType> distribution_type;5456,159540
	param_type(5459,159648
	  param_type(5464,159725
	param_type(5469,159859
	probabilities(5482,160263
	operator==(operator==5486,160369
	operator!=(operator!=5491,160531
	std::vector<double> _M_prob;5499,160668
	std::vector<double> _M_cp;5500,160698
	operator()(operator()5582,162562
      operator==(operator==5617,163706
    operator!=(operator!=5670,165539
      typedef _RealType result_type;5699,166536
      struct param_type5702,166603
	typedef piecewise_constant_distribution<_RealType> distribution_type;5704,166635
	param_type(5707,166765
	template<typename _InputIteratorB,5711,166816
	intervals(5728,167370
	densities(5741,167575
	operator==(operator==5745,167675
	operator!=(operator!=5750,167865
	std::vector<_RealType> _M_int;5758,168002
	std::vector<double> _M_den;5759,168034
	std::vector<double> _M_cp;5760,168063
	operator()(operator()5865,170430
      operator==(operator==5900,171584
    operator!=(operator!=5954,173547
      typedef _RealType result_type;5979,174427
      struct param_type5982,174494
	typedef piecewise_linear_distribution<_RealType> distribution_type;5984,174526
	param_type(5987,174652
	template<typename _InputIteratorB,5991,174711
	intervals(6008,175265
	densities(6021,175470
	operator==(operator==6025,175570
	operator!=(operator!=6030,175760
	std::vector<_RealType> _M_int;6038,175897
	std::vector<double> _M_den;6039,175929
	std::vector<double> _M_cp;6040,175958
	std::vector<double> _M_m;6041,175986
	operator()(operator()6147,178402
      operator==(operator==6182,179554
    operator!=(operator!=6236,181509
  class seed_seq6258,182035
    typedef uint_least32_t result_type;6262,182105
    seed_seq(6265,182178
    template<typename _IntType,6269,182224
    size_t size(6281,182643
      param(6286,182755
    std::vector<result_type> _M_v;6294,182981

/usr/include/c++/13/bits/random.tcc,4268
#define _RANDOM_TCC 31,1277
namespace std _GLIBCXX_VISIBILITY(35,1360
    operator<<(156,4857
    operator>>(177,5556
    operator()(operator()455,15392
    operator<<(477,16040
    operator>>(504,17040
    operator()(operator()598,20124
    operator<<(632,21006
    operator>>(656,21837
    operator()(operator()687,22898
    operator<<(701,23193
    operator>>(723,23941
    operator()(operator()742,24596
      typedef typename _RandomNumberEngine::result_type 744,24619
      typedef typename std::common_type<std::common_type751,24965
  namespace __detail813,26289
      __representable_as_double(818,26426
      __p1_representable_as_double(831,26926
    operator()(operator()844,27464
    operator<<(863,28036
    operator>>(887,28851
    operator<<(907,29454
    operator>>(927,30121
    operator<<(965,31356
    operator>>(988,32189
    operator<<(1026,33377
      operator()(operator()1051,34212
    operator<<(1107,35951
    operator>>(1130,36720
      operator()(operator()1152,37487
      operator()(operator()1165,37917
	typedef typename std::gamma_distribution<std::gamma_distribution1168,38007
    operator<<(1221,39636
    operator>>(1245,40505
      operator()(operator()1309,42447
    operator<<(1431,45728
    operator>>(1455,46560
      operator()(operator()1564,49867
    operator<<(1697,53554
    operator>>(1722,54410
    operator<<(1759,55656
    operator>>(1781,56433
      operator()(operator()1810,57322
    operator==(operator==1905,59705
    operator<<(1917,60144
    operator>>(1943,61088
    operator<<(1984,62397
    operator>>(2008,63255
    operator<<(2056,64864
    operator>>(2079,65698
      operator()(operator()2102,66419
    operator<<(2142,67595
    operator>>(2165,68422
	typedef typename std::gamma_distribution<std::gamma_distribution2206,69813
    operator<<(2217,70176
    operator>>(2241,71061
    operator<<(2291,72775
    operator>>(2314,73631
      operator()(operator()2353,74865
    operator<<(2460,77534
    operator>>(2484,78395
      operator()(operator()2506,79167
    operator<<(2536,80194
    operator>>(2559,81022
      operator()(operator()2581,81752
    operator<<(2610,82733
    operator>>(2633,83567
      operator()(operator()2697,85473
    operator<<(2746,86775
namespace __detail2770,87633
  template<typename _ValT,2772,87654
  template<typename _ValT, typename _CharT,2772,87654
    basic_istream<basic_istream2773,87716
    __extract_params(2774,87752
  template<typename _IntType,2790,88050
  template<typename _IntType, typename _CharT,2790,88050
    operator>>(2792,88156
    _M_initialize(2816,88818
    template<typename _InputIteratorB,2847,89605
      param_type(2849,89733
      param_type(2874,90222
      param_type(2891,90767
      operator()(operator()2912,91451
    template<typename _ForwardIterator,2932,92015
      __generate_impl(2936,92163
  template<typename _RealType,2966,92949
  template<typename _RealType, typename _CharT,2966,92949
    operator<<(2968,93056
  template<typename _RealType,2997,94078
  template<typename _RealType, typename _CharT,2997,94078
    operator>>(2999,94185
    _M_initialize(3030,95009
    template<typename _InputIteratorB,3068,96152
      param_type(3070,96278
      param_type(3087,96708
      param_type(3104,97183
      operator()(operator()3125,97841
    template<typename _ForwardIterator,3158,98680
      __generate_impl(3162,98826
  template<typename _RealType,3172,99183
  template<typename _RealType, typename _CharT,3172,99183
    operator<<(3174,99290
  template<typename _RealType,3203,100310
  template<typename _RealType, typename _CharT,3203,100310
    operator>>(3205,100417
  template<typename _IntType,3232,101133
    seed_seq::seed_seq(seed_seq3233,101173
    seed_seq::seed_seq(seed_seq3242,101496
    seed_seq::generate(generate3254,101936
      typedef typename iterator_traits<iterator_traits3257,102034
      struct _Up3277,102609
	_Up(3279,102634
	operator uint_least32_t(operator uint_least32_t3281,102686
	uint_least32_t _M_v;3283,102737
  template<typename _RealType,3343,104494
  template<typename _RealType, size_t __bits,3343,104494
    generate_canonical(3346,104598

/usr/include/c++/13/bits/range_access.h,174
#define _GLIBCXX_RANGE_ACCESS_H 31,1294
namespace std _GLIBCXX_VISIBILITY(40,1522
#define __cpp_lib_nonmember_container_access 255,8555
#define __cpp_lib_ssize 350,11224

/usr/include/c++/13/bits/ranges_algo.h,50662
#define _RANGES_ALGO_H 31,1275
namespace std _GLIBCXX_VISIBILITY(43,1544
  struct __all_of_fn74,2381
    template<input_iterator _Iter,76,2406
    template<input_iterator _Iter, sentinel_for<_Iter> _Sent,76,2406
	     indirect_unary_predicate<indirect_unary_predicate78,2501
      operator()(operator()80,2585
    template<input_range _Range,89,2831
	     indirect_unary_predicate<indirect_unary_predicate90,2891
      operator()(operator()93,2996
  struct __any_of_fn102,3232
    template<input_iterator _Iter,104,3257
    template<input_iterator _Iter, sentinel_for<_Iter> _Sent,104,3257
	     indirect_unary_predicate<indirect_unary_predicate106,3352
      operator()(operator()108,3436
    template<input_range _Range,117,3675
	     indirect_unary_predicate<indirect_unary_predicate118,3735
      operator()(operator()121,3840
  struct __none_of_fn130,4076
    template<input_iterator _Iter,132,4102
    template<input_iterator _Iter, sentinel_for<_Iter> _Sent,132,4102
	     indirect_unary_predicate<indirect_unary_predicate134,4197
      operator()(operator()136,4281
    template<input_range _Range,145,4520
	     indirect_unary_predicate<indirect_unary_predicate146,4580
      operator()(operator()149,4685
    struct in_fun_result159,4964
      [[no_unique_address]] _Iter in;161,4995
      [[no_unique_address]] _Fp fun;162,5033
      template<typename _Iter2,164,5071
      template<typename _Iter2,171,5287
	requires convertible_to<convertible_to172,5334
	requires convertible_to<_Iter, _Iter2> && convertible_to<convertible_to172,5334
  struct __for_each_fn181,5607
    template<input_iterator _Iter,183,5634
    template<input_iterator _Iter, sentinel_for<_Iter> _Sent,183,5634
	     indirectly_unary_invocable<indirectly_unary_invocable185,5729
      constexpr for_each_result<for_each_result186,5793
      operator()(operator()187,5838
    template<input_range _Range,194,6078
	     indirectly_unary_invocable<indirectly_unary_invocable195,6138
      constexpr for_each_result<for_each_result197,6223
      operator()(operator()198,6290
  struct __for_each_n_fn210,6622
    template<input_iterator _Iter,212,6651
	     indirectly_unary_invocable<indirectly_unary_invocable213,6713
      constexpr for_each_n_result<for_each_n_result214,6777
      operator()(operator()215,6824
  struct __find_first_of_fn242,7517
    template<input_iterator _Iter1,244,7549
    template<input_iterator _Iter1, sentinel_for<_Iter1> _Sent1,244,7549
	     forward_iterator _Iter2,245,7614
	     forward_iterator _Iter2, sentinel_for<_Iter2> _Sent2,245,7614
      requires indirectly_comparable<_Iter1, _Iter2,248,7777
      requires indirectly_comparable<_Iter1, _Iter2, _Pred,248,7777
      requires indirectly_comparable<_Iter1, _Iter2, _Pred, _Proj1,248,7777
      operator()(operator()250,7876
    template<input_range _Range1,263,8311
    template<input_range _Range1, forward_range _Range2,263,8311
      requires indirectly_comparable<iterator_t<_Range1>, iterator_t<iterator_t266,8471
				     _Pred,267,8550
				     _Pred, _Proj1,267,8550
      operator()(operator()269,8627
  struct __count_fn281,9007
    template<input_iterator _Iter,283,9031
    template<input_iterator _Iter, sentinel_for<_Iter> _Sent,283,9031
	     typename _Tp,284,9093
					 projected<projected286,9199
      operator()(operator()289,9289
    template<input_range _Range,299,9549
    template<input_range _Range, typename _Tp,299,9549
					 projected<projected301,9682
      operator()(operator()304,9787
  struct __count_if_fn313,10017
    template<input_iterator _Iter,315,10044
    template<input_iterator _Iter, sentinel_for<_Iter> _Sent,315,10044
	     indirect_unary_predicate<indirect_unary_predicate317,10139
      operator()(operator()319,10243
    template<input_range _Range,329,10509
	     indirect_unary_predicate<indirect_unary_predicate331,10575
      operator()(operator()334,10702
  struct __search_n_fn345,11019
    template<forward_iterator _Iter,347,11046
    template<forward_iterator _Iter, sentinel_for<_Iter> _Sent,347,11046
    template<forward_iterator _Iter, sentinel_for<_Iter> _Sent, typename _Tp,347,11046
      requires indirectly_comparable<_Iter, const _Tp*_Tp349,11192
      requires indirectly_comparable<_Iter, const _Tp*, _Pred,349,11192
      operator()(operator()351,11294
    template<forward_range _Range,419,13032
    template<forward_range _Range, typename _Tp,419,13032
      requires indirectly_comparable<iterator_t<_Range>, const _Tp*_Tp421,13149
				     _Pred,422,13218
      operator()(operator()424,13285
  struct __find_end_fn435,13632
    template<forward_iterator _Iter1,437,13659
    template<forward_iterator _Iter1, sentinel_for<_Iter1> _Sent1,437,13659
	     forward_iterator _Iter2,438,13726
	     forward_iterator _Iter2, sentinel_for<_Iter2> _Sent2,438,13726
      requires indirectly_comparable<_Iter1, _Iter2,441,13889
      requires indirectly_comparable<_Iter1, _Iter2, _Pred,441,13889
      requires indirectly_comparable<_Iter1, _Iter2, _Pred, _Proj1,441,13889
      operator()(operator()443,13998
    template<forward_range _Range1,494,15571
    template<forward_range _Range1, forward_range _Range2,494,15571
      requires indirectly_comparable<iterator_t<_Range1>, iterator_t<iterator_t497,15733
				     _Pred,498,15812
				     _Pred, _Proj1,498,15812
      operator()(operator()500,15889
  struct __is_permutation_fn514,16315
    template<forward_iterator _Iter1,516,16348
    template<forward_iterator _Iter1, sentinel_for<_Iter1> _Sent1,516,16348
	     forward_iterator _Iter2,517,16415
	     forward_iterator _Iter2, sentinel_for<_Iter2> _Sent2,517,16415
	     indirect_equivalence_relation<indirect_equivalence_relation519,16537
      operator()(operator()523,16690
    template<forward_range _Range1,583,18470
    template<forward_range _Range1, forward_range _Range2,583,18470
	     indirect_equivalence_relation<indirect_equivalence_relation585,18591
      operator()(operator()589,18771
  struct __copy_if_fn604,19251
    template<input_iterator _Iter,606,19277
    template<input_iterator _Iter, sentinel_for<_Iter> _Sent,606,19277
	     weakly_incrementable _Out,607,19339
	     indirect_unary_predicate<indirect_unary_predicate608,19399
      requires indirectly_copyable<indirectly_copyable609,19462
      constexpr copy_if_result<copy_if_result610,19510
      operator()(operator()611,19554
    template<input_range _Range,623,19888
    template<input_range _Range, weakly_incrementable _Out,623,19888
	     indirect_unary_predicate<indirect_unary_predicate625,19981
      requires indirectly_copyable<indirectly_copyable627,20065
      constexpr copy_if_result<copy_if_result628,20126
      operator()(operator()629,20192
  struct __swap_ranges_fn643,20585
    template<input_iterator _Iter1,645,20615
    template<input_iterator _Iter1, sentinel_for<_Iter1> _Sent1,645,20615
	     input_iterator _Iter2,646,20680
      requires indirectly_swappable<indirectly_swappable647,20738
      constexpr swap_ranges_result<swap_ranges_result648,20790
      operator()(operator()649,20841
    template<input_range _Range1,658,21132
      requires indirectly_swappable<indirectly_swappable659,21187
      constexpr swap_ranges_result<swap_ranges_result660,21265
      operator()(operator()662,21367
    struct in_in_out_result675,21768
      [[no_unique_address]] _Iter1 in1;677,21802
      [[no_unique_address]] _Iter2 in2;678,21842
      [[no_unique_address]] _Out  out;679,21882
      template<typename _IIter1,681,21922
      template<typename _IIter1, typename _IIter2,681,21922
      template<typename _IIter1,689,22227
      template<typename _IIter1, typename _IIter2,689,22227
	requires convertible_to<convertible_to690,22294
	  && convertible_to<convertible_to691,22336
	  && convertible_to<convertible_to692,22374
  struct __transform_fn701,22683
    template<input_iterator _Iter,703,22711
    template<input_iterator _Iter, sentinel_for<_Iter> _Sent,703,22711
	     weakly_incrementable _Out,704,22773
	     copy_constructible _Fp,705,22806
      constexpr unary_transform_result<unary_transform_result709,22970
      operator()(operator()710,23022
    template<input_range _Range,718,23321
    template<input_range _Range, weakly_incrementable _Out,718,23321
	     copy_constructible _Fp,719,23381
      constexpr unary_transform_result<unary_transform_result723,23558
      operator()(operator()724,23632
    template<input_iterator _Iter1,731,23860
    template<input_iterator _Iter1, sentinel_for<_Iter1> _Sent1,731,23860
	     input_iterator _Iter2,732,23925
	     input_iterator _Iter2, sentinel_for<_Iter2> _Sent2,732,23925
	     weakly_incrementable _Out,733,23983
	     weakly_incrementable _Out, copy_constructible _Fp,733,23983
				     projected<projected738,24210
      constexpr binary_transform_result<binary_transform_result739,24247
      operator()(operator()740,24309
    template<input_range _Range1,753,24800
    template<input_range _Range1, input_range _Range2,753,24800
	     weakly_incrementable _Out,754,24855
	     weakly_incrementable _Out, copy_constructible _Fp,754,24855
				     projected<projected759,25095
      constexpr binary_transform_result<binary_transform_result760,25145
      operator()(operator()762,25256
  struct __replace_fn774,25667
    template<input_iterator _Iter,776,25693
    template<input_iterator _Iter, sentinel_for<_Iter> _Sent,776,25693
	     typename _Tp1,777,25755
	     typename _Tp1, typename _Tp2,777,25755
	&& indirect_binary_predicate<indirect_binary_predicate779,25873
      operator()(operator()782,25990
    template<input_range _Range,792,26273
	     typename _Tp1,793,26306
	     typename _Tp1, typename _Tp2,793,26306
	&& indirect_binary_predicate<indirect_binary_predicate795,26437
      operator()(operator()799,26598
  struct __replace_if_fn810,26885
    template<input_iterator _Iter,812,26914
    template<input_iterator _Iter, sentinel_for<_Iter> _Sent,812,26914
	     typename _Tp,813,26976
	     indirect_unary_predicate<indirect_unary_predicate814,27023
      requires indirectly_writable<indirectly_writable815,27086
      operator()(operator()817,27162
    template<input_range _Range,826,27449
    template<input_range _Range, typename _Tp,826,27449
	     indirect_unary_predicate<indirect_unary_predicate827,27523
      requires indirectly_writable<indirectly_writable829,27607
      operator()(operator()831,27718
  struct __replace_copy_fn844,28105
    template<input_iterator _Iter,846,28136
    template<input_iterator _Iter, sentinel_for<_Iter> _Sent,846,28136
	     typename _Tp1,847,28198
	     typename _Tp1, typename _Tp2,847,28198
	     typename _Tp1, typename _Tp2, output_iterator<const _Tp2&> _Out,847,28198
	&& indirect_binary_predicate<indirect_binary_predicate850,28350
      constexpr replace_copy_result<replace_copy_result852,28445
      operator()(operator()853,28494
    template<input_range _Range,865,28880
    template<input_range _Range, typename _Tp1,865,28880
    template<input_range _Range, typename _Tp1, typename _Tp2,865,28880
	     output_iterator<const _Tp2&> _Out,866,28943
	&& indirect_binary_predicate<indirect_binary_predicate868,29072
      constexpr replace_copy_result<replace_copy_result871,29189
      operator()(operator()872,29260
  struct __replace_copy_if_fn887,29708
    template<input_iterator _Iter,889,29742
    template<input_iterator _Iter, sentinel_for<_Iter> _Sent,889,29742
	     typename _Tp,890,29804
	     typename _Tp, output_iterator<const _Tp&> _Out,890,29804
	     indirect_unary_predicate<indirect_unary_predicate892,29891
      requires indirectly_copyable<indirectly_copyable893,29954
      constexpr replace_copy_if_result<replace_copy_if_result894,30002
      operator()(operator()895,30054
    template<input_range _Range,906,30433
	     typename _Tp,907,30466
	     typename _Tp, output_iterator<const _Tp&> _Out,907,30466
	     indirect_unary_predicate<indirect_unary_predicate909,30553
      requires indirectly_copyable<indirectly_copyable911,30637
      constexpr replace_copy_if_result<replace_copy_if_result912,30698
      operator()(operator()913,30772
  struct __generate_n_fn924,31111
    template<input_or_output_iterator _Out,926,31140
	&& indirectly_writable<indirectly_writable928,31239
      operator()(operator()930,31313
  struct __generate_fn940,31556
    template<input_or_output_iterator _Out,942,31583
    template<input_or_output_iterator _Out, sentinel_for<_Out> _Sent,942,31583
	&& indirectly_writable<indirectly_writable945,31714
      operator()(operator()947,31788
    template<typename _Range,954,31958
      requires invocable<_Fp&> && output_range<output_range955,32012
      operator()(operator()957,32134
  struct __remove_if_fn965,32323
    template<permutable _Iter,967,32351
    template<permutable _Iter, sentinel_for<_Iter> _Sent,967,32351
	     indirect_unary_predicate<indirect_unary_predicate969,32442
      operator()(operator()971,32537
    template<forward_range _Range,990,33001
	     indirect_unary_predicate<indirect_unary_predicate991,33063
      operator()(operator()995,33237
  struct __remove_fn1004,33479
    template<permutable _Iter,1006,33504
    template<permutable _Iter, sentinel_for<_Iter> _Sent,1006,33504
	     typename _Tp,1007,33562
					 projected<projected1009,33668
      operator()(operator()1012,33749
    template<forward_range _Range,1022,34054
    template<forward_range _Range, typename _Tp,1022,34054
				     projected<projected1025,34224
      operator()(operator()1028,34336
  struct __remove_copy_if_fn1040,34673
    template<input_iterator _Iter,1042,34706
    template<input_iterator _Iter, sentinel_for<_Iter> _Sent,1042,34706
	     weakly_incrementable _Out,1043,34768
	     indirect_unary_predicate<indirect_unary_predicate1044,34828
      requires indirectly_copyable<indirectly_copyable1045,34891
      constexpr remove_copy_if_result<remove_copy_if_result1046,34939
      operator()(operator()1047,34990
    template<input_range _Range,1059,35325
    template<input_range _Range, weakly_incrementable _Out,1059,35325
	     indirect_unary_predicate<indirect_unary_predicate1061,35418
      requires indirectly_copyable<indirectly_copyable1063,35502
      constexpr remove_copy_if_result<remove_copy_if_result1064,35563
      operator()(operator()1065,35636
  struct __remove_copy_fn1079,36038
    template<input_iterator _Iter,1081,36068
    template<input_iterator _Iter, sentinel_for<_Iter> _Sent,1081,36068
	     weakly_incrementable _Out,1082,36130
	     weakly_incrementable _Out, typename _Tp,1082,36130
	&& indirect_binary_predicate<indirect_binary_predicate1084,36252
      constexpr remove_copy_result<remove_copy_result1087,36355
      operator()(operator()1088,36403
    template<input_range _Range,1100,36734
    template<input_range _Range, weakly_incrementable _Out,1100,36734
	     typename _Tp,1101,36794
	&& indirect_binary_predicate<indirect_binary_predicate1103,36902
      constexpr remove_copy_result<remove_copy_result1106,37018
      operator()(operator()1107,37088
  struct __unique_fn1117,37369
    template<permutable _Iter,1119,37394
    template<permutable _Iter, sentinel_for<_Iter> _Sent,1119,37394
	     indirect_equivalence_relation<indirect_equivalence_relation1121,37485
      operator()(operator()1124,37613
    template<forward_range _Range,1141,38089
	     indirect_equivalence_relation<indirect_equivalence_relation1142,38151
      operator()(operator()1146,38350
  namespace __detail1155,38591
    template<typename _Out,1157,38616
  struct __unique_copy_fn1165,38860
    template<input_iterator _Iter,1167,38890
    template<input_iterator _Iter, sentinel_for<_Iter> _Sent,1167,38890
	     weakly_incrementable _Out,1168,38952
	     indirect_equivalence_relation<indirect_equivalence_relation1169,39012
      constexpr unique_copy_result<unique_copy_result1175,39301
      operator()(operator()1176,39349
    template<input_range _Range,1225,40720
	     weakly_incrementable _Out,1226,40753
	     indirect_equivalence_relation<indirect_equivalence_relation1227,40813
      constexpr unique_copy_result<unique_copy_result1233,41156
      operator()(operator()1234,41226
  struct __reverse_fn1245,41525
    template<bidirectional_iterator _Iter,1247,41551
      operator()(operator()1250,41676
      operator()(operator()1286,42369
  struct __reverse_copy_fn1297,42630
    template<bidirectional_iterator _Iter,1299,42661
    template<bidirectional_iterator _Iter, sentinel_for<_Iter> _Sent,1299,42661
      requires indirectly_copyable<indirectly_copyable1301,42764
      constexpr reverse_copy_result<reverse_copy_result1302,42812
      operator()(operator()1303,42861
    template<bidirectional_range _Range,1316,43139
      requires indirectly_copyable<indirectly_copyable1317,43207
      constexpr reverse_copy_result<reverse_copy_result1318,43268
      operator()(operator()1319,43339
  struct __rotate_fn1328,43552
    template<permutable _Iter,1330,43577
      operator()(operator()1332,43667
      operator()(operator()1466,46983
  struct __rotate_copy_fn1478,47300
    template<forward_iterator _Iter,1480,47330
    template<forward_iterator _Iter, sentinel_for<_Iter> _Sent,1480,47330
      requires indirectly_copyable<indirectly_copyable1482,47427
      constexpr rotate_copy_result<rotate_copy_result1483,47475
      operator()(operator()1484,47523
    template<forward_range _Range,1496,47892
      requires indirectly_copyable<indirectly_copyable1497,47954
      constexpr rotate_copy_result<rotate_copy_result1498,48015
      operator()(operator()1499,48085
  struct __sample_fn1508,48346
    template<input_iterator _Iter,1510,48371
    template<input_iterator _Iter, sentinel_for<_Iter> _Sent,1510,48371
	     weakly_incrementable _Out,1511,48433
	&& indirectly_copyable<indirectly_copyable1513,48554
      operator()(operator()1516,48661
    template<input_range _Range,1551,49736
    template<input_range _Range, weakly_incrementable _Out,1551,49736
	&& indirectly_copyable<indirectly_copyable1553,49882
      operator()(operator()1556,50002
  struct __shuffle_fn1568,50318
    template<random_access_iterator _Iter,1570,50344
    template<random_access_iterator _Iter, sentinel_for<_Iter> _Sent,1570,50344
      operator()(operator()1575,50539
    template<random_access_range _Range,1582,50753
      operator()(operator()1586,50948
  struct __push_heap_fn1596,51159
    template<random_access_iterator _Iter,1598,51187
    template<random_access_iterator _Iter, sentinel_for<_Iter> _Sent,1598,51187
      requires sortable<_Iter, _Comp,1600,51321
      operator()(operator()1602,51388
    template<random_access_range _Range,1611,51650
      requires sortable<iterator_t<_Range>, _Comp,1613,51755
      operator()(operator()1615,51857
  struct __pop_heap_fn1624,52104
    template<random_access_iterator _Iter,1626,52131
    template<random_access_iterator _Iter, sentinel_for<_Iter> _Sent,1626,52131
      requires sortable<_Iter, _Comp,1628,52265
      operator()(operator()1630,52332
    template<random_access_range _Range,1639,52592
      requires sortable<iterator_t<_Range>, _Comp,1641,52697
      operator()(operator()1643,52799
  struct __make_heap_fn1652,53044
    template<random_access_iterator _Iter,1654,53072
    template<random_access_iterator _Iter, sentinel_for<_Iter> _Sent,1654,53072
      requires sortable<_Iter, _Comp,1656,53206
      operator()(operator()1658,53273
    template<random_access_range _Range,1667,53535
      requires sortable<iterator_t<_Range>, _Comp,1669,53640
      operator()(operator()1671,53742
  struct __sort_heap_fn1680,53989
    template<random_access_iterator _Iter,1682,54017
    template<random_access_iterator _Iter, sentinel_for<_Iter> _Sent,1682,54017
      requires sortable<_Iter, _Comp,1684,54151
      operator()(operator()1686,54218
    template<random_access_range _Range,1695,54480
      requires sortable<iterator_t<_Range>, _Comp,1697,54585
      operator()(operator()1699,54687
  struct __is_heap_until_fn1708,54934
    template<random_access_iterator _Iter,1710,54966
    template<random_access_iterator _Iter, sentinel_for<_Iter> _Sent,1710,54966
	     indirect_strict_weak_order<indirect_strict_weak_order1712,55069
      operator()(operator()1715,55179
    template<random_access_range _Range,1731,55682
	     indirect_strict_weak_order<indirect_strict_weak_order1733,55756
      operator()(operator()1736,55901
  struct __is_heap_fn1745,56156
    template<random_access_iterator _Iter,1747,56182
    template<random_access_iterator _Iter, sentinel_for<_Iter> _Sent,1747,56182
	     indirect_strict_weak_order<indirect_strict_weak_order1749,56285
      operator()(operator()1752,56394
    template<random_access_range _Range,1761,56616
	     indirect_strict_weak_order<indirect_strict_weak_order1763,56690
      operator()(operator()1766,56812
  struct __sort_fn1775,57055
    template<random_access_iterator _Iter,1777,57078
    template<random_access_iterator _Iter, sentinel_for<_Iter> _Sent,1777,57078
      requires sortable<_Iter, _Comp,1779,57212
      operator()(operator()1781,57279
    template<random_access_range _Range,1790,57557
      requires sortable<iterator_t<_Range>, _Comp,1792,57662
      operator()(operator()1794,57764
  struct __stable_sort_fn1803,58001
    template<random_access_iterator _Iter,1805,58031
    template<random_access_iterator _Iter, sentinel_for<_Iter> _Sent,1805,58031
      requires sortable<_Iter, _Comp,1807,58165
      operator()(operator()1809,58222
    template<random_access_range _Range,1818,58492
      requires sortable<iterator_t<_Range>, _Comp,1820,58597
      operator()(operator()1822,58689
  struct __partial_sort_fn1831,58940
    template<random_access_iterator _Iter,1833,58971
    template<random_access_iterator _Iter, sentinel_for<_Iter> _Sent,1833,58971
      requires sortable<_Iter, _Comp,1835,59105
      operator()(operator()1837,59172
    template<random_access_range _Range,1859,59826
      requires sortable<iterator_t<_Range>, _Comp,1861,59931
      operator()(operator()1863,60033
  struct __partial_sort_copy_fn1877,60456
    template<input_iterator _Iter1,1879,60492
    template<input_iterator _Iter1, sentinel_for<_Iter1> _Sent1,1879,60492
	     random_access_iterator _Iter2,1880,60557
	     random_access_iterator _Iter2, sentinel_for<_Iter2> _Sent2,1880,60557
	&& sortable<sortable1884,60773
	&& indirect_strict_weak_order<indirect_strict_weak_order1885,60809
      constexpr partial_sort_copy_result<partial_sort_copy_result1888,60921
      operator()(operator()1889,60978
    template<input_range _Range1,1927,62209
    template<input_range _Range1, random_access_range _Range2,1927,62209
	&& sortable<sortable1931,62448
	&& indirect_strict_weak_order<indirect_strict_weak_order1932,62497
      constexpr partial_sort_copy_result<partial_sort_copy_result1935,62635
      operator()(operator()1937,62742
  struct __is_sorted_until_fn1949,63130
    template<forward_iterator _Iter,1951,63164
    template<forward_iterator _Iter, sentinel_for<_Iter> _Sent,1951,63164
	     indirect_strict_weak_order<indirect_strict_weak_order1953,63261
      operator()(operator()1956,63371
    template<forward_range _Range,1971,63762
	     indirect_strict_weak_order<indirect_strict_weak_order1972,63824
      operator()(operator()1975,63969
  struct __is_sorted_fn1984,64228
    template<forward_iterator _Iter,1986,64256
    template<forward_iterator _Iter, sentinel_for<_Iter> _Sent,1986,64256
	     indirect_strict_weak_order<indirect_strict_weak_order1988,64353
      operator()(operator()1991,64462
    template<forward_range _Range,2006,64847
	     indirect_strict_weak_order<indirect_strict_weak_order2007,64909
      operator()(operator()2010,65031
  struct __nth_element_fn2019,65278
    template<random_access_iterator _Iter,2021,65308
    template<random_access_iterator _Iter, sentinel_for<_Iter> _Sent,2021,65308
      requires sortable<_Iter, _Comp,2023,65442
      operator()(operator()2025,65509
    template<random_access_range _Range,2035,65833
      requires sortable<iterator_t<_Range>, _Comp,2037,65938
      operator()(operator()2039,66040
  struct __lower_bound_fn2049,66338
    template<forward_iterator _Iter,2051,66368
    template<forward_iterator _Iter, sentinel_for<_Iter> _Sent,2051,66368
	     typename _Tp,2052,66432
	     indirect_strict_weak_order<indirect_strict_weak_order2053,66479
      operator()(operator()2056,66601
    template<forward_range _Range,2078,67118
    template<forward_range _Range, typename _Tp,2078,67118
	     indirect_strict_weak_order<indirect_strict_weak_order2079,67194
      operator()(operator()2083,67356
  struct __upper_bound_fn2093,67639
    template<forward_iterator _Iter,2095,67669
    template<forward_iterator _Iter, sentinel_for<_Iter> _Sent,2095,67669
	     typename _Tp,2096,67733
	     indirect_strict_weak_order<indirect_strict_weak_order2097,67780
      operator()(operator()2100,67902
    template<forward_range _Range,2122,68419
    template<forward_range _Range, typename _Tp,2122,68419
	     indirect_strict_weak_order<indirect_strict_weak_order2123,68495
      operator()(operator()2127,68657
  struct __equal_range_fn2137,68940
    template<forward_iterator _Iter,2139,68970
    template<forward_iterator _Iter, sentinel_for<_Iter> _Sent,2139,68970
	     typename _Tp,2140,69034
	     indirect_strict_weak_order<indirect_strict_weak_order2141,69081
      operator()(operator()2144,69213
    template<forward_range _Range,2181,70117
	     typename _Tp,2182,70152
	     indirect_strict_weak_order<indirect_strict_weak_order2183,70199
      operator()(operator()2187,70361
  struct __binary_search_fn2197,70644
    template<forward_iterator _Iter,2199,70676
    template<forward_iterator _Iter, sentinel_for<_Iter> _Sent,2199,70676
	     typename _Tp,2200,70740
	     indirect_strict_weak_order<indirect_strict_weak_order2201,70787
      operator()(operator()2204,70908
    template<forward_range _Range,2214,71234
	     typename _Tp,2215,71269
	     indirect_strict_weak_order<indirect_strict_weak_order2216,71316
      operator()(operator()2220,71455
  struct __is_partitioned_fn2230,71742
    template<input_iterator _Iter,2232,71775
    template<input_iterator _Iter, sentinel_for<_Iter> _Sent,2232,71775
	     indirect_unary_predicate<indirect_unary_predicate2234,71870
      operator()(operator()2236,71954
    template<input_range _Range,2248,72309
	     indirect_unary_predicate<indirect_unary_predicate2249,72369
      operator()(operator()2252,72474
  struct __partition_fn2261,72726
    template<permutable _Iter,2263,72754
    template<permutable _Iter, sentinel_for<_Iter> _Sent,2263,72754
	     indirect_unary_predicate<indirect_unary_predicate2265,72845
      operator()(operator()2267,72940
    template<forward_range _Range,2318,74146
	     indirect_unary_predicate<indirect_unary_predicate2319,74208
      operator()(operator()2323,74382
  struct __stable_partition_fn2333,74644
    template<bidirectional_iterator _Iter,2335,74679
    template<bidirectional_iterator _Iter, sentinel_for<_Iter> _Sent,2335,74679
	     indirect_unary_predicate<indirect_unary_predicate2337,74782
      operator()(operator()2340,74900
    template<bidirectional_range _Range,2350,75225
	     indirect_unary_predicate<indirect_unary_predicate2351,75293
      operator()(operator()2355,75457
    struct in_out_out_result2366,75779
      [[no_unique_address]] _Iter  in;2368,75814
      [[no_unique_address]] _Out1 out1;2369,75853
      [[no_unique_address]] _Out2 out2;2370,75893
      template<typename _IIter,2372,75934
      template<typename _IIter, typename _OOut1,2372,75934
      template<typename _IIter,2380,76237
      template<typename _IIter, typename _OOut1,2380,76237
	requires convertible_to<convertible_to2381,76303
	  && convertible_to<convertible_to2382,76343
	  && convertible_to<convertible_to2383,76379
  struct __partition_copy_fn2392,76688
    template<input_iterator _Iter,2394,76721
    template<input_iterator _Iter, sentinel_for<_Iter> _Sent,2394,76721
	     weakly_incrementable _Out1,2395,76783
	     weakly_incrementable _Out1, weakly_incrementable _Out2,2395,76783
	     indirect_unary_predicate<indirect_unary_predicate2397,76878
      requires indirectly_copyable<indirectly_copyable2398,76941
	&& indirectly_copyable<indirectly_copyable2399,76990
      constexpr partition_copy_result<partition_copy_result2400,77028
      operator()(operator()2401,77087
    template<input_range _Range,2421,77555
    template<input_range _Range, weakly_incrementable _Out1,2421,77555
	     weakly_incrementable _Out2,2422,77616
	     indirect_unary_predicate<indirect_unary_predicate2424,77683
      requires indirectly_copyable<indirectly_copyable2426,77767
	&& indirectly_copyable<indirectly_copyable2427,77829
      constexpr partition_copy_result<partition_copy_result2428,77880
      operator()(operator()2429,77961
  struct __partition_point_fn2440,78309
    template<forward_iterator _Iter,2442,78343
    template<forward_iterator _Iter, sentinel_for<_Iter> _Sent,2442,78343
	     indirect_unary_predicate<indirect_unary_predicate2444,78440
      operator()(operator()2446,78525
    template<forward_range _Range,2468,79008
	     indirect_unary_predicate<indirect_unary_predicate2469,79070
      operator()(operator()2472,79198
  struct __merge_fn2484,79578
    template<input_iterator _Iter1,2486,79602
    template<input_iterator _Iter1, sentinel_for<_Iter1> _Sent1,2486,79602
	     input_iterator _Iter2,2487,79667
	     input_iterator _Iter2, sentinel_for<_Iter2> _Sent2,2487,79667
	     weakly_incrementable _Out,2488,79725
      requires mergeable<_Iter1, _Iter2,2490,79851
      requires mergeable<_Iter1, _Iter2, _Out,2490,79851
      requires mergeable<_Iter1, _Iter2, _Out, _Comp,2490,79851
      requires mergeable<_Iter1, _Iter2, _Out, _Comp, _Proj1,2490,79851
      constexpr merge_result<merge_result2491,79921
      operator()(operator()2492,79972
    template<input_range _Range1,2521,80774
    template<input_range _Range1, input_range _Range2,2521,80774
    template<input_range _Range1, input_range _Range2, weakly_incrementable _Out,2521,80774
      requires mergeable<iterator_t<_Range1>, iterator_t<iterator_t2524,80955
      requires mergeable<iterator_t<_Range1>, iterator_t<_Range2>, _Out,2524,80955
			 _Comp,2525,81028
			 _Comp, _Proj1,2525,81028
      constexpr merge_result<merge_result2526,81055
      operator()(operator()2529,81166
  struct __inplace_merge_fn2542,81569
    template<bidirectional_iterator _Iter,2544,81601
    template<bidirectional_iterator _Iter, sentinel_for<_Iter> _Sent,2544,81601
      requires sortable<_Iter, _Comp,2547,81741
      operator()(operator()2549,81798
    template<bidirectional_range _Range,2558,82109
      requires sortable<iterator_t<_Range>, _Comp,2560,82214
      operator()(operator()2562,82306
  struct __includes_fn2573,82623
    template<input_iterator _Iter1,2575,82650
    template<input_iterator _Iter1, sentinel_for<_Iter1> _Sent1,2575,82650
	     input_iterator _Iter2,2576,82715
	     input_iterator _Iter2, sentinel_for<_Iter2> _Sent2,2576,82715
	     indirect_strict_weak_order<indirect_strict_weak_order2578,82835
      operator()(operator()2582,82978
    template<input_range _Range1,2605,83561
    template<input_range _Range1, input_range _Range2,2605,83561
	     indirect_strict_weak_order<indirect_strict_weak_order2607,83678
      operator()(operator()2611,83847
  struct __set_union_fn2626,84347
    template<input_iterator _Iter1,2628,84375
    template<input_iterator _Iter1, sentinel_for<_Iter1> _Sent1,2628,84375
	     input_iterator _Iter2,2629,84440
	     input_iterator _Iter2, sentinel_for<_Iter2> _Sent2,2629,84440
	     weakly_incrementable _Out,2630,84498
      requires mergeable<_Iter1, _Iter2,2632,84624
      requires mergeable<_Iter1, _Iter2, _Out,2632,84624
      requires mergeable<_Iter1, _Iter2, _Out, _Comp,2632,84624
      requires mergeable<_Iter1, _Iter2, _Out, _Comp, _Proj1,2632,84624
      constexpr set_union_result<set_union_result2633,84694
      operator()(operator()2634,84749
    template<input_range _Range1,2671,85740
    template<input_range _Range1, input_range _Range2,2671,85740
    template<input_range _Range1, input_range _Range2, weakly_incrementable _Out,2671,85740
      requires mergeable<iterator_t<_Range1>, iterator_t<iterator_t2674,85921
      requires mergeable<iterator_t<_Range1>, iterator_t<_Range2>, _Out,2674,85921
			 _Comp,2675,85994
			 _Comp, _Proj1,2675,85994
      constexpr set_union_result<set_union_result2676,86021
      operator()(operator()2678,86125
  struct __set_intersection_fn2694,86673
    template<input_iterator _Iter1,2696,86708
    template<input_iterator _Iter1, sentinel_for<_Iter1> _Sent1,2696,86708
	     input_iterator _Iter2,2697,86773
	     input_iterator _Iter2, sentinel_for<_Iter2> _Sent2,2697,86773
	     weakly_incrementable _Out,2698,86831
      requires mergeable<_Iter1, _Iter2,2700,86957
      requires mergeable<_Iter1, _Iter2, _Out,2700,86957
      requires mergeable<_Iter1, _Iter2, _Out, _Comp,2700,86957
      requires mergeable<_Iter1, _Iter2, _Out, _Comp, _Proj1,2700,86957
      constexpr set_intersection_result<set_intersection_result2701,87027
      operator()(operator()2702,87089
    template<input_range _Range1,2729,87976
    template<input_range _Range1, input_range _Range2,2729,87976
    template<input_range _Range1, input_range _Range2, weakly_incrementable _Out,2729,87976
      requires mergeable<iterator_t<_Range1>, iterator_t<iterator_t2732,88157
      requires mergeable<iterator_t<_Range1>, iterator_t<_Range2>, _Out,2732,88157
			 _Comp,2733,88230
			 _Comp, _Proj1,2733,88230
      constexpr set_intersection_result<set_intersection_result2734,88257
      operator()(operator()2736,88368
  struct __set_difference_fn2752,88898
    template<input_iterator _Iter1,2754,88931
    template<input_iterator _Iter1, sentinel_for<_Iter1> _Sent1,2754,88931
	     input_iterator _Iter2,2755,88996
	     input_iterator _Iter2, sentinel_for<_Iter2> _Sent2,2755,88996
	     weakly_incrementable _Out,2756,89054
      requires mergeable<_Iter1, _Iter2,2758,89180
      requires mergeable<_Iter1, _Iter2, _Out,2758,89180
      requires mergeable<_Iter1, _Iter2, _Out, _Comp,2758,89180
      requires mergeable<_Iter1, _Iter2, _Out, _Comp, _Proj1,2758,89180
      constexpr set_difference_result<set_difference_result2759,89250
      operator()(operator()2760,89302
    template<input_range _Range1,2787,90024
    template<input_range _Range1, input_range _Range2,2787,90024
    template<input_range _Range1, input_range _Range2, weakly_incrementable _Out,2787,90024
      requires mergeable<iterator_t<_Range1>, iterator_t<iterator_t2790,90205
      requires mergeable<iterator_t<_Range1>, iterator_t<_Range2>, _Out,2790,90205
			 _Comp,2791,90278
			 _Comp, _Proj1,2791,90278
      constexpr set_difference_result<set_difference_result2792,90305
      operator()(operator()2793,90379
  struct __set_symmetric_difference_fn2810,90951
    template<input_iterator _Iter1,2812,90994
    template<input_iterator _Iter1, sentinel_for<_Iter1> _Sent1,2812,90994
	     input_iterator _Iter2,2813,91059
	     input_iterator _Iter2, sentinel_for<_Iter2> _Sent2,2813,91059
	     weakly_incrementable _Out,2814,91117
      requires mergeable<_Iter1, _Iter2,2816,91243
      requires mergeable<_Iter1, _Iter2, _Out,2816,91243
      requires mergeable<_Iter1, _Iter2, _Out, _Comp,2816,91243
      requires mergeable<_Iter1, _Iter2, _Out, _Comp, _Proj1,2816,91243
      constexpr set_symmetric_difference_result<set_symmetric_difference_result2817,91313
      operator()(operator()2818,91383
    template<input_range _Range1,2853,92364
    template<input_range _Range1, input_range _Range2,2853,92364
    template<input_range _Range1, input_range _Range2, weakly_incrementable _Out,2853,92364
      requires mergeable<iterator_t<_Range1>, iterator_t<iterator_t2856,92545
      requires mergeable<iterator_t<_Range1>, iterator_t<_Range2>, _Out,2856,92545
			 _Comp,2857,92618
			 _Comp, _Proj1,2857,92618
      constexpr set_symmetric_difference_result<set_symmetric_difference_result2858,92645
      operator()(operator()2861,92771
  struct __max_fn2876,93258
    template<typename _Tp,2878,93280
	     indirect_strict_weak_order<indirect_strict_weak_order2879,93334
      operator()(operator()2882,93454
    template<input_range _Range,2893,93697
	     indirect_strict_weak_order<indirect_strict_weak_order2894,93757
      operator()(operator()2899,93993
    template<copyable _Tp,2916,94453
	     indirect_strict_weak_order<indirect_strict_weak_order2917,94507
      operator()(operator()2920,94620
  struct __clamp_fn2930,94856
    template<typename _Tp,2932,94880
	     indirect_strict_weak_order<indirect_strict_weak_order2933,94934
      operator()(operator()2936,95054
    struct min_max_result2955,95621
      [[no_unique_address]] _Tp min;2957,95653
      [[no_unique_address]] _Tp max;2958,95690
	requires convertible_to<convertible_to2967,95908
  struct __minmax_fn2976,96118
    template<typename _Tp,2978,96143
	     indirect_strict_weak_order<indirect_strict_weak_order2979,96197
      operator()(operator()2982,96332
    template<input_range _Range,2993,96589
	     indirect_strict_weak_order<indirect_strict_weak_order2994,96649
      operator()(operator()2998,96891
    template<copyable _Tp,3053,98779
	     indirect_strict_weak_order<indirect_strict_weak_order3054,98833
      operator()(operator()3057,98961
  struct __min_element_fn3067,99203
    template<forward_iterator _Iter,3069,99233
    template<forward_iterator _Iter, sentinel_for<_Iter> _Sent,3069,99233
	     indirect_strict_weak_order<indirect_strict_weak_order3071,99330
      operator()(operator()3074,99440
    template<forward_range _Range,3091,99801
	     indirect_strict_weak_order<indirect_strict_weak_order3092,99863
      operator()(operator()3095,100008
  struct __max_element_fn3104,100259
    template<forward_iterator _Iter,3106,100289
    template<forward_iterator _Iter, sentinel_for<_Iter> _Sent,3106,100289
	     indirect_strict_weak_order<indirect_strict_weak_order3108,100386
      operator()(operator()3111,100496
    template<forward_range _Range,3128,100857
	     indirect_strict_weak_order<indirect_strict_weak_order3129,100919
      operator()(operator()3132,101064
  struct __minmax_element_fn3144,101400
    template<forward_iterator _Iter,3146,101433
    template<forward_iterator _Iter, sentinel_for<_Iter> _Sent,3146,101433
	     indirect_strict_weak_order<indirect_strict_weak_order3148,101530
      operator()(operator()3151,101663
    template<forward_range _Range,3202,103247
	     indirect_strict_weak_order<indirect_strict_weak_order3203,103309
      operator()(operator()3206,103477
  struct __lexicographical_compare_fn3215,103734
    template<input_iterator _Iter1,3217,103776
    template<input_iterator _Iter1, sentinel_for<_Iter1> _Sent1,3217,103776
	     input_iterator _Iter2,3218,103841
	     input_iterator _Iter2, sentinel_for<_Iter2> _Sent2,3218,103841
	     indirect_strict_weak_order<indirect_strict_weak_order3220,103961
      operator()(operator()3224,104104
    template<input_range _Range1,3304,106538
    template<input_range _Range1, input_range _Range2,3304,106538
	     indirect_strict_weak_order<indirect_strict_weak_order3306,106655
      operator()(operator()3310,106824
  private:private3319,107143
    struct in_found_result3328,107448
      [[no_unique_address]] _Iter in;3330,107481
      bool found;3331,107519
	requires convertible_to<convertible_to3340,107730
  struct __next_permutation_fn3349,107952
    template<bidirectional_iterator _Iter,3351,107987
    template<bidirectional_iterator _Iter, sentinel_for<_Iter> _Sent,3351,107987
      requires sortable<_Iter, _Comp,3353,108121
      operator()(operator()3355,108213
    template<bidirectional_range _Range,3395,109088
      requires sortable<iterator_t<_Range>, _Comp,3397,109193
      operator()(operator()3399,109320
  struct __prev_permutation_fn3411,109669
    template<bidirectional_iterator _Iter,3413,109704
    template<bidirectional_iterator _Iter, sentinel_for<_Iter> _Sent,3413,109704
      requires sortable<_Iter, _Comp,3415,109838
      operator()(operator()3417,109930
    template<bidirectional_range _Range,3457,110805
      requires sortable<iterator_t<_Range>, _Comp,3459,110910
      operator()(operator()3461,111037
#define __cpp_lib_ranges_contains 3472,111325
  struct __contains_fn3474,111368
    template<input_iterator _Iter,3476,111395
    template<input_iterator _Iter, sentinel_for<_Iter> _Sent,3476,111395
	    typename _Tp,3477,111457
					 projected<projected3479,111562
      operator()(operator()3481,111626
    template<input_range _Range,3484,111815
    template<input_range _Range, typename _Tp,3484,111815
					 projected<projected3486,111948
      operator()(operator()3488,112025
  struct __contains_subrange_fn3494,112245
    template<forward_iterator _Iter1,3496,112281
    template<forward_iterator _Iter1, sentinel_for<_Iter1> _Sent1,3496,112281
	     forward_iterator _Iter2,3497,112348
	     forward_iterator _Iter2, sentinel_for<_Iter2> _Sent2,3497,112348
      requires indirectly_comparable<_Iter1, _Iter2,3500,112511
      requires indirectly_comparable<_Iter1, _Iter2, _Pred,3500,112511
      requires indirectly_comparable<_Iter1, _Iter2, _Pred, _Proj1,3500,112511
      operator()(operator()3502,112608
    template<forward_range _Range1,3510,112942
    template<forward_range _Range1, forward_range _Range2,3510,112942
      requires indirectly_comparable<iterator_t<_Range1>, iterator_t<iterator_t3513,113104
				     _Pred,3514,113183
				     _Pred, _Proj1,3514,113183
      operator()(operator()3516,113236
#define __cpp_lib_ranges_iota 3527,113615
    struct out_value_result3530,113694
      [[no_unique_address]] _Out out;3532,113728
      [[no_unique_address]] _Tp value;3533,113766
      template<typename _Out2,3535,113806
      template<typename _Out2,3542,114024
	requires convertible_to<convertible_to3543,114070
	  && convertible_to<convertible_to3544,114108
  struct __iota_fn3553,114346
    template<input_or_output_iterator _Out,3555,114369
    template<input_or_output_iterator _Out, sentinel_for<_Out> _Sent,3555,114369
      requires indirectly_writable<indirectly_writable3556,114465
      constexpr iota_result<iota_result3557,114518
      operator()(operator()3558,114557
    template<weakly_incrementable _Tp,3569,114807
      constexpr iota_result<iota_result3570,114879
      operator()(operator()3571,114941
#define __cpp_lib_ranges_find_last 3577,115119
  struct __find_last_fn3579,115163
    template<forward_iterator _Iter,3581,115191
    template<forward_iterator _Iter, sentinel_for<_Iter> _Sent,3581,115191
    template<forward_iterator _Iter, sentinel_for<_Iter> _Sent, typename _Tp,3581,115191
      requires indirect_binary_predicate<ranges::equal_to, projected<projected3582,115296
      operator()(operator()3584,115424
    template<forward_range _Range,3612,116234
    template<forward_range _Range, typename _Tp,3612,116234
      requires indirect_binary_predicate<ranges::equal_to, projected<projected3613,116310
      operator()(operator()3615,116463
  struct __find_last_if_fn3621,116685
    template<forward_iterator _Iter,3623,116716
    template<forward_iterator _Iter, sentinel_for<_Iter> _Sent,3623,116716
	     indirect_unary_predicate<indirect_unary_predicate3624,116807
      operator()(operator()3626,116902
    template<forward_range _Range,3654,117729
	     indirect_unary_predicate<indirect_unary_predicate3655,117791
      operator()(operator()3657,117911
  struct __find_last_if_not_fn3663,118143
    template<forward_iterator _Iter,3665,118178
    template<forward_iterator _Iter, sentinel_for<_Iter> _Sent,3665,118178
	     indirect_unary_predicate<indirect_unary_predicate3666,118269
      operator()(operator()3668,118364
    template<forward_range _Range,3696,119197
	     indirect_unary_predicate<indirect_unary_predicate3697,119259
      operator()(operator()3699,119379
#define __cpp_lib_ranges_fold 3705,119619
    struct in_value_result3708,119699
      [[no_unique_address]] _Iter in;3710,119732
      [[no_unique_address]] _Tp value;3711,119770
      template<typename _Iter2,3713,119810
      template<typename _Iter2,3720,120045
	requires convertible_to<convertible_to3721,120092
	  && convertible_to<convertible_to3722,120132
  namespace __detail3728,120290
      class __flipped3731,120342
	_Fp _M_f;3733,120372
      public:public3735,120384
      template<typename _Fp,3742,120559
      template<typename _Fp, typename _Tp,3742,120559
      template<typename _Fp, typename _Tp, typename _Iter,3742,120559
      template<typename _Fp,3748,120876
      template<typename _Fp, typename _Tp,3748,120876
	&& invocable<_Fp&, _Tp,3751,121040
	&& __indirectly_binary_left_foldable_impl3754,121229
      template <typename _Fp,3757,121359
      template <typename _Fp, typename _Tp,3757,121359
	= __indirectly_binary_left_foldable<__flipped<_Fp>, _Tp,3759,121468
  struct __fold_left_with_iter_fn3765,121671
    template<typename _Ret_iter,3767,121709
	     typename _Iter,3768,121742
	     typename _Iter, typename _Sent,3768,121742
	     typename _Iter, typename _Sent, typename _Tp,3768,121742
      _S_impl(3770,121836
    template<input_iterator _Iter,3784,122364
    template<input_iterator _Iter, sentinel_for<_Iter> _Sent,3784,122364
    template<input_iterator _Iter, sentinel_for<_Iter> _Sent, typename _Tp,3784,122364
	     __detail::__indirectly_binary_left_foldable<__detail::__indirectly_binary_left_foldable3785,122440
      operator()(operator()3787,122528
    template<input_range _Range,3794,122741
    template<input_range _Range, typename _Tp,3794,122741
	     __detail::__indirectly_binary_left_foldable<__detail::__indirectly_binary_left_foldable3795,122788
      operator()(operator()3797,122889
  struct __fold_left_fn3807,123192
    template<input_iterator _Iter,3809,123220
    template<input_iterator _Iter, sentinel_for<_Iter> _Sent,3809,123220
    template<input_iterator _Iter, sentinel_for<_Iter> _Sent, typename _Tp,3809,123220
	     __detail::__indirectly_binary_left_foldable<__detail::__indirectly_binary_left_foldable3810,123296
      operator()(operator()3812,123384
    template<input_range _Range,3818,123588
    template<input_range _Range, typename _Tp,3818,123588
	     __detail::__indirectly_binary_left_foldable<__detail::__indirectly_binary_left_foldable3819,123635
      operator()(operator()3821,123736
  struct __fold_left_first_with_iter_fn3830,124063
    template<typename _Ret_iter,3832,124107
    template<typename _Ret_iter, typename _Iter,3832,124107
    template<typename _Ret_iter, typename _Iter, typename _Sent,3832,124107
      _S_impl(3834,124214
    template<input_iterator _Iter,3849,124760
    template<input_iterator _Iter, sentinel_for<_Iter> _Sent,3849,124760
	     __detail::__indirectly_binary_left_foldable<__detail::__indirectly_binary_left_foldable3850,124822
      requires constructible_from<constructible_from3851,124905
      operator()(operator()3853,125006
    template<input_range _Range,3859,125182
	     __detail::__indirectly_binary_left_foldable<__detail::__indirectly_binary_left_foldable3860,125215
      requires constructible_from<constructible_from3861,125313
      operator()(operator()3863,125418
  struct __fold_left_first_fn3872,125696
    template<input_iterator _Iter,3874,125730
    template<input_iterator _Iter, sentinel_for<_Iter> _Sent,3874,125730
	     __detail::__indirectly_binary_left_foldable<__detail::__indirectly_binary_left_foldable3875,125792
      requires constructible_from<constructible_from3876,125875
      operator()(operator()3878,125976
    template<input_range _Range,3884,126154
	     __detail::__indirectly_binary_left_foldable<__detail::__indirectly_binary_left_foldable3885,126187
      requires constructible_from<constructible_from3886,126285
      operator()(operator()3888,126390
  struct __fold_right_fn3894,126582
    template<bidirectional_iterator _Iter,3896,126611
    template<bidirectional_iterator _Iter, sentinel_for<_Iter> _Sent,3896,126611
    template<bidirectional_iterator _Iter, sentinel_for<_Iter> _Sent, typename _Tp,3896,126611
	     __detail::__indirectly_binary_right_foldable<__detail::__indirectly_binary_right_foldable3897,126695
      operator()(operator()3899,126784
    template<bidirectional_range _Range,3913,127229
    template<bidirectional_range _Range, typename _Tp,3913,127229
	     __detail::__indirectly_binary_right_foldable<__detail::__indirectly_binary_right_foldable3914,127284
      operator()(operator()3916,127386
  struct __fold_right_last_fn3922,127599
    template<bidirectional_iterator _Iter,3924,127633
    template<bidirectional_iterator _Iter, sentinel_for<_Iter> _Sent,3924,127633
	     __detail::__indirectly_binary_right_foldable<__detail::__indirectly_binary_right_foldable3925,127703
      requires constructible_from<constructible_from3926,127787
      operator()(operator()3928,127888
    template<bidirectional_range _Range,3943,128340
	     __detail::__indirectly_binary_right_foldable<__detail::__indirectly_binary_right_foldable3944,128381
      requires constructible_from<constructible_from3945,128480
      operator()(operator()3947,128585
#define __cpp_lib_shift 3955,128815
    shift_left(3958,128916
    shift_right(3973,129388

/usr/include/c++/13/bits/ranges_algobase.h,3878
#define _RANGES_ALGOBASE_H 31,1283
namespace std _GLIBCXX_VISIBILITY(43,1612
  struct __equal_fn73,2430
    template<input_iterator _Iter1,75,2454
    template<input_iterator _Iter1, sentinel_for<_Iter1> _Sent1,75,2454
	     input_iterator _Iter2,76,2519
	     input_iterator _Iter2, sentinel_for<_Iter2> _Sent2,76,2519
      requires indirectly_comparable<_Iter1, _Iter2,79,2680
      requires indirectly_comparable<_Iter1, _Iter2, _Pred,79,2680
      requires indirectly_comparable<_Iter1, _Iter2, _Pred, _Proj1,79,2680
      operator()(operator()81,2777
    template<input_range _Range1,142,4839
    template<input_range _Range1, input_range _Range2,142,4839
      requires indirectly_comparable<iterator_t<_Range1>, iterator_t<iterator_t145,4997
				     _Pred,146,5076
				     _Pred, _Proj1,146,5076
      operator()(operator()148,5129
    struct in_out_result161,5535
      [[no_unique_address]] _Iter in;163,5566
      [[no_unique_address]] _Out out;164,5604
      template<typename _Iter2,166,5643
      template<typename _Iter2,173,5863
	requires convertible_to<convertible_to174,5911
	  && convertible_to<convertible_to175,5951
  struct __copy_fn295,9751
    template<input_iterator _Iter,297,9774
    template<input_iterator _Iter, sentinel_for<_Iter> _Sent,297,9774
      requires indirectly_copyable<indirectly_copyable299,9869
      constexpr copy_result<copy_result300,9917
      operator()(operator()301,9958
    template<input_range _Range,308,10161
      requires indirectly_copyable<indirectly_copyable309,10221
      constexpr copy_result<copy_result310,10282
      operator()(operator()311,10345
  struct __move_fn320,10542
    template<input_iterator _Iter,322,10565
    template<input_iterator _Iter, sentinel_for<_Iter> _Sent,322,10565
      requires indirectly_movable<indirectly_movable324,10660
      constexpr move_result<move_result325,10707
      operator()(operator()326,10748
    template<input_range _Range,333,10948
      requires indirectly_movable<indirectly_movable334,11008
      constexpr move_result<move_result335,11068
      operator()(operator()336,11131
  struct __copy_backward_fn436,14089
    template<bidirectional_iterator _Iter1,438,14121
    template<bidirectional_iterator _Iter1, sentinel_for<_Iter1> _Sent1,438,14121
      requires indirectly_copyable<indirectly_copyable440,14231
      constexpr copy_backward_result<copy_backward_result441,14282
      operator()(operator()442,14335
    template<bidirectional_range _Range,449,14555
      requires indirectly_copyable<indirectly_copyable450,14626
      constexpr copy_backward_result<copy_backward_result451,14688
      operator()(operator()452,14761
  struct __move_backward_fn461,14977
    template<bidirectional_iterator _Iter1,463,15009
    template<bidirectional_iterator _Iter1, sentinel_for<_Iter1> _Sent1,463,15009
      requires indirectly_movable<indirectly_movable465,15119
      constexpr move_backward_result<move_backward_result466,15169
      operator()(operator()467,15222
    template<bidirectional_range _Range,474,15439
      requires indirectly_movable<indirectly_movable475,15510
      constexpr move_backward_result<move_backward_result476,15571
      operator()(operator()477,15644
  struct __copy_n_fn489,15957
    template<input_iterator _Iter,491,15982
      requires indirectly_copyable<indirectly_copyable492,16044
      constexpr copy_n_result<copy_n_result493,16092
      operator()(operator()494,16135
  struct __fill_n_fn513,16591
    template<typename _Tp,515,16616
      operator()(operator()517,16698
  struct __fill_fn558,17675
    template<typename _Tp,560,17698
	     output_iterator<const _Tp&> _Out,561,17725
      operator()(operator()563,17812
    template<typename _Tp,587,18410
      operator()(operator()589,18514

/usr/include/c++/13/bits/ranges_base.h,3373
#define _GLIBCXX_RANGES_BASE_H 31,1295
namespace std _GLIBCXX_VISIBILITY(42,1532
  namespace __cust_access90,2815
    using std::ranges::__detail::__maybe_borrowed_range;92,2845
    using std::__detail::__range_iter_t;93,2902
    struct _Begin95,2944
	_S_noexcept(100,3033
	operator()[[nodiscard]](operator()[[nodiscard]]115,3472
    struct _End146,4281
	_S_noexcept(151,4368
	operator()[[nodiscard]](operator()[[nodiscard]]166,4813
    struct _RBegin203,5773
	_S_noexcept(208,5863
	operator()[[nodiscard]](operator()[[nodiscard]]231,6524
    struct _REnd261,7279
	_S_noexcept(266,7367
	operator()[[nodiscard]](operator()[[nodiscard]]289,8020
    struct _Size331,9113
	_S_noexcept(336,9201
	operator()[[nodiscard]](operator()[[nodiscard]]354,9828
    struct _SSize367,10266
	requires requires 372,10429
	operator()[[nodiscard]](operator()[[nodiscard]]374,10493
    struct _Empty414,11795
	_S_noexcept(419,11884
	operator()[[nodiscard]](operator()[[nodiscard]]435,12340
    struct _Data459,12992
	_S_noexcept(464,13080
	operator()[[nodiscard]](operator()[[nodiscard]]476,13387
  inline namespace __cust487,13617
    inline constexpr __cust_access::_Begin begin{begin489,13647
    inline constexpr __cust_access::_End end{end490,13699
    inline constexpr __cust_access::_RBegin rbegin{rbegin491,13747
    inline constexpr __cust_access::_REnd rend{rend492,13801
    inline constexpr __cust_access::_Size size{size493,13851
    inline constexpr __cust_access::_SSize ssize{ssize494,13901
    inline constexpr __cust_access::_Empty empty{empty495,13953
    inline constexpr __cust_access::_Data data{data496,14005
  namespace __detail554,15712
    template<typename _Tp,556,15737
  struct view_base 569,16280
  namespace __cust_access627,18309
      __possibly_const_range(632,18417
    template<typename _To,641,18705
      constexpr decltype(642,18746
    struct _CBegin654,19011
	operator()(operator()660,19136
	operator()(operator()673,19586
	operator()(operator()688,19959
	operator()(operator()701,20403
    struct _CRBegin710,20641
	operator()(operator()716,20767
	operator()(operator()729,21234
    struct _CREnd738,21481
	operator()(operator()744,21605
	operator()(operator()757,22064
    struct _CData766,22305
	operator()(operator()772,22436
	operator()(operator()780,22760
  inline namespace __cust791,23033
    inline constexpr __cust_access::_CBegin cbegin{cbegin793,23063
    inline constexpr __cust_access::_CEnd cend{cend794,23117
    inline constexpr __cust_access::_CRBegin crbegin{crbegin795,23167
    inline constexpr __cust_access::_CREnd crend{crend796,23223
    inline constexpr __cust_access::_CData cdata{cdata797,23275
  namespace __detail800,23332
      operator()(operator()824,24114
      operator()(operator()858,24715
      operator()(operator()873,25109
      operator()[[nodiscard]](operator()[[nodiscard]]939,26544
      operator()(operator()953,26868
      operator()(operator()961,27065
      operator()(operator()979,27489
      operator()(operator()988,27642
      operator()(operator()997,27868
      operator()(operator()1006,28085
      operator()(operator()1022,28418
      operator()(operator()1031,28569
      operator()(operator()1040,28769
  struct dangling1052,29069
      constexpr dangling(1056,29168

/usr/include/c++/13/bits/ranges_cmp.h,1397
#define _RANGES_CMP_H 31,1293
namespace std _GLIBCXX_VISIBILITY(37,1390
  struct identity47,1681
      operator(52,1772
#define __cpp_lib_ranges 61,2033
#define __cpp_lib_ranges 63,2072
namespace ranges66,2113
  namespace __detail68,2132
    template<typename _Tp,73,2345
	  && convertible_to<convertible_to76,2494
	  && convertible_to<convertible_to77,2542
  struct equal_to90,3046
    template<typename _Tp,92,3068
      requires equality_comparable_with<equality_comparable_with93,3109
      operator()(operator()95,3180
  struct not_equal_to103,3462
    template<typename _Tp,105,3488
      requires equality_comparable_with<equality_comparable_with106,3529
      operator()(operator()108,3600
  struct less116,3885
    template<typename _Tp,118,3903
      requires totally_ordered_with<totally_ordered_with119,3944
      operator()(operator()121,4011
  struct greater143,4698
    template<typename _Tp,145,4719
      requires totally_ordered_with<totally_ordered_with146,4760
      operator()(operator()148,4827
  struct greater_equal156,5115
    template<typename _Tp,158,5142
      requires totally_ordered_with<totally_ordered_with159,5183
      operator()(operator()161,5250
  struct less_equal169,5536
    template<typename _Tp,171,5560
      requires totally_ordered_with<totally_ordered_with172,5601
      operator()(operator()174,5668

/usr/include/c++/13/bits/ranges_uninitialized.h,3963
#define _RANGES_UNINITIALIZED_H 31,1286
namespace std _GLIBCXX_VISIBILITY(38,1406
  struct __destroy_fn81,2637
    template<__detail::__nothrow_input_iterator _Iter,83,2663
  namespace __detail97,3146
      struct _DestroyGuard101,3249
	_Iter _M_first;104,3299
	const _Iter* _M_cur;105,3316
	_DestroyGuard(109,3363
	release(114,3467
	~_DestroyGuard(117,3511
      struct _DestroyGuard<_DestroyGuard127,3754
	_DestroyGuard(130,3806
	release(134,3847
  struct __uninitialized_default_construct_fn139,3908
    template<__detail::__nothrow_forward_iterator _Iter,141,3958
      operator()(operator()145,4134
      operator()(operator()163,4737
  struct __uninitialized_default_construct_n_fn172,4947
      operator()(operator()177,5126
  struct __uninitialized_value_construct_fn196,5700
    template<__detail::__nothrow_forward_iterator _Iter,198,5748
      operator()(operator()202,5924
      operator()(operator()221,6563
  struct __uninitialized_value_construct_n_fn230,6769
      operator()(operator()235,6946
  struct __uninitialized_copy_fn258,7663
    template<input_iterator _Iter,260,7700
    template<input_iterator _Iter, sentinel_for<_Iter> _ISent,260,7700
	     __detail::__nothrow_forward_iterator _Out,261,7763
      requires constructible_from<constructible_from263,7861
      uninitialized_copy_result<uninitialized_copy_result264,7940
      operator()(operator()265,7985
    template<input_range _IRange,291,8826
      requires constructible_from<constructible_from292,8903
      uninitialized_copy_result<uninitialized_copy_result294,8995
      operator()(operator()296,9091
  struct __uninitialized_copy_n_fn308,9460
    template<input_iterator _Iter,310,9499
    template<input_iterator _Iter, __detail::__nothrow_forward_iterator _Out,310,9499
      requires constructible_from<constructible_from312,9625
      uninitialized_copy_n_result<uninitialized_copy_n_result313,9704
      operator()(operator()314,9751
  struct __uninitialized_move_fn344,10704
    template<input_iterator _Iter,346,10741
    template<input_iterator _Iter, sentinel_for<_Iter> _ISent,346,10741
	     __detail::__nothrow_forward_iterator _Out,347,10804
      requires constructible_from<constructible_from349,10902
      uninitialized_move_result<uninitialized_move_result351,10994
      operator()(operator()352,11039
    template<input_range _IRange,381,12006
      requires constructible_from<constructible_from382,12083
      uninitialized_move_result<uninitialized_move_result384,12184
      operator()(operator()386,12280
  struct __uninitialized_move_n_fn398,12649
    template<input_iterator _Iter,400,12688
    template<input_iterator _Iter, __detail::__nothrow_forward_iterator _Out,400,12688
	requires constructible_from<constructible_from402,12814
      uninitialized_move_n_result<uninitialized_move_n_result404,12903
      operator()(operator()405,12950
  struct __uninitialized_fill_fn435,13920
    template<__detail::__nothrow_forward_iterator _Iter,437,13957
	     __detail::__nothrow_sentinel<_Iter> _Sent,438,14014
      requires constructible_from<constructible_from439,14077
      operator()(operator()441,14156
    template<__detail::__nothrow_forward_range _Range,457,14672
      requires constructible_from<constructible_from458,14741
      operator()(operator()460,14844
  struct __uninitialized_fill_n_fn468,15045
    template<__detail::__nothrow_forward_iterator _Iter,470,15084
      requires constructible_from<constructible_from471,15155
      operator()(operator()473,15234
  struct __construct_at_fn493,15846
    template<typename _Tp,495,15877
      operator()(operator()500,16040
  struct __destroy_at_fn511,16346
      operator()(operator()515,16427
    __destroy_fn::operator()(operator()530,16850
    __destroy_fn::operator()(operator()545,17327
  struct __destroy_n_fn550,17458
      operator()(operator()555,17612

/usr/include/c++/13/bits/ranges_util.h,6574
#define _RANGES_UTIL_H 31,1295
namespace std _GLIBCXX_VISIBILITY(38,1430
    class view_interface62,2187
      constexpr _Derived& _M_derived(65,2231
      constexpr const _Derived& _M_derived(72,2433
	_S_empty(84,2779
	_S_size(90,2973
      operator bool(operator bool120,3918
      operator bool(operator bool125,4118
	&& sized_sentinel_for<sized_sentinel_for143,4858
	&& sized_sentinel_for<sized_sentinel_for149,5093
  namespace __detail213,6869
    template<typename _From,215,6894
    template<typename _From,221,7128
	&& !__uses_nonqualification_pointer_conversion<__uses_nonqualification_pointer_conversion223,7243
    template<typename _Tp,238,7796
    template<typename _Tp, typename _Up,238,7796
	&& constructible_from<_Tp, _Up,241,7929
	&& __convertible_to_non_slicing<__convertible_to_non_slicing242,7967
	&& convertible_to<convertible_to243,8030
  namespace views 247,8108
  enum class subrange_kind 249,8168
  enum class subrange_kind : bool { unsized,249,8168
  enum class subrange_kind : bool { unsized, sized 249,8168
	operator _PairLike(operator _PairLike344,11370
namespace ranges469,14871
  struct __find_fn471,14890
    template<input_iterator _Iter,473,14913
    template<input_iterator _Iter, sentinel_for<_Iter> _Sent,473,14913
    template<input_iterator _Iter, sentinel_for<_Iter> _Sent, typename _Tp,473,14913
					 projected<projected476,15081
      operator()(operator()478,15146
    template<input_range _Range,487,15369
    template<input_range _Range, typename _Tp,487,15369
					 projected<projected489,15502
      operator()(operator()492,15608
  inline constexpr __find_fn find{find499,15798
  struct __find_if_fn501,15836
    template<input_iterator _Iter,503,15862
    template<input_iterator _Iter, sentinel_for<_Iter> _Sent,503,15862
	     indirect_unary_predicate<indirect_unary_predicate505,15957
      operator()(operator()507,16042
    template<input_range _Range,516,16275
	     indirect_unary_predicate<indirect_unary_predicate517,16335
      operator()(operator()520,16463
  inline constexpr __find_if_fn find_if{find_if527,16657
  struct __find_if_not_fn529,16701
    template<input_iterator _Iter,531,16731
    template<input_iterator _Iter, sentinel_for<_Iter> _Sent,531,16731
	     indirect_unary_predicate<indirect_unary_predicate533,16826
      operator()(operator()535,16911
    template<input_range _Range,544,17143
	     indirect_unary_predicate<indirect_unary_predicate545,17203
      operator()(operator()548,17331
  inline constexpr __find_if_not_fn find_if_not{find_if_not555,17525
  template<typename _Iter1,557,17577
    struct in_in_result558,17622
      [[no_unique_address]] _Iter1 in1;560,17652
      [[no_unique_address]] _Iter2 in2;561,17692
      template<typename _IIter1,563,17733
      template<typename _IIter1,570,17965
	requires convertible_to<convertible_to571,18016
	  && convertible_to<convertible_to572,18058
  template<typename _Iter1,578,18207
    using mismatch_result 579,18252
  struct __mismatch_fn581,18311
    template<input_iterator _Iter1,583,18338
    template<input_iterator _Iter1, sentinel_for<_Iter1> _Sent1,583,18338
	     input_iterator _Iter2,584,18403
	     input_iterator _Iter2, sentinel_for<_Iter2> _Sent2,584,18403
      requires indirectly_comparable<_Iter1, _Iter2,587,18564
      requires indirectly_comparable<_Iter1, _Iter2, _Pred,587,18564
      requires indirectly_comparable<_Iter1, _Iter2, _Pred, _Proj1,587,18564
      constexpr mismatch_result<mismatch_result588,18640
      operator()(operator()589,18688
    template<input_range _Range1,604,19132
    template<input_range _Range1, input_range _Range2,604,19132
      requires indirectly_comparable<iterator_t<_Range1>, iterator_t<iterator_t607,19290
				     _Pred,608,19369
				     _Pred, _Proj1,608,19369
      constexpr mismatch_result<mismatch_result609,19401
      operator()(operator()610,19475
  inline constexpr __mismatch_fn mismatch{mismatch620,19799
  struct __search_fn622,19845
    template<forward_iterator _Iter1,624,19870
    template<forward_iterator _Iter1, sentinel_for<_Iter1> _Sent1,624,19870
	     forward_iterator _Iter2,625,19937
	     forward_iterator _Iter2, sentinel_for<_Iter2> _Sent2,625,19937
      requires indirectly_comparable<_Iter1, _Iter2,628,20100
      requires indirectly_comparable<_Iter1, _Iter2, _Pred,628,20100
      requires indirectly_comparable<_Iter1, _Iter2, _Pred, _Proj1,628,20100
      operator()(operator()630,20209
    template<forward_range _Range1,668,21075
    template<forward_range _Range1, forward_range _Range2,668,21075
      requires indirectly_comparable<iterator_t<_Range1>, iterator_t<iterator_t671,21237
				     _Pred,672,21316
				     _Pred, _Proj1,672,21316
      operator()(operator()674,21393
  inline constexpr __search_fn search{search684,21717
  struct __min_fn686,21759
    template<typename _Tp,688,21781
	     indirect_strict_weak_order<indirect_strict_weak_order689,21835
      operator()(operator()692,21955
    template<input_range _Range,703,22198
	     indirect_strict_weak_order<indirect_strict_weak_order704,22258
      operator()(operator()709,22494
    template<copyable _Tp,726,22954
	     indirect_strict_weak_order<indirect_strict_weak_order727,23008
      operator()(operator()730,23121
  inline constexpr __min_fn min{min738,23321
  struct __adjacent_find_fn740,23357
    template<forward_iterator _Iter,742,23389
    template<forward_iterator _Iter, sentinel_for<_Iter> _Sent,742,23389
	     indirect_binary_predicate<indirect_binary_predicate744,23486
      operator()(operator()748,23635
    template<forward_range _Range,764,24022
	     indirect_binary_predicate<indirect_binary_predicate765,24084
      operator()(operator()769,24279
  inline constexpr __adjacent_find_fn adjacent_find{adjacent_find776,24478
  using ranges::get;780,24557
  template<typename _Iter,782,24579
  template<typename _Iter, typename _Sent,782,24579
    struct tuple_size<tuple_size783,24651
  template<typename _Iter,787,24757
  template<typename _Iter, typename _Sent,787,24757
    { using type 789,24896
  template<typename _Iter,791,24926
  template<typename _Iter, typename _Sent,791,24926
    { using type 793,25065
  template<typename _Iter,795,25095
  template<typename _Iter, typename _Sent,795,25095
    { using type 797,25240
  template<typename _Iter,799,25270
  template<typename _Iter, typename _Sent,799,25270
    { using type 801,25415

/usr/include/c++/13/bits/refwrap.h,1988
#define _GLIBCXX_REFWRAP_H 31,1297
namespace std _GLIBCXX_VISIBILITY(41,1504
    struct _Maybe_unary_or_binary_function 53,1869
    struct _Mem_fn_traits_base75,2629
	= _Maybe_unary_or_binary_function<_Res, _Class*_Class79,2725
#define _GLIBCXX_MEM_FN_TRAITS2(83,2869
#define _GLIBCXX_MEM_FN_TRAITS(97,3467
#undef _GLIBCXX_MEM_FN_TRAITS113,4106
#undef _GLIBCXX_MEM_FN_TRAITS2114,4136
    { typedef typename _Functor::result_type 124,4437
    struct _Weak_result_type_impl131,4662
    struct _Weak_result_type_impl<_Weak_result_type_impl137,4869
    { typedef _Res result_type;138,4946
    struct _Weak_result_type_impl<_Weak_result_type_impl142,5114
    { typedef _Res result_type;143,5194
    struct _Weak_result_type_impl<_Weak_result_type_impl147,5357
    { typedef _Res result_type;148,5437
    _Weak_result_type_impl<_Weak_result_type_impl153,5619
    { typedef _Res result_type;154,5695
    struct _Weak_result_type_memfun<_Weak_result_type_memfun172,6300
    struct _Weak_result_type180,6534
      typedef typename _Tp::argument_type 195,6930
      typedef typename _Tp::first_argument_type 209,7373
      typedef typename _Tp::second_argument_type 210,7442
    struct _Reference_wrapper_base220,7812
    struct _Reference_wrapper_base<_Reference_wrapper_base230,8179
    struct _Reference_wrapper_base<_Reference_wrapper_base235,8330
    struct _Reference_wrapper_base<_Reference_wrapper_base240,8464
    struct _Reference_wrapper_base<_Reference_wrapper_base245,8601
    struct _Reference_wrapper_base<_Reference_wrapper_base272,9526
    class reference_wrapper303,10453
      _Tp* _M_data;310,10733
      static _Tp* _S_fun(313,10781
      template<typename _Up,317,10903
	  = typename enable_if<!is_same<reference_wrapper, _Up2>::value>::type;type319,10989
      typedef _Tp type;322,11075
      template<typename _Up,327,11248
      operator _Tp&(operator _Tp&341,11738
      get(346,11844
	operator()(operator()352,12003

/usr/include/c++/13/bits/regex.h,14237
namespace std _GLIBCXX_VISIBILITY(35,1338
  enum class _RegexExecutorPolicy 49,1626
  enum class _RegexExecutorPolicy : int { _S_auto,49,1626
  enum class _RegexExecutorPolicy : int { _S_auto, _S_alternate 49,1626
    struct __is_contiguous_iter 65,2164
    struct __is_contiguous_iter<__is_contiguous_iter68,2240
    struct __is_contiguous_iter<__is_contiguous_iter71,2337
    class regex_traits96,2966
      typedef _Ch_type				char_type;99,3007
      typedef std::basic_string<char_type>	string_type;100,3044
      typedef std::locale			locale_type;101,3100
      struct _RegexMask104,3155
	  typedef std::ctype_base::mask _BaseType;106,3182
	  _BaseType _M_base;107,3226
	  unsigned char _M_extended;108,3248
	  constexpr _RegexMask(112,3387
	  operator&(118,3551
	  operator|(125,3720
	  operator^(132,3889
	  operator~(139,4058
	  operator&=(operator&=143,4145
	  operator|=(operator|=147,4236
	  operator^=(operator^=151,4327
	  operator==(operator==155,4421
	  operator!=(operator!=164,4662
      typedef _RegexMask char_class_type;170,4763
      regex_traits(176,4890
      length(189,5369
      translate(200,5659
      translate_nocase(213,6089
	typedef std::ctype<char_type> __ctype_type;215,6141
	transform(242,7220
	  typedef std::collate<char_type> __collate_type;244,7277
	transform_primary(266,8195
	  typedef std::ctype<char_type> __ctype_type;274,8531
      imbue(378,12342
      getloc(389,12567
      locale_type _M_locale;393,12632
  template<typename _Ch_type,417,13588
  template<typename _Ch_type, typename _Rx_traits 417,13588
      typedef _Ch_type				  value_type;425,13857
      typedef _Rx_traits			  traits_type;426,13897
      typedef typename traits_type::string_type 427,13939
      typedef regex_constants::syntax_option_type flag_type;428,14002
      typedef typename traits_type::locale_type 429,14063
      operator=(operator=579,19485
      operator=(operator=591,19841
	operator=(operator=602,20194
      typedef std::shared_ptr<const __detail::_NFA<_Rx_traits>> _AutomatonPtr;803,26567
  template<typename _Ch,830,27366
    basic_regex<_Ch, _Tr>::icase;icase832,27455
  template<typename _Ch,834,27490
    basic_regex<_Ch, _Tr>::nosubs;nosubs836,27579
  template<typename _Ch,838,27615
    basic_regex<_Ch, _Tr>::optimize;optimize840,27704
  template<typename _Ch,842,27742
    basic_regex<_Ch, _Tr>::collate;collate844,27831
  template<typename _Ch,846,27868
    basic_regex<_Ch, _Tr>::ECMAScript;ECMAScript848,27957
  template<typename _Ch,850,27997
    basic_regex<_Ch, _Tr>::basic;basic852,28086
  template<typename _Ch,854,28121
    basic_regex<_Ch, _Tr>::extended;extended856,28210
  template<typename _Ch,858,28248
    basic_regex<_Ch, _Tr>::awk;awk860,28337
  template<typename _Ch,862,28370
    basic_regex<_Ch, _Tr>::grep;grep864,28459
  template<typename _Ch,866,28493
    basic_regex<_Ch, _Tr>::egrep;egrep868,28582
      -> basic_regex<basic_regex875,28806
  typedef basic_regex<char>    regex;879,28938
  typedef basic_regex<wchar_t> wregex;883,29066
  template<typename _Ch_type,894,29337
    swap(896,29404
    class sub_match920,30349
      typedef iterator_traits<_BiIter>			__iter_traits;925,30460
      typedef typename __iter_traits::value_type      	value_type;928,30530
      typedef typename __iter_traits::difference_type 	difference_type;929,30597
      typedef _BiIter					iterator;930,30669
      typedef basic_string<value_type>			string_type;931,30705
      _GLIBCXX_DOXYGEN_ONLY(iterator first; iterator second;933,30760
      bool matched;935,30823
      constexpr sub_match(937,30844
      length(941,30972
      operator string_type(operator string_type954,31474
      str(963,31690
      compare(980,32212
      compare(994,32710
      compare(998,32811
      _M_compare(1005,33005
      swap(1013,33294
      struct __string_view1021,33524
	__string_view(1027,33645
	__string_view(1030,33738
	__string_view(1033,33840
	compare(1037,33943
      template<typename _Iter 1057,34545
	_M_str(1060,34670
      template<typename _Iter 1069,34922
	_M_str(1072,35046
  typedef sub_match<const char*>	     csub_match;1078,35169
  typedef sub_match<string::const_iterator>  ssub_match;1081,35284
  typedef sub_match<const wchar_t*>	  wcsub_match;1085,35445
  typedef sub_match<wstring::const_iterator> wssub_match;1088,35557
    operator==(operator==1103,36009
    operator<=>(operator<=>1116,36531
    operator!=(operator!=1132,37163
    operator<(1143,37587
    operator<=(operator<=1154,38017
    operator>=(operator>=1165,38449
    operator>(1176,38873
  template<typename _Bi_iter,1183,39119
  template<typename _Bi_iter, typename _Ch_traits,1183,39119
    using __sub_match_string 1184,39190
  template<typename _Bi_iter,1197,39636
  template<typename _Bi_iter, typename _Ch_traits,1197,39636
    operator==(operator==1199,39723
  template<typename _Bi_iter,1210,40177
  template<typename _Bi_iter, typename _Ch_traits,1210,40177
    operator!=(operator!=1212,40264
  template<typename _Bi_iter,1222,40656
  template<typename _Bi_iter, typename _Ch_traits,1222,40656
    operator<(1224,40743
  template<typename _Bi_iter,1234,41164
  template<typename _Bi_iter, typename _Ch_traits,1234,41164
    operator>(1236,41251
  template<typename _Bi_iter,1246,41645
  template<typename _Bi_iter, typename _Ch_traits,1246,41645
    operator>=(operator>=1248,41732
  template<typename _Bi_iter,1258,42131
  template<typename _Bi_iter, typename _Ch_traits,1258,42131
    operator<=(operator<=1260,42218
  template<typename _Bi_iter,1272,42663
  template<typename _Bi_iter, typename _Ch_traits,1272,42663
    operator==(operator==1274,42750
  template<typename _Bi_iter,1286,43272
  template<typename _Bi_iter, typename _Ch_traits,1286,43272
    operator<=>(operator<=>1288,43356
  template<typename _Bi_iter,1303,43922
  template<typename _Bi_iter, typename _Ch_traits,1303,43922
    operator!=(operator!=1305,44009
  template<typename _Bi_iter,1315,44401
  template<typename _Bi_iter, typename _Ch_traits,1315,44401
    operator<(1317,44488
  template<typename _Bi_iter,1327,44909
  template<typename _Bi_iter, typename _Ch_traits,1327,44909
    operator>(1329,44996
  template<typename _Bi_iter,1339,45390
  template<typename _Bi_iter, typename _Ch_traits,1339,45390
    operator>=(operator>=1341,45477
  template<typename _Bi_iter,1351,45876
  template<typename _Bi_iter, typename _Ch_traits,1351,45876
    operator<=(operator<=1353,45963
    operator==(operator==1366,46442
    operator!=(operator!=1379,46930
    operator<(1391,47381
    operator>(1403,47837
    operator>=(operator>=1415,48290
    operator<=(operator<=1427,48748
    operator==(operator==1441,49253
    operator<=>(operator<=>1456,49819
    operator!=(operator!=1473,50489
    operator<(1485,50940
    operator>(1497,51396
    operator>=(operator>=1509,51849
    operator<=(operator<=1521,52307
    operator==(operator==1534,52768
    operator!=(operator!=1547,53268
    operator<(1560,53719
    operator>(1573,54199
    operator>=(operator>=1586,54652
    operator<=(operator<=1599,55110
    operator==(operator==1613,55603
    operator<=>(operator<=>1629,56182
    operator!=(operator!=1647,56870
    operator<(1660,57321
    operator>(1673,57801
    operator>=(operator>=1686,58254
    operator<=(operator<=1699,58712
  template<typename _Ch_type,1712,59116
  template<typename _Ch_type, typename _Ch_traits,1712,59116
    operator<<(1715,59238
  template<typename _Bi_iter,1746,60597
	   typename _Alloc 1747,60627
      typedef std::vector<sub_match<_Bi_iter>, _Alloc>     _Base_type;1768,61298
      typedef _GLIBCXX_STD_C::vector<sub_match<_Bi_iter>, _Alloc> _Unchecked;1770,61448
      typedef std::iterator_traits<_Bi_iter>   	   	   __iter_traits;1771,61526
      typedef regex_constants::match_flag_type		   match_flag_type;1772,61596
      typedef sub_match<_Bi_iter>			   value_type;1779,61743
      typedef const value_type&				   const_reference;1780,61794
      typedef value_type&				   reference;1781,61849
      typedef typename _Base_type::const_iterator	1782,61892
      typedef const_iterator				   iterator;1783,61961
      typedef typename __iter_traits::difference_type	1784,62006
      typedef typename allocator_traits<allocator_traits1785,62080
      typedef _Alloc					   allocator_type;1786,62150
      typedef typename __iter_traits::value_type 1787,62194
      typedef std::basic_string<char_type>		   string_type;1788,62258
  typedef match_results<const char*>		 cmatch;2168,72973
  typedef match_results<string::const_iterator>	 smatch;2169,73020
  typedef match_results<const wchar_t*>		 wcmatch;2171,73105
  typedef match_results<wstring::const_iterator> wsmatch;2172,73156
  template<typename _Bi_iter,2184,73446
    operator==(operator==2186,73509
  template<typename _Bi_iter,2211,74269
    operator!=(operator!=2213,74329
  template<typename _Bi_iter,2228,74734
    swap(2230,74797
    regex_match(2261,75737
  template<typename _Bi_iter,2286,76624
  template<typename _Bi_iter, typename _Ch_type,2286,76624
    regex_match(2288,76710
  template<typename _Ch_type,2311,77471
  template<typename _Ch_type, typename _Alloc,2311,77471
    regex_match(2313,77555
  template<typename _Ch_traits,2334,78273
  template<typename _Ch_traits, typename _Ch_alloc,2334,78273
	   typename _Alloc,2335,78325
	   typename _Alloc, typename _Ch_type,2335,78325
    regex_match(2337,78402
  template<typename _Ch_traits,2348,78967
  template<typename _Ch_traits, typename _Ch_alloc,2348,78967
	   typename _Alloc,2349,79019
	   typename _Alloc, typename _Ch_type,2349,79019
  template<typename _Ch_type,2371,79814
    regex_match(2373,79878
  template<typename _Ch_traits,2392,80519
  template<typename _Ch_traits, typename _Str_allocator,2392,80519
	   typename _Ch_type,2393,80576
    regex_match(2395,80636
  template<typename _Bi_iter,2415,81524
  template<typename _Bi_iter, typename _Alloc,2415,81524
	   typename _Ch_type,2416,81571
    regex_search(2418,81631
  template<typename _Bi_iter,2439,82454
  template<typename _Bi_iter, typename _Ch_type,2439,82454
    regex_search(2441,82540
  template<typename _Ch_type,2462,83335
    regex_search(2464,83413
  template<typename _Ch_type,2481,84097
    regex_search(2483,84164
  template<typename _Ch_traits,2499,84803
  template<typename _Ch_traits, typename _String_allocator,2499,84803
	   typename _Ch_type,2500,84863
    regex_search(2502,84923
  template<typename _Ch_traits,2521,85701
  template<typename _Ch_traits, typename _Ch_alloc,2521,85701
	   typename _Alloc,2522,85753
	   typename _Alloc, typename _Ch_type,2522,85753
    regex_search(2525,85834
  template<typename _Ch_traits,2536,86397
  template<typename _Ch_traits, typename _Ch_alloc,2536,86397
	   typename _Alloc,2537,86449
	   typename _Alloc, typename _Ch_type,2537,86449
  template<typename _Out_iter,2550,86903
  template<typename _Out_iter, typename _Bi_iter,2550,86903
	   typename _Rx_traits,2551,86953
  template<typename _Out_iter,2572,87816
  template<typename _Out_iter, typename _Bi_iter,2572,87816
	   typename _Rx_traits,2573,87866
	   typename _Rx_traits, typename _Ch_type,2573,87866
	   typename _St,2574,87910
    regex_replace(2576,87963
  template<typename _Out_iter,2599,88917
  template<typename _Out_iter, typename _Bi_iter,2599,88917
	   typename _Rx_traits,2600,88967
    regex_replace(2602,89025
  template<typename _Rx_traits,2625,89875
  template<typename _Rx_traits, typename _Ch_type,2625,89875
	   typename _St,2626,89926
	   typename _St, typename _Sa,2626,89926
	   typename _St, typename _Sa, typename _Fst,2626,89926
    regex_replace(2628,90032
  template<typename _Rx_traits,2651,90948
  template<typename _Rx_traits, typename _Ch_type,2651,90948
	   typename _St,2652,90999
    regex_replace(2654,91075
  template<typename _Rx_traits,2677,91965
  template<typename _Rx_traits, typename _Ch_type,2677,91965
	   typename _St,2678,92016
    regex_replace(2680,92082
  template<typename _Rx_traits,2704,92995
    regex_replace(2706,93080
_GLIBCXX_BEGIN_NAMESPACE_CXX112721,93495
      typedef basic_regex<_Ch_type, _Rx_traits>  regex_type;2737,93950
      typedef match_results<_Bi_iter>	    value_type;2738,94011
      typedef std::ptrdiff_t		     difference_type;2739,94065
      typedef const value_type*value_type2740,94117
      typedef const value_type&		  reference;2741,94161
      typedef std::forward_iterator_tag	  iterator_category;2742,94207
      bool operator==(operator==2790,95902
      operator!=(operator!=2799,96147
      operator*(2807,96344
      operator->(2814,96499
      operator++(2827,96762
  typedef regex_iterator<const char*>			cregex_iterator;2842,97070
  typedef regex_iterator<string::const_iterator>	sregex_iterator;2843,97127
  typedef regex_iterator<const wchar_t*>		wcregex_iterator;2845,97221
  typedef regex_iterator<wstring::const_iterator>	wsregex_iterator;2846,97281
  template<typename _Bi_iter,2860,97758
	   typename _Ch_type 2861,97788
      typedef basic_regex<_Ch_type, _Rx_traits>	regex_type;2866,97960
      typedef sub_match<_Bi_iter>		value_type;2867,98020
      typedef std::ptrdiff_t			difference_type;2868,98067
      typedef const value_type*value_type2869,98115
      typedef const value_type&			reference;2870,98158
      typedef std::forward_iterator_tag		iterator_category;2871,98203
      bool operator==(operator==3007,104256
      operator!=(operator!=3016,104508
      operator*(3024,104708
      operator->(3031,104862
      operator++(3044,105140
      typedef regex_iterator<_Bi_iter, _Ch_type, _Rx_traits> _Position;3052,105240
  typedef regex_token_iterator<const char*>		cregex_token_iterator;3093,106163
  typedef regex_token_iterator<string::const_iterator>	sregex_token_iterator;3096,106285
  typedef regex_token_iterator<const wchar_t*>		wcregex_token_iterator;3100,106465
  typedef regex_token_iterator<wstring::const_iterator> wsregex_token_iterator;3103,106606

/usr/include/c++/13/bits/regex.tcc,1313
namespace std _GLIBCXX_VISIBILITY(31,1241
    lookup_collatename(123,3775
      typedef std::ctype<char_type> __ctype_type;125,3847
    lookup_classname(279,6063
      typedef std::ctype<char_type> __ctype_type;281,6147
    isctype(323,7322
      typedef std::ctype<char_type> __ctype_type;325,7381
    value(337,7713
  template<typename _Bi_iter,349,8004
    format(353,8134
      typedef std::ctype<char_type> __ctype_type;360,8411
  template<typename _Out_iter,459,10572
  template<typename _Out_iter, typename _Bi_iter,459,10572
	   typename _Rx_traits,460,10622
    __regex_replace(462,10680
      typedef regex_iterator<_Bi_iter, _Ch_type, _Rx_traits> _IterT;467,10901
  template<typename _Bi_iter,494,11700
	   typename _Ch_type,495,11730
    operator==(operator==499,11840
  template<typename _Bi_iter,510,12165
	   typename _Ch_type,511,12195
    operator++(515,12348
  template<typename _Bi_iter,569,13960
	   typename _Ch_type,570,13990
    operator=(operator=574,14155
  template<typename _Bi_iter,585,14431
	   typename _Ch_type,586,14461
    operator==(operator==590,14577
  template<typename _Bi_iter,605,15034
	   typename _Ch_type,606,15064
    operator++(610,15229
  template<typename _Bi_iter,639,15875
	   typename _Ch_type,640,15905
    _M_init(644,16021

/usr/include/c++/13/bits/regex_automaton.h,2719
#define _GLIBCXX_REGEX_STATE_LIMIT 33,1347
namespace std _GLIBCXX_VISIBILITY(36,1397
  typedef long _StateIdT;48,1601
  enum _Opcode 56,1899
      _S_opcode_unknown,58,1924
      _S_opcode_alternative,59,1949
      _S_opcode_repeat,60,1978
      _S_opcode_backref,61,2002
      _S_opcode_line_begin_assertion,62,2027
      _S_opcode_line_end_assertion,63,2065
      _S_opcode_word_boundary,64,2101
      _S_opcode_subexpr_lookahead,65,2132
      _S_opcode_subexpr_begin,66,2167
      _S_opcode_subexpr_end,67,2198
      _S_opcode_dummy,68,2227
      _S_opcode_match,69,2250
      _S_opcode_accept,70,2273
  struct _State_base73,2303
    _Opcode      _M_opcode;76,2341
    _StateIdT    _M_next;79,2421
      size_t _M_subexpr;82,2536
      size_t _M_backref_index;83,2595
	_StateIdT  _M_alt;88,2757
	bool       _M_neg;91,2882
      __gnu_cxx::__aligned_membuf<_Matcher<char>> _M_matcher_storage;94,2940
    explicit _State_base(98,3031
    _M_has_alt(104,3167
    struct _State 122,3589
      typedef _Matcher<_Char_type> _MatcherT;124,3627
      _State(133,4004
      _State(139,4179
      _State(146,4378
      ~_State(156,4648
      _M_opcode(165,4871
      _M_matches(169,4957
      _M_get_matcher(173,5060
      _M_get_matcher(177,5195
  struct _NFA_base184,5339
    typedef regex_constants::syntax_option_type _FlagT;186,5362
    _NFA_base(189,5432
    _M_options(201,5665
    _M_start(205,5737
    _M_sub_count(209,5810
    _GLIBCXX_STD_C::vector<size_t> _M_paren_stack;212,5878
    _FlagT                    _M_flags;213,5929
    _StateIdT                 _M_start_state;214,5969
    size_t                    _M_subexpr_count;215,6015
    bool                      _M_has_backref;216,6063
    struct _NFA220,6145
      typedef typename _TraitsT::char_type	_Char_type;223,6245
      typedef _State<_Char_type>		_StateT;224,6300
      typedef _Matcher<_Char_type>		_MatcherT;225,6343
      _NFA(227,6391
      _M_insert_accept(236,6684
      _M_insert_alt(243,6815
      _M_insert_repeat(255,7164
      _M_insert_matcher(267,7500
      _M_insert_subexpr_begin(275,7690
      _M_insert_subexpr_end(285,7943
      _M_insert_line_begin(297,8229
      _M_insert_line_end(301,8350
      _M_insert_word_bound(305,8467
      _M_insert_lookahead(313,8646
      _M_insert_dummy(322,8868
      _M_insert_state(326,8969
      _TraitsT                  _M_traits;347,9563
    class _StateSeq354,9803
      typedef _NFA<_TraitsT> _RegexT;357,9841
      _StateSeq(360,9892
      _StateSeq(364,10000
      _M_append(370,10209
      _M_append(378,10391
      _RegexT&  _M_nfa;389,10591
      _StateIdT _M_start;390,10615
      _StateIdT _M_end;391,10641

/usr/include/c++/13/bits/regex_automaton.tcc,43
namespace std _GLIBCXX_VISIBILITY(31,1251

/usr/include/c++/13/bits/regex_compiler.h,5744
namespace std _GLIBCXX_VISIBILITY(31,1248
    class _Compiler57,1731
      typedef typename _TraitsT::char_type        _CharT;60,1769
      typedef _NFA<_TraitsT>              	  _RegexT;61,1827
      typedef regex_constants::syntax_option_type _FlagT;62,1881
      _M_get_nfa(68,2094
      typedef _Scanner<_CharT>               _ScannerT;72,2172
      typedef typename _TraitsT::string_type _StringT;73,2228
      typedef typename _ScannerT::_TokenT    _TokenT;74,2283
      typedef _StateSeq<_TraitsT>            _StateSeqT;75,2337
      typedef std::stack<_StateSeqT>         _StackT;76,2394
      typedef std::ctype<_CharT>             _CtypeT;77,2448
      template<bool __icase,104,2848
      template<bool __icase,108,2931
      template<bool __icase,112,3015
      template<bool __icase,116,3094
      template<bool __icase,120,3184
      struct _BracketState125,3346
	enum class _Type 127,3381
	enum class _Type : char { _None,127,3381
	enum class _Type : char { _None, _Char,127,3381
	enum class _Type : char { _None, _Char, _Class 127,3381
	set(131,3490
	get(134,3587
	reset(137,3636
	explicit operator bool(operator bool139,3698
	_M_is_char(144,3845
	_M_is_class(149,4022
      template<bool __icase,152,4099
	  = std::__detail::_BracketMatcher<_TraitsT, __icase,154,4167
      template<bool __icase,159,4405
      _M_pop(171,4658
      _S_validate(179,4768
      _FlagT              _M_flags;198,5165
      _ScannerT           _M_scanner;199,5201
      shared_ptr<_RegexT> _M_nfa;200,5239
      _StringT            _M_value;201,5273
      _StackT             _M_stack;202,5309
      const _TraitsT&     _M_traits;203,5345
      const _CtypeT&      _M_ctype;204,5382
    class _RegexTranslatorBase209,5502
      typedef typename _TraitsT::char_type	      _CharT;212,5551
      typedef typename _TraitsT::string_type	      _StringT;213,5608
      typedef _StringT _StrTransT;214,5669
      _RegexTranslatorBase(217,5720
      _M_translate(222,5825
      _M_transform(233,6077
      _M_match_range(243,6424
      bool _M_in_range_icase(248,6600
	typedef std::ctype<_CharT> __ctype_type;250,6687
      const _TraitsT& _M_traits;258,6989
    class _RegexTranslator262,7090
      typedef _RegexTranslatorBase<_TraitsT,_TraitsT266,7199
      typedef _RegexTranslatorBase<_TraitsT, __icase,266,7199
      typedef _RegexTranslatorBase<_TraitsT, __icase, __collate> _Base;266,7199
      using _Base::_Base;267,7271
      typedef _RegexTranslatorBase<_TraitsT, __icase, false> _Base;275,7480
      typedef typename _Base::_CharT 276,7548
      typedef _CharT _StrTransT;277,7593
    class _RegexTranslator<_RegexTranslator296,8015
      typedef _RegexTranslatorBase<std::regex_traits<std::regex_traits300,8178
      typedef _RegexTranslatorBase<std::regex_traits<_CharType>, true,300,8178
	_Base;301,8255
      typedef typename _Base::_CharT _CharT;302,8263
      typedef typename _Base::_StrTransT _StrTransT;303,8308
      using _Base::_Base;305,8362
      _M_match_range(308,8400
      typedef typename _TraitsT::char_type 322,8818
      typedef _CharT                       _StrTransT;323,8869
      typedef _RegexTranslator<_TraitsT, __icase, __collate> _TransT;348,9514
      typedef typename _TransT::_CharT 349,9584
      operator()(operator()357,9767
      typedef _RegexTranslator<_TraitsT, __icase, __collate> _TransT;369,10088
      typedef typename _TransT::_CharT 370,10158
      operator()(operator()378,10341
    struct _CharMatcher405,11185
      typedef _RegexTranslator<_TraitsT,_TraitsT407,11215
      typedef _RegexTranslator<_TraitsT, __icase,407,11215
      typedef _RegexTranslator<_TraitsT, __icase, __collate> _TransT;407,11215
      typedef typename _TransT::_CharT                       _CharT;408,11285
      _CharMatcher(410,11355
      operator()(operator()415,11508
      _TransT _M_translator;418,11605
      _CharT  _M_ch;419,11634
    struct _BracketMatcher424,11776
      typedef _RegexTranslator<_TraitsT,_TraitsT427,11821
      typedef _RegexTranslator<_TraitsT, __icase,427,11821
      typedef _RegexTranslator<_TraitsT, __icase, __collate> _TransT;427,11821
      typedef typename _TransT::_CharT                       _CharT;428,11891
      typedef typename _TransT::_StrTransT                   _StrTransT;429,11960
      typedef typename _TraitsT::string_type                 _StringT;430,12033
      typedef typename _TraitsT::char_class_type             _CharClassT;431,12104
      _BracketMatcher(434,12191
      operator()(operator()441,12408
      _M_add_char(448,12546
      _M_add_collate_element(455,12708
      _M_add_equivalence_class(468,13103
      _M_add_character_class(483,13597
      _M_make_range(499,14029
      _M_ready(510,14371
      using _UseCache = typename std::is_same<_CharT, char>::type;type521,14704
      struct _Dummy 527,14890
					   std::bitset<std::bitset529,14976
      _M_apply(537,15172
      _M_make_cache(541,15291
      _M_make_cache(548,15473
      _GLIBCXX_STD_C::vector<_CharT>            _M_char_set;552,15529
      _GLIBCXX_STD_C::vector<_StringT>          _M_equiv_set;553,15590
      _GLIBCXX_STD_C::vector<_GLIBCXX_STD_C::vector554,15652
      _GLIBCXX_STD_C::vector<pair<_StrTransT, _StrTransT>> _M_range_set;554,15652
      _GLIBCXX_STD_C::vector<_CharClassT>       _M_neg_class_set;555,15725
      _CharClassT                               _M_class_set;556,15791
      _TransT                                   _M_translator;557,15853
      const _TraitsT&                           _M_traits;558,15916
      bool                                      _M_is_non_matching;559,15975
      _CacheT					_M_cache;560,16043

/usr/include/c++/13/bits/regex_compiler.tcc,124
namespace std _GLIBCXX_VISIBILITY(58,2186
#define __INSERT_REGEX_MATCHER(284,8616
#undef __INSERT_REGEX_MATCHER353,10843

/usr/include/c++/13/bits/regex_constants.h,730
namespace std _GLIBCXX_VISIBILITY(33,1321
  enum syntax_option_type 69,2190
    _S_icase	71,2235
    _S_nosubs	72,2259
    _S_optimize	73,2284
    _S_collate	74,2311
    _S_ECMAScript	75,2337
    _S_basic	76,2365
    _S_extended	77,2389
    _S_awk	78,2416
    _S_grep	79,2438
    _S_egrep	80,2461
    _S_polynomial	81,2485
    _S_multiline	82,2514
  enum match_flag_type 249,8860
    _S_default,251,8902
    _S_not_bol	252,8918
    _S_not_eol	253,8944
    _S_not_bow	254,8970
    _S_not_eow	255,8996
    _S_any	256,9022
    _S_not_null	257,9044
    _S_continuous	258,9071
    _S_prev_avail	259,9099
    _S_sed	260,9127
    _S_no_copy	261,9149
    _S_first_only	262,9175
    _S_match_flag_last	263,9204

/usr/include/c++/13/bits/regex_error.h,663
namespace std _GLIBCXX_VISIBILITY(33,1313
  enum error_type49,1504
      _S_error_collate,51,1528
      _S_error_ctype,52,1593
      _S_error_escape,53,1615
      _S_error_backref,54,1638
      _S_error_brack,55,1662
      _S_error_paren,56,1684
      _S_error_brace,57,1706
      _S_error_badbrace,58,1728
      _S_error_range,59,1753
      _S_error_space,60,1775
      _S_error_badrepeat,61,1797
      _S_error_complexity,62,1823
      _S_error_stack,63,1850
      _S_null,64,1872
      _S_grammar65,1887
  class regex_error 137,4236
    using error_type 139,4288
    error_type _M_code;141,4341
    code(160,4712
    regex_error(165,4801

/usr/include/c++/13/bits/regex_executor.h,2107
namespace std _GLIBCXX_VISIBILITY(33,1294
    class _Executor52,1736
      enum class _Match_mode 58,1891
      enum class _Match_mode : unsigned char { _Exact,58,1891
      enum class _Match_mode : unsigned char { _Exact, _Prefix 58,1891
      typedef typename iterator_traits<_BiIter>::value_type _CharT;61,1970
      typedef basic_regex<_CharT,_CharT62,2038
      typedef basic_regex<_CharT, _TraitsT>                 _RegexT;62,2038
      typedef _GLIBCXX_STD_C::vector<sub_match<sub_match63,2107
      typedef _GLIBCXX_STD_C::vector<sub_match<_BiIter>, _Alloc> _ResultsVec;63,2107
      typedef regex_constants::match_flag_type              _FlagT;64,2185
      typedef typename _TraitsT::char_class_type            _ClassT;65,2253
      typedef _NFA<_TraitsT>                                _NFAT;66,2322
      _Executor(69,2402
      _M_match(91,3033
      _M_search_from_first(99,3213
      _M_main(149,4242
      _M_is_word(159,4498
      _M_at_begin(167,4718
      _M_at_end(194,5469
      _M_is_line_terminator(211,5799
      _M_match_multiline(228,6277
      template<typename _SearchMode,236,6535
      _ResultsVec                                           _M_cur_results;293,8076
      _BiIter                                               _M_current;294,8152
      _BiIter                                               _M_begin;295,8224
      const _BiIter                                         _M_end;296,8294
      const _RegexT&                                        _M_re;297,8362
      const _NFAT&                                          _M_nfa;298,8429
      _ResultsVec&                                          _M_results;299,8497
      _GLIBCXX_STD_C::vector<_GLIBCXX_STD_C::vector300,8569
      _GLIBCXX_STD_C::vector<pair<_BiIter, int>>            _M_rep_count;300,8569
      _State_info<_State_info301,8643
      _State_info<__search_mode, _ResultsVec>		    _M_states;301,8643
      _FlagT                                                _M_flags;302,8705
      bool                                                  _M_has_sol;304,8814

/usr/include/c++/13/bits/regex_executor.tcc,236
namespace std _GLIBCXX_VISIBILITY(31,1250
    struct _Backref_matcher340,11682
      _Backref_matcher(342,11716
      _M_apply(346,11829
      const _TraitsT& _M_traits;354,12094
	typedef std::ctype<_CharT> __ctype_type;372,12688

/usr/include/c++/13/bits/regex_scanner.h,2587
namespace std _GLIBCXX_VISIBILITY(31,1247
  struct _ScannerBase42,1398
    enum _TokenT 46,1481
      _S_token_anychar,48,1515
      _S_token_ord_char,49,1539
      _S_token_oct_num,50,1564
      _S_token_hex_num,51,1588
      _S_token_backref,52,1612
      _S_token_subexpr_begin,53,1636
      _S_token_subexpr_no_group_begin,54,1666
      _S_token_subexpr_lookahead_begin,55,1705
      _S_token_subexpr_end,56,1774
      _S_token_bracket_begin,57,1802
      _S_token_bracket_neg_begin,58,1832
      _S_token_bracket_end,59,1866
      _S_token_interval_begin,60,1894
      _S_token_interval_end,61,1925
      _S_token_quoted_class,62,1954
      _S_token_char_class_name,63,1983
      _S_token_collsymbol,64,2015
      _S_token_equiv_class_name,65,2042
      _S_token_opt,66,2075
      _S_token_or,67,2095
      _S_token_closure0,68,2114
      _S_token_closure1,69,2139
      _S_token_line_begin,70,2164
      _S_token_line_end,71,2191
      _S_token_word_bound,72,2216
      _S_token_comma,73,2272
      _S_token_dup_count,74,2294
      _S_token_eof,75,2320
      _S_token_bracket_dash,76,2340
      _S_token_unknown 77,2369
    typedef regex_constants::syntax_option_type _FlagT;81,2419
    enum _StateT83,2476
      _S_state_normal,85,2499
      _S_state_in_brace,86,2522
      _S_state_in_bracket,87,2547
    _ScannerBase(91,2595
    _M_find_escape(115,3249
    _M_is_ecma(125,3447
    _M_is_basic(129,3535
    _M_is_extended(133,3645
    _M_is_grep(141,3803
    _M_is_awk(145,3912
    const std::pair<std::pair150,4050
    const std::pair<std::pair162,4361
    const std::pair<std::pair173,4547
    _StateT                       _M_state;191,4935
    _FlagT                        _M_flags;192,4979
    _TokenT                       _M_token;193,5023
    const std::pair<std::pair194,5067
    const std::pair<char, char>*  _M_escape_tbl;194,5067
    const char*                   _M_spec_char;195,5116
    bool                          _M_at_bracket_start;196,5164
    class _Scanner210,5729
      typedef std::basic_string<_CharT>                           _StringT;214,5792
      typedef regex_constants::syntax_option_type                 _FlagT;215,5868
      typedef const std::ctype<_CharT>                            _CtypeT;216,5942
      _M_get_token(225,6168
      _M_get_value(229,6254
      const _CharT*                 _M_current;259,6684
      const _CharT*                 _M_end;260,6732
      _CtypeT&                      _M_ctype;261,6776
      _StringT                      _M_value;262,6822

/usr/include/c++/13/bits/regex_scanner.tcc,43
namespace std _GLIBCXX_VISIBILITY(49,1797

/usr/include/c++/13/bits/requires_hosted.h,42
#define _REQUIRES_FREESTANDING_H 29,1225

/usr/include/c++/13/bits/semaphore_base.h,838
#define _GLIBCXX_SEMAPHORE_BASE_H 31,1269
namespace std _GLIBCXX_VISIBILITY(48,1714
  struct __platform_semaphore53,1830
    explicit __platform_semaphore(62,2060
    ~__platform_semaphore(70,2318
    _M_acquire(74,2415
    _M_try_acquire(89,2661
    _M_release(107,2992
    _M_try_acquire_until_impl(118,3191
    template<typename _Clock,148,3856
      _M_try_acquire_until(150,3917
    template<typename _Rep,173,4641
      _M_try_acquire_for(175,4721
    sem_t _M_semaphore;180,4883
  struct __atomic_semaphore185,4979
    explicit __atomic_semaphore(188,5088
    _S_do_try_acquire(198,5437
    _M_acquire(211,5823
    _M_try_acquire(219,6015
    template<typename _Clock,226,6193
      _M_try_acquire_until(228,6277
    template<typename _Rep,237,6544
      _M_try_acquire_for(239,6624
    _M_release(249,6908

/usr/include/c++/13/bits/shared_ptr.h,3811
#define _SHARED_PTR_H 50,1839
namespace std _GLIBCXX_VISIBILITY(55,1952
    operator<<(70,2307
    class shared_ptr 175,5582
	>::type;type180,5770
	  is_assignable<__shared_ptr<_Tp>&, _Arg>::value,value184,5852
	>::type;type185,5915
# define __cpp_lib_shared_ptr_weak_type 193,6110
      constexpr shared_ptr(202,6404
      template<typename _Yp,212,6838
      template<typename _Yp, typename _Deleter,229,7455
	shared_ptr(231,7554
	shared_ptr(248,8165
      template<typename _Yp,266,8857
      template<typename _Yp, typename _Deleter,266,8857
      template<typename _Yp, typename _Deleter, typename _Alloc,266,8857
	       typename = _Constructible<_Yp*, _Deleter,267,8922
	shared_ptr(268,8981
      template<typename _Deleter,286,9683
	shared_ptr(287,9734
	shared_ptr(311,10715
	shared_ptr(339,11906
      template<typename _Yp,349,12327
      template<typename _Yp,386,13807
      template<typename _Yp,393,14063
      template<typename _Yp, typename _Del,393,14063
	shared_ptr(395,14165
      template<typename _Yp,402,14514
      template<typename _Yp, typename _Del,402,14514
		_Constructible<_Constructible403,14558
	operator=(operator=418,15060
	operator=(operator=429,15348
      operator=(operator=438,15511
	operator=(operator=446,15695
      template<typename _Yp,452,15817
	_Assignable<_Assignable453,15861
	operator=(operator=454,15897
    private:private460,16016
	shared_ptr(463,16154
      template<typename _Yp,467,16287
      template<typename _Yp, typename _Alloc,467,16287
      template<typename _Yp,471,16433
      template<typename _Alloc,477,16665
      template<typename _Yp,491,17089
      template<typename _Yp,499,17369
      template<typename _Yp,507,17573
      template<typename _Yp,516,17871
      template<typename _Yp,524,18113
      shared_ptr(535,18452
    operator==(operator==555,19053
    operator==(operator==561,19274
    operator<=>(operator<=>567,19463
    operator<=>(operator<=>573,19657
    operator==(operator==582,19979
    operator!=(operator!=588,20217
    operator!=(operator!=594,20438
    operator!=(operator!=600,20629
    operator<(606,20872
    operator<(617,21303
    operator<(626,21592
    operator<=(operator<=635,21933
    operator<=(operator<=641,22144
    operator<=(operator<=647,22342
    operator>(653,22592
    operator>(659,22801
    operator>(665,22995
    operator>=(operator>=671,23241
    operator>=(operator>=677,23452
    operator>=(operator>=683,23650
    class weak_ptr 811,27890
	>::type;type816,28064
	  is_assignable<__weak_ptr<_Tp>&, _Arg>::value,value820,28146
	>::type;type821,28205
      template<typename _Yp,826,28276
      template<typename _Yp,833,28493
      template<typename _Yp,839,28693
	operator=(operator=848,28982
	operator=(operator=856,29160
	operator=(operator=867,29400
      lock(874,29540
    struct owner_less<owner_less898,30162
    struct owner_less<owner_less903,30313
    struct owner_less<owner_less909,30504
    class enable_shared_from_this919,30769
      constexpr enable_shared_from_this(922,30824
      enable_shared_from_this(924,30880
      operator=(operator=927,30987
      ~enable_shared_from_this(930,31069
      shared_from_this(934,31141
      shared_from_this(938,31249
#define __cpp_lib_enable_shared_from_this 942,31416
      weak_from_this(948,31611
      weak_from_this(952,31707
	_M_weak_assign(960,31852
      template<typename,typename969,32193
      mutable weak_ptr<_Tp>  _M_weak_this;972,32261
    struct hash<hash1153,38031
      operator()(operator()1157,38133
  namespace __detail::__variant1167,38382
      struct _Never_valueless_alt<_Never_valueless_alt1174,38619
      struct _Never_valueless_alt<_Never_valueless_alt1181,38839

/usr/include/c++/13/bits/shared_ptr_atomic.h,2763
#define _SHARED_PTR_ATOMIC_H 31,1281
#define _GLIBCXX_TSAN_MUTEX_DESTROY(38,1519
#define _GLIBCXX_TSAN_MUTEX_TRY_LOCK(40,1611
#define _GLIBCXX_TSAN_MUTEX_TRY_LOCK_FAILED(42,1727
#define _GLIBCXX_TSAN_MUTEX_LOCKED(44,1863
#define _GLIBCXX_TSAN_MUTEX_PRE_UNLOCK(46,1959
#define _GLIBCXX_TSAN_MUTEX_POST_UNLOCK(47,2031
#define _GLIBCXX_TSAN_MUTEX_PRE_SIGNAL(48,2105
#define _GLIBCXX_TSAN_MUTEX_POST_SIGNAL(49,2177
#define _GLIBCXX_TSAN_MUTEX_DESTROY(51,2257
#define _GLIBCXX_TSAN_MUTEX_TRY_LOCK(52,2296
#define _GLIBCXX_TSAN_MUTEX_TRY_LOCK_FAILED(53,2336
#define _GLIBCXX_TSAN_MUTEX_LOCKED(54,2383
#define _GLIBCXX_TSAN_MUTEX_PRE_UNLOCK(55,2421
#define _GLIBCXX_TSAN_MUTEX_POST_UNLOCK(56,2463
#define _GLIBCXX_TSAN_MUTEX_PRE_SIGNAL(57,2506
#define _GLIBCXX_TSAN_MUTEX_POST_SIGNAL(58,2548
namespace std _GLIBCXX_VISIBILITY(61,2599
  struct _Sp_locker73,2788
    _Sp_locker(80,2943
# define __cpp_lib_atomic_shared_ptr 359,10985
    class _Sp_atomic375,11353
      struct _Atomic_count383,11578
	_Atomic_count(397,11945
	~_Atomic_count(403,12070
	lock(423,12623
	unlock(456,13479
	_M_swap_unlock(466,13746
	_M_wait_unlock(480,14194
	notify_one(489,14443
	notify_all(497,14592
	mutable __atomic_base<uintptr_t> _M_val{_M_val506,14757
	static constexpr uintptr_t _S_lock_bit{_S_lock_bit507,14802
      _Atomic_count _M_refcount;511,14908
      _S_add_ref(514,14987
      _Sp_atomic(529,15269
      load(539,15536
      swap(557,16060
      compare_exchange_strong(565,16267
      wait(589,16928
      notify_one(599,17222
      notify_all(605,17305
    struct atomic<atomic613,17416
      is_lock_free(621,17581
      constexpr atomic(628,17797
      atomic(630,17856
      load(638,18049
      operator shared_ptr<_Tp>(operator shared_ptr<_Tp>641,18153
      store(645,18266
      operator=(operator=650,18412
      operator=(operator=656,18639
      exchange(660,18724
      compare_exchange_strong(668,18902
      compare_exchange_strong(676,19155
      compare_exchange_weak(696,19612
      compare_exchange_weak(704,19856
      wait(712,20113
      notify_one(719,20268
      notify_all(725,20347
      _Sp_atomic<shared_ptr<_Tp>> _M_impl;732,20435
    struct atomic<atomic736,20511
      is_lock_free(744,20672
      atomic(749,20779
      load(757,20962
      operator weak_ptr<_Tp>(operator weak_ptr<_Tp>760,21066
      store(764,21177
      operator=(operator=769,21321
      exchange(773,21449
      compare_exchange_strong(781,21625
      compare_exchange_strong(789,21874
      compare_exchange_weak(809,22331
      compare_exchange_weak(817,22575
      wait(825,22832
      notify_one(832,22987
      notify_all(838,23066
      _Sp_atomic<weak_ptr<_Tp>> _M_impl;845,23154

/usr/include/c++/13/bits/shared_ptr_base.h,10193
#define _SHARED_PTR_BASE_H 50,1875
namespace std _GLIBCXX_VISIBILITY(70,2414
  class bad_weak_ptr 85,2775
    virtual char const* what(88,2834
    class _Mutex_base106,3350
      enum { _S_need_barriers 110,3469
    class _Mutex_base<_Mutex_base114,3527
      enum { _S_need_barriers 121,3779
      class _Impl 496,14244
	typedef _Sp_ebo_helper<0, _Deleter>	_Del_base;498,14327
	typedef _Sp_ebo_helper<1, _Alloc>	_Alloc_base;499,14375
	_Impl(502,14438
	_Deleter& _M_del(506,14563
	_Alloc& _M_alloc(507,14629
	_Ptr _M_ptr;509,14698
  struct _Sp_make_shared_tag557,15892
  private:private559,15925
    _S_ti(564,16071
    struct _Sp_alloc_shared_tag574,16353
      const _Alloc& _M_a;576,16391
      class _Impl 582,16562
	typedef _Sp_ebo_helper<0, _Alloc>	_A_base;584,16616
	explicit _Impl(587,16675
	_Alloc& _M_alloc(589,16732
	__gnu_cxx::__aligned_buffer<_Tp> _M_storage;591,16797
# define __cpp_lib_smart_ptr_for_overwrite 656,18784
  struct _Sp_overwrite_tag 657,18835
	_Tp _M_obj;675,19537
	char _M_unused;676,19550
# define __cpp_lib_shared_ptr_arrays 718,20634
# define __cpp_lib_shared_ptr_arrays 720,20685
    struct _Sp_counted_array_base726,20860
      [[no_unique_address]] _Alloc _M_alloc{_M_alloc728,20900
      _M_alloc_array(733,21053
      _M_dealloc_array(739,21186
	_M_init(748,21437
	      struct _Iter767,22071
		const _Up* _M_p;775,22276
		size_t _M_len;776,22295
		size_t _M_pos;777,22312
		_Iter& operator++(779,22330
		_Iter operator++(780,22380
		reference operator*(782,22448
		pointer operator->(783,22512
		bool operator==(operator==785,22579
      _M_dispose_array(800,22967
	_S_first_elem(815,23285
      template<typename _Tp,817,23327
	_S_first_elem(819,23381
  struct __sp_array_delete886,25420
      void operator()(operator()889,25478
    class __shared_count893,25569
	struct __not_alloc_shared_tag 897,25708
	struct __not_alloc_shared_tag<__not_alloc_shared_tag900,25793
	struct __not_alloc_shared_tag<__not_alloc_shared_tag904,25932
      constexpr __shared_count(908,26020
	__shared_count(913,26131
	__shared_count(927,26361
	__shared_count(932,26475
	: __shared_count(__p, __sp_array_delete{}, allocator<allocator933,26529
      template<typename _Ptr,936,26598
      template<typename _Ptr, typename _Deleter,936,26598
      template<typename _Ptr, typename _Deleter,942,26819
      template<typename _Ptr, typename _Deleter, typename _Alloc,942,26819
	  typedef _Sp_counted_deleter<_Ptr, _Deleter, _Alloc, _Lp> _Sp_cd_type;946,27019
      template<typename _Tp,963,27495
      template<typename _Tp, typename _Alloc,963,27495
	__shared_count(964,27560
	  typedef _Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp> _Sp_cp_type;967,27652
      template<typename _Tp,979,28064
      template<typename _Tp, typename _Alloc,979,28064
	__shared_count(980,28126
	  struct _Guarded_ptr 989,28433
	    typename allocator_traits<_Alloc>::pointer _M_ptr;991,28494
	    _Guarded_ptr(993,28551
	    ~_Guarded_ptr(998,28719
      template<typename _Tp,1034,29766
	__shared_count(1036,29827
      ~__shared_count(1068,31018
      __shared_count(1074,31115
      operator=(operator=1082,31288
      _M_swap(1097,31592
      _M_get_use_count(1105,31743
      _M_unique(1109,31851
      _M_get_deleter(1113,31945
      _M_less(1117,32085
      _M_less(1121,32235
      operator==(operator==1126,32478
      _Sp_counted_base<_Lp>*  _M_pi;1135,32736
    class __weak_count1140,32811
      constexpr __weak_count(1143,32852
      __weak_count(1146,32920
      __weak_count(1153,33074
      __weak_count(1160,33221
      ~__weak_count(1164,33326
      operator=(operator=1171,33446
      operator=(operator=1183,33718
      operator=(operator=1195,33983
      _M_swap(1205,34172
      _M_get_use_count(1213,34321
      _M_less(1217,34440
      _M_less(1221,34588
      operator==(operator==1226,34833
      _Sp_counted_base<_Lp>*  _M_pi;1235,35089
    struct __sp_compatible_with1264,35993
    struct __sp_is_constructible1333,38085
      operator*(1347,38429
      operator->(1354,38558
      operator->(1374,39035
      operator*(1392,39589
      operator->(1400,39795
    class __shared_ptr1422,40322
	  = typename enable_if<__sp_is_constructible<_Tp, _Yp>::value>::type;type1432,40596
      template<typename _Yp,1435,40735
	  enable_if<__sp_compatible_with<_Yp*, _Tp*>::value,value1437,40816
	  enable_if<__sp_compatible_with<_Yp*, _Tp*>::value, _Res>::type;type1437,40816
      template<typename _Yp,1444,41087
      template<typename _Yp, typename _Del,1444,41087
	  is_convertible<is_convertible1448,41302
	  >::value,value1450,41373
      template<typename _Yp,1453,41446
	using _UniqAssignable = _UniqCompatible<_Yp, _Del,1454,41490
      constexpr __shared_ptr(1462,41652
      template<typename _Yp,1466,41736
	: _M_ptr(__p), _M_refcount(1469,41826
      template<typename _Yp,1476,42056
      template<typename _Yp, typename _Deleter,1476,42056
	: _M_ptr(__p), _M_refcount(1478,42169
      template<typename _Yp,1485,42374
      template<typename _Yp, typename _Deleter,1485,42374
      template<typename _Yp, typename _Deleter, typename _Alloc,1485,42374
	: _M_ptr(__p), _M_refcount(1488,42524
	__shared_ptr(1496,42779
      template<typename _Deleter,1500,42875
        __shared_ptr(1501,42926
	__shared_ptr(1507,43116
	__shared_ptr(1514,43326
      template<typename _Yp,1526,43673
	: _M_ptr(__r._M_ptr), _M_refcount(1528,43789
      __shared_ptr(1531,43847
      template<typename _Yp,1538,44016
	: _M_ptr(__r._M_ptr), _M_refcount(1540,44127
      template<typename _Yp,1546,44237
      template<typename _Yp,1556,44588
      template<typename _Yp, typename _Del,1556,44588
	__shared_ptr(1558,44679
    protected:protected1567,44957
	: _M_ptr(__r.get()), _M_refcount(1575,45335
      template<typename _Yp,1588,45710
      constexpr __shared_ptr(1593,45839
	operator=(operator=1597,45957
	operator=(operator=1609,46293
      operator=(operator=1618,46448
	operator=(operator=1626,46612
      template<typename _Yp,1632,46731
	_UniqAssignable<_UniqAssignable1633,46775
	operator=(operator=1634,46803
      reset(1641,46923
	reset(1646,47030
      template<typename _Yp,1653,47198
	reset(1655,47262
      template<typename _Yp,1658,47346
      template<typename _Yp, typename _Deleter,1658,47346
	reset(1660,47427
      get(1665,47603
      explicit operator bool(operator bool1669,47713
      unique(1674,47850
      use_count(1679,48014
      swap(1684,48174
	owner_before(1699,48673
	owner_before(1704,48829
    protected:protected1708,48960
	__shared_ptr(1711,49100
      template<typename _Tp1,1715,49288
      template<typename _Tp1, _Lock_policy _Lp1,1715,49288
      template<typename _Tp1, _Lock_policy _Lp1, typename _Alloc,1715,49288
      template<typename _Alloc,1722,49595
	: _M_ptr(), _M_refcount(1725,49761
      __shared_ptr(1731,49946
      template<typename _Yp,1747,50464
	: __not_<__not_1753,50642
      template<typename _Yp,1755,50714
      template<typename _Yp,1763,51042
      template<typename _Tp1,1772,51357
      template<typename _Tp1,1773,51433
      template<typename _Del,1775,51508
      template<typename _Del, typename _Tp1,1775,51508
      template<typename _Del,1778,51642
      element_type*	   _M_ptr;1785,51826
      __shared_count<_Lp>  _M_refcount;1786,51887
    operator==(operator==1793,52075
    operator==(operator==1799,52278
    operator<=>(operator<=>1805,52492
    operator<=>(operator<=>1811,52718
    operator==(operator==1819,53012
    operator!=(operator!=1824,53179
    operator!=(operator!=1830,53382
    operator!=(operator!=1835,53538
    operator<(1840,53708
    operator<(1851,54132
    operator<(1859,54393
    operator<=(operator<=1867,54670
    operator<=(operator<=1873,54863
    operator<=(operator<=1878,55026
    operator>(1883,55205
    operator>(1889,55395
    operator>(1894,55554
    operator>=(operator>=1899,55729
    operator>=(operator>=1905,55922
    operator>=(operator>=1910,56085
    class __weak_ptr1974,58417
      template<typename _Yp,1976,58444
	  enable_if<__sp_compatible_with<_Yp*, _Tp*>::value,value1978,58525
	  enable_if<__sp_compatible_with<_Yp*, _Tp*>::value, _Res>::type;type1978,58525
      constexpr __weak_ptr(1987,58815
      template<typename _Yp,2009,59614
      template<typename _Yp,2014,59798
	: _M_ptr(__r._M_ptr), _M_refcount(2016,59912
      __weak_ptr(2019,59970
      template<typename _Yp,2023,60115
	: _M_ptr(__r.lock().get()), _M_refcount(2025,60222
	operator=(operator=2033,60451
	operator=(operator=2042,60639
      operator=(operator=2050,60794
	operator=(operator=2058,60957
      __shared_ptr<__shared_ptr2066,61129
      lock(2067,61158
      use_count(2071,61269
      expired(2075,61363
	owner_before(2080,61485
	owner_before(2085,61641
      reset(2089,61770
      swap(2093,61841
      _M_assign(2102,62034
      template<typename _Tp1,2111,62212
      template<typename _Tp1,2112,62288
      element_type*	 _M_ptr;2119,62542
      __weak_count<_Lp>  _M_refcount;2120,62601
    struct _Sp_owner_less 2132,63003
      operator()(operator()2135,63087
      operator()(operator()2139,63211
      operator()(operator()2143,63336
    class __enable_shared_from_this2172,64164
      constexpr __enable_shared_from_this(2175,64221
      __enable_shared_from_this(2177,64279
      operator=(operator=2180,64392
      ~__enable_shared_from_this(2183,64476
      __shared_ptr<__shared_ptr2186,64528
      shared_from_this(2187,64557
      __shared_ptr<__shared_ptr2190,64644
      shared_from_this(2191,64679
      __weak_ptr<__weak_ptr2195,64853
      weak_from_this(2196,64880
      __weak_ptr<__weak_ptr2199,64950
      weak_from_this(2200,64983
	_M_weak_assign(2207,65115
      template<typename,typename2215,65410
      mutable __weak_ptr<__weak_ptr2218,65478
      mutable __weak_ptr<_Tp, _Lp>  _M_weak_this;2218,65478
      typedef typename std::remove_const<std::remove_const2237,66108
      operator()(operator()2248,66499

/usr/include/c++/13/bits/slice_array.h,694
#define _SLICE_ARRAY_H 33,1372
namespace std _GLIBCXX_VISIBILITY(37,1425
  class slice59,2195
    slice(63,2258
    slice(72,2487
    size_t start(75,2588
    class slice_array128,4047
      typedef _Tp value_type;131,4087
      const size_t      _M_sz;196,6898
      const size_t      _M_stride;197,6929
      const _Array<_Tp> _M_array;198,6964
    slice_array<_Tp>::operator=(operator=225,7649
    slice_array<_Tp>::operator=(operator=234,7879
    slice_array<_Tp>::operator=(operator=239,8038
    slice_array<_Tp>::operator=(operator=245,8243
#undef _DEFINE_VALARRAY_OPERATOR249,8398
#define _DEFINE_VALARRAY_OPERATOR(250,8431
#undef _DEFINE_VALARRAY_OPERATOR278,9464

/usr/include/c++/13/bits/specfun.h,2183
#define _GLIBCXX_BITS_SPECFUN_H 31,1283
#define __STDCPP_MATH_SPEC_FUNCS__ 35,1347
#define __cpp_lib_math_special_functions 37,1391
namespace std _GLIBCXX_VISIBILITY(59,2022
      typedef typename __gnu_cxx::__promote<__gnu_cxx::__promote252,10855
      typedef typename __gnu_cxx::__promote<__gnu_cxx::__promote298,12423
      typedef typename __gnu_cxx::__promote_2<__gnu_cxx::__promote_2343,13875
      typedef typename __gnu_cxx::__promote<__gnu_cxx::__promote391,15403
      typedef typename __gnu_cxx::__promote<__gnu_cxx::__promote438,16885
      typedef typename __gnu_cxx::__promote_2<__gnu_cxx::__promote_2489,18677
      typedef typename __gnu_cxx::__promote_2<__gnu_cxx::__promote_2535,20249
      typedef typename __gnu_cxx::__promote_2<__gnu_cxx::__promote_2581,21791
      typedef typename __gnu_cxx::__promote_2<__gnu_cxx::__promote_2633,23527
      typedef typename __gnu_cxx::__promote_2<__gnu_cxx::__promote_2681,25111
      typedef typename __gnu_cxx::__promote_2<__gnu_cxx::__promote_2729,26850
      typedef typename __gnu_cxx::__promote_2<__gnu_cxx::__promote_2777,28479
      typedef typename __gnu_cxx::__promote_3<__gnu_cxx::__promote_3830,30388
      typedef typename __gnu_cxx::__promote<__gnu_cxx::__promote870,31463
      typedef typename __gnu_cxx::__promote<__gnu_cxx::__promote918,32753
      typedef typename __gnu_cxx::__promote<__gnu_cxx::__promote962,34102
      typedef typename __gnu_cxx::__promote<__gnu_cxx::__promote1007,35539
      typedef typename __gnu_cxx::__promote<__gnu_cxx::__promote1058,36960
      typedef typename __gnu_cxx::__promote<__gnu_cxx::__promote1102,38358
      typedef typename __gnu_cxx::__promote<__gnu_cxx::__promote1149,40044
      typedef typename __gnu_cxx::__promote<__gnu_cxx::__promote1193,41437
namespace __gnu_cxx _GLIBCXX_VISIBILITY(1203,41663
      typedef typename __gnu_cxx::__promote<__gnu_cxx::__promote1242,42516
      typedef typename __gnu_cxx::__promote<__gnu_cxx::__promote1277,43420
      typedef typename __gnu_cxx::__promote_3<__gnu_cxx::__promote_31327,45136
      typedef typename __gnu_cxx::__promote_4<__gnu_cxx::__promote_41376,46887

/usr/include/c++/13/bits/sstream.tcc,73
#define _SSTREAM_TCC 35,1314
namespace std _GLIBCXX_VISIBILITY(39,1365

/usr/include/c++/13/bits/std_abs.h,197
#define _GLIBCXX_BITS_STD_ABS_H31,1296
#define _GLIBCXX_INCLUDE_NEXT_C_HEADERS37,1385
#undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS42,1519
#undef abs44,1559
namespace std _GLIBCXX_VISIBILITY(48,1586

/usr/include/c++/13/bits/std_function.h,2913
#define _GLIBCXX_STD_FUNCTION_H 31,1298
namespace std _GLIBCXX_VISIBILITY(45,1695
  class bad_function_call 54,1928
    virtual ~bad_function_call(57,1992
    struct __is_location_invariant69,2369
  union _Nocopy_types75,2480
    void*       _M_object;77,2506
    const void* _M_const_object;78,2533
    void (*_M_function_pointer)_M_function_pointer79,2566
    void 80,2601
  union [[gnu::may_alias]] _Any_data83,2658
    void*       _M_access(85,2699
    const void* _M_access(86,2770
      _M_access(90,2880
      _M_access(95,3002
    _Nocopy_types _M_unused;98,3092
    char _M_pod_data[_M_pod_data99,3121
  enum _Manager_operation102,3172
    __get_type_info,104,3202
    __get_functor_ptr,105,3223
    __clone_functor,106,3246
    __destroy_functor107,3267
  class _Function_base114,3410
      class _Base_manager121,3608
	_M_get_pointer(134,4004
	  _M_create(150,4472
	  _M_create(158,4707
	_M_destroy(166,4921
	_M_destroy(173,5075
	_M_manager(180,5197
	  _M_init_functor(211,5900
	  _M_not_empty_function(220,6167
	  _M_not_empty_function(225,6312
	template<typename _Class,228,6389
	  _M_not_empty_function(230,6445
	  _M_not_empty_function(235,6570
    ~_Function_base(241,6679
    bool _M_empty(247,6792
    _Any_data     _M_functor{_M_functor252,6936
    _Manager_type _M_manager{_M_manager253,6968
    class function<function334,9174
      template<typename _Func,340,9467
	  = typename __enable_if_t<!_Self, decay<_Func>>::type;type343,9586
      template<typename _Func,345,9644
	struct _Callable348,9783
      template<typename _Cond,352,9850
      typedef _Res result_type;360,10084
      function(368,10286
      function(375,10451
      function(386,10808
      function(404,11305
      template<typename _Functor,433,12461
      operator=(operator=469,13747
      operator=(operator=487,14303
      operator=(operator=501,14631
	_Requires<_Requires530,15655
	operator=(operator=531,15698
	operator=(operator=541,15936
      void swap(556,16350
      explicit operator bool(operator bool573,16829
      operator()(operator()587,17248
      target_type(606,17805
	target(632,18483
	target(643,18850
    struct __function_guide_helper673,19644
    struct __function_guide_helper<__function_guide_helper677,19758
    struct __function_guide_helper<__function_guide_helper683,19953
    struct __function_guide_helper<__function_guide_helper689,20150
    struct __function_guide_helper<__function_guide_helper695,20351
    struct __function_guide_static_helper702,20591
    struct __function_guide_static_helper<__function_guide_static_helper706,20698
    operator==(operator==737,21769
    operator==(operator==744,22005
    operator!=(operator!=755,22391
    operator!=(operator!=761,22580
  namespace __detail::__variant780,23186
      struct _Never_valueless_alt<_Never_valueless_alt787,23428

/usr/include/c++/13/bits/std_mutex.h,976
#define _GLIBCXX_MUTEX_H 31,1269
namespace std _GLIBCXX_VISIBILITY(43,1472
  class __mutex_base59,1780
    typedef __gthread_mutex_t			__native_type;62,1818
    constexpr __mutex_base(67,1947
    ~__mutex_base(77,2181
  class mutex 96,2694
    typedef __native_type* 			native_handle_type;99,2745
    mutex(104,2845
    try_lock(122,3193
    unlock(129,3324
    native_handle(136,3449
  class __condvar143,3592
    __condvar(148,3664
    ~__condvar(155,3783
    __gthread_cond_t* native_handle(164,4054
    wait(168,4179
    wait_until(176,4353
    wait_until(183,4543
    notify_one(191,4731
    notify_all(198,4890
    __gthread_cond_t _M_cond;208,5141
  struct defer_lock_t 216,5277
  struct try_to_lock_t 219,5402
  struct adopt_lock_t 223,5557
    class lock_guard243,6254
      typedef _Mutex mutex_type;246,6293
      explicit lock_guard(248,6327
      lock_guard(251,6416
      ~lock_guard(254,6530
      mutex_type&  _M_device;261,6698

/usr/include/c++/13/bits/std_thread.h,1361
#define _GLIBCXX_THREAD_H 31,1271
namespace std _GLIBCXX_VISIBILITY(52,1782
  class thread78,2725
    class id92,3001
      native_handle_type	_M_thread;94,3020
      id(97,3069
      id(100,3123
      operator<(id __x, id __y) noexcept;114,3445
	friend basic_ostream<_CharT,_CharT118,3539
	operator<<(basic_ostream<_CharT, _Traits>& __out, id __id)119,3579
    id				_M_id;123,3659
    thread(132,3946
    template<typename _Callable,151,4592
    template<typename _Callable, typename... _Args,151,4592
    ~thread(170,5343
    thread(178,5450
    thread& operator=(operator=183,5552
    swap(192,5699
    joinable(196,5777
    get_id(206,5894
    native_handle(212,6008
    struct _State225,6395
      struct _State_impl 234,6572
	_Callable		_M_func;236,6621
	  _State_impl(239,6672
	_M_run(244,6765
    typedef shared_ptr<_Impl_base>	__shared_base_type;253,6919
    struct _Impl_base254,6974
      __shared_base_type	_M_this_ptr;256,7002
      struct _Invoker272,7361
	  _Invoker(276,7432
	_Tuple _M_t;280,7513
	template<typename _Fn,284,7568
	  : __invoke_result<__invoke_result286,7652
	  _M_invoke(291,7758
	operator()(operator()295,7893
  operator==(operator==324,8644
    struct hash<hash338,9174
      operator()(operator()342,9266
  namespace this_thread346,9386
    get_id(350,9489
    yield(363,9811

/usr/include/c++/13/bits/stl_algo.h,1998
#define _STL_ALGO_H 57,2366
namespace std _GLIBCXX_VISIBILITY(77,2831
      typedef typename std::iterator_traits<std::iterator_traits237,7127
      typedef reverse_iterator<_BidirectionalIterator1> _RevIterator1;325,9826
      typedef reverse_iterator<_BidirectionalIterator2> _RevIterator2;326,9897
      typedef typename iterator_traits<iterator_traits569,19928
      typedef typename iterator_traits<iterator_traits1297,44619
      typedef typename iterator_traits<iterator_traits1299,44710
      typedef typename iterator_traits<iterator_traits1577,52743
      typedef typename iterator_traits<iterator_traits1579,52825
      typedef typename iterator_traits<iterator_traits1652,55544
      typedef iterator_traits<_RandomAccessIterator> _RItTraits;1654,55629
      typedef typename _RItTraits::difference_type 1655,55694
      typedef typename iterator_traits<iterator_traits1709,57697
      typedef typename iterator_traits<iterator_traits1711,57782
      typedef typename iterator_traits<iterator_traits1761,59939
      typedef typename iterator_traits<iterator_traits1763,60024
  enum { _S_threshold 1848,62821
	_DistanceType;2026,68483
	_DistanceType;2115,71689
	  _ValueType;2532,85713
	  _DistanceType;2534,85808
      typedef _Temporary_buffer<_BidirectionalIterator, _ValueType> _TmpBuf;2543,86048
  enum { _S_chunk_size 2712,92164
	_Distance;2721,92512
#define __cpp_lib_clamp 3652,126273
	_DistanceType;3754,130045
      typedef typename std::make_unsigned<_DistanceType>::type __ud_type;3756,130062
      typedef typename std::uniform_int_distribution<__ud_type> __distr_type;3757,130136
      typedef typename __distr_type::param_type __p_type;3758,130214
	_Gen;3761,130350
	__uc_type;3763,130437
      typedef __decltype(std::__size_to_integer(4474,158484
	_ValueType;5027,180706
	_DistanceType;5029,180798
      typedef _Temporary_buffer<_RandomAccessIterator, _ValueType> _TmpBuf;5035,180874
#define __cpp_lib_sample 5910,216171

/usr/include/c++/13/bits/stl_algobase.h,2582
#define _STL_ALGOBASE_H 57,2382
namespace std _GLIBCXX_VISIBILITY(82,3017
    struct __iter_swap116,4057
      template<typename _ForwardIterator1,118,4086
	iter_swap(120,4170
	  typedef typename iterator_traits<iterator_traits122,4230
    struct __iter_swap<__iter_swap131,4401
      template<typename _ForwardIterator1,133,4436
	iter_swap(135,4520
      typedef typename iterator_traits<iterator_traits164,5342
      typedef typename iterator_traits<iterator_traits166,5426
      typedef typename iterator_traits<iterator_traits174,5686
      typedef typename iterator_traits<iterator_traits176,5773
    struct __copy_move348,11616
      template<typename _II,350,11645
	__copy_m(353,11722
	  typedef typename iterator_traits<iterator_traits385,12477
	  typedef typename iterator_traits<iterator_traits410,13070
      typedef typename iterator_traits<iterator_traits499,15888
#define _GLIBCXX_MOVE3(669,22177
#define _GLIBCXX_MOVE3(671,22246
    struct __copy_move_backward675,22378
      template<typename _BI1,677,22416
	__copy_move_b(680,22496
      typedef typename iterator_traits<iterator_traits761,24602
#define _GLIBCXX_MOVE_BACKWARD3(906,30503
#define _GLIBCXX_MOVE_BACKWARD3(908,30590
    struct __equal1162,39803
      template<typename _II1,1164,39828
	equal(1167,39908
    struct __equal<__equal1177,40121
	equal(1182,40216
      typedef typename iterator_traits<iterator_traits1215,41412
    struct __lc_rai1251,42758
      template<typename _II1,1253,42784
	__newlast1(1256,42864
	__cnd2(1262,42994
      typedef typename iterator_traits<iterator_traits1295,43910
      typedef typename iterator_traits<iterator_traits1296,43986
      typedef std::__lc_rai<_Category1, _Category2> __rai_type;1297,44062
    struct __lexicographical_compare1312,44518
      template<typename _II1,1314,44561
	__lc(1317,44641
      template<typename _II1,1325,44884
	__3way(1328,44963
    struct __lexicographical_compare<__lexicographical_compare1346,45318
      template<typename _Tp,1348,45367
	__lc(1351,45445
      template<typename _Tp,1355,45602
	__3way(1358,45685
      typedef typename iterator_traits<iterator_traits1376,46257
      typedef typename iterator_traits<iterator_traits1377,46327
      typedef typename iterator_traits<iterator_traits1462,49422
#define __cpp_lib_robust_nonmodifying_seq_ops 1650,55841
      typedef typename iterator_traits<iterator_traits1738,59238
      typedef typename iterator_traits<iterator_traits1739,59308
      struct _Res 1795,61573
	_Tp _M_min;1796,61593

/usr/include/c++/13/bits/stl_bvector.h,3820
#define _STL_BVECTOR_H 57,2377
namespace std _GLIBCXX_VISIBILITY(64,2500
  typedef unsigned long 68,2579
  enum { _S_word_bit 69,2614
  struct _Bit_reference78,2841
    _Bit_type * _M_p;80,2869
    _Bit_type _M_mask;81,2891
    _Bit_reference(84,2940
    _Bit_reference(88,3051
    operator bool(95,3249
    flip(138,4189
    swap(144,4313
    swap(153,4485
    swap(162,4648
  struct _Bit_iterator_base174,4909
    _Bit_type * _M_p;177,5005
    unsigned int _M_offset;178,5027
    _Bit_iterator_base(181,5081
    _M_bump_up(186,5210
    _M_bump_down(197,5356
    _M_incr(208,5504
  struct _Bit_iterator 275,7407
    typedef _Bit_reference  reference;277,7462
    typedef void	    pointer;279,7527
    typedef _Bit_reference* pointer;281,7563
    typedef _Bit_iterator   iterator;283,7607
    _Bit_iterator(286,7671
    _Bit_iterator(289,7748
    _M_const_cast(294,7879
    operator*operator299,7986
    operator[operator354,8878
  struct _Bit_const_iterator 381,9506
    typedef bool                 reference;383,9567
    typedef bool                 const_reference;384,9611
    typedef void	    pointer;386,9687
    typedef const bool*          pointer;388,9723
    typedef _Bit_const_iterator  const_iterator;390,9772
    _Bit_const_iterator(393,9847
    _Bit_const_iterator(396,9930
    _Bit_const_iterator(400,10054
    _M_const_cast(405,10202
    operator*operator410,10340
    operator[operator465,11291
    struct _Bvector_base493,11995
        rebind<_Bit_type>::other _Bit_alloc_type;496,12093
	_Bit_alloc_traits;498,12209
      typedef typename _Bit_alloc_traits::pointer _Bit_pointer;499,12229
      struct _Bvector_impl_data501,12294
	_Bit_iterator	_M_start;504,12363
	  _Bit_type* _M_p;508,12472
	  void operator=(operator=511,12579
	} _M_start;512,12639
	_Bit_iterator	_M_finish;514,12659
	_Bit_pointer	_M_end_of_storage;515,12685
	_Bvector_impl_data(518,12741
	_Bvector_impl_data(529,13014
	_M_move_data(535,13146
	_M_reset(544,13272
	_M_swap_data(549,13366
      struct _Bvector_impl557,13565
	_Bvector_impl(561,13675
	_Bvector_impl(567,13824
	_Bvector_impl(575,14072
	_Bvector_impl(580,14216
	_M_end_addr(587,14402
      typedef _Alloc allocator_type;596,14577
      _M_get_Bit_allocator(600,14665
      _M_get_Bit_allocator(605,14801
      get_allocator(610,14935
      _Bvector_base(616,15105
      _Bvector_base(620,15166
      _Bvector_base(627,15342
      ~_Bvector_base(633,15526
      _Bvector_impl _M_impl;637,15598
      _M_allocate(641,15674
      _M_deallocate(657,16016
      _M_move_data(672,16351
      _S_nword(678,16509
      typedef _Bvector_base<_Alloc>			_Base;706,17562
      typedef typename _Base::_Bit_pointer	707,17607
      typedef typename _Base::_Bit_alloc_traits	708,17665
      typedef bool					value_type;715,17820
      typedef size_t					size_type;716,17855
      typedef ptrdiff_t					difference_type;717,17891
      typedef _Bit_reference				reference;718,17936
      typedef bool					const_reference;719,17979
      typedef _Bit_reference*				pointer;720,18019
      typedef const bool*bool721,18061
      typedef _Bit_iterator				iterator;722,18105
      typedef _Bit_const_iterator			const_iterator;723,18146
      typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;724,18198
      typedef std::reverse_iterator<iterator>		reverse_iterator;725,18274
      typedef _Alloc					allocator_type;726,18339
	  typedef typename std::__is_integer<std::__is_integer848,21567
      operator=(operator=858,21815
      operator=(operator=890,22594
      operator=(operator=916,23262
	  typedef typename std::__is_integer<std::__is_integer945,24219
	  typedef typename std::__is_integer<std::__is_integer1195,30976
    struct hash<hash1589,41242

/usr/include/c++/13/bits/stl_construct.h,577
#define _STL_CONSTRUCT_H 57,2397
namespace std _GLIBCXX_VISIBILITY(73,3079
    struct _Destroy_aux156,5236
	__destroy(160,5342
    struct _Destroy_aux<_Destroy_aux168,5519
        __destroy(172,5617
      typedef typename iterator_traits<iterator_traits184,6041
    struct _Destroy_n_aux200,6607
      template<typename _ForwardIterator,202,6639
	__destroy_n(204,6743
    struct _Destroy_n_aux<_Destroy_n_aux213,6942
      template<typename _ForwardIterator,215,6980
        __destroy_n(217,7070
      typedef typename iterator_traits<iterator_traits233,7577

/usr/include/c++/13/bits/stl_deque.h,6457
#define _STL_DEQUE_H 57,2360
namespace std _GLIBCXX_VISIBILITY(72,2715
#define _GLIBCXX_DEQUE_BUF_SIZE 92,3471
    struct _Deque_iterator113,4181
      typedef _Deque_iterator<_Tp,_Tp116,4240
      typedef _Deque_iterator<_Tp, _Tp&, _Tp*>		   iterator;116,4240
      typedef _Deque_iterator<_Tp,_Tp117,4301
      typedef _Deque_iterator<_Tp, const _Tp&, const _Tp*> const_iterator;117,4301
      typedef _Tp*					   _Elt_pointer;118,4376
      typedef _Tp**					   _Map_pointer;119,4416
	using __iter = _Deque_iterator<_Tp, _CvTp&, __ptr_rebind<_Ptr,_Ptr123,4507
      typedef __iter<_Tp>				   iterator;125,4592
      typedef __iter<const _Tp>				   const_iterator;126,4634
      typedef __ptr_rebind<_Ptr,_Ptr127,4688
      typedef __ptr_rebind<_Ptr, _Tp>			   _Elt_pointer;127,4688
      typedef __ptr_rebind<_Ptr,_Ptr128,4745
      typedef __ptr_rebind<_Ptr, _Elt_pointer>		   _Map_pointer;128,4745
      static size_t _S_buffer_size(131,4818
      typedef std::random_access_iterator_tag	iterator_category;134,4922
      typedef _Tp				value_type;135,4987
      typedef _Ptr				pointer;136,5020
      typedef _Ref				reference;137,5051
      typedef size_t				size_type;138,5084
      typedef ptrdiff_t				difference_type;139,5119
      typedef _Deque_iterator			_Self;140,5163
      _Elt_pointer _M_cur;142,5203
      _Elt_pointer _M_first;143,5230
      _Elt_pointer _M_last;144,5259
      _Map_pointer _M_node;145,5287
      _Deque_iterator(147,5316
      _Deque_iterator(151,5482
      _Deque_iterator(156,5659
      template<typename _Iter,161,5879
				   is_same<is_same163,5970
       _Deque_iterator(164,6004
      _Deque_iterator(168,6157
      _M_const_cast(176,6410
      operator*(181,6542
      operator->(186,6650
      operator++(190,6732
      operator++(202,6913
      operator--(210,7030
      operator--(222,7211
      operator+=(operator+=230,7328
      operator-=(operator-=249,7916
      _M_set_node(263,8365
      operator==(operator==272,8591
      template<typename _RefR,278,8935
	operator==(operator==281,9015
      operator<=>(operator<=>289,9239
      operator!=(operator!=298,9484
      template<typename _RefR,301,9588
	operator!=(operator!=304,9668
      operator<(311,9840
      template<typename _RefR,317,10026
	operator<(320,10106
      operator>(330,10358
      template<typename _RefR,333,10457
	operator>(336,10537
      operator<=(operator<=343,10703
      template<typename _RefR,346,10806
	operator<=(operator<=349,10886
      operator>=(operator>=356,11057
      template<typename _RefR,359,11160
	operator>=(operator>=362,11240
      operator-(370,11453
      template<typename _RefR,382,11918
	operator-(385,12009
      operator+(397,12328
      operator-(406,12512
      operator+(415,12696
    class _Deque_base430,13270
	rebind<_Tp>::other _Tp_alloc_type;434,13380
      typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type>	 _Alloc_traits;435,13416
      typedef _Tp*					_Ptr;438,13515
      typedef const _Tp*				_Ptr_const;439,13544
      typedef typename _Alloc_traits::pointer		_Ptr;441,13590
      typedef typename _Alloc_traits::const_pointer	_Ptr_const;442,13643
	_Map_alloc_type;446,13782
      typedef __gnu_cxx::__alloc_traits<_Map_alloc_type> _Map_alloc_traits;447,13800
      typedef _Alloc		  allocator_type;449,13877
      get_allocator(452,13939
      typedef _Deque_iterator<_Tp,_Tp455,14042
      typedef _Deque_iterator<_Tp, _Tp&, _Ptr>	  iterator;455,14042
      typedef _Deque_iterator<_Tp,_Tp456,14101
      typedef _Deque_iterator<_Tp, const _Tp&, _Ptr_const>   const_iterator;456,14101
      _Deque_base(458,14179
      _Deque_base(462,14250
      _Deque_base(466,14355
      _Deque_base(470,14490
      _Deque_base(475,14628
      _Deque_base(483,14828
      _Deque_base(487,14990
      typedef typename iterator::_Map_pointer _Map_pointer;507,15354
      struct _Deque_impl_data509,15415
	_Map_pointer _M_map;511,15453
	size_t _M_map_size;512,15475
	iterator _M_start;513,15496
	iterator _M_finish;514,15516
	_Deque_impl_data(516,15538
	_Deque_impl_data(525,15782
	_M_swap_data(531,15903
      struct _Deque_impl542,16272
	_Deque_impl(545,16360
	_Deque_impl(550,16483
	_Deque_impl(557,16637
	_Deque_impl(561,16721
      _M_get_Tp_allocator(568,16887
      _M_get_Tp_allocator(572,16994
      _M_get_map_allocator(576,17101
      _M_allocate_node(580,17223
	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Traits;582,17256
      _M_deallocate_node(587,17403
	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Traits;589,17464
      _M_allocate_map(594,17619
      _M_deallocate_map(601,17791
      enum { _S_initial_map_size 611,18204
      _Deque_impl _M_impl;613,18245
      typedef typename _Alloc::value_type	792,25460
      typedef _Deque_base<_Tp, _Alloc>			_Base;808,26066
      typedef typename _Base::_Tp_alloc_type	809,26114
      typedef typename _Base::_Alloc_traits	810,26176
      typedef typename _Base::_Map_pointer	811,26236
      typedef _Tp					value_type;814,26307
      typedef typename _Alloc_traits::pointer	815,26341
      typedef typename _Alloc_traits::const_pointer	816,26397
      typedef typename _Alloc_traits::reference	817,26464
      typedef typename _Alloc_traits::const_reference	818,26524
      typedef typename _Base::iterator	819,26595
      typedef typename _Base::const_iterator	820,26646
      typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;821,26708
      typedef std::reverse_iterator<iterator>		reverse_iterator;822,26784
      typedef size_t					size_type;823,26849
      typedef ptrdiff_t					difference_type;824,26885
      typedef _Alloc					allocator_type;825,26930
	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;1017,33425
      operator=(operator=1052,34661
      operator=(operator=1071,35315
	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;1116,36843
	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;1755,57591
    operator==(operator==2290,75013
    operator<=>(operator<=>2309,75774
    operator<(2330,76516
    operator!=(operator!=2338,76800
    operator>(2345,77014
    operator<=(operator<=2352,77223
    operator>=(operator>=2359,77436
#undef _GLIBCXX_DEQUE_BUF_SIZE2370,77793
    struct __is_bitwise_relocatable<__is_bitwise_relocatable2378,78000

/usr/include/c++/13/bits/stl_function.h,9256
#define _STL_FUNCTION_H 57,2379
namespace std _GLIBCXX_VISIBILITY(63,2463
    struct unary_function117,4955
      typedef _Arg 	argument_type;120,5042
      typedef _Result 	result_type;123,5125
    struct binary_function131,5405
      typedef _Arg1 	first_argument_type;134,5505
      typedef _Arg2 	second_argument_type;137,5618
      typedef _Result 	result_type;140,5706
    struct plus 184,6743
      operator(189,6868
    struct minus 195,7050
      operator(199,7150
    struct multiplies 205,7332
      operator(209,7437
    struct divides 215,7619
      operator(219,7721
    struct modulus 225,7903
      operator(229,8005
    struct negate 235,8187
      operator(239,8282
#define __cpp_lib_transparent_operators 246,8406
      typedef __is_transparent is_transparent;259,8801
    struct minus<minus264,8935
      template <typename _Tp,266,8964
	-> decltype(271,9145
      typedef __is_transparent is_transparent;274,9269
    struct multiplies<multiplies279,9403
      template <typename _Tp,281,9437
	-> decltype(286,9618
      typedef __is_transparent is_transparent;289,9742
    struct divides<divides294,9876
      template <typename _Tp,296,9907
	-> decltype(301,10088
      typedef __is_transparent is_transparent;304,10212
    struct modulus<modulus309,10346
      template <typename _Tp,311,10377
	-> decltype(316,10558
      typedef __is_transparent is_transparent;319,10682
    struct negate<negate324,10816
	-> decltype(-std::forward<forward331,10978
      typedef __is_transparent is_transparent;334,11054
    struct equal_to 373,11908
      operator()(operator()377,12013
    struct not_equal_to 383,12202
      operator()(operator()387,12311
    struct greater 393,12500
      operator()(operator()397,12604
    struct less 403,12792
      operator()(operator()407,12893
    struct greater_equal 413,13081
      operator()(operator()417,13191
    struct less_equal 423,13380
      operator()(operator()427,13487
    struct greater<greater433,13662
      operator()(operator()436,13768
    struct less<less448,14079
      operator()(operator()451,14182
    struct greater_equal<greater_equal463,14502
      operator()(operator()466,14614
    struct less_equal<less_equal478,14933
      operator()(operator()481,15042
    struct equal_to<equal_to495,15414
      template <typename _Tp,497,15446
	-> decltype(501,15616
      typedef __is_transparent is_transparent;504,15742
    struct not_equal_to<not_equal_to509,15882
      template <typename _Tp,511,15918
	-> decltype(515,16088
      typedef __is_transparent is_transparent;518,16214
    struct greater<greater523,16354
      template <typename _Tp,525,16385
	-> decltype(529,16554
      template<typename _Tp,535,16715
	operator()(operator()537,16774
      typedef __is_transparent is_transparent;540,16882
    private:private542,16930
	static constexpr decltype(544,16987
      template <typename _Tp,548,17124
	_S_cmp(550,17191
      template<typename _Tp,558,17487
      template<typename _Tp, typename _Up,558,17487
      template<typename _Tp,562,17636
	: false_type 565,17791
      template<typename _Tp,568,17881
      template<typename _Tp, typename _Up,568,17881
      template<typename _Tp,572,18047
	: false_type 575,18202
      template<typename _Tp,577,18222
	      is_convertible<is_convertible579,18319
	      is_convertible<is_convertible580,18369
    struct less<less585,18513
      template <typename _Tp,587,18541
	-> decltype(591,18710
      template<typename _Tp,597,18871
	operator()(operator()599,18930
      typedef __is_transparent is_transparent;602,19035
    private:private604,19083
	static constexpr decltype(606,19140
      template <typename _Tp,610,19277
	_S_cmp(612,19344
      template<typename _Tp,620,19637
      template<typename _Tp, typename _Up,620,19637
      template<typename _Tp,624,19786
	: false_type 627,19941
      template<typename _Tp,630,20031
      template<typename _Tp, typename _Up,630,20031
      template<typename _Tp,634,20197
	: false_type 637,20352
      template<typename _Tp,639,20372
	      is_convertible<is_convertible641,20469
	      is_convertible<is_convertible642,20519
    struct greater_equal<greater_equal647,20663
      template <typename _Tp,649,20700
	-> decltype(653,20870
      template<typename _Tp,659,21032
	operator()(operator()661,21091
      typedef __is_transparent is_transparent;664,21205
    private:private666,21253
	static constexpr decltype(668,21310
      template <typename _Tp,672,21448
	_S_cmp(674,21515
      template<typename _Tp,682,21818
      template<typename _Tp, typename _Up,682,21818
      template<typename _Tp,686,21968
	: false_type 689,22124
      template<typename _Tp,692,22215
      template<typename _Tp, typename _Up,692,22215
      template<typename _Tp,696,22382
      template<typename _Tp,701,22558
	      is_convertible<is_convertible703,22655
	      is_convertible<is_convertible704,22705
    struct less_equal<less_equal709,22849
      template <typename _Tp,711,22883
	-> decltype(715,23053
      template<typename _Tp,721,23215
	operator()(operator()723,23274
      typedef __is_transparent is_transparent;726,23385
    private:private728,23433
	static constexpr decltype(730,23490
      template <typename _Tp,734,23628
	_S_cmp(736,23695
      template<typename _Tp,744,23995
      template<typename _Tp, typename _Up,744,23995
      template<typename _Tp,748,24145
	: false_type 751,24301
      template<typename _Tp,754,24392
      template<typename _Tp, typename _Up,754,24392
      template<typename _Tp,758,24559
      template<typename _Tp,763,24735
	      is_convertible<is_convertible765,24832
	      is_convertible<is_convertible766,24882
    struct logical_and 796,25602
      operator()(operator()800,25710
    struct logical_or 806,25904
      operator()(operator()810,26011
    struct logical_not 816,26205
      operator()(operator()820,26307
    struct logical_and<logical_and828,26520
      template <typename _Tp,830,26555
	-> decltype(835,26737
      typedef __is_transparent is_transparent;838,26863
    struct logical_or<logical_or843,27008
      template <typename _Tp,845,27042
	-> decltype(850,27224
      typedef __is_transparent is_transparent;853,27350
    struct logical_not<logical_not858,27495
	-> decltype(!std::forward<forward865,27662
      typedef __is_transparent is_transparent;868,27738
    struct bit_and 893,28245
      operator()(operator()897,28347
    struct bit_or 902,28463
      operator()(operator()906,28564
    struct bit_xor 911,28680
      operator()(operator()915,28782
    struct bit_not 920,28898
      operator()(operator()924,28992
    struct bit_and<bit_and931,29129
      template <typename _Tp,933,29160
	-> decltype(938,29341
      typedef __is_transparent is_transparent;941,29465
    struct bit_or<bit_or945,29534
      template <typename _Tp,947,29564
	-> decltype(952,29745
      typedef __is_transparent is_transparent;955,29869
    struct bit_xor<bit_xor959,29938
      template <typename _Tp,961,29969
	-> decltype(966,30150
      typedef __is_transparent is_transparent;969,30274
    struct bit_not<bit_not973,30343
	-> decltype(980,30506
      typedef __is_transparent is_transparent;983,30582
      operator()(operator()1037,32334
      operator()(operator()1065,33198
    class pointer_to_unary_function 1105,34971
      pointer_to_unary_function(1111,35111
      pointer_to_unary_function(1114,35165
      operator()(operator()1118,35258
    class pointer_to_binary_function1131,35816
      pointer_to_binary_function(1138,35978
      pointer_to_binary_function(1141,36033
      operator()(operator()1145,36135
    struct _Identity1158,36650
      operator()(operator()1162,36726
      operator()(operator()1166,36799
  template<typename _Tp> struct _Identity<_Identity1171,36948
    struct _Select1st1174,37051
      operator()(operator()1178,37176
      operator()(operator()1182,37280
        operator()(operator()1188,37446
        operator()(operator()1193,37590
    struct _Select2nd1199,37706
      operator()(operator()1203,37833
      operator()(operator()1207,37939
    class mem_fun_t 1232,38891
      mem_fun_t(1236,38980
      operator()(operator()1240,39052
    class const_mem_fun_t 1249,39306
      const_mem_fun_t(1253,39407
      operator()(operator()1257,39491
    class mem_fun_ref_t 1266,39757
      mem_fun_ref_t(1270,39849
      operator()(operator()1274,39925
    class const_mem_fun_ref_t 1283,40178
      const_mem_fun_ref_t(1287,40276
      operator()(operator()1291,40364
    class mem_fun1_t 1300,40644
      mem_fun1_t(1304,40741
      operator()(operator()1308,40818
    class const_mem_fun1_t 1317,41104
      const_mem_fun1_t(1321,41213
      operator()(operator()1325,41302
    class mem_fun1_ref_t 1334,41600
      mem_fun1_ref_t(1338,41700
      operator()(operator()1342,41781
    class const_mem_fun1_ref_t 1351,42066
      const_mem_fun1_ref_t(1355,42172
      operator()(operator()1359,42265
    { typedef void type;1427,44669

/usr/include/c++/13/bits/stl_heap.h,848
#define _STL_HEAP_H 56,2354
namespace std _GLIBCXX_VISIBILITY(63,2501
      typedef __decltype(__comp)107,3758
      typedef typename iterator_traits<iterator_traits164,5717
      typedef typename iterator_traits<iterator_traits166,5806
      typedef typename iterator_traits<iterator_traits201,7188
      typedef typename iterator_traits<iterator_traits203,7277
      typedef typename iterator_traits<iterator_traits257,9346
      typedef typename iterator_traits<iterator_traits259,9433
	  typedef __decltype(__comp)330,11962
      typedef typename iterator_traits<iterator_traits343,12345
      typedef typename iterator_traits<iterator_traits345,12434
      typedef __decltype(__comp)411,14606
      typedef __decltype(__comp)478,16859
      typedef __decltype(__comp)535,19054
      typedef __decltype(__comp)575,20528

/usr/include/c++/13/bits/stl_iterator.h,12246
#define _STL_ITERATOR_H 61,2555
# define __cpp_lib_array_constexpr 74,2825
# define __cpp_lib_constexpr_iterator 75,2868
# define __cpp_lib_array_constexpr 77,2943
namespace std _GLIBCXX_VISIBILITY(88,3172
    class reverse_iterator136,4830
      _Iterator current;155,5552
      typedef iterator_traits<_Iterator>		__traits_type;157,5578
      typedef _Iterator					iterator_type;160,5648
      typedef typename __traits_type::pointer		pointer;161,5691
      typedef typename __traits_type::difference_type	difference_type;163,5772
      typedef typename __traits_type::reference		reference;164,5843
			  random_access_iterator_tag,168,5992
      reverse_iterator(186,6727
      reverse_iterator(195,6963
      reverse_iterator(204,7178
        reverse_iterator(222,7714
	operator=(operator=235,8069
      base(248,8384
      operator*(264,9002
	|| requires(280,9416
      operator++(296,9800
      operator++(308,10031
      operator--(321,10277
      operator--(333,10532
      operator+(347,10869
      operator+=(operator+=357,11193
      operator-(370,11518
      operator-=(operator-=380,11841
	_S_to_pointer(425,13150
	_S_to_pointer(430,13266
    operator==(operator==448,13712
    operator<(455,13948
    operator!=(operator!=462,14181
    operator>(469,14406
    operator<=(operator<=476,14625
    operator>=(operator>=483,14849
    operator==(operator==493,15201
    operator<(500,15461
    operator!=(operator!=507,15718
    operator>(514,15978
    operator<=(operator<=520,16212
    operator>=(operator>=527,16472
    operator==(operator==534,16723
    operator!=(operator!=542,17040
    operator<(550,17357
    operator>(558,17670
    operator<=(operator<=566,17983
    operator>=(operator>=574,18300
    operator<=>(operator<=>583,18696
    operator==(operator==593,19037
    operator<=>(operator<=>601,19386
    operator-(610,19673
    operator-(616,19934
    operator+(634,20613
#  define __cpp_lib_make_reverse_iterator 646,21104
    struct __is_move_iterator<__is_move_iterator674,22100
    class back_insert_iterator698,22863
      _Container* container;702,22982
      typedef _Container          container_type;706,23096
      back_insert_iterator(713,23326
      operator=(operator=729,24037
      operator=(operator=737,24223
      operator=(operator=745,24406
      operator*(755,24653
      operator++(761,24819
      operator++(767,24985
    class front_insert_iterator799,26131
      _Container* container;803,26251
      typedef _Container          container_type;807,26365
      front_insert_iterator(814,26595
      operator=(operator=830,27313
      operator=(operator=838,27501
      operator=(operator=846,27686
      operator*(856,27935
      operator++(862,28102
      operator++(868,28269
    class insert_iterator904,29586
      typedef typename _Container::iterator		_Iter;910,29810
      _Container* container;913,29884
      _Iter iter;914,29913
      typedef _Container          container_type;918,30016
      insert_iterator(929,30361
      operator=(operator=957,31416
      operator=(operator=966,31616
      operator=(operator=975,31813
      operator*(986,32074
      operator++(992,32235
      operator++(998,32397
namespace __gnu_cxx _GLIBCXX_VISIBILITY(1035,33626
    class __normal_iterator1047,34219
      _Iterator _M_current;1050,34268
      typedef std::iterator_traits<_Iterator>		__traits_type;1052,34297
      typedef _Iterator					iterator_type;1061,34535
      typedef typename __traits_type::iterator_category iterator_category;1062,34578
      typedef typename __traits_type::value_type  	value_type;1063,34653
      typedef typename __traits_type::difference_type 	difference_type;1064,34716
      typedef typename __traits_type::reference 	reference;1065,34788
      typedef typename __traits_type::pointer   	pointer;1066,34848
      _GLIBCXX_CONSTEXPR __normal_iterator(1072,35036
      __normal_iterator(1076,35172
      template<typename _Iter,1081,35345
        __normal_iterator(1089,35690
      operator*(1099,36009
      operator->(1104,36123
      operator++(1109,36248
      operator++(1117,36383
      operator--(1123,36571
      operator--(1131,36706
      operator+=(operator+=1142,37034
      operator+(1147,37185
      operator-=(operator-=1152,37353
      operator-(1157,37504
      base(1162,37670
    operator==(operator==1178,38385
    operator<=>(operator<=>1189,38877
    operator==(operator==1197,39247
    operator<=>(operator<=>1208,39702
    operator==(operator==1217,40156
    operator==(operator==1225,40471
    operator!=(operator!=1233,40806
    operator!=(operator!=1241,41121
    operator<(1250,41476
    operator<(1258,41788
    operator>(1266,42099
    operator>(1274,42411
    operator<=(operator<=1282,42722
    operator<=(operator<=1290,43037
    operator>=(operator>=1298,43351
    operator>=(operator>=1306,43666
    operator-(1326,44546
    operator-(1334,44905
    operator+(1342,45251
namespace std _GLIBCXX_VISIBILITY(1350,45542
    class move_sentinel1381,46509
      move_sentinel(1385,46567
      move_sentinel(1390,46695
	move_sentinel(1396,46901
	operator=(operator=1403,47133
      base(1412,47320
      _Sent _M_last;1417,47434
  namespace __detail1421,47479
      struct __move_iter_cat1425,47585
      struct __move_iter_cat<__move_iter_cat1430,47726
    class move_iterator1449,48359
      _Iterator _M_current;1454,48496
      _S_iter_concept(1474,49121
# define __cpp_lib_move_iterator_concept 1492,49656
      typedef typename __traits_type::iterator_category iterator_category;1501,50029
      typedef typename __traits_type::value_type  	value_type;1502,50104
      typedef typename __traits_type::difference_type	difference_type;1503,50167
      typedef _Iterator					pointer;1505,50259
      move_iterator(1515,50580
      move_iterator(1519,50664
	move_iterator(1527,50857
	move_iterator& operator=(operator=1536,51102
      base(1545,51309
      operator*(1561,51655
      operator->(1570,51902
      operator++(1574,51999
      operator++(1581,52106
      operator++(1590,52249
      operator--(1595,52385
      operator--(1602,52492
      operator+(1611,52656
      operator+=(operator+=1615,52792
      operator-(1623,52947
      operator-=(operator-=1627,53087
	operator==(operator==1646,53576
	operator-(1652,53800
	operator-(1658,54022
    operator==(operator==1678,54782
    operator<=>(operator<=>1690,55266
    operator!=(operator!=1697,55520
    operator<(1705,55769
    operator<=(operator<=1715,56153
    operator>(1725,56528
    operator>=(operator>=1735,56898
    operator==(operator==1748,57397
    operator<=>(operator<=>1756,57688
    operator!=(operator!=1763,57918
    operator<(1770,58136
    operator<=(operator<=1777,58362
    operator>(1784,58579
    operator>=(operator>=1791,58791
    operator+(1808,59350
  namespace __detail1838,60530
	    || constructible_from<constructible_from1844,60753
	  && constructible_from<constructible_from1849,60959
	  && move_constructible<move_constructible1850,61026
  class common_iterator1856,61289
    template<typename _Tp,1858,61317
      _S_noexcept1(1860,61386
    template<typename _It2,1868,61582
      _S_noexcept(1870,61655
    class __arrow_proxy1873,61753
      iter_value_t<_It> _M_keep;1875,61783
      __arrow_proxy(1878,61833
      operator->(1885,62009
    class __postfix_proxy1889,62095
      iter_value_t<_It> _M_keep;1891,62127
      __postfix_proxy(1894,62177
      operator*(1901,62381
    : _M_it(1910,62588
    : _M_it(), _M_index(1910,62588
    common_iterator(1914,62638
    common_iterator(1920,62782
    template<typename _It2,1925,62918
      common_iterator(1929,63068
    common_iterator(1953,63780
    common_iterator(1977,64466
    operator=(operator=2003,65233
    operator=(operator=2019,65720
    template<typename _It2,2031,66106
      operator=(operator=2037,66355
    ~common_iterator(2052,66853
    operator*(2068,67169
    operator++(2099,67902
    operator++(2107,68035
    template<typename _It2,2126,68386
      requires sentinel_for<sentinel_for2127,68440
      operator== operator==2129,68509
    template<typename _It2,2148,68970
      requires sentinel_for<sentinel_for2149,69024
      requires sentinel_for<_Sent, _It2> && equality_comparable_with<equality_comparable_with2149,69024
      operator== operator==2151,69132
    template<sized_sentinel_for<_It> _It2,2171,69629
      requires sized_sentinel_for<sized_sentinel_for2172,69704
      operator- 2174,69798
    template<indirectly_swappable<_It> _It2,2204,70606
  private:private2216,71034
    _M_has_value(2222,71230
      _M_assign(2226,71351
      _It _M_it;2255,72015
      _Sent _M_sent;2256,72032
      unsigned char _M_valueless;2257,72053
    unsigned char _M_index;2259,72094
    static constexpr unsigned char _S_valueless{_S_valueless2261,72167
	struct __ptr2275,72548
	struct __ptr<__ptr2282,72674
  namespace __detail2311,73512
      struct __counted_iter_value_type2314,73564
      struct __counted_iter_value_type<__counted_iter_value_type2318,73653
      struct __counted_iter_concept2322,73774
      struct __counted_iter_concept<__counted_iter_concept2327,73909
      struct __counted_iter_cat2331,74046
      struct __counted_iter_cat<__counted_iter_cat2336,74178
    class counted_iterator2342,74402
      counted_iterator(2357,74954
	counted_iterator(2364,75188
	operator=(operator=2371,75407
      noexcept(2386,75702
      count(2391,75855
      operator*(2395,75958
      operator++(2419,76525
      operator++(2428,76670
	operator-(2496,78282
      operator-(2502,78471
      operator-(2507,78636
	operator==(operator==2533,79306
      operator==(operator==2539,79480
	operator<=>(operator<=>2545,79671
    struct iterator_traits<iterator_traits2578,80733
				      add_pointer_t<add_pointer_t2581,80876
  namespace __detail2592,81183
      struct __basic_const_iterator_iter_cat2612,81837
      struct __basic_const_iterator_iter_cat<__basic_const_iterator_iter_cat2616,81929
  namespace __detail2624,82215
      struct __const_sentinel2627,82269
      struct __const_sentinel<__const_sentinel2631,82366
  class basic_const_iterator2639,82616
    _S_iter_concept(2647,82884
    basic_const_iterator(2671,83627
      basic_const_iterator(2678,83821
      requires convertible_to<convertible_to2684,84070
      basic_const_iterator(2686,84126
    noexcept(2697,84396
    operator*(2701,84512
      && same_as<same_as2709,84822
    operator++(2718,85072
    operator++(2726,85198
      operator==(operator==2785,86693
      requires random_access_iterator<_It> && totally_ordered_with<totally_ordered_with2823,88077
      requires random_access_iterator<_It> && totally_ordered_with<totally_ordered_with2830,88362
      requires random_access_iterator<_It> && totally_ordered_with<totally_ordered_with2837,88649
      requires random_access_iterator<_It> && totally_ordered_with<totally_ordered_with2844,88937
      requires random_access_iterator<_It> && totally_ordered_with<totally_ordered_with2851,89227
	&& three_way_comparable_with<three_way_comparable_with2852,89305
      requires random_access_iterator<_It> && totally_ordered_with<totally_ordered_with2859,89577
      requires random_access_iterator<_It> && totally_ordered_with<totally_ordered_with2866,89888
      requires random_access_iterator<_It> && totally_ordered_with<totally_ordered_with2873,90201
      requires random_access_iterator<_It> && totally_ordered_with<totally_ordered_with2880,90515
      operator-(2903,91544
      requires sized_sentinel_for<sized_sentinel_for2908,91716
      operator-(2910,91801
    struct __is_move_iterator<__is_move_iterator2959,93624
      enum { __value 2961,93687
      typedef __true_type __type;2962,93715
#define _GLIBCXX_MAKE_MOVE_ITERATOR(2972,93956
#define _GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(2973,94030
#define _GLIBCXX_MAKE_MOVE_ITERATOR(2976,94140
#define _GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(2977,94191

/usr/include/c++/13/bits/stl_iterator_base_funcs.h,87
#define _STL_ITERATOR_BASE_FUNCS_H 60,2522
namespace std _GLIBCXX_VISIBILITY(68,2692

/usr/include/c++/13/bits/stl_iterator_base_types.h,2211
#define _STL_ITERATOR_BASE_TYPES_H 60,2539
namespace std _GLIBCXX_VISIBILITY(74,2825
  struct input_iterator_tag 93,3421
  struct output_iterator_tag 96,3488
  struct forward_iterator_tag 99,3596
  struct bidirectional_iterator_tag 103,3747
  struct random_access_iterator_tag 107,3912
  struct contiguous_iterator_tag 111,4091
      typedef _Category  iterator_category;130,4829
      typedef _Tp        value_type;132,4922
      typedef _Distance  difference_type;134,5025
      typedef _Pointer   pointer;136,5123
      typedef _Reference reference;138,5215
      typedef typename _Iterator::iterator_category 168,6193
      typedef typename _Iterator::value_type 169,6264
      typedef typename _Iterator::difference_type 170,6328
      typedef typename _Iterator::pointer 171,6397
      typedef typename _Iterator::reference 172,6458
    struct iterator_traits177,6581
    struct iterator_traits182,6704
      typedef typename _Iterator::iterator_category iterator_category;184,6737
      typedef typename _Iterator::value_type        value_type;185,6808
      typedef typename _Iterator::difference_type   difference_type;186,6872
      typedef typename _Iterator::pointer           pointer;187,6941
      typedef typename _Iterator::reference         reference;188,7002
    struct iterator_traits<iterator_traits198,7262
    struct iterator_traits<iterator_traits210,7666
      typedef random_access_iterator_tag iterator_category;212,7705
      typedef _Tp                         value_type;213,7765
      typedef ptrdiff_t                   difference_type;214,7819
      typedef _Tp*                        pointer;215,7878
      typedef _Tp&                        reference;216,7929
    struct iterator_traits<iterator_traits221,8069
      typedef random_access_iterator_tag iterator_category;223,8114
      typedef _Tp                         value_type;224,8174
      typedef ptrdiff_t                   difference_type;225,8228
      typedef const _Tp*                  pointer;226,8287
      typedef const _Tp&                  reference;227,8338
      typedef is_base_of<random_access_iterator_tag, _Cat> _Base;259,9264
      enum { __value 260,9330

/usr/include/c++/13/bits/stl_list.h,6535
#define _STL_LIST_H 58,2401
namespace std _GLIBCXX_VISIBILITY(68,2613
    struct _List_node_base81,3038
      _List_node_base* _M_next;83,3071
      _List_node_base* _M_prev;84,3103
      swap(87,3154
    struct _List_node_header 104,3582
      std::size_t _M_size;107,3669
      _List_node_header(110,3704
      _List_node_header(114,3797
      , _M_size(117,3935
      _M_move_nodes(130,4195
      _M_init(150,4675
      _List_node_base* _M_base(159,4832
    struct _Scratch_list 163,4944
      _Scratch_list(165,4993
      bool empty(167,5046
      void swap(169,5100
      template<typename _Iter,171,5178
	struct _Ptr_cmp172,5224
	  _Cmp _M_cmp;174,5244
	  operator()(operator()177,5269
	  operator()(operator()186,5503
	merge(194,5762
      void _M_take_one(217,6388
      void _M_put_all(221,6530
    struct _List_node 234,6770
      __gnu_cxx::__aligned_membuf<_Tp> _M_storage;237,6860
      _Tp*       _M_valptr(238,6911
      _Tp const* _M_valptr(239,6978
      _Tp _M_data;241,7051
      _Tp*       _M_valptr(242,7070
      _Tp const* _M_valptr(243,7143
    struct _List_iterator253,7345
      typedef _List_iterator<_Tp>		_Self;255,7377
      typedef _List_node<_Tp>			_Node;256,7419
      typedef ptrdiff_t				difference_type;258,7459
      typedef std::bidirectional_iterator_tag	iterator_category;259,7503
      typedef _Tp				value_type;260,7568
      typedef _Tp*				pointer;261,7601
      typedef _Tp&				reference;262,7632
      _List_iterator(264,7666
      _List_iterator(268,7745
      _M_const_cast(272,7854
      operator*(278,8041
      operator->(283,8184
      operator++(287,8301
      operator++(294,8411
      operator--(302,8547
      operator--(309,8657
      operator==(operator==318,8823
      operator!=(operator!=324,9029
      __detail::_List_node_base* _M_node;329,9207
    struct _List_const_iterator338,9377
      typedef _List_const_iterator<_Tp>		_Self;340,9415
      typedef const _List_node<_Tp>		_Node;341,9463
      typedef _List_iterator<_Tp>		iterator;342,9507
      typedef ptrdiff_t				difference_type;344,9553
      typedef std::bidirectional_iterator_tag	iterator_category;345,9597
      typedef _Tp				value_type;346,9662
      typedef const _Tp*			pointer;347,9695
      typedef const _Tp&			reference;348,9731
      _List_const_iterator(350,9770
      _List_const_iterator(354,9855
      _List_const_iterator(358,9970
      _M_const_cast(362,10085
      operator*(368,10323
      operator->(373,10466
      operator++(377,10583
      operator++(384,10693
      operator--(392,10829
      operator--(399,10939
      operator==(operator==408,11105
      operator!=(operator!=414,11311
      const __detail::_List_node_base* _M_node;419,11489
    class _List_base425,11679
	rebind<_Tp>::other				_Tp_alloc_type;429,11788
      typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type>	_Tp_alloc_traits;430,11827
	rebind<_List_node<_Tp> >::other _Node_alloc_type;432,11951
      typedef __gnu_cxx::__alloc_traits<_Node_alloc_type> _Node_alloc_traits;433,12002
      _S_distance(437,12130
      struct _List_impl450,12371
	__detail::_List_node_header _M_node;453,12435
	_List_impl(455,12474
	_List_impl(460,12602
	_List_impl(467,12757
	_List_impl(471,12886
      _List_impl _M_impl;477,12989
      size_t _M_get_size(480,13043
      void _M_set_size(482,13113
      void _M_inc_size(484,13184
      void _M_dec_size(486,13256
      _M_distance(490,13371
      size_t _M_node_count(495,13562
      size_t _M_get_size(499,13701
      void _M_set_size(500,13748
      void _M_inc_size(501,13783
      void _M_dec_size(502,13818
      size_t _M_distance(505,13884
      size_t _M_node_count(508,13991
      _M_get_node(517,14188
      _M_put_node(521,14279
      typedef _Alloc allocator_type;525,14427
      _M_get_Node_allocator(528,14489
      _M_get_Node_allocator(532,14594
      _List_base(538,14738
      _List_base(541,14769
      _List_base(549,14965
      _List_base(559,15269
      _List_base(564,15442
      _M_move_nodes(569,15537
      ~_List_base(574,15706
      _M_init(581,15826
      typedef typename _Alloc::value_type	636,18231
      typedef _List_base<_Tp, _Alloc>			_Base;652,18836
      typedef typename _Base::_Tp_alloc_type	653,18883
      typedef typename _Base::_Tp_alloc_traits	654,18945
      typedef typename _Base::_Node_alloc_type	655,19011
      typedef typename _Base::_Node_alloc_traits	656,19077
      typedef _Tp					 value_type;659,19159
      typedef typename _Tp_alloc_traits::pointer	660,19194
      typedef typename _Tp_alloc_traits::const_pointer	661,19253
      typedef typename _Tp_alloc_traits::reference	662,19324
      typedef typename _Tp_alloc_traits::const_reference 663,19387
      typedef _List_iterator<_Tp>			 iterator;664,19461
      typedef _List_const_iterator<_Tp>			 const_iterator;665,19508
      typedef std::reverse_iterator<const_iterator>	 const_reverse_iterator;666,19567
      typedef std::reverse_iterator<iterator>		 reverse_iterator;667,19644
      typedef size_t					 size_type;668,19710
      typedef ptrdiff_t					 difference_type;669,19747
      typedef _Alloc					 allocator_type;670,19793
      typedef _List_node<_Tp>				 _Node;675,19940
	  typedef typename std::__is_integer<std::__is_integer890,26884
      operator=(operator=929,28167
      operator=(operator=947,28784
	  typedef typename std::__is_integer<std::__is_integer992,30332
# define __cpp_lib_list_remove_return_type 1765,56775
      typedef size_type __remove_return_type;1766,56826
# define _GLIBCXX_LIST_REMOVE_RETURN_TYPE_TAG 1767,56872
      typedef void __remove_return_type;1770,56972
# define _GLIBCXX_LIST_REMOVE_RETURN_TYPE_TAG1771,57013
#undef _GLIBCXX_LIST_REMOVE_RETURN_TYPE_TAG1835,59574
      struct _Finalize_merge2065,66192
	_Finalize_merge(2068,66239
	~_Finalize_merge(2072,66372
	list& _M_dest;2083,66817
	list& _M_src;2084,66833
	const iterator& _M_next;2085,66848
      struct _Finalize_merge2092,66975
      { explicit _Finalize_merge(2093,67004
    operator==(operator==2123,68006
      typedef typename list<list2130,68173
    operator<=>(operator<=>2159,69138
    operator<(2180,69876
    operator!=(operator!=2188,70158
    operator>(2195,70370
    operator<=(operator<=2202,70577
    operator>=(operator>=2209,70788
      typedef _GLIBCXX_STD_C::_List_const_iterator<_Tp> _CIter;2231,71475
      typedef __detail::_List_node_header _Sentinel;2241,71820

/usr/include/c++/13/bits/stl_map.h,2015
#define _STL_MAP_H 57,2357
namespace std _GLIBCXX_VISIBILITY(66,2521
      typedef _Key					key_type;105,4025
      typedef _Tp					mapped_type;106,4058
      typedef std::pair<const _Key, _Tp>		value_type;107,4093
      typedef _Compare					key_compare;108,4147
      typedef _Alloc					allocator_type;109,4187
      typedef typename _Alloc::value_type	114,4303
      class value_compare133,4970
	friend class map<_Key, _Tp,136,5070
	friend class map<_Key, _Tp, _Compare,136,5070
	_Compare comp;138,5135
	value_compare(140,5152
	bool operator()(operator()144,5213
      typedef typename __gnu_cxx::__alloc_traits<__gnu_cxx::__alloc_traits151,5429
		       key_compare, _Pair_alloc_type> _Rep_type;155,5611
      typedef __gnu_cxx::__alloc_traits<_Pair_alloc_type> _Alloc_traits;160,5723
      typedef typename _Alloc_traits::pointer	172,6154
      typedef typename _Alloc_traits::const_pointer	173,6211
      typedef typename _Alloc_traits::reference	174,6279
      typedef typename _Alloc_traits::const_reference	175,6340
      typedef typename _Rep_type::iterator	176,6412
      typedef typename _Rep_type::const_iterator	177,6467
      typedef typename _Rep_type::size_type	178,6533
      typedef typename _Rep_type::difference_type	179,6590
      typedef typename _Rep_type::reverse_iterator	180,6658
      typedef typename _Rep_type::const_reverse_iterator 181,6728
      operator=(operator=324,11612
      operator=(operator=349,12247
#define __cpp_lib_map_try_emplace 700,23506
    operator==(operator==1513,52379
    operator<=>(operator<=>1534,53276
    operator<(1551,53929
    operator!=(operator!=1558,54195
    operator>(1565,54456
    operator<=(operator<=1572,54711
    operator>=(operator>=1579,54971
    _Rb_tree_merge_helper<_Rb_tree_merge_helper1599,55653
      friend class _GLIBCXX_STD_C::map<_Key, _Val,1603,55758
      friend class _GLIBCXX_STD_C::map<_Key, _Val, _Cmp1,1603,55758
      _S_get_tree(1606,55845
      _S_get_tree(1610,55967

/usr/include/c++/13/bits/stl_multimap.h,1995
#define _STL_MULTIMAP_H 57,2372
namespace std _GLIBCXX_VISIBILITY(64,2494
      typedef _Key					key_type;104,4018
      typedef _Tp					mapped_type;105,4051
      typedef std::pair<const _Key, _Tp>		value_type;106,4086
      typedef _Compare					key_compare;107,4140
      typedef _Alloc					allocator_type;108,4180
      typedef typename _Alloc::value_type	113,4296
      class value_compare132,4968
	friend class multimap<_Key, _Tp,135,5068
	friend class multimap<_Key, _Tp, _Compare,135,5068
	_Compare comp;137,5138
	value_compare(139,5155
	bool operator()(operator()143,5216
      typedef typename __gnu_cxx::__alloc_traits<__gnu_cxx::__alloc_traits150,5432
		       key_compare, _Pair_alloc_type> _Rep_type;154,5614
      typedef __gnu_cxx::__alloc_traits<_Pair_alloc_type> _Alloc_traits;158,5725
      typedef typename _Alloc_traits::pointer	163,5925
      typedef typename _Alloc_traits::const_pointer	164,5982
      typedef typename _Alloc_traits::reference	165,6050
      typedef typename _Alloc_traits::const_reference	166,6111
      typedef typename _Rep_type::iterator	167,6183
      typedef typename _Rep_type::const_iterator	168,6238
      typedef typename _Rep_type::size_type	169,6304
      typedef typename _Rep_type::difference_type	170,6361
      typedef typename _Rep_type::reverse_iterator	171,6429
      typedef typename _Rep_type::const_reverse_iterator 172,6499
      operator=(operator=313,11459
      operator=(operator=338,12144
    operator==(operator==1134,39799
    operator<=>(operator<=>1155,40721
    operator<(1172,41406
    operator!=(operator!=1179,41682
    operator>(1186,41953
    operator<=(operator<=1193,42218
    operator>=(operator>=1200,42488
    _Rb_tree_merge_helper<_Rb_tree_merge_helper1220,43200
      friend class _GLIBCXX_STD_C::multimap<_Key, _Val,1224,43310
      friend class _GLIBCXX_STD_C::multimap<_Key, _Val, _Cmp1,1224,43310
      _S_get_tree(1227,43402
      _S_get_tree(1231,43524

/usr/include/c++/13/bits/stl_multiset.h,1689
#define _STL_MULTISET_H 57,2367
namespace std _GLIBCXX_VISIBILITY(64,2489
      typedef typename _Alloc::value_type	101,3838
      typedef _Key     key_type;121,4575
      typedef _Key     value_type;122,4608
      typedef _Compare key_compare;123,4643
      typedef _Compare value_compare;124,4679
      typedef _Alloc   allocator_type;125,4717
      typedef typename __gnu_cxx::__alloc_traits<__gnu_cxx::__alloc_traits129,4827
		       key_compare, _Key_alloc_type> _Rep_type;133,5001
      typedef __gnu_cxx::__alloc_traits<_Key_alloc_type> _Alloc_traits;137,5111
      typedef typename _Alloc_traits::pointer	140,5196
      typedef typename _Alloc_traits::const_pointer	141,5253
      typedef typename _Alloc_traits::reference	142,5321
      typedef typename _Alloc_traits::const_reference	143,5382
      typedef typename _Rep_type::const_iterator	147,5600
      typedef typename _Rep_type::const_iterator	148,5660
      typedef typename _Rep_type::const_reverse_iterator 149,5726
      typedef typename _Rep_type::const_reverse_iterator 150,5801
      typedef typename _Rep_type::size_type	151,5882
      typedef typename _Rep_type::difference_type	152,5939
      operator=(operator=289,10758
      operator=(operator=314,11443
    operator==(operator==973,34069
    operator<=>(operator<=>994,34950
    operator<(1011,35610
    operator!=(operator!=1018,35862
    operator>(1025,36106
    operator<=(operator<=1032,36342
    operator>=(operator>=1039,36587
    _Rb_tree_merge_helper<_Rb_tree_merge_helper1058,37246
      friend class _GLIBCXX_STD_C::multiset<_Val, _Cmp1,1062,37350
      _S_get_tree(1065,37436
      _S_get_tree(1069,37552

/usr/include/c++/13/bits/stl_numeric.h,545
#define _STL_NUMERIC_H 57,2383
namespace std _GLIBCXX_VISIBILITY(64,2512
# define _GLIBCXX_MOVE_IF_20(112,3828
# define _GLIBCXX_MOVE_IF_20(114,3881
      typedef typename iterator_traits<_InputIterator>::value_type value_type259,9307
      typedef typename iterator_traits<_InputIterator>::value_type value_type301,10867
      typedef typename iterator_traits<_InputIterator>::value_type value_type340,12242
      typedef typename iterator_traits<_InputIterator>::value_type value_type383,13783
#undef _GLIBCXX_MOVE_IF_20406,14483

/usr/include/c++/13/bits/stl_pair.h,6926
#define _STL_PAIR_H 57,2364
# define __cpp_lib_constexpr_utility 66,2669
namespace std _GLIBCXX_VISIBILITY(69,2722
  struct piecewise_construct_t 80,2942
    struct _PCC102,3645
      template <typename _U1,104,3667
      static constexpr bool _ConstructiblePair(105,3711
      template <typename _U1,111,3878
      static constexpr bool _ImplicitlyConvertiblePair(112,3922
      template <typename _U1,118,4093
      static constexpr bool _MoveConstructiblePair(119,4137
      template <typename _U1,125,4298
      static constexpr bool _ImplicitlyMoveConvertiblePair(126,4342
  template<typename _U1, typename _U2> class __pair_base163,5163
    template<typename _T1,166,5275
    struct pair187,5840
      typedef _T1 first_type;190,5897
      typedef _T2 second_type;191,5966
      _T1 first;193,6037
      _T2 second;194,6092
      template<typename... _Args1,200,6307
	pair(202,6384
      swap(206,6545
      : first(252,8177
      : first(), second(252,8177
    private:private255,8214
	_S_constructible(260,8323
      template<typename _U1,267,8456
	_S_nothrow_constructible(269,8522
      template<typename _U1,276,8679
	_S_convertible(278,8745
      template<typename _U1,286,8948
	_S_dangles(288,9014
      pair(305,9453
      template<typename _U1,312,9728
	requires (_S_constructible<_U1, _U2>()) && (!_S_dangles<_S_dangles313,9771
      template<typename _U1,320,10037
      template<typename _U1,326,10297
	  && (!_S_dangles<_S_dangles328,10395
      template<typename _U1,335,10631
      template<typename _U1,342,10953
	requires (_S_constructible<_U1, _U2>()) && (!_S_dangles<_S_dangles343,10996
      template<typename _U1,351,11278
      template<typename _U1,358,11572
	pair(361,11740
      template<typename _U1,366,11863
      template<typename _U1,372,12132
	  && (!_S_dangles<_S_dangles374,12228
      template<typename _U1,382,12526
  private:private389,12783
	_S_assignable(393,12889
      template<typename _U1,400,13015
	_S_nothrow_assignable(402,13081
      operator=(operator=416,13364
      operator=(operator=427,13649
      template<typename _U1,437,13964
	operator=(operator=439,14024
      template<typename _U1,449,14314
	operator=(operator=451,14374
      template<typename _U1,484,15320
      template<typename _U1,496,15682
# define __glibcxx_no_dangling_refs(514,16308
# define __glibcxx_no_dangling_refs(519,16548
                typename enable_if<enable_if527,16817
      : first(), second(532,17109
                typename enable_if<enable_if536,17212
      : first(), second(544,17645
      using _PCCP = _PCC<true, _T1,548,17777
	       enable_if<enable_if553,17976
      : first(__a), second(559,18226
		enable_if<enable_if563,18404
      : first(__a), second(569,18662
      template <typename _U1,573,18794
			    || !is_same<is_same575,18892
			    || !is_same<_T2, _U2>::value,value575,18892
			    _T1,576,18929
      template<typename _U1,579,18967
      template<typename _U1, typename _U2,579,18967
	       enable_if<enable_if580,19019
			   _ImplicitlyConvertiblePair<_ImplicitlyConvertiblePair583,19149
	: first(__p.first), second(586,19261
      template<typename _U1,589,19359
      template<typename _U1, typename _U2,589,19359
	       enable_if<enable_if590,19411
			   _ImplicitlyConvertiblePair<_ImplicitlyConvertiblePair593,19528
	: first(__p.first), second(596,19670
# define _GLIBCXX_DEPRECATED_PAIR_CTOR 601,19822
# define _GLIBCXX_DEPRECATED_PAIR_CTOR606,20025
      struct __zero_as_null_pointer_constant613,20191
	__zero_as_null_pointer_constant(615,20244
	template<typename _Tp,617,20322
    public:public622,20480
	: first(std::forward<_U1>(__x)), second(637,21038
      template<typename _U1,640,21145
	       __enable_if_t<__enable_if_t641,21174
				    __not_<is_convertible<_U1, _T1>>>::value,value645,21342
	: first(std::forward<_U1>(__x)), second(650,21521
      template<typename _U2,653,21628
	       __enable_if_t<__enable_if_t654,21657
				    is_convertible<_U2, _T2>>::value,value658,21825
	: first(nullptr), second(663,21986
      template<typename _U2,666,22093
	       __enable_if_t<__enable_if_t667,22122
				    __not_<is_convertible<_U2, _T2>>>::value,value671,22290
	: first(nullptr), second(676,22469
#undef _GLIBCXX_DEPRECATED_PAIR_CTOR678,22575
      template<typename _U1,681,22620
      template<typename _U1, typename _U2,681,22620
	       enable_if<enable_if682,22672
	: first(std::forward<_U1>(__x)), second(688,22902
      template<typename _U1,691,23015
      template<typename _U1, typename _U2,691,23015
	       enable_if<enable_if692,23067
	: first(std::forward<_U1>(__x)), second(698,23308
      template<typename _U1,702,23422
      template<typename _U1, typename _U2,702,23422
	       enable_if<enable_if703,23474
			   _ImplicitlyMoveConvertiblePair<_ImplicitlyMoveConvertiblePair706,23595
	  second(710,23766
      template<typename _U1,713,23855
      template<typename _U1, typename _U2,713,23855
	       enable_if<enable_if714,23907
			   _ImplicitlyMoveConvertiblePair<_ImplicitlyMoveConvertiblePair717,24029
	  second(721,24210
#undef __glibcxx_no_dangling_refs724,24299
      operator=(operator=727,24346
      operator=(operator=737,24581
      template<typename _U1,748,24951
				  is_assignable<_T2&, const _U2&>>::value,value750,25054
	operator=(operator=752,25120
      template<typename _U1,759,25228
				  is_assignable<_T2&, _U2&&>>::value,value761,25326
	operator=(operator=763,25387
      pair(777,25809
      pair(780,25921
      template<typename _U1,784,26062
	pair(785,26105
		      ];e_constructs_fr793,26424
		      ];e_constructs_fr796,26536
    operator==(operator==812,26896
    operator<=>(operator<=>819,27240
    operator<(835,27843
    operator!=(operator!=842,28132
    operator>(848,28350
    operator<=(operator<=854,28563
    operator>=(operator>=860,28780
      typedef typename __decay_and_strip<__decay_and_strip924,31169
      typedef typename __decay_and_strip<__decay_and_strip925,31235
      typedef pair<__ds_type1, __ds_type2> 	      __pair_type;926,31301
    { typedef _Tp1 type;955,32141
    { typedef _Tp2 type;960,32294
    struct __pair_get<__pair_get981,32832
      template<typename _Tp1,983,32863
	__get(985,32932
      template<typename _Tp1,988,33001
	__move_get(990,33071
      template<typename _Tp1,993,33166
	__const_get(995,33241
      template<typename _Tp1,998,33322
	__const_move_get(1000,33398
    struct __pair_get<__pair_get1005,33531
      template<typename _Tp1,1007,33562
	__get(1009,33631
      template<typename _Tp1,1012,33701
	__move_get(1014,33771
      template<typename _Tp1,1017,33867
	__const_get(1019,33942
      template<typename _Tp1,1022,34024
	__const_move_get(1024,34100
#define __cpp_lib_tuples_by_type 1055,35227

/usr/include/c++/13/bits/stl_queue.h,1096
#define _STL_QUEUE_H 57,2365
namespace std _GLIBCXX_VISIBILITY(65,2515
      typedef typename _Sequence::value_type 100,3895
      typedef typename	_Sequence::value_type	138,5235
      typedef typename	_Sequence::reference	139,5293
      typedef typename	_Sequence::const_reference	140,5349
      typedef typename	_Sequence::size_type	141,5416
      typedef		_Sequence			container_type;142,5472
#define __cpp_lib_adaptor_iterator_pair_constructor 199,7176
    operator==(operator==380,12255
    operator<(399,12988
    operator!=(operator!=406,13196
    operator>(413,13404
    operator<=(operator<=420,13607
    operator>=(operator>=427,13814
    operator<=>(operator<=>434,14066
      typedef typename _Sequence::value_type 502,16878
      typedef typename	_Sequence::value_type	528,17826
      typedef typename	_Sequence::reference	529,17884
      typedef typename	_Sequence::const_reference	530,17940
      typedef typename	_Sequence::size_type	531,18007
      typedef		_Sequence			container_type;532,18063
      typedef	       _Compare				value_compare;535,18204

/usr/include/c++/13/bits/stl_raw_storage_iter.h,177
#define _STL_RAW_STORAGE_ITERATOR_H 57,2366
namespace std _GLIBCXX_VISIBILITY(59,2405
      operator=(operator=97,3409
      operator++(105,3577
      operator++(112,3667

/usr/include/c++/13/bits/stl_relops.h,74
#define _STL_RELOPS_H 60,2495
namespace std _GLIBCXX_VISIBILITY(62,2520

/usr/include/c++/13/bits/stl_set.h,1680
#define _STL_SET_H 57,2357
namespace std _GLIBCXX_VISIBILITY(64,2474
      typedef typename _Alloc::value_type	100,3748
      typedef _Key     key_type;122,4514
      typedef _Key     value_type;123,4547
      typedef _Compare key_compare;124,4582
      typedef _Compare value_compare;125,4618
      typedef _Alloc   allocator_type;126,4656
      typedef typename __gnu_cxx::__alloc_traits<__gnu_cxx::__alloc_traits130,4721
		       key_compare, _Key_alloc_type> _Rep_type;134,4895
      typedef __gnu_cxx::__alloc_traits<_Key_alloc_type> _Alloc_traits;137,5005
      typedef typename _Alloc_traits::pointer	142,5140
      typedef typename _Alloc_traits::const_pointer	143,5197
      typedef typename _Alloc_traits::reference	144,5265
      typedef typename _Alloc_traits::const_reference	145,5326
      typedef typename _Rep_type::const_iterator	149,5544
      typedef typename _Rep_type::const_iterator	150,5604
      typedef typename _Rep_type::const_reverse_iterator 151,5670
      typedef typename _Rep_type::const_reverse_iterator 152,5745
      typedef typename _Rep_type::size_type	153,5826
      typedef typename _Rep_type::difference_type	154,5883
      operator=(operator=293,10620
      operator=(operator=318,11255
    operator==(operator==987,34472
    operator<=>(operator<=>1008,35328
    operator<(1025,35961
    operator!=(operator!=1032,36203
    operator>(1039,36437
    operator<=(operator<=1046,36667
    operator>=(operator>=1053,36902
    _Rb_tree_merge_helper<_Rb_tree_merge_helper1071,37529
      friend class _GLIBCXX_STD_C::set<_Val, _Cmp1,1074,37623
      _S_get_tree(1077,37704
      _S_get_tree(1081,37820

/usr/include/c++/13/bits/stl_stack.h,708
#define _STL_STACK_H 57,2365
namespace std _GLIBCXX_VISIBILITY(65,2515
      typedef typename _Sequence::value_type 103,3924
      typedef typename _Sequence::value_type	140,5190
      typedef typename _Sequence::reference	141,5248
      typedef typename _Sequence::const_reference	142,5304
      typedef typename _Sequence::size_type	143,5371
      typedef	       _Sequence			container_type;144,5427
#define __cpp_lib_adaptor_iterator_pair_constructor 174,6167
    operator==(operator==356,11450
    operator<(375,12181
    operator!=(operator!=382,12389
    operator>(389,12597
    operator<=(operator<=396,12800
    operator>=(operator>=403,13007
    operator<=>(operator<=>410,13259

/usr/include/c++/13/bits/stl_tempbuf.h,945
#define _STL_TEMPBUF_H 57,2381
namespace std _GLIBCXX_VISIBILITY(65,2550
    class _Temporary_buffer140,4823
      __glibcxx_class_requires(143,4887
      typedef _Tp         value_type;146,4974
      typedef value_type* pointer;147,5012
      typedef pointer     iterator;148,5047
      typedef ptrdiff_t   size_type;149,5083
      size_type  _M_original_len;152,5136
      size_type  _M_len;153,5170
      pointer    _M_buffer;154,5195
      size(159,5283
      requested_size(164,5417
      begin(169,5527
      end(174,5616
      ~_Temporary_buffer(183,5866
    struct __uninitialized_construct_buf_dispatch199,6223
      template<typename _Pointer,201,6279
        __ucr(203,6360
    struct __uninitialized_construct_buf_dispatch<__uninitialized_construct_buf_dispatch230,6963
      template<typename _Pointer,232,7025
        __ucr(234,7106
      typedef typename std::iterator_traits<std::iterator_traits252,7779

/usr/include/c++/13/bits/stl_tree.h,5596
#define _STL_TREE_H 59,2373
namespace std _GLIBCXX_VISIBILITY(75,2709
# define __cpp_lib_generic_associative_lookup 80,2814
  enum _Rb_tree_color 99,3688
  enum _Rb_tree_color { _S_red 99,3688
  enum _Rb_tree_color { _S_red = false, _S_black 99,3688
  struct _Rb_tree_node_base101,3748
    typedef _Rb_tree_node_base* _Base_ptr;103,3780
    typedef const _Rb_tree_node_base* _Const_Base_ptr;104,3823
    _Rb_tree_color	_M_color;106,3879
    _Base_ptr		_M_parent;107,3908
    _Base_ptr		_M_left;108,3934
    _Base_ptr		_M_right;109,3958
    _S_minimum(112,4005
    _S_minimum(119,4163
    _S_maximum(126,4321
    _S_maximum(133,4481
    struct _Rb_tree_key_compare142,4740
      _Key_compare		_M_key_compare;144,4778
      _Rb_tree_key_compare(146,4815
      _Rb_tree_key_compare(152,4964
      _Rb_tree_key_compare(160,5221
  struct _Rb_tree_header168,5482
    _Rb_tree_node_base	_M_header;170,5511
    size_t		_M_node_count;171,5545
    _Rb_tree_header(173,5605
    _Rb_tree_header(180,5738
    _M_move_data(193,5949
    _M_reset(206,6350
    struct _Rb_tree_node 216,6542
      typedef _Rb_tree_node<_Val>* _Link_type;218,6601
      _Val _M_value_field;221,6675
      _M_valptr(224,6715
      _M_valptr(228,6803
      __gnu_cxx::__aligned_membuf<_Val> _M_storage;231,6884
      _M_valptr(234,6949
      _M_valptr(238,7024
    struct _Rb_tree_iterator256,7522
      typedef _Tp  value_type;258,7557
      typedef _Tp& reference;259,7588
      typedef _Tp* pointer;260,7618
      typedef bidirectional_iterator_tag iterator_category;262,7647
      typedef ptrdiff_t			 difference_type;263,7707
      typedef _Rb_tree_iterator<_Tp>		_Self;265,7752
      typedef _Rb_tree_node_base::_Base_ptr	_Base_ptr;266,7797
      typedef _Rb_tree_node<_Tp>*		_Link_type;267,7852
      _Rb_tree_iterator(269,7900
      _Rb_tree_iterator(273,7982
      operator*(277,8081
      operator->(281,8203
      operator++(285,8325
      operator++(292,8446
      operator--(300,8593
      operator--(307,8714
      operator==(operator==315,8866
      operator!=(operator!=320,9038
      _Base_ptr _M_node;324,9162
    struct _Rb_tree_const_iterator328,9220
      typedef _Tp	 value_type;330,9261
      typedef const _Tp& reference;331,9292
      typedef const _Tp* pointer;332,9328
      typedef _Rb_tree_iterator<_Tp> iterator;334,9363
      typedef bidirectional_iterator_tag iterator_category;336,9411
      typedef ptrdiff_t			 difference_type;337,9471
      typedef _Rb_tree_const_iterator<_Tp>		_Self;339,9516
      typedef _Rb_tree_node_base::_Const_Base_ptr	_Base_ptr;340,9567
      typedef const _Rb_tree_node<_Tp>*			_Link_type;341,9628
      _Rb_tree_const_iterator(343,9683
      _Rb_tree_const_iterator(347,9771
      _Rb_tree_const_iterator(350,9860
      _M_const_cast(354,9980
      operator*(358,10121
      operator->(362,10243
      operator++(366,10364
      operator++(373,10485
      operator--(381,10632
      operator--(388,10753
      operator==(operator==396,10905
      operator!=(operator!=401,11077
      _Base_ptr _M_node;405,11201
    struct _Rb_tree_merge_helper 422,11689
      typedef typename __gnu_cxx::__alloc_traits<__gnu_cxx::__alloc_traits429,11882
      typedef __gnu_cxx::__alloc_traits<_Node_allocator> _Alloc_traits;432,12004
      typedef _Rb_tree_node_base* 		_Base_ptr;435,12092
      typedef const _Rb_tree_node_base*_Rb_tree_node_base436,12139
      typedef _Rb_tree_node<_Val>* 		_Link_type;437,12197
      typedef const _Rb_tree_node<_Rb_tree_node438,12246
      struct _Reuse_or_alloc_node443,12416
	_Reuse_or_alloc_node(445,12458
	~_Reuse_or_alloc_node(463,12816
	  operator()(operator()468,12935
	_M_extract(483,13293
	_Base_ptr _M_root;516,13855
	_Base_ptr _M_nodes;517,13875
	_Rb_tree& _M_t;518,13896
      struct _Alloc_node523,14019
	_Alloc_node(525,14052
	  operator()(operator()530,14137
	_Rb_tree& _M_t;534,14268
      typedef _Key 				key_type;538,14307
      typedef _Val 				value_type;539,14340
      typedef value_type* 			pointer;540,14375
      typedef const value_type*value_type541,14413
      typedef value_type& 			reference;542,14462
      typedef const value_type& 		const_reference;543,14502
      typedef size_t 				size_type;544,14553
      typedef ptrdiff_t 			difference_type;545,14589
      typedef _Alloc 				allocator_type;546,14633
	  typedef _Rb_tree_key_compare<_Key_compare> _Base_key_compare;667,17566
      typedef _Rb_tree_iterator<value_type>       iterator;817,22057
      typedef _Rb_tree_const_iterator<value_type> const_iterator;818,22117
      typedef std::reverse_iterator<iterator>       reverse_iterator;820,22184
      typedef std::reverse_iterator<const_iterator> const_reverse_iterator;821,22254
      enum { __as_lvalue,881,23914
      enum { __as_lvalue, __as_rvalue 881,23914
      operator==(operator==1605,42854
      operator<=>(operator<=>1613,43071
      operator<(1622,43375
      struct _Auto_node1632,43622
	  _Auto_node(1635,43683
	~_Auto_node(1640,43820
	_Auto_node(1646,43891
	_M_key(1651,44003
	_M_insert(1655,44059
	_M_insert_equal_lower(1663,44225
	_Rb_tree& _M_t;1670,44352
	_Link_type _M_node;1671,44369
    operator=(operator=1739,46502
    operator=(operator=1779,47892
      typedef pair<_Base_ptr, _Base_ptr> _Res;2111,57923
      typedef pair<_Base_ptr, _Base_ptr> _Res;2143,58850
      typedef pair<iterator, bool> _Res;2169,59560
      typedef pair<_Base_ptr, _Base_ptr> _Res;2215,61017
      typedef pair<_Base_ptr, _Base_ptr> _Res;2300,63594

/usr/include/c++/13/bits/stl_uninitialized.h,3421
#define _STL_UNINITIALIZED_H 57,2385
namespace std _GLIBCXX_VISIBILITY(70,2632
# define _GLIBCXX_USE_ASSIGN_FOR_INIT(99,3630
# define _GLIBCXX_USE_ASSIGN_FOR_INIT(106,3944
    struct __uninitialized_copy131,4581
      template<typename _InputIterator,133,4619
        __uninit_copy(135,4718
    struct __uninitialized_copy<__uninitialized_copy141,4905
      template<typename _InputIterator,143,4949
        __uninit_copy(145,5048
      typedef typename iterator_traits<iterator_traits166,5750
      typedef typename iterator_traits<iterator_traits168,5831
      typedef typename iterator_traits<iterator_traits177,6194
    struct __uninitialized_fill209,7011
      template<typename _ForwardIterator,211,7049
        __uninit_fill(213,7125
    struct __uninitialized_fill<__uninitialized_fill219,7293
      template<typename _ForwardIterator,221,7337
        __uninit_fill(223,7413
      typedef typename iterator_traits<iterator_traits244,8048
    struct __uninitialized_fill_n278,8977
      template<typename _ForwardIterator,280,9017
      template<typename _ForwardIterator, typename _Size,280,9017
        __uninit_fill_n(282,9114
    struct __uninitialized_fill_n<__uninitialized_fill_n288,9271
      template<typename _ForwardIterator,290,9317
      template<typename _ForwardIterator, typename _Size,290,9317
        __uninit_fill_n(292,9414
      typedef typename iterator_traits<iterator_traits314,10167
#undef _GLIBCXX_USE_ASSIGN_FOR_INIT330,10830
	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;350,11523
	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;412,13539
	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;448,14576
    struct __uninitialized_default_1593,19099
        __uninit_default(597,19204
    struct __uninitialized_default_1<__uninitialized_default_1614,19559
        __uninit_default(618,19670
    struct __uninitialized_default_n_1632,20038
      template<typename _ForwardIterator,634,20083
        __uninit_default_n(637,20195
    struct __uninitialized_default_n_1<__uninitialized_default_n_1655,20565
      template<typename _ForwardIterator,657,20616
        __uninit_default_n(660,20728
      typedef typename iterator_traits<iterator_traits681,21304
      typedef typename iterator_traits<iterator_traits704,22088
	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;728,22892
	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;759,23862
    struct __uninitialized_default_novalue_1783,24619
	__uninit_default_novalue(787,24725
    struct __uninitialized_default_novalue_1<__uninitialized_default_novalue_1805,25087
        __uninit_default_novalue(809,25206
    struct __uninitialized_default_novalue_n_1815,25324
      template<typename _ForwardIterator,817,25377
	__uninit_default_novalue_n(819,25460
    struct __uninitialized_default_novalue_n_1<__uninitialized_default_novalue_n_1837,25832
      template<typename _ForwardIterator,839,25891
	__uninit_default_novalue_n(841,25974
      typedef typename iterator_traits<iterator_traits852,26339
      typedef typename iterator_traits<iterator_traits866,26847
# define __cpp_lib_raw_memory_algorithms 967,30033
      typedef std::allocator_traits<_Allocator> __traits;1076,33619
      typedef typename iterator_traits<iterator_traits1097,34418
      typedef typename iterator_traits<iterator_traits1099,34498

/usr/include/c++/13/bits/stl_vector.h,4464
#define _STL_VECTOR_H 57,2365
#define __cpp_lib_constexpr_vector 67,2603
namespace std _GLIBCXX_VISIBILITY(78,2875
    struct _Vector_base85,3092
	rebind<_Tp>::other _Tp_alloc_type;88,3189
       	pointer;90,3299
      struct _Vector_impl_data92,3317
	pointer _M_start;94,3356
	pointer _M_finish;95,3375
	pointer _M_end_of_storage;96,3395
	_Vector_impl_data(99,3446
	_Vector_impl_data(105,3588
	_M_copy_data(113,3845
	_M_swap_data(122,4046
      struct _Vector_impl133,4326
	_Vector_impl(137,4433
	_Vector_impl(143,4581
	_Vector_impl(151,4825
	_Vector_impl(156,4965
	_Vector_impl(161,5072
	    typedef typename __gnu_cxx::__alloc_traits<__gnu_cxx::__alloc_traits170,5343
	    typedef _Vector_impl& _Reinit;178,5598
	    struct _Grow180,5635
	      _GLIBCXX20_CONSTEXPR _Grow(182,5660
	      _GLIBCXX20_CONSTEXPR void _M_grew(183,5724
	  struct _Asan<_Asan189,5888
	      ::size_type size_type;192,5990
	    _S_adjust(197,6189
	    _S_grow(208,6518
	    _S_shrink(212,6677
	    _S_on_dealloc(216,6838
	    struct _Reinit223,7057
	      _Reinit(226,7121
	      ~_Reinit(233,7314
	      _Vector_impl& _M_impl;241,7509
	    struct _Grow250,7743
	      _Grow(253,7796
	      ~_Grow(258,7945
	      void _M_grew(261,8030
	      _Vector_impl& _M_impl;268,8216
	      size_type _M_n;269,8246
#define _GLIBCXX_ASAN_ANNOTATE_REINIT 273,8284
#define _GLIBCXX_ASAN_ANNOTATE_GROW(276,8449
#define _GLIBCXX_ASAN_ANNOTATE_GREW(279,8610
#define _GLIBCXX_ASAN_ANNOTATE_SHRINK(280,8673
#define _GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC 282,8785
#define _GLIBCXX_ASAN_ANNOTATE_REINIT285,8976
#define _GLIBCXX_ASAN_ANNOTATE_GROW(286,9014
#define _GLIBCXX_ASAN_ANNOTATE_GREW(287,9053
#define _GLIBCXX_ASAN_ANNOTATE_SHRINK(288,9092
#define _GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC289,9133
      typedef _Alloc allocator_type;294,9271
      _M_get_Tp_allocator(298,9358
      _M_get_Tp_allocator(303,9492
      get_allocator(308,9625
      _Vector_base(314,9793
      _Vector_base(318,9853
      _Vector_base(324,10036
      _Vector_base(330,10154
      _Vector_base(340,10436
      _Vector_base(344,10550
      _Vector_base(358,10875
      ~_Vector_base(364,11047
      _Vector_impl _M_impl;371,11204
      _M_allocate(375,11274
	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;377,11312
      _M_deallocate(383,11475
	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;385,11528
      _M_create_storage(393,11695
      typedef typename _Alloc::value_type	429,13060
      typedef _Vector_base<_Tp, _Alloc>			_Base;445,13669
      typedef typename _Base::_Tp_alloc_type	446,13718
      typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type>	_Alloc_traits;447,13780
      typedef _Tp					value_type;450,13864
      typedef typename _Base::pointer	451,13898
      typedef typename _Alloc_traits::const_pointer	452,13947
      typedef typename _Alloc_traits::reference	453,14014
      typedef typename _Alloc_traits::const_reference	454,14074
      typedef __gnu_cxx::__normal_iterator<pointer, vector> iterator;455,14145
      const_iterator;457,14281
      typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;458,14303
      typedef std::reverse_iterator<iterator>		reverse_iterator;459,14379
      typedef size_t					size_type;460,14444
      typedef ptrdiff_t					difference_type;461,14480
      typedef _Alloc					allocator_type;462,14525
	  typedef typename std::__is_integer<std::__is_integer718,22988
      operator=(operator=763,24511
      operator=(operator=785,25262
	  typedef typename std::__is_integer<std::__is_integer833,26927
	  typedef typename std::__is_integer<std::__is_integer1508,50190
      struct _Temporary_value1826,60556
	  _Temporary_value(1830,60656
	~_Temporary_value(1837,60860
	_M_val(1841,60973
	_M_ptr(1845,61065
	union _Storage1847,61133
	  constexpr _Storage(1849,61152
	  _GLIBCXX20_CONSTEXPR ~_Storage(1850,61192
	  unsigned char _M_byte;1852,61282
	  _Tp _M_val;1853,61308
	vector*  _M_this;1856,61328
	_Storage _M_storage;1857,61347
    operator==(operator==2037,67074
    operator<=>(operator<=>2056,67850
    operator<(2076,68577
    operator!=(operator!=2083,68840
    operator>(2089,69033
    operator<=(operator<=2095,69221
    operator>=(operator>=2101,69413
  namespace __detail::__variant2116,69863
    template<typename _Tp,2122,70111
      struct _Never_valueless_alt<_Never_valueless_alt2123,70155

/usr/include/c++/13/bits/stream_iterator.h,813
#define _STREAM_ITERATOR_H 31,1259
namespace std _GLIBCXX_VISIBILITY(40,1425
      typedef _CharT                         char_type;60,1984
      typedef _Traits                        traits_type;61,2040
      typedef basic_istream<_CharT, _Traits> istream_type;62,2098
      operator*(104,3515
      operator->(114,3741
      operator++(118,3859
      operator++(128,4050
      operator==(operator==161,4890
      operator!=(operator!=170,5244
      operator==(operator==178,5474
      typedef _CharT                         char_type;205,6327
      typedef _Traits                        traits_type;206,6383
      typedef basic_ostream<_CharT, _Traits> ostream_type;207,6441
      operator=(operator=243,7738
      operator*(256,8047
      operator++(260,8132
      operator++(264,8218

/usr/include/c++/13/bits/streambuf.tcc,75
#define _STREAMBUF_TCC 35,1315
namespace std _GLIBCXX_VISIBILITY(39,1368

/usr/include/c++/13/bits/streambuf_iterator.h,2750
#define _STREAMBUF_ITERATOR_H 31,1268
namespace std _GLIBCXX_VISIBILITY(39,1417
    class istreambuf_iterator54,1820
      typedef _CharT& reference;63,2051
      typedef _CharT					char_type;70,2288
      typedef _Traits					traits_type;71,2324
      typedef typename _Traits::int_type		int_type;72,2363
      typedef basic_streambuf<_CharT,_CharT73,2415
      typedef basic_streambuf<_CharT, _Traits>		streambuf_type;73,2415
      typedef basic_istream<_CharT,_CharT74,2479
      typedef basic_istream<_CharT, _Traits>		istream_type;74,2479
      template<bool _IsMove,83,2805
      template<typename _CharT2,89,3048
      template<typename _CharT2,100,3502
      mutable streambuf_type*	_M_sbuf;113,4035
      int_type			_M_c;114,4074
      _GLIBCXX_CONSTEXPR istreambuf_iterator(118,4161
      constexpr istreambuf_iterator(122,4328
      istreambuf_iterator(133,4638
      istreambuf_iterator(137,4815
      operator*(150,5311
      operator++(166,5745
      operator++(180,6098
      equal(199,6679
      _M_get(204,6807
      _M_at_eof(213,6984
      _S_is_eof(217,7065
      operator==(operator==226,7288
    operator==(operator==234,7491
    operator!=(operator!=242,7775
    class ostreambuf_iterator249,8039
      typedef _CharT			       char_type;259,8282
      typedef _Traits			       traits_type;260,8323
      typedef basic_streambuf<_CharT,_CharT261,8367
      typedef basic_streambuf<_CharT, _Traits> streambuf_type;261,8367
      typedef basic_ostream<_CharT,_CharT262,8430
      typedef basic_ostream<_CharT, _Traits>   ostream_type;262,8430
      streambuf_type*	_M_sbuf;272,8770
      bool		_M_failed;273,8801
      ostreambuf_iterator(279,8880
      ostreambuf_iterator(284,9022
      ostreambuf_iterator(288,9197
      operator=(operator=293,9407
      operator*(304,9647
      operator++(309,9741
      operator++(314,9839
      failed(320,9973
      _M_put(324,10072
      typedef istreambuf_iterator<_CharT>		   __is_iterator_type;383,11918
      typedef typename __is_iterator_type::traits_type	384,11984
      typedef typename __is_iterator_type::streambuf_type 385,12055
      typedef typename traits_type::int_type	386,12130
      typedef istreambuf_iterator<_CharT>		   __is_iterator_type;438,13692
      typedef typename __is_iterator_type::traits_type 439,13758
      typedef typename __is_iterator_type::streambuf_type 440,13830
      typedef typename traits_type::int_type	441,13905
      typedef istreambuf_iterator<_CharT>		   __is_iterator_type;485,15056
      typedef typename __is_iterator_type::traits_type	486,15122
      typedef typename __is_iterator_type::streambuf_type 487,15193
      typedef typename traits_type::int_type	488,15268

/usr/include/c++/13/bits/string_view.tcc,85
#define _GLIBCXX_STRING_VIEW_TCC 35,1374
namespace std _GLIBCXX_VISIBILITY(41,1465

/usr/include/c++/13/bits/stringfwd.h,324
#define _STRINGFWD_H 35,1314
namespace std _GLIBCXX_VISIBILITY(42,1422
  typedef basic_string<char>    string;77,2121
  typedef basic_string<wchar_t> wstring;80,2194
  typedef basic_string<char8_t> u8string;84,2296
  typedef basic_string<char16_t> u16string;89,2403
  typedef basic_string<char32_t> u32string;92,2479

/usr/include/c++/13/bits/this_thread_sleep.h,89
#define _GLIBCXX_THIS_THREAD_SLEEP_H 31,1311
namespace std _GLIBCXX_VISIBILITY(43,1556

/usr/include/c++/13/bits/uniform_int_dist.h,945
#define _GLIBCXX_BITS_UNIFORM_INT_DIST_H32,1310
namespace std _GLIBCXX_VISIBILITY(41,1525
  namespace __detail64,2154
      _Power_of_2(71,2429
      typedef _IntType result_type;95,3058
      struct param_type97,3123
	typedef uniform_int_distribution<_IntType> distribution_type;99,3155
	param_type(101,3219
	param_type(104,3264
	a(112,3431
	b(116,3474
	operator==(operator==120,3517
	operator!=(operator!=124,3653
	_IntType _M_a;128,3758
	_IntType _M_b;129,3774
	operator()(operator()203,5429
      operator==(operator==238,6560
      operator()(operator()288,8305
	typedef typename _UniformRandomBitGenerator::result_type 291,8396
	typedef typename make_unsigned<make_unsigned292,8469
	typedef typename common_type<common_type293,8529
	typedef typename _UniformRandomBitGenerator::result_type 386,11182
	typedef typename make_unsigned<make_unsigned387,11255
	typedef typename common_type<common_type388,11315

/usr/include/c++/13/bits/unique_lock.h,939
#define _GLIBCXX_UNIQUE_LOCK_H 31,1283
namespace std _GLIBCXX_VISIBILITY(43,1529
    class unique_lock59,2059
      typedef _Mutex mutex_type;62,2099
      unique_lock(64,2133
      explicit unique_lock(68,2210
      unique_lock(75,2354
      unique_lock(79,2480
      unique_lock(83,2614
      template<typename _Clock,89,2779
	unique_lock(90,2831
      template<typename _Rep,96,3011
	unique_lock(97,3059
      ~unique_lock(103,3231
      unique_lock(112,3404
      unique_lock& operator=(operator=119,3564
      lock(133,3777
      try_lock(148,4068
      template<typename _Clock,161,4341
	try_lock_until(164,4419
      template<typename _Rep,177,4766
	try_lock_for(180,4840
      unlock(194,5189
      swap(206,5387
      release(213,5532
      owns_lock(223,5691
      explicit operator bool(operator bool226,5751
      mutex(231,5871
      mutex_type*	_M_device;235,5942
      bool		_M_owns;236,5971

/usr/include/c++/13/bits/unique_ptr.h,2963
#define _UNIQUE_PTR_H 31,1268
# define __cpp_lib_constexpr_memory 48,1676
# define __cpp_lib_constexpr_memory 50,1748
namespace std _GLIBCXX_VISIBILITY(53,1800
    struct default_delete75,2283
      constexpr default_delete(78,2345
      operator(93,2829
    class __uniq_ptr_impl148,4453
      template <typename _Up,150,4485
      template <typename _Up, typename _Ep,150,4485
      template <typename _Up,156,4589
	_Ptr<_Up,_Up158,4641
	_Ptr<_Up, _Ep,158,4641
      using pointer = typename _Ptr<_Tp, _Dp>::type;type168,4930
      __uniq_ptr_impl(176,5209
	__uniq_ptr_impl(180,5326
      __uniq_ptr_impl(184,5438
      __uniq_ptr_impl& operator=(operator=189,5588
      pointer&   _M_ptr(197,5788
      pointer    _M_ptr(199,5880
      _Dp&       _M_deleter(201,5978
      const _Dp& _M_deleter(203,6074
      void reset(206,6177
      pointer release(215,6352
      swap(224,6499
      tuple<tuple232,6677
      tuple<pointer, _Dp> _M_t;232,6677
	operator=(operator=430,13163
      operator=(operator=440,13439
      operator*(451,13663
      operator->(460,13882
      explicit operator bool(operator bool486,14562
	operator=(operator=701,21501
      operator=(operator=711,21777
      explicit operator bool(operator bool748,22686
    operator==(operator==829,25150
    operator==(operator==837,25419
    operator==(operator==845,25667
    operator!=(operator!=853,25945
    operator!=(operator!=861,26193
    operator!=(operator!=868,26407
    operator<(877,26742
	std::common_type<std::common_type881,26858
    operator<(890,27185
    operator<(900,27491
    operator<=(operator<=911,27866
    operator<=(operator<=919,28125
    operator<=(operator<=926,28358
    operator>(934,28660
    operator>(942,28916
    operator>(952,29222
    operator>=(operator>=963,29597
    operator>=(operator>=971,29856
    operator>=(operator>=977,30064
    operator<=>(operator<=>988,30549
    operator<=>(operator<=>997,30912
      operator()(operator()1014,31416
#define __cpp_lib_make_unique 1033,32011
namespace __detail1036,32075
    struct _MakeUniq1039,32121
    { typedef unique_ptr<_Tp> __single_object;1040,32142
    struct _MakeUniq<_MakeUniq1043,32218
    { typedef unique_ptr<_Tp[]> __array;1044,32246
  template<typename _Tp,1046,32291
    struct _MakeUniq<_MakeUniq1047,32331
    { struct __invalid_type 1048,32365
  template<typename _Tp,1066,32973
    make_unique(1069,33083
    make_unique(1084,33637
  template<typename _Tp,1092,33908
    make_unique_for_overwrite(1106,34372
    make_unique_for_overwrite(1119,34857
  template<typename _Tp,1127,35154
  template<typename _CharT,1140,35590
  template<typename _CharT, typename _Traits,1140,35590
  template<typename _CharT, typename _Traits, typename _Tp,1140,35590
    operator<<(1142,35707
    template<typename _Tp,1160,36203
      struct _Never_valueless_alt<_Never_valueless_alt1161,36245

/usr/include/c++/13/bits/unordered_map.h,3006
#define _UNORDERED_MAP_H31,1284
namespace std _GLIBCXX_VISIBILITY(38,1455
      typedef __umap_hashtable<_Key, _Tp, _Hash, _Pred, _Alloc>  _Hashtable;111,4247
      typedef typename _Hashtable::key_type	118,4418
      typedef typename _Hashtable::value_type	119,4472
      typedef typename _Hashtable::mapped_type	120,4530
      typedef typename _Hashtable::hasher	121,4590
      typedef typename _Hashtable::key_equal	122,4640
      typedef typename _Hashtable::allocator_type 123,4696
      typedef typename _Hashtable::pointer	128,4825
      typedef typename _Hashtable::const_pointer	129,4878
      typedef typename _Hashtable::reference	130,4942
      typedef typename _Hashtable::const_reference	131,4999
      typedef typename _Hashtable::iterator	132,5067
      typedef typename _Hashtable::const_iterator	133,5122
      typedef typename _Hashtable::local_iterator	134,5188
      typedef typename _Hashtable::const_local_iterator	135,5254
      typedef typename _Hashtable::size_type	136,5332
      typedef typename _Hashtable::difference_type	137,5389
      operator=(operator=297,10677
#define __cpp_lib_unordered_map_try_emplace 453,15548
      typedef __ummap_hashtable<_Key, _Tp, _Hash, _Pred, _Alloc>  _Hashtable;1256,44120
      typedef typename _Hashtable::key_type	1263,44292
      typedef typename _Hashtable::value_type	1264,44346
      typedef typename _Hashtable::mapped_type	1265,44404
      typedef typename _Hashtable::hasher	1266,44464
      typedef typename _Hashtable::key_equal	1267,44514
      typedef typename _Hashtable::allocator_type 1268,44570
      typedef typename _Hashtable::pointer	1273,44699
      typedef typename _Hashtable::const_pointer	1274,44752
      typedef typename _Hashtable::reference	1275,44816
      typedef typename _Hashtable::const_reference	1276,44873
      typedef typename _Hashtable::iterator	1277,44941
      typedef typename _Hashtable::const_iterator	1278,44996
      typedef typename _Hashtable::local_iterator	1279,45062
      typedef typename _Hashtable::const_local_iterator	1280,45128
      typedef typename _Hashtable::size_type	1281,45206
      typedef typename _Hashtable::difference_type	1282,45263
      operator=(operator=1441,50657
    operator==(operator==2143,73915
    operator!=(operator!=2150,74237
    operator==(operator==2157,74506
    operator!=(operator!=2164,74838
    struct _Hash_merge_helper<_Hash_merge_helper2175,75283
      friend unordered_map<_Key, _Val,2185,75623
      friend unordered_map<_Key, _Val, _Hash1,2185,75623
      friend unordered_map<_Key, _Val, _Hash1, _Eq1,2185,75623
      _S_get_table(2188,75705
      _S_get_table(2192,75829
    struct _Hash_merge_helper<_Hash_merge_helper2199,76147
      friend unordered_multimap<_Key, _Val,2209,76492
      friend unordered_multimap<_Key, _Val, _Hash1,2209,76492
      friend unordered_multimap<_Key, _Val, _Hash1, _Eq1,2209,76492
      _S_get_table(2212,76579
      _S_get_table(2216,76703

/usr/include/c++/13/bits/unordered_set.h,2684
#define _UNORDERED_SET_H31,1284
namespace std _GLIBCXX_VISIBILITY(38,1455
      typedef __uset_hashtable<_Value, _Hash, _Pred, _Alloc>  _Hashtable;106,3863
      typedef typename _Hashtable::key_type	113,4031
      typedef typename _Hashtable::value_type	114,4085
      typedef typename _Hashtable::hasher	115,4143
      typedef typename _Hashtable::key_equal	116,4193
      typedef typename _Hashtable::allocator_type 117,4249
      typedef typename _Hashtable::pointer	122,4378
      typedef typename _Hashtable::const_pointer	123,4431
      typedef typename _Hashtable::reference	124,4495
      typedef typename _Hashtable::const_reference	125,4552
      typedef typename _Hashtable::iterator	126,4620
      typedef typename _Hashtable::const_iterator	127,4675
      typedef typename _Hashtable::local_iterator	128,4741
      typedef typename _Hashtable::const_local_iterator	129,4807
      typedef typename _Hashtable::size_type	130,4885
      typedef typename _Hashtable::difference_type	131,4942
      operator=(operator=291,10234
      typedef __umset_hashtable<_Value, _Hash, _Pred, _Alloc>  _Hashtable;974,32956
      typedef typename _Hashtable::key_type	981,33125
      typedef typename _Hashtable::value_type	982,33179
      typedef typename _Hashtable::hasher	983,33237
      typedef typename _Hashtable::key_equal	984,33287
      typedef typename _Hashtable::allocator_type 985,33343
      typedef typename _Hashtable::pointer	990,33472
      typedef typename _Hashtable::const_pointer	991,33525
      typedef typename _Hashtable::reference	992,33589
      typedef typename _Hashtable::const_reference	993,33646
      typedef typename _Hashtable::iterator	994,33714
      typedef typename _Hashtable::const_iterator	995,33769
      typedef typename _Hashtable::local_iterator	996,33835
      typedef typename _Hashtable::const_local_iterator	997,33901
      typedef typename _Hashtable::size_type	998,33979
      typedef typename _Hashtable::difference_type	999,34036
      operator=(operator=1158,39438
    operator==(operator==1813,60314
    operator!=(operator!=1820,60621
    operator==(operator==1827,60875
    operator!=(operator!=1834,61192
    struct _Hash_merge_helper<_Hash_merge_helper1845,61616
      friend unordered_set<_Val, _Hash1,1854,61944
      friend unordered_set<_Val, _Hash1, _Eq1,1854,61944
      _S_get_table(1857,62020
      _S_get_table(1861,62138
    struct _Hash_merge_helper<_Hash_merge_helper1868,62435
      friend unordered_multiset<_Val, _Hash1,1878,62774
      friend unordered_multiset<_Val, _Hash1, _Eq1,1878,62774
      _S_get_table(1881,62855
      _S_get_table(1885,62973

/usr/include/c++/13/bits/uses_allocator.h,818
#define _USES_ALLOCATOR_H 31,1291
namespace std _GLIBCXX_VISIBILITY(40,1433
  struct __erased_type 46,1615
  struct allocator_arg_t 56,2031
    struct uses_allocator73,2604
  struct __uses_alloc_base 77,2689
  struct __uses_alloc0 79,2722
    struct _Sink 81,2769
    struct _Sink { void _GLIBCXX20_CONSTEXPR operator=(operator=81,2769
    struct _Sink { void _GLIBCXX20_CONSTEXPR operator=(const void*) { } } _M_a;81,2769
    struct __uses_alloc1 85,2883
    struct __uses_alloc1 : __uses_alloc_base { const _Alloc* _M_a;85,2883
    struct __uses_alloc2 88,2982
    struct __uses_alloc2 : __uses_alloc_base { const _Alloc* _M_a;88,2982
    struct __is_uses_allocator_predicate139,4794
    struct __is_uses_allocator_constructible146,5098
    struct __is_nothrow_uses_allocator_constructible157,5542

/usr/include/c++/13/bits/uses_allocator_args.h,133
#define _USES_ALLOCATOR_ARGS 31,1316
namespace std _GLIBCXX_VISIBILITY(42,1616
#define __cpp_lib_make_obj_using_allocator 54,1856

/usr/include/c++/13/bits/utility.h,743
#define _GLIBCXX_UTILITY_H 34,1427
namespace std _GLIBCXX_VISIBILITY(43,1559
#define __cpp_lib_tuple_element_t 132,4277
  template<size_t... _Indexes> struct _Index_tuple 140,4554
    struct _Build_index_tuple144,4686
      template<typename,typename147,4760
      using __type = __make_integer_seq<_IdxTuple, size_t,151,4912
#define __cpp_lib_integer_sequence 160,5153
    struct integer_sequence164,5273
      static_assert(167,5334
      typedef _Tp value_type;169,5382
      static constexpr size_t size(170,5412
  struct in_place_t 196,6206
  template<typename _Tp> struct in_place_type_t202,6314
  template<size_t _Idx> struct in_place_index_t210,6499
    struct _Nth_type231,7043
#define __cpp_lib_ranges_zip 266,8142

/usr/include/c++/13/bits/valarray_after.h,2303
#define _VALARRAY_AFTER_H 33,1377
namespace std _GLIBCXX_VISIBILITY(37,1433
    class _GBase47,1593
      typedef typename _Dom::value_type value_type;50,1628
      _GBase 52,1687
      size 60,1908
      typename _ValArrayRef<_Dom>::__type	_M_expr;64,1976
      const valarray<size_t>&			_M_index;65,2027
    class _GBase<_GBase69,2102
      typedef _Tp value_type;72,2151
      _GBase 74,2188
      size 82,2419
      const _Array<_Tp>       _M_array;86,2487
      const valarray<size_t>& _M_index;87,2527
      typedef _GBase<_Dom> _Base;94,2654
      typedef typename _Base::value_type 95,2688
      typedef _GBase<_Array<_Tp> > _Base;105,2936
      typedef typename _Base::value_type 106,2978
    class _IBase116,3195
      typedef typename _Dom::value_type value_type;119,3230
      _IBase 121,3283
      size(129,3505
      typename _ValArrayRef<_Dom>::__type	_M_expr;133,3572
      const valarray<size_t>&			_M_index;134,3623
      typedef _IBase<_Dom> _Base;141,3752
      typedef typename _Base::value_type 142,3786
      typedef _IBase<valarray<_Tp> > _Base;152,4036
      typedef _Tp value_type;153,4080
    class _Expr164,4313
      typedef _Tp value_type;167,4347
      _Expr<_Expr179,4740
      _Expr<_Expr182,4832
      _Expr<_Expr185,4920
      _Expr<_Expr188,5013
      const _Clos _M_closure;204,5468
    _Expr<_Clos, _Tp>::_Expr(_Expr209,5555
    _Expr<_Clos, _Tp>::operator()(operator()213,5686
    _Expr<_Clos, _Tp>::size(size255,6786
    _Expr<_Clos, _Tp>::shift(shift260,6920
    _Expr<_Clos, _Tp>::cshift(cshift268,7117
    _Expr<_Clos, _Tp>::apply(apply276,7316
    _Expr<_Clos, _Tp>::apply(apply284,7525
    _Expr<_Clos, _Tp>::sum(sum293,7780
    _Expr<_Clos, _Tp>::min(min309,8076
    _Expr<_Clos, _Tp>::max(max314,8208
    _Expr<_Dom, _Tp>::operator!(operator!319,8384
      typedef _UnClos<__logical_not, std::_Expr, _Dom> _Closure;321,8430
#define _DEFINE_EXPR_UNARY_OPERATOR(325,8566
#undef _DEFINE_EXPR_UNARY_OPERATOR338,9286
#define _DEFINE_EXPR_BINARY_OPERATOR(340,9322
#undef _DEFINE_EXPR_BINARY_OPERATOR424,15078
#define _DEFINE_EXPR_UNARY_FUNCTION(426,15115
#undef _DEFINE_EXPR_UNARY_FUNCTION460,17186
#define _DEFINE_EXPR_BINARY_FUNCTION(462,17222
#undef _DEFINE_EXPR_BINARY_FUNCTION551,23164

/usr/include/c++/13/bits/valarray_array.h,583
#define _VALARRAY_ARRAY_H 33,1389
namespace std _GLIBCXX_VISIBILITY(42,1542
    struct _Array_default_ctor68,2211
      _S_do_it(73,2388
    struct _Array_init_ctor100,3122
      _S_do_it(105,3296
    struct _Array_copy_ctor135,3954
      _S_do_it(140,4128
    struct _Array_copier246,6719
      _S_do_it(249,6775
      typedef typename _Ta::value_type 362,10119
      typedef typename _Ta::value_type 378,10504
    struct _Array396,10952
      _Tp* const __restrict__ _M_data;404,11156
#define _DEFINE_ARRAY_FUNCTION(511,14916
#undef _DEFINE_ARRAY_FUNCTION670,21158

/usr/include/c++/13/bits/valarray_array.tcc,80
#define _VALARRAY_ARRAY_TCC 33,1393
namespace std _GLIBCXX_VISIBILITY(35,1424

/usr/include/c++/13/bits/valarray_before.h,7057
#define _VALARRAY_BEFORE_H 33,1379
namespace std _GLIBCXX_VISIBILITY(39,1467
  struct _Abs63,2425
      _Tp operator(66,2470
  struct _Cos70,2546
      _Tp operator(73,2591
  struct _Acos77,2667
      _Tp operator(80,2713
  struct _Cosh84,2790
      _Tp operator(87,2836
  struct _Sin91,2913
      _Tp operator(94,2958
  struct _Asin98,3034
      _Tp operator(101,3080
  struct _Sinh105,3157
      _Tp operator(108,3203
  struct _Tan112,3280
      _Tp operator(115,3325
  struct _Atan119,3401
      _Tp operator(122,3447
  struct _Tanh126,3524
      _Tp operator(129,3570
  struct _Exp133,3647
      _Tp operator(136,3692
  struct _Log140,3768
      _Tp operator(143,3813
  struct _Log10147,3889
      _Tp operator(150,3936
  struct _Sqrt154,4014
      _Tp operator(157,4060
  struct __unary_plus165,4348
      _Tp operator(168,4401
  struct __negate172,4473
      _Tp operator(175,4522
  struct __bitwise_not179,4594
      _Tp operator(182,4648
  struct __plus186,4720
      _Tp operator(189,4767
  struct __minus193,4860
      _Tp operator(196,4908
  struct __multiplies200,5001
      _Tp operator(203,5054
  struct __divides207,5147
      _Tp operator(210,5197
  struct __modulus214,5290
      _Tp operator(217,5340
  struct __bitwise_xor221,5433
      _Tp operator(224,5487
  struct __bitwise_and228,5580
      _Tp operator(231,5634
  struct __bitwise_or235,5727
      _Tp operator(238,5780
  struct __shift_left242,5873
      _Tp operator(245,5926
  struct __shift_right249,6020
      _Tp operator(252,6074
  struct __logical_and256,6168
      bool operator(259,6222
  struct __logical_or263,6317
      bool operator(266,6370
  struct __logical_not270,6465
      bool operator(273,6519
  struct __equal_to277,6592
      bool operator(280,6643
  struct __not_equal_to284,6738
      bool operator(287,6793
  struct __less291,6888
      bool operator(294,6935
  struct __greater298,7029
      bool operator(301,7079
  struct __less_equal305,7173
      bool operator(308,7226
  struct __greater_equal312,7321
      bool operator(315,7377
  struct _Atan2320,7511
      _Tp operator(323,7558
  struct _Pow327,7657
      _Tp operator(330,7702
      typedef _Tp result_type;337,7911
    struct __fun 350,8273
      typedef bool result_type;358,8454
      typedef bool result_type;364,8562
      typedef bool result_type;370,8669
      typedef bool result_type;376,8770
      typedef bool result_type;382,8874
      typedef bool result_type;388,8981
      typedef bool result_type;394,9091
      typedef bool result_type;400,9196
      typedef bool result_type;406,9305
    struct _ValArrayRef415,9577
    { typedef const _Tp __type;416,9601
    { typedef const valarray<_Tp>& __type;421,9755
    class _FunBase428,9913
      typedef typename _Dom::value_type value_type;431,9950
      _FunBase(433,10003
      size_t size(439,10184
      typename _ValArrayRef<_Dom>::__type _M_expr;442,10251
      typedef _FunBase<_Dom, typename _Dom::value_type> _Base;449,10453
      typedef typename _Base::value_type 450,10516
      typedef value_type _Tp;451,10569
      typedef _FunBase<valarray<_Tp>, _Tp> _Base;459,10778
      typedef _Tp value_type;460,10828
      typedef _FunBase<_Dom, const typename _Dom::value_type&> _Base;469,11066
      typedef typename _Base::value_type 470,11136
      typedef value_type _Tp;471,11189
      typedef _FunBase<valarray<_Tp>, const _Tp&> _Base;481,11423
      typedef _Tp value_type;482,11480
    class _UnBase493,11689
      typedef typename _Arg::value_type _Vt;496,11725
      typedef typename __fun<__fun497,11770
      typedef typename __fun<_Oper, _Vt>::result_type value_type;497,11770
      _UnBase(499,11837
      size_t size(504,11974
      typename _ValArrayRef<_Arg>::__type _M_expr;507,12047
      typedef _Dom _Arg;514,12214
      typedef _UnBase<_Oper, _Dom> _Base;515,12239
      typedef typename _Base::value_type 516,12281
      typedef valarray<_Tp> _Arg;525,12513
      typedef _UnBase<_Oper, valarray<_Tp> > _Base;526,12547
      typedef typename _Base::value_type 527,12599
    class _BinBase538,12811
      typedef typename _FirstArg::value_type _Vt;541,12848
      typedef typename __fun<__fun542,12898
      typedef typename __fun<_Oper, _Vt>::result_type value_type;542,12898
      _BinBase(544,12965
      size_t size(550,13173
      typename _ValArrayRef<_FirstArg>::__type _M_expr1;553,13241
      typename _ValArrayRef<_SecondArg>::__type _M_expr2;554,13298
    class _BinBase2559,13402
      typedef typename _Clos::value_type _Vt;562,13440
      typedef typename __fun<__fun563,13486
      typedef typename __fun<_Oper, _Vt>::result_type value_type;563,13486
      _BinBase2(565,13553
      size_t size(571,13742
      typename _ValArrayRef<_Clos>::__type _M_expr1;574,13810
      _Vt _M_expr2;575,13863
    class _BinBase1579,13928
      typedef typename _Clos::value_type _Vt;582,13966
      typedef typename __fun<__fun583,14012
      typedef typename __fun<_Oper, _Vt>::result_type value_type;583,14012
      _BinBase1(585,14079
      size_t size(591,14268
      _Vt _M_expr1;594,14336
      typename _ValArrayRef<_Clos>::__type _M_expr2;595,14356
      typedef _BinBase<_Oper, _Dom1, _Dom2> _Base;602,14564
      typedef typename _Base::value_type 603,14615
      typedef _BinBase<_Oper, valarray<_Tp>, valarray<_Tp> > _Base;612,14909
      typedef typename _Base::value_type 613,14977
      typedef typename _Dom::value_type 623,15319
      typedef _BinBase<_Oper,_Dom,valarray<_Tp> > _Base;624,15364
      typedef typename _Base::value_type 625,15421
      typedef typename _Dom::value_type 635,15756
      typedef _BinBase<_Oper, valarray<_Tp>, _Dom> _Base;636,15801
      typedef typename _Base::value_type 637,15859
      typedef typename _Dom::value_type 647,16159
      typedef _BinBase2<_Oper,_Dom> _Base;648,16204
      typedef typename _Base::value_type 649,16247
      typedef typename _Dom::value_type 658,16531
      typedef _BinBase1<_Oper, _Dom> _Base;659,16576
      typedef typename _Base::value_type 660,16620
      typedef _BinBase2<_Oper,valarray<_Tp> > _Base;669,16897
      typedef typename _Base::value_type 670,16950
      typedef _BinBase1<_Oper, valarray<_Tp> > _Base;679,17232
      typedef typename _Base::value_type 680,17286
    class _SBase689,17488
      typedef typename _Dom::value_type value_type;692,17523
      _SBase 694,17582
      size(702,17828
      typename _ValArrayRef<_Dom>::__type _M_expr;706,17896
      const slice& _M_slice;707,17947
    class _SBase<_SBase711,18009
      typedef _Tp value_type;714,18058
      _SBase 716,18095
      size(725,18373
      const _Array<_Tp> _M_array;729,18432
      const size_t _M_size;730,18466
      const size_t _M_stride;731,18494
      typedef _SBase<_Dom> _Base;738,18611
      typedef typename _Base::value_type 739,18645
      typedef  _SBase<_Array<_Tp> > _Base;748,18876
      typedef _Tp value_type;749,18919

/usr/include/c++/13/bits/vector.tcc,378
#define _VECTOR_TCC 57,2375
namespace std _GLIBCXX_VISIBILITY(59,2398
    operator=(operator=211,6734
namespace std _GLIBCXX_VISIBILITY(1010,31064
    operator()(operator()1017,31231
#undef _GLIBCXX_ASAN_ANNOTATE_REINIT1049,32086
#undef _GLIBCXX_ASAN_ANNOTATE_GROW1050,32123
#undef _GLIBCXX_ASAN_ANNOTATE_GREW1051,32158
#undef _GLIBCXX_ASAN_ANNOTATE_SHRINK1052,32193

/usr/include/c++/13/debug/assertions.h,624
#define _GLIBCXX_DEBUG_ASSERTIONS_H 30,1227
# define __glibcxx_requires_non_empty_range(35,1323
# define __glibcxx_requires_nonempty(36,1381
# define __glibcxx_requires_subscript(37,1420
# define __glibcxx_requires_non_empty_range(41,1534
# define __glibcxx_requires_subscript(43,1630
# define __glibcxx_requires_nonempty(46,1753
# define _GLIBCXX_DEBUG_ASSERT(52,1885
#  define _GLIBCXX_DEBUG_PEDASSERT(55,1990
#  define _GLIBCXX_DEBUG_PEDASSERT(57,2078
# define _GLIBCXX_DEBUG_ONLY(60,2134
# define _GLIBCXX_DEBUG_ASSERT(63,2193
# define _GLIBCXX_DEBUG_PEDASSERT(64,2236
# define _GLIBCXX_DEBUG_ONLY(65,2282

/usr/include/c++/13/debug/bitset,2514
#define _GLIBCXX_DEBUG_BITSET30,1214
namespace std _GLIBCXX_VISIBILITY(38,1357
    class bitset44,1524
      typedef _GLIBCXX_STD_C::bitset<_Nb> _Base;50,1667
      typedef typename _Base::reference reference;57,1913
      class reference60,1994
	typedef typename _Base::reference _Base_ref;64,2107
	reference(69,2191
	reference(75,2338
	operator=(operator=81,2460
	operator=(operator=91,2706
	operator~(104,3084
	operator bool(operator bool112,3309
	flip(121,3546
      _GLIBCXX_CONSTEXPR bitset(133,3795
      constexpr bitset(137,3895
      template<typename _CharT,143,4026
      template<typename _CharT, typename _Traits,143,4026
        bitset(146,4132
	bitset(157,4630
      bitset(166,4991
        bitset(172,5138
      operator&=(operator&=182,5471
      operator|=(operator|=190,5631
      operator^=(operator^=198,5791
      operator<<=(operator<<=206,5951
      operator>>=(operator>>=214,6101
      set(222,6251
      set(232,6472
      reset(240,6620
      reset(248,6747
      operator~(256,6872
      flip(261,6998
      flip(269,7123
      using _Base::to_ulong;302,7828
      using _Base::to_ullong;304,7884
      template <typename _CharT,307,7922
      template <typename _CharT, typename _Traits,307,7922
        std::basic_string<std::basic_string309,8012
        to_string(310,8063
	std::basic_string<std::basic_string317,8332
	to_string(318,8376
      template<typename _CharT,326,8613
        std::basic_string<std::basic_string328,8685
        to_string(329,8753
	std::basic_string<std::basic_string336,9016
	to_string(337,9077
        std::basic_string<std::basic_string343,9292
        to_string(345,9403
	std::basic_string<std::basic_string353,9617
	to_string(355,9714
      std::basic_string<std::basic_string362,9923
      to_string(363,10000
      std::basic_string<std::basic_string369,10140
      to_string(370,10217
      using _Base::count;376,10392
      using _Base::size;377,10418
      operator==(operator==381,10482
      operator!=(operator!=386,10654
      using _Base::test;390,10776
      using _Base::all;391,10801
      using _Base::any;392,10825
      using _Base::none;393,10849
      operator<<(397,10920
      operator>>(402,11071
      _M_base(407,11218
      _M_base(412,11323
    operator&(419,11466
    operator|(425,11658
    operator^(431,11850
    operator>>(436,12077
    operator<<(441,12298
    struct hash<hash451,12558
      operator()(operator()455,12670

/usr/include/c++/13/debug/debug.h,2299
#define _GLIBCXX_DEBUG_MACRO_SWITCH_H 30,1224
# define __glibcxx_requires_cond(66,2136
# define __glibcxx_requires_valid_range(67,2181
# define __glibcxx_requires_can_increment(68,2235
# define __glibcxx_requires_can_increment_range(69,2291
# define __glibcxx_requires_can_decrement_range(70,2363
# define __glibcxx_requires_sorted(71,2435
# define __glibcxx_requires_sorted_pred(72,2484
# define __glibcxx_requires_sorted_set(73,2544
# define __glibcxx_requires_sorted_set_pred(74,2607
# define __glibcxx_requires_partitioned_lower(75,2681
# define __glibcxx_requires_partitioned_upper(76,2748
# define __glibcxx_requires_partitioned_lower_pred(77,2815
# define __glibcxx_requires_partitioned_upper_pred(78,2893
# define __glibcxx_requires_heap(79,2971
# define __glibcxx_requires_heap_pred(80,3018
# define __glibcxx_requires_string(81,3076
# define __glibcxx_requires_string_len(82,3120
# define __glibcxx_requires_irreflexive(83,3173
# define __glibcxx_requires_irreflexive2(84,3227
# define __glibcxx_requires_irreflexive_pred(85,3282
# define __glibcxx_requires_irreflexive_pred2(86,3347
# define __glibcxx_requires_cond(92,3449
# define __glibcxx_requires_valid_range(93,3528
# define __glibcxx_requires_can_increment(95,3628
# define __glibcxx_requires_can_increment_range(97,3732
# define __glibcxx_requires_can_decrement_range(99,3868
# define __glibcxx_requires_sorted(101,4004
# define __glibcxx_requires_sorted_pred(103,4094
# define __glibcxx_requires_sorted_set(105,4206
# define __glibcxx_requires_sorted_set_pred(107,4324
# define __glibcxx_requires_partitioned_lower(109,4464
# define __glibcxx_requires_partitioned_upper(111,4590
# define __glibcxx_requires_partitioned_lower_pred(113,4716
# define __glibcxx_requires_partitioned_upper_pred(115,4864
# define __glibcxx_requires_heap(117,5012
# define __glibcxx_requires_heap_pred(119,5098
#  define __glibcxx_requires_string(122,5233
#  define __glibcxx_requires_string_len(124,5321
#  define __glibcxx_requires_string(127,5438
#  define __glibcxx_requires_string_len(129,5532
# define __glibcxx_requires_irreflexive(132,5656
# define __glibcxx_requires_irreflexive2(134,5756
# define __glibcxx_requires_irreflexive_pred(136,5858
# define __glibcxx_requires_irreflexive_pred2(138,5980

/usr/include/c++/13/debug/deque,1485
#define _GLIBCXX_DEBUG_DEQUE 30,1211
namespace std _GLIBCXX_VISIBILITY(35,1298
namespace std _GLIBCXX_VISIBILITY(44,1571
      typedef  _GLIBCXX_STD_C::deque<_Tp, _Allocator>		_Base;56,1957
	deque, _Allocator, __gnu_debug::_Safe_sequence>	_Safe;58,2063
      typedef typename _Base::const_iterator	60,2120
      typedef typename _Base::iterator	61,2187
      typedef __gnu_debug::_Equal_to<_Base_const_iterator> _Equal;62,2243
      struct _Base_ref70,2600
	_Base_ref(72,2631
	const _Base& _M_ref;74,2679
      typedef typename _Base::reference	78,2723
      typedef typename _Base::const_reference	79,2776
							iterator;82,2906
							const_iterator;84,2994
      typedef typename _Base::size_type	86,3018
      typedef typename _Base::difference_type	87,3071
      typedef _Tp					value_type;89,3136
      typedef _Allocator				allocator_type;90,3170
      typedef typename _Base::pointer	91,3214
      typedef typename _Base::const_pointer	92,3263
      typedef std::reverse_iterator<iterator>		reverse_iterator;93,3323
      typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;94,3388
      operator=(operator=167,5264
	typedef __gnu_debug::_After_nth_from<_Base_const_iterator> _After_nth;280,8018
    operator==(operator==672,17202
    operator<=>(operator<=>679,17463
    operator!=(operator!=684,17653
    operator<(690,17852
    operator<=(operator<=696,18048
    operator>=(operator>=702,18247
    operator>(708,18446

/usr/include/c++/13/debug/formatter.h,5199
#define _GLIBCXX_DEBUG_FORMATTER_H 30,1235
# define _GLIBCXX_TYPEID(52,1734
# define _GLIBCXX_TYPEID(58,1824
  enum _Debug_msg_id105,2680
    __msg_valid_range,108,2727
    __msg_insert_singular,109,2750
    __msg_insert_different,110,2777
    __msg_erase_bad,111,2805
    __msg_erase_different,112,2826
    __msg_subscript_oob,113,2853
    __msg_empty,114,2878
    __msg_unpartitioned,115,2895
    __msg_unpartitioned_pred,116,2920
    __msg_unsorted,117,2950
    __msg_unsorted_pred,118,2970
    __msg_not_heap,119,2995
    __msg_not_heap_pred,120,3015
    __msg_bad_bitset_write,122,3066
    __msg_bad_bitset_read,123,3094
    __msg_bad_bitset_flip,124,3121
    __msg_self_splice,126,3172
    __msg_splice_alloc,127,3195
    __msg_splice_bad,128,3219
    __msg_splice_other,129,3241
    __msg_splice_overlap,130,3265
    __msg_init_singular,132,3314
    __msg_init_copy_singular,133,3339
    __msg_init_const_singular,134,3369
    __msg_copy_singular,135,3400
    __msg_bad_deref,136,3425
    __msg_bad_inc,137,3446
    __msg_bad_dec,138,3465
    __msg_iter_subscript_oob,139,3484
    __msg_advance_oob,140,3514
    __msg_retreat_oob,141,3537
    __msg_iter_compare_bad,142,3560
    __msg_compare_different,143,3588
    __msg_iter_order_bad,144,3617
    __msg_order_different,145,3643
    __msg_distance_bad,146,3670
    __msg_distance_different,147,3694
    __msg_deref_istream,149,3748
    __msg_inc_istream,150,3773
    __msg_output_ostream,152,3820
    __msg_deref_istreambuf,154,3873
    __msg_inc_istreambuf,155,3901
    __msg_insert_after_end,157,3947
    __msg_erase_after_bad,158,3975
    __msg_valid_range2,159,4002
    __msg_local_iter_compare_bad,161,4069
    __msg_non_empty_range,162,4103
    __msg_self_move_assign,164,4171
    __msg_bucket_index_oob,166,4234
    __msg_valid_load_factor,167,4262
    __msg_equal_allocs,169,4305
    __msg_insert_range_from_self,170,4329
    __msg_irreflexive_ordering171,4363
  class _Error_formatter174,4400
    struct _Is_iterator 177,4489
    struct _Is_iterator_value_type 178,4518
    struct _Is_sequence 179,4558
    struct _Is_instance 180,4587
    enum _Constness184,4688
      __unknown_constness,186,4714
      __const_iterator,187,4741
      __mutable_iterator,188,4765
      __last_constness189,4791
    enum _Iterator_state193,4886
      __unknown_state,195,4917
      __singular,196,4940
      __begin,197,5007
      __middle,198,5064
      __end,199,5122
      __before_begin,200,5191
      __rbegin,201,5229
      __rmiddle,202,5295
      __rend,203,5369
      __singular_value_init,204,5408
      __last_state205,5468
    struct _Parameter209,5557
	__unused_param,213,5604
	__iterator,214,5621
	__sequence,215,5634
	__integer,216,5647
	__string,217,5659
	__instance,218,5670
	__iterator_value_type219,5683
      } _M_kind;220,5706
      struct _Named222,5724
	const char*		_M_name;224,5752
      struct _Type 227,5785
	const type_info*	_M_type;229,5821
      struct _Instance 232,5858
	const void*		_M_address;234,5897
	struct : _Instance240,5984
	  _Constness		_M_constness;242,6007
	  _Iterator_state	_M_state;243,6036
	  const void*		_M_sequence;244,6065
	  const type_info*	_M_seq_type;245,6094
	} _M_iterator;246,6127
	_Instance _M_sequence;249,6175
	struct : _Named252,6230
	  long			_M_value;254,6250
	} _M_integer;255,6270
	struct : _Named258,6315
	  const char*		_M_value;260,6335
	} _M_string;261,6361
	_Instance _M_instance;264,6407
	_Type _M_iterator_value_type;267,6474
      } _M_variant;268,6505
      _Parameter(270,6526
      _Parameter(272,6590
      _Parameter(279,6783
      template<typename _Iterator,286,6980
      template<typename _Iterator, typename _Sequence,286,6980
	_Parameter(287,7055
      template<typename _Iterator,319,8150
	_Parameter(320,8205
	_Parameter(351,9231
	_Parameter(364,9763
	_Parameter(377,10295
      template<typename _Iterator,393,10987
        _Parameter(394,11043
	_Parameter(401,11314
      template<typename _Iterator,410,11621
      template<typename _Iterator, typename _Sequence,410,11621
	_Parameter(411,11696
	_Parameter(423,12114
      template<typename _Iterator,428,12321
      template<typename _Iterator, typename _Sequence,428,12321
	_Parameter(429,12396
      _S_reverse_state(440,12725
	_Parameter(459,13043
	_Parameter(470,13421
	_Parameter(479,13742
	_Parameter(489,14091
      _M_iterator(510,14682
      _M_iterator_value_type(520,14983
    _M_integer(530,15262
    _M_string(538,15485
      _M_sequence(547,15749
      _M_instance(557,16035
    _M_message(566,16288
    _Error_formatter(591,16918
    enum { __max_parameters 610,17468
    const char*		_M_file;612,17504
    unsigned int	_M_line;613,17530
    _Parameter		_M_parameters[_M_parameters614,17556
    unsigned int	_M_num_parameters;615,17605
    const char*		_M_text;616,17641
    const char*		_M_function;617,17667
    struct __glibcxx_backtrace_state*		_M_backtrace_state;619,17726
    __decltype(&__glibcxx_backtrace_full)	_M_backtrace_full;622,17917
    static void _S_err(624,17979
    _S_at(629,18078
#undef _GLIBCXX_TYPEID637,18295

/usr/include/c++/13/debug/forward_list,3027
#define _GLIBCXX_DEBUG_FORWARD_LIST 30,1209
namespace std _GLIBCXX_VISIBILITY(35,1303
#define __glibcxx_check_valid_fl_range(45,1641
    class _Safe_forward_list56,2070
      _M_this(60,2169
      _M_swap_aux(64,2266
      void _M_swap_single(69,2432
      void _M_swap(82,2793
namespace std _GLIBCXX_VISIBILITY(183,6003
namespace __debug185,6048
  template<typename _Tp,188,6142
	forward_list<_Tp, _Alloc>, _Alloc,191,6273
      public _GLIBCXX_STD_C::forward_list<_GLIBCXX_STD_C::forward_list192,6343
      typedef _GLIBCXX_STD_C::forward_list<_Tp, _Alloc>		_Base;194,6404
	forward_list, _Alloc, __gnu_debug::_Safe_forward_list>	_Safe;196,6512
      typedef typename _Base::iterator	198,6576
      typedef typename _Base::const_iterator	199,6632
      struct _Base_ref205,6875
	_Base_ref(207,6906
	const _Base& _M_ref;209,6954
      typedef typename _Base::reference	213,6998
      typedef typename _Base::const_reference	214,7050
	_Base_iterator, forward_list>		iterator;217,7157
	_Base_const_iterator, forward_list>	const_iterator;219,7242
      typedef typename _Base::size_type	221,7296
      typedef typename _Base::difference_type	222,7348
      typedef _Tp				value_type;224,7412
      typedef typename _Base::allocator_type	225,7445
      typedef typename _Base::pointer	226,7506
      typedef typename _Base::const_pointer	227,7554
      operator=(operator=288,9286
# define _GLIBCXX_FWDLIST_REMOVE_RETURN_TYPE_TAG 683,20473
# define _GLIBCXX20_ONLY(685,20570
# define _GLIBCXX_FWDLIST_REMOVE_RETURN_TYPE_TAG688,20657
# define _GLIBCXX20_ONLY(689,20706
#undef _GLIBCXX_FWDLIST_REMOVE_RETURN_TYPE_TAG790,23343
#undef _GLIBCXX20_ONLY791,23390
  template<typename _InputIterator,849,24866
  template<typename _Tp,857,25238
  template<typename _Tp,863,25452
    operator==(operator==865,25503
  template<typename _Tp,870,25689
    operator<=>(operator<=>872,25774
  template<typename _Tp,876,25922
    operator<(878,25980
  template<typename _Tp,882,26128
    operator!=(operator!=884,26186
  template<typename _Tp,889,26345
    operator>(891,26403
  template<typename _Tp,896,26558
    operator>=(operator>=898,26616
  template<typename _Tp,903,26774
    operator<=(operator<=905,26832
  template<typename _Tp,911,27033
    swap(913,27091
namespace __gnu_debug920,27275
  template<typename _Tp,922,27299
    struct _BeforeBeginHelper<_BeforeBeginHelper923,27341
      typedef std::__debug::forward_list<_Tp,_Tp925,27419
      typedef std::__debug::forward_list<_Tp, _Alloc> _Sequence;925,27419
	_S_Is(929,27533
	_S_Is_Beginnest(937,27725
  template<typename _Tp,941,27825
    struct _Sequence_traits<_Sequence_traits942,27867
      typedef typename std::__debug::forward_list<std::__debug::forward_list944,27943
      typedef typename std::__debug::forward_list<_Tp, _Alloc>::iterator _It;944,27943
      _S_size(947,28074
    struct _Insert_range_from_self_is_safe<_Insert_range_from_self_is_safe956,28323
    { enum { __value 958,28415

/usr/include/c++/13/debug/functions.h,1060
#define _GLIBCXX_DEBUG_FUNCTIONS_H 30,1225
    struct _Insert_range_from_self_is_safe45,1588
    { enum { __value 46,1631
    struct _Is_contiguous_sequence 49,1694
      typedef const typename 75,2617
      typedef std::less<_PointerType> _Less;76,2683
      typedef _Is_contiguous_sequence<_Sequence> __tag;156,5758
      typedef typename std::__is_integer<std::__is_integer197,7265
      typedef typename std::iterator_traits<std::iterator_traits317,11162
      typedef typename std::iterator_traits<std::iterator_traits319,11249
      typedef typename std::__are_same<std::__are_same322,11337
      typedef typename std::iterator_traits<std::iterator_traits335,11778
      typedef typename std::iterator_traits<std::iterator_traits337,11865
      typedef typename std::__are_same<std::__are_same340,11953
  struct _Irreflexive_checker420,14219
    template<typename _It,426,14355
      _S_is_valid(437,14674
    template<typename _It,440,14726
    template<typename _It, typename _Pred,440,14726
      _S_is_valid_pred(451,15106

/usr/include/c++/13/debug/helper_functions.h,802
#define _GLIBCXX_DEBUG_HELPER_FUNCTIONS_H 30,1239
  enum _Distance_precision52,1862
      __dp_none,54,1895
      __dp_equality,55,1942
      __dp_sign,56,2004
      __dp_sign_max_size,57,2062
      __dp_exact	58,2127
	typename std::iterator_traits<_Iterator>::difference_type _ItDiffType;67,2344
	{ typedef _DiffType __type;72,2535
	{ typedef std::ptrdiff_t __type;76,2652
      typedef typename _DiffTraits<_DiffTraits78,2690
      typedef std::pair<_DiffType, _Distance_precision> __type;81,2770
    { typedef std::pair<std::ptrdiff_t, _Distance_precision> __type;86,2930
      typedef typename std::__is_integer<std::__is_integer242,7477
      typedef typename std::__is_integer<std::__is_integer266,8337
    struct _Unsafe_type321,10261
    { typedef _Iterator _Type;322,10285

/usr/include/c++/13/debug/list,2286
#define _GLIBCXX_DEBUG_LIST 30,1208
namespace std _GLIBCXX_VISIBILITY(35,1294
namespace std _GLIBCXX_VISIBILITY(44,1565
      typedef _GLIBCXX_STD_C::list<_Tp, _Allocator>		_Base;56,1952
	list, _Allocator, __gnu_debug::_Safe_node_sequence>	_Safe;58,2056
      typedef typename _Base::iterator	60,2117
      typedef typename _Base::const_iterator	61,2173
      typedef __gnu_debug::_Equal_to<_Base_const_iterator>	_Equal;62,2240
      typedef __gnu_debug::_Not_equal_to<_Base_const_iterator>  _Not_equal;63,2307
      struct _Base_ref71,2672
	_Base_ref(73,2703
	const _Base& _M_ref;75,2751
      typedef typename _Base::reference	79,2795
      typedef typename _Base::const_reference	80,2848
							iterator;83,2977
							const_iterator;85,3064
      typedef typename _Base::size_type	87,3088
      typedef typename _Base::difference_type	88,3141
      typedef _Tp					value_type;90,3206
      typedef _Allocator				allocator_type;91,3240
      typedef typename _Base::pointer	92,3284
      typedef typename _Base::const_pointer	93,3333
      typedef std::reverse_iterator<iterator>		reverse_iterator;94,3393
      typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;95,3458
      operator=(operator=172,5439
      typedef size_type __remove_return_type;678,18430
# define _GLIBCXX_LIST_REMOVE_RETURN_TYPE_TAG 679,18476
# define _GLIBCXX20_ONLY(681,18570
      typedef void __remove_return_type;683,18616
# define _GLIBCXX_LIST_REMOVE_RETURN_TYPE_TAG684,18657
# define _GLIBCXX20_ONLY(685,18703
#undef _GLIBCXX_LIST_REMOVE_RETURN_TYPE_TAG837,22433
#undef _GLIBCXX20_ONLY838,22477
    operator==(operator==925,24793
    operator<=>(operator<=>932,25052
    operator!=(operator!=937,25240
    operator<(943,25437
    operator<=(operator<=949,25631
    operator>=(operator>=955,25828
    operator>(961,26025
namespace __gnu_debug975,26436
  template<typename _Tp,979,26564
    struct _Sequence_traits<_Sequence_traits980,26606
      typedef typename std::__debug::list<std::__debug::list982,26674
      typedef typename std::__debug::list<_Tp, _Alloc>::iterator _It;982,26674
      _S_size(985,26797
    struct _Insert_range_from_self_is_safe<_Insert_range_from_self_is_safe995,27045
    { enum { __value 996,27122

/usr/include/c++/13/debug/macros.h,2117
#define _GLIBCXX_DEBUG_MACROS_H 30,1219
#define _GLIBCXX_DEBUG_VERIFY_COND_AT(41,1652
#define _GLIBCXX_DEBUG_VERIFY_AT_F(46,1867
#define _GLIBCXX_DEBUG_VERIFY_AT(52,2088
#define _GLIBCXX_DEBUG_VERIFY(55,2228
#define __glibcxx_check_valid_range(60,2436
#define __glibcxx_check_valid_range_at(66,2690
#define __glibcxx_check_valid_range2(73,2990
#define __glibcxx_check_valid_constructor_range(79,3257
#define __glibcxx_check_non_empty_range(84,3490
#define __glibcxx_check_can_increment(91,3791
#define __glibcxx_check_can_increment_dist(97,4053
#define __glibcxx_check_can_increment_range(103,4345
#define __glibcxx_check_can_decrement_range(121,5075
#define __glibcxx_check_insert(146,6202
#define __glibcxx_check_insert_after(163,7049
#define __glibcxx_check_insert_range(180,7948
#define __glibcxx_check_insert_range_after(199,8989
#define __glibcxx_check_erase(212,9614
# define __glibcxx_check_erase2(223,10090
#define __glibcxx_check_erase_after(234,10538
#define __glibcxx_check_erase_range(248,11186
#define __glibcxx_check_erase_range_after(260,11708
#define __glibcxx_check_subscript(292,13207
#define __glibcxx_check_bucket_index(300,13543
#define __glibcxx_check_nonempty(308,13867
#define __glibcxx_check_irreflexive(314,14081
# define __glibcxx_check_irreflexive2(320,14342
# define __glibcxx_check_irreflexive2(326,14609
#define __glibcxx_check_irreflexive_pred(329,14669
# define __glibcxx_check_irreflexive_pred2(336,14979
# define __glibcxx_check_irreflexive_pred2(343,15302
#define __glibcxx_check_sorted(347,15433
#define __glibcxx_check_sorted_pred(359,15930
#define __glibcxx_check_sorted_set(371,16461
#define __glibcxx_check_sorted_set_pred(381,16864
#define __glibcxx_check_partitioned_lower(394,17401
#define __glibcxx_check_partitioned_upper(404,17831
#define __glibcxx_check_partitioned_lower_pred(416,18379
#define __glibcxx_check_partitioned_upper_pred(429,18975
#define __glibcxx_check_heap(441,19513
#define __glibcxx_check_heap_pred(450,19900
#define __glibcxx_check_max_load_factor(460,20303
#define __glibcxx_check_equal_allocs(465,20488

/usr/include/c++/13/debug/map,79
#define _GLIBCXX_DEBUG_MAP 30,1214
namespace std _GLIBCXX_VISIBILITY(35,1299

/usr/include/c++/13/debug/map.h,1497
#define _GLIBCXX_DEBUG_MAP_H 30,1209
namespace std _GLIBCXX_VISIBILITY(37,1369
	_Key, _Tp, _Compare, _Allocator>			_Base;51,1899
	map, _Allocator, __gnu_debug::_Safe_node_sequence>	_Safe;53,1986
      typedef typename _Base::const_iterator	55,2046
      typedef typename _Base::iterator	56,2113
      typedef __gnu_debug::_Equal_to<_Base_const_iterator> _Equal;57,2169
      struct _Base_ref65,2524
	_Base_ref(67,2555
	const _Base& _M_ref;69,2603
      typedef _Key					key_type;74,2663
      typedef _Tp					mapped_type;75,2696
      typedef std::pair<const _Key, _Tp>		value_type;76,2731
      typedef _Compare					key_compare;77,2785
      typedef _Allocator				allocator_type;78,2825
      typedef typename _Base::reference	79,2869
      typedef typename _Base::const_reference	80,2922
							iterator;83,3050
							const_iterator;85,3136
      typedef typename _Base::size_type	87,3160
      typedef typename _Base::difference_type	88,3213
      typedef typename _Base::pointer	89,3277
      typedef typename _Base::const_pointer	90,3326
      typedef std::reverse_iterator<iterator>		reverse_iterator;91,3386
      typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;92,3451
      operator=(operator=163,5335
    operator==(operator==748,21111
    operator<=>(operator<=>755,21457
    operator!=(operator!=762,21727
    operator<(769,22004
    operator<=(operator<=776,22278
    operator>=(operator>=783,22555
    operator>(790,22832

/usr/include/c++/13/debug/multimap.h,1517
#define _GLIBCXX_DEBUG_MULTIMAP_H 30,1224
namespace std _GLIBCXX_VISIBILITY(37,1389
	_Key, _Tp, _Compare, _Allocator>			_Base;51,1941
	multimap, _Allocator, __gnu_debug::_Safe_node_sequence>	_Safe;53,2028
      typedef typename _Base::const_iterator	55,2093
      typedef typename _Base::iterator	56,2160
      typedef __gnu_debug::_Equal_to<_Base_const_iterator> _Equal;57,2216
      struct _Base_ref65,2576
	_Base_ref(67,2607
	const _Base& _M_ref;69,2655
      typedef _Key					key_type;74,2715
      typedef _Tp					mapped_type;75,2748
      typedef std::pair<const _Key, _Tp>		value_type;76,2783
      typedef _Compare					key_compare;77,2837
      typedef _Allocator				allocator_type;78,2877
      typedef typename _Base::reference	79,2921
      typedef typename _Base::const_reference	80,2974
							iterator;83,3107
					  multimap>	const_iterator;85,3188
      typedef typename _Base::size_type	87,3222
      typedef typename _Base::difference_type	88,3275
      typedef typename _Base::pointer	89,3339
      typedef typename _Base::const_pointer	90,3388
      typedef std::reverse_iterator<iterator>		reverse_iterator;91,3448
      typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;92,3513
      operator=(operator=163,5556
    operator==(operator==630,18300
    operator<=>(operator<=>637,18656
    operator!=(operator!=644,18936
    operator<(651,19223
    operator<=(operator<=658,19507
    operator>=(operator>=665,19794
    operator>(672,20081

/usr/include/c++/13/debug/multiset.h,1537
#define _GLIBCXX_DEBUG_MULTISET_H 30,1224
namespace std _GLIBCXX_VISIBILITY(37,1389
      typedef _GLIBCXX_STD_C::multiset<_Key, _Compare, _Allocator>	_Base;50,1857
	multiset, _Allocator, __gnu_debug::_Safe_node_sequence>		_Safe;52,1975
      typedef typename _Base::const_iterator	54,2041
      typedef typename _Base::iterator	55,2108
      typedef __gnu_debug::_Equal_to<_Base_const_iterator> _Equal;56,2164
      struct _Base_ref64,2524
	_Base_ref(66,2555
	const _Base& _M_ref;68,2603
      typedef _Key					key_type;73,2663
      typedef _Key					value_type;74,2696
      typedef _Compare					key_compare;75,2731
      typedef _Compare					value_compare;76,2771
      typedef _Allocator				allocator_type;77,2813
      typedef typename _Base::reference	78,2857
      typedef typename _Base::const_reference	79,2910
							iterator;82,3043
					  multiset>	const_iterator;84,3124
      typedef typename _Base::size_type	86,3158
      typedef typename _Base::difference_type	87,3211
      typedef typename _Base::pointer	88,3275
      typedef typename _Base::const_pointer	89,3324
      typedef std::reverse_iterator<iterator>		reverse_iterator;90,3384
      typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;91,3449
      operator=(operator=163,5479
    operator==(operator==601,17430
    operator<=>(operator<=>608,17745
    operator!=(operator!=614,17997
    operator<(620,18256
    operator<=(operator<=626,18512
    operator>=(operator>=632,18771
    operator>(638,19030

/usr/include/c++/13/debug/safe_base.h,818
#define _GLIBCXX_DEBUG_SAFE_BASE_H 30,1236
  class _Safe_iterator_base50,1933
    _Safe_sequence_base*	_M_sequence;57,2110
    unsigned int		_M_version;66,2507
    _Safe_iterator_base*	_M_prior;70,2657
    _Safe_iterator_base*	_M_next;74,2808
    _Safe_iterator_base(78,2915
    _Safe_iterator_base(89,3393
    _Safe_iterator_base(96,3777
    ~_Safe_iterator_base(100,3966
    _M_attached_to(131,4817
    _M_invalidate(146,5318
    _M_unlink(155,5470
  class _Safe_sequence_base188,6640
    _Safe_iterator_base* _M_iterators;194,6789
    _Safe_iterator_base* _M_const_iterators;197,6898
    mutable unsigned int _M_version;200,7010
    _Safe_sequence_base(204,7123
    _Safe_sequence_base(209,7263
    _Safe_sequence_base(213,7397
    ~_Safe_sequence_base(220,7619
    _M_invalidate_all(256,8698

/usr/include/c++/13/debug/safe_container.h,316
#define _GLIBCXX_DEBUG_SAFE_CONTAINER_H 30,1233
      typedef _SafeBase<_SafeContainer> _Base;44,1606
      operator=(operator=79,2600
      operator=(operator=87,2768
	    typedef __gnu_cxx::__alloc_traits<_Alloc> _Alloc_traits;100,3156
	    typedef __gnu_cxx::__alloc_traits<_Alloc> _Alloc_traits;121,3640

/usr/include/c++/13/debug/safe_iterator.h,3428
#define _GLIBCXX_DEBUG_SAFE_ITERATOR_H 30,1230
#define _GLIBCXX_DEBUG_VERIFY_OPERANDS(42,1496
#define _GLIBCXX_DEBUG_VERIFY_EQ_OPERANDS(54,1973
#define _GLIBCXX_DEBUG_VERIFY_REL_OPERANDS(58,2133
#define _GLIBCXX_DEBUG_VERIFY_DIST_OPERANDS(62,2289
    struct _BeforeBeginHelper72,2592
      template<typename _Iterator,74,2628
	_S_Is(76,2696
      template<typename _Iterator,79,2779
	_S_Is_Beginnest(81,2847
    struct _Sequence_traits87,3103
      typedef _Distance_traits<typename _Sequence::iterator> _DistTraits;89,3137
      _S_size(92,3254
      typedef _Iterator _Iter_base;118,4412
      typedef _Safe_iterator_base _Safe_base;119,4448
      typedef std::iterator_traits<_Iterator> _Traits;121,4495
			      _Iterator> _IsConstant;125,4639
      typedef typename __gnu_cxx::__conditional_type<__gnu_cxx::__conditional_type127,4673
      struct _Unchecked 132,4857
      typedef _Iterator					iterator_type;139,5061
      typedef typename _Traits::iterator_category	140,5104
      typedef typename _Traits::value_type	141,5173
      typedef typename _Traits::difference_type	142,5229
      typedef typename _Traits::reference	143,5295
      typedef typename _Traits::pointer	144,5349
      operator=(operator=228,7886
      operator=(operator=260,8716
      operator*(296,9541
      operator->(310,9885
      operator++(324,10274
      operator++(339,10652
      operator _Iterator(operator _Iterator369,11441
      typedef _Safe_iterator<_Iterator, _Sequence, iterator_category> _Self;466,14640
      operator==(operator==470,14761
	operator==(operator==479,15005
      operator!=(operator!=490,15304
	operator!=(operator!=499,15548
			     std::forward_iterator_tag> _Safe_base;514,16070
      typedef typename _Safe_base::_OtherIterator 517,16133
      typedef typename _Safe_base::_Unchecked 519,16200
      operator=(operator=579,17905
      operator++(592,18189
      operator++(603,18407
      operator--(619,18837
      operator--(634,19221
			     std::bidirectional_iterator_tag> _Safe_base;658,19935
      typedef typename _Safe_base::_OtherIterator 659,19988
      typedef typename _Safe_base::_Self 661,20055
			     std::random_access_iterator_tag> _OtherSelf;663,20159
      typedef typename _Safe_base::_Unchecked 665,20213
      typedef typename _Safe_base::difference_type	672,20423
      typedef typename _Safe_base::reference	673,20491
      operator=(operator=727,22043
      operator++(746,22523
      operator++(757,22741
      operator--(773,23171
      operator--(784,23389
      operator+=(operator+=807,24051
      operator-=(operator-=818,24372
      operator<=>(operator<=>831,24745
      operator<=>(operator<=>839,24957
      operator<(847,25184
      operator<(855,25406
      operator<=(operator<=863,25633
      operator<=(operator<=871,25857
      operator>(879,26086
      operator>(887,26308
      operator>=(operator>=895,26535
      operator>=(operator>=903,26759
      operator-(916,27247
      operator-(924,27486
      operator+(932,27710
      operator+(942,28035
      operator-(952,28360
    { typedef _Iterator _Type;1006,30359
namespace std _GLIBCXX_VISIBILITY(1017,30646
#undef _GLIBCXX_DEBUG_VERIFY_DIST_OPERANDS1033,31105
#undef _GLIBCXX_DEBUG_VERIFY_REL_OPERANDS1034,31148
#undef _GLIBCXX_DEBUG_VERIFY_EQ_OPERANDS1035,31190
#undef _GLIBCXX_DEBUG_VERIFY_OPERANDS1036,31231

/usr/include/c++/13/debug/safe_iterator.tcc,348
#define _GLIBCXX_DEBUG_SAFE_ITERATOR_TCC 30,1252
      typedef _Sequence_traits<_Sequence> _SeqTraits;41,1571
      typedef _Sequence_traits<_Sequence> _SeqTraits;65,2356
      typedef typename _Distance_traits<_Distance_traits126,4172
      typedef _Sequence_traits<_Sequence> _SeqTraits;127,4238
namespace std _GLIBCXX_VISIBILITY(234,7513

/usr/include/c++/13/debug/safe_local_iterator.h,2380
#define _GLIBCXX_DEBUG_SAFE_LOCAL_ITERATOR_H 30,1242
#define _GLIBCXX_DEBUG_VERIFY_OPERANDS(34,1330
    class _Safe_local_iterator64,2610
      typedef _Iterator _Iter_base;68,2710
      typedef _Safe_local_iterator_base _Safe_base;69,2746
      typedef typename _Sequence::size_type size_type;71,2799
      typedef std::iterator_traits<_Iterator> _Traits;73,2855
	typename _Sequence::_Base::const_local_iterator,76,2942
	_Iterator> _IsConstant;77,2992
      typedef typename __gnu_cxx::__conditional_type<__gnu_cxx::__conditional_type79,3018
      _OtherIterator;82,3195
      typedef _Safe_local_iterator _Self;84,3218
      typedef _Safe_local_iterator<_OtherIterator,_OtherIterator85,3260
      typedef _Safe_local_iterator<_OtherIterator, _Sequence> _OtherSelf;85,3260
      struct _Unchecked 87,3335
      _Safe_local_iterator(89,3365
      typedef _Iterator					iterator_type;95,3534
      typedef typename _Traits::iterator_category	iterator_category;96,3577
      typedef typename _Traits::value_type		value_type;97,3646
      typedef typename _Traits::difference_type		difference_type;98,3702
      typedef typename _Traits::reference		reference;99,3768
      typedef typename _Traits::pointer			pointer;100,3822
      _Safe_local_iterator(103,3930
      _Safe_local_iterator(112,4180
      _Safe_local_iterator(119,4382
      _Safe_local_iterator(136,4924
	_Safe_local_iterator(155,5490
      operator=(operator=176,6154
      operator=(operator=207,6951
      operator*(241,7750
      operator->(254,8051
      operator++(268,8428
      operator++(283,8794
      _S_constant(297,9145
      base(304,9289
      base(307,9353
      bucket(313,9470
      operator _Iterator(operator _Iterator319,9671
      _M_attach(323,9786
      _M_attach_single(328,9941
      _M_dereferenceable(333,10109
      _M_incrementable(338,10250
      _M_value_initialized(343,10393
      typename __gnu_cxx::__conditional_type<__gnu_cxx::__conditional_type357,10895
      _M_get_sequence(359,11002
      bool _M_is_begin(363,11163
      bool _M_is_end(367,11341
	_M_in_same_bucket(373,11549
      operator==(operator==378,11709
      operator==(operator==385,11907
      operator!=(operator!=392,12100
      operator!=(operator!=399,12298
    { typedef _Iterator _Type;426,13366
#undef _GLIBCXX_DEBUG_VERIFY_OPERANDS436,13606

/usr/include/c++/13/debug/safe_local_iterator.tcc,56
#define _GLIBCXX_DEBUG_SAFE_LOCAL_ITERATOR_TCC 30,1264

/usr/include/c++/13/debug/safe_sequence.h,788
#define _GLIBCXX_DEBUG_SAFE_SEQUENCE_H 30,1230
    class _Not_equal_to44,1617
      _Type __value;46,1647
      explicit _Not_equal_to(49,1681
      operator(52,1759
    class _Equal_to59,1980
      _Type __value;61,2006
      explicit _Equal_to(64,2040
      operator(67,2114
    class _After_nth_from74,2369
      difference_type;77,2473
      _Iterator _M_base;79,2497
      difference_type _M_n;80,2522
      _After_nth_from(83,2563
      operator()(operator()87,2689
    class _Safe_sequence 108,3656
    class _Safe_node_sequence131,4554
      _M_invalidate_all(136,4655
	typedef typename _Sequence::const_iterator 138,4689
	typedef typename _Const_iterator::iterator_type 139,4750
	typedef __gnu_debug::_Not_equal_to<_Base_const_iterator> _Not_equal;140,4821

/usr/include/c++/13/debug/safe_sequence.tcc,250
#define _GLIBCXX_DEBUG_SAFE_SEQUENCE_TCC 30,1234
	typedef typename _Sequence::iterator 40,1462
	typedef typename _Sequence::const_iterator 41,1510
	typedef typename _Sequence::iterator 74,2434
	typedef typename _Sequence::const_iterator 75,2482

/usr/include/c++/13/debug/safe_unordered_base.h,726
#define _GLIBCXX_DEBUG_SAFE_UNORDERED_BASE_H 30,1257
  class _Safe_local_iterator_base 50,1994
    _Safe_local_iterator_base(54,2133
    _Safe_local_iterator_base(64,2569
    _Safe_local_iterator_base(70,2899
    ~_Safe_local_iterator_base(74,3048
    _M_get_container(77,3141
  class _Safe_unordered_container_base 120,4752
    typedef _Safe_sequence_base _Base;123,4868
    _Safe_iterator_base* _M_local_iterators;127,4992
    _Safe_iterator_base* _M_const_local_iterators;130,5113
    _Safe_unordered_container_base(134,5240
    _Safe_unordered_container_base(139,5413
    _Safe_unordered_container_base(144,5606
    ~_Safe_unordered_container_base(151,5862
    _M_detach_all(156,6006
    _M_swap(164,6306

/usr/include/c++/13/debug/safe_unordered_container.h,1132
#define _GLIBCXX_DEBUG_SAFE_UNORDERED_CONTAINER_H 30,1253
    class _Safe_unordered_container 58,2514
      _M_cont(62,2627
      _M_invalidate_locals(67,2729
      template<typename _ExtractKey,76,2963
	struct _UContInvalidatePred77,3018
	    operator(81,3092
	  const _Source& _M_source;84,3191
      template<typename _ExtractKey,87,3225
	struct _UMContInvalidatePred88,3280
	    operator(92,3355
	  const _Source& _M_source;106,3632
      template<typename _Source,109,3666
	struct _UContMergeGuard110,3725
	  _UContMergeGuard(112,3753
	  ~_UContMergeGuard(118,3926
	  _Source& _M_source;140,4317
	  const std::size_t _M_size;141,4340
	  _InvalidatePred _M_pred;142,4370
      template<typename _ExtractKey,145,4403
	static _UContMergeGuard<_UContMergeGuard146,4458
	_S_uc_guard(148,4540
	  typedef _UContInvalidatePred<_ExtractKey, _Source> _InvalidatePred;150,4585
      template<typename _ExtractKey,154,4721
	static _UContMergeGuard<_UContMergeGuard155,4776
	_S_umc_guard(157,4859
	  typedef _UMContInvalidatePred<_ExtractKey, _Source> _InvalidatePred;159,4905
      _M_invalidate_all(166,5081

/usr/include/c++/13/debug/safe_unordered_container.tcc,277
#define _GLIBCXX_DEBUG_SAFE_UNORDERED_CONTAINER_TCC 30,1257
	typedef typename _Container::iterator 40,1509
	typedef typename _Container::const_iterator 41,1558
	typedef typename _Container::local_iterator 72,2425
	typedef typename _Container::const_local_iterator 73,2486

/usr/include/c++/13/debug/set,79
#define _GLIBCXX_DEBUG_SET 30,1214
namespace std _GLIBCXX_VISIBILITY(35,1299

/usr/include/c++/13/debug/set.h,1511
#define _GLIBCXX_DEBUG_SET_H 30,1209
namespace std _GLIBCXX_VISIBILITY(37,1369
      typedef _GLIBCXX_STD_C::set<_Key, _Compare, _Allocator>	_Base;50,1815
	set, _Allocator, __gnu_debug::_Safe_node_sequence>	_Safe;52,1928
      typedef typename _Base::const_iterator	54,1988
      typedef typename _Base::iterator	55,2055
      typedef __gnu_debug::_Equal_to<_Base_const_iterator> _Equal;56,2111
      struct _Base_ref64,2466
	_Base_ref(66,2497
	const _Base& _M_ref;68,2545
      typedef _Key					key_type;73,2605
      typedef _Key					value_type;74,2638
      typedef _Compare					key_compare;75,2673
      typedef _Compare					value_compare;76,2713
      typedef _Allocator				allocator_type;77,2755
      typedef typename _Base::reference	78,2799
      typedef typename _Base::const_reference	79,2852
							iterator;82,2980
							const_iterator;84,3066
      typedef typename _Base::size_type	86,3090
      typedef typename _Base::difference_type	87,3143
      typedef typename _Base::pointer	88,3207
      typedef typename _Base::const_pointer	89,3256
      typedef std::reverse_iterator<iterator>		reverse_iterator;90,3316
      typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;91,3381
      operator=(operator=161,5270
    operator==(operator==611,17506
    operator<=>(operator<=>618,17811
    operator!=(operator!=624,18053
    operator<(630,18302
    operator<=(operator<=636,18548
    operator>=(operator>=642,18797
    operator>(648,19046

/usr/include/c++/13/debug/stl_iterator.h,290
#define _GLIBCXX_DEBUG_STL_ITERATOR_H 30,1231
    struct _Unsafe_type<_Unsafe_type77,2933
      typedef typename _Unsafe_type<_Iterator>::_Type _UnsafeType;79,2998
      typedef std::reverse_iterator<_UnsafeType> _Type;80,3065
      typedef typename _Unsafe_type<_Unsafe_type87,3299

/usr/include/c++/13/debug/string,3297
#define _GLIBCXX_DEBUG_STRING 30,1214
#define _GLIBCXX_DEBUG_VERIFY_STR_COND_AT(39,1393
# define _GLIBCXX_INSERT_RETURNS_ITERATOR 45,1642
# define _GLIBCXX_INSERT_RETURNS_ITERATOR_ONLY(46,1686
# define _GLIBCXX_INSERT_RETURNS_ITERATOR 48,1750
# define _GLIBCXX_INSERT_RETURNS_ITERATOR_ONLY(49,1794
#  define __glibcxx_check_string(54,1913
#  define __glibcxx_check_string_len(58,2073
#  define __glibcxx_check_string(63,2260
#  define __glibcxx_check_string_len(67,2426
# define __glibcxx_check_string(73,2626
# define __glibcxx_check_string_len(74,2667
#define __glibcxx_check_string_n_constructor(120,4050
#define __glibcxx_check_string_constructor(123,4182
      typedef std::basic_string<_CharT, _Traits, _Allocator>	_Base;135,4733
	basic_string,137,4845
	typename _Base::__const_iterator, basic_string> __const_iterator;145,5138
      typedef _Traits					traits_type;149,5234
      typedef typename _Traits::char_type	150,5273
      typedef _Allocator				allocator_type;151,5328
      typedef typename _Base::size_type	152,5372
      typedef typename _Base::difference_type	153,5425
      typedef typename _Base::reference	154,5489
      typedef typename _Base::const_reference	155,5542
      typedef typename _Base::pointer	156,5606
      typedef typename _Base::const_pointer	157,5655
	typename _Base::iterator, basic_string>		iterator;160,5759
	typename _Base::const_iterator, basic_string>	const_iterator;162,5854
      typedef std::reverse_iterator<iterator>		reverse_iterator;164,5918
      typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;165,5983
      operator=(operator=248,8517
      operator=(operator=257,8686
      operator=(operator=266,8845
      operator+=(operator+=407,12130
      operator+=(operator+=415,12281
      operator+=(operator+=424,12452
      operator+=(operator+=433,12613
    operator+(1068,28202
    operator+(1074,28522
    operator+(1083,28856
    operator+(1089,29139
    operator+(1098,29473
    operator==(operator==1104,29718
    operator==(operator==1110,29984
    operator==(operator==1119,30254
    operator!=(operator!=1128,30524
    operator!=(operator!=1134,30790
    operator!=(operator!=1143,31060
    operator<(1152,31330
    operator<(1158,31593
    operator<(1167,31860
    operator<=(operator<=1176,32127
    operator<=(operator<=1182,32393
    operator<=(operator<=1191,32663
    operator>=(operator>=1200,32933
    operator>=(operator>=1206,33199
    operator>=(operator>=1215,33469
    operator>(1224,33739
    operator>(1230,34002
    operator>(1239,34269
    operator<<(1255,34794
    operator>>(1261,35064
  typedef basic_string<char>    string;1292,36092
  typedef basic_string<wchar_t> wstring;1294,36133
  typedef basic_string<char8_t> u8string;1298,36232
  typedef basic_string<char16_t> u16string;1303,36339
  typedef basic_string<char32_t> u32string;1306,36414
    struct _Insert_range_from_self_is_safe<_Insert_range_from_self_is_safe1310,36533
      { enum { __value 1312,36640
namespace std _GLIBCXX_VISIBILITY(1317,36729
    struct hash<hash1323,36898
    struct __is_fast_hash<__is_fast_hash1328,37032
#undef _GLIBCXX_INSERT_RETURNS_ITERATOR1336,37216
#undef _GLIBCXX_INSERT_RETURNS_ITERATOR_ONLY1337,37256

/usr/include/c++/13/debug/unordered_map,2954
#define _GLIBCXX_DEBUG_UNORDERED_MAP 30,1254
namespace std _GLIBCXX_VISIBILITY(38,1415
namespace std _GLIBCXX_VISIBILITY(54,1938
					    _Pred, _Alloc>		_Base;70,2576
		   _Alloc, __gnu_debug::_Safe_unordered_container>	_Safe;72,2666
      typedef typename _Base::const_iterator	73,2726
      typedef typename _Base::iterator	74,2793
      typedef typename _Base::const_local_iterator75,2849
      typedef typename _Base::local_iterator	77,2934
      struct _Base_ref85,3274
	_Base_ref(87,3305
	const _Base& _M_ref;89,3353
      typedef typename _Base::size_type	93,3397
      typedef typename _Base::hasher	94,3450
      typedef typename _Base::key_equal	95,3497
      typedef typename _Base::allocator_type	96,3550
      typedef typename _Base::key_type	98,3613
      typedef typename _Base::value_type	99,3664
      typedef typename _Base::mapped_type	100,3718
      typedef typename _Base::pointer	102,3775
      typedef typename _Base::const_pointer	103,3824
      typedef typename _Base::reference	104,3884
      typedef typename _Base::const_reference	105,3937
	_Base_iterator, unordered_map>			iterator;107,4044
	_Base_const_iterator, unordered_map>		const_iterator;109,4131
	_Base_local_iterator, unordered_map>		local_iterator;111,4235
	_Base_const_local_iterator, unordered_map>	const_local_iterator;113,4339
      typedef typename _Base::difference_type	114,4405
      operator=(operator=211,7336
    operator==(operator==855,25352
    operator!=(operator!=863,25696
						 _Pred, _Alloc>		_Base;881,26472
	_Alloc, __gnu_debug::_Safe_unordered_container>			_Safe;883,26565
      typedef typename _Base::const_iterator	884,26623
      typedef typename _Base::iterator	885,26693
      typedef typename _Base::const_local_iterator 886,26752
      typedef typename _Base::local_iterator	887,26831
      struct _Base_ref895,27174
	_Base_ref(897,27205
	const _Base& _M_ref;899,27253
      typedef typename _Base::size_type	903,27297
      typedef typename _Base::hasher	904,27350
      typedef typename _Base::key_equal	905,27397
      typedef typename _Base::allocator_type	906,27450
      typedef typename _Base::key_type	908,27513
      typedef typename _Base::value_type	909,27564
      typedef typename _Base::mapped_type	910,27618
      typedef typename _Base::pointer	912,27675
      typedef typename _Base::const_pointer	913,27724
      typedef typename _Base::reference	914,27784
      typedef typename _Base::const_reference	915,27837
	_Base_iterator, unordered_multimap>		iterator;917,27944
	_Base_const_iterator, unordered_multimap>	const_iterator;919,28035
	_Base_local_iterator, unordered_multimap>	local_iterator;921,28143
	_Base_const_local_iterator, unordered_multimap>	const_local_iterator;923,28251
      typedef typename _Base::difference_type	924,28322
      operator=(operator=1018,31349
    operator==(operator==1572,46984
    operator!=(operator!=1580,47338

/usr/include/c++/13/debug/unordered_set,2877
#define _GLIBCXX_DEBUG_UNORDERED_SET 30,1254
namespace std _GLIBCXX_VISIBILITY(38,1415
namespace std _GLIBCXX_VISIBILITY(51,1901
	_Value, _Hash, _Pred, _Alloc>					_Base;67,2487
	unordered_set, _Alloc, __gnu_debug::_Safe_unordered_container>	_Safe;69,2573
      typedef typename _Base::const_iterator	71,2645
      typedef typename _Base::iterator	72,2715
      typedef typename _Base::const_local_iterator 73,2774
      typedef typename _Base::local_iterator	74,2853
      struct _Base_ref82,3196
	_Base_ref(84,3227
	const _Base& _M_ref;86,3275
      typedef typename _Base::size_type	90,3319
      typedef typename _Base::difference_type	91,3372
      typedef typename _Base::hasher	92,3436
      typedef typename _Base::key_equal	93,3483
      typedef typename _Base::allocator_type	94,3536
      typedef typename _Base::key_type	96,3599
      typedef typename _Base::value_type	97,3650
      typedef typename _Base::pointer	99,3705
      typedef typename _Base::const_pointer	100,3754
      typedef typename _Base::reference	101,3814
      typedef typename _Base::const_reference	102,3867
	_Base_iterator, unordered_set>			iterator;104,3974
	_Base_const_iterator, unordered_set>		const_iterator;106,4061
	_Base_local_iterator, unordered_set>		local_iterator;108,4165
	_Base_const_local_iterator, unordered_set>	const_local_iterator;110,4269
      operator=(operator=204,7182
    operator==(operator==723,21192
    operator!=(operator!=730,21514
	_Value, _Hash, _Pred, _Alloc>				_Base;747,22233
	_Alloc, __gnu_debug::_Safe_unordered_container>		_Safe;749,22337
      typedef typename _Base::const_iterator	750,22394
      typedef typename _Base::iterator	751,22461
      typedef typename _Base::const_local_iterator752,22517
      typedef typename _Base::local_iterator	754,22602
      struct _Base_ref762,22942
	_Base_ref(764,22973
	const _Base& _M_ref;766,23021
      typedef typename _Base::size_type	770,23065
      typedef typename _Base::difference_type	771,23118
      typedef typename _Base::hasher	772,23182
      typedef typename _Base::key_equal	773,23229
      typedef typename _Base::allocator_type	774,23282
      typedef typename _Base::key_type	776,23345
      typedef typename _Base::value_type	777,23396
      typedef typename _Base::pointer	779,23451
      typedef typename _Base::const_pointer	780,23500
      typedef typename _Base::reference	781,23560
      typedef typename _Base::const_reference	782,23613
	_Base_iterator, unordered_multiset>		iterator;784,23720
	_Base_const_iterator, unordered_multiset>	const_iterator;786,23811
	_Base_local_iterator, unordered_multiset>	local_iterator;788,23919
	_Base_const_local_iterator, unordered_multiset>	const_local_iterator;790,24027
      operator=(operator=884,27061
    operator==(operator==1400,40907
    operator!=(operator!=1407,41239

/usr/include/c++/13/debug/vector,3127
#define _GLIBCXX_DEBUG_VECTOR 30,1214
namespace std _GLIBCXX_VISIBILITY(35,1302
    class _Safe_vector54,1910
      typedef typename _BaseSequence::size_type size_type;56,1939
      _M_seq(59,2026
      _Safe_vector(62,2116
      _Safe_vector(66,2228
      _Safe_vector(70,2359
      operator=(operator=75,2473
      _Safe_vector(82,2621
      operator=(operator=87,2750
      size_type _M_guaranteed_capacity;95,2901
      _M_requires_reallocation(98,2953
      _M_update_guaranteed_capacity(102,3093
namespace std _GLIBCXX_VISIBILITY(110,3267
namespace __debug112,3312
  template<typename _Tp,115,3400
	vector<_Tp, _Allocator>, _Allocator,119,3533
      public _GLIBCXX_STD_C::vector<_GLIBCXX_STD_C::vector120,3601
      public __gnu_debug::_Safe_vector<__gnu_debug::_Safe_vector121,3655
      typedef _GLIBCXX_STD_C::vector<_Tp, _Allocator>		_Base;125,3770
	vector, _Allocator, __gnu_debug::_Safe_sequence>	_Safe;127,3876
      typedef __gnu_debug::_Safe_vector<vector, _Base>		_Safe_vector;128,3933
      typedef typename _Base::iterator	130,4004
      typedef typename _Base::const_iterator	131,4060
      typedef __gnu_debug::_Equal_to<_Base_const_iterator> _Equal;132,4127
      struct _Base_ref140,4485
	_Base_ref(142,4516
	const _Base& _M_ref;144,4564
      typedef typename _Base::reference	148,4608
      typedef typename _Base::const_reference	149,4661
	_Base_iterator, vector>				iterator;152,4769
	_Base_const_iterator, vector>			const_iterator;154,4850
      typedef typename _Base::size_type	156,4900
      typedef typename _Base::difference_type	157,4953
      typedef _Tp					value_type;159,5018
      typedef _Allocator				allocator_type;160,5052
      typedef typename _Base::pointer	161,5096
      typedef typename _Base::const_pointer	162,5145
      typedef std::reverse_iterator<iterator>		reverse_iterator;163,5205
      typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;164,5270
      operator=(operator=245,7477
	typedef __gnu_debug::_After_nth_from<_Base_const_iterator> _After_nth;743,20581
  template<typename _Tp,748,20727
    operator==(operator==750,20785
  template<typename _Tp,755,20963
    operator<=>(operator<=>757,21048
  template<typename _Tp,760,21182
    operator!=(operator!=762,21240
  template<typename _Tp,766,21383
    operator<(768,21441
  template<typename _Tp,772,21581
    operator<=(operator<=774,21639
  template<typename _Tp,778,21782
    operator>=(operator>=780,21840
  template<typename _Tp,784,21983
    operator>(786,22041
  template<typename _Tp,791,22212
    swap(793,22270
  template<typename _InputIterator,798,22454
  template<typename _Tp,806,22814
    struct hash<hash820,23192
      operator()(operator()824,23322
  namespace __detail::__variant830,23511
    template<typename _Tp,836,23759
      struct _Never_valueless_alt<_Never_valueless_alt837,23803
namespace __gnu_debug846,24054
  template<typename _Tp,848,24078
    struct _Is_contiguous_sequence<_Is_contiguous_sequence849,24120
    struct _Is_contiguous_sequence<_Is_contiguous_sequence854,24252

/usr/include/c++/13/decimal/decimal,1899
#define _GLIBCXX_DECIMAL 32,1234
namespace std _GLIBCXX_VISIBILITY(43,1472
#define _DECLARE_DECIMAL_BINARY_OP_WITH_DEC(111,3992
#define _DECLARE_DECIMAL_BINARY_OP_WITH_INT(113,4100
#undef _DECLARE_DECIMAL_BINARY_OP_WITH_DEC179,8122
#undef _DECLARE_DECIMAL_BINARY_OP_WITH_INT180,8165
#define _DECLARE_DECIMAL_COMPARISON(183,8243
#undef _DECLARE_DECIMAL_COMPARISON224,9916
    typedef float __decfloat32 230,10014
#define _DECLARE_DECIMAL32_COMPOUND_ASSIGNMENT(287,11561
#undef _DECLARE_DECIMAL32_COMPOUND_ASSIGNMENT302,12247
  class decimal64313,12479
    typedef float __decfloat64 316,12511
    decimal64(319,12610
	     decimal64(322,12706
    explicit decimal64(323,12738
    explicit decimal64(324,12779
    explicit decimal64(325,12830
    explicit decimal64(326,12882
    decimal64(329,12987
    decimal64(330,13029
    decimal64(331,13079
    decimal64(332,13122
    decimal64(333,13172
    decimal64(334,13219
    decimal64(337,13342
    explicit operator long long(342,13498
#define _DECLARE_DECIMAL64_COMPOUND_ASSIGNMENT(373,14045
#undef _DECLARE_DECIMAL64_COMPOUND_ASSIGNMENT388,14731
    __decfloat64 __getval(394,14824
    void __setval(395,14874
  class decimal128399,14964
    typedef float __decfloat128 402,14997
    decimal128(405,15097
	     decimal128(408,15194
	     decimal128(409,15227
    explicit decimal128(410,15260
    explicit decimal128(411,15312
    explicit decimal128(412,15365
    decimal128(416,15471
    decimal128(417,15514
    decimal128(418,15564
    decimal128(419,15607
    decimal128(420,15658
    decimal128(421,15706
    decimal128(424,15830
    explicit operator long long(429,15987
#define _DECLARE_DECIMAL128_COMPOUND_ASSIGNMENT(460,16542
#undef _DECLARE_DECIMAL128_COMPOUND_ASSIGNMENT475,17241
    __decfloat128 __getval(481,17336
    void __setval(482,17387
#define _GLIBCXX_USE_DECIMAL_ 485,17447

/usr/include/c++/13/decimal/decimal.h,1383
#define _GLIBCXX_DECIMAL_IMPL 34,1336
namespace std _GLIBCXX_VISIBILITY(38,1396
#define _DEFINE_DECIMAL_COMPOUND_ASSIGNMENT_DEC(55,2053
#define _DEFINE_DECIMAL_COMPOUND_ASSIGNMENT_INT(62,2277
#define _DEFINE_DECIMAL_COMPOUND_ASSIGNMENTS(69,2491
#undef _DEFINE_DECIMAL_COMPOUND_ASSIGNMENT_DEC95,3907
#undef _DEFINE_DECIMAL_COMPOUND_ASSIGNMENT_INT96,3954
#undef _DEFINE_DECIMAL_COMPOUND_ASSIGNMENTS97,4001
#define _DEFINE_DECIMAL_UNARY_OP(287,8763
#undef _DEFINE_DECIMAL_UNARY_OP302,9201
#define _DEFINE_DECIMAL_BINARY_OP_WITH_DEC(306,9294
#define _DEFINE_DECIMAL_BINARY_OP_BOTH(314,9546
#define _DEFINE_DECIMAL_BINARY_OP_LHS(322,9794
#define _DEFINE_DECIMAL_BINARY_OP_RHS(330,10027
#define _DEFINE_DECIMAL_BINARY_OP_WITH_INT(338,10260
#undef _DEFINE_DECIMAL_BINARY_OP_WITH_DEC404,14299
#undef _DEFINE_DECIMAL_BINARY_OP_BOTH405,14341
#undef _DEFINE_DECIMAL_BINARY_OP_LHS406,14379
#undef _DEFINE_DECIMAL_BINARY_OP_RHS407,14416
#undef _DEFINE_DECIMAL_BINARY_OP_WITH_INT408,14453
#define _DEFINE_DECIMAL_COMPARISON_BOTH(412,14549
#define _DEFINE_DECIMAL_COMPARISON_LHS(416,14710
#define _DEFINE_DECIMAL_COMPARISON_RHS(420,14859
#define _DEFINE_DECIMAL_COMPARISONS(424,15008
#undef _DEFINE_DECIMAL_COMPARISON_BOTH460,16739
#undef _DEFINE_DECIMAL_COMPARISON_LHS461,16778
#undef _DEFINE_DECIMAL_COMPARISON_RHS462,16816
#undef _DEFINE_DECIMAL_COMPARISONS463,16854

/usr/include/c++/13/experimental/bits/fs_dir.h,2524
#define _GLIBCXX_EXPERIMENTAL_FS_DIR_H 31,1316
namespace std _GLIBCXX_VISIBILITY(41,1535
  class file_status56,1736
    file_status(61,1803
    file_status(65,1945
    perms      permissions(74,2287
    void       type(77,2370
    void       permissions(78,2435
    file_type	_M_type;81,2520
    perms	_M_perms;82,2543
  class directory_entry87,2601
    directory_entry(91,2674
    void assign(101,3096
    replace_filename(104,3170
    const filesystem::path&  path(108,3285
    operator const operator const109,3356
    status(112,3447
    status(116,3527
    symlink_status(120,3638
    symlink_status(124,3734
    operator< 128,3854
    operator==(operator==132,3964
    operator!=(operator!=136,4075
    operator<=(operator<=140,4186
    operator> 144,4297
    operator>=(operator>=148,4407
    filesystem::path    _M_path;152,4520
  struct __directory_iterator_proxy159,4641
    __directory_iterator_proxy(170,4944
    directory_entry _M_entry;172,5024
  class directory_iterator175,5060
    typedef directory_entry        value_type;178,5101
    typedef ptrdiff_t              difference_type;179,5148
    typedef const directory_entry* pointer;180,5200
    typedef const directory_entry& reference;181,5244
    typedef input_iterator_tag     iterator_category;182,5290
    directory_iterator(187,5395
    directory_iterator(190,5504
    directory_iterator(193,5628
    directory_iterator(196,5761
    const directory_entry* operator->(214,6322
    __directory_iterator_proxy operator++(218,6495
    std::shared_ptr<_Dir> _M_dir;234,6879
  operator==(operator==246,7126
  operator!=(operator!=253,7331
  class recursive_directory_iterator256,7443
    typedef directory_entry        value_type;259,7494
    typedef ptrdiff_t              difference_type;260,7541
    typedef const directory_entry* pointer;261,7593
    typedef const directory_entry& reference;262,7637
    typedef input_iterator_tag     iterator_category;263,7683
    recursive_directory_iterator(268,7798
    recursive_directory_iterator(271,7927
    recursive_directory_iterator(274,8071
    recursive_directory_iterator(279,8306
    directory_options  options(290,8683
    bool               recursion_pending(292,8783
    const directory_entry* operator->(295,8902
    __directory_iterator_proxy operator++(306,9305
    void disable_recursion_pending(316,9490
    std::shared_ptr<_Dir_stack> _M_dirs;326,9800
  operator==(operator==340,10172
  operator!=(operator!=348,10414

/usr/include/c++/13/experimental/bits/fs_fwd.h,2549
#define _GLIBCXX_EXPERIMENTAL_FS_FWD_H 31,1309
namespace std _GLIBCXX_VISIBILITY(41,1486
  struct space_info81,2399
    uintmax_t capacity;83,2423
    uintmax_t free;84,2447
    uintmax_t available;85,2467
  enum class file_type 89,2552
      none 90,2591
      none = 0, not_found 90,2591
      none = 0, not_found = -1, regular 90,2591
      none = 0, not_found = -1, regular = 1, directory 90,2591
      none = 0, not_found = -1, regular = 1, directory = 2, symlink 90,2591
      block 91,2664
      block = 4, character 91,2664
      block = 4, character = 5, fifo 91,2664
      block = 4, character = 5, fifo = 6, socket 91,2664
      block = 4, character = 5, fifo = 6, socket = 7, unknown 91,2664
  enum class copy_options 95,2797
      none 96,2842
      skip_existing 97,2858
      skip_existing = 1, overwrite_existing 97,2858
      skip_existing = 1, overwrite_existing = 2, update_existing 97,2858
      recursive 98,2928
      copy_symlinks 99,2949
      copy_symlinks = 16, skip_symlinks 99,2949
      directories_only 100,2995
      directories_only = 64, create_symlinks 100,2995
      directories_only = 64, create_symlinks = 128, create_hard_links 100,2995
  operator|(114,3396
  operator^(122,3653
  operator~(130,3910
  operator&=(operator&=137,4118
  operator|=(operator|=141,4231
  operator^=(operator^=145,4344
  enum class perms 150,4499
      none	151,4531
      owner_read	152,4549
      owner_write	153,4575
      owner_exec	154,4602
      owner_all	155,4628
      group_read	156,4654
      group_write	157,4680
      group_exec	158,4707
      group_all	159,4733
      others_read	160,4759
      others_write	161,4786
      others_exec	162,4814
      others_all	163,4841
      all	164,4867
      set_uid	165,4887
      set_gid	166,4911
      sticky_bit	167,4935
      mask	168,4961
      unknown	169,4982
      add_perms	170,5008
      remove_perms	171,5036
      symlink_nofollow	172,5066
  operator&(178,5184
  operator|(186,5406
  operator^(194,5628
  operator~(202,5850
  operator&=(operator&=209,6030
  operator|=(operator|=213,6122
  operator^=(operator^=217,6214
  enum class directory_options 222,6350
      none 223,6399
      none = 0, follow_directory_symlink 223,6399
      none = 0, follow_directory_symlink = 1, skip_permission_denied 223,6399
  operator&(229,6550
  operator|(237,6832
  operator^(245,7114
  operator~(253,7396
  operator&=(operator&=260,7624
  operator|=(operator|=264,7752
  operator^=(operator^=268,7880

/usr/include/c++/13/experimental/bits/fs_ops.h,91
#define _GLIBCXX_EXPERIMENTAL_FS_OPS_H 31,1320
namespace std _GLIBCXX_VISIBILITY(39,1448

/usr/include/c++/13/experimental/bits/fs_path.h,8894
#define _GLIBCXX_EXPERIMENTAL_FS_PATH_H 31,1310
# define _GLIBCXX_FILESYSTEM_IS_WINDOWS 52,1767
namespace std _GLIBCXX_VISIBILITY(56,1839
namespace __detail75,2186
  template<typename _CharT,81,2255
	      is_same<is_same85,2401
	      is_same<is_same87,2459
	      is_same<is_same89,2496
	      is_same<is_same90,2527
  template<typename _Iter,92,2560
	       std::is_base_of<std::is_base_of96,2742
  template<typename _CharT,103,2942
  template<typename _CharT, typename _Traits,103,2942
  template<typename _CharT,108,3140
  template<typename _Tp1,117,3397
    : __is_path_iter_src<__is_path_iter_src122,3545
    : decltype(127,3663
  template<typename _Tp1,130,3738
			    __not_<__not_135,3995
			    __constructible_from<__constructible_from136,4031
			    __constructible_from<_Tp1, _Tp2>>::value,value136,4031
		     path>::type;type137,4080
    _S_range_begin(141,4149
  struct __nul_terminated 143,4206
    _S_range_end(147,4295
  template<typename _CharT,149,4337
  template<typename _CharT, typename _Traits,149,4337
    _S_range_begin(151,4425
  template<typename _CharT,154,4526
  template<typename _CharT, typename _Traits,154,4526
    _S_range_end(156,4614
  template<typename _CharT,160,4755
    _S_range_begin(162,4826
  template<typename _CharT,165,4924
    _S_range_end(167,4995
  template<typename _Tp,171,5113
      std::is_same<_UnqualVal, char>::value,value176,5400
      _UnqualVal>::type;type177,5445
  template<typename _Tp,179,5471
	,std::is_same<std::is_same187,5842
      >::value,value189,5885
      >::value, _UnqualVal>::type;type189,5885
  class path201,6092
    typedef wchar_t				value_type;205,6157
    static constexpr value_type			preferred_separator 206,6192
    typedef char				value_type;208,6261
    static constexpr value_type			preferred_separator 209,6293
    typedef std::basic_string<value_type>	string_type;211,6361
    template<typename _Source,221,6568
	     typename _Require 222,6599
    template<typename _InputIterator,228,6828
	     typename _Require 229,6866
      path(230,6941
    template<typename _Source,234,7077
	     typename _Require 235,7108
	     typename _Require2 236,7160
    template<typename _InputIterator,242,7434
	     typename _Require 243,7472
	     typename _Require2 244,7547
      operator=(operator=260,8055
      assign(265,8201
      __detail::_Path<__detail::_Path269,8319
      assign(270,8374
    path& operator/=(operator/=275,8499
      operator/=(operator/=279,8640
      append(284,8781
      __detail::_Path<__detail::_Path291,8983
      append(292,9038
      operator+=(operator+=307,9501
      __detail::_Path<__detail::_Path310,9593
      concat(315,9728
      __detail::_Path<__detail::_Path322,9912
      concat(323,9967
    void clear(328,10101
    const string_type&  native(339,10419
    const value_type*   c_str(340,10491
    operator string_type(operator string_type341,10570
    template<typename _CharT,343,10628
    template<typename _CharT, typename _Traits 343,10628
	     typename _Allocator 344,10703
      std::basic_string<_CharT, _Traits,345,10755
    template<typename _CharT,362,11259
    template<typename _CharT, typename _Traits 362,11259
	     typename _Allocator 363,11334
      std::basic_string<_CharT, _Traits,364,11386
    _GLIBCXX_NODISCARD bool empty(402,12437
    bool is_relative(412,12811
    typedef iterator const_iterator;416,12905
    template<typename _InputIterator,423,13107
	     typename _Traits 424,13145
	     typename _CharT425,13208
    enum class _Type 438,13580
	_Multi,439,13619
	_Multi, _Root_name,439,13619
	_Multi, _Root_name, _Root_dir,439,13619
	_Multi, _Root_name, _Root_dir, _Filename439,13619
    enum class _Split 444,13713
    enum class _Split { _Stem,444,13713
    enum class _Split { _Stem, _Extension 444,13713
    path& _M_append(446,13759
    pair<pair456,14051
    _S_convert(462,14189
    _S_convert(466,14310
      _S_convert(471,14468
      _S_convert(480,14753
    _S_convert_loc(491,15075
      _S_convert_loc(499,15326
      _S_convert_loc(507,15597
    static bool _S_is_dir_sep(514,15839
    string_type _M_pathname;529,16213
    using _List 532,16261
    _List _M_cmpts;533,16310
    _Type _M_type 534,16371
  inline void swap(540,16497
  inline bool operator<=(operator<=549,16774
  inline bool operator>(553,16898
  inline bool operator>=(operator>=557,17018
  inline bool operator!=(operator!=564,17236
  inline path operator/(568,17374
  template<typename _CharT,576,17546
    operator<<(578,17628
  template<typename _CharT,588,17965
    operator>>(590,18047
    __u8path(604,18518
    __u8path(621,19167
  template<typename _InputIterator,628,19359
	   typename _Require 629,19395
  __u8path(645,19891
    __u8path(652,20111
    inline __enable_if_t<!is_convertible<const _Source&, string>::value,value659,20301
    __u8path(660,20380
    __u8path(669,20641
  template<typename _Source,676,20804
	   typename _Require 677,20833
  class filesystem_error 693,21220
    filesystem_error(696,21286
    filesystem_error(699,21392
    filesystem_error(703,21539
    const path& path1(710,21750
    const path& path2(711,21810
    const char* what(712,21870
    path _M_path1;717,21980
    path _M_path2;718,21999
    std::string _M_what 719,22018
  struct path::_Cmpt 723,22090
    _Cmpt(725,22122
    _Cmpt(728,22228
    size_t _M_pos;730,22258
    struct path::_Cvt<path::_Cvt735,22346
      using __codecvt_utf8_to_wide 740,22623
	_S_convert(750,22953
    struct path::_Cvt756,23132
      using __codecvt_utf8_to_wchar761,23374
			  std::codecvt_utf8<std::codecvt_utf8763,23466
      struct __codecvt_utf8_to_utfNN 768,23737
      using __codecvt_utf8_to_wide773,23972
	= __conditional_t<is_same<_CharT, wchar_t>::value,value774,24007
			  __codecvt_utf8_to_wchar,775,24059
      _S_wconvert(781,24212
      _S_wconvert(793,24548
      _S_wconvert(805,24937
      _S_convert(824,25544
      _S_convert(830,25701
      _S_convert(850,26218
	_S_convert(858,26418
      template<typename _Iter,864,26590
	_S_convert(866,26657
  class path::iterator873,26901
    using difference_type	876,26938
    using value_type	877,26982
    using reference	878,27012
    using pointer	879,27048
    using iterator_category	880,27082
    iterator(882,27146
    pointer   operator->(888,27353
    iterator  operator++(892,27471
    iterator  operator--(897,27600
    operator==(operator==901,27707
    operator!=(operator!=905,27833
    iterator(911,27979
    iterator(915,28117
    const path* 		_M_path;921,28282
    path::_List::const_iterator _M_cur;922,28309
    bool			_M_at_end;923,28349
  path::path(933,28512
  path::path(940,28673
  path::path(945,28781
  path::operator=(operator=959,29070
  path::operator=(operator=969,29281
  path::assign(assign973,29387
  path::operator+=(operator+=977,29490
  path::operator+=(operator+=983,29587
  path::operator+=(operator+=991,29718
  path::operator+=(operator+=999,29848
  path::operator+=(operator+=1008,29998
    path::operator+=(operator+=1018,30230
  path::make_preferred(make_preferred1025,30376
  inline void path::swap(swap1034,30561
  template<typename _CharT,1041,30732
  template<typename _CharT, typename _Traits,1041,30732
    path::string(string1043,30857
	    operator()(operator()1066,31715
	    operator()(operator()1070,31833
  path::string(string1114,33173
  path::wstring(wstring1118,33271
  path::u8string(u8string1123,33384
  path::u8string(u8string1126,33466
  path::u16string(u16string1146,34110
  path::u32string(u32string1149,34192
  template<typename _CharT,1151,34250
  template<typename _CharT, typename _Traits,1151,34250
    path::generic_string(generic_string1153,34375
  path::generic_string(generic_string1181,35142
  path::generic_wstring(generic_wstring1185,35256
  path::generic_u8string(generic_u8string1190,35385
  path::generic_u8string(generic_u8string1193,35483
  path::generic_u16string(generic_u16string1197,35583
  path::generic_u32string(generic_u32string1200,35681
  path::compare(compare1203,35768
  path::compare(compare1206,35859
  path::compare(compare1210,35976
  path::filename(filename1215,36088
  path::stem(stem1218,36168
  path::extension(extension1227,36354
  path::has_stem(has_stem1236,36558
  path::has_extension(has_extension1243,36683
  path::is_absolute(is_absolute1250,36829
  path::begin(begin1260,37026
  path::end(end1268,37205
  path::iterator::operator++(operator++1276,37380
  path::iterator::operator--(operator--1293,37713
  path::iterator::operator*(operator*1310,38058
  path::iterator::_M_equals(_M_equals1322,38319
  inline bool operator<(1337,38887
  inline bool operator==(operator==1340,38998

/usr/include/c++/13/experimental/bits/lfts_config.h,43
namespace std _GLIBCXX_VISIBILITY(44,1715

/usr/include/c++/13/experimental/bits/net.h,1636
#define _GLIBCXX_EXPERIMENTAL_NET_H 31,1306
namespace std _GLIBCXX_VISIBILITY(45,1534
  struct __throw_on_error76,2357
    __throw_on_error(79,2400
    ~__throw_on_error(81,2461
    const char* _M_msg;92,2765
    error_code _M_ec;93,2789
    struct __sockopt_base<__sockopt_base142,4039
      __sockopt_base(147,4156
      bool value(151,4251
      explicit operator bool(operator bool152,4312
      bool operator!(153,4378
    struct __sockopt_base<__sockopt_base158,4526
      using __sockopt_base<__sockopt_base160,4592
      using __sockopt_base<int, false>::__sockopt_base;__sockopt_base160,4592
      int value(162,4649
      operator=(operator=171,4887
namespace __detail188,5283
      && requires(200,5685
      && derived_from<derived_from236,6914
      && same_as<same_as245,7206
  template<typename _Tp,249,7344
    -> enable_if_t<enable_if_t256,7534
      is_same<decltype(__a->data(data259,7700
      is_same<decltype(__b->data(data260,7751
      is_same<decltype(__a->size(size261,7796
      is_same<decltype(__a->capacity(capacity262,7842
      >::value,value263,7891
    __void_t<__void_t264,7907
    : true_type269,8117
  template<typename _Tp,273,8208
    -> enable_if_t<enable_if_t280,8378
      is_same<decltype(__a->type(type284,8554
      is_same<decltype(__a->protocol(protocol285,8597
    : true_type290,8760
  template<typename _Tp,294,8829
    : __and_<__and_300,9028
	     is_convertible<typename _Tp::socket*, basic_socket<_Tp>*>>::typetype301,9106
  template<typename _Tp,305,9228
    -> enable_if_t<enable_if_t312,9405
    : true_type 323,9832

/usr/include/c++/13/experimental/bits/numeric_traits.h,1077
  struct __max_exponent_impl 92,2993
  struct __max_exponent10_impl 107,3386
  struct __min_exponent_impl 122,3796
  struct __min_exponent10_impl 137,4189
  struct __value_exists 163,4917
  struct __denorm_min_impl 198,5955
  struct __epsilon_impl 219,6476
  struct __infinity_impl 276,8070
  struct __quiet_NaN_impl 297,8558
  struct __signaling_NaN_impl 354,10345
  struct __denorm_min 376,10921
  struct __epsilon 379,11010
  struct __finite_max 382,11093
  struct __finite_min 385,11182
  struct __infinity 388,11271
  struct __norm_min 391,11356
  struct __quiet_NaN 394,11441
  struct __reciprocal_overflow_threshold397,11528
  struct __round_error 401,11657
  struct __signaling_NaN 404,11748
  struct __digits 439,12850
  struct __digits10 442,12931
  struct __max_digits10 445,13016
  struct __max_exponent 448,13109
  struct __max_exponent10 451,13202
  struct __min_exponent 454,13299
  struct __min_exponent10 457,13392
  struct __radix 460,13489
  struct __has_iec559_storage_format 489,14403
  struct __has_iec559_behavior 511,15092

/usr/include/c++/13/experimental/bits/shared_ptr.h,3763
#define _GLIBCXX_EXPERIMENTAL_SHARED_PTR_H 31,1332
namespace std _GLIBCXX_VISIBILITY(40,1488
    class shared_ptr 63,2072
      template<typename _Tp1,75,2422
      template<typename _Tp1,79,2548
      template<typename _Tp1, typename _Del,79,2548
	       typename _Ptr = typename unique_ptr<_Tp1, _Del>::pointer,pointer80,2593
	  && experimental::is_convertible_v<experimental::is_convertible_v84,2759
      template<typename _Tp1,92,2934
      template<typename _Tp1,97,3087
      template<typename _Tp1, typename _Deleter,97,3087
      template<typename _Tp1,102,3269
      template<typename _Tp1, typename _Deleter,102,3269
      template<typename _Tp1, typename _Deleter, typename _Alloc,102,3269
	shared_ptr(109,3527
      template<typename _Deleter,112,3597
	shared_ptr(113,3648
	shared_ptr(117,3765
      shared_ptr(120,3863
      template<typename _Tp1,123,3936
      template<typename _Tp1,142,4542
      template<typename _Tp1,149,4777
      template<typename _Tp1, typename _Del,149,4777
	shared_ptr(151,4870
      constexpr shared_ptr(160,5221
	_Compatible<_Compatible170,5471
	operator=(operator=171,5503
      operator=(operator=178,5625
	_Compatible<_Compatible185,5771
	operator=(operator=186,5803
	_Compatible<_Compatible196,6058
	operator=(operator=197,6090
      template <typename _Tp1,205,6235
	_UniqCompatible<_UniqCompatible206,6281
	operator=(operator=207,6323
    private:private218,6542
	shared_ptr(220,6606
      template<typename _Tp1,225,6798
      template<typename _Tp1, typename _Alloc,225,6798
      shared_ptr(229,6947
      template<typename _Yp,239,7285
	_M_enable_shared_from_this_with(249,7617
	_M_enable_shared_from_this_with(260,7923
    bool operator==(operator==266,8053
    operator==(operator==272,8227
    operator==(operator==277,8353
    operator!=(operator!=282,8495
    operator!=(operator!=288,8666
    operator!=(operator!=293,8797
    operator<(298,8944
    operator<(309,9326
    operator<(317,9562
    operator<=(operator<=325,9814
    operator<=(operator<=331,9975
    operator<=(operator<=336,10113
    operator>(341,10267
    operator>(347,10425
    operator>(355,10661
    operator>=(operator>=363,10913
    operator>=(operator>=369,11074
    operator>=(operator>=374,11212
    class weak_ptr 420,12697
      template<typename _Tp1,422,12747
       template<typename _Tp1,430,12975
       template<typename _Tp1,436,13164
       template<typename _Tp1,442,13346
	 _Compatible<_Compatible450,13592
	 operator=(operator=451,13623
	 _Compatible<_Compatible458,13767
	 operator=(operator=459,13798
	 _Compatible<_Compatible469,14015
	 operator=(operator=470,14046
       lock(477,14188
    operator<<(498,14773
    struct owner_less<owner_less509,15065
    struct owner_less<owner_less515,15256
    class owner_less<owner_less520,15376
      template<typename _Tp,522,15409
        operator()(operator()524,15465
      template<typename _Tp,528,15616
        operator()(operator()530,15672
      template<typename _Tp,534,15821
        operator()(operator()536,15877
      template<typename _Tp,540,16026
        operator()(operator()542,16082
      typedef void is_transparent;546,16229
    class enable_shared_from_this620,18698
      constexpr enable_shared_from_this(623,18753
      enable_shared_from_this(625,18809
      operator=(operator=628,18916
      ~enable_shared_from_this(631,18998
      shared_from_this(635,19070
      shared_from_this(639,19178
      weak_from_this(643,19290
      weak_from_this(647,19380
	_M_weak_assign(653,19499
      mutable weak_ptr<_Tp> _M_weak_this;664,19863
    struct hash<hash671,20044
      operator()(operator()675,20174

/usr/include/c++/13/experimental/bits/simd.h,42168
#define _GLIBCXX_EXPERIMENTAL_SIMD_H26,1134
using __m128 75,2369
using __m128d 76,2425
using __m128i 77,2482
using __m256 78,2542
using __m256d 79,2598
using __m256i 80,2655
using __m512 81,2715
using __m512d 82,2771
using __m512i 83,2828
template <typename _Tp,152,4589
template <typename _Tp,155,4643
template <typename _Tp,158,4702
struct element_aligned_tag163,4793
  template <typename _Tp,165,4822
  template <typename _Tp, typename _Up 165,4822
  template <typename _Tp,168,4947
    _S_apply(170,5037
struct vector_aligned_tag174,5088
  template <typename _Tp,176,5116
  template <typename _Tp, typename _Up 176,5116
  template <typename _Tp,180,5277
    _S_apply(182,5367
template <size_t _Np> struct overaligned_tag186,5487
  template <typename _Tp,188,5534
  template <typename _Tp, typename _Up 188,5534
  template <typename _Tp,191,5650
    _S_apply(193,5740
inline constexpr element_aligned_tag element_aligned 197,5841
inline constexpr vector_aligned_tag vector_aligned 199,5901
  inline constexpr overaligned_tag<_Np> overaligned 202,5981
  using _SizeConstant 206,6069
constexpr inline bool __have_mmx 208,6159
constexpr inline bool __have_sse 209,6218
constexpr inline bool __have_sse2 210,6277
constexpr inline bool __have_sse3 211,6338
constexpr inline bool __have_ssse3 212,6399
constexpr inline bool __have_sse4_1 213,6462
constexpr inline bool __have_sse4_2 214,6527
constexpr inline bool __have_xop 215,6592
constexpr inline bool __have_avx 216,6651
constexpr inline bool __have_avx2 217,6710
constexpr inline bool __have_bmi 218,6771
constexpr inline bool __have_bmi2 219,6831
constexpr inline bool __have_lzcnt 220,6892
constexpr inline bool __have_sse4a 221,6955
constexpr inline bool __have_fma 222,7018
constexpr inline bool __have_fma4 223,7077
constexpr inline bool __have_f16c 224,7138
constexpr inline bool __have_popcnt 225,7199
constexpr inline bool __have_avx512f 226,7264
constexpr inline bool __have_avx512dq 227,7331
constexpr inline bool __have_avx512vl 228,7400
constexpr inline bool __have_avx512bw 229,7469
constexpr inline bool __have_avx512dq_vl 230,7538
constexpr inline bool __have_avx512bw_vl 231,7617
constexpr inline bool __have_avx512bitalg 232,7696
constexpr inline bool __have_avx512vbmi2 233,7773
constexpr inline bool __have_avx512vbmi 234,7848
constexpr inline bool __have_avx512ifma 235,7921
constexpr inline bool __have_avx512cd 236,7994
constexpr inline bool __have_avx512vnni 237,8063
constexpr inline bool __have_avx512vpopcntdq 238,8136
constexpr inline bool __have_avx512vp2intersect 239,8219
constexpr inline bool __have_neon 241,8309
constexpr inline bool __have_neon_a32 242,8370
constexpr inline bool __have_neon_a64 243,8439
constexpr inline bool __support_neon_float 244,8508
  true;248,8629
  false;250,8643
constexpr inline bool __have_power10vec 254,8679
constexpr inline bool __have_power10vec 256,8733
constexpr inline bool __have_power9vec 259,8814
constexpr inline bool __have_power9vec 261,8867
constexpr inline bool __have_power8vec 264,8952
constexpr inline bool __have_power8vec 266,9005
constexpr inline bool __have_power_vsx 269,9091
constexpr inline bool __have_power_vsx 271,9144
constexpr inline bool __have_power_vmx 274,9234
constexpr inline bool __have_power_vmx 276,9287
namespace __detail281,9362
  template <int int287,9627
  __handle_fpexcept_impl(296,9951
  static constexpr bool _S_handle_fpexcept 306,10153
  __floating_point_flags(309,10258
  __machine_flags(326,10636
    struct _OdrEnforcer 377,12308
    struct _MachineFlagsTemplate 381,12377
  using __odr_helper392,12929
    = conditional_t<__machine_flags() == 0, _OdrEnforcer,393,12950
		    _MachineFlagsTemplate<_MachineFlagsTemplate394,13008
  struct _Minimum396,13084
      operator()(operator()401,13184
  struct _Maximum408,13287
      operator()(operator()413,13387
template <typename _Fp,423,13573
  __execute_on_index_sequence(426,13679
  __execute_on_index_sequence(431,13854
template <size_t _Np,434,13916
  __execute_n_times(436,13993
template <typename _R,444,14166
template <typename _R, typename _Fp,444,14166
  __execute_on_index_sequence_with_return(447,14283
template <size_t _Np,450,14406
template <size_t _Np, typename _R,450,14406
  __generate_from_n_evaluations(452,14494
template <size_t... _I,460,14701
template <size_t... _I, typename _F0,460,14701
  __call_with_n_evaluations(463,14824
template <size_t _Np,466,14958
template <size_t _Np, typename _F0,466,14958
  __call_with_n_evaluations(468,15052
template <size_t _First 477,15297
template <size_t _Np,483,15553
template <size_t _Np, size_t _First 483,15553
using _UChar 496,15926
using _SChar 497,15956
using _UShort 498,15984
using _UInt 499,16016
using _ULong 500,16044
using _ULLong 501,16074
using _LLong 502,16110
template <typename _T0,506,16165
  struct __first_of_pack507,16202
  { using type 508,16227
  using __first_of_pack_t 511,16280
  using __value_type_or_identity_t524,16574
  struct __is_vectorizable 530,16725
  struct __is_vectorizable<__is_vectorizable533,16797
  inline constexpr bool __is_vectorizable_v 536,16879
template <typename _Tp,539,16991
template <typename _Tp, typename 539,16991
template <typename _Ptr,544,17160
  struct __is_possible_loadstore_conversion545,17206
  struct __is_possible_loadstore_conversion<bool, bool> : true_type 549,17339
template <typename _Ptr,552,17483
template <typename _Ptr, typename _ValueType,552,17483
	  typename 553,17529
template <typename _Tp,559,17680
template <typename _Tp, typename 559,17680
  inline constexpr bool __is_bitmask_v 563,17789
  __int_for_sizeof(577,18160
	struct _Ip603,18898
	  int _M_data[_M_data605,18913
	  operator&(608,18976
	  operator|(617,19224
	  operator^(626,19472
	  operator~(635,19720
  using __int_for_sizeof_t 649,20049
  using __int_with_sizeof_t 652,20144
  struct __is_fixed_size_abi 657,20267
  struct __is_fixed_size_abi<__is_fixed_size_abi660,20333
  inline constexpr bool __is_fixed_size_abi_v 663,20430
  __is_scalar_abi(669,20584
  __abi_bytes_impl(676,20746
  __abi_bytes_impl(681,20842
  inline constexpr int __abi_bytes_v685,20910
  __is_builtin_bitmask_abi(692,21082
  __is_sse_abi(699,21257
  __is_avx_abi(709,21476
  __is_avx512_abi(720,21717
  __is_neon_abi(730,21936
template <typename,typename738,22120
  struct __make_dependent739,22154
  { using type 740,22180
template <typename _Tp,742,22206
  using __make_dependent_t 743,22244
  __invoke_ub(751,22453
  struct __assert_unreachable764,22749
template <typename _Tp,769,22885
template <typename _Tp, typename _Ap,769,22885
template <typename _Tp, typename _Ap, size_t _Np 769,22885
template <typename _Tp,774,23033
  __size_or_zero_dispatch(776,23090
template <typename _Tp,779,23140
  inline constexpr size_t __size_or_zero_v780,23178
__div_roundup(786,23319
class _ExactBool791,23416
  const bool _M_data;793,23435
  _ExactBool(797,23502
  operator bool(operator bool802,23609
  using __may_alias 814,23900
struct _UnsupportedBase819,24041
struct _InvalidTraits837,24548
  using _IsValid 839,24572
  using _SimdBase 840,24603
  using _MaskBase 841,24641
  static constexpr size_t _S_full_size 843,24680
  static constexpr bool _S_is_partial 844,24724
  static constexpr size_t _S_simd_align 846,24772
  struct _SimdMember 848,24837
  static constexpr size_t _S_mask_align 851,24887
  struct _MaskMember 853,24952
template <typename _Tp,859,25031
template <typename _Tp, typename _Abi,859,25031
template <typename _Tp, typename _Abi, typename 859,25031
inline constexpr struct _PrivateInit 868,25261
inline constexpr struct _PrivateInit {} __private_init 868,25261
inline constexpr struct _BitsetInit 870,25323
inline constexpr struct _BitsetInit {} __bitset_init 870,25323
template <typename _From,874,25434
template <typename _From, typename _To,874,25434
template <typename _From, typename _To, bool 874,25434
template <typename _From,880,25693
  : public true_type 890,26110
  : public false_type 894,26207
  : public false_type 898,26315
template <typename _From,900,26342
  : public negation<negation902,26442
template <typename _From,906,26542
template <typename _From, typename _To,906,26542
template <typename _From, typename _To, bool 906,26542
template <typename _From,910,26755
template <typename _Tp,916,26968
template <typename _Tp,920,27092
template <typename _Tp,924,27204
template <typename _Tp,928,27333
template <typename _FromT,934,27479
template <typename _FromT, typename _FromA,934,27479
template <typename _FromT, typename _FromA, typename _ToT,934,27479
template <typename _FromT, typename _FromA, typename _ToT, typename _ToA,934,27479
	  typename 935,27553
template <typename _Tp,938,27599
      operator()(operator()943,27760
  __to_value_type_or_member_type(const _V& __x) -> decltype(951,27930
  __to_value_type_or_member_type(956,28120
  using __bool_storage_member_type_t 965,28334
template <typename _Tp,976,28727
template <typename _Tp,981,28828
template <typename _Tp,984,28893
  using __fixed_size_storage_t 985,28926
template <typename _Tp,989,29042
template <typename _Tp, size_t _Size,989,29042
template <typename _Tp, size_t _Size, typename 989,29042
  using _SimdWrapper8 993,29149
  using _SimdWrapper16 995,29233
  using _SimdWrapper32 997,29319
  using _SimdWrapper64 999,29405
  struct __is_simd_wrapper 1004,29524
template <typename _Tp,1006,29569
  struct __is_simd_wrapper<_SimdWrapper<_Tp, _Np>> : true_type 1007,29605
  inline constexpr bool __is_simd_wrapper_v 1010,29697
struct _BitOps1014,29797
  template <typename _Tp,1017,29840
    _S_bit_iteration(1019,29896
template <typename _Tp 1039,30315
  { constexpr _Tp operator()(operator()1041,30367
  struct __increment<__increment1044,30445
      operator()(operator()1048,30524
template <typename _Tp 1052,30586
  { constexpr _Tp operator()(operator()1054,30638
  struct __decrement<__decrement1057,30716
      operator()(operator()1061,30795
template <typename _From,1067,30895
template <typename _From, typename _To,1067,30895
	  typename 1068,30935
template <typename _From,1072,31077
template <typename _From, typename _To,1072,31077
	  typename _DecayedFrom 1073,31117
template <typename _Tp,1084,31534
template <typename _Tp, size_t _Bytes,1084,31534
template <typename _Tp, size_t _Bytes, typename 1084,31534
template <typename _Tp,1087,31622
  using __intrinsic_type_t 1088,31660
  using __intrinsic_type2_t 1092,31777
  using __intrinsic_type4_t 1094,31872
  using __intrinsic_type8_t 1096,31967
  using __intrinsic_type16_t 1098,32062
  using __intrinsic_type32_t 1100,32159
  using __intrinsic_type64_t 1102,32256
template <size_t _Np,1106,32353
template <size_t _Np, bool _Sanitized 1106,32353
template <size_t _Np,1109,32420
  struct __is_bitmask<_BitMask<_Np, _Sanitized>, void> : true_type 1110,32459
  using _SanitizedBitMask 1113,32553
template <size_t _Np,1115,32603
  struct _BitMask1116,32642
    static constexpr size_t _NBytes 1120,32693
    using _Tp 1122,32766
    using _Tp = conditional_t<_Np == 1, bool,1122,32766
    static constexpr int _S_array_size 1126,32919
    _Tp _M_bits[_M_bits1128,32998
    static constexpr int _S_unused_bits1130,33031
    static constexpr _Tp _S_bitmask 1133,33145
    constexpr _BitMask(1137,33262
    _BitMask(1140,33361
    template <bool _RhsSanitized,1144,33493
    template <bool _RhsSanitized, typename 1144,33493
    constexpr operator _SimdWrapper<bool, operator _SimdWrapper<bool,1149,33720
    _M_to_bits(1157,33915
    to_ullong(1165,34093
    to_ulong(1173,34265
    _M_to_bitset(1180,34400
    constexpr decltype(1186,34513
    template <size_t _Mp,1204,34958
      _M_prepend(1206,35050
    template <size_t _DropLsb,1224,35636
    template <size_t _DropLsb, size_t _NewSize 1224,35636
    all(1245,36450
    any(1264,36933
    none(1281,37344
    count(1299,37774
    set(1342,38940
      set(1362,39442
    operator~(1379,39949
    operator^(1422,41134
    operator|(1430,41304
    operator&(1438,41474
    _M_is_constprop(1447,41661
template <typename _Tp 1465,42052
  inline constexpr int __min_vector_size<__min_vector_size1470,42191
  inline constexpr int __min_vector_size<__min_vector_size1473,42261
template <typename _Tp,1478,42350
template <typename _Tp, size_t _Np,1478,42350
template <typename _Tp, size_t _Np, typename 1478,42350
  { using type 1488,42681
template <typename _Tp,1491,42751
template <typename _Tp,1508,43346
template <typename _Tp, size_t _Bytes,1508,43346
template <typename _Tp, size_t _Bytes, size_t 1508,43346
template <typename _Tp,1511,43441
template <typename _Tp,1515,43571
  using __vector_type_t 1516,43609
  using __vector_type2_t 1519,43704
  using __vector_type4_t 1521,43793
  using __vector_type8_t 1523,43882
  using __vector_type16_t 1525,43971
  using __vector_type32_t 1527,44062
  using __vector_type64_t 1529,44153
template <typename _Tp,1533,44252
template <typename _Tp, typename 1533,44252
  inline constexpr bool __is_vector_type_v 1545,44661
  using __is_intrinsic_type 1551,44826
template <typename _Tp,1553,44902
template <typename _Tp, typename 1553,44902
  inline constexpr bool __is_intrinsic_type_v 1566,45330
template <typename _Tp,1570,45439
template <typename _Tp, typename 1570,45439
    using type 1577,45652
    using value_type 1578,45674
    static constexpr int _S_full_size 1579,45746
    using _Wrapper 1580,45820
    template <typename _Up,1581,45881
    template <typename _Up, int _W 1581,45881
template <typename _Tp,1586,46025
    using type 1590,46157
    using value_type 1591,46201
    static constexpr int _S_full_size 1592,46229
    using _Wrapper 1593,46304
    static constexpr bool _S_is_partial 1594,46349
    static constexpr int _S_partial_width 1595,46414
    template <typename _Up,1596,46463
    template <typename _Up, int _W 1596,46463
template <typename _Tp,1601,46606
template <typename _Tp, typename 1601,46606
  __as_vector(1608,46818
template <size_t _Np 1622,47164
template <typename _To,1643,47692
  __intrin_bitcast(1645,47772
template <typename _To,1688,49351
template <typename _To, size_t _NN 1688,49351
template <typename _To,1698,49694
template <typename _To, size_t _NN 1698,49694
template <typename _To,1711,50145
template <typename _To, typename _Tp,1711,50145
template <typename _To, typename _Tp, typename _TVT 1711,50145
template <typename _To,1714,50246
template <typename _To, typename _Tp,1714,50246
template <typename _To, typename _Tp, typename _TVT 1714,50246
template <typename _To,1717,50352
template <typename _To, typename _Tp,1717,50352
template <typename _To, typename _Tp, typename _TVT 1717,50352
template <typename _To,1720,50468
template <typename _To, typename _Tp,1720,50468
template <typename _To, typename _Tp, typename _TVT 1720,50468
template <typename _To,1723,50604
template <typename _To, typename _Tp,1723,50604
template <typename _To, typename _Tp, typename _TVT 1723,50604
template <typename _To,1730,50853
  __bit_cast(1732,50933
template <typename _Tp,1772,52193
template <typename _Tp, typename _TVT 1772,52193
template <typename _Tp,1791,52799
  __make_vector(1793,52917
template <size_t _Np,1798,53072
template <size_t _Np, typename _Tp,1798,53072
  __vector_broadcast_impl(1800,53184
template <size_t _Np,1803,53303
  __vector_broadcast(1805,53401
  template <typename _Tp,1810,53544
  template <typename _Tp, size_t _Np,1810,53544
  template <typename _Tp, size_t _Np, typename _Gp,1810,53544
  __generate_vector_impl(1812,53672
template <typename _V,1815,53824
template <typename _V, typename _VVT 1815,53824
template <typename _Tp,1830,54365
template <typename _Tp, size_t _Np,1830,54365
  __generate_vector(1832,54477
  __xor(1842,54711
  __or(1867,55386
  __and(1892,56061
  operator()(operator()1919,56785
  operator()(operator()1923,56917
  operator()(operator()1927,57049
  operator()(operator()1931,57183
  operator()(operator()1935,57318
  operator()(operator()1939,57453
  operator()(operator()1950,57773
  operator()(operator()1961,58086
  operator()(operator()1972,58396
} _S_x86_andnot;1974,58492
  __andnot(1979,58622
template <typename _Tp,2012,59609
template <typename _Tp, typename _TVT 2012,59609
template <typename _Tp,2025,59948
template <typename _Tp, typename _TVT 2025,59948
template <typename _Tp,2077,62323
template <typename _Tp, typename _TVT 2077,62323
      _GLIBCXX_SIMD_INTRINSIC operator _To(operator _To2087,62691
template <typename _Tp,2159,65252
template <typename _Tp, typename _TVT 2159,65252
template <int _Offset,2166,65444
	  int _SplitBy,2167,65467
	  typename _Tp,2168,65484
	  typename _TVT 2169,65501
template <typename _Tp,2215,67204
	  typename _R 2216,67228
template <typename _Tp,2225,67437
	  typename _R 2226,67461
template <typename _Tp,2236,67774
	  typename _R 2237,67798
  __lo128(2251,68190
  __hi128(2256,68325
  __lo256(2266,68515
  __hi256(2274,68679
  struct _AutoCast2283,68830
    const _Tp __x;2287,68898
    template <typename _Up,2289,68918
    template <typename _Up, typename _UVT 2289,68918
      _GLIBCXX_SIMD_INTRINSIC constexpr operator _Up(operator _Up2290,68982
  __auto_bitcast(2296,69185
template <typename _Tp,2299,69239
  __auto_bitcast(2302,69370
  struct __bool_storage_member_type2312,69686
    using type 2317,69879
  struct __bool_storage_member_type<__bool_storage_member_type2322,69987
  struct __bool_storage_member_type<1> { using type 2322,69987
  struct __bool_storage_member_type<__bool_storage_member_type2325,70063
  struct __bool_storage_member_type<2> { using type 2325,70063
  struct __bool_storage_member_type<__bool_storage_member_type2328,70143
  struct __bool_storage_member_type<4> { using type 2328,70143
  struct __bool_storage_member_type<__bool_storage_member_type2331,70223
  struct __bool_storage_member_type<8> { using type 2331,70223
  struct __bool_storage_member_type<__bool_storage_member_type2334,70303
  struct __bool_storage_member_type<16> { using type 2334,70303
  struct __bool_storage_member_type<__bool_storage_member_type2337,70385
  struct __bool_storage_member_type<32> { using type 2337,70385
  struct __bool_storage_member_type<__bool_storage_member_type2340,70467
  struct __bool_storage_member_type<64> { using type 2340,70467
template <typename _Tp,2347,70690
  struct __intrinsic_type<_Tp, _Bytes, enable_if_t<__is_vectorizable_v<_Tp> && _Bytes 2348,70729
  { using type 2366,71332
  { using type 2370,71421
   using type 2376,71546
    using type 2384,71680
#define _GLIBCXX_SIMD_ARM_INTRIN(2388,71723
#undef _GLIBCXX_SIMD_ARM_INTRIN2405,72636
template <typename _Tp,2407,72669
  struct __intrinsic_type<_Tp, _Bytes, enable_if_t<__is_vectorizable_v<_Tp> && _Bytes 2408,72708
#define _GLIBCXX_SIMD_PPC_INTRIN(2431,73380
#undef _GLIBCXX_SIMD_PPC_INTRIN2452,74183
template <typename _Tp,2454,74216
  struct __intrinsic_type<_Tp, _Bytes, enable_if_t<__is_vectorizable_v<_Tp> && _Bytes 2455,74255
    using _BuiltinType 2512,75971
    using value_type 2513,76047
    static constexpr size_t _S_full_size 2515,76077
    __as_full_vector(2518,76229
    _SimdWrapper(2525,76390
    operator const operator const2528,76473
    operator _BuiltinType&(operator _BuiltinType&2532,76567
    __intrin(2536,76662
    _M_set(2549,77059
    _M_is_constprop(2558,77257
    _M_is_constprop_none_of(2562,77375
    _M_is_constprop_all_of(2575,77726
    _BuiltinType _M_data;2587,78045
template <bool _MustZeroInitPadding,2591,78101
    _SimdWrapperBase(2601,78410
    _BuiltinType _M_data;2603,78474
    _SimdWrapperBase(2611,78689
    _SimdWrapperBase(2614,78766
    _BuiltinType _M_data;2616,78830
template <typename _Tp,2621,78888
      operator _SimdTuple<_Tp, operator _SimdTuple<_Tp,2687,81265
    operator const operator const2695,81544
    operator _BuiltinType&(operator _BuiltinType&2699,81648
  __vectorized_sizeof(2777,83638
namespace simd_abi 2827,85006
  inline constexpr int max_fixed_size2830,85099
  using compatible 2836,85281
  using compatible = conditional_t<(sizeof(_Tp) <= 8), _VecBuiltin<_VecBuiltin2836,85281
  using compatible2841,85500
		    _VecBuiltin<_VecBuiltin2844,85620
  using compatible 2847,85678
  __determine_native_abi(2854,85777
template <typename _Tp,2865,86162
template <typename _Tp, typename 2865,86162
  using __default_abi 2872,86403
  using __default_abi 2875,86489
  struct is_simd_flag_type2883,86609
  struct is_simd_flag_type<is_simd_flag_type2888,86670
  struct is_simd_flag_type<is_simd_flag_type2893,86751
  struct is_simd_flag_type<is_simd_flag_type2898,86841
  inline constexpr bool is_simd_flag_type_v 2903,86978
template <typename _Tp,2905,87056
template <typename _Tp, typename 2905,87056
template <typename _Tp,2909,87181
template <typename _Tp, typename 2909,87181
  : public _Tp::_IsValidAbiTag 2914,87351
  inline constexpr bool is_abi_tag_v 2917,87411
  struct is_simd 2921,87522
  inline constexpr bool is_simd_v 2924,87588
  struct is_simd_mask 2927,87670
inline constexpr bool is_simd_mask_v 2930,87741
template <typename _Tp,2933,87825
template <typename _Tp, typename _Abi,2933,87825
template <typename _Tp, typename _Abi, typename 2933,87825
template <typename _Tp,2936,87912
    : _SizeConstant<_SizeConstant2940,88067
template <typename _Tp,2942,88121
template <typename _Tp, typename _Abi 2942,88121
template <typename _Tp,2945,88245
template <typename _Tp, typename _Abi 2945,88245
template <typename _Tp,2949,88410
template <typename _Tp, size_t _Np,2949,88410
template <typename _Tp, size_t _Np, typename 2949,88410
namespace simd_abi 2952,88488
template <typename _Tp,2961,88901
template <typename _Tp, size_t _Np,2961,88901
  struct deduce 2962,88950
template <typename _Tp,2964,88997
template <typename _Tp, size_t _Np,2964,88997
  using deduce_t 2965,89052
  using deduce_t = typename deduce<_Tp, _Np,2965,89052
  using deduce_t = typename deduce<_Tp, _Np, _Abis...>::type;type2965,89052
template <typename _Tp,2970,89167
template <typename _Tp, typename _V,2970,89167
template <typename _Tp, typename _V, typename 2970,89167
template <typename _Tp,2973,89244
template <typename _Tp, typename _Up,2973,89244
  { using type 2976,89410
template <typename _Tp,2978,89497
template <typename _Tp, typename _Up,2978,89497
  { using type 2981,89668
template <typename _Tp,2983,89760
  using rebind_simd_t 2984,89797
template <int _Np,2987,89879
template <int _Np, typename _V,2987,89879
template <int _Np, typename _V, typename 2987,89879
template <int _Np,2990,89951
template <int _Np, typename _Tp,2990,89951
  { using type 2992,90086
template <int _Np,2994,90154
template <int _Np, typename _Tp,2994,90154
  { using type 2996,90294
template <int _Np,2998,90367
  using resize_simd_t 2999,90399
template <typename _Tp,3003,90494
template <typename _Tp, typename _Up 3003,90494
template <typename _Tp,3007,90659
template <typename _Tp, typename _Up 3007,90659
template <typename _Tp,3011,90842
template <typename _Tp, typename _Abi 3011,90842
template <typename _Tp,3014,90927
  struct is_simd<simd<_Tp, _Abi>> : public true_type 3015,90966
  using native_simd 3018,91048
template <typename _Tp,3020,91105
  using fixed_size_simd 3021,91138
template <typename _Tp,3023,91203
  using __deduced_simd 3024,91239
template <typename _Tp,3027,91351
template <typename _Tp, typename _Abi 3027,91351
template <typename _Tp,3030,91441
  struct is_simd_mask<simd_mask<_Tp, _Abi>> : public true_type 3031,91480
  using native_simd_mask 3034,91572
template <typename _Tp,3036,91639
  using fixed_size_simd_mask 3037,91672
template <typename _Tp,3039,91747
  using __deduced_simd_mask 3040,91783
template <typename _Tp,3044,91912
template <typename _Tp, typename _Up,3044,91912
template <typename _Tp, typename _Up, typename _Ap,3044,91912
template <typename _Tp, typename _Up, typename _Ap, bool 3044,91912
template <typename _Tp,3047,92046
template <typename _Tp, typename _A0,3047,92046
template <typename _Tp, typename _A0, typename _Up,3047,92046
  : __static_simd_cast_return_type<__static_simd_cast_return_type3049,92196
template <typename _Tp,3051,92262
template <typename _Tp, typename _Up,3051,92262
template <typename _Tp,3056,92457
  { using type 3064,92668
template <typename _Tp,3066,92705
template <typename _Tp, typename 3066,92705
    using type 3073,92946
  using safe_make_signed_t 3077,93030
template <typename _Tp,3079,93100
template <typename _Tp, typename _Up,3079,93100
    using type 3088,93329
template <typename _Tp,3097,93648
template <typename _Tp, typename _Up,3097,93648
template <typename _Tp, typename _Up, typename _Ap,3097,93648
	  typename _R3098,93700
namespace __proposed 3113,94115
template <typename _Tp,3114,94138
template <typename _Tp, typename _Up,3114,94138
template <typename _Tp, typename _Up, typename _Ap,3114,94138
	  typename _R3115,94190
	  = typename __static_simd_cast_return_type<_Tp, _Up,3116,94205
  static_simd_cast(3118,94345
template <typename _To,3125,94573
template <typename _To, typename _Up,3125,94573
  simd_bit_cast(3128,94682
template <typename _To,3145,95440
template <typename _To, typename _Up,3145,95440
  simd_bit_cast(3148,95549
template <typename _Tp,3179,96490
template <typename _Tp, typename _Up,3179,96490
template <typename _Tp, typename _Up, typename _Ap,3179,96490
	  typename _To 3180,96542
namespace __proposed 3186,96796
template <typename _Tp,3187,96819
template <typename _Tp, typename _Up,3187,96819
template <typename _Tp, typename _Up, typename _Ap,3187,96819
	  typename _To 3188,96871
namespace __proposed 3197,97190
template <typename _Tp,3224,98039
template <typename _Tp, typename _Up,3224,98039
  _GLIBCXX_SIMD_INTRINSIC _GLIBCXX_SIMD_CONSTEXPR enable_if_t<enable_if_t3225,98091
  resizing_simd_cast(3227,98230
template <typename _Tp,3258,99092
template <typename _Tp, typename _Up,3258,99092
  enable_if_t<enable_if_t3260,99194
  resizing_simd_cast(3261,99234
template <typename _Tp,3270,99479
  to_fixed_size(3272,99564
template <typename _Tp,3275,99637
  to_fixed_size(3277,99727
template <typename _Tp,3280,99805
  to_fixed_size(3282,99913
template <typename _Tp,3288,100126
  to_fixed_size(3290,100239
template <typename _Tp,3297,100429
template <typename _Tp,3307,100756
template <typename _Tp,3318,101122
template <typename _Tp,3327,101441
template <typename _M,3341,101886
  class const_where_expression3342,101923
    using _V 3344,101958
    struct _Wrapper 3347,102036
    using _Impl 3350,102098
    using value_type 3352,102137
      typename conditional_t<is_arithmetic_v<_V>, _Wrapper,3353,102160
      typename conditional_t<is_arithmetic_v<_V>, _Wrapper, _V>::value_type;value_type3353,102160
    const _M& _M_k;3363,102487
    _Tp& _M_value;3364,102507
    const_where_expression(3372,102724
    template <typename _Up,3383,103050
    template <typename _Up,3392,103408
    using _M 3406,103845
    using _V 3407,103866
    struct _Wrapper 3411,103945
    struct _Wrapper { using value_type 3411,103945
    using value_type3414,104007
    const bool _M_k;3425,104357
    _Tp& _M_value;3426,104378
    const_where_expression(3433,104594
    template <typename _Up,3440,104830
    template <typename _Up,3445,105103
template <typename _M,3455,105381
  class where_expression 3456,105418
    using _Impl 3458,105488
    using _Impl = typename const_where_expression<_M, _Tp>::_Impl;_Impl3458,105488
    using typename const_where_expression<const_where_expression3464,105688
    using typename const_where_expression<_M, _Tp>::value_type;value_type3464,105688
    using const_where_expression<const_where_expression3465,105752
    using const_where_expression<_M, _Tp>::_M_k;_M_k3465,105752
    using const_where_expression<const_where_expression3466,105801
    using const_where_expression<_M, _Tp>::_M_value;_M_value3466,105801
    where_expression(3481,106305
#define _GLIBCXX_SIMD_OP_(3493,106668
    _GLIBCXX_SIMD_OP_(+, _S_plus)3506,107627
    _GLIBCXX_SIMD_OP_(-, _S_minus)3507,107662
    _GLIBCXX_SIMD_OP_(*, _S_multiplies)3508,107698
    _GLIBCXX_SIMD_OP_(/, _S_divides)3509,107739
    _GLIBCXX_SIMD_OP_(%, _S_modulus)3510,107777
    _GLIBCXX_SIMD_OP_(&, _S_bit_and)3511,107815
    _GLIBCXX_SIMD_OP_(|, _S_bit_or)3512,107853
    _GLIBCXX_SIMD_OP_(^, _S_bit_xor)3513,107890
    _GLIBCXX_SIMD_OP_(<<, _S_shift_left)3514,107928
    _GLIBCXX_SIMD_OP_(>>, _S_shift_right)3515,107970
#undef _GLIBCXX_SIMD_OP_3516,108013
    template <typename _Up,3547,108882
  : public const_where_expression<const_where_expression3559,109312
#define _GLIBCXX_SIMD_OP_(3574,109833
  #undef _GLIBCXX_SIMD_OP_3591,110504
template <typename _Tp,3617,111285
  where(3620,111429
template <typename _Tp,3623,111539
  where(3626,111689
template <typename _Tp,3629,111805
  where(3632,111954
template <typename _Tp,3635,112070
  where(3638,112225
  where(3643,112449
  where(3648,112625
template <typename _Tp,3651,112699
template <typename _Tp,3655,112822
namespace __proposed 3660,112984
  class where_range3662,113029
    const bitset<_Np> __bits;3664,113053
    where_range(3667,113094
    class iterator3669,113145
      size_t __mask;3671,113170
      size_t __bit;3672,113191
      __next_bit(3675,113247
      __reset_lsb(3679,113344
      iterator(3687,113500
      operator->(3692,113692
      operator*(3696,113783
      operator++(3700,113876
      operator++(3708,114001
      operator==(operator==3717,114150
      operator!=(operator!=3721,114277
    begin(3726,114385
    end(3730,114452
template <typename _Tp,3734,114492
  where_range<where_range3735,114530
  where(3736,114567
template <typename _Tp,3743,114712
template <typename _Tp, typename _Abi,3743,114712
template <typename _Tp, typename _Abi, typename _BinaryOperation 3743,114712
template <typename _M,3748,114989
template <typename _M, typename _V,3748,114989
template <typename _M, typename _V, typename _BinaryOperation 3748,114989
template <typename _M,3762,115519
  reduce(3764,115605
template <typename _M,3767,115725
  reduce(3769,115811
template <typename _M,3772,115932
  reduce(3774,116018
template <typename _M,3777,116161
  reduce(3779,116247
template <typename _M,3782,116364
  reduce(3784,116450
template <typename _Tp,3787,116568
  hmin(3789,116661
template <typename _Tp,3792,116774
  hmax(3794,116867
template <typename _M,3797,116980
  hmin(3800,117092
template <typename _M,3815,117561
  hmax(3818,117673
template <typename _Tp,3840,118262
  min(3842,118365
template <typename _Tp,3845,118507
  max(3847,118610
template <typename _Tp,3850,118752
  minmax(3853,118879
template <typename _Tp,3861,119172
  clamp(3863,119275
template <size_t... _Sizes,3873,119536
template <size_t... _Sizes, typename _Tp,3873,119536
template <size_t... _Sizes, typename _Tp, typename _Ap,3873,119536
	  typename 3874,119592
template <int _Index,3879,119780
template <int _Index, int _Total,3879,119780
template <int _Index, int _Total, int _Combine 3879,119780
template <int _Index,3884,120007
template <int _Index, int _Parts,3884,120007
template <int _Index, int _Parts, int _Combine 3884,120007
template <size_t _V0,3890,120229
  struct _SizeList3891,120270
      _S_at(3895,120348
      _S_before(3905,120558
      _S_pop_front(3916,120821
template <typename _Tp,3927,121039
  __extract_center(3929,121128
template <typename _Tp,3973,122716
template <typename _Tp, typename _A0,3973,122716
  __extract_center(3976,122862
template <size_t... _Sizes,3986,123094
template <size_t... _Sizes, typename _Tp,3986,123094
  __split_wrapper(3988,123160
template <typename _V,3998,123407
template <typename _V, typename _Ap,3998,123407
	  size_t _Parts 3999,123444
template <typename _V,4067,126061
template <typename _V, typename _Ap,4067,126061
	  size_t _Parts 4068,126098
template <size_t... _Sizes,4105,127562
template <size_t... _Sizes, typename _Tp,4105,127562
template <size_t... _Sizes, typename _Tp, typename _Ap,4105,127562
  split(4108,127713
template <size_t _I,4219,132625
template <size_t _I, typename _Tp,4219,132625
template <size_t _I, typename _Tp, typename _Ap,4219,132625
  __subscript_in_pack(4221,132731
template <typename _Tp,4231,133003
template <typename _Tp, typename _A0,4231,133003
  __store_pack_of_simd(4233,133089
template <typename _Tp,4243,133443
template <typename _Tp, typename... _As,4243,133443
template <typename _Tp, typename... _As, typename 4243,133443
template <typename _Tp,4266,134223
template <typename _Tp, typename _Abi,4266,134223
  concat(4269,134380
template <typename _Up,4281,134646
template <typename _Up, typename _Accessor 4281,134646
    operator value_type(operator value_type4314,135487
#define _GLIBCXX_SIMD_OP_(4325,135819
#undef _GLIBCXX_SIMD_OP_4340,136861
  struct __scalar_abi_wrapper4423,139439
    template <typename _Tp> static constexpr size_t _S_full_size 4425,139473
    template <typename _Tp> static constexpr size_t _S_size 4426,139543
    template <typename _Tp> static constexpr size_t _S_is_partial 4427,139608
    template <typename _Tp,4429,139684
    template <typename _Tp, typename _Abi 4429,139684
  struct __decay_abi 4437,139922
  struct __decay_abi { using type 4437,139922
  struct __decay_abi<__decay_abi4440,139989
  { using type 4441,140040
template <template <int> class _Abi, int _Bytes,4449,140392
  struct __find_next_valid_abi4450,140455
    _S_choose(4453,140516
    using type 4466,140957
template <int _Bytes,4469,141003
  { using type 4471,141105
  struct _AbiList4475,141196
    template <typename,typename4477,141218
    template <typename, int> static constexpr bool _S_has_valid_abi 4477,141218
    template <typename,typename4478,141295
    template <typename, int> using _FirstValidAbi 4478,141295
    template <typename,typename4479,141353
    template <typename, int> using _BestAbi 4479,141353
    template <typename _Tp,4485,141515
      static constexpr bool _S_has_valid_abi4486,141552
    template <typename _Tp,4490,141719
      using _FirstValidAbi 4491,141756
    template <typename _Tp,4496,141974
      _S_determine_best_abi(4498,142039
    template <typename _Tp,4528,142953
      using _BestAbi 4529,142990
using _AllNativeAbis 4537,143272
template <typename _Tp,4541,143421
  : _Abi::template __traits<__traits4543,143539
template <typename _Tp,4547,143663
  { using type 4550,143803
template <typename _Tp,4553,143936
template <typename _Tp, size_t _Np,4553,143936
template <typename _Tp, size_t _Np, typename 4553,143936
template <typename _Tp,4556,144032
  { using type 4559,144189
template <typename _Tp,4561,144237
template <typename _Tp, size_t _Np,4561,144237
  struct __deduce_impl 4562,144283
template <typename _Tp,4568,144397
  class simd_mask 4569,144436
    using _Traits 4572,144537
    using _MemberType 4573,144581
    using _Ip 4579,144925
    static constexpr _Ip* _S_type_tag 4580,144966
    using _Impl 4587,145256
    using value_type 4592,145357
    using reference 4593,145386
    using reference = _SmartReference<_MemberType, _Impl,4593,145386
    using simd_type 4594,145457
    using abi_type 4595,145496
    static constexpr size_t size(4598,145535
    simd_mask(4612,146022
    __from_bitset(4623,146516
    _GLIBCXX_SIMD_ALWAYS_INLINE _GLIBCXX_SIMD_CONSTEXPR bitset<bitset4626,146590
    simd_mask(4633,146862
    template <typename _Up,4640,147086
    template <typename _Up, typename _A2,4640,147086
	      typename 4641,147128
    template <typename _Up,4648,147477
    template <typename _Up, typename 4648,147477
			      is_same<is_same4650,147599
      simd_mask(4652,147694
      simd_mask(4660,147974
      simd_mask(4665,148224
      copy_from(4676,148585
      copy_to(4683,148888
    operator!(4710,149726
    template <typename _Up,4717,149989
    template <typename _Up, typename _A2,4717,149989
	      typename 4718,150031
      operator&&(4720,150187
    template <typename _Up,4726,150363
    template <typename _Up, typename _A2,4726,150363
	      typename 4727,150405
      operator||(4729,150561
    operator&&(4737,150861
    operator||(4741,151076
    operator&(4745,151290
    operator|(4749,151500
    operator^(4753,151709
    operator&=(operator&=4757,151920
    operator|=(operator|=4764,152143
    operator^=(operator^=4771,152365
    operator==(operator==4780,152651
    operator!=(operator!=4784,152822
    simd_mask(4790,153052
    template <typename _Fp,4795,153194
    template <typename _Fp, typename 4795,153194
    simd_mask(4808,153607
    struct _CvtProxy4818,154018
      template <typename _Up,4820,154045
      template <typename _Up, typename _A2,4820,154045
      const simd_mask<simd_mask4829,154343
      const simd_mask<_Tp, _Abi>& _M_data;4829,154343
    __cvt(4833,154432
    operator?:(4840,154658
    template <typename _U1,4848,154914
    template <typename _U1, typename _U2,4848,154914
	      typename _Rp 4849,154956
	      typename 4850,155015
		is_convertible<_U1, _Rp>, is_convertible<is_convertible4851,155060
		is_convertible<is_convertible4852,155114
      operator?:(4854,155239
    template <typename _Kp,4865,155585
    template <typename _Kp, typename _Ak,4865,155585
    template <typename _Kp, typename _Ak, typename _Up,4865,155585
    template <typename _Kp, typename _Ak, typename _Up, typename _Au,4865,155585
	      typename 4866,155655
			      is_convertible<is_convertible4868,155750
      operator?:(4870,155884
    _M_is_constprop(4884,156347
template <typename _Tp,4904,156776
  __data(4906,156862
template <typename _Tp,4909,156930
  __data(4911,157010
template <typename _Tp,4918,157144
  all_of(4920,157242
template <typename _Tp,4933,157551
  any_of(4935,157649
template <typename _Tp,4948,157957
  none_of(4950,158055
template <typename _Tp,4963,158365
  some_of(4965,158463
template <typename _Tp,4978,158789
  popcount(4980,158886
template <typename _Tp,4994,159347
  find_first_set(4996,159444
template <typename _Tp,5015,160074
  find_last_set(5017,160171
all_of(5037,160852
any_of(5041,160958
none_of(5045,161064
some_of(5049,161172
popcount(5053,161276
find_first_set(5057,161383
find_last_set(5061,161481
template <typename _V,5068,161578
template <typename _V, typename _Tp,5068,161578
template <typename _V, typename _Tp, typename _Abi,5068,161578
  class _SimdIntOperators 5069,161636
template <typename _V,5071,161667
template <typename _V, typename _Tp,5071,161667
    using _Impl 5074,161770
    __derived(5077,161881
      _S_make_derived(5082,162042
    operator%=(operator%=5088,162217
    operator&=(operator&=5093,162366
    operator|=(operator|=5098,162515
    operator^=(operator^=5103,162664
    operator<<=(operator<<=5108,162813
    operator>>=(operator>>=5113,162964
    operator<<=(operator<<=5118,163115
    operator>>=(operator>>=5123,163260
    operator%(5128,163404
    operator&(5136,163627
    operator|(5144,163850
    operator^(5152,164072
    operator<<(5160,164295
    operator>>(5168,164526
    operator<<(5176,164758
    operator>>(5195,165453
    operator~(5215,166173
template <typename _Tp,5223,166310
  class simd 5224,166349
    using _Traits 5230,166567
    using _MemberType 5231,166611
    using _CastType 5232,166666
    static constexpr _Tp* _S_type_tag 5233,166721
    using _Impl 5237,166821
    friend _SimdIntOperators<simd, _Tp,5239,166886
    friend _SimdIntOperators<simd, _Tp, _Abi,5239,166886
    using value_type 5241,166940
    using reference 5242,166968
    using reference = _SmartReference<_MemberType, _Impl,5242,166968
    using mask_type 5243,167039
    using abi_type 5244,167083
    static constexpr size_t size(5246,167111
    template <typename _Up,5256,167534
	      typename 5257,167562
      simd(5259,167692
      simd(5268,168025
    template <typename _Up,5279,168499
    template <typename _Up, typename _A2,5279,168499
	      typename 5280,168541
      simd(5298,169300
    template <typename _Up,5304,169478
      copy_from(5306,169586
    template <typename _Up,5313,169820
      copy_to(5315,169928
    operator++(5340,170614
    operator++(5347,170761
    operator--(5355,170934
    operator--(5362,171081
    operator!(5371,171295
    operator+(5375,171439
    operator-(5379,171545
    simd(5384,171761
    operator+=(operator+=5388,171921
    operator-=(operator-=5392,172072
    operator*=(operator*=5396,172223
    operator/=(operator/=5400,172374
    operator+(5405,172562
    operator-(5409,172754
    operator*(5413,172947
    operator/(5417,173145
    operator==(operator==5422,173379
    operator!=(operator!=5426,173583
    operator<(5433,173803
    operator<=(operator<=5437,174002
    operator>(5443,174218
    operator>=(operator>=5447,174417
    operator?:(5455,174725
    simd(5468,175134
    simd(5473,175298
    _M_is_constprop(5477,175464
    _S_make_mask(5487,175701
template <typename _Tp,5498,176021
  __data(5500,176107
template <typename _Tp,5503,176170
  __data(5505,176250
namespace __float_bitwise_operators 5509,176314
template <typename _Tp,5510,176358
  _GLIBCXX_SIMD_INTRINSIC _GLIBCXX_SIMD_CONSTEXPR simd<simd5511,176396
  operator^(5512,176461
template <typename _Tp,5515,176613
  _GLIBCXX_SIMD_INTRINSIC _GLIBCXX_SIMD_CONSTEXPR simd<simd5516,176651
  operator|(5517,176716
template <typename _Tp,5520,176867
  _GLIBCXX_SIMD_INTRINSIC _GLIBCXX_SIMD_CONSTEXPR simd<simd5521,176905
  operator&(5522,176970
template <typename _Tp,5525,177122
  enable_if_t<enable_if_t5527,177210
  operator~(5528,177266

/usr/include/c++/13/experimental/bits/simd_builtin.h,20802
#define _GLIBCXX_EXPERIMENTAL_SIMD_ABIS_H_26,1133
  static inline _GLIBCXX_SIMD_USE_CONSTEXPR _V _S_allbits37,1329
template <typename _V,42,1506
template <typename _V, typename 42,1506
template <typename _V,46,1652
template <typename _V, typename 46,1652
template <int... _Indices,53,1908
template <int... _Indices, typename _Tp,53,1908
template <int... _Indices, typename _Tp, typename _TVT 53,1908
template <int... _Indices,66,2356
template <int... _Indices, typename _Tp,66,2356
template <int... _Indices, typename _Tp, typename _TVT 66,2356
template <typename _Tp,79,2697
  __make_wrapper(81,2812
template <typename _Tp,86,2929
template <typename _Tp, size_t _ToN 86,2929
template <unsigned __shift,98,3369
template <unsigned __shift, typename _Tp,98,3369
template <unsigned __shift, typename _Tp, typename _TVT 98,3369
template <int _Index,207,7587
template <int _Index, int _Total,207,7587
template <int _Index, int _Total, int _Combine,207,7587
template <int _Index, int _Total, int _Combine, typename _Tp,207,7587
  __extract_part(210,7757
template <int _Index,276,10062
template <int _Index, int _Total,276,10062
template <int _Index, int _Total, int _Combine 276,10062
template <typename _To,290,10589
template <typename _To, typename _From,290,10589
  __vector_convert(292,10683
template <typename _To,298,10848
template <typename _To, typename _From,298,10848
  __vector_convert(300,10942
template <typename _To,306,11148
template <typename _To, typename _From,306,11148
  __vector_convert(308,11242
template <typename _To,315,11497
template <typename _To, typename _From,315,11497
  __vector_convert(317,11591
template <typename _To,325,11892
template <typename _To, typename _From,325,11892
  __vector_convert(327,11986
template <typename _To,336,12336
template <typename _To, typename _From,336,12336
  __vector_convert(338,12430
template <typename _To,347,12821
template <typename _To, typename _From,347,12821
  __vector_convert(349,12915
template <typename _To,359,13355
template <typename _To, typename _From,359,13355
  __vector_convert(361,13449
template <typename _To,371,13930
template <typename _To, typename _From,371,13930
  __vector_convert(373,14024
template <typename _To,385,14559
template <typename _To, typename _From,385,14559
  __vector_convert(387,14653
template <typename _To,399,15229
template <typename _To, typename _From,399,15229
  __vector_convert(401,15323
template <typename _To,414,15948
template <typename _To, typename _From,414,15948
  __vector_convert(416,16042
template <typename _To,429,16708
template <typename _To, typename _From,429,16708
  __vector_convert(431,16802
template <typename _To,445,17517
template <typename _To, typename _From,445,17517
  __vector_convert(447,17611
template <typename _To,462,18372
template <typename _To, typename _From,462,18372
  __vector_convert(464,18466
template <typename _To,480,19276
template <typename _To, typename _From,480,19276
  __vector_convert(482,19370
template <typename _To,501,20399
template <typename _To, typename... _From,501,20399
  __vector_convert(503,20500
template <typename _To,527,21310
template <typename _To, typename _From,527,21310
  __convert(529,21410
template <typename _To,563,22701
	  size_t _NParts 564,22725
template <typename _Tp,817,32438
template <typename _Tp, typename _Mp,817,32438
template <typename _Tp, typename _Mp, typename _Abi,817,32438
  struct _GnuTraits818,32503
    using _IsValid 820,32527
    using _SimdImpl 821,32559
    using _MaskImpl 822,32607
    using _SimdMember 825,32699
    using _MaskMember 826,32747
    static constexpr size_t _S_simd_align 827,32795
    static constexpr size_t _S_mask_align 828,32861
    static constexpr size_t _S_full_size 832,32964
    static constexpr bool _S_is_partial 833,33034
    struct _SimdBase2837,33188
      operator __intrinsic_type_t<_Tp, operator __intrinsic_type_t<_Tp,840,33259
      operator __vector_type_t<_Tp, operator __vector_type_t<_Tp,844,33437
    struct _SimdBase1848,33575
      operator __intrinsic_type_t<_Tp, operator __intrinsic_type_t<_Tp,851,33646
    using _SimdBase 855,33775
      is_same<__intrinsic_type_t<_Tp, _Np>, __vector_type_t<__vector_type_t856,33812
      is_same<__intrinsic_type_t<_Tp, _Np>, __vector_type_t<_Tp, _Np>>::value,value856,33812
      _SimdBase1,857,33891
    struct _MaskBase2861,33955
      operator __intrinsic_type_t<_Tp, operator __intrinsic_type_t<_Tp,864,34026
      operator __vector_type_t<_Tp, operator __vector_type_t<_Tp,868,34208
    struct _MaskBase1872,34347
      operator __intrinsic_type_t<_Tp, operator __intrinsic_type_t<_Tp,875,34418
    using _MaskBase 879,34552
      is_same<__intrinsic_type_t<_Tp, _Np>, __vector_type_t<__vector_type_t880,34589
      is_same<__intrinsic_type_t<_Tp, _Np>, __vector_type_t<_Tp, _Np>>::value,value880,34589
      _MaskBase1,881,34668
    class _MaskCastType886,34796
      _Up _M_data;889,34874
      _MaskCastType(893,34940
      operator _MaskMember(operator _MaskMember896,35022
    class _SimdCastType1902,35176
      _SimdMember _M_data;905,35255
      _SimdCastType1(909,35339
      operator _SimdMember(operator _SimdMember912,35455
    class _SimdCastType2915,35518
      _SimdMember _M_data;919,35642
      _SimdCastType2(923,35726
      _SimdCastType2(926,35842
      operator _SimdMember(operator _SimdMember929,35935
    using _SimdCastType 932,35998
      is_same<__intrinsic_type_t<_Tp, _Np>, __vector_type_t<__vector_type_t933,36039
      is_same<__intrinsic_type_t<_Tp, _Np>, __vector_type_t<_Tp, _Np>>::value,value933,36039
      _SimdCastType1,934,36118
template <typename _Abi,942,36254
template <typename _Abi, typename 942,36254
template <typename _Abi,943,36339
template <typename _Abi, typename 943,36339
template <typename _Abi,944,36424
template <typename _Abi, typename 944,36424
template <typename _Abi,945,36505
template <typename _Abi, typename 945,36505
template <typename _Abi,946,36586
template <typename _Abi, typename 946,36586
template <typename _Abi,947,36668
template <typename _Abi, typename 947,36668
template <typename _Abi,948,36750
template <typename _Abi, typename 948,36750
template <typename _Abi,949,36831
template <typename _Abi, typename 949,36831
  struct simd_abi::_VecBuiltin953,36968
      static constexpr size_t _S_size 956,37031
    struct _IsValidAbiTag 959,37125
      struct _IsValidSizeFor962,37220
      struct _IsValid 969,37469
      static constexpr bool _S_is_valid_v 973,37608
    using _CommonImpl 978,37745
    using _SimdImpl 979,37785
    using _MaskImpl 980,37846
    using _CommonImpl 982,37937
    using _SimdImpl 983,37978
    using _MaskImpl 984,38040
    using _CommonImpl 986,38108
    using _SimdImpl 988,38171
    using _MaskImpl 989,38232
    using _SimdImpl 991,38299
    using _MaskImpl 992,38364
      using _MaskValueType 999,38503
      using __traits1002,38586
			_GnuTraits<_GnuTraits1004,38644
      static constexpr size_t _S_full_size 1011,38815
      static constexpr bool _S_is_partial 1014,38918
      using _MaskMember 1019,39058
      _S_implicit_mask(1023,39226
      _GLIBCXX_SIMD_INTRINSIC static constexpr __intrinsic_type_t<__intrinsic_type_t1039,39672
      _S_implicit_mask_intrin(1040,39757
    template <typename _TW,1043,39876
    template <typename _TW, typename _TVT 1043,39876
    template <typename _TW,1055,40235
    template <typename _TW, typename _TVT 1055,40235
  struct simd_abi::_VecBltnBtmsk1086,41170
      static constexpr size_t _S_size 1089,41235
    struct _IsValidAbiTag 1092,41329
      struct _IsValidSizeFor1095,41424
      struct _IsValid1103,41741
      static constexpr bool _S_is_valid_v 1111,42020
    using _CommonImpl 1116,42154
    using _SimdImpl 1117,42194
    using _MaskImpl 1118,42257
    using _CommonImpl 1123,42375
    using _SimdImpl 1124,42425
    using _MaskImpl 1125,42473
      using _MaskMember 1131,42590
      using __traits 1134,42679
	_GnuTraits<_GnuTraits1136,42738
      static constexpr size_t _S_full_size 1142,42885
      static constexpr bool _S_is_partial 1144,42987
      using _ImplicitMask 1150,43137
      __implicit_mask_n(1155,43317
      _S_implicit_mask(1163,43578
      _S_implicit_mask_intrin(1168,43774
    template <typename _Tp,1171,43859
      _GLIBCXX_SIMD_INTRINSIC static constexpr _SimdWrapper<_SimdWrapper1172,43899
      _S_masked(1173,43969
      _S_masked(1188,44397
    template <typename _TV,1206,44941
    template <typename _TV, typename _TVT 1206,44941
struct _CommonImplBuiltin1240,45821
  template <typename _From,1247,46188
  template <typename _From, typename _To,1247,46188
    static inline constexpr bool __converts_via_decomposition_v1248,46246
  template <typename _Tp,1253,46374
  template <typename _Tp, size_t _Np,1253,46374
  template <typename _Tp, size_t _Np, size_t _Bytes 1253,46374
    _S_load(1255,46508
  template <size_t _ReqBytes 1298,47669
    _S_store(1300,47757
  template <typename _Tp,1335,48883
    _S_store(1337,48961
  template <size_t _Np,1342,49123
    _S_store_bool_array(1344,49214
  template <typename _Tp,1391,50511
    _S_blend(1393,50599
template <typename _Abi,1402,50832
  struct _SimdImplBuiltin1403,50867
      static constexpr size_t _S_max_store_size 1407,50950
    using abi_type 1409,51005
      using _TypeTag 1412,51061
      using _SimdMember 1415,51119
      using _MaskMember 1418,51226
      static constexpr size_t _S_size 1421,51323
      static constexpr size_t _S_full_size 1424,51421
    using _CommonImpl 1426,51501
    using _SuperImpl 1427,51553
    using _MaskImpl 1428,51602
    template <typename _Tp,1431,51709
      _GLIBCXX_SIMD_INTRINSIC static constexpr simd<simd1432,51749
      _M_make_simd(1433,51812
    template <typename _Tp,1436,51900
      _GLIBCXX_SIMD_INTRINSIC static constexpr simd<simd1437,51940
      _M_make_simd(1438,52003
      _S_broadcast(1444,52237
    template <typename _Fp,1448,52361
      _S_generator(1450,52450
    template <typename _Tp,1462,52748
      _S_load(1464,52854
    template <typename _Tp,1523,55445
    template <typename _Tp, size_t _Np,1523,55445
      static constexpr inline _SimdWrapper<_SimdWrapper1524,55499
      _S_masked_load(1525,55552
    template <typename _Tp,1536,55897
      _S_store(1538,55991
    template <typename _Tp,1579,57590
      _S_masked_store_nocvt(1581,57682
    template <typename _TW,1591,57975
    template <typename _TW, typename _TVT 1591,57975
	      typename _Tp 1592,58039
      _S_masked_store(1594,58137
    template <typename _Tp,1671,61040
      _GLIBCXX_SIMD_INTRINSIC static constexpr _SimdWrapper<_SimdWrapper1672,61080
      _S_complement(1673,61150
    template <typename _Tp,1682,61404
      _GLIBCXX_SIMD_INTRINSIC static constexpr _SimdWrapper<_SimdWrapper1683,61444
      _S_unary_minus(1684,61514
    template <typename _Tp,1692,61769
      _GLIBCXX_SIMD_INTRINSIC static constexpr _SimdWrapper<_SimdWrapper1693,61809
      _S_plus(1694,61879
    template <typename _Tp,1697,61994
      _GLIBCXX_SIMD_INTRINSIC static constexpr _SimdWrapper<_SimdWrapper1698,62034
      _S_minus(1699,62104
    template <typename _Tp,1702,62220
      _GLIBCXX_SIMD_INTRINSIC static constexpr _SimdWrapper<_SimdWrapper1703,62260
      _S_multiplies(1704,62330
    template <typename _Tp,1707,62451
      _GLIBCXX_SIMD_INTRINSIC static constexpr _SimdWrapper<_SimdWrapper1708,62491
      _S_divides(1709,62561
    template <typename _Tp,1719,62916
      _GLIBCXX_SIMD_INTRINSIC static constexpr _SimdWrapper<_SimdWrapper1720,62956
      _S_modulus(1721,63026
    template <typename _Tp,1730,63290
      _GLIBCXX_SIMD_INTRINSIC static constexpr _SimdWrapper<_SimdWrapper1731,63330
      _S_bit_and(1732,63400
    template <typename _Tp,1735,63508
      _GLIBCXX_SIMD_INTRINSIC static constexpr _SimdWrapper<_SimdWrapper1736,63548
      _S_bit_or(1737,63618
    template <typename _Tp,1740,63724
      _GLIBCXX_SIMD_INTRINSIC static constexpr _SimdWrapper<_SimdWrapper1741,63764
      _S_bit_xor(1742,63834
    template <typename _Tp,1745,63942
      _GLIBCXX_SIMD_INTRINSIC static _SimdWrapper<_SimdWrapper1746,63982
      _S_bit_shift_left(1747,64042
    template <typename _Tp,1750,64168
      _GLIBCXX_SIMD_INTRINSIC static _SimdWrapper<_SimdWrapper1751,64208
      _S_bit_shift_right(1752,64268
    template <typename _Tp,1755,64395
      _GLIBCXX_SIMD_INTRINSIC static constexpr _SimdWrapper<_SimdWrapper1756,64435
      _S_bit_shift_left(1757,64505
    template <typename _Tp,1760,64604
      _GLIBCXX_SIMD_INTRINSIC static constexpr _SimdWrapper<_SimdWrapper1761,64644
      _S_bit_shift_right(1762,64714
    template <typename _Tp,1767,64859
      _S_equal_to(1769,64963
    template <typename _Tp,1773,65111
      _S_not_equal_to(1775,65215
    template <typename _Tp,1779,65359
      _S_less(1781,65463
    template <typename _Tp,1785,65604
      _S_less_equal(1787,65708
    template <typename _Tp,1791,65852
      _S_negate(1793,65956
    template <typename _Tp,1797,66079
      _SimdWrapper<_SimdWrapper1799,66192
      _S_min(1800,66221
    template <typename _Tp,1803,66363
      _SimdWrapper<_SimdWrapper1805,66476
      _S_max(1806,66505
    template <typename _Tp,1809,66647
      pair<pair1811,66760
      _S_minmax(1812,66819
    template <size_t _Np,1819,67053
    template <size_t _Np, size_t... _Is,1819,67053
    template <size_t _Np, size_t... _Is, size_t... _Zeros,1819,67053
    template <size_t _Np, size_t... _Is, size_t... _Zeros, typename _Tp,1819,67053
      _S_reduce_partial(1822,67211
    template <typename _Tp,1841,68016
      _S_reduce(1843,68122
#define _GLIBCXX_SIMD_MATH_FALLBACK(1961,72408
#define _GLIBCXX_SIMD_MATH_FALLBACK_MASKRET(1972,73097
#define _GLIBCXX_SIMD_MATH_FALLBACK_FIXEDRET(1983,73786
    template <typename _Tp,2045,76637
    template <typename _Tp, typename _TVT 2045,76637
    template <typename _Tp,2065,77261
      _S_isgreater(2067,77341
    template <typename _Tp,2079,77795
      _S_isgreaterequal(2081,77875
    template <typename _Tp,2093,78333
      _S_isless(2095,78413
    template <typename _Tp,2106,78859
      _S_islessequal(2108,78939
    template <typename _Tp,2120,79398
      _S_islessgreater(2122,79478
#undef _GLIBCXX_SIMD_MATH_FALLBACK2129,79690
#undef _GLIBCXX_SIMD_MATH_FALLBACK_MASKRET2130,79725
#undef _GLIBCXX_SIMD_MATH_FALLBACK_FIXEDRET2131,79768
    template <typename _Tp,2133,79831
      _GLIBCXX_SIMD_INTRINSIC static _SimdWrapper<_SimdWrapper2134,79871
      _S_abs(2135,79931
    template <typename _TV,2156,80714
      _S_plus_minus(2158,80807
    template <typename _Tp,2208,82229
    template <typename _Tp, typename _TVT 2208,82229
    template <typename _Tp,2225,82902
    template <typename _Tp, typename _TVT 2225,82902
    template <typename _Tp,2231,83109
      _GLIBCXX_SIMD_INTRINSIC static _SimdWrapper<_SimdWrapper2232,83149
      _S_trunc(2233,83209
    template <typename _Tp,2246,83710
      _GLIBCXX_SIMD_INTRINSIC static _SimdWrapper<_SimdWrapper2247,83750
      _S_round(2248,83810
    template <typename _Tp,2258,84166
      _GLIBCXX_SIMD_INTRINSIC static _SimdWrapper<_SimdWrapper2259,84206
      _S_floor(2260,84266
    template <typename _Tp,2272,84695
      _GLIBCXX_SIMD_INTRINSIC static _SimdWrapper<_SimdWrapper2273,84735
      _S_ceil(2274,84795
    template <typename _Tp,2286,85232
      _S_isnan(2288,85326
    template <typename _Tp,2306,85888
      _S_isfinite(2308,85982
    template <typename _Tp,2325,86538
      _S_isunordered(2327,86632
    template <typename _Tp,2331,86786
      _S_signbit(2333,86880
    template <typename _Tp,2343,87240
      _S_isinf(2345,87334
    template <typename _Tp,2367,87930
      _S_isnormal(2369,88024
    template <typename _Tp,2385,88514
      _GLIBCXX_SIMD_INTRINSIC static __fixed_size_storage_t<__fixed_size_storage_t2386,88554
      _S_fpclassify(2387,88624
    template <typename _Tp,2469,91620
      _S_increment(2471,91712
    template <typename _Tp,2474,91794
      _S_decrement(2476,91886
    template <typename _Tp,2480,92003
    template <typename _Tp, size_t _Np,2480,92003
      _S_set(2482,92109
    template <typename _Tp,2486,92261
    template <typename _Tp, typename _K,2486,92261
      _S_masked_assign(2488,92366
    template <typename _Tp,2499,92686
    template <typename _Tp, typename _K,2499,92686
      _S_masked_assign(2501,92791
    template <typename _Op,2527,93635
    template <typename _Op, typename _Tp,2527,93635
    template <typename _Op, typename _Tp, typename _K,2527,93635
      _S_masked_cassign(2529,93754
    template <typename _Op,2543,94156
    template <typename _Op, typename _Tp,2543,94156
    template <typename _Op, typename _Tp, typename _K,2543,94156
      _S_masked_cassign(2545,94275
    template <template <typename> class _Op, typename _Tp,2551,94523
    template <template <typename> class _Op, typename _Tp, typename _K,2551,94523
      _GLIBCXX_SIMD_INTRINSIC static constexpr _SimdWrapper<_SimdWrapper2553,94614
      _S_masked_unary(2554,94684
struct _MaskImplBuiltinMixin2594,96157
    using _TypeTag 2597,96214
  template <typename _Up,2600,96268
  template <typename _Up, size_t _ToN 2600,96268
    _S_to_maskvector(2602,96380
  template <typename _Up,2609,96575
  template <typename _Up, size_t _UpN 2609,96575
  template <typename _Up, size_t _UpN = 0, size_t _Np,2609,96575
  template <typename _Up, size_t _UpN = 0, size_t _Np, bool _Sanitized,2609,96575
	    size_t _ToN 2610,96647
    _S_to_maskvector(2612,96759
  template <typename _Up,2624,97121
  template <typename _Up, size_t _UpN 2624,97121
  template <typename _Up, size_t _UpN = 0, typename _Tp,2624,97121
  template <typename _Up, size_t _UpN = 0, typename _Tp, size_t _Np,2624,97121
	    size_t _ToN 2625,97190
    _S_to_maskvector(2627,97302
  template <typename _Tp,2675,99158
    _S_to_bits(2677,99264
template <typename _Abi,2696,99788
  struct _MaskImplBuiltin 2697,99823
    using _MaskImplBuiltinMixin::_S_to_bits;2699,99877
    using _MaskImplBuiltinMixin::_S_to_maskvector;2700,99922
      using _SimdMember 2704,100026
      using _MaskMember 2707,100133
    using _SuperImpl 2709,100202
    using _CommonImpl 2710,100251
      static constexpr size_t _S_size 2713,100332
      _S_broadcast(2719,100524
      _S_load(2726,100760
    template <typename _Tp,2745,101300
    template <typename _Tp, size_t _Np,2745,101300
      _S_convert(2747,101409
    template <typename _Tp,2757,101728
      _S_convert(2759,101820
    template <typename _Tp,2769,102155
    template <typename _Tp, typename _Up,2769,102155
      _S_convert(2771,102261
    template <typename _Tp,2781,102573
    template <typename _Tp, typename _Up,2781,102573
      _S_convert(2783,102683
    template <typename _Tp,2805,103443
      static inline _SimdWrapper<_SimdWrapper2806,103483
      _S_masked_load(2807,103526
    template <typename _Tp,2821,104043
      _S_store(2823,104135
    template <typename _Tp,2831,104361
      _S_masked_store(2833,104426
    template <size_t _Np,2843,104754
      _S_from_bitmask(2845,104848
    template <typename _Tp,2849,105042
      _GLIBCXX_SIMD_INTRINSIC static constexpr _SimdWrapper<_SimdWrapper2850,105082
      _S_logical_and(2851,105152
    template <typename _Tp,2854,105294
      _GLIBCXX_SIMD_INTRINSIC static constexpr _SimdWrapper<_SimdWrapper2855,105334
      _S_logical_or(2856,105404
    template <typename _Tp,2859,105544
      _GLIBCXX_SIMD_INTRINSIC static constexpr _SimdWrapper<_SimdWrapper2860,105584
      _S_bit_not(2861,105654
    template <typename _Tp,2870,105904
      _GLIBCXX_SIMD_INTRINSIC static constexpr _SimdWrapper<_SimdWrapper2871,105944
      _S_bit_and(2872,106014
    template <typename _Tp,2875,106152
      _GLIBCXX_SIMD_INTRINSIC static constexpr _SimdWrapper<_SimdWrapper2876,106192
      _S_bit_or(2877,106262
    template <typename _Tp,2880,106398
      _GLIBCXX_SIMD_INTRINSIC static constexpr _SimdWrapper<_SimdWrapper2881,106438
      _S_bit_xor(2882,106508
    template <typename _Tp,2886,106681
      _S_set(2888,106749
    template <typename _Tp,2912,107354
      _S_masked_assign(2914,107436
    template <typename _Tp,2918,107637
      _S_masked_assign(2920,107719
      _S_all_of(2938,108185
      _S_any_of(2950,108543
      _S_none_of(2962,108902
      _S_some_of(2974,109261
      _S_popcount(2984,109530
      _S_find_first_set(2999,110014
      _S_find_last_set(3006,110260

/usr/include/c++/13/experimental/bits/simd_converter.h,2142
#define _GLIBCXX_EXPERIMENTAL_SIMD_CONVERTER_H_26,1129
template <typename _From,32,1275
  struct _SimdConverter<_From,_From33,1315
  struct _SimdConverter<_From, simd_abi::scalar,33,1315
  struct _SimdConverter<_From, simd_abi::scalar, _To,33,1315
  struct _SimdConverter<_From, simd_abi::scalar, _To, simd_abi::scalar,33,1315
    _GLIBCXX_SIMD_INTRINSIC constexpr _To operator()(operator()36,1431
template <typename _From,42,1602
template <typename _From, typename _To,42,1602
    using _Ret 46,1773
      operator()(operator()50,1921
template <typename _From,60,2227
template <typename _From, typename _To,60,2227
template <typename _From, typename _To, typename _AFrom,60,2227
      __is_fixed_size_abi<_AFrom>, __is_fixed_size_abi<__is_fixed_size_abi64,2386
      is_same<is_same65,2448
      is_same<_AFrom, simd_abi::scalar>, is_same<is_same65,2448
    using _Arg 68,2591
    using _Ret 69,2664
    using _V 70,2733
      operator()(operator()74,2873
template <typename _From,80,3047
    operator()(operator()85,3251
template <typename _From,90,3385
  struct _SimdConverter<_From, simd_abi::fixed_size<1>, _To,91,3425
  struct _SimdConverter<_From, simd_abi::fixed_size<1>, _To, simd_abi::scalar,91,3425
    operator()(operator()95,3559
template <typename _From,100,3740
template <typename _From, typename _To,100,3740
  struct _SimdConverter<_From, simd_abi::fixed_size<_Np>, _To,101,3789
			simd_abi::fixed_size<simd_abi::fixed_size102,3852
    using _Ret 105,3926
    using _Arg 106,3977
    operator()(operator()109,4074
template <typename _From,269,9725
template <typename _From, typename _Ap,269,9725
template <typename _From, typename _Ap, typename _To,269,9725
    using _Ret 277,10038
    operator()(operator()280,10133
template <typename _From,310,11195
template <typename _From, int _Np,310,11195
template <typename _From, int _Np, typename _To,310,11195
  struct _SimdConverter<_From, simd_abi::fixed_size<_Np>, _To,311,11258
  struct _SimdConverter<_From, simd_abi::fixed_size<_Np>, _To, _Ap,311,11258
    using _Arg 318,11506
      operator()(operator()322,11648

/usr/include/c++/13/experimental/bits/simd_detail.h,5374
#define _GLIBCXX_EXPERIMENTAL_SIMD_DETAIL_H_26,1145
#define _GLIBCXX_SIMD_BEGIN_NAMESPACE 35,1282
#define _GLIBCXX_SIMD_END_NAMESPACE 41,1727
#define _GLIBCXX_SIMD_HAVE_NEON 50,2177
#define _GLIBCXX_SIMD_HAVE_NEON 52,2217
#define _GLIBCXX_SIMD_HAVE_NEON_A32 55,2325
#define _GLIBCXX_SIMD_HAVE_NEON_A32 57,2369
#define _GLIBCXX_SIMD_HAVE_NEON_A64 60,2460
#define _GLIBCXX_SIMD_HAVE_NEON_A64 62,2504
#define _GLIBCXX_SIMD_HAVE_MMX 67,2580
#define _GLIBCXX_SIMD_HAVE_MMX 69,2619
#define _GLIBCXX_SIMD_HAVE_SSE 72,2701
#define _GLIBCXX_SIMD_HAVE_SSE 74,2740
#define _GLIBCXX_SIMD_HAVE_SSE2 77,2823
#define _GLIBCXX_SIMD_HAVE_SSE2 79,2863
#define _GLIBCXX_SIMD_HAVE_SSE3 82,2920
#define _GLIBCXX_SIMD_HAVE_SSE3 84,2960
#define _GLIBCXX_SIMD_HAVE_SSSE3 87,3018
#define _GLIBCXX_SIMD_HAVE_SSSE3 89,3059
#define _GLIBCXX_SIMD_HAVE_SSE4_1 92,3119
#define _GLIBCXX_SIMD_HAVE_SSE4_1 94,3161
#define _GLIBCXX_SIMD_HAVE_SSE4_2 97,3222
#define _GLIBCXX_SIMD_HAVE_SSE4_2 99,3264
#define _GLIBCXX_SIMD_HAVE_XOP 102,3322
#define _GLIBCXX_SIMD_HAVE_XOP 104,3361
#define _GLIBCXX_SIMD_HAVE_AVX 107,3416
#define _GLIBCXX_SIMD_HAVE_AVX 109,3455
#define _GLIBCXX_SIMD_HAVE_AVX2 112,3511
#define _GLIBCXX_SIMD_HAVE_AVX2 114,3551
#define _GLIBCXX_SIMD_HAVE_BMI1 117,3607
#define _GLIBCXX_SIMD_HAVE_BMI1 119,3647
#define _GLIBCXX_SIMD_HAVE_BMI2 122,3704
#define _GLIBCXX_SIMD_HAVE_BMI2 124,3744
#define _GLIBCXX_SIMD_HAVE_LZCNT 127,3802
#define _GLIBCXX_SIMD_HAVE_LZCNT 129,3843
#define _GLIBCXX_SIMD_HAVE_SSE4A 132,3902
#define _GLIBCXX_SIMD_HAVE_SSE4A 134,3943
#define _GLIBCXX_SIMD_HAVE_FMA 137,4000
#define _GLIBCXX_SIMD_HAVE_FMA 139,4039
#define _GLIBCXX_SIMD_HAVE_FMA4 142,4095
#define _GLIBCXX_SIMD_HAVE_FMA4 144,4135
#define _GLIBCXX_SIMD_HAVE_F16C 147,4192
#define _GLIBCXX_SIMD_HAVE_F16C 149,4232
#define _GLIBCXX_SIMD_HAVE_POPCNT 152,4291
#define _GLIBCXX_SIMD_HAVE_POPCNT 154,4333
#define _GLIBCXX_SIMD_HAVE_AVX512F 157,4395
#define _GLIBCXX_SIMD_HAVE_AVX512F 159,4438
#define _GLIBCXX_SIMD_HAVE_AVX512DQ 162,4502
#define _GLIBCXX_SIMD_HAVE_AVX512DQ 164,4546
#define _GLIBCXX_SIMD_HAVE_AVX512VL 167,4611
#define _GLIBCXX_SIMD_HAVE_AVX512VL 169,4655
#define _GLIBCXX_SIMD_HAVE_AVX512BW 172,4720
#define _GLIBCXX_SIMD_HAVE_AVX512BW 174,4764
#define _GLIBCXX_SIMD_HAVE_AVX512BITALG 177,4833
#define _GLIBCXX_SIMD_HAVE_AVX512BITALG 179,4881
#define _GLIBCXX_SIMD_HAVE_AVX512VBMI2 182,4953
#define _GLIBCXX_SIMD_HAVE_AVX512VBMI2 184,5000
#define _GLIBCXX_SIMD_HAVE_AVX512VBMI 187,5070
#define _GLIBCXX_SIMD_HAVE_AVX512VBMI 189,5116
#define _GLIBCXX_SIMD_HAVE_AVX512IFMA 192,5185
#define _GLIBCXX_SIMD_HAVE_AVX512IFMA 194,5231
#define _GLIBCXX_SIMD_HAVE_AVX512CD 197,5298
#define _GLIBCXX_SIMD_HAVE_AVX512CD 199,5342
#define _GLIBCXX_SIMD_HAVE_AVX512VNNI 202,5409
#define _GLIBCXX_SIMD_HAVE_AVX512VNNI 204,5455
#define _GLIBCXX_SIMD_HAVE_AVX512VPOPCNTDQ 207,5529
#define _GLIBCXX_SIMD_HAVE_AVX512VPOPCNTDQ 209,5580
#define _GLIBCXX_SIMD_HAVE_AVX512VP2INTERSECT 212,5662
#define _GLIBCXX_SIMD_HAVE_AVX512VP2INTERSECT 214,5716
#define _GLIBCXX_SIMD_HAVE_SSE_ABI 218,5799
#define _GLIBCXX_SIMD_HAVE_SSE_ABI 220,5842
#define _GLIBCXX_SIMD_HAVE_FULL_SSE_ABI 223,5914
#define _GLIBCXX_SIMD_HAVE_FULL_SSE_ABI 225,5962
#define _GLIBCXX_SIMD_HAVE_AVX_ABI 229,6039
#define _GLIBCXX_SIMD_HAVE_AVX_ABI 231,6082
#define _GLIBCXX_SIMD_HAVE_FULL_AVX_ABI 234,6154
#define _GLIBCXX_SIMD_HAVE_FULL_AVX_ABI 236,6202
#define _GLIBCXX_SIMD_HAVE_AVX512_ABI 240,6283
#define _GLIBCXX_SIMD_HAVE_AVX512_ABI 242,6329
#define _GLIBCXX_SIMD_HAVE_FULL_AVX512_ABI 245,6408
#define _GLIBCXX_SIMD_HAVE_FULL_AVX512_ABI 247,6459
#define _GLIBCXX_SIMD_NORMAL_MATH256,6636
#define _GLIBCXX_SIMD_ALWAYS_INLINE_LAMBDA257,6670
#define _GLIBCXX_SIMD_NORMAL_MATH 259,6719
#define _GLIBCXX_SIMD_ALWAYS_INLINE_LAMBDA 261,6864
#define _GLIBCXX_SIMD_NEVER_INLINE 263,6949
#define _GLIBCXX_SIMD_INTRINSIC 264,7010
#define _GLIBCXX_SIMD_ALWAYS_INLINE 266,7156
#define _GLIBCXX_SIMD_IS_UNLIKELY(267,7230
#define _GLIBCXX_SIMD_IS_LIKELY(268,7294
#define _GLIBCXX_SIMD_CONSTEXPR271,7398
#define _GLIBCXX_SIMD_USE_CONSTEXPR_API 272,7430
#define _GLIBCXX_SIMD_CONSTEXPR 274,7482
#define _GLIBCXX_SIMD_USE_CONSTEXPR_API 275,7524
#define _GLIBCXX_SIMD_USE_CONSTEXPR 279,7604
#define _GLIBCXX_SIMD_USE_CONSTEXPR 281,7652
#define _GLIBCXX_SIMD_LIST_BINARY(284,7706
#define _GLIBCXX_SIMD_LIST_SHIFTS(285,7782
#define _GLIBCXX_SIMD_LIST_ARITHMETICS(286,7849
#define _GLIBCXX_SIMD_ALL_BINARY(289,7988
#define _GLIBCXX_SIMD_ALL_SHIFTS(291,8126
#define _GLIBCXX_SIMD_ALL_ARITHMETICS(293,8264
#undef _GLIBCXX_SIMD_ALWAYS_INLINE297,8446
#define _GLIBCXX_SIMD_ALWAYS_INLINE 298,8481
#undef _GLIBCXX_SIMD_ALWAYS_INLINE_LAMBDA299,8524
#define _GLIBCXX_SIMD_ALWAYS_INLINE_LAMBDA300,8566
#undef _GLIBCXX_SIMD_INTRINSIC301,8609
#define _GLIBCXX_SIMD_INTRINSIC 302,8640
#define _GLIBCXX_SIMD_X86INTRIN 306,8740
#define _GLIBCXX_SIMD_X86INTRIN 308,8780
#define _GLIBCXX_SIMD_USE_ALIASING_LOADS 315,9023
#define _GLIBCXX_SIMD_WORKAROUND_PR85048 319,9139
#define _GLIBCXX_SIMD_WORKAROUND_PR90993 324,9242
#define _GLIBCXX_SIMD_WORKAROUND_XXX_1 330,9463
#define _GLIBCXX_SIMD_WORKAROUND_PR90424 334,9574
#define _GLIBCXX_SIMD_WORKAROUND_XXX_3 338,9705
#define _GLIBCXX_SIMD_FIX_P2TS_ISSUE65 343,9858
#define _GLIBCXX_SIMD_FIX_P2TS_ISSUE66 347,10012

/usr/include/c++/13/experimental/bits/simd_fixed_size.h,14989
#define _GLIBCXX_EXPERIMENTAL_SIMD_FIXED_SIZE_H_40,1804
template <size_t _I,49,1959
template <typename _Tp,52,2026
template <typename _Tp, typename _A0,52,2026
  { using type 54,2144
template <size_t _I,56,2181
template <size_t _I, typename _Tp,56,2181
template <size_t _I, typename _Tp, typename _A0,56,2181
  { using type 58,2311
template <size_t _I,60,2402
  using __simd_tuple_element_t 61,2437
template <typename _Tp,66,2552
template <typename _Tp, typename... _A0s,66,2552
  __simd_tuple_concat(68,2682
template <typename _Tp,79,3013
template <typename _Tp, typename _A10,79,3013
  __simd_tuple_concat(81,3155
template <size_t _Np,88,3459
  _GLIBCXX_SIMD_INTRINSIC constexpr decltype(89,3495
struct __as_simd 104,3865
struct __as_simd_tuple 106,3887
template <typename _Tp,108,3915
template <typename _Tp, typename _A0,108,3915
  __simd_tuple_get_impl(110,4023
template <typename _Tp,113,4162
template <typename _Tp, typename _A0,113,4162
  __simd_tuple_get_impl(115,4267
template <typename _Tp,119,4397
template <typename _Tp, typename _A0,119,4397
  __simd_tuple_get_impl(121,4496
template <typename _R,124,4617
template <typename _R, size_t _Np,124,4617
template <typename _R, size_t _Np, typename _Tp,124,4617
  __simd_tuple_get_impl(126,4726
template <size_t _Np,129,4893
template <size_t _Np, typename _Tp,129,4893
  __simd_tuple_get_impl(131,4990
template <size_t _Np,134,5177
template <size_t _Np, typename _Tp,134,5177
  __get_simd_at(136,5273
template <size_t _Np,141,5438
template <size_t _Np, typename _Tp,141,5438
  __get_tuple_at(143,5534
template <size_t _Np,146,5672
template <size_t _Np, typename _Tp,146,5672
  __get_tuple_at(148,5769
template <typename _Tp,152,5930
template <typename _Tp, typename _Abi,152,5930
  struct __tuple_element_meta 153,5985
    using value_type 158,6216
    using abi_type 159,6244
    using _Traits 160,6271
    using _MaskImpl 161,6315
    using _MaskMember 162,6363
    using simd_type 163,6418
    static constexpr size_t _S_offset 164,6457
    static constexpr size_t _S_size(165,6506
    static constexpr _MaskImpl _S_mask_impl 166,6584
    template <size_t _Np,168,6635
      _S_submask(170,6730
    template <size_t _Np,173,6849
      _S_make_mask(175,6951
    _S_mask_to_shifted_ullong(182,7188
template <size_t _Offset,186,7307
template <size_t _Offset, typename _Tp,186,7307
template <size_t _Offset, typename _Tp, typename _Abi,186,7307
  __make_meta(189,7458
template <size_t _Offset,194,7569
  struct _WithOffset 195,7611
    static inline constexpr size_t _S_offset 197,7651
    _M_as_charptr(200,7742
    _M_as_charptr(204,7898
template <size_t _O0,209,8083
template <size_t _O0, size_t _O1,209,8083
template <size_t _Offset,212,8189
  decltype(214,8255
template <size_t _Offset,218,8381
  decltype(220,8447
template <size_t _Offset,224,8585
template <size_t _Offset, size_t _ExistingOffset,224,8585
  decltype(226,8675
template <size_t _Offset,230,8850
template <size_t _Offset, size_t _ExistingOffset,230,8850
  decltype(232,8940
  constexpr inline size_t __offset 240,9170
template <size_t _Offset,242,9211
  constexpr inline size_t __offset<__offset243,9251
  constexpr inline size_t __offset<__offset247,9382
  struct _SimdTuple<_SimdTuple259,9693
    using value_type 261,9722
    static constexpr size_t _S_tuple_size 262,9750
    static constexpr size_t _S_size(263,9797
template <typename _FirstType,267,9878
  struct _SimdTupleData268,9931
    _FirstType first;270,9959
    _SecondType second;271,9981
    _M_is_constprop(275,10053
template <typename _FirstType,284,10280
    _FirstType first;287,10382
    static constexpr _SimdTuple<_Tp> second 288,10404
    _M_is_constprop(292,10502
template <typename _Tp,302,10691
template <typename _Tp, typename _Abi0,302,10691
    static_assert(!__is_fixed_size_abi_v<__is_fixed_size_abi_v307,10898
    using value_type 308,10948
    using _FirstType 309,10976
    using _FirstAbi 310,11046
    using _SecondType 311,11075
    static constexpr size_t _S_tuple_size 312,11126
    static constexpr size_t _S_size(314,11193
    static constexpr size_t _S_first_size 317,11297
    static constexpr bool _S_is_homogeneous 318,11366
    using _Base 320,11447
    using _Base::first;322,11560
    using _Base::second;323,11584
      _SimdTuple(332,11916
    template <typename _Up,335,11987
      _SimdTuple(337,12070
      _SimdTuple(342,12247
    _M_as_charptr(346,12369
    _M_as_charptr(350,12476
      _M_at(355,12627
      _M_at(365,12828
      _M_simd_at(375,13028
    template <size_t _Offset 383,13201
	auto&& __first 387,13375
    template <size_t _Offset 397,13659
      _GLIBCXX_SIMD_INTRINSIC constexpr decltype(413,14176
      _M_skip_argument(438,15118
    template <size_t _Offset,457,15800
	first 462,16001
	first 475,16348
    template <size_t _Offset,478,16371
    template <typename _Fp,492,16936
      _M_apply_per_chunk(494,17034
    template <typename _R 537,18434
    template <typename _Fp,551,18917
    template <typename _Up,566,19445
    _M_set(596,20365
    _M_subscript_read(613,20892
    _M_subscript_write(622,21113
template <typename _Tp,634,21342
  __make_simd_tuple(636,21437
template <typename _Tp,639,21508
template <typename _Tp, typename _A0,639,21508
  __make_simd_tuple(641,21628
template <typename _Tp,644,21765
  __make_simd_tuple(646,21860
template <typename _Tp,649,21963
template <typename _Tp, typename _A0,649,21963
template <typename _Tp, typename _A0, typename _A1,649,21963
  __make_simd_tuple(651,22106
template <typename _Tp,658,22427
template <typename _Tp, size_t _Np,658,22427
template <typename _Tp, size_t _Np, typename _V,658,22427
template <typename _Tp, size_t _Np, typename _V, size_t _NV,658,22427
template <typename _Tp,662,22646
template <typename _Tp, size_t _Np,662,22646
	  size_t _Offset 663,22682
template <typename _Tp,743,25848
template <typename _Tp, size_t _Np,743,25848
template <typename _Tp, size_t _Np, typename _V,743,25848
template <typename _Tp, size_t _Np, typename _V, size_t _NV,743,25848
  __to_simd_tuple(745,25995
template <size_t,size_t767,26743
  using __to_tuple_helper 768,26775
template <typename _Tp,770,26809
template <typename _Tp, typename _A0,770,26809
template <typename _Tp, typename _A0, size_t _NOut,770,26809
template <typename _Tp, typename _A0, size_t _NOut, size_t _Np,770,26809
  __to_simd_tuple_impl(773,26957
template <typename _Tp,780,27195
template <typename _Tp, typename _A0,780,27195
template <typename _Tp, typename _A0, size_t _NOut,780,27195
template <typename _Tp, typename _A0, size_t _NOut, size_t _Np,780,27195
	  typename _R 781,27259
  __optimize_simd_tuple(794,27720
template <typename _Tp,797,27785
  __optimize_simd_tuple(799,27887
template <typename _Tp,802,27963
template <typename _Tp, typename _A0,802,27963
template <typename _Tp, typename _A0, typename _A1,802,27963
template <typename _Tp, typename _A0, typename _A1, typename... _Abis,802,27963
	  typename _R 803,28034
template <size_t _Offset 844,29741
template <size_t _Offset 849,29985
template <size_t _Offset 860,30404
template <size_t _Offset 865,30642
template <size_t _Offset 876,31075
template <size_t _Offset 881,31357
template <size_t _Offset 893,31871
template <size_t _Offset 898,32159
template <int _Index,911,32657
template <int _Index, int _Total,911,32657
template <int _Index, int _Total, int _Combine,911,32657
template <int _Index, int _Total, int _Combine, typename _Tp,911,32657
template <int _Index, int _Total, int _Combine, typename _Tp, typename _A0,911,32657
  __extract_part(913,32824
template <typename _Tp,983,35594
template <typename _Tp, int _Np,983,35594
template <typename _Tp, int _Np, typename _Tuple,983,35594
	  typename _Next 984,35644
template <typename _Tp,988,35794
  struct __fixed_size_storage989,35827
template <typename _Tp,992,35929
template <typename _Tp, int _Np,992,35929
template <typename _Tp, int _Np, typename... _As,992,35929
  struct __fixed_size_storage_builder<_Tp, _Np, _SimdTuple<_Tp, _As...>, _Next,993,35995
  { using type 995,36088
template <typename _Tp,997,36160
template <typename _Tp, int _Np,997,36160
template <typename _Tp, int _Np, typename... _As,997,36160
template <typename _Tp, int _Np, typename... _As, typename _Next,997,36160
  struct __fixed_size_storage_builder<_Tp, _Np, _SimdTuple<_Tp, _As...>, _Next,998,36239
    using type 1001,36342
template <typename _Tp,1007,36514
template <typename _Tp, bool 1007,36514
    operator _TT(operator _TT1014,36711
    operator _TT&(operator _TT&1018,36793
    operator _TT*(operator _TT*1026,36992
      operator simd<typename operator simd<typename1038,37309
      operator simd<typename operator simd<typename1043,37477
      operator simd<typename operator simd<typename1048,37687
  __autocvt_to_simd(_Tp &&) -> __autocvt_to_simd<__autocvt_to_simd1053,37856
    using _TT 1058,37978
    _Tp _M_data;1059,38017
    fixed_size_simd<_TT, 1> _M_fd;1060,38034
    constexpr __autocvt_to_simd(1063,38098
    ~__autocvt_to_simd(1066,38200
    operator fixed_size_simd<_TT, operator fixed_size_simd<_TT,1070,38303
    operator fixed_size_simd<_TT, operator fixed_size_simd<_TT,1074,38403
    operator fixed_size_simd<_TT, operator fixed_size_simd<_TT,1082,38621
template <int _Np,1093,38844
template <int _Np, typename 1093,38844
template <int _Np,1094,38925
template <int _Np, typename 1094,38925
  struct simd_abi::_Fixed1097,39049
    template <typename _Tp> static constexpr size_t _S_size 1099,39079
    template <typename _Tp> static constexpr size_t _S_full_size 1100,39146
    struct _IsValidAbiTag 1102,39245
      struct _IsValidSizeFor1105,39340
      struct _IsValid 1109,39466
      static constexpr bool _S_is_valid_v 1113,39605
    _S_masked(1118,39772
    _S_masked(1122,39909
    using _CommonImpl 1127,40001
    using _SimdImpl 1128,40047
    using _MaskImpl 1129,40094
    template <typename _Tp,1133,40173
    template <typename _Tp, bool 1133,40173
	struct _SimdBase1154,40822
	  _SimdBase(1159,41025
	  operator const operator const1164,41137
	  operator array<_Tp, operator array<_Tp,1168,41296
	struct _MaskBase 1182,41676
	struct _SimdCastType1186,41729
	  _SimdCastType(1192,41879
	  operator const operator const1195,41987
	  const _SimdMember& _M_data;1198,42058
	class _MaskCastType1203,42124
struct _CommonImplFixedSize1214,42250
  template <typename _Tp,1217,42298
    _S_store(1219,42381
template <int _Np,1232,42754
  struct _SimdImplFixedSize1233,42783
    using _MaskMember 1236,42840
      using _SimdMember 1239,42917
      static constexpr size_t _S_tuple_size 1242,43006
      using _Simd 1245,43114
      using _TypeTag 1248,43201
      _S_broadcast(1253,43345
    template <typename _Fp,1262,43575
      _S_generator(1264,43681
    template <typename _Tp,1278,44111
      _S_load(1280,44217
    template <typename _Tp,1289,44491
    template <typename _Tp, typename... _As,1289,44491
      _GLIBCXX_SIMD_INTRINSIC static _SimdTuple<_SimdTuple1290,44550
      _S_masked_load(1291,44611
    template <typename _Tp,1312,45462
      _S_store(1314,45556
    template <typename _Tp,1322,45845
    template <typename _Tp, typename... _As,1322,45845
      _S_masked_store(1324,45946
    template <typename _Tp,1342,46704
      _S_negate(1344,46791
    template <typename _Tp,1356,47130
      static constexpr inline _Tp _S_reduce(1357,47185
    template <typename _Tp,1432,49643
      _GLIBCXX_SIMD_INTRINSIC static constexpr _SimdTuple<_SimdTuple1433,49688
      _S_min(1434,49759
    template <typename _Tp,1443,50035
      _GLIBCXX_SIMD_INTRINSIC static constexpr _SimdTuple<_SimdTuple1444,50080
      _S_max(1445,50151
    template <typename _Tp,1455,50453
      _GLIBCXX_SIMD_INTRINSIC static constexpr _SimdTuple<_SimdTuple1456,50498
      _S_complement(1457,50569
    template <typename _Tp,1466,50834
      _GLIBCXX_SIMD_INTRINSIC static constexpr _SimdTuple<_SimdTuple1467,50879
      _S_unary_minus(1468,50950
#define _GLIBCXX_SIMD_FIXED_OP(1478,51224
#undef _GLIBCXX_SIMD_FIXED_OP1500,52595
    template <typename _Tp,1502,52626
      _GLIBCXX_SIMD_INTRINSIC static constexpr _SimdTuple<_SimdTuple1503,52671
      _S_bit_shift_left(1504,52742
    template <typename _Tp,1512,52996
      _GLIBCXX_SIMD_INTRINSIC static constexpr _SimdTuple<_SimdTuple1513,53041
      _S_bit_shift_right(1514,53112
#define _GLIBCXX_SIMD_APPLY_ON_TUPLE(1523,53383
#undef _GLIBCXX_SIMD_APPLY_ON_TUPLE1629,59040
    template <typename _Tp,1631,59077
      static inline _SimdTuple<_SimdTuple1632,59124
      _S_remquo(1633,59170
    template <typename _Tp,1643,59557
      static inline _SimdTuple<_SimdTuple1644,59602
      _S_frexp(1645,59646
#define _GLIBCXX_SIMD_TEST_ON_TUPLE_(1655,60023
#undef _GLIBCXX_SIMD_TEST_ON_TUPLE_1670,60940
      _S_increment(1675,61099
      _S_decrement(1685,61382
#define _GLIBCXX_SIMD_CMP_OPERATIONS(1694,61603
#undef _GLIBCXX_SIMD_CMP_OPERATIONS1716,62837
    template <typename _Tp,1719,62909
    template <typename _Tp, typename... _As,1719,62909
      _S_set(1721,63020
    template <typename _Tp,1725,63174
      _S_masked_assign(1727,63271
    template <typename _Tp,1741,63805
      _S_masked_assign(1743,63902
    template <typename _Op,1754,64277
    template <typename _Op, typename _Tp,1754,64277
      _S_masked_cassign(1756,64371
    template <typename _Op,1770,64910
    template <typename _Op, typename _Tp,1770,64910
      _S_masked_cassign(1772,65004
    template <template <typename> class _Op, typename _Tp,1783,65383
      static constexpr inline _SimdTuple<_SimdTuple1784,65459
      _S_masked_unary(1785,65513
template <int _Np,1799,65861
  struct _MaskImplFixedSize1800,65890
    using _Abi 1808,66152
    using _MaskMember 1810,66197
      using _FirstAbi 1813,66274
      using _FirstAbi = typename __fixed_size_storage_t<_Tp, _Np>::_FirstAbi;_FirstAbi1813,66274
      using _TypeTag 1816,66381
      _S_broadcast(1822,66529
      _S_load(1829,66727
      _S_to_bits(1852,67415
    template <typename _Tp,1862,67591
    template <typename _Tp, typename _Up,1862,67591
      _S_convert(1864,67708
      _S_from_bitmask(1874,67980
    _S_load(1879,68132
    _S_masked_load(1895,68747
    _S_store(1906,69075
    _S_masked_store(1916,69352
    _S_logical_and(1924,69669
    _S_logical_or(1928,69829
    _S_bit_not(1932,69988
    _S_bit_and(1936,70115
    _S_bit_or(1940,70271
    _S_bit_xor(1944,70426
    _S_set(1949,70610
    _S_masked_assign(1954,70774
    _S_masked_assign(1959,71022
      _S_all_of(1971,71289
      _S_any_of(1978,71480
      _S_none_of(1985,71672
      _S_some_of(1992,71866
      _S_popcount(2004,72155
      _S_find_first_set(2011,72357
      _S_find_last_set(2018,72588

/usr/include/c++/13/experimental/bits/simd_math.h,6450
#define _GLIBCXX_EXPERIMENTAL_SIMD_MATH_H_26,1123
template <typename _Tp,34,1264
  using _Samesize 35,1301
template <typename _DoubleR,38,1381
template <typename _DoubleR, typename _Tp,38,1381
template <typename _DoubleR,41,1468
template <typename _DoubleR, typename _Tp,41,1468
  using _Math_return_type_t 42,1526
template <typename _Tp,45,1616
  { using type 47,1701
template <typename _Tp,49,1739
  { using type 51,1822
template <typename _DoubleR,53,1865
template <typename _DoubleR, typename _Tp,53,1865
  struct _Math_return_type54,1923
  { using type 55,1950
  { using type = fixed_size_simd<_DoubleR, simd_size_v<simd_size_v55,1950
#define _GLIBCXX_SIMD_MATH_CALL_(59,2060
template <typename _Up,70,2721
template <typename _Up, typename _Tp,70,2721
template <typename _Tp,73,2806
    using type 76,2896
    static constexpr bool __needs_temporary_scalar 78,2971
    _GLIBCXX_SIMD_INTRINSIC static constexpr auto _S_data(80,3031
template <typename _Up,84,3135
template <typename _Up, typename _Tp,84,3135
    using type 88,3278
    static constexpr bool __needs_temporary_scalar 90,3379
    _GLIBCXX_SIMD_INTRINSIC static constexpr auto _S_data(92,3439
template <typename _Tp,96,3543
    using type 99,3632
    static constexpr bool __needs_temporary_scalar 101,3705
    _GLIBCXX_SIMD_INTRINSIC static constexpr decltype(103,3766
template <typename _Up,108,3889
template <typename _Up, typename _Tp,108,3889
  struct _Extra_argument_type109,3942
    using type 112,4015
    using type = fixed_size_simd<_Up, simd_size_v<simd_size_v112,4015
    static constexpr bool __needs_temporary_scalar 114,4114
    _GLIBCXX_SIMD_INTRINSIC static constexpr decltype(116,4175
#define _GLIBCXX_SIMD_MATH_CALL2_(123,4337
#define _GLIBCXX_SIMD_MATH_CALL3_(152,6431
  __cosSeries(194,9248
  __cosSeries(206,9650
  __sinSeries(224,10318
  __sinSeries(236,10706
template <int _Bits,254,11359
template <int _Bits, typename _Tp,254,11359
  __zero_low_bits(256,11451
template <typename _Tp,285,12429
  struct _Folded286,12468
    simd<simd288,12489
    simd<_Tp, _Abi> _M_x;288,12489
    rebind_simd_t<rebind_simd_t289,12515
    rebind_simd_t<int, simd<_Tp, _Abi>> _M_quadrant;289,12515
namespace __math_float 292,12574
inline constexpr float __pi_over_4 293,12599
inline constexpr float __2_over_pi 294,12660
inline constexpr float __pi_2_5bits0295,12721
inline constexpr float __pi_2_5bits0_rem297,12815
namespace __math_double 300,12930
inline constexpr double __pi_over_4 301,12956
inline constexpr double __2_over_pi 302,13024
inline constexpr double __pi_2 303,13092
  __fold_input(308,13266
  __fold_input(352,14829
template <typename _Tp,404,16531
  __extract_exponent_as_int(407,16634
template <typename ImplFun,422,17188
template <typename ImplFun, typename FallbackFun,422,17188
    -> decltype(426,17388
template <typename ImplFun,429,17508
template <typename ImplFun, typename FallbackFun,429,17508
template <typename ImplFun, typename FallbackFun, typename... _Args,429,17508
	  typename 430,17577
  __impl_or_fallback(439,17923
template <typename _Tp,466,18655
template <typename _Tp, typename _Abi,466,18655
template <typename _Tp, typename _Abi, typename 466,18655
  cos(507,20104
template <typename _Tp,512,20196
template <typename _Tp, typename _Abi,512,20196
template <typename _Tp, typename _Abi, typename 512,20196
  sin(553,21661
template <typename _Tp,573,22140
  __getexp(576,22227
template <typename _Tp,602,23451
  __getmant_avx512(605,23538
template <typename _Tp,644,25484
template <typename _Tp, typename _Abi,644,25484
template <typename _Tp, typename _Abi, typename 644,25484
template <typename _Tp,749,29498
template <typename _Tp, typename _Abi,749,29498
template <typename _Tp, typename _Abi, typename 749,29498
template <typename _Tp,824,32758
template <typename _Tp, typename _Abi,824,32758
template <typename _Tp, typename _Abi, typename 824,32758
template <typename _Tp,857,33594
  enable_if_t<!is_floating_point_v<_Tp> && is_signed_v<is_signed_v859,33663
  abs(860,33741
#define _GLIBCXX_SIMD_CVTING2(863,33845
#define _GLIBCXX_SIMD_CVTING3(878,34903
template <typename _R,927,38715
template <typename _R, typename _ToApply,927,38715
template <typename _R, typename _ToApply, typename _Tp,927,38715
  __fixed_size_apply(929,38818
template <typename _VV,941,39217
template <typename _VV, typename 941,39217
template <typename _Tp,1069,44042
  hypot(1071,44123
  template <typename _VV,1080,44358
  template <typename _VV, typename 1080,44358
  template <typename _Tp,1246,50401
  hypot(1248,50484
template <typename _Tp,1283,51414
template <typename _Tp, typename _Abi,1283,51414
template <typename _Tp, typename _Abi, typename 1283,51414
template <typename _Tp,1313,52546
template <typename _Tp, typename _Abi,1313,52546
	  typename _R 1314,52598
template <typename _Tp,1320,52828
template <typename _Tp, typename _Abi,1320,52828
	  typename _R 1321,52880
template <typename..., typename _Tp,1329,53146
  signbit(1332,53251
template <typename _Tp,1378,54632
template <typename _Tp, typename _Abi,1378,54632
template <typename _Tp, typename _Abi, typename 1378,54632
template <typename _Tp,1389,55097
template <typename _Tp, typename _Abi,1389,55097
template <typename _Tp, typename _Abi, typename 1389,55097
template <typename _Tp,1413,56066
template <typename _Tp, typename _Abi,1413,56066
template <typename _Tp, typename _Abi, typename 1413,56066
template <typename _Tp,1423,56442
template <typename _Tp, typename _Abi,1423,56442
template <typename _Tp, typename _Abi, typename 1423,56442
template <typename _Tp,1433,56821
template <typename _Tp, typename _Abi,1433,56821
template <typename _Tp, typename _Abi, typename 1433,56821
template <typename _Tp,1445,57240
template <typename _Tp, typename _Abi,1445,57240
template <typename _Tp, typename _Abi, typename 1445,57240
template <typename _Tp,1455,57625
template <typename _Tp, typename _Abi,1455,57625
template <typename _Tp, typename _Abi, typename 1455,57625
template <typename _Tp,1466,58102
template <typename _Tp, typename _Abi,1466,58102
template <typename _Tp, typename _Abi, typename 1466,58102
#undef _GLIBCXX_SIMD_CVTING21477,58497
#undef _GLIBCXX_SIMD_CVTING31478,58526
#undef _GLIBCXX_SIMD_MATH_CALL_1479,58555
#undef _GLIBCXX_SIMD_MATH_CALL2_1480,58587
#undef _GLIBCXX_SIMD_MATH_CALL3_1481,58620

/usr/include/c++/13/experimental/bits/simd_neon.h,1714
#define _GLIBCXX_EXPERIMENTAL_SIMD_NEON_H_26,1134
struct _CommonImplNeon 37,1369
  using _CommonImplBuiltin::_S_store;40,1433
template <typename _Abi,47,1513
  struct _SimdImplNeon 48,1548
    using _Base 50,1600
      using _MaskMember 53,1671
      static constexpr size_t _S_max_store_size 56,1769
    template <typename _Tp,59,1850
    template <typename _Tp, size_t _Np,59,1850
      static inline _SimdWrapper<_SimdWrapper60,1904
      _S_masked_load(61,1947
    template <typename _Tp,73,2292
      _S_masked_store_nocvt(75,2374
    template <typename _Tp,86,2650
      _S_reduce(88,2756
    template <typename _Tp,132,4341
    template <typename _Tp, typename _TVT 132,4341
    template <typename _TW,156,5050
    template <typename _TW, typename _TVT 156,5050
    template <typename _Tp,192,6165
      _GLIBCXX_SIMD_INTRINSIC static _SimdWrapper<_SimdWrapper193,6205
      _S_round(194,6265
    template <typename _Tp,216,6914
    template <typename _Tp, typename _TVT 216,6914
    template <typename _Tp,240,7624
    template <typename _Tp, typename _TVT 240,7624
struct _MaskImplNeonMixin265,8354
  using _Base 267,8382
  template <typename _Tp,269,8422
    _S_to_bits(271,8528
template <typename _Abi,393,11983
  struct _MaskImplNeon 394,12018
    using _MaskImplBuiltinMixin::_S_to_maskvector;396,12090
    using _MaskImplNeonMixin::_S_to_bits;397,12141
    using _Base 398,12183
    using _Base::_S_convert;399,12225
      _S_all_of(404,12346
      _S_any_of(424,12919
      _S_none_of(444,13493
      _GLIBCXX_SIMD_INTRINSIC static bool _S_some_of(461,13945
      _S_popcount(479,14480
      _S_find_first_set(512,15534
      _S_find_last_set(522,15807

/usr/include/c++/13/experimental/bits/simd_ppc.h,860
#define _GLIBCXX_EXPERIMENTAL_SIMD_PPC_H_26,1136
template <typename _Abi,38,1378
  struct _SimdImplPpc 39,1413
    using _Base 41,1464
    template <typename _Tp,49,1819
      _GLIBCXX_SIMD_INTRINSIC static constexpr _SimdWrapper<_Tp,_Tp50,1859
      _S_bit_shift_left(51,1929
    template <typename _Tp,60,2204
      _GLIBCXX_SIMD_INTRINSIC static constexpr _SimdWrapper<_SimdWrapper61,2244
      _S_bit_shift_left(62,2314
    template <typename _Tp,75,2608
      _GLIBCXX_SIMD_INTRINSIC static constexpr _SimdWrapper<_SimdWrapper76,2648
      _S_bit_shift_right(77,2718
    template <typename _Tp,97,3295
      _GLIBCXX_SIMD_INTRINSIC static constexpr _SimdWrapper<_SimdWrapper98,3335
      _S_bit_shift_right(99,3405
template <typename _Abi,120,3839
  struct _MaskImplPpc 121,3874
    using _Base 123,3925
      _S_popcount(128,4060

/usr/include/c++/13/experimental/bits/simd_scalar.h,4755
#define _GLIBCXX_EXPERIMENTAL_SIMD_SCALAR_H_26,1142
  _GLIBCXX_SIMD_INTRINSIC constexpr decltype(38,1553
struct simd_abi::_Scalar55,1937
    static constexpr size_t _S_size 58,1990
    static constexpr size_t _S_full_size 61,2058
    static constexpr bool _S_is_partial 64,2131
  struct _IsValidAbiTag 66,2181
    struct _IsValidSizeFor 69,2248
    struct _IsValid 72,2318
    static constexpr bool _S_is_valid_v 75,2394
  _S_masked(78,2507
  using _CommonImpl 81,2548
  using _SimdImpl 82,2589
  using _MaskImpl 83,2626
  template <typename _Tp,85,2664
  template <typename _Tp, bool 85,2664
      struct _SimdCastType 101,3207
      struct _MaskCastType 102,3265
      struct _SimdBase 103,3323
      struct _MaskBase 104,3350
struct _CommonImplScalar110,3420
    _S_store(115,3531
  template <size_t _Np,120,3669
    _S_store_bool_array(122,3760
struct _SimdImplScalar133,3980
  using abi_type 136,4028
    using _TypeTag 139,4092
    _S_broadcast(144,4218
  template <typename _Fp,148,4297
    _S_generator(150,4386
  template <typename _Tp,154,4492
    _S_load(156,4581
  template <typename _Tp,160,4704
    _S_masked_load(162,4793
  template <typename _Tp,170,4970
    _S_store(172,5060
  template <typename _Tp,176,5187
    _S_masked_store(178,5277
    _S_negate(184,5479
  template <typename _Tp,188,5553
    _S_reduce(190,5655
    _S_min(196,5863
    _S_max(201,6015
    _S_complement(207,6191
    _S_unary_minus(213,6367
    _S_plus(219,6550
    _S_minus(227,6781
    _S_multiplies(235,7013
    _S_divides(243,7250
    _S_modulus(251,7484
    _S_bit_and(259,7718
    _S_bit_or(273,8117
    _S_bit_xor(287,8515
    _S_bit_shift_left(301,8914
    _S_bit_shift_right(306,9106
    using _ST 312,9322
    _S_acos(316,9439
    _S_asin(321,9557
    _S_atan(326,9675
    _S_cos(331,9793
    _S_sin(336,9909
    _S_tan(341,10025
    _S_acosh(346,10141
    _S_asinh(351,10261
    _S_atanh(356,10381
    _S_cosh(361,10501
    _S_sinh(366,10619
    _S_tanh(371,10737
    _S_atan2(376,10855
    _S_exp(381,10989
    _S_exp2(386,11105
    _S_expm1(391,11223
    _S_log(396,11343
    _S_log10(401,11459
    _S_log1p(406,11579
    _S_log2(411,11699
    _S_logb(416,11817
    _S_ilogb(421,11940
    _S_pow(426,12062
    _S_abs(431,12192
    _S_fabs(436,12308
    _S_sqrt(441,12426
    _S_cbrt(446,12544
    _S_erf(451,12662
    _S_erfc(456,12778
    _S_lgamma(461,12896
    _S_tgamma(466,13018
    _S_trunc(471,13140
    _S_floor(476,13260
    _S_ceil(481,13380
    _S_nearbyint(486,13498
    _S_rint(491,13626
    _S_lrint(496,13750
    _S_llrint(501,13883
    _S_round(506,14007
    _S_lround(511,14133
    _S_llround(516,14268
    _S_ldexp(521,14394
    _S_scalbn(526,14539
    _S_scalbln(531,14686
    _S_fmod(536,14836
    _S_remainder(541,14968
    _S_nextafter(546,15110
    _S_fdim(551,15252
    _S_fmax(556,15384
    _S_fmin(561,15516
    _S_fma(566,15648
    _S_remquo(571,15792
    _S_fpclassify(576,15971
    _S_isfinite(581,16114
    _S_isinf(586,16251
    _S_isnan(591,16382
    _S_isnormal(596,16513
    _S_signbit(601,16650
    _S_isgreater(606,16785
    _S_isgreaterequal(611,16938
    _S_isless(616,17101
    _S_islessequal(621,17248
    _S_islessgreater(626,17405
    _S_isunordered(631,17566
    _S_increment(637,17760
    _S_decrement(642,17879
    _S_equal_to(649,18018
    _S_not_equal_to(654,18156
    _S_less(659,18298
    _S_less_equal(664,18431
  template <typename _Tp,668,18528
    _S_set(670,18618
    _S_masked_assign(679,18877
  template <typename _Op,683,18992
    _S_masked_cassign(685,19082
    _S_masked_unary(691,19356
struct _MaskImplScalar699,19514
    using _TypeTag 703,19587
    _S_broadcast(709,19718
    _S_load(716,19864
  _S_to_bits(722,20014
  template <typename,typename727,20085
    _S_convert(729,20174
  template <typename,typename732,20242
  template <typename, typename _Up,732,20242
    _S_convert(734,20344
    _S_from_bitmask(741,20521
  _S_masked_load(746,20694
  _S_store(755,20904
  _S_masked_store(760,21044
  _S_logical_and(768,21248
  _S_logical_or(772,21359
  _S_bit_not(776,21469
  _S_bit_and(780,21560
  _S_bit_or(784,21667
  _S_bit_xor(788,21773
  _S_set(793,21913
  _S_masked_assign(801,22114
  template <typename _Tp,809,22240
    _S_all_of(811,22331
  template <typename _Tp,816,22428
    _S_any_of(818,22519
  template <typename _Tp,823,22617
    _S_none_of(825,22708
  template <typename _Tp,830,22808
    _S_some_of(832,22899
  template <typename _Tp,837,22989
    _S_popcount(839,23079
  template <typename _Tp,844,23186
    _S_find_first_set(846,23276
  template <typename _Tp,851,23374
    _S_find_last_set(853,23464

/usr/include/c++/13/experimental/bits/simd_x86.h,6709
#define _GLIBCXX_EXPERIMENTAL_SIMD_X86_H_26,1132
template <typename _Tp,40,1543
  __to_masktype(42,1658
template <typename _TV,45,1794
	  typename _TVT46,1818
template <typename _Ap,55,2177
template <typename _Ap, typename _Bp,55,2177
template <typename _Ap, typename _Bp, typename _Tp 55,2177
template <typename _Tp,118,5487
template <typename _Tp, typename _TVT 118,5487
template <typename _Tp,161,6927
template <typename _Tp, typename _TVT 161,6927
template <typename _TI,184,7643
template <typename _TI, typename _TVT 184,7643
template <typename _TI,218,8885
template <typename _TI, typename _TVT 218,8885
template <typename _TI,250,10016
template <typename _TI, typename _TVT 250,10016
template <typename _Tp,286,11398
template <typename _Tp, typename _TVT 286,11398
  __maskload_epi32(320,12473
  __maskload_epi64(332,12752
  __maskload_ps(344,13031
  __maskload_pd(356,13300
template <size_t _Np,367,13513
template <size_t _Np, typename _Tp,367,13513
  __movm(369,13604
template <typename _Tp,418,15079
  __is_sse_ps(420,15132
template <typename _Tp,427,15258
  __is_sse_pd(429,15311
template <typename _Tp,436,15439
  __is_avx_ps(438,15492
template <typename _Tp,445,15618
  __is_avx_pd(447,15671
template <typename _Tp,454,15798
  __is_avx512_ps(456,15851
template <typename _Tp,463,15984
  __is_avx512_pd(465,16037
struct _CommonImplX86 476,16227
  template <typename _From,480,16351
  template <typename _From, typename _To,480,16351
    _S_converts_via_decomposition(482,16435
  template <typename _From,503,17196
  template <typename _From, typename _To,503,17196
    static inline constexpr bool __converts_via_decomposition_v504,17254
      = _S_converts_via_decomposition<_From, _To,505,17318
  using _CommonImplBuiltin::_S_store;510,17415
  template <typename _Tp,512,17454
    _S_store(514,17542
  template <size_t _Np,582,19716
    _S_store_bool_array(584,19807
  template <typename _Kp,669,22885
    _S_blend_avx512(671,22964
    _S_blend_intrin(754,26424
	_GLIBCXX_SIMD_INTRINSIC __m128 operator()(operator()759,26582
	_GLIBCXX_SIMD_INTRINSIC __m128d operator()(operator()764,26740
	_GLIBCXX_SIMD_INTRINSIC __m128i operator()(operator()769,26903
	_GLIBCXX_SIMD_INTRINSIC __m256 operator()(operator()777,27205
	_GLIBCXX_SIMD_INTRINSIC __m256d operator()(operator()782,27366
	_GLIBCXX_SIMD_INTRINSIC __m256i operator()(operator()787,27532
  template <typename _Tp,809,28220
    _GLIBCXX_SIMD_INTRINSIC static constexpr _SimdWrapper<_SimdWrapper810,28258
    _S_blend(811,28326
  template <typename _Tp,835,29277
    _GLIBCXX_SIMD_INTRINSIC static constexpr _SimdWrapper<_SimdWrapper836,29315
    _S_blend(837,29383
template <typename _Abi,875,30604
  struct _SimdImplX86 876,30639
    using _Base 878,30690
      using _MaskMember 881,30761
      static constexpr size_t _S_full_size 884,30859
      static constexpr size_t _S_size 887,30967
      static constexpr size_t _S_max_store_size890,31065
    using _MaskImpl 895,31261
    template <typename _Tp,898,31336
    template <typename _Tp, size_t _Np,898,31336
      static inline _SimdWrapper<_SimdWrapper899,31390
      _S_masked_load(900,31433
    template <typename _Tp,1083,38453
      _S_masked_store_nocvt(1085,38535
    template <typename _Tp,1209,43102
      _S_masked_store_nocvt(1211,43184
    template <typename _Tp,1276,46033
    template <typename _Tp, size_t _Np,1276,46033
      _S_masked_store(1278,46129
    template <typename _V,1351,49486
    template <typename _V, typename _VVT 1351,49486
    template <typename _Tp,1431,52647
      _GLIBCXX_SIMD_INTRINSIC static constexpr _SimdWrapper<_SimdWrapper1432,52687
      _S_divides(1433,52757
    using _Base::_S_divides;1532,56220
    template <typename _Tp,1537,56326
      _GLIBCXX_SIMD_INTRINSIC static constexpr _SimdWrapper<_SimdWrapper1538,56366
      _S_modulus(1539,56436
    template <typename _Tp,1579,58414
    template <typename _Tp, typename _TVT 1579,58414
    template <typename _Tp,1684,61711
    template <typename _Tp, typename _TVT 1684,61711
    template <typename _Tp, typename _TVT 1853,68442
    template <typename _Tp, typename _TVT 1903,70103
    using _Base::_S_abs;2642,101746
    template <typename _Tp, typename _TVT 2792,106981
    template <typename _Tp, typename _TVT 2818,107977
#define _GLIBCXX_SIMD_MASK_SUB(3551,138305
#undef _GLIBCXX_SIMD_MASK_SUB3567,139133
#define _GLIBCXX_SIMD_MASK_SUB(3571,139191
#undef _GLIBCXX_SIMD_MASK_SUB3582,139811
struct _MaskImplX86Mixin3593,139985
template <typename _Abi,4377,168731
  struct _MaskImplX86 4378,168766
    using _MaskImplX86Mixin::_S_to_bits;4380,168836
    using _MaskImplX86Mixin::_S_to_maskvector;4381,168877
    using _MaskImplBuiltin<_Abi>::_S_convert;_S_convert4382,168924
      using _SimdMember 4386,169023
      using _MaskMember 4389,169130
      static constexpr size_t _S_size 4392,169227
    using _Base 4394,169292
      _S_broadcast(4400,169462
      _S_load(4413,169809
    template <size_t _Np,4577,175098
      _S_from_bitmask(4579,175192
    template <typename _Tp,4590,175504
      static inline _SimdWrapper<_SimdWrapper4591,175544
      _S_masked_load(4592,175587
    template <typename _Tp,4695,179214
      _S_store(4697,179306
    template <typename _Tp,4831,183345
      _S_masked_store(4833,183410
    template <typename _Tp,4861,184464
      _GLIBCXX_SIMD_INTRINSIC static constexpr _SimdWrapper<_SimdWrapper4862,184504
      _S_logical_and(4863,184574
    template <typename _Tp,4884,185320
      _GLIBCXX_SIMD_INTRINSIC static constexpr _SimdWrapper<_SimdWrapper4885,185360
      _S_logical_or(4886,185430
    template <typename _Tp,4907,186170
      _GLIBCXX_SIMD_INTRINSIC static constexpr _SimdWrapper<_SimdWrapper4908,186210
      _S_bit_not(4909,186280
    template <typename _Tp,4934,187149
      _GLIBCXX_SIMD_INTRINSIC static constexpr _SimdWrapper<_SimdWrapper4935,187189
      _S_bit_and(4936,187259
    template <typename _Tp,4957,187997
      _GLIBCXX_SIMD_INTRINSIC static constexpr _SimdWrapper<_SimdWrapper4958,188037
      _S_bit_or(4959,188107
    template <typename _Tp,4980,188839
      _GLIBCXX_SIMD_INTRINSIC static constexpr _SimdWrapper<_SimdWrapper4981,188879
      _S_bit_xor(4982,188949
      _S_masked_assign(5007,189793
      _S_masked_assign(5016,190086
    using _MaskImplBuiltin<_Abi>::_S_masked_assign;_S_masked_assign5025,190323
      _S_all_of(5031,190477
      _S_any_of(5088,192387
      _S_none_of(5124,193550
      _S_some_of(5160,194703
      _S_popcount(5202,196009
      _S_find_first_set(5300,198960
      _S_find_last_set(5312,199273

/usr/include/c++/13/experimental/bits/simd_x86_conversions.h,163
#define _GLIBCXX_EXPERIMENTAL_SIMD_X86_CONVERSIONS_H26,1147
template <typename _To,32,1280
template <typename _To, typename _V,32,1280
  __convert_x86(34,1365

/usr/include/c++/13/experimental/bits/string_view.tcc,98
#define _GLIBCXX_EXPERIMENTAL_STRING_VIEW_TCC 35,1405
namespace std _GLIBCXX_VISIBILITY(41,1509

/usr/include/c++/13/experimental/algorithm,139
#define _GLIBCXX_EXPERIMENTAL_ALGORITHM 31,1220
namespace std _GLIBCXX_VISIBILITY(43,1486
#define __cpp_lib_experimental_sample 57,1851

/usr/include/c++/13/experimental/any,1937
#define _GLIBCXX_EXPERIMENTAL_ANY 31,1202
namespace std _GLIBCXX_VISIBILITY(45,1491
#define __cpp_lib_experimental_any 63,1862
  class bad_any_cast 69,2003
    virtual const char* what(72,2056
  class any92,2500
    union _Storage95,2593
      void* _M_ptr;104,2887
      aligned_storage<sizeof(sizeof105,2907
      aligned_storage<sizeof(_M_ptr), alignof(void*)>::type _M_buffer;105,2907
    template<typename _Tp,108,2986
				       _Manager_internal<_Manager_internal121,3525
    template<typename _Tp,124,3597
      using _Decay = enable_if_t<!is_same<_Decayed, any>::value,value125,3658
    any(131,3826
    any(134,3929
    any(151,4290
    template <typename _ValueType,164,4561
              typename enable_if<enable_if166,4669
    template <typename _ValueType,177,5135
              typename enable_if<!is_constructible<_Tp, _ValueType&&>::value,value179,5243
    ~any(190,5653
    any& operator=(operator=195,5740
    any& operator=(operator=206,5971
      enable_if_t<!is_same<any, decay_t<_ValueType>>::value,value222,6307
      operator=(operator=223,6374
    void clear(232,6559
    void swap(242,6742
    _GLIBCXX_NODISCARD bool empty(274,7426
    const type_info& type(278,7603
      static constexpr bool __is_valid_cast(289,7836
    enum _Op 293,7972
	_Op_access,294,7987
	_Op_access, _Op_get_type_info,294,7987
	_Op_access, _Op_get_type_info, _Op_clone,294,7987
	_Op_access, _Op_get_type_info, _Op_clone, _Op_destroy,294,7987
	_Op_access, _Op_get_type_info, _Op_clone, _Op_destroy, _Op_xfer294,7987
    union _Arg297,8060
	void* _M_obj;299,8081
	const std::type_info* _M_typeinfo;300,8096
	any* _M_any;301,8132
    _Storage _M_storage;305,8202
      struct _Manager_internal313,8417
	  _S_create(320,8566
      struct _Manager_external329,8798
	  _S_create(336,8947
    struct any::_Manager_internal<any::_Manager_internal554,15791
      _S_manage(557,15859

/usr/include/c++/13/experimental/array,219
#define _GLIBCXX_EXPERIMENTAL_ARRAY 31,1208
namespace std _GLIBCXX_VISIBILITY(42,1428
#define __cpp_lib_experimental_make_array 50,1567
  struct __make_array_elem62,1892
      struct __is_reference_wrapper 72,2081

/usr/include/c++/13/experimental/buffer,2169
#define _GLIBCXX_EXPERIMENTAL_BUFFER 31,1214
namespace std _GLIBCXX_VISIBILITY(47,1549
  enum class stream_errc 61,1739
    eof 62,1791
    not_found 63,1804
    struct __cat 68,1902
      const char* name(70,1942
      std::string message(72,2004
      virtual void __message(81,2201
  class mutable_buffer95,2589
    mutable_buffer(99,2647
    mutable_buffer(101,2705
    void* data(105,2810
    size_t size(106,2862
    void*	_M_data;109,2927
    size_t	_M_size;110,2946
  class const_buffer113,2972
    const_buffer(117,3028
    const_buffer(119,3084
    const_buffer(122,3177
    const void* data(126,3298
    size_t size(127,3356
    const void*	_M_data;130,3421
    size_t	_M_size;131,3446
    struct is_mutable_buffer_sequence205,5345
    struct is_const_buffer_sequence210,5472
    struct is_dynamic_buffer 249,6846
  operator+(326,9278
  operator+(334,9492
  operator+(338,9599
  operator+(346,9815
    class __dynamic_buffer_base489,14776
      __dynamic_buffer_base(498,14979
      __dynamic_buffer_base(502,15121
      size_t size(509,15417
      size_t max_size(510,15472
      size_t capacity(511,15535
      data(514,15630
      prepare(518,15733
      commit(528,15966
      consume(535,16096
      _Sequence&	_M_seq;543,16260
      size_t		_M_size;544,16285
      const size_t	_M_max_size;545,16308
    class dynamic_vector_buffer549,16394
      using __dynamic_buffer_base<__dynamic_buffer_base553,16504
      using __dynamic_buffer_base<vector<_Tp, _Allocator>>::__dynamic_buffer_base;__dynamic_buffer_base553,16504
    class dynamic_string_buffer557,16662
      using __dynamic_buffer_base<__dynamic_buffer_base561,16790
	__dynamic_buffer_base;562,16869
  class transfer_all588,17885
    size_t operator()(operator()591,17920
  class transfer_at_least595,18019
    explicit transfer_at_least(598,18059
    size_t operator()(operator()600,18125
    size_t _M_minimum;604,18267
  class transfer_exactly607,18296
    explicit transfer_exactly(610,18335
    size_t operator()(operator()612,18398
    size_t _M_exact;619,18584
    struct is_error_code_enum<is_error_code_enum886,28598

/usr/include/c++/13/experimental/chrono,89
#define _GLIBCXX_EXPERIMENTAL_CHRONO 35,1283
namespace std _GLIBCXX_VISIBILITY(46,1555

/usr/include/c++/13/experimental/contract,786
#define _GLIBCXX_CONTRACT 31,1146
namespace std _GLIBCXX_VISIBILITY(40,1273
  enum class contract_violation_continuation_mode 47,1393
    never_continue,48,1445
    never_continue, maybe_continue48,1445
  class contract_violation 51,1486
    const char* _M_file;52,1515
    const char* _M_function;53,1540
    const char* _M_comment;54,1569
    const char* _M_level;55,1597
    const char* _M_role;56,1623
    uint_least32_t _M_line;57,1648
    signed char _M_continue;58,1676
    uint_least32_t line_number(61,1733
    string_view file_name(62,1801
    string_view function_name(63,1864
    string_view comment(64,1935
    string_view assertion_level(65,1999
    string_view assertion_role(67,2087
    contract_violation_continuation_mode continuation_mode(68,2155

/usr/include/c++/13/experimental/deque,113
#define _GLIBCXX_EXPERIMENTAL_DEQUE 31,1208
namespace std _GLIBCXX_VISIBILITY(43,1453
  namespace pmr 67,2071

/usr/include/c++/13/experimental/executor,8709
#define _GLIBCXX_EXPERIMENTAL_EXECUTOR 31,1220
namespace std _GLIBCXX_VISIBILITY(52,1669
  enum class fork_event 126,3887
  enum class fork_event { prepare,126,3887
  enum class fork_event { prepare, parent,126,3887
  enum class fork_event { prepare, parent, child 126,3887
  class service_already_exists 131,4029
    service_already_exists(136,4194
  struct executor_arg_t 141,4319
  operator==(operator==286,9221
  operator!=(operator!=289,9314
    operator!=(operator!=366,11691
    class async_result370,11866
      explicit async_result(376,11996
      return_type get(380,12165
    class async_completion384,12259
	is_same<_CompletionToken, completion_handler_type>::value,value395,12535
      async_completion(401,12677
      __handler_type	completion_handler;409,12953
      __result_type	result;410,12994
  class execution_context414,13031
    class service417,13071
      service(423,13163
      virtual ~service(428,13324
      execution_context& context(432,13412
      virtual void notify_fork(438,13573
      execution_context& _M_context;441,13659
    execution_context(446,13740
    virtual ~execution_context(451,13897
    notify_fork(460,14025
    shutdown(473,14384
    destroy(486,14618
      _S_deleter(497,14790
    struct _ServicePtr499,14866
	_ServicePtr(503,14939
      std::unique_ptr<std::unique_ptr506,15031
      std::unique_ptr<service, void(*)(service*)> _M_ptr;506,15031
      bool _M_active;507,15089
    struct mutex_type513,15195
      void lock(515,15223
      void unlock(516,15251
    mutable mutex_type _M_mutex;519,15295
    std::list<_ServicePtr> _M_services;522,15393
    template<typename _Service,524,15434
      _M_add_svc(526,15500
      _S_key(537,15778
    std::unordered_map<std::unordered_map539,15850
    std::unordered_map<__key_type, service*> _M_keys;539,15850
    template<typename _Service,545,16019
    struct is_executor 642,19390
    struct uses_executor 659,19910
    class executor_binder666,20156
      struct __use_exec 668,20188
      executor_binder(678,20356
      : executor_binder(__use_exec{}, std::move(move679,20410
      template<typename _Up,685,20591
	executor_binder(686,20645
	: executor_binder(__use_exec{}, __other.get(get687,20715
      template<typename _Up,690,20793
	executor_binder(691,20847
	: executor_binder(__use_exec{}, std::move(move692,20912
      template<typename _Up,696,21006
	executor_binder(697,21060
	: executor_binder(__use_exec{}, __other.get(get699,21172
      template<typename _Up,702,21232
	executor_binder(703,21286
	: executor_binder(__use_exec{}, std::move(move705,21393
      _Tp& get(712,21525
      const _Tp& get(713,21573
      executor_type get_executor(714,21633
	operator()(operator()720,21802
	operator()(operator()725,21968
		   is_constructible<is_constructible732,22180
      template<typename _Up,734,22242
      template<typename _Up, typename _Exec,734,22242
	  _M_target(738,22439
      template<typename _Up,741,22503
      template<typename _Up, typename _Exec,741,22503
	  _M_target(745,22706
      _Executor	_M_ex;748,22749
      _Tp	_M_target;749,22772
    class executor_work_guard799,24281
      executor_work_guard(809,24439
      executor_work_guard(813,24572
      executor_work_guard(820,24757
      ~executor_work_guard(826,24990
      executor_type get_executor(834,25120
      bool owns_work(836,25189
      void reset(840,25289
      _Executor	_M_ex;848,25408
      bool	_M_owns;849,25431
  class system_context 853,25460
    ~system_context(866,25766
    void stop(876,25908
    bool stopped(883,26033
    void join(889,26150
    struct __tag 898,26270
    system_context(899,26320
    struct thread902,26381
      bool joinable(904,26405
      void join(905,26451
    struct condition_variable907,26480
      void notify_all(909,26516
    thread			_M_thread;913,26559
    mutable mutex_type		_M_mtx;914,26583
    condition_variable		_M_cv;915,26652
    _M_run(921,26791
    _M_post(941,27130
    _S_get(957,27574
  class system_executor964,27676
    system_executor(969,27743
    context(972,27790
    void on_work_started(974,27857
    void on_work_finished(975,27903
    template<typename _Func,977,27951
      dispatch(979,28013
    template<typename _Func,982,28126
      post(984,28188
    template<typename _Func,989,28342
      defer(991,28404
  class bad_executor 999,28597
    virtual const char* what(1001,28646
  class executor1013,28878
    executor(1023,29088
    template<typename _Executor,1027,29221
    template<typename _Executor, typename _ProtoAlloc,1033,29431
    operator=(operator=1044,29868
      operator=(operator=1052,30011
    swap(1063,30178
    template<typename _Executor,1066,30259
      assign(1068,30320
    context(1074,30488
    on_work_started(1081,30611
    on_work_finished(1088,30750
    template<typename _Func,1094,30882
      dispatch(1096,30939
    template<typename _Func,1104,31174
      post(1106,31231
    template<typename _Func,1114,31454
      defer(1116,31511
    explicit operator bool(operator bool1126,31764
    target_type(1133,31922
      target(1143,32139
      target(1160,32537
    struct _Tgt1176,32921
      _Func* _M_func;1189,33519
      struct _Tgt1 1193,33618
	_Tgt1(1196,33662
	on_work_started(1201,33745
	on_work_finished(1205,33825
	context(1209,33921
	dispatch(1213,33992
	post(1217,34107
	defer(1221,34214
	target_type(1225,34330
	target(1235,34454
	_M_equals(1245,34649
	_Ex _M_ex 1254,34849
	_S_func(1257,34902
    template<typename _Ex,1272,35185
      struct _Tgt2 1273,35229
	_Tgt2(1276,35279
	dispatch(1280,35374
	post(1284,35486
	defer(1288,35590
	_Alloc _M_alloc 1291,35690
    template<typename _Ex,1296,35831
      struct _Tgt2<_Ex, std::allocator<_Tp>> : _Tgt1<_Tgt11297,35872
    operator==(operator==1301,35958
    shared_ptr<_Tgt> _M_target;1314,36309
  template<> struct is_executor<is_executor1317,36347
  operator==(operator==1321,36448
  operator==(operator==1325,36536
  operator!=(operator!=1329,36624
  operator!=(operator!=1333,36731
  operator!=(operator!=1337,36824
    struct __dispatcher1345,37055
      __dispatcher(1348,37100
      void operator()(operator()1352,37218
      _CompletionHandler _M_h;1359,37384
    class strand1478,41621
      explicit strand(1489,41793
	strand(1492,41907
      strand(1495,42012
      strand(1498,42131
	strand(1503,42308
	strand(1507,42473
      operator=(operator=1512,42632
      operator=(operator=1524,42913
	operator=(operator=1536,43213
	operator=(operator=1549,43543
      ~strand(1559,43806
      get_inner_executor(1568,43986
      running_in_this_thread(1572,44070
      context(1576,44195
      void on_work_started(1579,44267
      void on_work_finished(1580,44346
      template<typename _Func,1582,44428
	dispatch(1584,44482
      template<typename _Func,1592,44669
      template<typename _Func,1596,44777
	defer(1598,44831
      operator==(operator==1603,44950
      struct _State1607,45090
	running_in_this_thread(1611,45159
	std::thread::id _M_running_on;1614,45258
	bool running_in_this_thread(1616,45296
      shared_ptr<_State> _M_state;1619,45366
      _Executor _M_inner_ex;1620,45401
    struct __use_future_ct1627,45595
      std::tuple<std::tuple1629,45628
      std::tuple<_Func, _Alloc> _M_t;1629,45628
	operator()(operator()1663,46514
    class use_future_t<use_future_t1674,46756
      use_future_t(1684,46996
	rebind(1688,47117
      allocator_type get_allocator(1691,47225
	operator()(operator()1695,47330
    struct __use_future_ch1712,47899
	__use_future_ch(1716,47974
	  _M_promise{_M_promise1718,48082
	__use_future_ch(1723,48170
      operator()(operator()1728,48294
      future<__result> get_future(1746,48652
    private:private1748,48725
      _Func _M_f;1752,48824
      mutable promise<__result> _M_promise;1753,48842
    struct __use_future_ex1779,49670
      __use_future_ex(1782,49737
      template<typename _Fn,1786,49842
	dispatch(1788,49894
      template<typename _Fn,1804,50189
	post(1806,50241
      template<typename _Fn,1822,50528
	defer(1824,50580
      tuple<promise<_Result>&, _Executor> _M_t;1841,50882
	struct __is_error_result 1864,51578
	struct _Type<_Type1885,52160
	  std::promise<void> _M_promise;1887,52187
	  operator()(operator()1890,52230
	    operator()(operator()1904,52477
	    operator()(operator()1921,52819
	    operator()(operator()1935,53154
	    operator()(operator()1954,53628
	    operator()(operator()1971,54093
    struct uses_allocator<uses_allocator2047,56128

/usr/include/c++/13/experimental/filesystem,101
#define _GLIBCXX_EXPERIMENTAL_FILESYSTEM 31,1226
#define __cpp_lib_experimental_filesystem 44,1551

/usr/include/c++/13/experimental/forward_list,120
#define _GLIBCXX_EXPERIMENTAL_FORWARD_LIST 31,1229
namespace std _GLIBCXX_VISIBILITY(42,1467
  namespace pmr 65,2120

/usr/include/c++/13/experimental/functional,931
#define _GLIBCXX_EXPERIMENTAL_FUNCTIONAL 31,1223
namespace std _GLIBCXX_VISIBILITY(51,1678
#define __cpp_lib_experimental_boyer_moore_searching 69,2166
	operator()(operator()85,2645
    struct __boyer_moore_map_base97,3008
	__boyer_moore_map_base(100,3081
      _M_lookup(112,3429
      _M_pred(121,3638
      _GLIBCXX_STD_C::unordered_map<_GLIBCXX_STD_C::unordered_map123,3694
      _GLIBCXX_STD_C::unordered_map<_Key, _Tp, _Hash, _Pred> _M_bad_char;123,3694
    struct __boyer_moore_array_base127,3830
      template<typename _RAIter,129,3872
	__boyer_moore_array_base(130,3923
	_M_lookup(149,4472
      _M_pred(158,4709
      std::tuple<std::tuple160,4769
      std::tuple<std::array<_Tp, _Len>, _Pred> _M_bad_char;160,4769
	operator()(operator()250,7753
    operator()(operator()341,11178
inline namespace fundamentals_v2367,11843
#define __cpp_lib_experimental_not_fn 369,11878
    not_fn(374,12010

/usr/include/c++/13/experimental/internet,11241
#define _GLIBCXX_EXPERIMENTAL_INTERNET31,1220
namespace std _GLIBCXX_VISIBILITY(71,2233
  enum class resolver_errc 90,2491
    host_not_found 92,2555
    host_not_found_try_again 93,2588
    service_not_found 94,2630
    struct __cat 107,3152
      const char* name(109,3192
      std::string message(110,3255
      virtual void __message(117,3427
  struct v4_mapped_t 167,4876
  class address_v4173,4970
    struct bytes_type 179,5056
	bytes_type(183,5162
    constexpr address_v4(195,5432
    address_v4(200,5567
    address_v4(210,5828
    constexpr bool is_unspecified(222,6138
    is_loopback(225,6236
    is_multicast(229,6344
    to_bytes(233,6459
    to_uint(249,6782
    static constexpr address_v4 any(280,7721
    address_v4 loopback(283,7815
    address_v4 broadcast(286,7907
    static constexpr uint16_t _S_hton_16(295,8185
    static constexpr uint16_t _S_ntoh_16(296,8256
    static constexpr uint32_t _S_hton_32(297,8327
    static constexpr uint32_t _S_ntoh_32(298,8398
    _S_hton_16(301,8505
    _S_ntoh_16(304,8600
    _S_hton_32(307,8695
    _S_ntoh_32(310,8790
    in_addr_t _M_addr;314,8895
    uint32_t _M_addr;316,8946
  class address_v6321,9004
    struct bytes_type 325,9051
	bytes_type(329,9158
    constexpr address_v6(335,9282
    address_v6(340,9434
    void scope_id(348,9663
    constexpr scope_id_type scope_id(350,9735
    is_unspecified(353,9833
    is_loopback(362,10018
    is_multicast(371,10224
    is_link_local(374,10310
    is_site_local(378,10433
    is_v4_mapped(382,10556
    is_multicast_node_local(391,10877
    is_multicast_link_local(395,11005
    is_multicast_site_local(399,11133
    is_multicast_org_local(403,11261
    is_multicast_global(407,11388
    constexpr bytes_type to_bytes(410,11493
    any(446,12438
    loopback(452,12519
    bytes_type _M_bytes;467,12884
    scope_id_type _M_scope_id;468,12909
  class bad_address_cast 472,13025
    bad_address_cast(475,13082
    const char* what(477,13110
  class address481,13216
    constexpr address(485,13267
    address(490,13386
    address(499,13631
    address(502,13723
    operator=(operator=506,13834
    operator=(operator=516,14002
    operator=(operator=524,14168
    constexpr bool is_v4(533,14339
    constexpr bool is_v6(534,14402
    to_v4(537,14492
    to_v6(545,14634
    is_unspecified(553,14770
    is_loopback(557,14901
    is_multicast(561,15023
      address_v4 _M_v4;584,15638
      address_v6 _M_v6;585,15662
      bool	 _M_uninit;586,15686
    bool _M_is_v4;588,15716
  operator==(operator==596,15806
  operator!=(operator!=600,15937
  operator< 604,16051
  operator> 608,16181
  operator<=(operator<=612,16291
  operator>=(operator>=616,16404
  operator==(operator==626,16575
  operator!=(operator!=637,16887
  operator< 641,17001
  operator> 652,17328
  operator<=(operator<=656,17438
  operator>=(operator>=660,17551
  operator==(operator==670,17719
  operator!=(operator!=678,17944
  operator< 682,18052
  operator> 690,18274
  operator<=(operator<=694,18378
  operator>=(operator>=698,18485
    operator<<(1004,26085
    operator<<(1010,26313
    operator<<(1016,26544
  template<> class basic_address_iterator<basic_address_iterator1021,26728
    basic_address_iterator(1032,27036
    reference operator*(1036,27138
    pointer operator->(1037,27202
    operator++(1040,27295
    basic_address_iterator operator++(1046,27411
    basic_address_iterator& operator--(1053,27537
    operator--(1060,27704
    operator==(operator==1068,27816
    operator!=(operator!=1072,27940
    address_v4 _M_address;1076,28066
  template<> class basic_address_iterator<basic_address_iterator1081,28166
    basic_address_iterator(1092,28474
    reference operator*(1096,28576
    pointer operator->(1097,28640
    operator++(1103,28796
    operator--(1114,28990
    operator==(operator==1122,29102
    operator!=(operator!=1126,29226
    address_v6 _M_address;1130,29352
  template<> class basic_address_range<basic_address_range1141,29560
    basic_address_range(1150,29720
    basic_address_range() noexcept : _M_begin({}), _M_end(1150,29720
    basic_address_range(1152,29787
    iterator begin(1158,29959
    iterator end(1159,30016
    _GLIBCXX_NODISCARD bool empty(1160,30069
    size(1163,30163
    find(1166,30255
    iterator _M_begin;1174,30426
    iterator _M_end;1175,30449
  template<> class basic_address_range<basic_address_range1186,30591
    basic_address_range(1195,30751
    basic_address_range() noexcept : _M_begin({}), _M_end(1195,30751
    basic_address_range(1196,30817
    iterator begin(1202,30989
    iterator end(1203,31046
    _GLIBCXX_NODISCARD bool empty(1204,31099
    find(1207,31195
    iterator _M_begin;1215,31366
    iterator _M_end;1216,31389
  class network_v41231,31693
    constexpr network_v4(1235,31747
    network_v4(1238,31832
    network_v4(1246,32080
    constexpr address_v4 address(1261,32562
    constexpr int prefix_length(1262,32632
    netmask(1265,32733
    network(1274,32921
    broadcast(1278,33044
    hosts(1287,33243
    canonical(1295,33428
    constexpr bool is_host(1298,33515
    is_subnet_of(1301,33611
    address_v4 _M_addr;1335,34607
    int _M_prefix_len;1336,34631
  class network_v61340,34691
    constexpr network_v6(1344,34745
    network_v6(1347,34830
    constexpr address_v6 address(1355,35081
    constexpr int prefix_length(1356,35151
    hosts(1361,35308
    canonical(1369,35516
    constexpr bool is_host(1372,35603
    is_subnet_of(1375,35700
    address_v6 _M_addr;1394,36209
    int _M_prefix_len;1395,36233
  operator==(operator==1404,36328
  operator!=(operator!=1411,36517
  operator==(operator==1421,36689
  operator!=(operator!=1428,36878
    operator<<(1496,38829
    operator<<(1502,39064
    class basic_endpoint1508,39294
      basic_endpoint(1517,39452
      basic_endpoint(1526,39752
      basic_endpoint(1555,40636
      constexpr protocol_type protocol(1582,41505
      address(1588,41670
      address(1608,42097
      port(1627,42656
      port(1638,42859
      void* data(1647,43072
      const void* data(1649,43122
      size(1652,43207
      resize(1656,43321
      constexpr size_t capacity(1662,43443
	sockaddr_in	_M_v4;1667,43554
	sockaddr_in6	_M_v6;1668,43574
      } _M_data;1669,43595
      _M_is_v6(1672,43634
    operator==(operator==1688,44078
    operator!=(operator!=1694,44327
    operator< 1700,44531
    operator> 1709,44827
    operator<=(operator<=1715,45027
    operator>=(operator>=1721,45230
    operator<<(1730,45527
    class basic_resolver_entry1749,46061
      basic_resolver_entry(1757,46263
      basic_resolver_entry(1759,46297
      endpoint_type endpoint(1764,46461
      operator endpoint_type(operator endpoint_type1765,46516
      basic_endpoint<_InternetProtocol> _M_ep;1778,46921
      string _M_host;1779,46968
      string _M_svc;1780,46990
    operator==(operator==1785,47074
    operator!=(operator!=1795,47400
  class resolver_base1805,47644
    enum flags 1808,47680
    operator&(1826,48282
    operator|(1830,48404
    operator^(1834,48526
    operator~(1838,48648
    operator&=(operator&=1842,48746
    operator|=(operator|=1846,48861
    operator^=(operator^=1850,48976
    class basic_resolver_results1867,49343
      size_type size(1898,50321
      size_type max_size(1899,50379
      empty(1902,50486
      const_iterator begin(1905,50572
      const_iterator end(1906,50638
      const_iterator cbegin(1907,50700
      const_iterator cend(1908,50767
      swap(1912,50857
      forward_list<value_type> _M_results;1923,51212
    operator==(operator==1929,51344
    operator!=(operator!=1938,51634
    class basic_resolver 1946,51884
      explicit basic_resolver(1958,52244
      basic_resolver(1962,52370
      ~basic_resolver(1966,52494
      basic_resolver& operator=(operator=1970,52599
      executor_type get_executor(1980,52790
      void cancel(1982,52870
      resolve(1985,52922
      resolve(1992,53149
      resolve(2000,53362
      resolve(2007,53581
	__deduced_t<__deduced_t2012,53786
	__deduced_t<__deduced_t2022,54136
      resolve(2027,54343
      resolve(2036,54631
      resolve(2045,54896
      resolve(2053,55167
	__deduced_t<__deduced_t2059,55425
	__deduced_t<__deduced_t2070,55828
      resolve(2076,56076
      resolve(2080,56214
	__deduced_t<__deduced_t2084,56357
      io_context* _M_ctx;2088,56505
      struct __scoped_addrinfo2124,57564
	~__scoped_addrinfo(2126,57603
  class tcp2230,60518
    struct no_delay 2242,60984
      using __sockopt_crtp::__sockopt_crtp;2244,61043
    static constexpr tcp v4(2255,61308
    static constexpr tcp v6(2257,61421
    constexpr int family(2261,61508
    constexpr int type(2262,61572
    constexpr int protocol(2263,61636
    constexpr explicit tcp(2266,61716
    int _M_family;2268,61784
  operator==(operator==2276,61863
  operator!=(operator!=2280,61978
  class udp2288,62145
    static constexpr udp v4(2297,62340
    static constexpr udp v6(2298,62404
    constexpr int family(2302,62491
    constexpr int type(2303,62555
    constexpr int protocol(2304,62618
    constexpr explicit udp(2307,62698
    int _M_family;2309,62766
  operator==(operator==2317,62845
  operator!=(operator!=2321,62960
  class v6_only 2330,63190
    using __sockopt_crtp::__sockopt_crtp;2333,63259
  namespace unicast2342,63488
    class hops 2345,63581
      using __sockopt_crtp::__sockopt_crtp;2348,63644
      using __sockopt_crtp::operator=;operator=;2349,63688
	name(2358,63919
  namespace multicast2363,64062
    class __mcastopt2365,64088
      __mcastopt(2369,64142
      __mcastopt(2374,64306
      __mcastopt(2387,64725
	level(2396,65003
	data(2401,65162
	size(2406,65305
    class join_group 2415,65549
      using __mcastopt::__mcastopt;2418,65609
      using __mcastopt::level;2419,65645
      using __mcastopt::data;2420,65676
      using __mcastopt::size;2421,65706
	name(2425,65777
    class leave_group 2434,65981
      using __mcastopt::__mcastopt;2437,66042
      using __mcastopt::level;2438,66078
      using __mcastopt::data;2439,66109
      using __mcastopt::size;2440,66139
	name(2444,66210
    class outbound_interface2453,66432
      outbound_interface(2457,66494
      outbound_interface(2467,66723
	level(2473,66856
	name(2478,67007
	data(2486,67184
	size(2491,67327
      in_addr _M_v4;2495,67454
    class hops 2500,67578
      using __sockopt_crtp::__sockopt_crtp;2503,67641
      using __sockopt_crtp::operator=;operator=;2504,67685
	name(2513,67916
    class enable_loopback 2521,68130
      using __sockopt_crtp::__sockopt_crtp;2524,68221
      using __sockopt_crtp::operator=;operator=;2525,68265
	name(2534,68496
    struct is_error_condition_enum<is_error_condition_enum2553,68809
    struct hash<hash2559,68983
      operator()(operator()2563,69116
    struct hash<hash2573,69329
      operator()(operator()2577,69468
  template<> struct hash<hash2581,69600
      operator()(operator()2585,69748

/usr/include/c++/13/experimental/io_context,3537
#define _GLIBCXX_EXPERIMENTAL_IO_SERVICE 31,1226
namespace std _GLIBCXX_VISIBILITY(58,1776
  class io_context 75,2036
    class executor_type81,2150
      executor_type(86,2230
      io_context& context(106,2903
      void on_work_started(108,2967
      void on_work_finished(109,3040
      template<typename _Func,111,3115
	dispatch(113,3178
      template<typename _Func,121,3374
	post(123,3437
      template<typename _Func,130,3653
	defer(132,3716
      executor_type(139,3867
      io_context* _M_ctx;141,3943
    io_context(148,4046
    io_context(151,4100
    executor_type get_executor(158,4294
    run(161,4385
    template<typename _Rep,170,4533
      run_for(172,4596
    template<typename _Clock,175,4732
      run_until(177,4799
    run_one(187,5034
    template<typename _Rep,190,5101
      run_one_for(192,5164
    template<typename _Clock,195,5308
      run_one_until(197,5375
    poll(212,5733
    poll_one(222,5898
    void stop(225,5965
    bool stopped(232,6113
    void restart(238,6249
  private:private243,6307
    _M_outstanding_work(266,6822
    struct __timer_queue_base 269,6903
      __timer_queue_base(277,7167
      mutable execution_context::mutex_type _M_qmtx;284,7399
    template<typename _Timer,287,7460
	struct __pending_timer402,10465
	  __pending_timer(404,10492
	  typename _Timer::time_point _M_expiry;410,10685
	  _Key* _M_key;411,10727
	  __timer_id_type _M_id;412,10744
	  void cancel(415,10807
	  operator<(418,10884
	struct __queue 422,10981
	  iterator begin(428,11199
	  iterator end(429,11247
	  iterator erase(430,11291
	  _M_sort_to(433,11365
    template<typename _Timer,441,11511
      async_wait(443,11581
      cancel(453,11888
      cancel_one(467,12235
      async_wait(485,12735
    void _M_add_fd(501,13221
    void _M_remove_fd(502,13282
    void cancel(504,13350
    struct __async_operation534,13998
      __async_operation(536,14033
      int _M_fd;540,14156
      short _M_ev;541,14173
      void cancel(543,14193
      bool _M_is_cancelled(544,14229
      struct __async_operation_impl 549,14364
	__async_operation_impl(551,14428
	: __async_operation{__fd, __ev}, _M_op(552,14484
	_Op _M_op;554,14546
	void run(556,14559
    atomic<count_type>		_M_work_count;565,14724
    mutable execution_context::mutex_type		_M_mtx;566,14763
    struct __monitor570,14881
      __monitor(572,14908
      ~__monitor(582,15160
      io_context& _M_ctx;599,15519
    _M_do_one(603,15562
    struct __reactor719,18245
      __reactor(722,18300
      ~__reactor(740,18733
      void _M_notify(748,18893
      void _M_on_notify(757,19079
      _M_add_fd(768,19287
      _M_remove_fd(778,19526
      _M_fd_interest(788,19695
      _M_not_interested(798,19876
      struct dummy_pollfd 809,20097
      _M_lower_bound(816,20359
      enum __status 822,20535
      enum __status { _S_retry,822,20535
      enum __status { _S_retry, _S_timeout,822,20535
      enum __status { _S_retry, _S_timeout, _S_ok,822,20535
      enum __status { _S_retry, _S_timeout, _S_ok, _S_error 822,20535
      wait(825,20614
      __fdvec _M_fds;864,21472
      int _M_notify_wr;865,21544
    __reactor _M_reactor;868,21606
    vector<__timer_queue_base*>			_M_timers;870,21633
    forward_list<unique_ptr<__async_operation>>	_M_ops;871,21678
    vector<thread::id>	_M_call_stack;874,21764
  operator==(operator==881,21861
  operator!=(operator!=891,22212
  template<> struct is_executor<is_executor895,22345

/usr/include/c++/13/experimental/iterator,672
#define _GLIBCXX_EXPERIMENTAL_ITERATOR 35,1299
namespace std _GLIBCXX_VISIBILITY(47,1543
#define __cpp_lib_experimental_ostream_joiner 55,1682
    typedef _CharT				char_type;63,1935
    typedef _Traits				traits_type;64,1968
    typedef basic_ostream<_CharT, _Traits>	ostream_type;65,2004
    typedef output_iterator_tag			iterator_category;66,2061
    typedef void				value_type;67,2114
    typedef void				difference_type;68,2146
    typedef void				pointer;69,2183
    typedef void				reference;70,2212
      operator=(operator=84,2681
    ostream_joiner& operator*(93,2829
    ostream_joiner& operator++(94,2888
    ostream_joiner& operator++(95,2948

/usr/include/c++/13/experimental/list,110
#define _GLIBCXX_EXPERIMENTAL_LIST 31,1205
namespace std _GLIBCXX_VISIBILITY(42,1427
namespace pmr 65,2050

/usr/include/c++/13/experimental/map,574
#define _GLIBCXX_EXPERIMENTAL_MAP 31,1202
namespace std _GLIBCXX_VISIBILITY(43,1449
  namespace pmr 69,2282
    template<typename _Key,70,2300
    template<typename _Key, typename _Tp,70,2300
      = std::map<_Key, _Tp,72,2390
      = std::map<_Key, _Tp, _Compare,72,2390
		 polymorphic_allocator<polymorphic_allocator73,2428
    template<typename _Key,75,2479
    template<typename _Key, typename _Tp,75,2479
      = std::multimap<_Key, _Tp,77,2574
      = std::multimap<_Key, _Tp, _Compare,77,2574
		      polymorphic_allocator<polymorphic_allocator78,2617

/usr/include/c++/13/experimental/memory,1092
#define _GLIBCXX_EXPERIMENTAL_MEMORY 35,1293
namespace std _GLIBCXX_VISIBILITY(48,1578
#define __cpp_lib_experimental_observer_ptr 56,1717
    class observer_ptr59,1795
      constexpr observer_ptr(69,2145
      constexpr observer_ptr(74,2244
      constexpr explicit observer_ptr(78,2318
      template <typename _Up,83,2479
      constexpr observer_ptr(88,2628
      get(95,2794
      operator*operator101,2879
      constexpr explicit operator bool(112,3028
      constexpr explicit operator __pointer(118,3168
      release(125,3326
      reset(133,3440
      swap(139,3536
      __pointer __t;145,3631
    operator==(operator==164,3998
    operator!=(operator!=171,4161
    operator==(operator==178,4299
    operator==(operator==185,4423
    operator!=(operator!=192,4547
    operator!=(operator!=199,4676
    operator<(206,4819
    operator>(216,5115
    operator<=(operator<=223,5264
    operator>=(operator>=230,5417
  struct hash<hash238,5605
    using result_type 240,5656
    using argument_type 241,5688
    operator()(operator()244,5759

/usr/include/c++/13/experimental/memory_resource,2625
#define _GLIBCXX_EXPERIMENTAL_MEMORY_RESOURCE 31,1238
namespace __gnu_cxx _GLIBCXX_VISIBILITY(48,1751
#define __cpp_lib_experimental_memory_resources 61,2067
  class memory_resource88,2911
    allocate(100,3242
    deallocate(104,3366
    is_equal(108,3510
    do_is_equal(119,3802
    class polymorphic_allocator132,4164
      polymorphic_allocator(137,4245
      polymorphic_allocator(141,4339
	polymorphic_allocator(148,4561
      _GLIBCXX_NODISCARD _Tp* allocate(156,4774
      deallocate(161,4942
      template <typename _Tp1,164,5055
	construct(166,5123
      template <typename _Tp1,173,5332
      template <typename _Tp1, typename _Tp2,173,5332
	       typename... _Args1,174,5378
	construct(176,5432
      template <typename _Tp1,190,5928
	construct(192,5980
      template <typename _Tp1,195,6084
      template <typename _Tp1, typename _Tp2,195,6084
      template <typename _Tp1, typename _Tp2, typename _Up,195,6084
	construct(197,6164
      template <typename _Tp1,204,6380
      template <typename _Tp1, typename _Tp2,204,6380
      template <typename _Tp1, typename _Tp2, typename _Up,204,6380
	construct(206,6460
      template <typename _Tp1,213,6664
      template <typename _Tp1, typename _Tp2,213,6664
      template <typename _Tp1, typename _Tp2, typename _Up,213,6664
	construct(215,6744
	destroy(224,7012
      select_on_container_copy_construction(229,7153
      memory_resource* resource(232,7248
	_M_construct_p(240,7493
	decltype(244,7600
	decltype(250,7796
      memory_resource* _M_resource;254,7937
    operator==(operator==259,8026
    operator!=(operator!=265,8235
  class __resource_adaptor_common271,8404
    template<typename,typename273,8442
    struct _AlignMgr275,8513
      _AlignMgr(277,8540
      _M_alloc_size(283,8708
      _M_adjust(286,8793
      _M_unadjust(309,9699
      size_t _M_nbytes;332,10605
      size_t _M_align;333,10629
      _M_buf_size(337,10740
      _M_token_size(341,10877
	_S_write(354,11203
	_S_read(359,11328
    class __resource_adaptor_imp371,11554
      explicit __resource_adaptor_imp(399,12658
      explicit __resource_adaptor_imp(403,12750
      allocator_type get_allocator(410,12937
# define _GLIBCXX_MAX_ALIGN_MATCHES_MALLOC 415,13163
# define _GLIBCXX_MAX_ALIGN_MATCHES_MALLOC 418,13345
# define _GLIBCXX_MAX_ALIGN_MATCHES_MALLOC 420,13396
      do_allocate(424,13469
      do_deallocate(449,14257
      do_is_equal(474,15029
	struct _Aligned_type 488,15388
      template<size_t _Num,491,15522
      template<size_t _Num,502,15874
      _Alloc _M_alloc{_M_alloc512,16179

/usr/include/c++/13/experimental/net,42
#define _GLIBCXX_EXPERIMENTAL_NET31,1205

/usr/include/c++/13/experimental/netfwd,295
#define _GLIBCXX_EXPERIMENTAL_NETFWD 31,1214
namespace std _GLIBCXX_VISIBILITY(44,1509
  typedef basic_waitable_timer<chrono::system_clock> system_timer;76,2227
  typedef basic_waitable_timer<chrono::steady_clock> steady_timer;77,2294
    high_resolution_timer;79,2423
namespace ip98,3012

/usr/include/c++/13/experimental/numeric,138
#define _GLIBCXX_EXPERIMENTAL_NUMERIC 35,1296
namespace std _GLIBCXX_VISIBILITY(46,1520
#define __cpp_lib_experimental_gcd_lcm 54,1659

/usr/include/c++/13/experimental/optional,3498
#define _GLIBCXX_EXPERIMENTAL_OPTIONAL 31,1217
namespace std _GLIBCXX_VISIBILITY(47,1618
#define __cpp_lib_experimental_optional 66,2033
  struct in_place_t 76,2254
  struct nullopt_t83,2414
    enum class _Construct 90,2606
    enum class _Construct { _Token 90,2606
    explicit constexpr nullopt_t(93,2699
  class bad_optional_access 106,3018
    bad_optional_access(109,3081
    explicit bad_optional_access(112,3215
      operator=(operator=188,5930
      operator=(operator=204,6268
      struct _Empty_byte 270,8019
          _Empty_byte _M_empty;272,8063
          _Stored_type _M_payload;273,8095
      operator=(operator=322,9708
      operator=(operator=337,10017
      struct _Empty_byte 393,11317
	_Empty_byte _M_empty;396,11367
	_Stored_type _M_payload;397,11390
    class optional426,12290
      using _Base::_Base;452,13173
                enable_if_t<enable_if_t457,13330
			      >::value,value461,13496
                enable_if_t<enable_if_t466,13656
			      >::value,value470,13830
                enable_if_t<enable_if_t475,13994
			    >::value,value480,14196
      template <typename _Up,487,14323
                 enable_if_t<enable_if_t488,14353
			       __not_<__not_492,14523
			       >::value,value493,14576
      template <typename _Up,500,14716
                enable_if_t<enable_if_t501,14746
			      >::value,value506,14946
      template <typename _Up,513,15081
                enable_if_t<enable_if_t514,15111
			    __not_<__not_518,15261
			    >::value,value519,15311
      operator=(operator=528,15510
		      is_constructible<is_constructible537,15728
		      __not_<__not_538,15764
		      is_assignable<_Tp&, _Up>>::value,value540,15840
        operator=(operator=542,15899
	enable_if_t<enable_if_t553,16164
		      __not_<__not_558,16349
		      >::value,value559,16399
        operator=(operator=561,16434
	enable_if_t<enable_if_t578,16815
		      __not_<__not_583,16993
		      >::value,value584,17043
        operator=(operator=586,17078
	enable_if_t<enable_if_t604,17482
	emplace(605,17537
      template<typename _Up,611,17648
	enable_if_t<enable_if_t612,17696
	emplace(614,17784
      swap(624,18040
      operator->(646,18652
      operator->(650,18740
      constexpr explicit operator bool(operator bool669,19157
    operator==(operator==742,20913
    operator!=(operator!=750,21146
    operator<(755,21296
    operator>(762,21493
    operator<=(operator<=767,21638
    operator>=(operator>=772,21787
    operator==(operator==778,21975
    operator==(operator==783,22106
    operator!=(operator!=788,22237
    operator!=(operator!=793,22386
    operator<(798,22535
    operator<(803,22670
    operator>(808,22818
    operator>(813,22966
    operator<=(operator<=818,23101
    operator<=(operator<=823,23232
    operator>=(operator>=828,23367
    operator>=(operator>=833,23502
    operator==(operator==839,23676
    operator==(operator==844,23823
    operator!=(operator!=849,23970
    operator!=(operator!=854,24121
    operator<(859,24272
    operator<(864,24418
    operator>(869,24563
    operator>(874,24708
    operator<=(operator<=879,24854
    operator<=(operator<=884,25004
    operator>=(operator>=889,25153
    operator>=(operator>=894,25302
    struct hash<hash918,26011
      using result_type 920,26062
      using argument_type 921,26096
      operator()(operator()924,26167

/usr/include/c++/13/experimental/propagate_const,4255
#define _GLIBCXX_EXPERIMENTAL_PROPAGATE_CONST 31,1238
namespace std _GLIBCXX_VISIBILITY(45,1569
    struct __propagate_const_conversions83,2605
    struct __propagate_const_conversions<__propagate_const_conversions89,2825
    class propagate_const 108,3339
	struct __is_propagate_const 115,3532
	struct __is_propagate_const<__is_propagate_const119,3611
	__to_raw_pointer(131,3970
	__to_raw_pointer(136,4078
	__to_raw_pointer(141,4198
	__to_raw_pointer(146,4318
      template <typename _Up,161,4846
		enable_if<enable_if162,4885
				 is_convertible<_Up&&, _Tp>>::value,value163,4934
		enable_if<enable_if170,5150
				 __not_<is_convertible<_Up&&, _Tp>>>::value,value171,5199
		enable_if<enable_if178,5432
				 >::value,value182,5583
		enable_if<enable_if188,5740
				 >::value,value192,5899
      template <typename _Up,201,6226
      constexpr propagate_const& operator=(operator=203,6330
      template <typename _Up,209,6475
      constexpr propagate_const& operator=(operator=214,6669
      explicit constexpr operator bool(operator bool221,6847
      constexpr const element_type* operator->(226,6931
      constexpr const element_type& operator*(231,7018
      constexpr const element_type* get(236,7105
      constexpr element_type* operator->(242,7270
      constexpr element_type& operator*(247,7345
      constexpr element_type* get(252,7420
      swap(259,7574
      _Tp _M_t;266,7736
    operator==(operator==272,7861
    operator==(operator==279,8025
    operator!=(operator!=286,8189
    constexpr bool operator!=(operator!=292,8334
    operator==(operator==299,8527
    operator!=(operator!=307,8749
    operator<(315,8971
    operator>(323,9190
    operator<=(operator<=331,9409
    operator>=(operator>=339,9631
    operator==(operator==347,9853
    operator!=(operator!=354,10032
    operator<(361,10211
    operator>(368,10388
    operator<=(operator<=375,10565
    operator>=(operator>=382,10744
    operator==(operator==389,10923
    operator!=(operator!=396,11102
    operator<(403,11281
    operator>(410,11458
    operator<=(operator<=417,11635
    operator>=(operator>=424,11814
    __propagate_const_conversions<_Tp*>::operator const operator const457,12734
    __propagate_const_conversions<_Tp*>::operator _Tp*(operator _Tp*462,12923
    operator const operator const468,13165
    operator _Elem*(operator _Elem*474,13381
   struct hash<hash483,13624
     using result_type 485,13680
     using argument_type 486,13713
     operator()(operator()489,13789
   struct equal_to<equal_to498,14089
     operator()(operator()501,14169
     typedef experimental::propagate_const<_Tp> first_argument_type;507,14382
     typedef experimental::propagate_const<_Tp> second_argument_type;508,14451
     typedef bool result_type;509,14521
   struct not_equal_to<not_equal_to513,14584
     operator()(operator()516,14668
     typedef experimental::propagate_const<_Tp> first_argument_type;522,14878
     typedef experimental::propagate_const<_Tp> second_argument_type;523,14947
     typedef bool result_type;524,15017
   struct less<less528,15080
     operator()(operator()531,15156
     typedef experimental::propagate_const<_Tp> first_argument_type;537,15358
     typedef experimental::propagate_const<_Tp> second_argument_type;538,15427
     typedef bool result_type;539,15497
   struct greater<greater543,15560
     operator()(operator()546,15639
     typedef experimental::propagate_const<_Tp> first_argument_type;552,15844
     typedef experimental::propagate_const<_Tp> second_argument_type;553,15913
     typedef bool result_type;554,15983
   struct less_equal<less_equal558,16046
     operator()(operator()561,16128
     typedef experimental::propagate_const<_Tp> first_argument_type;567,16343
     typedef experimental::propagate_const<_Tp> second_argument_type;568,16412
     typedef bool result_type;569,16482
   struct greater_equal<greater_equal573,16545
     operator()(operator()576,16630
     typedef experimental::propagate_const<_Tp> first_argument_type;582,16841
     typedef experimental::propagate_const<_Tp> second_argument_type;583,16910
     typedef bool result_type;584,16980

/usr/include/c++/13/experimental/random,94
#define _GLIBCXX_EXPERIMENTAL_RANDOM 31,1211
#define __cpp_lib_experimental_randint 44,1522

/usr/include/c++/13/experimental/ratio,88
#define _GLIBCXX_EXPERIMENTAL_RATIO 35,1280
namespace std _GLIBCXX_VISIBILITY(46,1507

/usr/include/c++/13/experimental/regex,328
#define _GLIBCXX_EXPERIMENTAL_REGEX 31,1208
namespace std _GLIBCXX_VISIBILITY(42,1423
  typedef match_results<const char*> cmatch;58,1793
  typedef match_results<const wchar_t*> wcmatch;59,1838
  typedef match_results<string::const_iterator> smatch;60,1887
  typedef match_results<wstring::const_iterator> wsmatch;61,1943

/usr/include/c++/13/experimental/scope,3777
#define _GLIBCXX_EXPERIMENTAL_SCOPE 31,1190
namespace std _GLIBCXX_VISIBILITY(43,1447
#define __cpp_lib_experimental_scope 48,1574
    class [[nodiscard]] scope_exit57,1818
	requires __not_same_as<__not_same_as61,1901
	      && constructible_from<constructible_from62,1959
	scope_exit(64,2023
	requires __not_same_as<__not_same_as75,2248
	      && constructible_from<constructible_from76,2306
	      && is_nothrow_constructible_v<is_nothrow_constructible_v78,2379
	scope_exit(80,2437
      : _M_exit_function(86,2619
      : _M_exit_function(93,2897
      ~scope_exit(100,3130
      void release(106,3265
      [[no_unique_address]] _Ef _M_exit_function;109,3348
    class [[nodiscard]] scope_fail117,3542
	requires __not_same_as<__not_same_as121,3625
	      && constructible_from<constructible_from122,3683
	scope_fail(124,3733
	requires __not_same_as<__not_same_as135,3958
	      && constructible_from<constructible_from136,4016
	      && is_nothrow_constructible_v<is_nothrow_constructible_v138,4089
	scope_fail(140,4147
      : _M_exit_function(146,4329
      : _M_exit_function(153,4607
      ~scope_fail(160,4840
      void release(166,4995
      [[no_unique_address]] _Ef _M_exit_function;169,5075
    class [[nodiscard]] scope_success177,5281
	requires __not_same_as<__not_same_as181,5367
	      && constructible_from<constructible_from182,5428
	scope_success(184,5478
	requires __not_same_as<__not_same_as189,5615
	      && constructible_from<constructible_from190,5676
	      && is_nothrow_constructible_v<is_nothrow_constructible_v192,5749
	scope_success(194,5807
      : _M_exit_function(200,5998
      : _M_exit_function(207,6282
      ~scope_success(214,6533
      void release(220,6692
      [[no_unique_address]] _Ef _M_exit_function;223,6773
    class [[nodiscard]] unique_resource231,7003
      static_assert(!is_rvalue_reference_v<is_rvalue_reference_v233,7049
      static_assert(!is_reference_v<is_reference_v234,7102
      struct _Dummy 236,7147
      struct _Dummy { constexpr void release(236,7147
	struct _Wrap239,7231
	    requires is_constructible_v<is_constructible_v242,7274
	  template<typename _Up,246,7389
	    requires is_constructible_v<is_constructible_v247,7431
	    _Wrap(248,7474
	  _Wrap(257,7675
	  constexpr _Tp& get(266,7916
	  constexpr const _Tp& get(267,7966
	  [[no_unique_address]] _Tp _M_t{_M_t269,8029
	struct _Wrap<_Wrap273,8100
	    requires is_constructible_v<is_constructible_v276,8149
	  template<typename _Up,280,8302
	    _Wrap(281,8344
	  _Tp& get(292,8635
	  const _Tp& get(293,8676
      template<typename _Tp,300,8795
	requires is_constructible_v<is_constructible_v301,8838
	  = __conditional_t<is_nothrow_constructible_v<_Tp, _Up>, _Up,305,8971
      template<typename _Tp,307,9043
	static constexpr _Fwd_t<_Fwd_t308,9086
	_S_fwd(309,9121
      template<typename _Tp,312,9190
      template<typename _Tp, typename _Up,312,9190
      template<typename _Tp, typename _Up, typename _Del2,312,9190
	_S_guard(314,9288
      template<typename _Res2,325,9505
	unique_resource(330,9643
      : _M_res(346,10238
	_M_del(347,10279
	_M_exec_on_reset(348,10313
      : _M_res(354,10540
	_M_exec_on_reset(363,10776
      unique_resource(366,10853
      ~unique_resource(378,11183
      operator=(operator=382,11274
      reset(419,12093
	reset(430,12267
      release(441,12527
      get(445,12609
      get_deleter(458,12987
      [[no_unique_address]] _Res1 _M_res{_M_res462,13067
      [[no_unique_address]] _Wrap<_Del> _M_del{_M_del463,13111
      template<typename _Res2,466,13199
      template<typename _Res2, typename _Del2,466,13199
      template<typename _Res2,472,13496
	unique_resource(473,13543

/usr/include/c++/13/experimental/set,295
#define _GLIBCXX_EXPERIMENTAL_SET 31,1202
namespace std _GLIBCXX_VISIBILITY(43,1449
  namespace pmr 69,2234
    template<typename _Key,70,2252
      using set = std::set<_Key, _Compare,71,2312
    template<typename _Key,73,2386
      using multiset = std::multiset<_Key, _Compare,74,2446

/usr/include/c++/13/experimental/simd,97
#define _GLIBCXX_EXPERIMENTAL_SIMD34,1273
#define __cpp_lib_experimental_parallel_simd 57,1844

/usr/include/c++/13/experimental/socket,11836
#define _GLIBCXX_EXPERIMENTAL_SOCKET31,1214
namespace std _GLIBCXX_VISIBILITY(65,2055
  enum class socket_errc 79,2245
    already_open 80,2295
    not_found 81,2317
    struct is_error_code_enum<is_error_code_enum89,2420
namespace experimental92,2514
namespace net94,2539
inline namespace v196,2555
  const error_category& socket_category(98,2577
    struct __cat 100,2632
      const char* name(102,2672
      std::string message(104,2734
      virtual void __message(113,2964
  make_error_code(120,3093
  make_error_condition(124,3230
  class socket_base139,3584
    class broadcast 143,3652
      using __sockopt_crtp::__sockopt_crtp;146,3731
    class debug 155,3975
      using __sockopt_crtp::__sockopt_crtp;159,4088
    class do_not_route 167,4282
      using __sockopt_crtp::__sockopt_crtp;170,4367
    class keep_alive 179,4614
      using __sockopt_crtp::__sockopt_crtp;182,4695
    class linger 191,4940
      using __sockopt_crtp::__sockopt_crtp;194,5017
      linger(199,5137
      enabled(206,5248
      enabled(210,5331
      timeout(214,5426
      timeout(218,5522
    class out_of_band_inline 227,5768
      using __sockopt_crtp::__sockopt_crtp;230,5865
    class receive_buffer_size 239,6118
      using __sockopt_crtp::__sockopt_crtp;242,6211
    class receive_low_watermark 251,6456
      using __sockopt_crtp::__sockopt_crtp;254,6553
    class reuse_address 263,6802
      using __sockopt_crtp::__sockopt_crtp;266,6889
    class send_buffer_size 275,7137
      using __sockopt_crtp::__sockopt_crtp;278,7224
    class send_low_watermark 287,7466
      using __sockopt_crtp::__sockopt_crtp;290,7557
    enum shutdown_type 300,7831
    enum wait_type 307,8169
    enum message_flags 318,8606
    operator&(337,9227
    operator|(341,9381
    operator^(345,9535
    operator~(349,9689
    operator&=(operator&=353,9811
    operator|=(operator|=357,9950
    operator^=(operator^=361,10089
    struct __msg_hdr 366,10239
      struct __iovec_array371,10374
	__iovec_array(373,10409
	::iovec* data(377,10528
	static size_t size(379,10580
	unique_ptr<::iovec[]> _M_ptr;386,10704
      __iovec_array _M_iov;392,10806
	__msg_hdr(396,10886
      template<typename _BufferSequence,413,11352
	__msg_hdr(414,11413
  class __socket_impl432,11770
    __socket_impl(440,11913
    __socket_impl(442,11987
    operator=(operator=449,12189
    executor_type get_executor(462,12541
    native_handle_type native_handle(464,12619
    bool is_open(466,12690
    close(469,12762
    void cancel(487,13048
    non_blocking(490,13129
    bool non_blocking(493,13212
    native_non_blocking(496,13285
    native_non_blocking(521,13865
    io_context*	_M_ctx;537,14258
      unsigned		non_blocking 540,14319
      mutable signed	native_non_blocking 541,14353
      unsigned		enable_connection_aborted 542,14399
    } _M_bits{_M_bits543,14446
    class __basic_socket_impl 547,14500
      __basic_socket_impl(556,14728
	__basic_socket_impl(561,14895
      operator=(operator=566,15065
      ~__basic_socket_impl(575,15246
      open(581,15443
      assign(605,16006
      native_handle_type release(626,16480
	set_option(635,16686
	get_option(653,17202
	io_control(671,17714
      local_endpoint(686,18079
      bind(706,18582
      _M_close(723,19003
    class basic_socket738,19278
      executor_type get_executor(756,19799
      native_handle(759,19904
      open(762,19983
      open(766,20125
      assign(770,20241
      assign(778,20452
      native_handle_type release(783,20633
      native_handle_type release(786,20738
      is_open(790,20860
      void close(792,20922
      void close(794,20994
      void cancel(796,21055
      void cancel(798,21130
	set_option(802,21246
	set_option(807,21424
	get_option(812,21588
	get_option(817,21766
	io_control(822,21926
	io_control(829,22096
      non_blocking(833,22210
      non_blocking(837,22334
      bool non_blocking(840,22431
      native_non_blocking(843,22510
      native_non_blocking(850,22668
      native_non_blocking(854,22790
      bool at_mark(857,22873
      at_mark(861,22981
      available(879,23357
      available(883,23468
      bind(905,23898
      bind(909,24029
      void shutdown(912,24134
      shutdown(916,24267
      local_endpoint(929,24599
      local_endpoint(936,24745
      remote_endpoint(940,24858
      remote_endpoint(947,25007
      connect(968,25522
      connect(974,25669
	__deduced_t<__deduced_t994,26166
      wait(1037,27586
      wait(1041,27692
	__deduced_t<__deduced_t1058,28098
      using __base::__base;1074,28573
      basic_socket(1077,28617
      basic_socket(1079,28676
      basic_socket(1083,28798
      basic_socket(1087,28949
      template<typename _OtherProtocol,1096,29242
	basic_socket(1098,29364
	enable_if_t<enable_if_t1108,29649
	operator=(operator=1110,29733
    class basic_datagram_socket 1115,29880
      basic_datagram_socket(1129,30220
      basic_datagram_socket(1131,30288
      basic_datagram_socket(1134,30407
      basic_datagram_socket(1137,30526
      template<typename _OtherProtocol,1145,30852
	basic_datagram_socket(1147,30974
	enable_if_t<enable_if_t1157,31322
	operator=(operator=1159,31415
	receive(1169,31637
	receive(1177,31866
	receive(1182,32066
	receive(1191,32319
      template<typename _MutableBufferSequence,1211,32881
	__deduced_t<__deduced_t1212,32956
      template<typename _MutableBufferSequence,1220,33229
	__deduced_t<__deduced_t1221,33304
	receive_from(1260,34650
	receive_from(1271,34957
	receive_from(1280,35215
	receive_from(1291,35535
      template<typename _MutableBufferSequence,1314,36202
	__deduced_t<__deduced_t1315,36277
      template<typename _MutableBufferSequence,1325,36605
	__deduced_t<__deduced_t1326,36680
	send(1370,38211
	send(1378,38431
	send(1383,38614
	send(1392,38855
      template<typename _ConstBufferSequence,1412,39416
	__deduced_t<__deduced_t1413,39489
      template<typename _ConstBufferSequence,1421,39746
	__deduced_t<__deduced_t1422,39819
	send_to(1461,41147
	send_to(1471,41432
	send_to(1480,41678
	send_to(1490,41969
      template<typename _ConstBufferSequence,1512,42634
	__deduced_t<__deduced_t1513,42707
      template<typename _ConstBufferSequence,1523,43043
	__deduced_t<__deduced_t1524,43116
    class basic_stream_socket 1568,44652
      basic_stream_socket(1582,44990
      basic_stream_socket(1584,45056
      basic_stream_socket(1587,45173
      basic_stream_socket(1590,45290
      template<typename _OtherProtocol,1598,45604
	basic_stream_socket(1600,45726
	enable_if_t<enable_if_t1610,46057
	operator=(operator=1612,46148
	receive(1622,46363
	receive(1630,46587
	receive(1635,46784
	receive(1644,47025
	__deduced_t<__deduced_t1669,47686
	__deduced_t<__deduced_t1678,48028
	send(1729,49860
	send(1737,50075
	send(1742,50255
	send(1751,50512
	__deduced_t<__deduced_t1776,51170
	__deduced_t<__deduced_t1785,51496
	read_some(1836,53320
	read_some(1844,53518
	__deduced_t<__deduced_t1848,53696
	write_some(1858,53987
	write_some(1866,54183
	__deduced_t<__deduced_t1870,54356
    class basic_socket_acceptor1880,54643
      basic_socket_acceptor(1900,55300
      : __base(__ctx), _M_protocol(endpoint_type{}.protocol(protocol1901,55347
      basic_socket_acceptor(1903,55415
      basic_socket_acceptor(1908,55578
      basic_socket_acceptor(1920,55915
      template<typename _OtherProtocol,1929,56280
	basic_socket_acceptor(1931,56406
	enable_if_t<enable_if_t1941,56745
	operator=(operator=1943,56842
      executor_type get_executor(1951,57008
      native_handle(1954,57113
      open(1957,57192
      open(1961,57343
      assign(1965,57459
      assign(1973,57683
      native_handle_type release(1978,57868
      native_handle_type release(1981,57982
      is_open(1985,58104
      close(1988,58177
      close(1991,58264
      cancel(1994,58332
      cancel(1997,58422
	set_option(2001,58533
	set_option(2009,58731
	get_option(2014,58895
	get_option(2022,59093
	io_control(2027,59253
	io_control(2035,59439
      non_blocking(2039,59553
      non_blocking(2046,59700
      bool non_blocking(2049,59797
      native_non_blocking(2052,59876
      native_non_blocking(2059,60043
      native_non_blocking(2063,60165
      bind(2067,60259
      bind(2074,60412
      listen(2078,60528
      listen(2085,60695
      local_endpoint(2098,61001
      local_endpoint(2105,61156
      enable_connection_aborted(2109,61260
      enable_connection_aborted(2113,61379
      accept(2117,61498
      accept(2121,61608
      socket_type accept(2124,61697
      accept(2131,61858
	__deduced_t<__deduced_t2151,62372
	__deduced_t<__deduced_t2159,62622
      accept(2200,64056
      accept(2207,64244
      accept(2211,64390
      accept(2218,64578
	__deduced_t<__deduced_t2240,65213
	__deduced_t<__deduced_t2249,65510
      wait(2294,67159
      wait(2298,67267
	__deduced_t<__deduced_t2314,67653
      protocol_type _M_protocol;2328,68095
  template<typename _Protocol,2337,68189
  template<typename _Protocol, typename _Clock,2337,68189
    class basic_socket_streambuf 2338,68259
      basic_socket_streambuf(2352,68687
      basic_socket_streambuf(2355,68760
      basic_socket<protocol_type>& socket(2378,69456
      error_code error(2380,69523
      time_point expiry(2382,69582
      expires_at(2385,69648
      expires_after(2389,69727
      _S_ctx(2402,70226
      basic_stream_socket<protocol_type> _M_socket;2408,70299
      error_code _M_ec;2409,70351
  template<typename _Protocol,2413,70432
    class basic_socket_iostream 2414,70499
	= basic_socket_streambuf<_Protocol, _Clock,2417,70596
      basic_socket_iostream(2432,71047
      basic_socket_iostream(2439,71212
      basic_socket_iostream(2448,71489
	basic_socket_iostream(2458,71784
	connect(2474,72199
      close(2481,72338
      basic_socket_streambuf<basic_socket_streambuf2487,72431
      rdbuf(2488,72506
      basic_socket<protocol_type>& socket(2491,72598
      error_code error(2492,72672
      time_point expiry(2494,72742
      void expires_at(2495,72804
      void expires_after(2496,72879
      __streambuf_type _M_sb;2499,72972
  template<typename _Protocol,2508,73079
  template<typename _Protocol, typename _EndpointSequence,2508,73079
    connect(2511,73210
  template<typename _Protocol,2536,73758
  template<typename _Protocol, typename _InputIterator,2536,73758
    connect(2539,73872
  template<typename _Protocol,2564,74450
  template<typename _Protocol, typename _EndpointSequence,2564,74450
    connect(2567,74581
  template<typename _Protocol,2574,74786
  template<typename _Protocol, typename _InputIterator,2574,74786
    connect(2577,74900
  template<typename _Protocol,2585,75123
    connect(2587,75222
  template<typename _Protocol,2594,75431
    connect(2596,75530
  template<typename _Protocol,2604,75739
    connect(2606,75821
  template<typename _Protocol,2613,76043
    connect(2615,76125
  template<typename _Protocol,2629,76417
  template<typename _Protocol, typename _EndpointSequence,2629,76417
	   typename _ConnectCondition,2630,76476
    __deduced_t<__deduced_t2632,76546
  template<typename _Protocol,2638,76785
  template<typename _Protocol, typename _EndpointSequence,2638,76785
    __deduced_t<__deduced_t2641,76886
  template<typename _Protocol,2652,77232
  template<typename _Protocol, typename _InputIterator,2652,77232
	   typename _ConnectCondition,2653,77288
    __deduced_t<__deduced_t2655,77358
  template<typename _Protocol,2660,77590
  template<typename _Protocol, typename _InputIterator,2660,77590
    __deduced_t<__deduced_t2663,77688

/usr/include/c++/13/experimental/source_location,514
#define _GLIBCXX_EXPERIMENTAL_SRCLOC 31,1229
#define __cpp_lib_experimental_source_location 43,1498
  struct source_location45,1553
    current(55,1761
    constexpr source_location(68,2105
    constexpr uint_least32_t line(73,2265
    constexpr uint_least32_t column(74,2336
    constexpr const char* file_name(75,2408
    constexpr const char* function_name(76,2481
    const char* _M_file;79,2570
    const char* _M_func;80,2595
    uint_least32_t _M_line;81,2620
    uint_least32_t _M_col;82,2648

/usr/include/c++/13/experimental/string,453
#define _GLIBCXX_EXPERIMENTAL_STRING 31,1211
namespace std _GLIBCXX_VISIBILITY(43,1458
  namespace pmr69,2187
    template<typename _CharT,72,2272
	std::basic_string<_CharT, _Traits,74,2369
    typedef basic_string<char> string;78,2543
    typedef basic_string<char8_t> u8string;80,2610
    typedef basic_string<char16_t> u16string;82,2661
    typedef basic_string<char32_t> u32string;83,2707
    typedef basic_string<wchar_t> wstring;84,2753

/usr/include/c++/13/experimental/string_view,1975
#define _GLIBCXX_EXPERIMENTAL_STRING_VIEW 35,1304
namespace std _GLIBCXX_VISIBILITY(48,1624
#define __cpp_lib_experimental_string_view 56,1763
        explicit operator basic_string<_CharT, operator basic_string<_CharT,245,6562
    operator==(operator==446,13526
    operator==(operator==452,13777
    operator==(operator==459,14051
    operator!=(operator!=465,14321
    operator!=(operator!=471,14536
    operator!=(operator!=478,14774
    operator< 484,15008
    operator< 490,15230
    operator< 497,15475
    operator> 503,15716
    operator> 509,15938
    operator> 516,16183
    operator<=(operator<=522,16424
    operator<=(operator<=528,16647
    operator<=(operator<=535,16893
    operator>=(operator>=541,17135
    operator>=(operator>=547,17358
    operator>=(operator>=554,17604
    operator<<(561,17918
    struct hash<hash584,18576
      operator()(operator()588,18698
    struct __is_fast_hash<__is_fast_hash593,18861
    struct hash<hash597,18961
      operator()(operator()601,19066
    struct __is_fast_hash<__is_fast_hash607,19279
    struct hash<hash612,19408
      operator()(operator()616,19534
    struct __is_fast_hash<__is_fast_hash621,19693
    struct hash<hash626,19802
      operator()(operator()630,19930
    struct __is_fast_hash<__is_fast_hash636,20146
    struct hash<hash640,20249
      operator()(operator()644,20377
    struct __is_fast_hash<__is_fast_hash650,20593
namespace experimental653,20683
  inline namespace literals656,20733
  inline namespace string_view_literals658,20765
    operator""soperator""663,20932
    operator""soperator""667,21094
    operator""soperator""672,21290
    operator""soperator""677,21466
    operator""soperator""681,21637
  namespace ranges689,21896
    template<typename _CharT,692,21959
	enable_borrowed_range<enable_borrowed_range694,22035
    template<typename _CharT,698,22150
	enable_view<enable_view700,22226

/usr/include/c++/13/experimental/synchronized_value,484
#define _GLIBCXX_EXPERIMENTAL_SYNCVAL 31,1226
namespace std _GLIBCXX_VISIBILITY(41,1417
#define __cpp_lib_concurrency_v2_synchronized_value 46,1543
    class synchronized_value49,1628
	requires (!__is_self<_Args...>) && is_constructible_v<is_constructible_v68,2232
      template<typename... _Args,70,2308
	synchronized_value(73,2454
      template<typename _Fn,78,2594
      template<typename _Fn, typename _Up,78,2594
      mutex _M_mut;83,2792
      _Tp _M_val;84,2812

/usr/include/c++/13/experimental/system_error,95
#define _GLIBCXX_EXPERIMENTAL_SYSTEM_ERROR 35,1301
namespace std _GLIBCXX_VISIBILITY(46,1542

/usr/include/c++/13/experimental/timer,837
#define _GLIBCXX_EXPERIMENTAL_TIMER 31,1211
namespace std _GLIBCXX_VISIBILITY(46,1546
    struct wait_traits61,1764
      to_wait_duration(64,1832
      to_wait_duration(68,1955
    class basic_waitable_timer81,2313
      basic_waitable_timer(95,2672
      basic_waitable_timer(99,2778
      basic_waitable_timer(103,2910
      basic_waitable_timer(109,3123
      ~basic_waitable_timer(116,3324
      operator=(operator=121,3475
      executor_type get_executor(135,3784
      size_t cancel(137,3847
      size_t cancel_one(138,3911
      time_point expiry(140,3984
      size_t expires_at(142,4039
      size_t expires_after(149,4174
	__deduced_t<__deduced_t156,4370
      executor_type _M_ex;166,4668
      time_point _M_expiry;167,4695
      struct _Key 169,4724
      unique_ptr<_Key> _M_key{_M_key170,4782

/usr/include/c++/13/experimental/tuple,134
#define _GLIBCXX_EXPERIMENTAL_TUPLE 31,1208
namespace std _GLIBCXX_VISIBILITY(43,1460
#define __cpp_lib_experimental_tuple 55,1732

/usr/include/c++/13/experimental/type_traits,1100
#define _GLIBCXX_EXPERIMENTAL_TYPE_TRAITS 42,1500
namespace std _GLIBCXX_VISIBILITY(51,1667
#define __cpp_lib_experimental_type_trait_variable_templates 67,2024
#define __cpp_lib_experimental_detect 252,9323
struct __nonesuchbase 262,9602
struct nonesuch 263,9628
template<typename _Default,271,9808
  using detected_or 272,9888
template<typename _Default,274,9956
  using detected_or_t 275,10036
  using detected_t 278,10175
  using is_detected 281,10298
  constexpr bool is_detected_v 284,10440
template<typename _Expected,286,10509
  using is_detected_exact 287,10590
template<typename _Expected,289,10666
  constexpr bool is_detected_exact_v290,10747
template<typename _To,293,10843
  using is_detected_convertible294,10918
template<typename _To,297,11005
  constexpr bool is_detected_convertible_v298,11080
#define __cpp_lib_experimental_logical_traits 310,11351
  struct conjunction313,11431
  struct disjunction318,11505
  struct negation323,11575
  constexpr bool conjunction_v328,11643
  constexpr bool disjunction_v332,11735
  constexpr bool negation_v336,11824

/usr/include/c++/13/experimental/unordered_map,743
#define _GLIBCXX_EXPERIMENTAL_UNORDERED_MAP 31,1232
namespace std _GLIBCXX_VISIBILITY(43,1499
  namespace pmr 73,2434
    template<typename _Key,74,2452
    template<typename _Key, typename _Tp,74,2452
      = std::unordered_map<_Key, _Tp,77,2588
      = std::unordered_map<_Key, _Tp, _Hash,77,2588
      = std::unordered_map<_Key, _Tp, _Hash, _Pred,77,2588
		 polymorphic_allocator<polymorphic_allocator78,2640
    template<typename _Key,80,2691
    template<typename _Key, typename _Tp,80,2691
      = std::unordered_multimap<_Key, _Tp,83,2832
      = std::unordered_multimap<_Key, _Tp, _Hash,83,2832
      = std::unordered_multimap<_Key, _Tp, _Hash, _Pred,83,2832
		      polymorphic_allocator<polymorphic_allocator84,2889

/usr/include/c++/13/experimental/unordered_set,409
#define _GLIBCXX_EXPERIMENTAL_UNORDERED_SET 31,1232
namespace std _GLIBCXX_VISIBILITY(43,1499
  namespace pmr 73,2386
    template<typename _Key,74,2404
      = std::unordered_set<_Key, _Hash,77,2526
      = std::unordered_set<_Key, _Hash, _Pred,77,2526
    template<typename _Key,79,2604
      = std::unordered_multiset<_Key, _Hash,82,2731
      = std::unordered_multiset<_Key, _Hash, _Pred,82,2731

/usr/include/c++/13/experimental/utility,47
#define _GLIBCXX_EXPERIMENTAL_UTILITY 31,1214

/usr/include/c++/13/experimental/vector,163
#define _GLIBCXX_EXPERIMENTAL_VECTOR 31,1211
namespace std _GLIBCXX_VISIBILITY(43,1458
#define __cpp_lib_experimental_erase_if 51,1597
  namespace pmr 69,2126

/usr/include/c++/13/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp,4079
namespace __gnu_pbds55,2175
  namespace detail57,2198
#define PB_DS_BIN_TREE_NAME 60,2254
#define PB_DS_BIN_TREE_NAME 64,2344
#define PB_DS_CLASS_T_DEC 67,2400
#define PB_DS_CLASS_C_DEC 71,2544
#define PB_DS_BIN_TREE_TRAITS_BASE 74,2646
#define PB_DS_DEBUG_MAP_BASE_C_DEC 78,2751
#define PB_DS_TREE_TRACE_BASE_C_DEC 84,2933
    template<typename Key,97,3333
    template<typename Key, typename Mapped,97,3333
    template<typename Key, typename Mapped, typename Cmp_Fn,97,3333
	     typename Node_And_It_Traits,98,3394
    class PB_DS_BIN_TREE_NAME 99,3446
      typedef Node_And_It_Traits 			traits_type;110,3734
      typedef rebind_traits<_Alloc,_Alloc111,3783
	node_alloc_traits;112,3847
      typedef PB_DS_BIN_TREE_TRAITS_BASE 	       	traits_base;115,3883
      typename node_alloc_traits::allocator_type	node_allocator;118,3961
      typedef typename node_alloc_traits::value_type 	node;120,4027
      typedef typename node_alloc_traits::pointer 	node_pointer;121,4087
      null_node_update_pointer;124,4214
      typedef cond_dealtor<node,node127,4260
      typedef cond_dealtor<node, _Alloc> 		cond_dealtor_t;127,4260
      typedef PB_DS_DEBUG_MAP_BASE_C_DEC 		debug_base;130,4342
      typedef typename _Alloc::size_type 		size_type;134,4417
      typedef typename _Alloc::difference_type 	difference_type;135,4471
      typedef typename traits_base::key_type 		key_type;136,4536
      typedef typename traits_base::key_pointer 	key_pointer;137,4593
      typedef typename traits_base::key_const_pointer 	key_const_pointer;138,4655
      typedef typename traits_base::key_reference 	key_reference;139,4729
      typedef typename traits_base::key_const_reference key_const_reference;140,4795
      typedef typename traits_base::mapped_type 	mapped_type;143,4906
      typedef typename traits_base::mapped_pointer 	mapped_pointer;144,4968
      typedef typename traits_base::mapped_const_pointer mapped_const_pointer;145,5036
      typedef typename traits_base::mapped_reference 	mapped_reference;146,5115
      typedef typename traits_base::mapped_const_reference mapped_const_reference;147,5187
      typedef typename traits_base::value_type 		value_type;150,5278
      typedef typename traits_base::pointer 		pointer;151,5339
      typedef typename traits_base::const_pointer 	const_pointer;152,5394
      typedef typename traits_base::reference 		reference;153,5460
      typedef typename traits_base::const_reference 	const_reference;154,5519
      typedef typename traits_type::point_const_iterator point_const_iterator;155,5589
      typedef point_const_iterator 			const_iterator;157,5669
      typedef typename traits_type::point_iterator 	point_iterator;158,5723
      typedef point_iterator 				iterator;159,5791
      typedef typename traits_type::const_reverse_iterator const_reverse_iterator;161,5835
      typedef typename traits_type::reverse_iterator 	reverse_iterator;163,5919
      typedef typename traits_type::node_const_iterator node_const_iterator;164,5991
      typedef typename traits_type::node_iterator 	node_iterator;165,6068
      typedef typename traits_type::node_update 	node_update;166,6134
      typedef Cmp_Fn 					cmp_fn;168,6197
      typedef _Alloc 					allocator_type;169,6231
      inline std::pair<std::pair286,8701
      inline std::pair<std::pair295,8893
      typedef std::pair<const_pointer,const_pointer382,10813
      typedef std::pair<const_pointer, const_pointer> node_consistent_t;382,10813
      node_pointer 		m_p_head;395,11108
      size_type 		m_size;396,11139
      static node_allocator 	s_node_allocator;397,11165
#define PB_DS_STRUCT_ONLY_ASSERT_VALID(400,11220
#define PB_DS_ASSERT_NODE_CONSISTENT(403,11342
#undef PB_DS_ASSERT_NODE_CONSISTENT417,12132
#undef PB_DS_STRUCT_ONLY_ASSERT_VALID418,12168
#undef PB_DS_CLASS_C_DEC419,12206
#undef PB_DS_CLASS_T_DEC420,12231
#undef PB_DS_BIN_TREE_NAME421,12256
#undef PB_DS_BIN_TREE_TRAITS_BASE422,12283
#undef PB_DS_DEBUG_MAP_BASE_C_DEC423,12317
#undef PB_DS_TREE_TRACE_BASE_C_DEC426,12376

/usr/include/c++/13/ext/pb_ds/detail/bin_search_tree_/constructors_destructor_fn_imps.hpp,308
PB_DS_CLASS_C_DEC::s_node_allocator;45,1828
PB_DS_BIN_TREE_NAME(49,1904
PB_DS_BIN_TREE_NAME(57,2079
PB_DS_BIN_TREE_NAME(66,2296
PB_DS_BIN_TREE_NAME(78,2581
swap(114,3434
value_swap(127,3747
~PB_DS_BIN_TREE_NAME(136,3949
initialize(145,4075
recursive_copy_node(156,4281
initialize_min_max(198,5082

/usr/include/c++/13/ext/pb_ds/detail/bin_search_tree_/debug_fn_imps.hpp,441
assert_valid(48,1815
structure_only_assert_valid(67,2222
assert_node_consistent(91,2903
assert_node_consistent_(100,3136
assert_node_consistent_with_left(130,4121
assert_node_consistent_with_right(143,4478
assert_min(156,4840
assert_min_imp(164,4993
assert_max(183,5378
assert_max_imp(191,5531
assert_iterators(212,5929
assert_consistent_with_debug_base(254,7328
assert_consistent_with_debug_base(263,7573
assert_size(276,7966

/usr/include/c++/13/ext/pb_ds/detail/bin_search_tree_/erase_fn_imps.hpp,101
actual_erase_node(46,1799
update_min_max_for_erased_node(58,2070
clear(83,2517
clear_imp(96,2766

/usr/include/c++/13/ext/pb_ds/detail/bin_search_tree_/find_fn_imps.hpp,115
lower_bound(46,1842
lower_bound(65,2259
upper_bound(84,2676
upper_bound(103,3099
find(122,3516
find(150,4152

/usr/include/c++/13/ext/pb_ds/detail/bin_search_tree_/info_fn_imps.hpp,47
empty(47,1817
size(55,1943
max_size(63,2063

/usr/include/c++/13/ext/pb_ds/detail/bin_search_tree_/insert_fn_imps.hpp,151
insert_leaf(46,1855
insert_leaf_new(97,3039
insert_imp_empty(136,4151
get_new_node_for_leaf_insert(155,4730
get_new_node_for_leaf_insert(172,5191

/usr/include/c++/13/ext/pb_ds/detail/bin_search_tree_/iterators_fn_imps.hpp,197
begin(46,1835
begin(54,1977
end(62,2125
end(70,2255
rbegin(78,2405
rbegin(86,2571
rend(94,2725
rend(102,2872
node_begin(110,3028
node_begin(118,3193
node_end(126,3352
node_end(134,3496

/usr/include/c++/13/ext/pb_ds/detail/bin_search_tree_/node_iterators.hpp,1764
#define PB_DS_BIN_SEARCH_TREE_NODE_ITERATORS_HPP42,1773
namespace __gnu_pbds46,1863
  namespace detail48,1886
#define PB_DS_TREE_CONST_NODE_ITERATOR_CLASS_C_DEC 50,1909
    template<typename Node,54,2067
    class bin_search_tree_const_node_it_58,2168
      typedef typename rebind_traits<rebind_traits61,2228
      typedef typename rebind_traits<_Alloc, Node>::pointer node_pointer;61,2228
      typedef trivial_iterator_tag iterator_category;65,2335
      typedef trivial_iterator_difference_type difference_type;68,2417
      typedef Const_Iterator value_type;71,2515
      typedef Const_Iterator reference;74,2594
      typedef Const_Iterator const_reference;77,2680
      typedef typename Node::metadata_type metadata_type;80,2752
      typedef typename rebind_traits<rebind_traits83,2852
	metadata_const_reference;84,2929
      bin_search_tree_const_node_it_(87,2958
      operator*(93,3122
      get_metadata(98,3246
      get_l_child(103,3439
      get_r_child(108,3670
      operator==(operator==113,3839
      operator!=(operator!=118,4036
      node_pointer m_p_nd;121,4158
#define PB_DS_TREE_NODE_ITERATOR_CLASS_C_DEC 124,4193
    template<typename Node,128,4333
    class bin_search_tree_node_it_132,4434
      typedef typename rebind_traits<rebind_traits136,4544
      typedef typename rebind_traits<_Alloc, Node>::pointer node_pointer;136,4544
      typedef Iterator value_type;140,4664
      typedef Iterator reference;143,4737
      typedef Iterator const_reference;146,4817
      bin_search_tree_node_it_(149,4871
      operator*(155,5058
      get_l_child(160,5272
      get_r_child(168,5545
#undef PB_DS_TREE_CONST_NODE_ITERATOR_CLASS_C_DEC176,5716
#undef PB_DS_TREE_NODE_ITERATOR_CLASS_C_DEC177,5766

/usr/include/c++/13/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp,2433
#define PB_DS_BIN_SEARCH_TREE_FIND_ITERATORS_HPP42,1774
namespace __gnu_pbds47,1889
  namespace detail49,1912
#define PB_DS_TREE_CONST_IT_C_DEC	52,1936
#define PB_DS_TREE_CONST_ODIR_IT_C_DEC	63,2189
#define PB_DS_TREE_IT_C_DEC	74,2448
#define PB_DS_TREE_ODIR_IT_C_DEC	85,2690
    template<typename Node_Pointer,97,2964
	     typename Value_Type,98,3000
	     typename Pointer,99,3027
	     typename Const_Pointer,100,3051
	     typename Reference,101,3081
	     typename Const_Reference,102,3107
	     bool Is_Forward_Iterator,103,3139
    class bin_search_tree_const_it_105,3194
      typedef std::bidirectional_iterator_tag 		iterator_category;108,3248
      typedef typename _Alloc::difference_type 	difference_type;109,3315
      typedef Value_Type 				value_type;110,3380
      typedef Pointer 					pointer;111,3421
      typedef Const_Pointer 				const_pointer;112,3457
      typedef Reference 				reference;113,3504
      typedef Const_Reference 				const_reference;114,3543
      bin_search_tree_const_it_(117,3608
      bin_search_tree_const_it_(122,3741
      operator=(operator=128,3906
      operator=(operator=136,4065
      operator->(143,4209
      operator*(150,4343
      operator==(operator==157,4464
      operator==(operator==161,4588
      operator!=(operator!=165,4717
      operator!=(operator!=169,4840
      operator++(173,4991
      operator++(181,5170
      operator--(189,5324
      operator--(196,5466
      inc(205,5612
      inc(209,5674
      dec(238,6194
      dec(242,6256
      Node_Pointer m_p_nd;270,6783
    template<typename Node_Pointer,274,6836
	     typename Value_Type,275,6872
	     typename Pointer,276,6899
	     typename Const_Pointer,277,6923
	     typename Reference,278,6953
	     typename Const_Reference,279,6979
	     bool Is_Forward_Iterator,280,7011
    class bin_search_tree_it_ 282,7066
      bin_search_tree_it_(286,7162
      bin_search_tree_it_(291,7296
      operator=(operator=297,7462
      operator=(operator=305,7623
      operator->(312,7805
      operator*(319,7997
      operator++(326,8163
      operator++(333,8290
      operator--(341,8446
      operator--(348,8573
      typedef PB_DS_TREE_CONST_IT_C_DEC base_it_type;356,8709
#undef PB_DS_TREE_CONST_IT_C_DEC359,8771
#undef PB_DS_TREE_CONST_ODIR_IT_C_DEC360,8804
#undef PB_DS_TREE_IT_C_DEC361,8842
#undef PB_DS_TREE_ODIR_IT_C_DEC362,8869

/usr/include/c++/13/ext/pb_ds/detail/bin_search_tree_/policy_access_fn_imps.hpp,40
get_cmp_fn(46,1804
get_cmp_fn(52,1891

/usr/include/c++/13/ext/pb_ds/detail/bin_search_tree_/r_erase_fn_imps.hpp,101
actual_erase_node(46,1801
update_min_max_for_erased_node(58,2060
clear(83,2507
clear_imp(96,2756

/usr/include/c++/13/ext/pb_ds/detail/bin_search_tree_/rotate_fn_imps.hpp,161
rotate_left(46,1779
rotate_right(77,2452
rotate_parent(108,3129
apply_update(125,3502
apply_update(132,3664
update_to_top(142,3916
update_to_top(155,4135

/usr/include/c++/13/ext/pb_ds/detail/bin_search_tree_/split_join_fn_imps.hpp,109
join_prep(46,1797
join_finish(81,2528
split_prep(90,2660
split_finish(133,3569
recursive_count(146,3887

/usr/include/c++/13/ext/pb_ds/detail/bin_search_tree_/traits.hpp,2975
#define PB_DS_BIN_SEARCH_TREE_NODE_AND_IT_TRAITS_HPP42,1763
namespace __gnu_pbds47,1947
  namespace detail49,1970
    template<typename Key,53,2069
	     typename Mapped,54,2096
	     template<typename Node_CItr,56,2139
    struct bin_search_tree_traits63,2312
      typedef types_traits<Key,Key66,2365
      typedef types_traits<Key, Mapped,66,2365
      typedef types_traits<Key, Mapped, _Alloc,66,2365
      typedef types_traits<Key, Mapped, _Alloc, false> type_traits;66,2365
      typedef rebind_traits<_Alloc,_Alloc67,2433
      typedef rebind_traits<_Alloc, Node> node_alloc_traits;67,2433
      typedef Node node;70,2507
	typename node_alloc_traits::pointer,74,2580
	typename type_traits::value_type,75,2618
	typename type_traits::pointer,76,2653
	typename type_traits::const_pointer,77,2685
	typename type_traits::reference,78,2723
	typename type_traits::const_reference,79,2757
	true,80,2797
      point_const_iterator;82,2813
	typename node_alloc_traits::pointer,86,2883
	typename type_traits::value_type,87,2921
	typename type_traits::pointer,88,2956
	typename type_traits::const_pointer,89,2988
	typename type_traits::reference,90,3026
	typename type_traits::const_reference,91,3060
	true,92,3100
      point_iterator;94,3116
	typename node_alloc_traits::pointer,98,3186
	typename type_traits::value_type,99,3224
	typename type_traits::pointer,100,3259
	typename type_traits::const_pointer,101,3291
	typename type_traits::reference,102,3329
	typename type_traits::const_reference,103,3363
	false,104,3403
      const_reverse_iterator;106,3420
	typename node_alloc_traits::pointer,110,3492
	typename type_traits::value_type,111,3530
	typename type_traits::pointer,112,3565
	typename type_traits::const_pointer,113,3597
	typename type_traits::reference,114,3635
	typename type_traits::const_reference,115,3669
	false,116,3709
      reverse_iterator;118,3726
	Node,124,3942
	point_const_iterator,125,3949
	point_iterator,126,3972
      node_const_iterator;128,3998
	Node,132,4072
	point_const_iterator,133,4079
	point_iterator,134,4102
      node_iterator;136,4128
	node_const_iterator,140,4183
	node_iterator,141,4205
	Cmp_Fn,142,4221
      node_update;144,4239
	node_const_iterator,148,4309
	node_iterator,149,4331
	Cmp_Fn,150,4347
      null_node_update_pointer;152,4367
    template<typename Key,157,4455
	     template<typename Node_CItr,159,4502
      typedef types_traits<Key, null_type, _Alloc, false> type_traits;170,4783
      typedef rebind_traits<_Alloc, Node> node_alloc_traits;171,4854
      typedef Node node;174,4928
      point_const_iterator;186,5234
      typedef point_const_iterator point_iterator;188,5263
      const_reverse_iterator;200,5596
      typedef const_reverse_iterator reverse_iterator;202,5627
      node_const_iterator;212,5930
      typedef node_const_iterator node_iterator;214,5958
      node_update;218,6092
      null_node_update_pointer;226,6220

/usr/include/c++/13/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp,3040
#define PB_DS_BINARY_HEAP_HPP42,1745
namespace __gnu_pbds60,2371
  namespace detail62,2394
#define PB_DS_CLASS_T_DEC 64,2417
#define PB_DS_CLASS_C_DEC 67,2514
#define PB_DS_ENTRY_CMP_DEC 70,2587
#define PB_DS_RESIZE_POLICY_DEC	73,2696
    template<typename Value_Type,83,2941
    template<typename Value_Type, typename Cmp_Fn,83,2941
    class binary_heap84,3009
      typedef Value_Type 				value_type;88,3114
      typedef Cmp_Fn 					cmp_fn;89,3155
      typedef _Alloc 					allocator_type;90,3189
      typedef typename _Alloc::size_type 		size_type;91,3231
      typedef typename _Alloc::difference_type 		difference_type;92,3285
      typedef typename PB_DS_ENTRY_CMP_DEC 		entry_cmp;93,3351
      typedef PB_DS_RESIZE_POLICY_DEC 			resize_policy;94,3407
      typedef cond_dealtor<value_type,value_type95,3463
      typedef cond_dealtor<value_type, _Alloc> 		cond_dealtor_t;95,3463
	  simple_value 100,3556
      typedef integral_constant<int,int103,3608
      typedef integral_constant<int, simple_value> 	no_throw_copies_t;103,3608
      typedef rebind_traits<_Alloc,_Alloc105,3680
      typedef rebind_traits<_Alloc, value_type>		__rebind_v;105,3680
      typedef typename __rebind_v::allocator_type 	value_allocator;106,3741
      typedef typename __rebind_v::pointer		pointer;109,3822
      typedef typename __rebind_v::const_pointer	const_pointer;110,3875
      typedef typename __rebind_v::reference	reference;111,3939
      typedef typename __rebind_v::const_reference	const_reference;112,3995
      typedef typename __conditional_type<__conditional_type114,4064
      							entry;116,4156
      typedef typename rebind_traits<rebind_traits118,4177
      							entry_allocator;119,4245
      typedef typename rebind_traits<rebind_traits121,4276
      typedef typename rebind_traits<_Alloc, entry>::pointer 	entry_pointer;121,4276
      typedef binary_heap_point_const_iterator_<value_type,value_type123,4354
      typedef binary_heap_point_const_iterator_<value_type, entry,123,4354
						simple_value,124,4421
      							point_const_iterator;125,4449
      typedef point_const_iterator 			point_iterator;127,4485
      typedef binary_heap_const_iterator_<value_type,value_type129,4540
      typedef binary_heap_const_iterator_<value_type, entry,129,4540
					  simple_value,130,4601
      							const_iterator;131,4630
      typedef const_iterator 				iterator;133,4660
      make_heap(264,6879
      push_heap(272,7068
      pop_heap(280,7257
      static entry_allocator 	s_entry_allocator;300,7682
      static value_allocator 	s_value_allocator;301,7731
      static no_throw_copies_t 	s_no_throw_copies_ind;302,7780
      size_type 		m_size;304,7836
      size_type 		m_actual_size;305,7862
      entry_pointer 		m_a_entries;306,7895
#define PB_DS_ASSERT_VALID(309,7938
#define PB_DS_DEBUG_VERIFY(312,8030
#undef PB_DS_CLASS_C_DEC329,8860
#undef PB_DS_CLASS_T_DEC330,8885
#undef PB_DS_ENTRY_CMP_DEC331,8910
#undef PB_DS_RESIZE_POLICY_DEC332,8937

/usr/include/c++/13/ext/pb_ds/detail/binary_heap_/const_iterator.hpp,1238
#define PB_DS_BINARY_HEAP_CONST_ITERATOR_HPP43,1799
namespace __gnu_pbds48,1937
  namespace detail50,1960
#define PB_DS_BIN_HEAP_CIT_BASE 52,1983
    template<typename Value_Type,56,2126
	     typename Entry,57,2160
	     bool Simple,58,2182
    class binary_heap_const_iterator_ 60,2224
      typedef PB_DS_BIN_HEAP_CIT_BASE 		       	base_type;63,2314
      typedef typename base_type::entry_pointer 	entry_pointer;64,2373
      typedef std::forward_iterator_tag 		iterator_category;68,2470
      typedef typename _Alloc::difference_type 		difference_type;71,2559
      typedef typename base_type::value_type 		value_type;74,2659
      typedef typename base_type::pointer 		pointer;77,2754
      typedef typename base_type::const_pointer 	const_pointer;80,2849
      typedef typename base_type::reference 		reference;83,2951
      typedef typename base_type::const_reference 	const_reference;86,3052
      binary_heap_const_iterator_(89,3134
      binary_heap_const_iterator_(94,3259
      binary_heap_const_iterator_(99,3347
      operator==(operator==105,3537
      operator!=(operator!=110,3743
      operator++(114,3902
      operator++(122,4049
      inc(131,4198
#undef PB_DS_BIN_HEAP_CIT_BASE135,4248

/usr/include/c++/13/ext/pb_ds/detail/binary_heap_/constructors_destructor_fn_imps.hpp,289
PB_DS_CLASS_C_DEC::s_entry_allocator;45,1821
PB_DS_CLASS_C_DEC::s_value_allocator;49,1922
PB_DS_CLASS_C_DEC::s_no_throw_copies_ind;53,2025
copy_from_range(59,2133
binary_heap(72,2375
binary_heap(79,2570
binary_heap(86,2808
swap(112,3455
value_swap(126,3783
~binary_heap(136,4042

/usr/include/c++/13/ext/pb_ds/detail/binary_heap_/debug_fn_imps.hpp,22
assert_valid(48,1808

/usr/include/c++/13/ext/pb_ds/detail/binary_heap_/entry_cmp.hpp,678
#define PB_DS_BINARY_HEAP_ENTRY_CMP_HPP42,1752
namespace __gnu_pbds44,1793
  namespace detail46,1816
    template<typename _VTp,49,1880
    template<typename _VTp, typename Cmp_Fn,49,1880
    template<typename _VTp, typename Cmp_Fn, typename _Alloc,49,1880
    template<typename _VTp,53,2012
    template<typename _VTp, typename Cmp_Fn,53,2012
	typedef Cmp_Fn 						type;57,2147
    template<typename _VTp,61,2216
    template<typename _VTp, typename Cmp_Fn,61,2216
	typedef rebind_traits<_Alloc, _VTp>		__rebind_v;65,2353
	typedef typename __rebind_v::const_pointer	68,2418
	struct type 71,2495
	  type(73,2527
	  type(75,2542
	  operator()(operator()78,2600

/usr/include/c++/13/ext/pb_ds/detail/binary_heap_/entry_pred.hpp,669
#define PB_DS_BINARY_HEAP_ENTRY_PRED_HPP42,1754
namespace __gnu_pbds44,1796
  namespace detail46,1819
    template<typename _VTp,49,1890
    template<typename _VTp, typename Pred,49,1890
    template<typename _VTp, typename Pred, typename _Alloc,49,1890
    template<typename _VTp,53,2021
    template<typename _VTp, typename Pred,53,2021
	typedef Pred 						type;56,2139
    template<typename _VTp,60,2206
    template<typename _VTp, typename Pred,60,2206
	typedef rebind_traits<_Alloc, _VTp>		__rebind_v;64,2340
	typedef typename __rebind_v::const_pointer	67,2405
	struct type 69,2457
	  type(72,2497
	  type(75,2522
	  operator()(operator()78,2583

/usr/include/c++/13/ext/pb_ds/detail/binary_heap_/erase_fn_imps.hpp,207
clear(46,1785
erase_at(70,2353
erase_at(79,2540
pop(85,2641
erase_if(103,3004
  typedef typename entry_pred<entry_pred107,3057
erase(139,3919
resize_for_erase_if_needed(162,4441
partition(187,5119

/usr/include/c++/13/ext/pb_ds/detail/binary_heap_/find_fn_imps.hpp,104
top(46,1830
top_imp(56,2042
top_imp(62,2182
left_child(68,2318
right_child(74,2448
parent(80,2579

/usr/include/c++/13/ext/pb_ds/detail/binary_heap_/info_fn_imps.hpp,47
empty(47,1810
size(53,1932
max_size(59,2048

/usr/include/c++/13/ext/pb_ds/detail/binary_heap_/insert_fn_imps.hpp,176
push(46,1831
insert_value(58,2073
insert_value(67,2232
resize_for_insert_if_needed(80,2537
modify(102,3119
fix(113,3359
swap_value_imp(165,4741
swap_value_imp(171,4877

/usr/include/c++/13/ext/pb_ds/detail/binary_heap_/iterators_fn_imps.hpp,56
begin(46,1828
begin(52,1959
end(58,2096
end(64,2234

/usr/include/c++/13/ext/pb_ds/detail/binary_heap_/point_const_iterator.hpp,1411
#define PB_DS_BINARY_HEAP_CONST_FIND_ITERATOR_HPP43,1806
namespace __gnu_pbds48,1922
  namespace detail50,1945
    template<typename Value_Type,53,2003
    template<typename Value_Type, typename Entry,53,2003
    template<typename Value_Type, typename Entry, bool Simple,53,2003
    class binary_heap_point_const_iterator_55,2090
      typedef typename rebind_traits<rebind_traits58,2155
      typedef typename rebind_traits<_Alloc, Entry>::pointer entry_pointer;58,2155
      typedef trivial_iterator_tag iterator_category;62,2264
      typedef trivial_iterator_difference_type difference_type;65,2346
      typedef Value_Type value_type;68,2444
      typedef typename rebind_traits<rebind_traits71,2517
      typedef typename rebind_traits<_Alloc, value_type>::pointer pointer;71,2517
      typedef typename rebind_traits<rebind_traits74,2634
	const_pointer;75,2706
      typedef typename rebind_traits<rebind_traits78,2760
	reference;79,2828
      typedef typename rebind_traits<rebind_traits82,2884
	const_reference;83,2958
      binary_heap_point_const_iterator_(86,2990
      binary_heap_point_const_iterator_(91,3117
      binary_heap_point_const_iterator_(95,3216
      operator->(101,3387
      operator*(109,3562
      operator==(operator==117,3767
      operator!=(operator!=122,3968
      to_ptr(127,4119
      to_ptr(131,4201
      entry_pointer m_p_e;135,4270

/usr/include/c++/13/ext/pb_ds/detail/binary_heap_/policy_access_fn_imps.hpp,40
get_cmp_fn(46,1797
get_cmp_fn(54,1886

/usr/include/c++/13/ext/pb_ds/detail/binary_heap_/resize_policy.hpp,760
#define PB_DS_BINARY_HEAP_RESIZE_POLICY_HPP42,1760
namespace __gnu_pbds46,1831
  namespace detail48,1854
    class resize_policy52,1943
	  ratio 57,2000
	  factor 58,2014
      _Tp 		m_shrink_size;62,2061
      _Tp 		m_grow_size;65,2115
      typedef _Tp	size_type;68,2153
      resize_policy(72,2222
      resize_policy(75,2325
      const _Tp resize_policy<_Tp>::min_size;min_size124,3318
    swap(129,3433
    resize_needed_for_grow(138,3652
    resize_needed_for_shrink(147,3866
    get_new_size_for_grow(156,4118
    get_new_size_for_shrink(162,4292
    get_new_size_for_arbitrary(171,4543
    notify_grow_resize(182,4768
    notify_shrink_resize(194,5068
    notify_arbitrary(207,5387
    assert_valid(218,5637
    trace(230,5946

/usr/include/c++/13/ext/pb_ds/detail/binary_heap_/split_join_fn_imps.hpp,74
split(47,1814
    typename entry_pred<entry_pred52,1900
join(115,3608

/usr/include/c++/13/ext/pb_ds/detail/binary_heap_/trace_fn_imps.hpp,57
trace(48,1818
trace_entry(67,2202
trace_entry(75,2346

/usr/include/c++/13/ext/pb_ds/detail/binomial_heap_/binomial_heap_.hpp,1575
namespace __gnu_pbds52,1971
  namespace detail54,1994
#define PB_DS_CLASS_T_DEC 56,2017
#define PB_DS_CLASS_C_DEC 59,2114
    template<typename Value_Type,67,2264
    template<typename Value_Type, typename Cmp_Fn,67,2264
    class binomial_heap68,2332
      typedef binomial_heap_base<Value_Type,Value_Type72,2435
      typedef binomial_heap_base<Value_Type, Cmp_Fn,72,2435
      typedef binomial_heap_base<Value_Type, Cmp_Fn, _Alloc> 	base_type;72,2435
      typedef typename base_type::node_pointer 		node_pointer;73,2508
      typedef typename base_type::node_const_pointer 	node_const_pointer;74,2571
      typedef Value_Type 				value_type;77,2658
      typedef typename _Alloc::size_type 		size_type;78,2699
      typedef typename _Alloc::difference_type 		difference_type;79,2753
      typedef typename base_type::pointer 		pointer;80,2819
      typedef typename base_type::const_pointer 	const_pointer;81,2872
      typedef typename base_type::reference 		reference;82,2936
      typedef typename base_type::const_reference 	const_reference;83,2993
      typedef typename base_type::point_const_iterator 	point_const_iterator;84,3061
      typedef typename base_type::point_iterator 	point_iterator;85,3139
      typedef typename base_type::const_iterator 	const_iterator;86,3205
      typedef typename base_type::iterator 		iterator;87,3271
      typedef typename base_type::cmp_fn 		cmp_fn;88,3326
      typedef typename base_type::allocator_type 	allocator_type;89,3377
#undef PB_DS_CLASS_C_DEC109,3822
#undef PB_DS_CLASS_T_DEC110,3847

/usr/include/c++/13/ext/pb_ds/detail/binomial_heap_/constructors_destructor_fn_imps.hpp,93
binomial_heap(45,1802
binomial_heap(50,1889
binomial_heap(56,2020
~binomial_heap(62,2156

/usr/include/c++/13/ext/pb_ds/detail/binomial_heap_/debug_fn_imps.hpp,22
assert_valid(48,1812

/usr/include/c++/13/ext/pb_ds/detail/binomial_heap_base_/binomial_heap_base_.hpp,1946
#define PB_DS_BINOMIAL_HEAP_BASE_HPP42,1777
namespace __gnu_pbds55,2105
  namespace detail57,2128
#define PB_DS_CLASS_T_DEC 59,2151
#define PB_DS_CLASS_C_DEC 62,2248
#define PB_DS_B_HEAP_BASE 66,2350
#define PB_DS_B_HEAP_BASE 70,2485
    template<typename Value_Type,76,2652
    template<typename Value_Type, typename Cmp_Fn,76,2652
    class binomial_heap_base77,2720
      typedef rebind_traits<_Alloc,_Alloc81,2799
      typedef rebind_traits<_Alloc, Value_Type>		__rebind_v;81,2799
      typedef PB_DS_B_HEAP_BASE	  			base_type;82,2860
      typedef typename base_type::node 			node;85,2924
      typedef typename base_type::node_pointer 		node_pointer;86,2972
      typedef typename base_type::node_const_pointer 	node_const_pointer;87,3035
      typedef Value_Type 				value_type;90,3122
      typedef Cmp_Fn 					cmp_fn;91,3163
      typedef _Alloc 					allocator_type;92,3197
      typedef typename _Alloc::size_type 		size_type;93,3239
      typedef typename _Alloc::difference_type 		difference_type;94,3293
      typedef typename __rebind_v::pointer 		pointer;96,3360
      typedef typename __rebind_v::const_pointer 	const_pointer;97,3414
      typedef typename __rebind_v::reference 		reference;98,3479
      typedef typename __rebind_v::const_reference   	const_reference;99,3537
      typedef typename base_type::point_const_iterator 	point_const_iterator;101,3609
      typedef typename base_type::point_iterator 	point_iterator;102,3687
      typedef typename base_type::const_iterator 	const_iterator;103,3753
      typedef typename base_type::iterator 		iterator;104,3819
      node_pointer 	m_p_max;186,5225
#define PB_DS_ASSERT_VALID_COND(189,5262
#define PB_DS_ASSERT_BASE_NODE_CONSISTENT(192,5398
#undef PB_DS_ASSERT_BASE_NODE_CONSISTENT203,5980
#undef PB_DS_ASSERT_VALID_COND204,6021
#undef PB_DS_CLASS_C_DEC205,6052
#undef PB_DS_CLASS_T_DEC206,6077
#undef PB_DS_B_HEAP_BASE207,6102

/usr/include/c++/13/ext/pb_ds/detail/binomial_heap_base_/constructors_destructor_fn_imps.hpp,152
copy_from_range(47,1843
binomial_heap_base(56,2023
binomial_heap_base(63,2141
binomial_heap_base(69,2300
swap(76,2469
~binomial_heap_base(86,2688

/usr/include/c++/13/ext/pb_ds/detail/binomial_heap_base_/debug_fn_imps.hpp,74
assert_valid(48,1826
assert_max(59,2114
assert_node_consistent(72,2466

/usr/include/c++/13/ext/pb_ds/detail/binomial_heap_base_/erase_fn_imps.hpp,95
pop(46,1803
remove_parentless_node(65,2179
clear(97,3027
erase(106,3120
erase_if(122,3511

/usr/include/c++/13/ext/pb_ds/detail/binomial_heap_base_/find_fn_imps.hpp,31
top(46,1848
find_max(61,2138

/usr/include/c++/13/ext/pb_ds/detail/binomial_heap_base_/insert_fn_imps.hpp,66
push(46,1849
insert_node(59,2144
fix(108,3554
modify(146,4420

/usr/include/c++/13/ext/pb_ds/detail/binomial_heap_base_/split_join_fn_imps.hpp,45
split(47,1832
join(108,3376
join(138,4087

/usr/include/c++/13/ext/pb_ds/detail/branch_policy/branch_policy.hpp,1657
#define PB_DS_BRANCH_POLICY_BASE_HPP42,1745
namespace __gnu_pbds47,1868
  namespace detail49,1891
    template<typename Node_CItr,52,1982
    template<typename Node_CItr, typename Node_Itr,52,1982
      struct branch_policy53,2051
	typedef typename Node_Itr::value_type 		it_type;56,2103
	typedef typename std::iterator_traits<it_type>::value_type value_type;57,2153
	typedef typename value_type::first_type 	key_type;58,2225
	typedef typename remove_const<value_type>::type	rcvalue_type;60,2278
	typedef typename remove_const<key_type>::type	rckey_type;61,2341
	typedef rebind_traits<_Alloc,_Alloc63,2401
	typedef rebind_traits<_Alloc, rcvalue_type>	rebind_v;63,2401
	typedef rebind_traits<_Alloc,_Alloc64,2456
	typedef rebind_traits<_Alloc, rckey_type>	rebind_k;64,2456
	typedef	typename rebind_v::reference 		reference;66,2510
	typedef	typename rebind_v::const_reference 	const_reference;67,2561
	typedef	typename rebind_v::const_pointer	const_pointer;68,2623
	typedef	typename rebind_k::const_reference 	key_const_reference;70,2681
	extract_key(73,2783
	end_iterator(80,2884
	~branch_policy(84,2969
    template<typename Node_CItr,88,3045
	typedef typename Node_CItr::value_type 92,3177
       	typedef typename std::iterator_traits<std::iterator_traits93,3231
	typedef typename remove_const<remove_const94,3310
	typedef rebind_traits<_Alloc, rcvalue_type>	rebind_v;95,3377
	typedef	typename rebind_v::reference 96,3432
	typedef	typename rebind_v::const_reference 97,3483
	typedef	typename rebind_v::const_pointer	98,3545
	typedef value_type 				key_type;100,3603
	typedef	typename rebind_v::const_reference 101,3637

/usr/include/c++/13/ext/pb_ds/detail/branch_policy/null_node_metadata.hpp,655
#define PB_DS_0_NODE_METADATA_HPP42,1760
namespace __gnu_pbds46,1841
  namespace detail48,1864
    template<typename Key,51,1919
    template<typename Key, typename Data,51,1919
      struct dumnode_const_iterator52,1978
	typedef types_traits<Key,Key55,2037
	typedef types_traits<Key, Data,55,2037
	typedef types_traits<Key, Data, _Alloc,55,2037
	typedef types_traits<Key, Data, _Alloc, false>	__traits_type;55,2037
	typedef typename __traits_type::pointer        	const_iterator;56,2100
	typedef const_iterator 				value_type;59,2181
	typedef const_iterator 				const_reference;60,2221
	typedef const_reference 	       		reference;61,2266

/usr/include/c++/13/ext/pb_ds/detail/branch_policy/traits.hpp,419
#define PB_DS_NODE_AND_IT_TRAITS_HPP42,1751
#define PB_DS_DEBUG_VERIFY(49,2025
namespace __gnu_pbds55,2230
  namespace detail57,2253
    template<typename Key,60,2321
	     typename Data,61,2348
	     typename Cmp_Fn,62,2369
	     typename Tag,68,2530
    template<typename Key,73,2643
	     typename Data,74,2670
	     typename _ATraits,75,2691
	     typename Tag,81,2856
#undef PB_DS_DEBUG_VERIFY93,3180

/usr/include/c++/13/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp,5811
namespace __gnu_pbds58,2197
  namespace detail60,2220
#define PB_DS_CC_HASH_NAME 63,2276
#define PB_DS_CC_HASH_NAME 67,2355
#define PB_DS_CLASS_T_DEC 70,2400
#define PB_DS_CLASS_C_DEC 75,2604
#define PB_DS_HASH_EQ_FN_C_DEC 79,2745
#define PB_DS_RANGED_HASH_FN_C_DEC 82,2826
#define PB_DS_CC_HASH_TRAITS_BASE 85,2931
#define PB_DS_DEBUG_MAP_BASE_C_DEC 89,3040
    template<typename Key,132,4624
	     typename Mapped,133,4651
	     typename Hash_Fn,134,4674
	     typename Eq_Fn,135,4698
	     typename _Alloc,136,4720
	     bool Store_Hash,137,4743
	     typename Comb_Hash_Fn,138,4766
    class PB_DS_CC_HASH_NAME:PB_DS_CC_HASH_NAME140,4825
      typedef PB_DS_CC_HASH_TRAITS_BASE	       	traits_base;150,5092
      typedef typename traits_base::comp_hash 	comp_hash;151,5153
      typedef typename traits_base::value_type 	value_type_;152,5211
      typedef typename traits_base::pointer 	pointer_;153,5272
      typedef typename traits_base::const_pointer const_pointer_;154,5327
      typedef typename traits_base::reference 	reference_;155,5393
      typedef typename traits_base::const_reference const_reference_;156,5452
      struct entry 158,5523
	typename rebind_traits<rebind_traits160,5589
	typename rebind_traits<_Alloc, entry>::pointer m_p_next;160,5589
      typedef cond_dealtor<entry,entry163,5657
      typedef cond_dealtor<entry, _Alloc> 	cond_dealtor_t;163,5657
      typedef rebind_traits<_Alloc,_Alloc165,5717
      typedef rebind_traits<_Alloc, entry> entry_traits;165,5717
      typedef typename entry_traits::allocator_type entry_allocator;166,5774
      typedef typename entry_traits::pointer entry_pointer;167,5843
      typedef typename entry_traits::const_pointer const_entry_pointer;168,5903
      typedef typename entry_traits::reference entry_reference;169,5975
      typedef typename entry_traits::const_reference const_entry_reference;170,6039
      typedef rebind_traits<_Alloc,_Alloc172,6116
      typedef rebind_traits<_Alloc, entry_pointer> entry_pointer_traits;172,6116
      typedef typename entry_pointer_traits::allocator_type entry_pointer_allocator;173,6189
      typedef typename entry_pointer_traits::pointer entry_pointer_array;174,6274
      typedef PB_DS_RANGED_HASH_FN_C_DEC ranged_hash_fn_base;176,6349
      typedef PB_DS_HASH_EQ_FN_C_DEC hash_eq_fn_base;177,6411
      typedef Resize_Policy resize_base;178,6465
      typedef PB_DS_DEBUG_MAP_BASE_C_DEC 	debug_base;181,6529
#define PB_DS_GEN_POS 184,6591
#undef PB_DS_GEN_POS191,6932
      typedef _Alloc 				allocator_type;194,6966
      typedef typename _Alloc::size_type 	size_type;195,7007
      typedef typename _Alloc::difference_type 	difference_type;196,7060
      typedef Hash_Fn 				hash_fn;197,7125
      typedef Eq_Fn 				eq_fn;198,7160
      typedef Comb_Hash_Fn 			comb_hash_fn;199,7191
      typedef Resize_Policy 			resize_policy;200,7235
	  store_hash 205,7340
      typedef typename traits_base::key_type key_type;208,7372
      typedef typename traits_base::key_pointer key_pointer;209,7427
      typedef typename traits_base::key_const_pointer key_const_pointer;210,7488
      typedef typename traits_base::key_reference key_reference;211,7561
      typedef typename traits_base::key_const_reference key_const_reference;212,7626
      typedef typename traits_base::mapped_type mapped_type;213,7703
      typedef typename traits_base::mapped_pointer mapped_pointer;214,7764
      typedef typename traits_base::mapped_const_pointer mapped_const_pointer;215,7831
      typedef typename traits_base::mapped_reference mapped_reference;216,7910
      typedef typename traits_base::mapped_const_reference mapped_const_reference;217,7981
      typedef typename traits_base::value_type 	value_type;218,8064
      typedef typename traits_base::pointer 	pointer;219,8124
      typedef typename traits_base::const_pointer const_pointer;220,8178
      typedef typename traits_base::reference 	reference;221,8243
      typedef typename traits_base::const_reference const_reference;222,8301
      typedef point_iterator_ 			point_iterator;225,8404
      typedef point_const_iterator_ 		point_iterator;229,8495
      typedef point_const_iterator_ 		point_const_iterator;232,8557
      typedef iterator_ 			iterator;235,8651
      typedef const_iterator_ 			iterator;239,8730
      typedef const_iterator_ 			const_iterator;242,8781
      inline std::pair<std::pair312,10267
      insert(313,10312
      subscript_imp(414,12318
      subscript_imp(440,13047
      inline std::pair<std::pair467,13832
      inline std::pair<std::pair470,13925
      insert_new_imp(474,14038
      insert_new_imp(494,14656
      find_key_pointer(514,15373
      find_key_pointer(540,15966
      inc_it_state(579,16901
      inc_it_state(587,17087
      get_start_it_state(609,17612
      static entry_allocator 		s_entry_allocator;648,18532
      static entry_pointer_allocator 	s_entry_pointer_allocator;649,18582
      static iterator 			s_end_it;650,18647
      static const_iterator 		s_const_end_it;651,18682
      static point_iterator 		s_find_end_it;652,18728
      static point_const_iterator 	s_const_find_end_it;653,18773
      size_type 			m_num_e;655,18830
      size_type 			m_num_used_e;656,18858
      entry_pointer_array 		m_entries;657,18891
	  store_hash_ok 661,18945
			  || !is_same<Hash_Fn, __gnu_pbds::null_type>__gnu_pbds::null_type662,18976
			  || !is_same<Hash_Fn, __gnu_pbds::null_type>::valuevalue662,18976
#undef PB_DS_CLASS_T_DEC680,19842
#undef PB_DS_CLASS_C_DEC681,19867
#undef PB_DS_HASH_EQ_FN_C_DEC682,19892
#undef PB_DS_RANGED_HASH_FN_C_DEC683,19922
#undef PB_DS_CC_HASH_TRAITS_BASE684,19956
#undef PB_DS_DEBUG_MAP_BASE_C_DEC685,19989
#undef PB_DS_CC_HASH_NAME686,20023

/usr/include/c++/13/ext/pb_ds/detail/cc_hash_table_map_/cmp_fn_imps.hpp,86
operator==(operator==48,1868
cmp_with_other(55,2029
operator!=(operator!=84,2711

/usr/include/c++/13/ext/pb_ds/detail/cc_hash_table_map_/cond_key_dtor_entry_dealtor.hpp,573
namespace __gnu_pbds41,1752
  namespace detail43,1775
    class cond_dealtor47,1873
      typedef typename HT_Map::entry 		entry;50,1914
      typedef typename HT_Map::entry_allocator 	entry_allocator;51,1960
      typedef typename HT_Map::key_type 	key_type;52,2025
      cond_dealtor(54,2077
      set_key_destruct(63,2275
      set_no_action_destructor(67,2345
      entry_allocator* const 			m_p_a;71,2435
      entry* const 				m_p_e;72,2474
      bool 					m_key_destruct;74,2505
      bool 					m_no_action_destructor;75,2537
    ~cond_dealtor(81,2653

/usr/include/c++/13/ext/pb_ds/detail/cc_hash_table_map_/constructor_destructor_fn_imps.hpp,387
PB_DS_CLASS_C_DEC::s_entry_allocator;46,1868
PB_DS_CLASS_C_DEC::s_entry_pointer_allocator;50,1977
copy_from_range(56,2089
PB_DS_CC_HASH_NAME(64,2230
PB_DS_CC_HASH_NAME(75,2532
PB_DS_CC_HASH_NAME(86,2869
PB_DS_CC_HASH_NAME(100,3393
PB_DS_CC_HASH_NAME(114,3853
PB_DS_CC_HASH_NAME(130,4391
~PB_DS_CC_HASH_NAME(152,4922
swap(158,5010
deallocate_all(178,5476
initialize(187,5612

/usr/include/c++/13/ext/pb_ds/detail/cc_hash_table_map_/constructor_destructor_no_store_hash_fn_imps.hpp,36
constructor_insert_new_imp(47,1873

/usr/include/c++/13/ext/pb_ds/detail/cc_hash_table_map_/constructor_destructor_store_hash_fn_imps.hpp,36
constructor_insert_new_imp(47,1867

/usr/include/c++/13/ext/pb_ds/detail/cc_hash_table_map_/debug_fn_imps.hpp,64
assert_valid(48,1825
assert_entry_pointer_array_valid(57,2043

/usr/include/c++/13/ext/pb_ds/detail/cc_hash_table_map_/debug_no_store_hash_fn_imps.hpp,36
assert_entry_pointer_valid(48,1839

/usr/include/c++/13/ext/pb_ds/detail/cc_hash_table_map_/debug_store_hash_fn_imps.hpp,36
assert_entry_pointer_valid(48,1836

/usr/include/c++/13/ext/pb_ds/detail/cc_hash_table_map_/entry_list_fn_imps.hpp,92
deallocate_links_in_list(46,1815
get_entry(59,2100
get_entry(72,2441
rels_entry(87,2795

/usr/include/c++/13/ext/pb_ds/detail/cc_hash_table_map_/erase_fn_imps.hpp,62
erase_entry_pointer(46,1812
erase_if(61,2209
clear(94,2912

/usr/include/c++/13/ext/pb_ds/detail/cc_hash_table_map_/erase_no_store_hash_fn_imps.hpp,41
erase(47,1864
erase_in_pos_imp(56,2056

/usr/include/c++/13/ext/pb_ds/detail/cc_hash_table_map_/erase_store_hash_fn_imps.hpp,26
erase_in_pos_imp(47,1857

/usr/include/c++/13/ext/pb_ds/detail/cc_hash_table_map_/find_fn_imps.hpp,64
find(46,1848
find(55,2081
find_end(65,2359
find_end(71,2479

/usr/include/c++/13/ext/pb_ds/detail/cc_hash_table_map_/info_fn_imps.hpp,134
size(47,1863
max_size(53,1985
empty(60,2113
operator==(operator==67,2234
cmp_with_other(74,2395
operator!=(operator!=102,3076

/usr/include/c++/13/ext/pb_ds/detail/cc_hash_table_map_/insert_no_store_hash_fn_imps.hpp,20
insert_imp(47,1921

/usr/include/c++/13/ext/pb_ds/detail/cc_hash_table_map_/insert_store_hash_fn_imps.hpp,20
insert_imp(47,1914

/usr/include/c++/13/ext/pb_ds/detail/cc_hash_table_map_/iterators_fn_imps.hpp,136
PB_DS_CLASS_C_DEC::s_end_it;46,1843
PB_DS_CLASS_C_DEC::s_const_end_it;50,1934
begin(55,2052
end(66,2284
begin(72,2400
end(83,2650

/usr/include/c++/13/ext/pb_ds/detail/cc_hash_table_map_/policy_access_fn_imps.hpp,186
get_hash_fn(47,1824
get_hash_fn(53,1911
get_eq_fn(59,1996
get_eq_fn(65,2079
get_comb_hash_fn(71,2169
get_comb_hash_fn(77,2266
get_resize_policy(83,2364
get_resize_policy(89,2463

/usr/include/c++/13/ext/pb_ds/detail/cc_hash_table_map_/resize_fn_imps.hpp,141
do_resize_if_needed(46,1814
do_resize(57,2021
do_resize_if_needed_no_throw(63,2156
resize_imp(81,2430
resize_imp_no_exceptions(114,3229

/usr/include/c++/13/ext/pb_ds/detail/cc_hash_table_map_/resize_no_store_hash_fn_imps.hpp,51
resize_imp_no_exceptions_reassign_pointer(47,1903

/usr/include/c++/13/ext/pb_ds/detail/cc_hash_table_map_/resize_store_hash_fn_imps.hpp,51
resize_imp_no_exceptions_reassign_pointer(47,1896

/usr/include/c++/13/ext/pb_ds/detail/cc_hash_table_map_/size_fn_imps.hpp,47
size(47,1863
empty(54,1971
max_size(60,2095

/usr/include/c++/13/ext/pb_ds/detail/cc_hash_table_map_/trace_fn_imps.hpp,35
trace(48,1830
trace_list(64,2188

/usr/include/c++/13/ext/pb_ds/detail/eq_fn/eq_by_less.hpp,196
#define PB_DS_EQ_BY_LESS_HPP42,1711
namespace __gnu_pbds50,1866
  namespace detail52,1889
    template<typename Key,55,1942
    struct eq_by_less 56,1983
      operator()(operator()59,2039

/usr/include/c++/13/ext/pb_ds/detail/eq_fn/hash_eq_fn.hpp,708
#define PB_DS_HASH_EQ_FN_HPP43,1763
namespace __gnu_pbds49,1883
  namespace detail51,1906
    template<typename Key,54,1955
    template<typename Key, typename Eq_Fn,54,1955
    template<typename Key, typename Eq_Fn, typename _Alloc,54,1955
    template<typename Key,58,2137
    template<typename Key, typename Eq_Fn,58,2137
      typedef Eq_Fn 					   eq_fn_base;61,2267
      typedef typename rebind_traits<rebind_traits62,2307
      operator()(operator()70,2493
    template<typename Key,81,2830
      typedef typename _Alloc::size_type 84,2953
      typedef Eq_Fn 					   eq_fn_base;85,3010
      typedef typename rebind_traits<rebind_traits86,3050
      operator()(operator()94,3236

/usr/include/c++/13/ext/pb_ds/detail/gp_hash_table_map_/constructor_destructor_fn_imps.hpp,395
PB_DS_CLASS_C_DEC::s_entry_allocator;46,1868
copy_from_range(52,1972
PB_DS_GP_HASH_NAME(60,2113
PB_DS_GP_HASH_NAME(71,2407
PB_DS_GP_HASH_NAME(82,2739
PB_DS_GP_HASH_NAME(94,3118
PB_DS_GP_HASH_NAME(108,3563
PB_DS_GP_HASH_NAME(122,4036
PB_DS_GP_HASH_NAME(137,4581
~PB_DS_GP_HASH_NAME(170,5373
swap(176,5461
deallocate_all(194,5926
erase_all_valid_entries(204,6101
initialize(217,6400

/usr/include/c++/13/ext/pb_ds/detail/gp_hash_table_map_/constructor_destructor_no_store_hash_fn_imps.hpp,36
constructor_insert_new_imp(47,1873

/usr/include/c++/13/ext/pb_ds/detail/gp_hash_table_map_/constructor_destructor_store_hash_fn_imps.hpp,36
constructor_insert_new_imp(47,1867

/usr/include/c++/13/ext/pb_ds/detail/gp_hash_table_map_/debug_fn_imps.hpp,22
assert_valid(48,1825

/usr/include/c++/13/ext/pb_ds/detail/gp_hash_table_map_/debug_no_store_hash_fn_imps.hpp,34
assert_entry_array_valid(48,1839

/usr/include/c++/13/ext/pb_ds/detail/gp_hash_table_map_/debug_store_hash_fn_imps.hpp,34
assert_entry_array_valid(48,1836

/usr/include/c++/13/ext/pb_ds/detail/gp_hash_table_map_/erase_fn_imps.hpp,69
erase_entry(46,1812
clear(59,2182
erase_if(75,2536
erase(98,2974

/usr/include/c++/13/ext/pb_ds/detail/gp_hash_table_map_/erase_no_store_hash_fn_imps.hpp,19
erase_imp(47,1864

/usr/include/c++/13/ext/pb_ds/detail/gp_hash_table_map_/erase_store_hash_fn_imps.hpp,19
erase_imp(47,1857

/usr/include/c++/13/ext/pb_ds/detail/gp_hash_table_map_/find_fn_imps.hpp,64
find(46,1848
find(55,2081
find_end(64,2352
find_end(70,2472

/usr/include/c++/13/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp,5395
namespace __gnu_pbds55,2125
  namespace detail57,2148
#define PB_DS_GP_HASH_NAME 60,2204
#define PB_DS_GP_HASH_NAME 64,2283
#define PB_DS_CLASS_T_DEC 67,2328
#define PB_DS_CLASS_C_DEC 72,2549
#define PB_DS_HASH_EQ_FN_C_DEC 76,2697
#define PB_DS_RANGED_PROBE_FN_C_DEC 79,2778
#define PB_DS_GP_HASH_TRAITS_BASE 82,2895
#define PB_DS_DEBUG_MAP_BASE_C_DEC 86,3003
    template<typename Key,133,4757
	     typename Mapped,134,4784
	     typename Hash_Fn,135,4807
	     typename Eq_Fn,136,4831
	     typename _Alloc,137,4853
	     bool Store_Hash,138,4876
	     typename Comb_Probe_Fn,139,4899
	     typename Probe_Fn,140,4929
    class PB_DS_GP_HASH_NAME 142,4984
      typedef PB_DS_GP_HASH_TRAITS_BASE	       	traits_base;152,5253
      typedef typename traits_base::value_type 	value_type_;153,5314
      typedef typename traits_base::pointer 	pointer_;154,5375
      typedef typename traits_base::const_pointer const_pointer_;155,5430
      typedef typename traits_base::reference 	reference_;156,5496
      typedef typename traits_base::const_reference const_reference_;157,5555
      typedef typename traits_base::comp_hash	comp_hash;158,5625
      enum entry_status160,5683
	  empty_entry_status,162,5710
	  valid_entry_status,163,5733
	  erased_entry_status164,5756
      struct entry 167,5813
	entry_status m_stat;169,5879
      typedef rebind_traits<_Alloc,_Alloc172,5911
      typedef rebind_traits<_Alloc, entry> entry_traits;172,5911
      typedef typename entry_traits::allocator_type entry_allocator;173,5968
      typedef typename entry_traits::pointer entry_pointer;174,6037
      typedef typename entry_traits::const_pointer const_entry_pointer;175,6097
      typedef typename entry_traits::reference entry_reference;176,6169
      typedef typename entry_traits::const_reference const_entry_reference;177,6233
      typedef typename entry_traits::pointer entry_array;178,6309
      typedef PB_DS_RANGED_PROBE_FN_C_DEC 	ranged_probe_fn_base;180,6368
      typedef PB_DS_DEBUG_MAP_BASE_C_DEC 	debug_base;183,6456
      typedef PB_DS_HASH_EQ_FN_C_DEC 		hash_eq_fn_base;186,6518
      typedef Resize_Policy 			resize_base;187,6574
#define PB_DS_GEN_POS 189,6619
#undef PB_DS_GEN_POS196,6934
      typedef _Alloc 				allocator_type;199,6968
      typedef typename _Alloc::size_type 	size_type;200,7009
      typedef typename _Alloc::difference_type 	difference_type;201,7062
      typedef Hash_Fn 				hash_fn;202,7127
      typedef Eq_Fn 				eq_fn;203,7162
      typedef Probe_Fn 				probe_fn;204,7193
      typedef Comb_Probe_Fn 			comb_probe_fn;205,7230
      typedef Resize_Policy 			resize_policy;206,7276
	  store_hash 211,7381
      typedef typename traits_base::key_type 	key_type;214,7413
      typedef typename traits_base::key_pointer key_pointer;215,7469
      typedef typename traits_base::key_const_pointer key_const_pointer;216,7530
      typedef typename traits_base::key_reference key_reference;217,7603
      typedef typename traits_base::key_const_reference key_const_reference;218,7668
      typedef typename traits_base::mapped_type mapped_type;219,7745
      typedef typename traits_base::mapped_pointer mapped_pointer;220,7806
      typedef typename traits_base::mapped_const_pointer mapped_const_pointer;221,7873
      typedef typename traits_base::mapped_reference mapped_reference;222,7952
      typedef typename traits_base::mapped_const_reference mapped_const_reference;223,8023
      typedef typename traits_base::value_type value_type;224,8106
      typedef typename traits_base::pointer pointer;225,8165
      typedef typename traits_base::const_pointer const_pointer;226,8218
      typedef typename traits_base::reference reference;227,8283
      typedef typename traits_base::const_reference const_reference;228,8340
      typedef point_iterator_ 			point_iterator;231,8443
      typedef point_const_iterator_ 		point_iterator;235,8534
      typedef point_const_iterator_ 		point_const_iterator;238,8596
      typedef iterator_ 			iterator;241,8690
      typedef const_iterator_ 			iterator;245,8769
      typedef const_iterator_ 			const_iterator;248,8820
      inline std::pair<std::pair326,10560
      insert(327,10605
      inline std::pair<std::pair431,12619
      inline std::pair<std::pair434,12712
      insert_new_imp(438,12825
      insert_new_imp(458,13487
      subscript_imp(484,14327
      subscript_imp(500,14783
      find_key_pointer(517,15273
      find_key_pointer(561,16377
      inc_it_state(618,17755
      inc_it_state(623,17903
      get_start_it_state(639,18258
      get_start_it_state(654,18581
      static entry_allocator 	s_entry_allocator;678,19121
      static iterator 		s_end_it;679,19170
      static const_iterator 	s_const_end_it;680,19204
      size_type 		m_num_e;682,19250
      size_type 		m_num_used_e;683,19277
      entry_pointer 		m_entries;684,19309
	  store_hash_ok 688,19357
			  || !is_same<Hash_Fn, __gnu_pbds::null_type>__gnu_pbds::null_type689,19388
			  || !is_same<Hash_Fn, __gnu_pbds::null_type>::valuevalue689,19388
#undef PB_DS_CLASS_T_DEC706,20183
#undef PB_DS_CLASS_C_DEC707,20208
#undef PB_DS_HASH_EQ_FN_C_DEC708,20233
#undef PB_DS_RANGED_PROBE_FN_C_DEC709,20263
#undef PB_DS_GP_HASH_TRAITS_BASE710,20298
#undef PB_DS_DEBUG_MAP_BASE_C_DEC711,20331
#undef PB_DS_GP_HASH_NAME712,20365

/usr/include/c++/13/ext/pb_ds/detail/gp_hash_table_map_/info_fn_imps.hpp,47
size(47,1863
max_size(53,1985
empty(60,2113

/usr/include/c++/13/ext/pb_ds/detail/gp_hash_table_map_/insert_no_store_hash_fn_imps.hpp,42
find_ins_pos(47,1899
insert_imp(98,3346

/usr/include/c++/13/ext/pb_ds/detail/gp_hash_table_map_/insert_store_hash_fn_imps.hpp,43
find_ins_pos(47,1890
insert_imp(103,3557

/usr/include/c++/13/ext/pb_ds/detail/gp_hash_table_map_/iterator_fn_imps.hpp,136
PB_DS_CLASS_C_DEC::s_end_it;46,1842
PB_DS_CLASS_C_DEC::s_const_end_it;50,1933
begin(55,2051
end(66,2258
begin(72,2374
end(83,2605

/usr/include/c++/13/ext/pb_ds/detail/gp_hash_table_map_/policy_access_fn_imps.hpp,233
get_hash_fn(47,1821
get_hash_fn(53,1908
get_eq_fn(59,1993
get_eq_fn(65,2076
get_probe_fn(71,2162
get_probe_fn(77,2251
get_comb_probe_fn(83,2345
get_comb_probe_fn(89,2444
get_resize_policy(95,2543
get_resize_policy(101,2642

/usr/include/c++/13/ext/pb_ds/detail/gp_hash_table_map_/resize_fn_imps.hpp,127
do_resize_if_needed(46,1814
do_resize(57,2021
do_resize_if_needed_no_throw(63,2152
resize_imp(81,2426
resize_imp(131,3749

/usr/include/c++/13/ext/pb_ds/detail/gp_hash_table_map_/resize_no_store_hash_fn_imps.hpp,29
resize_imp_reassign(47,1866

/usr/include/c++/13/ext/pb_ds/detail/gp_hash_table_map_/resize_store_hash_fn_imps.hpp,29
resize_imp_reassign(47,1859

/usr/include/c++/13/ext/pb_ds/detail/gp_hash_table_map_/trace_fn_imps.hpp,15
trace(48,1830

/usr/include/c++/13/ext/pb_ds/detail/hash_fn/direct_mask_range_hashing_imp.hpp,69
swap(46,1783
notify_resized(52,1892
operator()(operator()58,2050

/usr/include/c++/13/ext/pb_ds/detail/hash_fn/direct_mod_range_hashing_imp.hpp,69
swap(46,1782
notify_resized(52,1890
operator()(operator()58,2041

/usr/include/c++/13/ext/pb_ds/detail/hash_fn/linear_probe_fn_imp.hpp,45
swap(46,1772
operator()(operator()52,1891

/usr/include/c++/13/ext/pb_ds/detail/hash_fn/mask_based_range_hashing.hpp,420
#define PB_DS_MASK_BASED_RANGE_HASHING_HPP42,1743
namespace __gnu_pbds44,1787
  namespace detail46,1810
    class mask_based_range_hashing50,1896
      typedef Size_Type 	size_type;53,1952
      swap(56,2000
      range_hash(63,2161
      size_type 		m_mask;67,2257
      const static size_type 	s_num_bits_in_size_type;68,2283
      const static size_type 	s_highest_bit_1;69,2338
    notify_resized(84,2983

/usr/include/c++/13/ext/pb_ds/detail/hash_fn/mod_based_range_hashing.hpp,300
#define PB_DS_MOD_BASED_RANGE_HASHING_HPP42,1741
namespace __gnu_pbds44,1784
  namespace detail46,1807
    class mod_based_range_hashing50,1896
      typedef Size_Type 	size_type;53,1951
      swap(56,1999
      notify_resized(60,2097
      range_hash(64,2177
      size_type m_size;68,2256

/usr/include/c++/13/ext/pb_ds/detail/hash_fn/probe_fn_base.hpp,158
#define PB_DS_PROBE_FN_BASE_HPP42,1713
namespace __gnu_pbds46,1769
  namespace detail48,1792
    class probe_fn_base52,1873
      ~probe_fn_base(55,1918

/usr/include/c++/13/ext/pb_ds/detail/hash_fn/quadratic_probe_fn_imp.hpp,45
swap(46,1775
operator()(operator()52,1894

/usr/include/c++/13/ext/pb_ds/detail/hash_fn/ranged_hash_fn.hpp,2699
#define PB_DS_RANGED_HASH_FN_HPP43,1801
namespace __gnu_pbds49,1925
  namespace detail51,1948
    template<typename Key,54,1997
    template<typename Key, typename Hash_Fn,54,1997
    template<typename Key, typename Hash_Fn, typename _Alloc,54,1997
	     typename Comb_Hash_Fn,55,2060
#define PB_DS_CLASS_T_DEC 58,2133
#define PB_DS_CLASS_C_DEC 62,2255
    template<typename Key,70,2510
    template<typename Key, typename Hash_Fn,70,2510
    template<typename Key, typename Hash_Fn, typename _Alloc,70,2510
    : public Hash_Fn,73,2672
      typedef typename _Alloc::size_type 76,2735
      typedef Hash_Fn hash_fn_base;77,2787
      typedef Comb_Hash_Fn comb_hash_fn_base;78,2823
      typedef typename rebind_traits<rebind_traits79,2869
    ranged_hash_fn(100,3325
    ranged_hash_fn(105,3451
    ranged_hash_fn(111,3629
    swap(119,3893
    notify_resized(128,4089
    operator()(operator()134,4269
#undef PB_DS_CLASS_T_DEC137,4398
#undef PB_DS_CLASS_C_DEC138,4423
#define PB_DS_CLASS_T_DEC 140,4449
#define PB_DS_CLASS_C_DEC 144,4571
    template<typename Key,152,4820
    template<typename Key, typename Hash_Fn,152,4820
    template<typename Key, typename Hash_Fn, typename _Alloc,152,4820
    : public Hash_Fn,155,4979
      typedef typename _Alloc::size_type 158,5042
      typedef std::pair<size_type, size_type> comp_hash;159,5094
      typedef Hash_Fn hash_fn_base;160,5151
      typedef Comb_Hash_Fn comb_hash_fn_base;161,5187
      typedef typename rebind_traits<rebind_traits162,5233
    ranged_hash_fn(186,5769
    ranged_hash_fn(191,5895
    ranged_hash_fn(197,6074
    swap(205,6338
    notify_resized(214,6534
    operator()(operator()220,6714
    operator()operator()229,7004
#undef PB_DS_CLASS_T_DEC240,7326
#undef PB_DS_CLASS_C_DEC241,7351
#define PB_DS_CLASS_T_DEC 243,7377
#define PB_DS_CLASS_C_DEC 246,7473
    template<typename Key,255,7768
    template<typename Key, typename _Alloc,255,7768
      typedef typename _Alloc::size_type 260,7953
      typedef Comb_Hash_Fn comb_hash_fn_base;261,8005
    ranged_hash_fn(275,8311
    ranged_hash_fn(280,8437
    ranged_hash_fn(286,8600
    swap(294,8807
#undef PB_DS_CLASS_T_DEC297,8883
#undef PB_DS_CLASS_C_DEC298,8908
#define PB_DS_CLASS_T_DEC 300,8934
#define PB_DS_CLASS_C_DEC 303,9030
    template<typename Key,312,9320
    template<typename Key, typename _Alloc,312,9320
      typedef typename _Alloc::size_type 317,9504
      typedef Comb_Hash_Fn comb_hash_fn_base;318,9556
    ranged_hash_fn(332,9862
    ranged_hash_fn(337,9988
    ranged_hash_fn(343,10150
    swap(351,10357
#undef PB_DS_CLASS_T_DEC354,10433
#undef PB_DS_CLASS_C_DEC355,10458

/usr/include/c++/13/ext/pb_ds/detail/hash_fn/ranged_probe_fn.hpp,2547
#define PB_DS_RANGED_PROBE_FN_HPP43,1809
namespace __gnu_pbds48,1889
  namespace detail50,1912
    template<typename Key,53,1961
    template<typename Key, typename Hash_Fn,53,1961
    template<typename Key, typename Hash_Fn, typename _Alloc,53,1961
	     typename Comb_Probe_Fn,54,2023
	     typename Comb_Probe_Fn, typename Probe_Fn,54,2023
#define PB_DS_CLASS_T_DEC 57,2117
#define PB_DS_CLASS_C_DEC 61,2259
    template<typename Key,69,2533
    template<typename Key, typename Hash_Fn,69,2533
    template<typename Key, typename Hash_Fn, typename _Alloc,69,2533
	     typename Comb_Probe_Fn,70,2595
    : public Hash_Fn,73,2730
    : public Hash_Fn, public Comb_Probe_Fn,73,2730
      typedef typename _Alloc::size_type 76,2811
      typedef Comb_Probe_Fn comb_probe_fn_base;77,2863
      typedef Hash_Fn hash_fn_base;78,2911
      typedef Probe_Fn probe_fn_base;79,2947
      typedef typename rebind_traits<rebind_traits80,2985
    ranged_probe_fn(107,3635
    ranged_probe_fn(112,3763
    ranged_probe_fn(118,3943
    ranged_probe_fn(125,4205
    swap(134,4533
    notify_resized(143,4729
    operator()(operator()149,4910
    operator()(operator()155,5134
#undef PB_DS_CLASS_T_DEC160,5300
#undef PB_DS_CLASS_C_DEC161,5325
#define PB_DS_CLASS_T_DEC 163,5351
#define PB_DS_CLASS_C_DEC 167,5493
    template<typename Key,174,5758
    template<typename Key, typename Hash_Fn,174,5758
    template<typename Key, typename Hash_Fn, typename _Alloc,174,5758
	     typename Comb_Probe_Fn,175,5820
    : public Hash_Fn,178,5955
    : public Hash_Fn, public Comb_Probe_Fn,178,5955
      typedef typename _Alloc::size_type 181,6036
      typedef std::pair<size_type, size_type> comp_hash;182,6088
      typedef Comb_Probe_Fn comb_probe_fn_base;183,6145
      typedef Hash_Fn hash_fn_base;184,6193
      typedef Probe_Fn probe_fn_base;185,6229
      typedef typename rebind_traits<rebind_traits186,6267
    ranged_probe_fn(217,7006
    ranged_probe_fn(222,7134
    ranged_probe_fn(228,7314
    ranged_probe_fn(235,7576
    swap(244,7904
    notify_resized(253,8101
    operator()(operator()259,8282
    operator()(operator()268,8573
    operator()operator()276,8834
#undef PB_DS_CLASS_T_DEC287,9104
#undef PB_DS_CLASS_C_DEC288,9129
    template<typename Key,295,9323
    template<typename Key, typename _Alloc,295,9323
      typedef typename _Alloc::size_type 301,9529
      typedef Comb_Probe_Fn comb_probe_fn_base;302,9581
      typedef typename rebind_traits<rebind_traits303,9629

/usr/include/c++/13/ext/pb_ds/detail/hash_fn/sample_probe_fn.hpp,146
#define PB_DS_SAMPLE_PROBE_FN_HPP42,1719
namespace __gnu_pbds44,1754
  class sample_probe_fn47,1806
    typedef std::size_t size_type;50,1844

/usr/include/c++/13/ext/pb_ds/detail/hash_fn/sample_range_hashing.hpp,156
#define PB_DS_SAMPLE_RANGE_HASHING_HPP42,1730
namespace __gnu_pbds44,1770
  class sample_range_hashing47,1831
    typedef std::size_t size_type;51,1893

/usr/include/c++/13/ext/pb_ds/detail/hash_fn/sample_ranged_hash_fn.hpp,158
#define PB_DS_SAMPLE_RANGED_HASH_FN_HPP42,1730
namespace __gnu_pbds44,1771
  class sample_ranged_hash_fn47,1830
    typedef std::size_t size_type;50,1874

/usr/include/c++/13/ext/pb_ds/detail/hash_fn/sample_ranged_probe_fn.hpp,161
#define PB_DS_SAMPLE_RANGED_PROBE_FN_HPP42,1733
namespace __gnu_pbds44,1775
  class sample_ranged_probe_fn47,1835
    typedef std::size_t 	size_type;50,1880

/usr/include/c++/13/ext/pb_ds/detail/left_child_next_sibling_heap_/const_iterator.hpp,1331
#define PB_DS_LEFT_CHILD_NEXT_SIBLING_HEAP_CONST_ITERATOR_HPP43,1829
namespace __gnu_pbds48,2001
  namespace detail50,2024
#define PB_DS_CLASS_C_DEC 52,2047
#define PB_DS_BASIC_HEAP_CIT_BASE 55,2140
    template<typename Node,59,2286
    class left_child_next_sibling_heap_const_iterator_60,2331
      typedef PB_DS_BASIC_HEAP_CIT_BASE 	      	base_type;64,2444
      typedef typename base_type::node_pointer		node_pointer;65,2503
      typedef std::forward_iterator_tag 		iterator_category;69,2598
      typedef typename _Alloc::difference_type 		difference_type;72,2687
      typedef typename base_type::value_type 		value_type;75,2787
      typedef typename base_type::pointer 		pointer;78,2882
      typedef typename base_type::const_pointer 	const_pointer;81,2977
      typedef typename base_type::reference 		reference;84,3079
      typedef typename base_type::const_reference 	const_reference;87,3180
      left_child_next_sibling_heap_const_iterator_(90,3262
      left_child_next_sibling_heap_const_iterator_(96,3411
      left_child_next_sibling_heap_const_iterator_(101,3516
      operator==(operator==106,3699
      operator!=(operator!=111,3892
      operator++(115,4027
      operator++(123,4160
      inc(132,4302
#undef PB_DS_CLASS_C_DEC153,4807
#undef PB_DS_BASIC_HEAP_CIT_BASE154,4832

/usr/include/c++/13/ext/pb_ds/detail/left_child_next_sibling_heap_/constructors_destructor_fn_imps.hpp,313
PB_DS_CLASS_C_DEC::s_node_allocator;45,1854
PB_DS_CLASS_C_DEC::s_no_throw_copies_ind;49,1956
left_child_next_sibling_heap(53,2037
left_child_next_sibling_heap(62,2170
left_child_next_sibling_heap(72,2345
swap(85,2653
value_swap(98,2918
~left_child_next_sibling_heap(106,3072
recursive_copy_node(114,3199

/usr/include/c++/13/ext/pb_ds/detail/left_child_next_sibling_heap_/debug_fn_imps.hpp,169
assert_valid(48,1841
assert_node_consistent(61,2176
assert_iterators(91,3080
assert_size(99,3246
size_under_node(107,3435
size_from_node(113,3603
degree(127,3880

/usr/include/c++/13/ext/pb_ds/detail/left_child_next_sibling_heap_/erase_fn_imps.hpp,125
clear(46,1818
actual_erase_node(56,1958
clear_imp(67,2149
to_linked_list(81,2398
prune(113,3215
bubble_to_top(143,3800

/usr/include/c++/13/ext/pb_ds/detail/left_child_next_sibling_heap_/info_fn_imps.hpp,47
empty(47,1843
size(55,1969
max_size(63,2089

/usr/include/c++/13/ext/pb_ds/detail/left_child_next_sibling_heap_/insert_fn_imps.hpp,166
get_new_node_for_insert(46,1862
get_new_node_for_insert(54,2064
get_new_node_for_insert(74,2483
make_child_of(90,2806
parent(108,3270
swap_with_parent(124,3520

/usr/include/c++/13/ext/pb_ds/detail/left_child_next_sibling_heap_/iterators_fn_imps.hpp,56
begin(46,1861
begin(62,2130
end(78,2411
end(86,2534

/usr/include/c++/13/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp,2732
#define PB_DS_LEFT_CHILD_NEXT_SIBLING_HEAP_HPP42,1795
namespace __gnu_pbds59,2288
  namespace detail61,2311
#define PB_DS_CLASS_T_DEC 64,2356
#define PB_DS_CLASS_C_DEC 68,2509
#define PB_DS_CLASS_T_DEC 72,2646
#define PB_DS_CLASS_C_DEC 76,2775
    template<typename Value_Type,81,2924
	     typename Cmp_Fn,82,2958
	     typename Node_Metadata,83,2981
	     typename _Alloc84,3011
    class left_child_next_sibling_heap 90,3107
	left_child_next_sibling_heap_node_<Value_Type,Value_Type94,3194
	left_child_next_sibling_heap_node_<Value_Type, Node_Metadata,94,3194
	node;95,3265
      typedef typename detail::rebind_traits<detail::rebind_traits98,3286
      typedef typename detail::rebind_traits<_Alloc, node> alloc_traits;98,3286
      typedef typename alloc_traits::allocator_type node_allocator;101,3375
      typedef typename alloc_traits::pointer 		node_pointer;103,3444
      typedef typename alloc_traits::const_pointer	node_const_pointer;104,3505
      typedef Node_Metadata node_metadata;105,3576
      typedef std::pair<node_pointer,node_pointer106,3619
      typedef std::pair<node_pointer, node_pointer> 	node_pointer_pair;106,3619
      typedef cond_dealtor< node,109,3705
      typedef cond_dealtor< node, _Alloc> 		cond_dealtor_t;109,3705
	  simple_value 113,3780
      typedef integral_constant<int,int116,3832
      typedef integral_constant<int, simple_value> 	no_throw_copies_t;116,3832
      typedef rebind_traits<_Alloc,_Alloc117,3903
      typedef rebind_traits<_Alloc, Value_Type>	__rebind_v;117,3903
      typedef typename _Alloc::size_type 		size_type;120,3976
      typedef typename _Alloc::difference_type 	difference_type;121,4030
      typedef Value_Type 				value_type;122,4095
      typedef typename __rebind_v::pointer 	pointer;124,4137
      typedef typename __rebind_v::const_pointer const_pointer;125,4190
      typedef typename __rebind_v::reference	reference;126,4254
      typedef typename __rebind_v::const_reference const_reference;127,4310
      typedef left_child_next_sibling_heap_node_point_const_iterator_<node,node129,4379
      point_const_iterator;130,4463
      typedef point_const_iterator 			point_iterator;132,4492
      typedef left_child_next_sibling_heap_const_iterator_<node,node134,4547
      const_iterator;135,4620
      typedef const_iterator 				iterator;137,4643
      typedef Cmp_Fn 					cmp_fn;138,4686
      typedef _Alloc 					allocator_type;139,4720
      static node_allocator 	s_node_allocator;266,7251
      static no_throw_copies_t 	s_no_throw_copies_ind;267,7298
      node_pointer 		m_p_root;270,7369
      size_type 		m_size;271,7400
#undef PB_DS_CLASS_C_DEC283,8073
#undef PB_DS_CLASS_T_DEC284,8098

/usr/include/c++/13/ext/pb_ds/detail/left_child_next_sibling_heap_/node.hpp,1311
#define PB_DS_LEFT_CHILD_NEXT_SIBLING_HEAP_NODE_HPP42,1788
namespace __gnu_pbds46,1887
  namespace detail48,1910
    template<typename _Value,51,1947
    template<typename _Value, typename _Metadata,51,1947
    struct left_child_next_sibling_heap_node_52,2014
      typedef left_child_next_sibling_heap_node_<_Value,_Value55,2079
      typedef left_child_next_sibling_heap_node_<_Value, _Metadata,55,2079
      typedef left_child_next_sibling_heap_node_<_Value, _Metadata, _Alloc> this_type;55,2079
      typedef _Value 				value_type;58,2179
      typedef typename _Alloc::size_type 	size_type;59,2216
      typedef _Metadata 			metadata_type;60,2269
      typedef typename rebind_traits<rebind_traits62,2312
      typedef typename rebind_traits<_Alloc, this_type>::pointer node_pointer;62,2312
      value_type 	m_value;64,2392
      metadata_type 	m_metadata;65,2419
      node_pointer 	m_p_l_child;66,2452
      node_pointer 	m_p_next_sibling;67,2485
      node_pointer 	m_p_prev_or_parent;68,2523
    template<typename _Value,71,2571
      typedef left_child_next_sibling_heap_node_<_Value, null_type, _Alloc> this_type;75,2710
      typedef _Value 				value_type;78,2810
      typedef typename _Alloc::size_type 79,2847
      typedef typename rebind_traits<rebind_traits81,2901

/usr/include/c++/13/ext/pb_ds/detail/left_child_next_sibling_heap_/point_const_iterator.hpp,1554
#define PB_DS_LEFT_CHILD_NEXT_SIBLING_HEAP_CONST_FIND_ITERATOR_HPP43,1840
namespace __gnu_pbds48,1973
  namespace detail50,1996
#define PB_DS_CLASS_T_DEC	53,2020
#define PB_DS_CLASS_C_DEC 56,2096
    template<typename Node,60,2234
    class left_child_next_sibling_heap_node_point_const_iterator_61,2279
      typedef typename rebind_traits<rebind_traits64,2366
      typedef typename rebind_traits<_Alloc, Node>::pointer node_pointer;64,2366
      typedef trivial_iterator_tag iterator_category;68,2473
      typedef trivial_iterator_difference_type difference_type;71,2555
      typedef typename Node::value_type value_type;74,2653
      typedef typename rebind_traits<rebind_traits77,2741
      typedef typename rebind_traits<_Alloc, value_type>::pointer pointer;77,2741
      typedef typename rebind_traits<rebind_traits80,2858
	const_pointer;81,2930
      typedef typename rebind_traits<rebind_traits84,2984
      typedef typename rebind_traits<_Alloc, value_type>::reference reference;84,2984
      typedef typename rebind_traits<rebind_traits87,3107
	const_reference;88,3181
      left_child_next_sibling_heap_node_point_const_iterator_(91,3213
      left_child_next_sibling_heap_node_point_const_iterator_(96,3364
      left_child_next_sibling_heap_node_point_const_iterator_(101,3492
      operator->(106,3658
      operator*(114,3803
      operator==(operator==122,3976
      operator!=(operator!=127,4156
      node_pointer m_p_nd;130,4253
#undef PB_DS_CLASS_T_DEC133,4288
#undef PB_DS_CLASS_C_DEC134,4313

/usr/include/c++/13/ext/pb_ds/detail/left_child_next_sibling_heap_/policy_access_fn_imps.hpp,40
get_cmp_fn(46,1830
get_cmp_fn(52,1915

/usr/include/c++/13/ext/pb_ds/detail/left_child_next_sibling_heap_/trace_fn_imps.hpp,93
trace(48,1850
trace_node(58,1991
trace_node_metadata(81,2564
trace_node_metadata(89,2730

/usr/include/c++/13/ext/pb_ds/detail/list_update_map_/constructor_destructor_fn_imps.hpp,456
PB_DS_CLASS_C_DEC::s_entry_allocator;44,1770
Eq_Fn PB_DS_CLASS_C_DEC::s_eq_fn;47,1827
null_type PB_DS_CLASS_C_DEC::s_null_type;50,1880
Update_Policy PB_DS_CLASS_C_DEC::s_update_policy;53,1941
  typename PB_DS_CLASS_C_DEC::update_metadata> PB_DS_CLASS_C_DEC::s_metadata_type_indicator;57,2024
copy_from_range(63,2183
PB_DS_LU_NAME(71,2324
PB_DS_LU_NAME(77,2444
PB_DS_LU_NAME(85,2606
swap(110,3063
deallocate_all(123,3339
~PB_DS_LU_NAME(137,3571

/usr/include/c++/13/ext/pb_ds/detail/list_update_map_/debug_fn_imps.hpp,22
assert_valid(48,1823

/usr/include/c++/13/ext/pb_ds/detail/list_update_map_/entry_metadata_base.hpp,271
#define PB_DS_LU_MAP_ENTRY_METADATA_BASE_HPP42,1769
namespace __gnu_pbds44,1815
  namespace detail46,1838
    struct lu_map_entry_metadata_base49,1893
      Metadata m_update_metadata;51,1937
    struct lu_map_entry_metadata_base<lu_map_entry_metadata_base55,1998

/usr/include/c++/13/ext/pb_ds/detail/list_update_map_/erase_fn_imps.hpp,98
erase(46,1781
clear(75,2328
erase_if(84,2468
erase_next(118,3057
actual_erase_entry(130,3332

/usr/include/c++/13/ext/pb_ds/detail/list_update_map_/find_fn_imps.hpp,62
find_imp(46,1817
apply_update(84,2633
apply_update(90,2792

/usr/include/c++/13/ext/pb_ds/detail/list_update_map_/info_fn_imps.hpp,47
size(46,1813
max_size(52,1952
empty(59,2080

/usr/include/c++/13/ext/pb_ds/detail/list_update_map_/insert_fn_imps.hpp,132
insert(48,1842
allocate_new_entry(71,2449
allocate_new_entry(87,2927
init_entry_metadata(100,3294
init_entry_metadata(106,3471

/usr/include/c++/13/ext/pb_ds/detail/list_update_map_/iterators_fn_imps.hpp,56
begin(46,1817
begin(59,2055
end(72,2326
end(78,2454

/usr/include/c++/13/ext/pb_ds/detail/list_update_map_/lu_map_.hpp,4612
namespace __gnu_pbds56,2118
  namespace detail58,2141
#define PB_DS_LU_NAME 61,2197
#define PB_DS_LU_NAME 65,2268
#define PB_DS_CLASS_T_DEC 68,2305
#define PB_DS_CLASS_C_DEC 72,2443
#define PB_DS_LU_TRAITS_BASE 75,2533
#define PB_DS_DEBUG_MAP_BASE_C_DEC 79,2632
    template<typename Key,86,2862
	     typename Mapped,87,2889
	     typename Eq_Fn,88,2912
	     typename _Alloc,89,2934
    class PB_DS_LU_NAME 91,2987
      typedef PB_DS_LU_TRAITS_BASE 	       	traits_base;98,3139
      struct entry100,3197
	typename traits_base::value_type m_value;103,3304
	typename rebind_traits<rebind_traits104,3347
	typename rebind_traits<_Alloc, entry>::pointer m_p_next;104,3347
      typedef rebind_traits<_Alloc,_Alloc107,3415
      typedef rebind_traits<_Alloc, entry>		  entry_alloc_traits;107,3415
      typedef typename entry_alloc_traits::allocator_type entry_allocator;108,3481
      typedef typename entry_alloc_traits::pointer	  entry_pointer;109,3556
      typedef typename entry_alloc_traits::const_pointer  const_entry_pointer;110,3624
      typedef typename entry_alloc_traits::reference	  entry_reference;111,3703
      typedef typename entry_alloc_traits::const_reference const_entry_reference;112,3775
      typedef rebind_traits<_Alloc,_Alloc114,3858
      typedef rebind_traits<_Alloc, entry_pointer>	entry_pointer_alloc_traits;114,3858
      typedef typename entry_pointer_alloc_traits::allocator_type entry_pointer_allocator;115,3937
      typedef typename entry_pointer_alloc_traits::pointer entry_pointer_array;116,4028
      typedef typename traits_base::value_type value_type_;118,4109
      typedef typename traits_base::pointer pointer_;119,4169
      typedef typename traits_base::const_pointer const_pointer_;120,4223
      typedef typename traits_base::reference reference_;121,4289
      typedef typename traits_base::const_reference const_reference_;122,4347
#define PB_DS_GEN_POS 124,4418
#undef PB_DS_GEN_POS131,4720
      typedef PB_DS_DEBUG_MAP_BASE_C_DEC debug_base;135,4765
      typedef cond_dealtor<entry,entry138,4826
      typedef cond_dealtor<entry, _Alloc> cond_dealtor_t;138,4826
      typedef _Alloc allocator_type;141,4897
      typedef typename _Alloc::size_type size_type;142,4934
      typedef typename _Alloc::difference_type difference_type;143,4986
      typedef Eq_Fn eq_fn;144,5050
      typedef Update_Policy update_policy;145,5077
      typedef typename Update_Policy::metadata_type update_metadata;146,5120
      typedef typename traits_base::key_type key_type;147,5189
      typedef typename traits_base::key_pointer key_pointer;148,5244
      typedef typename traits_base::key_const_pointer key_const_pointer;149,5305
      typedef typename traits_base::key_reference key_reference;150,5378
      typedef typename traits_base::key_const_reference key_const_reference;151,5443
      typedef typename traits_base::mapped_type mapped_type;152,5520
      typedef typename traits_base::mapped_pointer mapped_pointer;153,5581
      typedef typename traits_base::mapped_const_pointer mapped_const_pointer;154,5648
      typedef typename traits_base::mapped_reference mapped_reference;155,5727
      typedef typename traits_base::mapped_const_reference mapped_const_reference;156,5798
      typedef typename traits_base::value_type value_type;157,5881
      typedef typename traits_base::pointer pointer;158,5940
      typedef typename traits_base::const_pointer const_pointer;159,5993
      typedef typename traits_base::reference reference;160,6058
      typedef typename traits_base::const_reference const_reference;161,6115
      typedef point_iterator_ 			point_iterator;164,6218
      typedef point_const_iterator_ 		point_iterator;168,6309
      typedef point_const_iterator_ 		point_const_iterator;171,6371
      typedef iterator_ 			iterator;174,6465
      typedef const_iterator_ 			iterator;178,6544
      typedef const_iterator_ 			const_iterator;181,6595
      inline std::pair<std::pair218,7332
      find(222,7437
      find(230,7673
      inc_it_state(305,9114
      static entry_allocator 			s_entry_allocator;321,9555
      static Eq_Fn 				s_eq_fn;322,9606
      static Update_Policy 			s_update_policy;323,9638
      static type_to_type<update_metadata> 	s_metadata_type_indicator;324,9685
      static null_type 				s_null_type;325,9756
      mutable entry_pointer 			m_p_l;327,9797
#undef PB_DS_CLASS_T_DEC339,10368
#undef PB_DS_CLASS_C_DEC340,10393
#undef PB_DS_LU_TRAITS_BASE341,10418
#undef PB_DS_DEBUG_MAP_BASE_C_DEC342,10446
#undef PB_DS_LU_NAME343,10480

/usr/include/c++/13/ext/pb_ds/detail/list_update_map_/trace_fn_imps.hpp,15
trace(48,1802

/usr/include/c++/13/ext/pb_ds/detail/list_update_policy/lu_counter_metadata.hpp,241
namespace __gnu_pbds41,1716
  namespace detail43,1739
	typedef Size_Type 	size_type;54,2054
      class lu_counter_policy_base67,2343
	typedef Size_Type 	size_type;70,2403
	operator()(operator()73,2467
	operator()(operator()78,2619

/usr/include/c++/13/ext/pb_ds/detail/list_update_policy/sample_update_policy.hpp,168
#define PB_DS_SAMPLE_UPDATE_POLICY_HPP42,1750
namespace __gnu_pbds44,1790
  struct sample_update_policy47,1848
    typedef some_metadata_type metadata_type;61,2163

/usr/include/c++/13/ext/pb_ds/detail/ov_tree_map_/constructors_destructor_fn_imps.hpp,439
PB_DS_CLASS_C_DEC::s_value_alloc;45,1817
PB_DS_CLASS_C_DEC::s_metadata_alloc;49,1917
PB_DS_OV_TREE_NAME(53,1993
PB_DS_OV_TREE_NAME(62,2150
PB_DS_OV_TREE_NAME(72,2349
PB_DS_OV_TREE_NAME(83,2600
copy_from_range(102,2969
    map_type;107,3160
    map_type;111,3275
copy_from_ordered_range(123,3475
copy_from_ordered_range(159,4415
swap(206,5623
value_swap(222,6001
~PB_DS_OV_TREE_NAME(233,6293
update(243,6503
update(250,6630

/usr/include/c++/13/ext/pb_ds/detail/ov_tree_map_/debug_fn_imps.hpp,48
assert_valid(48,1803
assert_iterators(59,2068

/usr/include/c++/13/ext/pb_ds/detail/ov_tree_map_/erase_fn_imps.hpp,69
clear(46,1780
erase_if(70,2238
erase_imp(128,3549
erase(186,4870

/usr/include/c++/13/ext/pb_ds/detail/ov_tree_map_/info_fn_imps.hpp,47
size(46,1819
max_size(55,1967
empty(62,2091

/usr/include/c++/13/ext/pb_ds/detail/ov_tree_map_/insert_fn_imps.hpp,58
reallocate_metadata(46,1781
reallocate_metadata(53,1918

/usr/include/c++/13/ext/pb_ds/detail/ov_tree_map_/iterators_fn_imps.hpp,193
node_begin(46,1834
node_end(52,1982
node_begin(58,2120
node_end(64,2256
PB_DS_node_begin_imp(70,2394
PB_DS_node_end_imp(82,2769
PB_DS_node_begin_imp(91,2995
PB_DS_node_end_imp(100,3264

/usr/include/c++/13/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp,2886
#define PB_DS_OV_TREE_NODE_ITERATORS_HPP42,1753
namespace __gnu_pbds48,1903
  namespace detail50,1926
#define PB_DS_OV_TREE_CONST_NODE_ITERATOR_C_DEC	52,1949
    template<typename Value_Type,56,2092
    template<typename Value_Type, typename Metadata_Type,56,2092
    class ov_tree_node_const_it_57,2167
      typedef typename rebind_traits<rebind_traits61,2222
	pointer;62,2288
      typedef typename rebind_traits<rebind_traits64,2299
	const_pointer;65,2371
      typedef typename rebind_traits<rebind_traits67,2388
	const_metadata_pointer;68,2463
      typedef PB_DS_OV_TREE_CONST_NODE_ITERATOR_C_DEC this_type;70,2489
      mid_pointer(76,2624
      typedef trivial_iterator_tag iterator_category;84,2781
      typedef trivial_iterator_difference_type difference_type;86,2836
      typedef typename rebind_traits<rebind_traits88,2901
	value_type;89,2973
      typedef typename rebind_traits<rebind_traits91,2987
	reference;93,3095
      typedef typename rebind_traits<rebind_traits95,3108
	const_reference;97,3217
      typedef Metadata_Type metadata_type;99,3236
      typedef typename rebind_traits<rebind_traits101,3280
	metadata_const_reference;102,3357
      ov_tree_node_const_it_(106,3410
      operator*(117,3794
      get_metadata(121,3885
	    has_metadata 125,3931
	    has_metadata = !is_same<Metadata_Type, null_type>null_type125,3931
	    has_metadata = !is_same<Metadata_Type, null_type>::valuevalue125,3931
      get_l_child(135,4223
      get_r_child(151,4710
      operator==(operator==166,5143
      operator!=(operator!=181,5472
      pointer m_p_value;185,5569
      pointer m_p_begin_value;186,5594
      pointer m_p_end_value;187,5625
      const_metadata_pointer m_p_metadata;189,5655
#define PB_DS_OV_TREE_NODE_ITERATOR_C_DEC 192,5706
    template<typename Value_Type,196,5831
    template<typename Value_Type, typename Metadata_Type,196,5831
    class ov_tree_node_it_ 197,5906
      typedef PB_DS_OV_TREE_NODE_ITERATOR_C_DEC this_type;200,6001
      typedef PB_DS_OV_TREE_CONST_NODE_ITERATOR_C_DEC base_type;202,6061
      typedef typename base_type::pointer pointer;204,6127
      typedef typename base_type::const_pointer const_pointer;206,6179
      const_metadata_pointer;210,6306
      typedef trivial_iterator_tag iterator_category;213,6349
      typedef trivial_iterator_difference_type difference_type;215,6404
      typedef typename rebind_traits<rebind_traits217,6469
	value_type;218,6535
      typedef typename rebind_traits<rebind_traits220,6549
	reference;222,6651
      typedef typename rebind_traits<rebind_traits224,6664
	const_reference;226,6767
      ov_tree_node_it_(229,6799
      operator*(234,7053
      get_l_child(239,7226
      get_r_child(255,7888
#undef PB_DS_OV_TREE_NODE_ITERATOR_C_DEC272,8492
#undef PB_DS_OV_TREE_CONST_NODE_ITERATOR_C_DEC273,8533

/usr/include/c++/13/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp,5268
namespace __gnu_pbds59,2198
  namespace detail61,2221
#define PB_DS_OV_TREE_NAME 64,2277
#define PB_DS_CONST_NODE_ITERATOR_NAME 65,2316
#define PB_DS_OV_TREE_NAME 69,2429
#define PB_DS_CONST_NODE_ITERATOR_NAME 70,2468
#define PB_DS_CLASS_T_DEC 73,2547
#define PB_DS_CLASS_C_DEC 77,2691
#define PB_DS_OV_TREE_TRAITS_BASE 80,2791
#define PB_DS_DEBUG_MAP_BASE_C_DEC 84,2895
#define PB_DS_TREE_TRACE_BASE_C_DEC 90,3074
    template<typename Key,104,3446
    template<typename Key, typename Mapped,104,3446
    template<typename Key, typename Mapped, typename Cmp_Fn,104,3446
	     typename Node_And_It_Traits,105,3507
    class PB_DS_OV_TREE_NAME 106,3559
      typedef PB_DS_OV_TREE_TRAITS_BASE	       		traits_base;118,3861
      typedef Node_And_It_Traits			traits_type;119,3923
      typedef typename remove_const<typename traits_base::value_type>::type non_const_value_type;121,3972
      typedef rebind_traits<_Alloc,_Alloc123,4071
      typedef rebind_traits<_Alloc, non_const_value_type> value_alloc_traits;123,4071
      typedef typename value_alloc_traits::allocator_type value_allocator;124,4149
      typedef typename value_alloc_traits::pointer	  value_vector;125,4224
      typedef PB_DS_DEBUG_MAP_BASE_C_DEC 		debug_base;128,4314
      typedef PB_DS_TREE_TRACE_BASE_C_DEC 		trace_base;132,4401
      typedef typename traits_base::pointer 		mapped_pointer_;135,4465
      typedef typename traits_base::const_pointer 	mapped_const_pointer_;136,4528
      typedef typename traits_type::metadata_type 	metadata_type;138,4603
      typedef rebind_traits<_Alloc,_Alloc140,4670
      typedef rebind_traits<_Alloc, metadata_type>	metadata_alloc_traits;140,4670
      typedef typename metadata_alloc_traits::allocator_type metadata_allocator;141,4744
      typedef typename metadata_alloc_traits::pointer	metadata_pointer;142,4825
      typedef typename metadata_alloc_traits::const_reference metadata_const_reference;143,4897
      typedef typename metadata_alloc_traits::reference	metadata_reference;144,4985
      null_node_update_pointer;147,5123
      typedef ov_tree_tag 				container_category;150,5168
      typedef _Alloc 					allocator_type;151,5218
      typedef typename _Alloc::size_type 		size_type;152,5260
      typedef typename _Alloc::difference_type 		difference_type;153,5314
      typedef Cmp_Fn 					cmp_fn;154,5380
      typedef typename traits_base::key_type 		key_type;156,5415
      typedef typename traits_base::key_pointer 	key_pointer;157,5472
      typedef typename traits_base::key_const_pointer 	key_const_pointer;158,5534
      typedef typename traits_base::key_reference 	key_reference;159,5608
      typedef typename traits_base::key_const_reference key_const_reference;160,5674
      typedef typename traits_base::mapped_type 	mapped_type;161,5751
      typedef typename traits_base::mapped_pointer 	mapped_pointer;162,5813
      typedef typename traits_base::mapped_const_pointer mapped_const_pointer;163,5881
      typedef typename traits_base::mapped_reference 	mapped_reference;164,5960
      typedef typename traits_base::mapped_const_reference mapped_const_reference;165,6032
      typedef typename traits_base::value_type 		value_type;166,6115
      typedef typename traits_base::pointer 		pointer;167,6176
      typedef typename traits_base::const_pointer 	const_pointer;168,6231
      typedef typename traits_base::reference 		reference;169,6297
      typedef typename traits_base::const_reference 	const_reference;170,6356
      typedef const_pointer 				point_const_iterator;172,6427
      typedef pointer 					point_iterator;174,6514
      typedef point_const_iterator 			point_iterator;176,6563
      typedef point_iterator 				iterator;179,6625
      typedef point_const_iterator 			const_iterator;180,6668
        class cond_dtor184,6792
	  cond_dtor(187,6835
	  ~cond_dtor(193,7020
	  set_no_action(209,7294
	  value_vector 		m_a_vec;213,7356
	  iterator& 		m_r_last_it;214,7383
	  const Size_Type 	m_max_size;215,7411
	  bool 			m_no_action;216,7443
      typedef typename traits_type::node_update 	node_update;219,7484
      typedef typename traits_type::node_iterator 	node_iterator;220,7546
      typedef typename traits_type::node_const_iterator	node_const_iterator;221,7612
      inline std::pair<std::pair275,8753
      insert(276,8798
      lower_bound(293,9242
      lower_bound(309,9600
      upper_bound(313,9756
      upper_bound(327,10086
      find(331,10241
      find(346,10590
      erase(357,10849
      begin(370,11076
      begin(374,11148
      end(378,11220
      end(382,11288
      mid_pointer(434,12574
      insert_new_val(441,12740
      static value_allocator 	s_value_alloc;516,14470
      static metadata_allocator s_metadata_alloc;517,14515
      value_vector 		m_a_values;519,14566
      metadata_pointer 		m_a_metadata;520,14599
      iterator 			m_end_it;521,14638
      size_type 		m_size;522,14666
#undef PB_DS_CLASS_C_DEC534,15212
#undef PB_DS_CLASS_T_DEC535,15237
#undef PB_DS_OV_TREE_NAME536,15262
#undef PB_DS_OV_TREE_TRAITS_BASE537,15288
#undef PB_DS_DEBUG_MAP_BASE_C_DEC538,15321
#undef PB_DS_TREE_TRACE_BASE_C_DEC540,15379
#undef PB_DS_CONST_NODE_ITERATOR_NAME542,15421

/usr/include/c++/13/ext/pb_ds/detail/ov_tree_map_/policy_access_fn_imps.hpp,40
get_cmp_fn(46,1791
get_cmp_fn(52,1876

/usr/include/c++/13/ext/pb_ds/detail/ov_tree_map_/split_join_fn_imps.hpp,29
split(46,1785
join(96,2889

/usr/include/c++/13/ext/pb_ds/detail/ov_tree_map_/traits.hpp,857
#define PB_DS_OV_TREE_NODE_AND_IT_TRAITS_HPP42,1749
namespace __gnu_pbds46,1856
  namespace detail48,1879
    template<typename Key,52,1947
	     typename Mapped,53,1974
	     template<typename Node_CItr,55,2017
      typename types_traits<types_traits71,2319
      typename tree_node_metadata_dispatch<tree_node_metadata_dispatch80,2457
      node_const_iterator;95,2822
      node_iterator;102,2926
      node_update;110,3037
      null_node_update_pointer;118,3165
    template<typename Key,124,3254
	     template<typename Node_CItr,126,3301
      typename types_traits<types_traits142,3606
      typename tree_node_metadata_dispatch<tree_node_metadata_dispatch151,3747
      node_const_iterator;166,4115
      typedef node_const_iterator node_iterator;168,4143
      node_update;176,4288
      null_node_update_pointer;184,4416

/usr/include/c++/13/ext/pb_ds/detail/pairing_heap_/constructors_destructor_fn_imps.hpp,128
copy_from_range(47,1827
pairing_heap(56,1996
pairing_heap(61,2082
pairing_heap(67,2212
swap(74,2352
~pairing_heap(83,2512

/usr/include/c++/13/ext/pb_ds/detail/pairing_heap_/debug_fn_imps.hpp,22
assert_valid(48,1810

/usr/include/c++/13/ext/pb_ds/detail/pairing_heap_/erase_fn_imps.hpp,140
pop(46,1787
erase(64,2220
remove_node(76,2468
join_node_children(134,4482
forward_join(151,4973
back_join(180,5845
erase_if(203,6473

/usr/include/c++/13/ext/pb_ds/detail/pairing_heap_/find_fn_imps.hpp,13
top(46,1832

/usr/include/c++/13/ext/pb_ds/detail/pairing_heap_/insert_fn_imps.hpp,48
push(46,1833
push_imp(58,2102
modify(83,2773

/usr/include/c++/13/ext/pb_ds/detail/pairing_heap_/pairing_heap_.hpp,1619
namespace __gnu_pbds53,2138
  namespace detail55,2161
#define PB_DS_CLASS_T_DEC 57,2184
#define PB_DS_CLASS_C_DEC 60,2279
#define PB_DS_P_HEAP_BASE 64,2373
#define PB_DS_P_HEAP_BASE 67,2484
    template<typename Value_Type,76,2664
    template<typename Value_Type, typename Cmp_Fn,76,2664
    class pairing_heap 77,2732
      typedef PB_DS_P_HEAP_BASE				base_type;80,2801
      typedef typename base_type::node_pointer 		node_pointer;81,2847
      typedef rebind_traits<_Alloc,_Alloc83,2911
      typedef rebind_traits<_Alloc, Value_Type>		__rebind_a;83,2911
      typedef Value_Type 				value_type;86,2985
      typedef Cmp_Fn 					cmp_fn;87,3026
      typedef _Alloc 					allocator_type;88,3060
      typedef typename _Alloc::size_type 		size_type;89,3102
      typedef typename _Alloc::difference_type 		difference_type;90,3156
      typedef typename __rebind_a::pointer 		pointer;92,3223
      typedef typename __rebind_a::const_pointer 	const_pointer;93,3277
      typedef typename __rebind_a::reference		reference;94,3342
      typedef typename __rebind_a::const_reference 	const_reference;95,3399
      typedef typename base_type::point_const_iterator	point_const_iterator;97,3469
      typedef typename base_type::point_iterator 	point_iterator;98,3546
      typedef typename base_type::const_iterator 	const_iterator;99,3612
      typedef typename base_type::iterator 		iterator;100,3678
#define PB_DS_ASSERT_NODE_CONSISTENT(168,4794
#undef PB_DS_ASSERT_NODE_CONSISTENT179,5338
#undef PB_DS_CLASS_C_DEC180,5374
#undef PB_DS_CLASS_T_DEC181,5399
#undef PB_DS_P_HEAP_BASE182,5424

/usr/include/c++/13/ext/pb_ds/detail/pairing_heap_/split_join_fn_imps.hpp,29
split(47,1816
join(94,2886

/usr/include/c++/13/ext/pb_ds/detail/pat_trie_/constructors_destructor_fn_imps.hpp,367
PB_DS_CLASS_C_DEC::s_head_allocator;45,1814
PB_DS_CLASS_C_DEC::s_inode_allocator;49,1914
PB_DS_CLASS_C_DEC::s_leaf_allocator;53,2014
PB_DS_PAT_TRIE_NAME(57,2090
PB_DS_PAT_TRIE_NAME(67,2257
PB_DS_PAT_TRIE_NAME(78,2500
swap(114,3335
value_swap(127,3614
~PB_DS_PAT_TRIE_NAME(136,3816
initialize(145,3942
copy_from_range(158,4156
recursive_copy_node(167,4338

/usr/include/c++/13/ext/pb_ds/detail/pat_trie_/debug_fn_imps.hpp,114
assert_valid(48,1801
assert_iterators(70,2440
assert_reverse_iterators(86,2891
recursive_count_leafs(102,3343

/usr/include/c++/13/ext/pb_ds/detail/pat_trie_/erase_fn_imps.hpp,289
erase(46,1784
erase_fixup(71,2382
	  typedef inode_pointer inode_ptr;84,2784
actual_erase_leaf(118,3725
clear(130,3989
clear_imp(145,4232
erase(170,4911
erase(189,5320
erase(207,5740
erase(226,6183
erase_if(246,6641
erase_leaf(271,6988
update_min_max_for_erased_leaf(294,7485

/usr/include/c++/13/ext/pb_ds/detail/pat_trie_/find_fn_imps.hpp,322
find(46,1821
find(70,2378
find_imp(95,3017
lower_bound_imp(123,3722
lower_bound(162,4755
lower_bound(168,4940
upper_bound(176,5172
upper_bound(194,5632
pref_begin(211,6099
pref_end(223,6475
leftmost_descendant(235,6849
leftmost_descendant(245,7140
rightmost_descendant(255,7419
rightmost_descendant(265,7712

/usr/include/c++/13/ext/pb_ds/detail/pat_trie_/info_fn_imps.hpp,47
empty(47,1802
size(53,1926
max_size(59,2042

/usr/include/c++/13/ext/pb_ds/detail/pat_trie_/insert_join_fn_imps.hpp,360
join(46,1783
join_prep(73,2445
rec_join_prep(105,3358
rec_join_prep(140,4246
rec_join_prep(147,4410
rec_join_prep(154,4575
rec_join_prep(161,4740
rec_join(201,5962
rec_join(251,7301
rec_join(264,7655
rec_join(281,8187
rec_join(319,9356
insert(384,11469
keys_diff_ind(418,12579
insert_branch(441,13164
update_min_max_for_inserted_leaf(464,14006

/usr/include/c++/13/ext/pb_ds/detail/pat_trie_/iterators_fn_imps.hpp,196
begin(46,1820
begin(52,1957
end(58,2100
end(64,2226
rbegin(70,2372
rbegin(80,2534
rend(90,2690
rend(96,2833
node_begin(102,2985
node_begin(108,3152
node_end(114,3313
node_end(120,3459

/usr/include/c++/13/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp,6081
namespace __gnu_pbds61,2342
  namespace detail63,2365
#define PB_DS_PAT_TRIE_NAME 66,2421
#define PB_DS_PAT_TRIE_NAME 70,2504
#define PB_DS_CLASS_T_DEC 73,2553
#define PB_DS_CLASS_C_DEC 77,2680
#define PB_DS_PAT_TRIE_TRAITS_BASE 80,2774
#define PB_DS_DEBUG_MAP_BASE_C_DEC 84,2879
    template<typename Key,99,3349
    template<typename Key, typename Mapped,99,3349
    template<typename Key, typename Mapped, typename Node_And_It_Traits,99,3349
    class PB_DS_PAT_TRIE_NAME 101,3445
      typedef pat_trie_base				base_type;111,3734
      typedef PB_DS_PAT_TRIE_TRAITS_BASE 		traits_base;112,3776
      typedef Node_And_It_Traits			traits_type;113,3832
      typedef typename traits_type::synth_access_traits synth_access_traits;115,3881
      typedef typename synth_access_traits::const_iterator a_const_iterator;116,3958
      typedef typename traits_type::node		node;118,4036
      typedef rebind_traits<_Alloc,_Alloc119,4084
      typedef rebind_traits<_Alloc, node>		__rebind_n;119,4084
      typedef typename __rebind_n::const_pointer	node_const_pointer;120,4139
      typedef typename __rebind_n::pointer		node_pointer;121,4208
      typedef typename traits_type::head		head;123,4267
      typedef rebind_traits<_Alloc,_Alloc124,4315
      typedef rebind_traits<_Alloc, head>		__rebind_h;124,4315
      typedef typename __rebind_h::allocator_type 	head_allocator;125,4370
      typedef typename __rebind_h::pointer 		head_pointer;126,4437
      typedef typename traits_type::leaf		leaf;128,4497
      typedef rebind_traits<_Alloc,_Alloc129,4545
      typedef rebind_traits<_Alloc, leaf>		__rebind_l;129,4545
      typedef typename __rebind_l::allocator_type	leaf_allocator;130,4600
      typedef typename __rebind_l::pointer 		leaf_pointer;131,4666
      typedef typename __rebind_l::const_pointer	leaf_const_pointer;132,4725
      typedef typename traits_type::inode		inode;134,4795
      typedef typename inode::iterator 			inode_iterator;135,4845
      typedef rebind_traits<_Alloc,_Alloc136,4903
      typedef rebind_traits<_Alloc, inode>		__rebind_in;136,4903
      typedef typename __rebind_in::allocator_type	inode_allocator;137,4960
      typedef typename __rebind_in::pointer 		inode_pointer;138,5028
      typedef typename __rebind_in::const_pointer	inode_const_pointer;139,5089
      class cond_dealtor143,5197
	leaf_pointer 		m_p_nd;146,5247
	bool 			m_no_action_dtor;147,5271
	bool 			m_call_destructor;148,5298
	cond_dealtor(151,5341
	set_no_action_dtor(156,5453
	set_call_destructor(160,5512
	~cond_dealtor(163,5567
      class branch_bag177,5770
	typedef inode_pointer 			       	__inp;180,5816
	typedef typename rebind_traits<rebind_traits181,5857
	  __rebind_inp;182,5920
	typedef std::_GLIBCXX_STD_C::list<__inp,__inp185,5960
	typedef std::_GLIBCXX_STD_C::list<__inp, __rebind_inp> 	bag_type;185,5960
	typedef std::list<__inp,__inp187,6033
	typedef std::list<__inp, __rebind_inp> 			bag_type;187,6033
	bag_type 						m_bag;190,6094
	add_branch(193,6137
	get_branch(208,6389
	~branch_bag(216,6530
	empty(227,6740
      typedef PB_DS_DEBUG_MAP_BASE_C_DEC 		debug_base;232,6814
      typedef typename traits_type::null_node_update_pointer null_node_update_pointer;235,6877
      typedef pat_trie_tag 				container_category;238,6977
      typedef _Alloc 					allocator_type;239,7028
      typedef typename _Alloc::size_type 		size_type;240,7070
      typedef typename _Alloc::difference_type 		difference_type;241,7124
      typedef typename traits_base::key_type 		key_type;243,7191
      typedef typename traits_base::key_pointer 	key_pointer;244,7248
      typedef typename traits_base::key_const_pointer 	key_const_pointer;245,7310
      typedef typename traits_base::key_reference 	key_reference;246,7384
      typedef typename traits_base::key_const_reference key_const_reference;247,7450
      typedef typename traits_base::mapped_type 	mapped_type;248,7527
      typedef typename traits_base::mapped_pointer 	mapped_pointer;249,7589
      typedef typename traits_base::mapped_const_pointer mapped_const_pointer;250,7657
      typedef typename traits_base::mapped_reference 	mapped_reference;251,7736
      typedef typename traits_base::mapped_const_reference mapped_const_reference;252,7808
      typedef typename traits_base::value_type 		value_type;253,7891
      typedef typename traits_base::pointer 		pointer;254,7952
      typedef typename traits_base::const_pointer 	const_pointer;255,8007
      typedef typename traits_base::reference 		reference;256,8073
      typedef typename traits_base::const_reference 	const_reference;257,8132
      typedef typename traits_type::access_traits 	access_traits;259,8203
      typedef typename traits_type::const_iterator 	point_const_iterator;260,8269
      typedef typename traits_type::iterator 		point_iterator;261,8343
      typedef point_const_iterator 			const_iterator;262,8406
      typedef point_iterator 				iterator;263,8460
      typedef typename traits_type::reverse_iterator 	reverse_iterator;265,8504
      typedef typename traits_type::const_reverse_iterator const_reverse_iterator;266,8576
      typedef typename traits_type::node_const_iterator node_const_iterator;267,8659
      typedef typename traits_type::node_iterator 	node_iterator;268,8736
      typedef typename traits_type::node_update 	node_update;269,8802
      inline std::pair<std::pair303,9437
      static head_allocator 		s_head_allocator;562,15457
      static inode_allocator 		s_inode_allocator;563,15505
      static leaf_allocator 		s_leaf_allocator;564,15555
      head_pointer 			m_p_head;566,15604
      size_type 			m_size;567,15636
#define PB_DS_ASSERT_NODE_VALID(570,15671
#define PB_DS_RECURSIVE_COUNT_LEAFS(573,15775
#undef PB_DS_RECURSIVE_COUNT_LEAFS588,16516
#undef PB_DS_ASSERT_NODE_VALID589,16551
#undef PB_DS_CLASS_C_DEC590,16582
#undef PB_DS_CLASS_T_DEC591,16607
#undef PB_DS_PAT_TRIE_NAME592,16632
#undef PB_DS_PAT_TRIE_TRAITS_BASE593,16659
#undef PB_DS_DEBUG_MAP_BASE_C_DEC594,16693

/usr/include/c++/13/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp,15377
#define PB_DS_PAT_TRIE_BASE42,1734
namespace __gnu_pbds46,1789
  namespace detail48,1812
    struct pat_trie_base51,1873
      enum node_type58,2053
	  i_node,60,2077
	  leaf_node,61,2088
	  head_node62,2102
      template<typename Metadata,66,2162
	struct _Metadata67,2213
	  typedef Metadata     					metadata_type;69,2234
	  typedef _Alloc     					allocator_type;70,2278
	  typedef typename detail::rebind_traits<detail::rebind_traits71,2321
	    const_reference;72,2398
	  get_metadata(75,2440
	  metadata_type 					m_metadata;78,2491
	  typedef null_type 					metadata_type;85,2646
	  typedef _Alloc     					allocator_type;86,2687
      template<typename _ATraits,91,2757
      struct _Node_base92,2810
	typedef typename Metadata::allocator_type		_Alloc;96,2881
	typedef _Alloc						allocator_type;99,2948
	typedef _ATraits					access_traits;100,2985
	typedef typename _ATraits::type_traits			type_traits;101,3022
	typedef typename detail::rebind_traits<detail::rebind_traits102,3077
	  node_pointer;103,3146
	node_pointer 						m_p_parent;105,3164
	const node_type 	       				m_type;106,3196
	_Node_base(108,3234
	typedef typename detail::rebind_traits<detail::rebind_traits111,3283
	  a_const_pointer;112,3356
	typedef typename _ATraits::const_iterator	      a_const_iterator;113,3376
	typedef std::pair<a_const_iterator,a_const_iterator116,3466
	typedef std::pair<a_const_iterator, a_const_iterator> node_debug_info;116,3466
	assert_valid(119,3545
    template<typename _ATraits,130,3824
    struct _Head131,3875
      typedef _Node_base<_ATraits,_ATraits134,3942
      typedef _Node_base<_ATraits, Metadata> 			base_type;134,3942
      typedef typename base_type::type_traits			type_traits;135,4001
      typedef typename base_type::node_pointer			node_pointer;136,4062
      node_pointer						m_p_min;138,4126
      node_pointer						m_p_max;139,4159
      _Head(141,4193
      typedef typename base_type::node_debug_info      	       node_debug_info;144,4257
      typedef typename base_type::a_const_pointer 	       a_const_pointer;145,4337
      assert_valid_imp(148,4443
    template<typename _ATraits,161,4762
    struct _Leaf162,4813
      typedef _Node_base<_ATraits,_ATraits165,4880
      typedef _Node_base<_ATraits, Metadata> 	   	    	base_type;165,4880
      typedef typename base_type::type_traits			type_traits;166,4946
      typedef typename type_traits::value_type			value_type;167,5007
      typedef typename type_traits::reference			reference;168,5068
      typedef typename type_traits::const_reference    		const_reference;169,5127
      value_type						m_value;172,5215
      _Leaf(177,5287
      value(181,5388
      value(185,5451
      typedef typename base_type::node_debug_info      		node_debug_info;189,5520
      typedef typename base_type::a_const_pointer      		a_const_pointer;190,5594
      assert_valid_imp(193,5699
      ~_Leaf(204,6060
    template<typename _ATraits,210,6138
    struct _Inode211,6189
      typedef _Node_base<_ATraits,_ATraits214,6257
      typedef _Node_base<_ATraits, Metadata>		base_type;214,6257
      typedef typename base_type::type_traits		type_traits;215,6314
      typedef typename base_type::access_traits		access_traits;216,6374
      typedef typename type_traits::value_type		value_type;217,6438
      typedef typename base_type::allocator_type	_Alloc;218,6498
      typedef _Alloc					allocator_type;219,6555
      typedef typename _Alloc::size_type		size_type;220,6596
      typedef typename base_type::a_const_pointer	a_const_pointer;223,6663
      typedef typename base_type::a_const_iterator	a_const_iterator;224,6730
      typedef typename base_type::node_pointer		node_pointer;226,6800
      typedef typename detail::rebind_traits<detail::rebind_traits227,6862
	node_const_pointer;228,6941
      typedef _Leaf<_ATraits,_ATraits230,6963
      typedef _Leaf<_ATraits, Metadata>	 		leaf;230,6963
      typedef typename detail::rebind_traits<detail::rebind_traits231,7012
      typedef typename detail::rebind_traits<_Alloc, leaf>	__rebind_l;231,7012
      typedef typename __rebind_l::pointer 		leaf_pointer;232,7083
      typedef typename __rebind_l::const_pointer 	leaf_const_pointer;233,7142
      typedef detail::rebind_traits<_Alloc,_Alloc235,7213
      typedef detail::rebind_traits<_Alloc, _Inode>	__rebind_in;235,7213
      typedef typename __rebind_in::pointer		inode_pointer;236,7278
      typedef typename __rebind_in::const_pointer 	inode_const_pointer;237,7338
      typedef detail::rebind_traits<_Alloc,_Alloc243,7526
      typedef detail::rebind_traits<_Alloc, node_pointer>	__rebind_np;243,7526
      typedef typename __rebind_np::pointer 		node_pointer_pointer;244,7597
      typedef typename __rebind_np::reference 		node_pointer_reference;245,7665
	  arr_size 249,7752
      struct const_iterator255,7886
	node_pointer_pointer 				m_p_p_cur;257,7922
	node_pointer_pointer 				m_p_p_end;258,7959
	typedef std::forward_iterator_tag 		iterator_category;260,7997
	typedef typename _Alloc::difference_type 	difference_type;261,8053
	typedef node_pointer 				value_type;262,8113
	typedef node_pointer_pointer 			pointer;263,8151
	typedef node_pointer_reference 			reference;264,8193
	const_iterator(266,8240
	operator==(operator==272,8387
	operator!=(operator!=276,8483
	operator++(280,8590
	operator++(289,8722
	operator->(297,8842
	operator*(304,8957
	assert_referencible(313,9097
      struct iterator 320,9241
	typedef std::forward_iterator_tag 		iterator_category;323,9309
	typedef typename _Alloc::difference_type 	difference_type;324,9365
	typedef node_pointer 				value_type;325,9425
	typedef node_pointer_pointer 			pointer;326,9463
	typedef node_pointer_reference 			reference;327,9505
	iterator(330,9560
	operator==(operator==335,9688
	operator!=(operator!=339,9794
	operator++(343,9905
	operator++(350,9986
	operator->(358,10094
	operator*(365,10229
      typedef typename base_type::node_debug_info 	       node_debug_info;446,12000
      get_e_ind(453,12195
      static __rebind_l			s_leaf_alloc;462,12335
      static __rebind_in 		s_inode_alloc;463,12375
      const size_type 			m_e_ind;465,12418
      a_const_iterator 			m_pref_b_it;466,12452
      a_const_iterator 			m_pref_e_it;467,12491
      node_pointer 			m_a_p_children[m_a_p_children468,12530
#define PB_DS_CONST_IT_C_DEC 471,12586
#define PB_DS_CONST_ODIR_IT_C_DEC 474,12675
#define PB_DS_IT_C_DEC 477,12770
#define PB_DS_ODIR_IT_C_DEC 480,12852
    template<typename Node,485,12965
    template<typename Node, typename Leaf,485,12965
    template<typename Node, typename Leaf, typename Head,485,12965
    template<typename Node, typename Leaf, typename Head, typename Inode,485,12965
    class _CIter487,13071
      typedef typename Node::allocator_type		allocator_type;491,13183
      typedef typename Node::type_traits		type_traits;492,13244
      typedef std::bidirectional_iterator_tag 		iterator_category;494,13300
      typedef typename allocator_type::difference_type	difference_type;495,13367
      typedef typename type_traits::value_type		value_type;496,13439
      typedef typename type_traits::pointer 		pointer;497,13499
      typedef typename type_traits::reference 		reference;498,13554
      typedef typename type_traits::const_pointer 	const_pointer;499,13613
      typedef typename type_traits::const_reference 	const_reference;500,13679
      typedef allocator_type				_Alloc;502,13750
      typedef typename rebind_traits<rebind_traits503,13790
      typedef typename rebind_traits<_Alloc, Node>::pointer	node_pointer;503,13790
      typedef typename rebind_traits<rebind_traits504,13864
      typedef typename rebind_traits<_Alloc, Leaf>::pointer	leaf_pointer;504,13864
      typedef typename rebind_traits<rebind_traits505,13938
      typedef typename rebind_traits<_Alloc, Leaf>::const_pointer	leaf_const_pointer;505,13938
      typedef typename rebind_traits<rebind_traits506,14024
      typedef typename rebind_traits<_Alloc, Head>::pointer	head_pointer;506,14024
      typedef typename rebind_traits<rebind_traits508,14099
      typedef typename rebind_traits<_Alloc, Inode>::pointer 	inode_pointer;508,14099
      typedef typename Inode::iterator			inode_iterator;509,14176
      node_pointer 					m_p_nd;511,14234
      _CIter(513,14267
      _CIter(516,14329
      operator=(operator=521,14436
      operator=(operator=528,14543
      operator->(535,14675
      operator*(542,14845
      operator==(operator==549,15002
      operator==(operator==553,15099
      operator!=(operator!=557,15215
      operator!=(operator!=561,15312
      operator++(565,15431
      operator++(572,15548
      operator--(580,15656
      operator--(587,15773
      inc(596,15893
      inc(600,15955
      dec(624,16419
      dec(628,16481
      get_larger_sibling(652,16963
      get_smaller_sibling(666,17288
      leftmost_descendant(689,17694
      rightmost_descendant(697,17922
    template<typename Node,707,18152
    template<typename Node, typename Leaf,707,18152
    template<typename Node, typename Leaf, typename Head,707,18152
    template<typename Node, typename Leaf, typename Head, typename Inode,707,18152
    class _Iter709,18258
      typedef _CIter<Node,Node713,18358
      typedef _CIter<Node, Leaf,713,18358
      typedef _CIter<Node, Leaf, Head,713,18358
      typedef _CIter<Node, Leaf, Head, Inode,713,18358
      							base_type;714,18425
      typedef typename base_type::allocator_type	allocator_type;715,18449
      typedef typename base_type::type_traits		type_traits;716,18514
      typedef typename type_traits::value_type		value_type;717,18574
      typedef typename type_traits::pointer 		pointer;718,18634
      typedef typename type_traits::reference 		reference;719,18689
      typedef typename base_type::node_pointer		node_pointer;721,18749
      typedef typename base_type::leaf_pointer		leaf_pointer;722,18811
      typedef typename base_type::leaf_const_pointer	leaf_const_pointer;723,18873
      typedef typename base_type::head_pointer		head_pointer;724,18946
      typedef typename base_type::inode_pointer 	inode_pointer;725,19008
      _Iter(727,19073
      _Iter(730,19137
      operator=(operator=734,19233
      operator=(operator=741,19349
      operator->(748,19480
      operator*(755,19666
      operator++(762,19847
      operator++(769,19936
      operator--(777,20047
      operator--(784,20136
#undef PB_DS_CONST_ODIR_IT_C_DEC792,20241
#undef PB_DS_ODIR_IT_C_DEC793,20274
#define PB_DS_PAT_TRIE_NODE_CONST_ITERATOR_C_DEC 796,20303
#define PB_DS_PAT_TRIE_NODE_ITERATOR_C_DEC 799,20436
    template<typename Node,803,20591
	     typename Leaf,804,20619
	     typename Head,805,20640
	     typename Inode,806,20661
	     typename _CIterator,807,20683
	     typename Iterator,808,20710
    class _Node_citer810,20758
      typedef typename rebind_traits<rebind_traits813,20801
      typedef typename rebind_traits<_Alloc, Node>::pointer	node_pointer;813,20801
      typedef typename rebind_traits<rebind_traits815,20876
      typedef typename rebind_traits<_Alloc, Leaf>::pointer	leaf_pointer;815,20876
      typedef typename rebind_traits<rebind_traits816,20950
      typedef typename rebind_traits<_Alloc, Leaf>::const_pointer	leaf_const_pointer;816,20950
      typedef typename rebind_traits<rebind_traits818,21037
      typedef typename rebind_traits<_Alloc, Inode>::pointer 	inode_pointer;818,21037
      typedef typename rebind_traits<rebind_traits819,21114
      typedef typename rebind_traits<_Alloc, Inode>::const_pointer inode_const_pointer;819,21114
      typedef typename Node::a_const_pointer		a_const_pointer;821,21203
      typedef typename Node::a_const_iterator		a_const_iterator;822,21266
      pref_begin(826,21368
      pref_end(838,21731
      typedef trivial_iterator_tag 			iterator_category;850,22079
      typedef trivial_iterator_difference_type 		difference_type;851,22136
      typedef typename _Alloc::size_type 		size_type;852,22202
      typedef _CIterator 		       		value_type;854,22257
      typedef value_type 				reference;855,22305
      typedef value_type 				const_reference;856,22345
      typedef typename Node::metadata_type 		metadata_type;859,22417
      typedef typename rebind_traits<rebind_traits862,22519
      typedef typename rebind_traits<_Alloc, metadata_type>::const_reference    metadata_const_reference;862,22519
      _Node_citer(865,22639
      std::pair<std::pair870,22822
      valid_prefix(871,22874
      operator*(877,23081
      get_metadata(885,23253
      num_children(890,23406
      get_child(902,23765
      operator==(operator==913,24099
      operator!=(operator!=918,24273
      node_pointer 			m_p_nd;921,24364
      a_const_pointer 			m_p_traits;922,24394
    template<typename Node,927,24463
	     typename Leaf,928,24491
	     typename Head,929,24512
	     typename Inode,930,24533
	     typename _CIterator,931,24555
	     typename Iterator,932,24582
    class _Node_iter934,24630
      typedef _Node_citer<Node,Node938,24750
      typedef _Node_citer<Node, Leaf,938,24750
      typedef _Node_citer<Node, Leaf, Head,938,24750
      typedef _Node_citer<Node, Leaf, Head, Inode,938,24750
			  _CIterator,939,24801
			  _CIterator, Iterator,939,24801
			  _CIterator, Iterator, _Alloc>	base_type;939,24801
      typedef typename rebind_traits<rebind_traits940,24847
      typedef typename rebind_traits<_Alloc, Node>::pointer	node_pointer;940,24847
      typedef typename base_type::inode_pointer 	inode_pointer;941,24921
      typedef typename base_type::a_const_pointer 	a_const_pointer;942,24985
      typedef Iterator 					iterator;943,25053
      typedef typename base_type::size_type 		size_type;946,25104
      typedef Iterator 					value_type;948,25162
      typedef value_type 				reference;949,25202
      typedef value_type 				const_reference;950,25242
      _Node_iter(952,25289
      operator*(958,25495
      get_child(966,25722
#define PB_DS_CLASS_T_DEC 980,26012
#define PB_DS_CLASS_C_DEC 983,26092
    PB_DS_CLASS_C_DEC::s_leaf_alloc;988,26232
    PB_DS_CLASS_C_DEC::s_inode_alloc;992,26336
    get_pref_pos(997,26470
    _Inode(1008,26788
    update_prefixes(1019,27115
    begin(1040,27730
      typedef node_pointer_pointer pointer_type;1042,27754
    begin(1050,28026
    end(1059,28236
      typedef node_pointer_pointer pointer_type;1061,28258
    end(1069,28512
    get_child_node(1075,28700
    get_child_it(1086,29040
    get_child_node(1098,29470
    get_lower_bound_child_node(1105,29743
    add_child(1143,30780
    get_join_child(1160,31252
    get_join_child(1170,31559
	  typedef typename type_traits::key_const_reference 1179,31812
    remove_child(1197,32308
    remove_child(1212,32594
    replace_child(1218,32707
    pref_b_it(1231,33107
    pref_e_it(1237,33260
    should_be_mine(1243,33366
    leftmost_descendant(1271,34182
    leftmost_descendant(1283,34562
    rightmost_descendant(1289,34757
    rightmost_descendant(1306,35320
    get_begin_pos(1312,35514
    assert_valid_imp(1324,35769
#undef PB_DS_CLASS_T_DEC1346,36749
#undef PB_DS_CLASS_C_DEC1347,36774

/usr/include/c++/13/ext/pb_ds/detail/pat_trie_/policy_access_fn_imps.hpp,104
get_access_traits(46,1824
get_access_traits(52,1951
get_node_update(58,2076
get_node_update(64,2199

/usr/include/c++/13/ext/pb_ds/detail/pat_trie_/r_erase_fn_imps.hpp,101
actual_erase_node(46,1786
update_min_max_for_erased_node(58,2057
clear(83,2504
clear_imp(96,2767

/usr/include/c++/13/ext/pb_ds/detail/pat_trie_/rotate_fn_imps.hpp,161
rotate_left(46,1772
rotate_right(75,2473
rotate_parent(104,3178
apply_update(118,3544
apply_update(125,3712
update_to_top(138,4051
update_to_top(150,4269

/usr/include/c++/13/ext/pb_ds/detail/pat_trie_/split_fn_imps.hpp,85
split(46,1777
split_prep(83,2851
rec_split(134,4149
split_insert_branch(197,6078

/usr/include/c++/13/ext/pb_ds/detail/pat_trie_/synth_access_traits.hpp,1291
#define PB_DS_SYNTH_E_ACCESS_TRAITS_HPP42,1761
namespace __gnu_pbds46,1846
  namespace detail48,1869
#define PB_DS_SYNTH_E_ACCESS_TRAITS_T_DEC 51,1893
#define PB_DS_SYNTH_E_ACCESS_TRAITS_C_DEC 54,2002
    template<typename Type_Traits,58,2140
    template<typename Type_Traits, bool Set,58,2140
    struct synth_access_traits 59,2204
      typedef _ATraits 					base_type;61,2259
      typedef typename base_type::const_iterator	const_iterator;62,2298
      typedef Type_Traits 				type_traits;63,2363
      typedef typename type_traits::const_reference 	const_reference;64,2406
      typedef typename type_traits::key_const_reference key_const_reference;65,2476
      static integral_constant<integral_constant100,3432
      static integral_constant<int, Set> s_set_ind;100,3432
    integral_constant<integral_constant104,3530
    PB_DS_SYNTH_E_ACCESS_TRAITS_C_DEC::s_set_ind;105,3561
    synth_access_traits(109,3690
    synth_access_traits(114,3803
    equal_prefixes(121,3982
    equal_keys(139,4435
    cmp_prefixes(152,4801
    cmp_keys(176,5389
    extract_key(189,5807
    extract_key(195,6046
    extract_key(201,6272
    operator()(operator()208,6461
#undef PB_DS_SYNTH_E_ACCESS_TRAITS_T_DEC212,6577
#undef PB_DS_SYNTH_E_ACCESS_TRAITS_C_DEC213,6618

/usr/include/c++/13/ext/pb_ds/detail/pat_trie_/trace_fn_imps.hpp,95
trace(48,1808
trace_node(60,2006
trace_node_metadata(101,3150
trace_node_metadata(109,3348

/usr/include/c++/13/ext/pb_ds/detail/pat_trie_/traits.hpp,3521
#define PB_DS_PAT_TRIE_NODE_AND_IT_TRAITS_HPP42,1748
namespace __gnu_pbds47,1914
  namespace detail49,1937
    template<typename Key,53,2008
	     typename Mapped,54,2035
	     typename _ATraits,55,2058
      typedef pat_trie_base				    	base_type;65,2345
      typedef types_traits<Key, Mapped, _Alloc, false> 		type_traits;66,2392
      typedef typename trie_node_metadata_dispatch<trie_node_metadata_dispatch69,2475
      typedef base_type::_Metadata<metadata_type, _Alloc>      	metadata;70,2591
      typedef _ATraits 		       			       	access_traits;71,2665
      typedef __gnu_pbds::detail::synth_access_traits<type_traits, false, access_traits>   synth_access_traits;74,2763
      typedef base_type::_Node_base<synth_access_traits, metadata>     	node;76,2876
      typedef base_type::_Head<synth_access_traits, metadata>	       	head;77,2954
      typedef base_type::_Leaf<synth_access_traits, metadata>	       	leaf;78,3030
      typedef base_type::_Inode<synth_access_traits, metadata> 		inode;79,3106
      typedef base_type::_Iter<node, leaf, head, inode, true>	       	iterator;81,3179
      typedef base_type::_CIter<node, leaf, head, inode, true> 	 	const_iterator;82,3259
      typedef base_type::_Iter<node, leaf, head, inode, false> 		reverse_iterator;83,3341
      typedef base_type::_CIter<node, leaf, head, inode, false>	 	const_reverse_iterator;84,3424
      typedef base_type::_Node_citer<node, leaf, head, inode, const_iterator, iterator, _Alloc> node_const_iterator;88,3654
      typedef base_type::_Node_iter<node, leaf, head, inode, const_iterator, iterator, _Alloc> node_iterator;90,3772
      typedef Node_Update<node_const_iterator, node_iterator, _ATraits, _Alloc> 		node_update;93,3915
      typedef null_node_update<node_const_iterator, node_iterator, _ATraits, _Alloc>* 		null_node_update_pointer;95,4011
    template<typename Key,101,4182
	     typename _ATraits,102,4209
      typedef pat_trie_base					base_type;112,4499
      typedef types_traits<Key, null_type, _Alloc, false> 	type_traits;113,4542
      typedef typename trie_node_metadata_dispatch<trie_node_metadata_dispatch116,4627
      typedef base_type::_Metadata<metadata_type, _Alloc>				metadata;117,4746
      typedef _ATraits 				     					access_traits;118,4817
      typedef __gnu_pbds::detail::synth_access_traits<type_traits, true, access_traits> synth_access_traits;121,4909
      typedef base_type::_Node_base<synth_access_traits, metadata>     	node;123,5019
      typedef base_type::_Head<synth_access_traits, metadata> 	       	head;124,5097
      typedef base_type::_Leaf<synth_access_traits, metadata> 	       	leaf;125,5174
      typedef base_type::_Inode<synth_access_traits, metadata> 	       	inode;126,5251
      typedef base_type::_CIter<node, leaf, head, inode, true> 		const_iterator;128,5331
      typedef const_iterator 					       	iterator;129,5412
      typedef base_type::_CIter<node, leaf, head, inode, false>	       	const_reverse_iterator;130,5464
      typedef const_reverse_iterator 			       		reverse_iterator;131,5560
      typedef base_type::_Node_citer<node, leaf, head, inode, const_iterator, iterator, _Alloc> node_const_iterator;135,5767
      typedef node_const_iterator 								node_iterator;137,5885
      typedef Node_Update<node_const_iterator, node_iterator, _ATraits, _Alloc> 		node_update;140,5975
      typedef null_node_update<node_const_iterator, node_const_iterator, _ATraits, _Alloc>* 	null_node_update_pointer;142,6071

/usr/include/c++/13/ext/pb_ds/detail/pat_trie_/update_fn_imps.hpp,44
apply_update(46,1786
apply_update(53,1926

/usr/include/c++/13/ext/pb_ds/detail/rb_tree_map_/constructors_destructor_fn_imps.hpp,172
copy_from_range(47,1814
PB_DS_RB_TREE_NAME(55,1955
PB_DS_RB_TREE_NAME(63,2065
PB_DS_RB_TREE_NAME(72,2221
PB_DS_RB_TREE_NAME(81,2426
swap(91,2592
initialize(101,2757

/usr/include/c++/13/ext/pb_ds/detail/rb_tree_map_/debug_fn_imps.hpp,54
assert_node_consistent(48,1830
assert_valid(70,2428

/usr/include/c++/13/ext/pb_ds/detail/rb_tree_map_/erase_fn_imps.hpp,129
erase(46,1781
erase(58,2018
erase(74,2316
erase_if(91,2657
erase_node(114,3005
remove_node(124,3172
remove_fixup(201,4904

/usr/include/c++/13/ext/pb_ds/detail/rb_tree_map_/info_fn_imps.hpp,30
is_effectively_black(46,1780

/usr/include/c++/13/ext/pb_ds/detail/rb_tree_map_/insert_fn_imps.hpp,38
insert(46,1837
insert_fixup(64,2257

/usr/include/c++/13/ext/pb_ds/detail/rb_tree_map_/node.hpp,1054
#define PB_DS_RB_TREE_NODE_HPP42,1727
namespace __gnu_pbds46,1825
  namespace detail48,1848
    template<typename Value_Type,51,1905
    struct rb_tree_node_52,1972
      typedef Value_Type 		value_type;55,2015
      typedef Metadata 			metadata_type;56,2054
      typedef typename rebind_traits<rebind_traits58,2096
	node_pointer;59,2165
      typedef typename rebind_traits<rebind_traits61,2181
	metadata_reference;62,2252
      typedef typename rebind_traits<rebind_traits64,2274
	metadata_const_reference;65,2351
      special(68,2390
      get_metadata(72,2468
      get_metadata(76,2550
      trace(81,2648
      node_pointer 	m_p_left;88,2788
      node_pointer 	m_p_right;89,2818
      node_pointer 	m_p_parent;90,2849
      value_type 	m_value;91,2881
      bool 		m_red;92,2908
      metadata_type 	m_metadata;93,2928
    template<typename Value_Type,96,2969
      typedef Value_Type 		value_type;100,3094
      typedef null_type 	metadata_type;101,3133
      typedef typename rebind_traits<rebind_traits103,3174

/usr/include/c++/13/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp,3019
namespace __gnu_pbds47,1840
  namespace detail49,1863
#define PB_DS_CLASS_T_DEC 51,1886
# define PB_DS_RB_TREE_NAME 56,2063
# define PB_DS_RB_TREE_BASE_NAME 57,2103
# define PB_DS_RB_TREE_NAME 61,2198
# define PB_DS_RB_TREE_BASE_NAME 62,2238
#define PB_DS_CLASS_C_DEC 65,2299
#define PB_DS_RB_TREE_BASE 68,2400
    template<typename Key,79,2725
	     typename Mapped,80,2752
	     typename Cmp_Fn,81,2775
	     typename Node_And_It_Traits,82,2798
    class PB_DS_RB_TREE_NAME 84,2856
      typedef PB_DS_RB_TREE_BASE 		       	 base_type;87,2932
      typedef typename base_type::node_pointer 		 node_pointer;88,2987
      typedef rb_tree_tag 				 container_category;91,3064
      typedef Cmp_Fn 					 cmp_fn;92,3115
      typedef _Alloc 					 allocator_type;93,3150
      typedef typename _Alloc::size_type 		 size_type;94,3193
      typedef typename _Alloc::difference_type 		 difference_type;95,3248
      typedef typename base_type::key_type 		 key_type;96,3315
      typedef typename base_type::key_pointer 		 key_pointer;97,3371
      typedef typename base_type::key_const_pointer 	 key_const_pointer;98,3433
      typedef typename base_type::key_reference 	 key_reference;99,3506
      typedef typename base_type::key_const_reference 	 key_const_reference;100,3571
      typedef typename base_type::mapped_type 		 mapped_type;101,3648
      typedef typename base_type::mapped_pointer 	 mapped_pointer;102,3710
      typedef typename base_type::mapped_const_pointer 	 mapped_const_pointer;103,3777
      typedef typename base_type::mapped_reference 	 mapped_reference;104,3856
      typedef typename base_type::mapped_const_reference mapped_const_reference;105,3927
      typedef typename base_type::value_type 		 value_type;106,4008
      typedef typename base_type::pointer 		 pointer;107,4068
      typedef typename base_type::const_pointer 	 const_pointer;108,4122
      typedef typename base_type::reference 		 reference;109,4187
      typedef typename base_type::const_reference 	 const_reference;110,4245
      typedef typename base_type::point_iterator 	 point_iterator;111,4314
      typedef typename base_type::const_iterator 	 point_const_iterator;112,4381
      typedef typename base_type::iterator 		 iterator;113,4454
      typedef typename base_type::const_iterator 	 const_iterator;114,4510
      typedef typename base_type::reverse_iterator 	 reverse_iterator;115,4577
      typedef typename base_type::const_reverse_iterator const_reverse_iterator;116,4648
      typedef typename base_type::node_update 		 node_update;117,4729
      inline std::pair<std::pair134,5093
      std::pair<std::pair212,6770
      std::pair<std::pair218,6894
      std::pair<std::pair221,7002
#define PB_DS_STRUCT_ONLY_ASSERT_VALID(231,7241
#undef PB_DS_STRUCT_ONLY_ASSERT_VALID241,7741
#undef PB_DS_CLASS_T_DEC242,7779
#undef PB_DS_CLASS_C_DEC243,7804
#undef PB_DS_RB_TREE_NAME244,7829
#undef PB_DS_RB_TREE_BASE_NAME245,7855
#undef PB_DS_RB_TREE_BASE246,7886

/usr/include/c++/13/ext/pb_ds/detail/rb_tree_map_/split_join_fn_imps.hpp,174
join(46,1786
join_imp(67,2243
split_min(133,3874
find_join_pos_right(151,4245
find_join_pos_left(188,5148
black_height(222,5997
split(237,6207
split_at_node(271,7032

/usr/include/c++/13/ext/pb_ds/detail/rb_tree_map_/traits.hpp,408
#define PB_DS_RB_TREE_NODE_AND_IT_TRAITS_HPP42,1743
namespace __gnu_pbds46,1840
  namespace detail48,1863
    template<typename Key,52,1934
	     typename Mapped,53,1961
	     typename Cmp_Fn,54,1984
    : public bin_search_tree_traits<bin_search_tree_traits62,2247
    template<typename Key,77,2606
	     typename Cmp_Fn,78,2633
    : public bin_search_tree_traits<bin_search_tree_traits86,2899

/usr/include/c++/13/ext/pb_ds/detail/rc_binomial_heap_/constructors_destructor_fn_imps.hpp,119
rc_binomial_heap(45,1801
rc_binomial_heap(52,1893
rc_binomial_heap(60,2030
~rc_binomial_heap(70,2221
swap(76,2289

/usr/include/c++/13/ext/pb_ds/detail/rc_binomial_heap_/debug_fn_imps.hpp,77
assert_valid(48,1811
next_2_pointer(88,2944
next_after_0_pointer(107,3286

/usr/include/c++/13/ext/pb_ds/detail/rc_binomial_heap_/erase_fn_imps.hpp,90
pop(46,1795
clear(57,1964
make_binomial_heap(66,2058
erase_if(91,2598
erase(103,2812

/usr/include/c++/13/ext/pb_ds/detail/rc_binomial_heap_/insert_fn_imps.hpp,87
push(46,1834
modify(80,2584
link_with_next_sibling(96,2877
make_0_exposed(140,3851

/usr/include/c++/13/ext/pb_ds/detail/rc_binomial_heap_/rc.hpp,1993
#define PB_DS_RC_HPP42,1718
namespace __gnu_pbds44,1740
  namespace detail46,1763
    template<typename _Node,49,1820
    class rc50,1866
      typedef _Alloc 					 allocator_type;53,1898
      typedef typename allocator_type::size_type 	 size_type;54,1941
      typedef _Node 					 node;55,2003
      typedef typename rebind_traits<rebind_traits57,2036
      typedef typename rebind_traits<_Alloc, node>::pointer node_pointer;57,2036
      typedef typename rebind_traits<rebind_traits60,2112
	entry_pointer;61,2180
      typedef typename rebind_traits<rebind_traits62,2196
	entry_const_pointer;63,2270
	  max_entries 67,2307
      typedef node_pointer 				 entry;71,2364
      typedef entry_const_pointer 			 const_iterator;72,2403
      node_pointer 	m_a_entries[m_a_entries116,3046
      size_type 	m_over_top;117,3092
    template<typename _Node,120,3129
    rc<rc121,3175
    rc(122,3199
    template<typename _Node,125,3261
    rc<rc126,3307
    rc(127,3331
    template<typename _Node,130,3423
    rc<rc132,3485
    swap(133,3509
    template<typename _Node,148,3910
    rc<rc150,3972
    push(151,3996
    template<typename _Node,159,4193
    rc<rc161,4255
    pop(162,4279
    template<typename _Node,170,4429
    inline typename rc<rc171,4475
    rc<rc172,4527
    top(173,4551
    template<typename _Node,180,4699
    rc<rc182,4780
    empty(183,4804
    template<typename _Node,189,4899
    inline typename rc<rc190,4945
    rc<rc191,4994
    size(192,5018
    template<typename _Node,195,5063
    rc<rc197,5118
    clear(198,5142
    template<typename _Node,205,5257
    const typename rc<rc206,5303
    rc<rc207,5356
    begin(208,5380
    template<typename _Node,211,5431
    const typename rc<rc212,5477
    rc<rc213,5530
    end(214,5554
    template<typename _Node,218,5634
    rc<rc220,5689
    assert_valid(221,5713
    template<typename _Node,226,5867
    rc<rc228,5922
    trace(229,5946

/usr/include/c++/13/ext/pb_ds/detail/rc_binomial_heap_/rc_binomial_heap_.hpp,1668
namespace __gnu_pbds47,1976
  namespace detail49,1999
#define PB_DS_CLASS_T_DEC 51,2022
#define PB_DS_CLASS_C_DEC 54,2119
#define PB_DS_RC_C_DEC 57,2197
    template<typename Value_Type,65,2394
    template<typename Value_Type, typename Cmp_Fn,65,2394
    class rc_binomial_heap66,2462
      typedef binomial_heap_base<Value_Type,Value_Type70,2568
      typedef binomial_heap_base<Value_Type, Cmp_Fn,70,2568
      							base_type;71,2629
      typedef typename base_type::node_pointer 		node_pointer;72,2653
      typedef typename base_type::node_const_pointer 	node_const_pointer;73,2716
      typedef PB_DS_RC_C_DEC 				rc_t;74,2790
      typedef Value_Type 				value_type;77,2842
      typedef typename _Alloc::size_type 		size_type;78,2883
      typedef typename _Alloc::difference_type 		difference_type;79,2937
      typedef typename base_type::pointer 		pointer;80,3003
      typedef typename base_type::const_pointer 	const_pointer;81,3056
      typedef typename base_type::reference 		reference;82,3120
      typedef typename base_type::const_reference 	const_reference;83,3177
      typedef typename base_type::point_const_iterator 	point_const_iterator;84,3245
      typedef typename base_type::point_iterator 	point_iterator;85,3323
      typedef typename base_type::const_iterator 	const_iterator;86,3389
      typedef typename base_type::iterator 		iterator;87,3455
      typedef typename base_type::cmp_fn 		cmp_fn;88,3510
      typedef typename base_type::allocator_type 	allocator_type;89,3561
      rc_t 			m_rc;157,4744
#undef PB_DS_CLASS_C_DEC167,5181
#undef PB_DS_CLASS_T_DEC168,5206
#undef PB_DS_RC_C_DEC169,5231

/usr/include/c++/13/ext/pb_ds/detail/rc_binomial_heap_/split_join_fn_imps.hpp,29
split(47,1817
join(65,2165

/usr/include/c++/13/ext/pb_ds/detail/rc_binomial_heap_/trace_fn_imps.hpp,15
trace(48,1826

/usr/include/c++/13/ext/pb_ds/detail/resize_policy/cc_hash_max_collision_check_resize_trigger_imp.hpp,672
cc_hash_max_collision_check_resize_trigger(45,1790
notify_find_search_start(56,1988
notify_find_search_collision(62,2070
notify_find_search_end(68,2156
notify_insert_search_start(74,2236
notify_insert_search_collision(80,2335
notify_insert_search_end(86,2436
notify_erase_search_start(92,2540
notify_erase_search_collision(98,2623
notify_erase_search_end(104,2710
notify_inserted(110,2791
notify_erased(116,2873
notify_cleared(122,2970
is_resize_needed(128,3067
is_grow_needed(134,3171
notify_resized(140,3317
calc_max_num_coll(157,3631
notify_externally_resized(173,4098
swap(179,4218
get_load(191,4510
calc_resize_needed(200,4652
set_load(206,4782

/usr/include/c++/13/ext/pb_ds/detail/resize_policy/hash_exponential_size_policy_imp.hpp,119
hash_exponential_size_policy(45,1780
swap(53,1961
get_nearest_larger_size(62,2169
get_nearest_smaller_size(78,2503

/usr/include/c++/13/ext/pb_ds/detail/resize_policy/hash_load_check_resize_trigger_imp.hpp,835
#define PB_DS_ASSERT_VALID(43,1740
hash_load_check_resize_trigger(48,1875
notify_find_search_start(56,2136
notify_find_search_collision(62,2246
notify_find_search_end(68,2360
notify_insert_search_start(74,2468
notify_insert_search_collision(80,2580
notify_insert_search_end(86,2696
notify_erase_search_start(92,2806
notify_erase_search_collision(98,2917
notify_erase_search_end(104,3032
notify_inserted(110,3141
notify_erased(120,3356
is_resize_needed(130,3569
is_grow_needed(139,3705
~hash_load_check_resize_trigger(147,3896
notify_resized(152,3978
notify_externally_resized(173,4544
notify_cleared(207,5527
swap(218,5724
get_loads(237,6226
set_loads(246,6394
do_resize(275,7243
# define PB_DS_DEBUG_VERIFY(279,7305
assert_valid(288,7554
# undef PB_DS_DEBUG_VERIFY293,7718
#undef PB_DS_ASSERT_VALID295,7752

/usr/include/c++/13/ext/pb_ds/detail/resize_policy/hash_load_check_resize_trigger_size_base.hpp,250
#define PB_DS_HASH_LOAD_CHECK_RESIZE_TRIGGER_SIZE_BASE_HPP42,1793
namespace __gnu_pbds44,1853
  namespace detail46,1876
    template<typename Size_Type,49,1925
      typedef Size_Type size_type;57,2174
      typedef Size_Type size_type;82,2718

/usr/include/c++/13/ext/pb_ds/detail/resize_policy/hash_prime_size_policy_imp.hpp,423
namespace detail45,1763
      num_distinct_sizes_16_bit 49,1795
      num_distinct_sizes_32_bit 50,1833
      num_distinct_sizes_64_bit 51,1871
      num_distinct_sizes 55,2059
      num_distinct_sizes 57,2140
      num_distinct_sizes 59,2200
  static const std::size_t g_a_sizes[g_a_sizes65,2404
hash_prime_size_policy(140,5492
swap(146,5644
get_nearest_larger_size(152,5799
get_nearest_smaller_size(165,6167

/usr/include/c++/13/ext/pb_ds/detail/resize_policy/hash_standard_resize_policy_imp.hpp,812
hash_standard_resize_policy(45,1774
hash_standard_resize_policy(51,1954
hash_standard_resize_policy(57,2194
~hash_standard_resize_policy(65,2518
swap(71,2597
notify_find_search_start(81,2787
notify_find_search_collision(87,2918
notify_find_search_end(93,3057
notify_insert_search_start(99,3184
notify_insert_search_collision(105,3319
notify_insert_search_end(111,3462
notify_erase_search_start(117,3593
notify_erase_search_collision(123,3726
notify_erase_search_end(129,3867
notify_inserted(135,3996
notify_erased(141,4129
notify_cleared(147,4251
is_resize_needed(153,4362
get_new_size(159,4516
notify_resized(169,4801
get_actual_size(178,4994
resize(187,5136
do_resize(223,5875
get_trigger_policy(231,5972
get_trigger_policy(237,6073
get_size_policy(243,6171
get_size_policy(249,6266

/usr/include/c++/13/ext/pb_ds/detail/resize_policy/sample_resize_policy.hpp,156
#define PB_DS_SAMPLE_RESIZE_POLICY_HPP42,1746
namespace __gnu_pbds44,1786
  class sample_resize_policy47,1839
    typedef std::size_t size_type;51,1901

/usr/include/c++/13/ext/pb_ds/detail/resize_policy/sample_resize_trigger.hpp,158
#define PB_DS_SAMPLE_RESIZE_TRIGGER_HPP42,1746
namespace __gnu_pbds44,1787
  class sample_resize_trigger47,1848
    typedef std::size_t size_type;51,1911

/usr/include/c++/13/ext/pb_ds/detail/resize_policy/sample_size_policy.hpp,152
#define PB_DS_SAMPLE_SIZE_POLICY_HPP42,1731
namespace __gnu_pbds44,1769
  class sample_size_policy47,1820
    typedef std::size_t size_type;51,1880

/usr/include/c++/13/ext/pb_ds/detail/splay_tree_/constructors_destructor_fn_imps.hpp,168
copy_from_range(47,1822
PB_DS_S_TREE_NAME(55,1963
PB_DS_S_TREE_NAME(63,2072
PB_DS_S_TREE_NAME(72,2227
PB_DS_S_TREE_NAME(81,2431
swap(91,2596
initialize(103,2817

/usr/include/c++/13/ext/pb_ds/detail/splay_tree_/debug_fn_imps.hpp,50
assert_valid(48,1805
assert_special_imp(58,2044

/usr/include/c++/13/ext/pb_ds/detail/splay_tree_/erase_fn_imps.hpp,103
erase(46,1789
erase(58,2020
erase(73,2317
erase_if(89,2659
erase_node(111,3006
leftmost(153,4155

/usr/include/c++/13/ext/pb_ds/detail/splay_tree_/find_fn_imps.hpp,64
find(46,1826
find(57,2091
find_imp(68,2399
find_imp(88,2948

/usr/include/c++/13/ext/pb_ds/detail/splay_tree_/insert_fn_imps.hpp,41
insert(46,1845
insert_leaf_imp(60,2243

/usr/include/c++/13/ext/pb_ds/detail/splay_tree_/node.hpp,1046
#define PB_DS_SPLAY_TREE_NODE_HPP42,1746
namespace __gnu_pbds44,1781
  namespace detail46,1804
    template<typename Value_Type,49,1856
    struct splay_tree_node_50,1923
      typedef Value_Type value_type;53,1969
      typedef Metadata metadata_type;54,2006
      typedef typename rebind_traits<rebind_traits56,2045
	node_pointer;57,2117
      typedef typename rebind_traits<rebind_traits59,2133
	metadata_reference;60,2204
      typedef typename rebind_traits<rebind_traits62,2226
	metadata_const_reference;63,2303
      trace(67,2378
      special(72,2495
      get_metadata(76,2584
      get_metadata(80,2673
      value_type m_value;83,2724
      bool m_special;84,2750
      node_pointer m_p_left;85,2772
      node_pointer m_p_right;86,2801
      node_pointer m_p_parent;87,2831
      metadata_type m_metadata;88,2862
    template<typename Value_Type,91,2902
      typedef Value_Type value_type;95,3030
      typedef null_type metadata_type;96,3067
      typedef typename rebind_traits<rebind_traits98,3107

/usr/include/c++/13/ext/pb_ds/detail/splay_tree_/splay_fn_imps.hpp,180
splay(46,1782
splay_zig_zag_left(96,3143
splay_zig_zag_right(132,4032
splay_zig_zig_left(168,4925
splay_zig_zig_right(204,5853
splay_zz_start(239,6841
splay_zz_end(273,7691

/usr/include/c++/13/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp,3075
namespace __gnu_pbds76,3079
  namespace detail78,3102
# define PB_DS_S_TREE_NAME 81,3158
# define PB_DS_S_TREE_BASE_NAME 82,3200
# define PB_DS_S_TREE_NAME 86,3294
# define PB_DS_S_TREE_BASE_NAME 87,3336
#define PB_DS_CLASS_T_DEC 90,3396
#define PB_DS_CLASS_C_DEC 94,3540
#define PB_DS_S_TREE_BASE 97,3640
    template<typename Key,105,3820
    template<typename Key, typename Mapped,105,3820
    template<typename Key, typename Mapped, typename Cmp_Fn,105,3820
	     typename Node_And_It_Traits,106,3881
    class PB_DS_S_TREE_NAME 107,3933
      typedef PB_DS_S_TREE_BASE 		       	 base_type;110,4007
      typedef base_type debug_base;112,4083
      typedef typename base_type::node_pointer 		 node_pointer;114,4126
      typedef splay_tree_tag 				 container_category;117,4203
      typedef _Alloc 					 allocator_type;118,4257
      typedef typename _Alloc::size_type 		 size_type;119,4300
      typedef typename _Alloc::difference_type 		 difference_type;120,4355
      typedef Cmp_Fn 					 cmp_fn;121,4422
      typedef typename base_type::key_type 		 key_type;122,4457
      typedef typename base_type::key_pointer 		 key_pointer;123,4513
      typedef typename base_type::key_const_pointer 	 key_const_pointer;124,4575
      typedef typename base_type::key_reference 	 key_reference;125,4648
      typedef typename base_type::key_const_reference 	 key_const_reference;126,4713
      typedef typename base_type::mapped_type 	 	 mapped_type;127,4790
      typedef typename base_type::mapped_pointer 	 mapped_pointer;128,4853
      typedef typename base_type::mapped_const_pointer 	 mapped_const_pointer;129,4920
      typedef typename base_type::mapped_reference 	 mapped_reference;130,4999
      typedef typename base_type::mapped_const_reference mapped_const_reference;131,5070
      typedef typename base_type::value_type 		 value_type;132,5151
      typedef typename base_type::pointer 		 pointer;133,5211
      typedef typename base_type::const_pointer 	 const_pointer;134,5265
      typedef typename base_type::reference 	 	 reference;135,5330
      typedef typename base_type::const_reference 	 const_reference;136,5389
      typedef typename base_type::point_iterator 	 point_iterator;137,5458
      typedef typename base_type::const_iterator 	 point_const_iterator;138,5525
      typedef typename base_type::iterator 		 iterator;139,5598
      typedef typename base_type::const_iterator 	 const_iterator;140,5654
      typedef typename base_type::reverse_iterator 	 reverse_iterator;141,5721
      typedef typename base_type::const_reverse_iterator const_reverse_iterator;142,5792
      typedef typename base_type::node_update 		 node_update;143,5873
      inline std::pair<std::pair163,6265
      inline std::pair<std::pair211,7433
#define PB_DS_ASSERT_BASE_NODE_CONSISTENT(256,8507
#undef PB_DS_ASSERT_BASE_NODE_CONSISTENT268,9086
#undef PB_DS_CLASS_T_DEC269,9127
#undef PB_DS_CLASS_C_DEC270,9152
#undef PB_DS_S_TREE_NAME271,9177
#undef PB_DS_S_TREE_BASE_NAME272,9202
#undef PB_DS_S_TREE_BASE273,9232

/usr/include/c++/13/ext/pb_ds/detail/splay_tree_/split_join_fn_imps.hpp,29
join(46,1794
split(82,2722

/usr/include/c++/13/ext/pb_ds/detail/splay_tree_/traits.hpp,423
#define PB_DS_SPLAY_TREE_NODE_AND_IT_TRAITS_HPP42,1748
namespace __gnu_pbds46,1847
  namespace detail48,1870
    template<typename Key,52,1941
	     typename Mapped,53,1968
	     typename Cmp_Fn,54,1991
    : public bin_search_tree_traits<bin_search_tree_traits62,2258
    template<typename Key,73,2618
	     template<typename Node_CItr,75,2665
    : public bin_search_tree_traits<bin_search_tree_traits83,2922

/usr/include/c++/13/ext/pb_ds/detail/thin_heap_/constructors_destructor_fn_imps.hpp,137
copy_from_range(47,1814
thin_heap(56,1983
thin_heap(64,2097
thin_heap(73,2255
swap(89,2626
~thin_heap(99,2823
initialize(105,2884

/usr/include/c++/13/ext/pb_ds/detail/thin_heap_/debug_fn_imps.hpp,99
assert_valid(48,1797
assert_aux_null(59,2073
assert_max(68,2259
assert_node_consistent(86,2763

/usr/include/c++/13/ext/pb_ds/detail/thin_heap_/erase_fn_imps.hpp,228
pop(46,1774
remove_max_node(61,2071
to_aux_except_max(70,2179
add_to_aux(103,2892
make_child_of(129,3401
make_from_aux(142,3776
remove_node(163,4111
clear(185,4588
erase(194,4681
erase_if(209,5010
rank_bound(245,5771

/usr/include/c++/13/ext/pb_ds/detail/thin_heap_/find_fn_imps.hpp,13
top(46,1819

/usr/include/c++/13/ext/pb_ds/detail/thin_heap_/insert_fn_imps.hpp,301
push(46,1820
make_root(71,2472
make_root_and_link(80,2663
fix(95,2987
fix_root(143,4095
fix_sibling_rank_1_unmarked(153,4292
fix_sibling_rank_1_marked(171,4813
fix_sibling_general_unmarked(182,5081
fix_sibling_general_marked(206,5725
fix_child(216,5944
modify(234,6407
update_max(277,7379

/usr/include/c++/13/ext/pb_ds/detail/thin_heap_/split_join_fn_imps.hpp,29
split(47,1803
join(91,2738

/usr/include/c++/13/ext/pb_ds/detail/thin_heap_/thin_heap_.hpp,2031
#define PB_DS_THIN_HEAP_HPP42,1737
namespace __gnu_pbds50,1993
  namespace detail52,2016
#define PB_DS_CLASS_T_DEC 54,2039
#define PB_DS_CLASS_C_DEC 57,2136
#define PB_DS_BASE_T_P 61,2229
#define PB_DS_BASE_T_P 64,2327
    template<typename Value_Type,76,2531
    template<typename Value_Type, typename Cmp_Fn,76,2531
    class thin_heap77,2599
      typedef rebind_traits<_Alloc,_Alloc81,2695
      typedef rebind_traits<_Alloc, Value_Type>		  __rebind_a;81,2695
      typedef left_child_next_sibling_heap PB_DS_BASE_T_P base_type;82,2758
      typedef typename base_type::node 			node;85,2843
      typedef typename base_type::node_pointer 		node_pointer;86,2891
      typedef typename base_type::node_const_pointer 	node_const_pointer;87,2954
      typedef Value_Type 				value_type;90,3041
      typedef Cmp_Fn 					cmp_fn;91,3082
      typedef _Alloc 					allocator_type;92,3116
      typedef typename _Alloc::size_type 		size_type;93,3158
      typedef typename _Alloc::difference_type 		difference_type;94,3212
      typedef typename __rebind_a::pointer		pointer;96,3279
      typedef typename __rebind_a::const_pointer	const_pointer;97,3332
      typedef typename __rebind_a::reference		reference;98,3396
      typedef typename __rebind_a::const_reference     	const_reference;99,3453
      typedef typename base_type::point_iterator 	point_iterator;101,3527
      typedef typename base_type::point_const_iterator 	point_const_iterator;102,3593
      typedef typename base_type::iterator 		iterator;103,3671
      typedef typename base_type::const_iterator 	const_iterator;104,3726
	  max_rank 168,4738
      node_pointer 	m_p_max;236,5991
      node_pointer 	m_a_aux[m_a_aux237,6020
	num_distinct_rank_bounds 242,6084
#define PB_DS_ASSERT_NODE_CONSISTENT(309,7518
#define PB_DS_ASSERT_AUX_NULL(313,7668
#undef PB_DS_ASSERT_AUX_NULL324,8193
#undef PB_DS_ASSERT_NODE_CONSISTENT325,8222
#undef PB_DS_CLASS_C_DEC326,8258
#undef PB_DS_CLASS_T_DEC327,8283
#undef PB_DS_BASE_T_P328,8308

/usr/include/c++/13/ext/pb_ds/detail/thin_heap_/trace_fn_imps.hpp,15
trace(48,1830

/usr/include/c++/13/ext/pb_ds/detail/tree_policy/node_metadata_selector.hpp,1423
#define PB_DS_TREE_NODE_METADATA_DISPATCH_HPP42,1762
namespace __gnu_pbds47,1920
  namespace detail49,1943
    template<typename Node_Update,57,2058
	typedef typename Node_Update::metadata_type 64,2268
	typedef null_type 				type;71,2456
    template<typename Key,75,2532
	     typename Data,76,2559
	     typename Cmp_Fn,77,2580
    struct tree_node_metadata_dispatch84,2771
      typedef dumnode_const_iterator<Key,Key87,2829
      typedef dumnode_const_iterator<Key, Data,87,2829
      typedef dumnode_const_iterator<Key, Data, _Alloc>		__it_type;87,2829
      typedef Node_Update<__it_type,__it_type88,2897
      typedef Node_Update<__it_type, __it_type,88,2897
      typedef Node_Update<__it_type, __it_type, Cmp_Fn,88,2897
      typedef Node_Update<__it_type, __it_type, Cmp_Fn, _Alloc>	__node_u;88,2897
      typedef null_node_update<__it_type,__it_type89,2971
      typedef null_node_update<__it_type, __it_type,89,2971
      typedef null_node_update<__it_type, __it_type, Cmp_Fn,89,2971
      typedef null_node_update<__it_type, __it_type, Cmp_Fn, _Alloc> __nnode_u;89,2971
	  null_update 93,3066
	  null_update = is_same<__node_u, __nnode_u>__nnode_u93,3066
	  null_update = is_same<__node_u, __nnode_u>::valuevalue93,3066
      typedef typename tree_metadata_helper<tree_metadata_helper97,3136
      typedef typename tree_metadata_helper<__node_u, null_update>::type type;97,3136

/usr/include/c++/13/ext/pb_ds/detail/tree_policy/order_statistics_imp.hpp,145
find_by_order(46,1833
find_by_order(73,2366
order_of_key(79,2558
operator()(operator()109,3273
~tree_order_statistics_node_update(122,3708

/usr/include/c++/13/ext/pb_ds/detail/tree_policy/sample_tree_node_update.hpp,359
#define PB_DS_SAMPLE_TREE_NODE_UPDATOR_HPP42,1754
namespace __gnu_pbds44,1798
  template<typename Const_Node_Iter,47,1850
  template<typename Const_Node_Iter, typename Node_Iter,47,1850
  template<typename Const_Node_Iter, typename Node_Iter, typename Cmp_Fn,47,1850
  class sample_tree_node_update49,1945
    typedef std::size_t metadata_type;51,1981

/usr/include/c++/13/ext/pb_ds/detail/trie_policy/node_metadata_selector.hpp,1423
#define PB_DS_TRIE_NODE_METADATA_DISPATCH_HPP42,1762
namespace __gnu_pbds47,1920
  namespace detail49,1943
    template<typename Node_Update,57,2058
	typedef typename Node_Update::metadata_type 64,2268
	typedef null_type 				type;71,2456
    template<typename Key,75,2532
	     typename Data,76,2559
	     typename Cmp_Fn,77,2580
    struct trie_node_metadata_dispatch84,2771
      typedef dumnode_const_iterator<Key,Key87,2829
      typedef dumnode_const_iterator<Key, Data,87,2829
      typedef dumnode_const_iterator<Key, Data, _Alloc>		__it_type;87,2829
      typedef Node_Update<__it_type,__it_type88,2897
      typedef Node_Update<__it_type, __it_type,88,2897
      typedef Node_Update<__it_type, __it_type, Cmp_Fn,88,2897
      typedef Node_Update<__it_type, __it_type, Cmp_Fn, _Alloc>	__node_u;88,2897
      typedef null_node_update<__it_type,__it_type89,2971
      typedef null_node_update<__it_type, __it_type,89,2971
      typedef null_node_update<__it_type, __it_type, Cmp_Fn,89,2971
      typedef null_node_update<__it_type, __it_type, Cmp_Fn, _Alloc> __nnode_u;89,2971
	  null_update 93,3066
	  null_update = is_same<__node_u, __nnode_u>__nnode_u93,3066
	  null_update = is_same<__node_u, __nnode_u>::valuevalue93,3066
      typedef typename trie_metadata_helper<trie_metadata_helper97,3136
      typedef typename trie_metadata_helper<__node_u, null_update>::type type;97,3136

/usr/include/c++/13/ext/pb_ds/detail/trie_policy/order_statistics_imp.hpp,125
find_by_order(46,1833
find_by_order(80,2525
order_of_key(86,2717
order_of_prefix(97,3015
operator()(operator()153,4341

/usr/include/c++/13/ext/pb_ds/detail/trie_policy/prefix_search_node_update_imp.hpp,141
prefix_range(48,1903
prefix_range(59,2207
prefix_range(70,2493
prefix_range(85,2960
next_child(115,3786
operator()(operator()140,4456

/usr/include/c++/13/ext/pb_ds/detail/trie_policy/sample_trie_access_traits.hpp,456
#define PB_DS_SAMPLE_TRIE_E_ACCESS_TRAITS_HPP42,1753
namespace __gnu_pbds44,1800
  struct sample_trie_access_traits47,1866
    typedef std::size_t 		       		size_type;49,1905
    typedef std::string 			       	key_type;50,1951
    typedef typename rebind_traits<rebind_traits52,1997
      key_const_reference;53,2067
    typedef std::string::const_iterator 		const_iterator;54,2094
    typedef char 				       	e_type;57,2175
	max_size 61,2230

/usr/include/c++/13/ext/pb_ds/detail/trie_policy/sample_trie_node_update.hpp,297
#define PB_DS_SAMPLE_TRIE_NODE_UPDATOR_HPP42,1754
namespace __gnu_pbds44,1798
  template<typename Node_CItr,47,1850
  template<typename Node_CItr, typename Node_Itr,47,1850
	   typename _ATraits,48,1900
  class sample_trie_node_update49,1940
    typedef std::size_t 		metadata_type;52,1986

/usr/include/c++/13/ext/pb_ds/detail/trie_policy/trie_policy_base.hpp,1556
#define PB_DS_TRIE_POLICY_BASE_HPP42,1749
namespace __gnu_pbds46,1846
  namespace detail48,1869
    template<typename Node_CItr,51,1930
    template<typename Node_CItr, typename Node_Itr,51,1930
	     typename _ATraits,52,1982
    class trie_policy_base53,2024
      typedef branch_policy<Node_CItr,Node_CItr56,2113
      typedef branch_policy<Node_CItr, Node_Itr,56,2113
      typedef branch_policy<Node_CItr, Node_Itr, _Alloc> base_type;56,2113
      typedef _ATraits 				access_traits;59,2194
      typedef _Alloc 					allocator_type;60,2236
      typedef typename allocator_type::size_type 	size_type;61,2278
      typedef null_type 				metadata_type;62,2339
      typedef Node_CItr 				node_const_iterator;63,2382
      typedef Node_Itr 					node_iterator;64,2431
      typedef typename node_const_iterator::value_type 	const_iterator;65,2474
      typedef typename node_iterator::value_type 	iterator;66,2546
      typedef typename base_type::key_type 		key_type;67,2606
      typedef typename base_type::key_const_reference 	key_const_reference;68,2661
      typedef typename access_traits::const_iterator 	e_const_iterator;93,3165
      typedef std::pair<e_const_iterator,e_const_iterator94,3237
      typedef std::pair<e_const_iterator, e_const_iterator> prefix_range_t;94,3237
#define PB_DS_CLASS_T_DEC 113,3706
#define PB_DS_CLASS_C_DEC 117,3831
    common_prefix_len(123,4008
    leftmost_it(157,4790
    rightmost_it(168,5027
    less(181,5301
#undef PB_DS_CLASS_T_DEC201,5700
#undef PB_DS_CLASS_C_DEC202,5725

/usr/include/c++/13/ext/pb_ds/detail/trie_policy/trie_string_access_traits_imp.hpp,193
detail::integral_constant<int, Reverse> PB_DS_CLASS_C_DEC::s_rev_ind;45,1829
e_pos(50,1983
begin(58,2142
end(66,2308
begin_imp(74,2470
begin_imp(82,2646
end_imp(90,2822
end_imp(98,2994

/usr/include/c++/13/ext/pb_ds/detail/unordered_iterator/const_iterator.hpp,606
class const_iterator_47,1952
  typedef std::forward_iterator_tag iterator_category;52,2031
  typedef typename _Alloc::difference_type difference_type;55,2110
  typedef value_type_ value_type;58,2200
  typedef pointer_ pointer;61,2266
  typedef const_pointer_ const_pointer;64,2332
  typedef reference_ reference;67,2406
  typedef const_reference_ const_reference;70,2478
  const_iterator_(73,2550
  operator++(78,2627
  operator++(86,2761
  typedef point_const_iterator_ base_type;94,2904
  const_iterator_(101,3122
  const PB_DS_CLASS_C_DEC* m_p_tbl;110,3412
  PB_DS_GEN_POS m_pos;112,3449

/usr/include/c++/13/ext/pb_ds/detail/unordered_iterator/iterator.hpp,653
class iterator_47,1916
  typedef std::forward_iterator_tag iterator_category;52,1983
  typedef typename _Alloc::difference_type difference_type;55,2062
  typedef value_type_ value_type;58,2152
  typedef pointer_ pointer;61,2218
  typedef const_pointer_ const_pointer;64,2284
  typedef reference_ reference;67,2358
  typedef const_reference_ const_reference;70,2430
  iterator_(74,2511
  operator point_iterator_(operator point_iterator_79,2625
  operator const operator const84,2786
  operator->(89,2931
  operator*(97,3097
  operator++(105,3270
  operator++(113,3420
  typedef const_iterator_ base_type;121,3579
  iterator_(129,3800

/usr/include/c++/13/ext/pb_ds/detail/unordered_iterator/point_const_iterator.hpp,728
class point_const_iterator_49,1984
  typedef trivial_iterator_tag iterator_category;53,2038
  typedef trivial_iterator_difference_type difference_type;56,2112
  typedef value_type_ value_type;59,2202
  typedef pointer_ pointer;62,2268
  typedef const_pointer_ const_pointer;65,2334
  typedef reference_ reference;68,2408
  typedef const_reference_ const_reference;71,2480
  point_const_iterator_(74,2534
  point_const_iterator_(79,2645
  point_const_iterator_(84,2726
  point_const_iterator_(90,2857
  operator->(96,2979
  operator*(104,3106
  operator==(operator==112,3263
  operator==(operator==117,3418
  operator!=(operator!=122,3592
  operator!=(operator!=127,3760
  const_pointer m_p_value;131,3870

/usr/include/c++/13/ext/pb_ds/detail/unordered_iterator/point_iterator.hpp,665
class point_iterator_47,1920
  typedef trivial_iterator_tag iterator_category;51,1968
  typedef trivial_iterator_difference_type difference_type;54,2042
  typedef value_type_ value_type;57,2132
  typedef pointer_ pointer;60,2198
  typedef const_pointer_ const_pointer;63,2264
  typedef reference_ reference;66,2338
  typedef const_reference_ const_reference;69,2410
  point_iterator_(73,2491
  point_iterator_(79,2568
  operator->(85,2678
  operator*(93,2801
  operator==(operator==101,2960
  operator==(operator==106,3115
  operator!=(operator!=111,3276
  operator!=(operator!=116,3444
  point_iterator_(120,3552
  pointer m_p_value;129,3711

/usr/include/c++/13/ext/pb_ds/detail/cond_dealtor.hpp,786
#define PB_DS_COND_DEALTOR_HPP42,1724
namespace __gnu_pbds46,1802
  namespace detail48,1825
    template<typename Entry,51,1901
      class cond_dealtor52,1947
	typedef rebind_traits<_Alloc,_Alloc54,1980
	typedef rebind_traits<_Alloc, Entry>	alloc_traits;54,1980
	typedef typename alloc_traits::allocator_type entry_allocator;57,2047
	typedef typename alloc_traits::pointer	      entry_pointer;58,2111
	cond_dealtor(60,2173
	~cond_dealtor(63,2256
	set_no_action(71,2363
	entry_pointer 		m_p_e;75,2432
	bool 			m_no_action_destructor;76,2456
	static entry_allocator 	s_alloc;77,2489
    template<typename Entry,80,2533
      typename cond_dealtor<cond_dealtor81,2576
      cond_dealtor<cond_dealtor82,2636
      cond_dealtor<Entry, _Alloc>::s_alloc;s_alloc82,2636

/usr/include/c++/13/ext/pb_ds/detail/container_base_dispatch.hpp,8192
#define PB_DS_ASSOC_CNTNR_BASE_DS_DISPATCHER_HPP42,1754
#define PB_DS_ASSERT_VALID(46,1831
#define PB_DS_DEBUG_VERIFY(49,1928
#define PB_DS_CHECK_KEY_EXISTS(55,2133
#define PB_DS_CHECK_KEY_DOES_NOT_EXIST(58,2256
#define PB_DS_DATA_TRUE_INDICATOR62,2406
#define PB_DS_V2F(63,2440
#define PB_DS_V2S(64,2471
#define PB_DS_EP2VP(65,2503
#undef PB_DS_DATA_TRUE_INDICATOR74,3009
#undef PB_DS_V2F75,3042
#undef PB_DS_V2S76,3059
#undef PB_DS_EP2VP77,3076
#define PB_DS_DATA_FALSE_INDICATOR79,3096
#define PB_DS_V2F(80,3131
#define PB_DS_V2S(81,3156
#define PB_DS_EP2VP(82,3191
#undef PB_DS_DATA_FALSE_INDICATOR91,3703
#undef PB_DS_V2F92,3737
#undef PB_DS_V2S93,3754
#undef PB_DS_EP2VP94,3771
#undef PB_DS_CHECK_KEY_DOES_NOT_EXIST96,3791
#undef PB_DS_CHECK_KEY_EXISTS97,3829
#undef PB_DS_DEBUG_VERIFY98,3859
#undef PB_DS_ASSERT_VALID99,3885
namespace __gnu_pbds101,3912
namespace detail103,3935
  template<typename Key,106,3996
  template<typename Key, typename Mapped,106,3996
  template<typename Key, typename Mapped, typename _Alloc,106,3996
      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 0>	at0;111,4185
      typedef typename at0::type	112,4248
      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 1> 	at1;113,4294
      typedef typename at1::type	114,4358
      typedef lu_map<Key, Mapped, at0t, _Alloc, at1t>	type;118,4444
  template<typename Key,122,4554
  template<typename Key, typename _Alloc,122,4554
      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 0>	at0;127,4729
      typedef typename at0::type	128,4792
      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 1> 	at1;129,4838
      typedef typename at1::type	130,4902
      typedef lu_set<Key, null_type, at0t, _Alloc, at1t> type;134,4988
  template<typename Key,138,5103
  template<typename Key, typename Mapped,138,5103
  template<typename Key, typename Mapped, typename _Alloc,138,5103
      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 1> 	at1;142,5280
      typedef typename at1::type	143,5344
      typedef pat_trie_map<Key, Mapped, at1t, _Alloc> 		type;146,5403
  template<typename Key,150,5517
  template<typename Key, typename _Alloc,150,5517
      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 1> 	at1;155,5689
      typedef typename at1::type	156,5753
      typedef pat_trie_set<Key, null_type, at1t, _Alloc> type;160,5839
  template<typename Key,164,5949
  template<typename Key, typename Mapped,164,5949
  template<typename Key, typename Mapped, typename _Alloc,164,5949
      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 0>	at0;168,6127
      typedef typename at0::type	169,6190
      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 1> 	at1;170,6236
      typedef typename at1::type	171,6300
      typedef rb_tree_map<Key, Mapped, at0t, at1t, _Alloc> 	type;175,6386
  template<typename Key,179,6499
  template<typename Key, typename _Alloc,179,6499
      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 0>	at0;184,6670
      typedef typename at0::type	185,6733
      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 1> 	at1;186,6779
      typedef typename at1::type	187,6843
      typedef rb_tree_set<Key, null_type, at0t, at1t, _Alloc> type;190,6902
  template<typename Key,194,7015
  template<typename Key, typename Mapped,194,7015
  template<typename Key, typename Mapped, typename _Alloc,194,7015
      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 0>	at0;199,7201
      typedef typename at0::type	200,7264
      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 1> 	at1;201,7310
      typedef typename at1::type	202,7374
      typedef splay_tree_map<Key, Mapped, at0t, at1t, _Alloc> 	type;206,7460
  template<typename Key,210,7574
  template<typename Key, typename _Alloc,210,7574
      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 0>	at0;215,7748
      typedef typename at0::type	216,7811
      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 1> 	at1;217,7857
      typedef typename at1::type	218,7921
      typedef splay_tree_set<Key, null_type, at0t, at1t, _Alloc> type;222,8007
  template<typename Key,226,8132
  template<typename Key, typename Mapped,226,8132
  template<typename Key, typename Mapped, typename _Alloc,226,8132
      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 0>	at0;230,8310
      typedef typename at0::type	231,8373
      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 1> 	at1;232,8419
      typedef typename at1::type	233,8483
      typedef ov_tree_map<Key, Mapped, at0t, at1t, _Alloc> 	type;237,8569
  template<typename Key,241,8689
  template<typename Key, typename _Alloc,241,8689
      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 0>	at0;246,8860
      typedef typename at0::type	247,8923
      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 1> 	at1;248,8969
      typedef typename at1::type	249,9033
      typedef ov_tree_set<Key, null_type, at0t, at1t, _Alloc> type;253,9119
  template<typename Key,257,9244
  template<typename Key, typename Mapped,257,9244
  template<typename Key, typename Mapped, typename _Alloc,257,9244
      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 0>	at0;261,9422
      typedef typename at0::type	262,9485
      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 1> 	at1;263,9531
      typedef typename at1::type	264,9595
      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 2>	at2;265,9641
      typedef typename at2::type	266,9704
      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 3>	at3;267,9750
      typedef typename at3::type	268,9813
      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 4> 	at4;269,9855
      typedef typename at4::type	270,9919
			at3t::value, at4t, at2t> 	       	type;275,10063
  template<typename Key,279,10163
  template<typename Key, typename _Alloc,279,10163
      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 0>	at0;284,10334
      typedef typename at0::type	285,10397
      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 1> 	at1;286,10443
      typedef typename at1::type	287,10507
      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 2>	at2;288,10553
      typedef typename at2::type	289,10616
      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 3>	at3;290,10662
      typedef typename at3::type	291,10725
      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 4> 	at4;292,10767
      typedef typename at4::type	293,10831
				 at3t::value, at4t, at2t>    	type;298,10977
  template<typename Key,302,11070
  template<typename Key, typename Mapped,302,11070
  template<typename Key, typename Mapped, typename _Alloc,302,11070
      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 0>	at0;306,11248
      typedef typename at0::type	307,11311
      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 1> 	at1;308,11357
      typedef typename at1::type	309,11421
      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 2>	at2;310,11467
      typedef typename at2::type	311,11530
      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 3>	at3;312,11576
      typedef typename at3::type	313,11639
      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 4> 	at4;314,11681
      typedef typename at4::type	315,11745
      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 5> 	at5;316,11791
      typedef typename at5::type	317,11855
			at3t::value, at4t, at5t, at2t> 		type;322,11999
  template<typename Key,326,12094
  template<typename Key, typename _Alloc,326,12094
      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 0>	at0;331,12265
      typedef typename at0::type	332,12328
      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 1> 	at1;333,12374
      typedef typename at1::type	334,12438
      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 2>	at2;335,12484
      typedef typename at2::type	336,12547
      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 3>	at3;337,12593
      typedef typename at3::type	338,12656
      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 4> 	at4;339,12698
      typedef typename at4::type	340,12762
      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 5> 	at5;341,12808
      typedef typename at5::type	342,12872
			at3t::value, at4t, at5t, at2t>		type;347,13018

/usr/include/c++/13/ext/pb_ds/detail/debug_map_base.hpp,1468
#define PB_DS_DEBUG_MAP_BASE_HPP42,1733
namespace __gnu_pbds53,1923
  namespace detail55,1946
    template<typename _CharT,58,2010
    template<typename _CharT, typename _Traits,58,2010
    template<typename _CharT, typename _Traits, typename _Tp1,58,2010
    inline std::basic_ostream<std::basic_ostream59,2088
    operator<<(60,2136
#define PB_DS_CLASS_T_DEC 64,2304
#define PB_DS_CLASS_C_DEC 67,2406
    template<typename Key,71,2513
    template<typename Key, typename Eq_Fn,71,2513
    class debug_map_base72,2586
      typedef Const_Key_Reference 			key_const_reference;75,2630
      typedef std::_GLIBCXX_STD_C::list<Key> 		key_repository;76,2688
      typedef typename key_repository::size_type       	size_type;77,2751
      typedef typename key_repository::iterator	       	iterator;78,2818
      typedef typename key_repository::const_iterator  	const_iterator;79,2884
      key_repository 	m_keys;126,3874
      Eq_Fn 		m_eq;127,3904
    debug_map_base(132,3978
    debug_map_base(137,4082
    ~debug_map_base(143,4261
    insert_new(149,4382
    erase_existing(175,4846
    clear(191,5194
    check_key_exists(201,5371
    check_key_does_not_exist(216,5731
    check_size(233,6140
    swap(248,6525
    find(259,6802
      typedef const_iterator iterator_type;262,6884
    find(272,7158
    assert_valid(288,7439
    split(309,7923
    join(326,8265
#undef PB_DS_CLASS_T_DEC340,8581
#undef PB_DS_CLASS_C_DEC341,8606

/usr/include/c++/13/ext/pb_ds/detail/priority_queue_base_dispatch.hpp,1014
#define PB_DS_PRIORITY_QUEUE_BASE_DS_DISPATCHER_HPP42,1774
#define PB_DS_ASSERT_VALID(44,1827
#define PB_DS_DEBUG_VERIFY(47,1924
#undef PB_DS_DEBUG_VERIFY59,2432
#undef PB_DS_ASSERT_VALID60,2458
namespace __gnu_pbds62,2485
  namespace detail64,2508
    template<typename _VTp,73,2629
    template<typename _VTp, typename Cmp_Fn,73,2629
	typedef pairing_heap<_VTp, Cmp_Fn, _Alloc> 		type;78,2818
    template<typename _VTp,82,2922
    template<typename _VTp, typename Cmp_Fn,82,2922
	typedef binomial_heap<_VTp, Cmp_Fn, _Alloc> 		type;87,3112
    template<typename _VTp,91,3218
    template<typename _VTp, typename Cmp_Fn,91,3218
	typedef rc_binomial_heap<_VTp, Cmp_Fn, _Alloc>	       	type;96,3413
    template<typename _VTp,100,3525
    template<typename _VTp, typename Cmp_Fn,100,3525
	typedef binary_heap<_VTp, Cmp_Fn, _Alloc> 		type;105,3715
    template<typename _VTp,109,3814
    template<typename _VTp, typename Cmp_Fn,109,3814
	typedef thin_heap<_VTp, Cmp_Fn, _Alloc> 		type;114,4006

/usr/include/c++/13/ext/pb_ds/detail/standard_policies.hpp,2696
#define PB_DS_STANDARD_POLICIES_HPP42,1741
namespace __gnu_pbds53,2082
  namespace detail55,2105
    struct default_hash_fn59,2198
      typedef std::tr1::hash<Key> 				type;62,2253
    struct default_eq_fn67,2373
      typedef std::equal_to<Key> 				type;70,2426
	default_store_hash 76,2556
    struct default_comb_hash_fn80,2642
      typedef direct_mask_range_hashing<> 			type;83,2702
    struct default_resize_policy88,2846
      typedef typename Comb_Hash_Fn::size_type 			size_type;91,2898
      typedef direct_mask_range_hashing<size_type> 		default_fn;93,2960
      typedef is_same<default_fn,default_fn94,3025
      typedef is_same<default_fn, Comb_Hash_Fn> 		same_type;94,3025
      typedef hash_exponential_size_policy<size_type> 		iftrue;95,3086
      typedef hash_prime_size_policy 				iffalse;96,3150
      typedef __conditional_type<same_type::value,same_type::value97,3200
      typedef __conditional_type<same_type::value, iftrue,97,3200
      typedef __conditional_type<same_type::value, iftrue, iffalse> cond_type;97,3200
      typedef typename cond_type::__type 		       size_policy_type;98,3279
      typedef hash_load_check_resize_trigger<false,false100,3348
      typedef hash_load_check_resize_trigger<false, size_type> 	trigger;100,3348
      typedef hash_standard_resize_policy<size_policy_type,size_policy_type104,3456
      typedef hash_standard_resize_policy<size_policy_type, trigger,104,3456
					  false,105,3526
					  false, size_type> 	type;105,3526
    struct default_update_policy109,3597
      typedef lu_move_to_front_policy<> 			type;112,3658
    struct default_probe_fn117,3796
      typedef typename Comb_Probe_Fn::size_type 		size_type;120,3843
      typedef direct_mask_range_hashing<size_type> 		default_fn;121,3904
      typedef is_same<default_fn,default_fn122,3969
      typedef is_same<default_fn, Comb_Probe_Fn> 		same_type;122,3969
      typedef linear_probe_fn<size_type> 			iftrue;123,4031
      typedef quadratic_probe_fn<size_type> 			iffalse;124,4083
      typedef __conditional_type<same_type::value,same_type::value125,4139
      typedef __conditional_type<same_type::value, iftrue,125,4139
      typedef __conditional_type<same_type::value, iftrue, iffalse> cond_type;125,4139
      typedef typename cond_type::__type 			type;129,4253
#define __dtrie_alloc 137,4435
#define __dtrie_string 138,4480
    template<typename Char,141,4617
      struct default_trie_access_traits<default_trie_access_traits142,4667
	typedef __dtrie_string					string_type;145,4746
	typedef trie_string_access_traits<string_type> 		type;149,4824
#undef __dtrie_alloc152,4890
#undef __dtrie_string153,4911

/usr/include/c++/13/ext/pb_ds/detail/tree_trace_base.hpp,886
#define PB_DS_TREE_TRACE_BASE_HPP42,1726
namespace __gnu_pbds49,1912
  namespace detail51,1935
#define PB_DS_CLASS_T_DEC	55,1983
#define PB_DS_CLASS_C_DEC	59,2128
#define PB_DS_TRACE_BASE 63,2247
    template<typename Node_CItr,67,2350
    template<typename Node_CItr, typename Node_Itr,67,2350
	     typename Cmp_Fn,68,2402
	     typename Cmp_Fn, bool Node_Based,68,2402
    class tree_trace_base 69,2459
      typedef PB_DS_TRACE_BASE 			base_type;76,2576
      typedef Node_CItr 		node_const_iterator;77,2621
      typedef typename _Alloc::size_type 	size_type;78,2668
    trace(109,3410
    trace_node(119,3559
	m_type_ind_t;131,3982
    trace_it_metadata(145,4263
    trace_it_metadata(154,4515
    print_node_pointer(160,4637
    print_node_pointer(166,4804
#undef PB_DS_CLASS_T_DEC169,4911
#undef PB_DS_CLASS_C_DEC170,4936
#undef PB_DS_TRACE_BASE171,4961

/usr/include/c++/13/ext/pb_ds/detail/type_utils.hpp,1533
#define PB_DS_TYPE_UTILS_HPP43,1794
namespace __gnu_pbds51,1951
  namespace detail53,1974
    using std::tr1::is_same;55,1997
    using std::tr1::is_const;56,2026
    using std::tr1::is_pointer;57,2056
    using std::tr1::is_reference;58,2088
    using std::tr1::is_fundamental;59,2122
    using std::tr1::is_member_object_pointer;60,2158
    using std::tr1::is_member_pointer;61,2204
    using std::tr1::is_base_of;62,2243
    using std::tr1::remove_const;63,2275
    using std::tr1::remove_reference;64,2309
    using std::tr1::integral_constant;69,2508
    typedef std::tr1::integral_constant<int,int70,2547
    typedef std::tr1::integral_constant<int, 1> true_type;70,2547
    typedef std::tr1::integral_constant<int,int71,2606
    typedef std::tr1::integral_constant<int, 0> false_type;71,2606
    using __gnu_cxx::__conditional_type;73,2667
    using __gnu_cxx::__numeric_traits;74,2708
    struct is_const_pointer77,2773
	  value 81,2821
    struct is_const_reference86,2912
	  value 90,2962
    struct is_simple95,3055
	  value 99,3096
    class is_pair106,3291
      struct is_pair_imp110,3355
	    value 114,3399
      template<typename U,118,3430
      struct is_pair_imp<is_pair_imp119,3469
	    value 123,3530
	  value 130,3587
#define PB_DS_STATIC_ASSERT(136,3705
    struct __static_assert<__static_assert142,3840
    struct __static_assert_dumclass146,3901
	  v 150,3957
#define PB_DS_STATIC_ASSERT(154,3978
    struct type_to_type161,4233
      typedef Type type;163,4263

/usr/include/c++/13/ext/pb_ds/detail/types_traits.hpp,3946
#define PB_DS_TYPES_TRAITS_HPP42,1741
namespace __gnu_pbds50,1914
  namespace detail52,1937
    template<typename Key,60,2048
      struct no_throw_copies61,2092
	typedef integral_constant<int,int65,2218
	typedef integral_constant<int, __simple> 	       	indicator;65,2218
	typedef integral_constant<int, is_simple<Key>::value> 	indicator;72,2394
      struct stored_value78,2521
	typedef _Tv 	value_type;80,2555
	value_type 	m_value;81,2581
      struct stored_hash86,2661
	typedef _Th 	hash_type;88,2694
	hash_type 	m_hash;89,2719
    template<typename _Tv,94,2866
    template<typename _Tv, typename _Th,94,2866
      struct stored_data95,2924
    template<typename _Tv,100,3096
      : public stored_value<stored_value102,3179
    template<typename Key,106,3288
      struct select_value_type107,3332
	typedef std::pair<const Key,109,3371
	typedef std::pair<const Key, Mapped> type;109,3371
	typedef Key type;116,3572
    template<typename Key,120,3669
    template<typename Key, typename Mapped,120,3669
    template<typename Key, typename Mapped, typename _Alloc,120,3669
      struct maybe_null_type121,3747
    template<typename Key,125,3864
    template<typename Key,typename _Alloc,125,3864
    template<typename Key,131,4038
    template<typename Key,typename _Alloc,131,4038
      maybe_null_type<maybe_null_type133,4114
      maybe_null_type<Key, null_type, _Alloc, Store_Hash>::s_null_type;s_null_type133,4114
    template<typename _Alloc,136,4249
      struct rebind_traits137,4291
	typedef typename _Alloc::template 147,4541
    template<typename Key,153,4662
    template<typename Key, typename Mapped,153,4662
    template<typename Key, typename Mapped, typename _Alloc,153,4662
      struct types_traits154,4740
	typedef typename _Alloc::size_type			size_type;158,4852
	typedef typename select_value_type<select_value_type159,4901
	typedef typename select_value_type<Key, Mapped>::type	value_type;159,4901
	typedef Key						key_type;160,4968
	typedef Mapped						mapped_type;161,4996
	typedef rebind_traits<_Alloc,_Alloc164,5046
	typedef rebind_traits<_Alloc, value_type>	__rebind_va;164,5046
	typedef rebind_traits<_Alloc,_Alloc165,5102
	typedef rebind_traits<_Alloc, key_type>		__rebind_ka;165,5102
	typedef rebind_traits<_Alloc,_Alloc166,5157
	typedef rebind_traits<_Alloc, mapped_type>	__rebind_ma;166,5157
	typedef no_throw_copies<Key,Key168,5215
	typedef no_throw_copies<Key, Mapped>		__nothrowcopy;168,5215
	typedef typename __rebind_ma::pointer 		mapped_pointer;171,5284
	typedef typename __rebind_ma::const_pointer 	mapped_const_pointer;172,5341
	typedef typename __rebind_ma::reference	       	mapped_reference;173,5409
	typedef typename __rebind_ma::const_reference 	mapped_const_reference;174,5476
	typedef typename __rebind_va::pointer 		pointer;176,5549
	typedef typename __rebind_va::const_pointer 	const_pointer;177,5599
	typedef typename __rebind_va::reference 	reference;178,5660
	typedef typename __rebind_va::const_reference 	const_reference;179,5713
	typedef stored_data<value_type,value_type181,5779
	typedef stored_data<value_type, size_type,181,5779
	typedef stored_data<value_type, size_type, Store_Hash> stored_data_type;181,5779
	typedef typename __rebind_ka::pointer 		key_pointer;183,5854
	typedef typename __rebind_ka::const_pointer 	key_const_pointer;184,5908
	typedef typename __rebind_ka::reference 	key_reference;185,5973
	typedef typename __rebind_ka::const_reference 	key_const_reference;186,6030
	typedef std::pair<size_type,size_type187,6099
	typedef std::pair<size_type, size_type> 	comp_hash;187,6099
	typedef integral_constant<int,int188,6152
	typedef integral_constant<int, Store_Hash> 	store_extra;188,6152
	typedef typename __nothrowcopy::indicator 	no_throw_indicator;189,6210
	store_extra			       	m_store_extra_indicator;191,6275
	no_throw_indicator 		 	m_no_throw_copies_indicator;192,6323

/usr/include/c++/13/ext/pb_ds/assoc_container.hpp,7701
#define PB_DS_ASSOC_CNTNR_HPP42,1716
namespace __gnu_pbds51,2000
#define PB_DS_HASH_BASE 64,2198
  template<typename Key,95,3355
	   typename Mapped,96,3380
	   typename Hash_Fn,97,3401
	   typename Eq_Fn,98,3423
	   typename Resize_Policy,99,3443
	   bool Store_Hash,100,3471
	   typename Tag,101,3492
	   typename Policy_Tl,102,3510
  class basic_hash_table 104,3555
    typedef typename PB_DS_HASH_BASE 		base_type;107,3620
    ~basic_hash_table(111,3693
    basic_hash_table(114,3735
    basic_hash_table(116,3763
      basic_hash_table(120,3887
    template<typename T0,122,3938
      basic_hash_table(123,3977
    template<typename T0,125,4039
    template<typename T0, typename T1,125,4039
      basic_hash_table(126,4091
    template<typename T0,128,4164
    template<typename T0, typename T1,128,4164
    template<typename T0, typename T1, typename T2,128,4164
      basic_hash_table(129,4229
    template<typename T0,132,4319
    template<typename T0, typename T1,132,4319
    template<typename T0, typename T1, typename T2,132,4319
    template<typename T0, typename T1, typename T2, typename T3,132,4319
      basic_hash_table(133,4397
    template<typename T0,136,4498
    template<typename T0, typename T1,136,4498
    template<typename T0, typename T1, typename T2,136,4498
    template<typename T0, typename T1, typename T2, typename T3,136,4498
    template<typename T0, typename T1, typename T2, typename T3, typename T4,136,4498
      basic_hash_table(138,4595
    template<typename T0,141,4707
    template<typename T0, typename T1,141,4707
    template<typename T0, typename T1, typename T2,141,4707
    template<typename T0, typename T1, typename T2, typename T3,141,4707
    template<typename T0, typename T1, typename T2, typename T3, typename T4,141,4707
	     typename T5,142,4785
      basic_hash_table(143,4817
    template<typename T0,146,4940
    template<typename T0, typename T1,146,4940
    template<typename T0, typename T1, typename T2,146,4940
    template<typename T0, typename T1, typename T2, typename T3,146,4940
    template<typename T0, typename T1, typename T2, typename T3, typename T4,146,4940
	     typename T5,147,5018
	     typename T5, typename T6,147,5018
      basic_hash_table(148,5063
    template<typename T0,151,5197
    template<typename T0, typename T1,151,5197
    template<typename T0, typename T1, typename T2,151,5197
    template<typename T0, typename T1, typename T2, typename T3,151,5197
    template<typename T0, typename T1, typename T2, typename T3, typename T4,151,5197
	     typename T5,152,5275
	     typename T5, typename T6,152,5275
	     typename T5, typename T6, typename T7,152,5275
      basic_hash_table(153,5333
#undef PB_DS_HASH_BASE163,5565
#define PB_DS_CC_HASH_BASE 166,5590
  template<typename Key,196,6839
	   typename Mapped,197,6864
	   typename Hash_Fn 198,6885
	   typename Eq_Fn 199,6953
	   typename Comb_Hash_Fn 200,7017
	   typename Resize_Policy 201,7081
	   bool Store_Hash 202,7170
	   typename _Alloc 203,7220
    typedef PB_DS_CC_HASH_BASE 			base_type;207,7331
    typedef cc_hash_tag	       			container_category;210,7387
    typedef Hash_Fn 				hash_fn;211,7441
    typedef Eq_Fn 				eq_fn;212,7474
    typedef Resize_Policy 			resize_policy;213,7503
    typedef Comb_Hash_Fn 			comb_hash_fn;214,7547
    operator=(operator=310,11798
#undef PB_DS_CC_HASH_BASE325,12026
#define PB_DS_GP_HASH_BASE 328,12054
  template<typename Key,359,13351
	   typename Mapped,360,13376
	   typename Hash_Fn 361,13397
	   typename Eq_Fn 362,13465
	   typename Comb_Probe_Fn 363,13529
	   typename Probe_Fn 364,13594
	   typename Resize_Policy 365,13674
	   bool Store_Hash 366,13764
	   typename _Alloc 367,13814
    typedef PB_DS_GP_HASH_BASE 			base_type;371,13924
    typedef gp_hash_tag	       			container_category;374,13980
    typedef Hash_Fn 				hash_fn;375,14034
    typedef Eq_Fn 				eq_fn;376,14067
    typedef Comb_Probe_Fn			comb_probe_fn;377,14096
    typedef Probe_Fn 				probe_fn;378,14139
    typedef Resize_Policy 			resize_policy;379,14174
    operator=(operator=505,20055
#undef PB_DS_GP_HASH_BASE520,20301
#define PB_DS_BRANCH_BASE 528,20423
  template<typename Key,553,21300
  template<typename Key, typename Mapped,553,21300
  template<typename Key, typename Mapped, typename Tag,553,21300
	   typename Node_Update,554,21356
	   typename Node_Update, typename Policy_Tl,554,21356
  class basic_branch 555,21419
    typedef typename PB_DS_BRANCH_BASE 	       	base_type;558,21482
    typedef Node_Update 			node_update;561,21552
    ~basic_branch(564,21605
    basic_branch(567,21643
    basic_branch(569,21667
      basic_branch(573,21783
    template<typename T0,575,21830
      basic_branch(576,21869
    template<typename T0,578,21927
    template<typename T0, typename T1,578,21927
      basic_branch(579,21979
    template<typename T0,581,22048
    template<typename T0, typename T1,581,22048
    template<typename T0, typename T1, typename T2,581,22048
      basic_branch(582,22113
    template<typename T0,585,22199
    template<typename T0, typename T1,585,22199
    template<typename T0, typename T1, typename T2,585,22199
    template<typename T0, typename T1, typename T2, typename T3,585,22199
      basic_branch(586,22277
    template<typename T0,589,22374
    template<typename T0, typename T1,589,22374
    template<typename T0, typename T1, typename T2,589,22374
    template<typename T0, typename T1, typename T2, typename T3,589,22374
    template<typename T0, typename T1, typename T2, typename T3, typename T4,589,22374
      basic_branch(591,22471
    template<typename T0,594,22579
    template<typename T0, typename T1,594,22579
    template<typename T0, typename T1, typename T2,594,22579
    template<typename T0, typename T1, typename T2, typename T3,594,22579
    template<typename T0, typename T1, typename T2, typename T3, typename T4,594,22579
	     typename T5,595,22657
      basic_branch(596,22689
#undef PB_DS_BRANCH_BASE599,22812
#define PB_DS_TREE_NODE_AND_IT_TRAITS 602,22839
#define PB_DS_TREE_BASE 605,22945
  template<typename Key,629,23797
  template<typename Key, typename Mapped,629,23797
  template<typename Key, typename Mapped, typename Cmp_Fn 629,23797
	   typename Tag 630,23873
	   template<typename Node_CItr,631,23905
	   template<typename Node_CItr, typename Node_Itr,631,23905
		    typename Cmp_Fn_,632,23957
	   typename _Alloc 634,24041
    typedef PB_DS_TREE_BASE 			base_type;638,24139
    typedef Cmp_Fn 				cmp_fn;642,24225
    operator=(operator=674,25249
#undef PB_DS_TREE_BASE689,25450
#undef PB_DS_TREE_NODE_AND_IT_TRAITS690,25473
#define PB_DS_TRIE_NODE_AND_IT_TRAITS 693,25512
#define PB_DS_TRIE_BASE 696,25619
  template<typename Key,720,26452
	   typename Mapped,721,26477
	   typename _ATraits 722,26498
	   typename Tag 724,26586
	   template<typename Node_CItr,725,26619
		    typename Node_Itr,726,26652
		    typename _ATraits_,727,26677
	   typename _Alloc 730,26769
    typedef PB_DS_TRIE_BASE			base_type;734,26867
    typedef _ATraits 				access_traits;738,26955
    operator=(operator=769,27934
#undef PB_DS_TRIE_BASE784,28155
#undef PB_DS_TRIE_NODE_AND_IT_TRAITS785,28178
#define PB_DS_LU_BASE 793,28307
  template<typename Key,810,28881
	   typename Mapped,811,28906
    typedef typename PB_DS_LU_BASE 818,29151
    typedef list_update_tag	       		container_category;821,29210
    typedef Eq_Fn 				eq_fn;822,29267
    typedef Update_Policy 			update_policy;823,29296
    operator=(operator=841,29787
#undef PB_DS_LU_BASE856,30027

/usr/include/c++/13/ext/pb_ds/exception.hpp,348
#define PB_DS_EXCEPTION_HPP42,1703
namespace __gnu_pbds48,1801
  struct container_error 57,1942
    container_error(59,1997
  struct insert_error 66,2279
  struct join_error 70,2457
  struct resize_error 73,2545
  __throw_container_error(76,2612
  __throw_insert_error(80,2705
  __throw_join_error(84,2792
  __throw_resize_error(88,2875

/usr/include/c++/13/ext/pb_ds/hash_policy.hpp,3000
#define PB_DS_HASH_POLICY_HPP42,1711
namespace __gnu_pbds54,2121
#define PB_DS_CLASS_T_DEC 56,2144
#define PB_DS_CLASS_C_DEC 57,2199
  template<typename Size_Type 60,2307
    typedef Size_Type size_type;64,2390
#undef PB_DS_CLASS_T_DEC77,2659
#undef PB_DS_CLASS_C_DEC78,2684
#define PB_DS_CLASS_T_DEC 80,2710
#define PB_DS_CLASS_C_DEC 81,2765
  template<typename Size_Type 84,2877
    typedef Size_Type size_type;88,2963
#undef PB_DS_CLASS_T_DEC101,3235
#undef PB_DS_CLASS_C_DEC102,3260
#define PB_DS_CLASS_T_DEC 104,3286
#define PB_DS_CLASS_C_DEC 105,3341
  template<typename Size_Type 108,3456
    typedef detail::mask_based_range_hashing<Size_Type> mask_based_base;113,3605
    typedef Size_Type size_type;116,3689
#undef PB_DS_CLASS_T_DEC133,4058
#undef PB_DS_CLASS_C_DEC134,4083
#define PB_DS_CLASS_T_DEC 136,4109
#define PB_DS_CLASS_C_DEC 137,4164
  template<typename Size_Type 140,4287
    typedef Size_Type size_type;145,4433
    typedef detail::mod_based_range_hashing<size_type> mod_based_base;160,4745
#undef PB_DS_CLASS_T_DEC165,4892
#undef PB_DS_CLASS_C_DEC166,4917
#define PB_DS_CLASS_T_DEC 168,4943
#define PB_DS_CLASS_C_DEC 169,5025
#define PB_DS_SIZE_BASE_C_DEC 170,5115
  template<bool External_Load_Access 174,5361
  template<bool External_Load_Access = false, typename Size_Type 174,5361
    typedef Size_Type size_type;178,5526
	external_load_access 185,5752
    typedef PB_DS_SIZE_BASE_C_DEC size_base;267,7631
#undef PB_DS_CLASS_T_DEC283,7997
#undef PB_DS_CLASS_C_DEC284,8022
#undef PB_DS_SIZE_BASE_C_DEC285,8047
#define PB_DS_CLASS_T_DEC 287,8077
#define PB_DS_CLASS_C_DEC 288,8159
  template<bool External_Load_Access 292,8395
  template<bool External_Load_Access = false, typename Size_Type 292,8395
    typedef Size_Type 	size_type;296,8540
	external_load_access 303,8767
#undef PB_DS_CLASS_T_DEC404,11205
#undef PB_DS_CLASS_C_DEC405,11230
#define PB_DS_CLASS_T_DEC 407,11256
#define PB_DS_CLASS_C_DEC 408,11311
  template<typename Size_Type 412,11481
    typedef Size_Type size_type;416,11577
#undef PB_DS_CLASS_T_DEC442,12300
#undef PB_DS_CLASS_C_DEC443,12325
#define PB_DS_CLASS_T_DEC445,12351
#define PB_DS_CLASS_C_DEC 446,12377
  class hash_prime_size_policy450,12523
    typedef std::size_t size_type;454,12587
    size_type m_start_size;472,13071
#undef PB_DS_CLASS_T_DEC477,13179
#undef PB_DS_CLASS_C_DEC478,13204
#define PB_DS_CLASS_T_DEC 480,13230
#define PB_DS_CLASS_C_DEC 482,13360
  template<typename Size_Policy 485,13556
	   typename Trigger_Policy 486,13622
	   bool External_Size_Access 487,13686
	   typename Size_Type 488,13725
    typedef Size_Type 		size_type;493,13859
    typedef Trigger_Policy 	trigger_policy;494,13894
    typedef Size_Policy 	size_policy;495,13938
	external_size_access 499,13994
    typedef Trigger_Policy trigger_policy_base;603,16531
    typedef Size_Policy size_policy_base;605,16580
#undef PB_DS_CLASS_T_DEC612,16730
#undef PB_DS_CLASS_C_DEC613,16755

/usr/include/c++/13/ext/pb_ds/list_update_policy.hpp,890
#define PB_DS_LU_POLICY_HPP42,1730
namespace __gnu_pbds50,1962
 template<typename _Alloc 57,2190
     typedef _Alloc 					allocator_type;61,2290
     typedef null_type 					metadata_type;64,2382
     typedef typename detail::rebind_traits<detail::rebind_traits68,2500
     operator()(operator()73,2661
     operator()(operator()79,2825
  template<std::size_t Max_Count 90,3081
  template<std::size_t Max_Count = 5, typename _Alloc 90,3081
      typedef _Alloc 					allocator_type;95,3279
      typedef typename allocator_type::size_type 96,3321
	  max_count 102,3512
      typedef detail::lu_counter_metadata<size_type> 	metadata_type;106,3593
      typedef detail::lu_counter_policy_base<size_type> 	base_type;109,3676
     typedef typename detail::rebind_traits<detail::rebind_traits113,3821
      operator()(operator()118,3984
      operator()(operator()124,4168

/usr/include/c++/13/ext/pb_ds/priority_queue.hpp,1269
#define PB_DS_PRIORITY_QUEUE_HPP42,1711
namespace __gnu_pbds49,1924
   template<typename _Tv,80,2809
	   typename Cmp_Fn 81,2835
	   typename Tag 82,2873
	   typename _Alloc 83,2910
  : public detail::container_base_dispatch<_Tv, Cmp_Fn,85,2978
  : public detail::container_base_dispatch<_Tv, Cmp_Fn, _Alloc,85,2978
    typedef _Tv 					value_type;88,3067
    typedef Cmp_Fn 					cmp_fn;89,3100
    typedef Tag 					container_category;90,3132
    typedef _Alloc 					allocator_type;91,3173
    typedef typename allocator_type::size_type 92,3213
    typedef typename allocator_type::difference_type 93,3273
    typedef typename detail::container_base_dispatch<detail::container_base_dispatch96,3356
    typedef detail::rebind_traits<_Alloc, _Tv>		__rebind_va;99,3471
    typedef typename __rebind_va::reference 102,3542
    typedef typename __rebind_va::const_reference 103,3599
    typedef typename __rebind_va::pointer 104,3667
    typedef typename __rebind_va::const_pointer 105,3723
    typedef typename base_type::point_iterator 107,3788
    typedef typename base_type::point_const_iterator 108,3853
    typedef typename base_type::iterator 109,3929
    typedef typename base_type::const_iterator 110,3982
    operator=(operator=141,5169

/usr/include/c++/13/ext/pb_ds/tag_and_trait.hpp,5756
#define PB_DS_TAG_AND_TRAIT_HPP43,1762
namespace __gnu_pbds52,1974
  struct trivial_iterator_tag75,2670
  typedef void trivial_iterator_difference_type;79,2749
  struct basic_invalidation_guarantee93,3106
  struct point_invalidation_guarantee 103,3495
  struct range_invalidation_guarantee 114,3966
  struct container_tag125,4175
  struct sequence_tag 129,4228
  struct string_tag 132,4343
  struct associative_tag 135,4426
  struct basic_hash_tag 138,4508
  struct cc_hash_tag 141,4594
  struct gp_hash_tag 144,4673
  struct basic_branch_tag 147,4754
  struct tree_tag 150,4839
  struct rb_tree_tag 153,4911
  struct splay_tree_tag 156,4974
  struct ov_tree_tag 159,5049
  struct trie_tag 162,5122
  struct pat_trie_tag 165,5193
  struct list_update_tag 168,5258
  struct priority_queue_tag 171,5342
  struct pairing_heap_tag 174,5419
  struct binomial_heap_tag 177,5500
  struct rc_binomial_heap_tag 180,5600
  struct binary_heap_tag 183,5697
  struct thin_heap_tag 186,5773
  struct null_type 210,6388
  template<typename _Tp1,213,6486
  template<typename _Tp1, typename _Tp2,213,6486
  template<typename _Tp1, typename _Tp2, typename _Tp3,213,6486
    struct null_node_update 214,6557
  struct container_traits_base<container_traits_base224,6767
    typedef cc_hash_tag 				container_category;226,6815
    typedef point_invalidation_guarantee 		invalidation_guarantee;227,6863
	order_preserving 231,6948
	erase_can_throw 232,6975
	split_join_can_throw 233,7001
	reverse_iteration 234,7032
  struct container_traits_base<container_traits_base240,7118
    typedef gp_hash_tag 				container_category;242,7166
    typedef basic_invalidation_guarantee 		invalidation_guarantee;243,7214
	order_preserving 247,7299
	erase_can_throw 248,7326
	split_join_can_throw 249,7352
	reverse_iteration 250,7383
  struct container_traits_base<container_traits_base256,7469
    typedef rb_tree_tag 				container_category;258,7517
    typedef range_invalidation_guarantee 		invalidation_guarantee;259,7565
	order_preserving 263,7650
	erase_can_throw 264,7676
	split_join_can_throw 265,7702
	reverse_iteration 266,7733
  struct container_traits_base<container_traits_base272,7821
    typedef splay_tree_tag 				container_category;274,7872
    typedef range_invalidation_guarantee 		invalidation_guarantee;275,7923
	order_preserving 279,8008
	erase_can_throw 280,8034
	split_join_can_throw 281,8060
	reverse_iteration 282,8091
  struct container_traits_base<container_traits_base288,8176
    typedef ov_tree_tag 				container_category;290,8224
    typedef basic_invalidation_guarantee 		invalidation_guarantee;291,8272
	order_preserving 295,8357
	erase_can_throw 296,8383
	split_join_can_throw 297,8408
	reverse_iteration 298,8438
  struct container_traits_base<container_traits_base304,8525
    typedef pat_trie_tag 				container_category;306,8574
    typedef range_invalidation_guarantee 		invalidation_guarantee;307,8623
	order_preserving 311,8708
	erase_can_throw 312,8734
	split_join_can_throw 313,8760
	reverse_iteration 314,8790
  struct container_traits_base<container_traits_base320,8879
    typedef list_update_tag 				container_category;322,8931
    typedef point_invalidation_guarantee 		invalidation_guarantee;323,8983
	order_preserving 327,9068
	erase_can_throw 328,9095
	split_join_can_throw 329,9121
	reverse_iteration 330,9152
  struct container_traits_base<container_traits_base336,9243
    typedef pairing_heap_tag 				container_category;338,9296
    typedef point_invalidation_guarantee 		invalidation_guarantee;339,9349
	order_preserving 343,9434
	erase_can_throw 344,9461
	split_join_can_throw 345,9487
	reverse_iteration 346,9518
  struct container_traits_base<container_traits_base352,9606
    typedef thin_heap_tag 				container_category;354,9656
    typedef point_invalidation_guarantee 		invalidation_guarantee;355,9706
	order_preserving 359,9791
	erase_can_throw 360,9818
	split_join_can_throw 361,9844
	reverse_iteration 362,9875
  struct container_traits_base<container_traits_base368,9967
    typedef binomial_heap_tag 				container_category;370,10021
    typedef point_invalidation_guarantee 		invalidation_guarantee;371,10075
	order_preserving 375,10160
	erase_can_throw 376,10187
	split_join_can_throw 377,10213
	reverse_iteration 378,10244
  struct container_traits_base<container_traits_base384,10339
    typedef rc_binomial_heap_tag 			container_category;386,10396
    typedef point_invalidation_guarantee 		invalidation_guarantee;387,10452
	order_preserving 391,10537
	erase_can_throw 392,10564
	split_join_can_throw 393,10590
	reverse_iteration 394,10621
  struct container_traits_base<container_traits_base400,10711
    typedef binary_heap_tag 				container_category;402,10763
    typedef basic_invalidation_guarantee 		invalidation_guarantee;403,10815
	order_preserving 407,10900
	erase_can_throw 408,10927
	split_join_can_throw 409,10953
	reverse_iteration 410,10983
  struct container_traits418,11142
    typedef Cntnr 				       container_type;421,11241
    typedef typename Cntnr::container_category         container_category;422,11286
    typedef container_traits_base<container_category>  base_type;423,11361
    typedef typename base_type::invalidation_guarantee invalidation_guarantee;424,11427
	order_preserving 429,11590
	erase_can_throw 432,11683
	split_join_can_throw 435,11785
	reverse_iteration 438,11891
  namespace detail444,11965
    template<typename Key,447,12056
    template<typename Key, typename Mapped,447,12056
    template<typename Key, typename Mapped, typename _Alloc,447,12056
    template<typename Key, typename Mapped, typename _Alloc, typename Tag,447,12056

/usr/include/c++/13/ext/pb_ds/tree_policy.hpp,1509
#define PB_DS_TREE_POLICY_HPP42,1711
namespace __gnu_pbds49,1894
#define PB_DS_CLASS_T_DEC 51,1917
#define PB_DS_CLASS_C_DEC 55,2036
#define PB_DS_BRANCH_POLICY_BASE 58,2138
  template<typename Node_CItr,62,2268
  template<typename Node_CItr, typename Node_Itr,62,2268
	   typename Cmp_Fn,63,2319
  class tree_order_statistics_node_update 64,2357
    typedef PB_DS_BRANCH_POLICY_BASE 		       	base_type;67,2449
    typedef Cmp_Fn 					cmp_fn;70,2518
    typedef _Alloc 					allocator_type;71,2550
    typedef typename allocator_type::size_type 		size_type;72,2590
    typedef typename base_type::key_type 		key_type;73,2650
    typedef typename base_type::key_const_reference 	key_const_reference;74,2703
    typedef size_type 					metadata_type;76,2778
    typedef Node_CItr 	       			node_const_iterator;77,2820
    typedef Node_Itr 					node_iterator;78,2874
    typedef typename node_const_iterator::value_type 	const_iterator;79,2915
    typedef typename node_iterator::value_type 		iterator;80,2985
    typedef typename base_type::const_reference 	const_reference;106,4058
    typedef typename base_type::const_pointer 		const_pointer;109,4178
    typedef typename detail::rebind_traits<detail::rebind_traits112,4276
      metadata_const_reference;113,4359
    typedef typename detail::rebind_traits<detail::rebind_traits116,4420
      metadata_reference;117,4497
#undef PB_DS_CLASS_T_DEC151,5451
#undef PB_DS_CLASS_C_DEC152,5476
#undef PB_DS_BRANCH_POLICY_BASE153,5501

/usr/include/c++/13/ext/pb_ds/trie_policy.hpp,3527
#define PB_DS_TRIE_POLICY_HPP42,1711
namespace __gnu_pbds49,1893
#define PB_DS_CLASS_T_DEC 51,1916
#define PB_DS_CLASS_C_DEC 56,2094
  template<typename String 69,2560
	   typename String::value_type Min_E_Val 70,2602
	   typename String::value_type Max_E_Val 71,2708
	   bool Reverse 72,2814
	   typename _Alloc 73,2840
    typedef typename _Alloc::size_type	77,2934
    typedef String 					  key_type;78,2988
    typedef typename detail::rebind_traits<detail::rebind_traits79,3024
	reverse 84,3147
    typedef typename detail::__conditional_type<detail::__conditional_type88,3213
    typedef typename std::iterator_traits<std::iterator_traits93,3413
	min_e_val 97,3509
	max_e_val 98,3533
	max_size 99,3557
#undef PB_DS_CLASS_T_DEC135,4580
#undef PB_DS_CLASS_C_DEC136,4605
#define PB_DS_CLASS_T_DEC 138,4631
#define PB_DS_CLASS_C_DEC 142,4751
#define PB_DS_TRIE_POLICY_BASE 146,4858
  template<typename Node_CItr,151,5069
	   typename Node_Itr,152,5100
	   typename _ATraits,153,5123
  class trie_prefix_search_node_update 155,5167
    typedef PB_DS_TRIE_POLICY_BASE 		       	base_type;158,5254
    typedef typename base_type::key_type 		key_type;161,5321
    typedef typename base_type::key_const_reference 	key_const_reference;162,5374
    typedef _ATraits 				access_traits;165,5480
    typedef typename access_traits::const_iterator 	a_const_iterator;168,5553
    typedef _Alloc 	       				allocator_type;171,5645
    typedef typename allocator_type::size_type 		size_type;174,5712
    typedef null_type 					metadata_type;175,5772
    typedef Node_Itr 					node_iterator;176,5814
    typedef Node_CItr 					node_const_iterator;177,5855
    typedef typename node_iterator::value_type 		iterator;178,5903
    typedef typename node_const_iterator::value_type 	const_iterator;179,5962
    std::pair<std::pair183,6136
    std::pair<std::pair188,6325
    std::pair<std::pair193,6503
    std::pair<std::pair198,6708
#undef PB_DS_CLASS_C_DEC242,8035
#define PB_DS_CLASS_C_DEC 244,8061
  template<typename Node_CItr,249,8216
	   typename Node_Itr,250,8247
	   typename _ATraits,251,8270
  class trie_order_statistics_node_update 253,8314
    typedef PB_DS_TRIE_POLICY_BASE 		       	base_type;256,8404
    typedef _ATraits 				access_traits;259,8471
    typedef typename access_traits::const_iterator 	a_const_iterator;260,8511
    typedef _Alloc 					allocator_type;261,8581
    typedef typename allocator_type::size_type 		size_type;262,8621
    typedef typename base_type::key_type 		key_type;263,8681
    typedef typename base_type::key_const_reference 	key_const_reference;264,8734
    typedef size_type 					metadata_type;266,8809
    typedef Node_CItr 					node_const_iterator;267,8851
    typedef Node_Itr 					node_iterator;268,8899
    typedef typename node_const_iterator::value_type 	const_iterator;269,8940
    typedef typename node_iterator::value_type 		iterator;270,9010
    typedef typename base_type::const_reference 	const_reference;309,10644
    typedef typename base_type::const_pointer 		const_pointer;310,10710
    typedef typename _Alloc::template rebind<metadata_type> __rebind_m;312,10774
    typedef typename __rebind_m::other 			__rebind_ma;313,10846
    typedef typename __rebind_ma::const_reference      metadata_const_reference;314,10901
    typedef typename __rebind_ma::reference 		metadata_reference;315,10982
#undef PB_DS_CLASS_T_DEC354,12086
#undef PB_DS_CLASS_C_DEC355,12111
#undef PB_DS_TRIE_POLICY_BASE356,12136

/usr/include/c++/13/ext/algorithm,81
#define _EXT_ALGORITHM 57,2355
namespace __gnu_cxx _GLIBCXX_VISIBILITY(65,2505

/usr/include/c++/13/ext/aligned_buffer.h,464
#define _ALIGNED_BUFFER_H 30,1202
    struct __aligned_membuf47,1648
      struct _Tp2 54,2049
      struct _Tp2 { _Tp _M_t;54,2049
      alignas(56,2083
      _M_addr(64,2326
      _M_addr(68,2420
      _M_ptr(72,2519
      _M_ptr(76,2608
    struct __aligned_buffer92,3281
	std::aligned_storage<std::aligned_storage96,3388
      __aligned_buffer(101,3548
      _M_addr(104,3604
      _M_addr(110,3712
      _M_ptr(116,3825
      _M_ptr(120,3914

/usr/include/c++/13/ext/alloc_traits.h,1191
#define _EXT_ALLOC_TRAITS_H 30,1197
namespace __gnu_cxx _GLIBCXX_VISIBILITY(36,1288
    typedef _Alloc allocator_type;50,1625
    typedef std::allocator_traits<_Alloc>           _Base_type;52,1687
    typedef typename _Base_type::value_type 53,1751
    typedef typename _Base_type::pointer 54,1815
    typedef typename _Base_type::const_pointer 55,1876
    typedef typename _Base_type::size_type 56,1943
    typedef typename _Base_type::difference_type 57,2006
    typedef value_type&                             reference;59,2142
    typedef const value_type&                       const_reference;60,2205
      struct rebind125,4628
      { typedef typename _Base_type::template rebind_alloc<_Tp> other;126,4648
    typedef typename _Alloc::pointer 129,4740
    typedef typename _Alloc::const_pointer 130,4801
    typedef typename _Alloc::value_type 131,4868
    typedef typename _Alloc::reference 132,4932
    typedef typename _Alloc::const_reference 133,4995
    typedef typename _Alloc::size_type 134,5064
    typedef typename _Alloc::difference_type 135,5127
      struct rebind177,6518
      { typedef typename _Alloc::template rebind<_Tp>::other other;178,6538

/usr/include/c++/13/ext/atomicity.h,176
#define _GLIBCXX_ATOMICITY_H	30,1208
namespace __gnu_cxx _GLIBCXX_VISIBILITY(41,1433
#define _GLIBCXX_READ_MEM_BARRIER 121,3575
#define _GLIBCXX_WRITE_MEM_BARRIER 124,3692

/usr/include/c++/13/ext/bitmap_allocator.h,5973
#define _BITMAP_ALLOCATOR_H 30,1202
#define _BALLOC_ALIGN_BYTES 45,1702
namespace __gnu_cxx _GLIBCXX_VISIBILITY(47,1733
      class __mini_vector69,2469
	__mini_vector(71,2503
	typedef _Tp value_type;75,2605
	typedef _Tp* pointer;76,2630
	typedef _Tp& reference;77,2653
	typedef const _Tp& const_reference;78,2678
	typedef std::size_t size_type;79,2715
	typedef std::ptrdiff_t difference_type;80,2747
	typedef pointer iterator;81,2788
	pointer _M_start;84,2831
	pointer _M_finish;85,2850
	pointer _M_end_of_storage;86,2870
	_M_space_left(89,2910
	allocate(93,3013
	deallocate(97,3114
	__mini_vector(105,3342
	size(109,3433
	begin(113,3500
	end(117,3562
	back(121,3624
	operator[](consoperator[](con125,3690
	push_back(132,3834
	pop_back(144,4021
	clear(151,4111
      struct __mv_iter_traits215,5544
	typedef typename _Tp::value_type value_type;217,5582
	typedef typename _Tp::difference_type difference_type;218,5628
      struct __mv_iter_traits<__mv_iter_traits222,5721
	typedef _Tp value_type;224,5765
	typedef std::ptrdiff_t difference_type;225,5790
	bits_per_byte 230,5860
	bits_per_block 231,5880
	  _DistanceType;240,6243
      class _Inclusive_between 281,7222
	typedef _Tp pointer;283,7262
	pointer _M_ptr_value;284,7284
	typedef typename std::pair<std::pair285,7307
	typedef typename std::pair<_Tp, _Tp> _Block_pair;285,7307
	_Inclusive_between(288,7374
	operator()(operator()292,7446
      class _Functor_Ref 304,7771
	_Functor& _M_fref;306,7805
	typedef typename _Functor::argument_type argument_type;309,7841
	typedef typename _Functor::result_type result_type;310,7898
	_Functor_Ref(312,7952
	operator()(operator()316,8023
      class _Ffit_finder 328,8430
	typedef std::pair<_Tp,_Tp330,8464
	typedef std::pair<_Tp, _Tp> _Block_pair;330,8464
	typedef __detail::__mini_vector<_Block_pair> _BPVector;331,8506
	typedef typename _BPVector::difference_type _Counter_type;332,8563
	std::size_t* _M_pbitmap;334,8624
	_Counter_type _M_data_offset;335,8650
	typedef bool result_type;338,8696
	typedef _Block_pair argument_type;339,8723
	_Ffit_finder(341,8760
	operator()(operator()345,8824
	_M_get(380,9880
	_M_offset(384,9944
      class _Bitmap_counter396,10383
	__detail::__mini_vector<__detail::__mini_vector399,10437
	__detail::__mini_vector<typename std::pair<_Tp, _Tp> > _BPVector;399,10437
	typedef typename _BPVector::size_type _Index_type;400,10504
	typedef _Tp pointer;401,10556
	_BPVector& _M_vbp;403,10579
	std::size_t* _M_curr_bmap;404,10599
	std::size_t* _M_last_bmap_in_block;405,10627
	_Index_type _M_curr_index;406,10664
	_Bitmap_counter(412,10857
	_M_reset(416,10967
	_M_set_internal_bitmap(441,11660
	_M_finished(445,11782
	operator++(449,11866
	_M_get(464,12129
	_M_base(468,12194
	_M_offset(472,12274
	_M_where(480,12444
  class free_list517,13490
    typedef std::size_t* 			value_type;520,13522
    typedef __detail::__mini_vector<value_type> vector_type;521,13562
    typedef vector_type::iterator 		iterator;522,13623
    typedef __mutex				__mutex_type;523,13669
    struct _LT_pointer_compare526,13718
      operator()(operator()529,13766
    _M_get_mutex(536,13933
    _M_get_free_list(544,14048
    _M_validate(561,14577
    _M_should_i_give(607,16133
    _M_insert(627,16717
    class bitmap_allocator<bitmap_allocator663,17716
      typedef void*       pointer;666,17767
      typedef const void* const_pointer;667,17802
      typedef void  value_type;670,17895
        struct rebind672,17957
	  typedef bitmap_allocator<_Tp1> other;674,17982
    class bitmap_allocator 683,18145
      typedef std::size_t    		size_type;686,18210
      typedef std::ptrdiff_t 		difference_type;687,18252
      typedef _Tp*        		pointer;688,18300
      typedef const _Tp*  		const_pointer;689,18337
      typedef _Tp&        		reference;690,18380
      typedef const _Tp&  		const_reference;691,18419
      typedef _Tp         		value_type;692,18464
      typedef free_list::__mutex_type 	__mutex_type;693,18504
        struct rebind696,18588
	  typedef bitmap_allocator<_Tp1> other;698,18613
      typedef std::true_type propagate_on_container_move_assignment;704,18778
    private:private707,18855
        struct aligned_size709,18927
	      modulus 713,18974
	      value 714,19012
      struct _Alloc_block718,19088
			_BALLOC_ALIGN_LLOC_ALIGN721,19172
      typedef typename std::pair<std::pair725,19216
      typedef typename std::pair<_Alloc_block*, _Alloc_block*> _Block_pair;725,19216
      typedef typename __detail::__mini_vector<_Block_pair> _BPVector;727,19293
      typedef typename _BPVector::iterator _BPiter;728,19364
        _S_find(732,19476
      _S_check_for_free_blocks(744,19800
	typedef typename __detail::_Ffit_finder<__detail::_Ffit_finder746,19849
      _S_refill_pool(765,20540
      static _BPVector _S_mem_blocks;800,21501
      static std::size_t _S_block_size;801,21539
      static __detail::_Bitmap_counter<_Alloc_block*> _S_last_request;802,21579
      static typename _BPVector::size_type _S_last_dealloc_index;803,21650
      static __mutex_type _S_mut;805,21739
      _M_allocate_single_object(824,22413
	    typedef typename __detail::_Ffit_finder<__detail::_Ffit_finder851,23477
      _M_deallocate_single_object(915,25600
	typedef typename _BPVector::iterator 923,25813
	typedef typename _BPVector::difference_type 924,25862
      bitmap_allocator(1001,28430
      bitmap_allocator(1004,28488
        bitmap_allocator(1008,28599
      ~bitmap_allocator(1011,28690
      allocate(1015,28783
      allocate(1039,29420
      deallocate(1043,29543
      address(1064,30066
      address(1068,30181
      max_size(1072,30298
      template<typename _Up,1076,30424
        construct(1078,30485
        destroy(1083,30637
      construct(1087,30706
      destroy(1091,30821
    operator==(operator==1098,30944
    operator!=(operator!=1105,31159

/usr/include/c++/13/ext/cast.h,244
#define _GLIBCXX_CAST_H 31,1253
namespace __gnu_cxx _GLIBCXX_VISIBILITY(33,1280
    struct _Caster52,2038
    { typedef typename _ToType::element_type*  type;53,2057
    struct _Caster<_Caster56,2143
    { typedef _ToType*  type;57,2172

/usr/include/c++/13/ext/cmath,142
#define _EXT_CMATH 30,1178
namespace __gnu_cxx _GLIBCXX_VISIBILITY(43,1409
    struct __math_constants49,1558
      static_assert(51,1592

/usr/include/c++/13/ext/codecvt_specializations.h,1352
#define _EXT_CODECVT_SPECIALIZATIONS_H 36,1333
namespace __gnu_cxx _GLIBCXX_VISIBILITY(44,1516
  class encoding_state53,1886
    typedef iconv_t	descriptor_type;59,2062
    std::string	       	_M_int_enc;63,2165
    std::string  	_M_ext_enc;66,2250
    descriptor_type	_M_in_desc;69,2358
    descriptor_type	_M_out_desc;72,2468
    int			_M_ext_bom;75,2572
    int			_M_int_bom;78,2665
    int 		_M_bytes;83,2854
    encoding_state(87,2899
    encoding_state(92,3023
    encoding_state(106,3615
    operator=(operator=111,3783
    ~encoding_state(117,3883
    good(121,3935
    character_ratio(130,4168
    internal_encoding(134,4244
    internal_bom(138,4311
    external_encoding(142,4386
    external_bom(146,4453
    in_descriptor(150,4533
    out_descriptor(154,4614
    init(159,4692
    construct(180,5374
    destroy(192,5651
    struct encoding_char_traits213,6206
      typedef encoding_state				state_type;216,6282
      typedef typename std::fpos<state_type>		pos_type;217,6326
namespace std _GLIBCXX_VISIBILITY(225,6467
      typedef codecvt_base::result			result;240,7001
      typedef _InternT 					intern_type;241,7046
      typedef _ExternT 					extern_type;242,7087
      typedef __gnu_cxx::encoding_state 		state_type;243,7128
      typedef state_type::descriptor_type 		descriptor_type;244,7182

/usr/include/c++/13/ext/concurrence.h,1463
#define _CONCURRENCE_H 30,1208
namespace __gnu_cxx _GLIBCXX_VISIBILITY(40,1400
  enum _Lock_policy 49,1793
  enum _Lock_policy { _S_single,49,1793
  enum _Lock_policy { _S_single, _S_mutex,49,1793
  enum _Lock_policy { _S_single, _S_mutex, _S_atomic 49,1793
  class __concurrence_lock_error 64,2259
    what(68,2354
  class __concurrence_unlock_error 72,2439
    what(76,2536
  class __concurrence_broadcast_error 80,2623
    what(84,2723
  class __concurrence_wait_error 88,2813
    what(92,2908
  class __mutex 115,3554
    __gthread_mutex_t _M_mutex;121,3694
    __mutex(124,3734
    __mutex(128,3814
    ~__mutex(137,4023
    void lock(144,4131
    void unlock(155,4308
    __gthread_mutex_t* gthread_mutex(166,4487
  class __recursive_mutex 170,4564
    __gthread_recursive_mutex_t _M_mutex;176,4744
    __recursive_mutex(179,4794
    __recursive_mutex(183,4914
    ~__recursive_mutex(192,5163
    void lock(199,5287
    void unlock(210,5475
    __gthread_recursive_mutex_t* gthread_recursive_mutex(221,5665
  class __scoped_lock228,5912
    typedef __mutex __mutex_type;231,5948
    __mutex_type& _M_device;234,5994
    __scoped_lock(236,6024
    explicit __scoped_lock(240,6128
    ~__scoped_lock(243,6224
  class __cond248,6313
    __gthread_cond_t _M_cond;254,6447
    __cond(257,6485
    __cond(261,6561
    ~__cond(270,6765
    void broadcast(277,6870
    void wait(288,7056
    void wait_recursive(298,7243

/usr/include/c++/13/ext/debug_allocator.h,1354
#define _DEBUG_ALLOCATOR_H 43,1752
namespace __gnu_cxx _GLIBCXX_VISIBILITY(51,1939
    class debug_allocator62,2216
      typedef __alloc_traits<_Alloc> _Traits;66,2304
      typedef typename _Traits::size_type       	size_type;69,2363
      typedef typename _Traits::difference_type	difference_type;70,2423
      typedef typename _Traits::pointer       	pointer;71,2488
      typedef typename _Traits::const_pointer    const_pointer;72,2544
      typedef typename _Traits::reference       	reference;73,2608
      typedef typename _Traits::const_reference  const_reference;74,2668
      typedef typename _Traits::value_type       value_type;75,2734
	class rebind78,2825
	  typedef typename _Traits::template rebind<_Up>::other __other;80,2842
	  typedef debug_allocator<__other> other;83,2918
      size_type 		_M_extra;89,3101
      _Alloc			_M_allocator;91,3136
      template<typename _Alloc2,93,3166
	  typedef void* __type;102,3398
      size_type _S_extra(105,3428
      debug_allocator(112,3596
	debug_allocator(115,3681
      debug_allocator(119,3847
      allocate(123,3975
      allocate(132,4227
      deallocate(141,4479
      construct(156,4908
      template<typename _Tp,160,5046
	construct(162,5100
	destroy(171,5271
      max_size(175,5349
	operator==(operator==180,5488
	operator!=(operator!=187,5755

/usr/include/c++/13/ext/enc_filebuf.h,341
#define _EXT_ENC_FILEBUF_H 30,1211
namespace __gnu_cxx _GLIBCXX_VISIBILITY(38,1395
    class enc_filebuf44,1533
      typedef encoding_char_traits<_CharT>     	traits_type;48,1644
      typedef typename traits_type::state_type	state_type;49,1705
      typedef typename traits_type::pos_type	pos_type;50,1764
      enc_filebuf(52,1820

/usr/include/c++/13/ext/extptr_allocator.h,1983
#define _EXTPTR_ALLOCATOR_H 37,1408
namespace __gnu_cxx _GLIBCXX_VISIBILITY(45,1590
    class _ExtPtr_allocator58,2015
      typedef std::size_t     size_type;61,2061
      typedef std::ptrdiff_t  difference_type;62,2102
      typedef _Pointer_adapter<_Relative_pointer_impl<_Tp> >       pointer;65,2196
                                                             const_pointer;67,2340
      typedef _Tp&       reference;69,2417
      typedef const _Tp& const_reference;70,2453
      typedef _Tp        value_type;71,2495
        struct rebind74,2562
        { typedef _ExtPtr_allocator<_Up> other;75,2584
      _ExtPtr_allocator(77,2636
      _ExtPtr_allocator(80,2714
        _ExtPtr_allocator(84,2871
      ~_ExtPtr_allocator(88,3017
      pointer address(91,3077
      const_pointer address(94,3179
      _GLIBCXX_NODISCARD pointer allocate(97,3293
      void deallocate(100,3414
      size_type max_size(103,3517
      template<typename _Up,107,3667
        construct(109,3728
        construct(114,3884
        destroy(119,4037
      void destroy(122,4089
      void construct(127,4159
      void destroy(130,4251
        operator==(operator==136,4363
      operator==(operator==140,4511
        operator!=(operator!=146,4719
      operator!=(operator!=150,4867
      _M_getUnderlyingImp(160,5192
      std::allocator<_Tp>  _M_real_alloc;164,5272
    class _ExtPtr_allocator<_ExtPtr_allocator169,5380
      typedef std::size_t      size_type;172,5432
      typedef std::ptrdiff_t   difference_type;173,5474
      typedef void             value_type;174,5522
      typedef _Pointer_adapter<_Relative_pointer_impl<void> >       pointer;177,5611
                                                              const_pointer;179,5756
      _ExtPtr_allocator(181,5834
	_ExtPtr_allocator(184,5894
        struct rebind187,5978
        { typedef _ExtPtr_allocator<_Up> other;188,6000
      std::allocator<void>  _M_real_alloc;191,6065

/usr/include/c++/13/ext/functional,1845
#define _EXT_FUNCTIONAL 57,2358
namespace __gnu_cxx _GLIBCXX_VISIBILITY(65,2510
    class unary_compose122,4571
      _Operation1 _M_fn1;127,4726
      _Operation2 _M_fn2;128,4752
      unary_compose(131,4791
      operator()(operator()135,4936
    class binary_compose147,5464
      _Operation1 _M_fn1;152,5620
      _Operation2 _M_fn2;153,5646
      _Operation3 _M_fn3;154,5672
      binary_compose(157,5717
      operator()(operator()162,5908
    struct identity182,6719
    struct select1st197,7277
    struct select2nd202,7417
    struct _Project1st 209,7562
      operator()(operator()212,7654
    struct _Project2nd 217,7777
      operator()(operator()220,7869
    struct project1st 234,8302
    struct project2nd 238,8455
    struct _Constant_void_fun243,8588
      typedef _Result result_type;245,8624
      result_type _M_val;246,8659
      _Constant_void_fun(248,8686
      operator()(operator()251,8778
    struct _Constant_unary_fun256,8880
      typedef _Argument argument_type;258,8917
      typedef  _Result  result_type;259,8956
      result_type _M_val;260,8993
      _Constant_unary_fun(262,9026
      operator()(operator()265,9119
    struct _Constant_binary_fun270,9246
      typedef  _Arg1   first_argument_type;272,9284
      typedef  _Arg2   second_argument_type;273,9328
      typedef  _Result result_type;274,9373
      _Result _M_val;275,9409
      _Constant_binary_fun(277,9432
      operator()(operator()280,9528
    struct constant_void_fun300,10343
      constant_void_fun(303,10419
  class subtractive_rng349,12045
    unsigned int _M_table[_M_table353,12143
    std::size_t _M_index1;354,12174
    std::size_t _M_index2;355,12201
    operator()(operator()360,12305
    _M_initialize(369,12559
    subtractive_rng(391,13116
    subtractive_rng(395,13265

/usr/include/c++/13/ext/hash_map,3654
#define _BACKWARD_HASH_MAP 57,2369
namespace __gnu_cxx _GLIBCXX_VISIBILITY(67,2577
			_EqualKey, _Alloc> _Ht;88,3112
      typedef typename _Ht::key_type 93,3170
      typedef _Tp data_type;94,3217
      typedef _Tp mapped_type;95,3246
      typedef typename _Ht::value_type 96,3277
      typedef typename _Ht::hasher 97,3328
      typedef typename _Ht::key_equal 98,3371
      typedef typename _Ht::size_type 100,3427
      typedef typename _Ht::difference_type 101,3476
      typedef typename _Ht::pointer 102,3537
      typedef typename _Ht::const_pointer 103,3582
      typedef typename _Ht::reference 104,3639
      typedef typename _Ht::const_reference 105,3688
      typedef typename _Ht::iterator 107,3756
      typedef typename _Ht::const_iterator 108,3803
      typedef typename _Ht::allocator_type 110,3869
    operator==(operator==270,8122
    operator!=(operator!=276,8403
          _Ht;307,9523
      typedef typename _Ht::key_type 312,9569
      typedef _Tp data_type;313,9616
      typedef _Tp mapped_type;314,9645
      typedef typename _Ht::value_type 315,9676
      typedef typename _Ht::hasher 316,9727
      typedef typename _Ht::key_equal 317,9770
      typedef typename _Ht::size_type 319,9826
      typedef typename _Ht::difference_type 320,9875
      typedef typename _Ht::pointer 321,9936
      typedef typename _Ht::const_pointer 322,9981
      typedef typename _Ht::reference 323,10038
      typedef typename _Ht::const_reference 324,10087
      typedef typename _Ht::iterator 326,10155
      typedef typename _Ht::const_iterator 327,10202
      typedef typename _Ht::allocator_type 329,10268
    operator==(operator==485,14417
    operator!=(operator!=491,14693
namespace std _GLIBCXX_VISIBILITY(504,15169
    class insert_iterator<insert_iterator511,15423
      typedef __gnu_cxx::hash_map<_Key,_Key515,15540
      typedef __gnu_cxx::hash_map<_Key, _Tp,515,15540
      typedef __gnu_cxx::hash_map<_Key, _Tp, _HashFn,515,15540
      typedef __gnu_cxx::hash_map<_Key, _Tp, _HashFn, _EqKey,515,15540
        _Container;516,15610
      _Container* container;517,15630
      typedef _Container          container_type;520,15672
      typedef output_iterator_tag iterator_category;521,15722
      typedef void                value_type;522,15775
      typedef void                difference_type;523,15821
      typedef void                pointer;524,15872
      typedef void                reference;525,15915
      insert_iterator(527,15967
      insert_iterator(530,16034
      operator=(operator=534,16167
      operator*(541,16327
      operator++(545,16405
      operator++(548,16478
    class insert_iterator<insert_iterator553,16610
      typedef __gnu_cxx::hash_multimap<_Key,_Key557,16729
      typedef __gnu_cxx::hash_multimap<_Key, _Tp,557,16729
      typedef __gnu_cxx::hash_multimap<_Key, _Tp, _HashFn,557,16729
      typedef __gnu_cxx::hash_multimap<_Key, _Tp, _HashFn, _EqKey,557,16729
        _Container;558,16804
      _Container* container;559,16824
      typename _Container::iterator iter;560,16853
      typedef _Container          container_type;563,16908
      typedef output_iterator_tag iterator_category;564,16958
      typedef void                value_type;565,17011
      typedef void                difference_type;566,17057
      typedef void                pointer;567,17108
      typedef void                reference;568,17151
      insert_iterator(570,17197
      insert_iterator(573,17264
      operator=(operator=577,17397
      operator*(584,17557
      operator++(588,17635
      operator++(592,17714

/usr/include/c++/13/ext/hash_set,3527
#define _BACKWARD_HASH_SET 57,2369
namespace __gnu_cxx _GLIBCXX_VISIBILITY(67,2577
      typedef __alloc_traits<_Alloc> _Alloc_traits;91,3260
			_EqualKey, _Alloc> _Ht;95,3395
      typedef typename _Ht::key_type 99,3452
      typedef typename _Ht::value_type 100,3499
      typedef typename _Ht::hasher 101,3550
      typedef typename _Ht::key_equal 102,3593
      typedef typename _Ht::size_type 104,3649
      typedef typename _Ht::difference_type 105,3698
      typedef typename _Alloc_traits::pointer 106,3759
      typedef typename _Alloc_traits::const_pointer 107,3814
      typedef typename _Alloc_traits::reference 108,3881
      typedef typename _Alloc_traits::const_reference 109,3940
      typedef typename _Ht::const_iterator 111,4018
      typedef typename _Ht::const_iterator 112,4071
      typedef typename _Ht::allocator_type 114,4137
    operator==(operator==261,8116
    operator!=(operator!=267,8391
			_EqualKey, _Alloc> _Ht;296,9396
      typedef typename _Ht::key_type 300,9453
      typedef typename _Ht::value_type 301,9500
      typedef typename _Ht::hasher 302,9551
      typedef typename _Ht::key_equal 303,9594
      typedef typename _Ht::size_type 305,9650
      typedef typename _Ht::difference_type 306,9699
      typedef typename _Alloc::pointer 307,9760
      typedef typename _Alloc::const_pointer 308,9808
      typedef typename _Alloc::reference 309,9868
      typedef typename _Alloc::const_reference 310,9920
      typedef typename _Ht::const_iterator 312,9985
      typedef typename _Ht::const_iterator 313,10038
      typedef typename _Ht::allocator_type 315,10104
    operator==(operator==455,13906
    operator!=(operator!=461,14185
namespace std _GLIBCXX_VISIBILITY(474,14655
    class insert_iterator<insert_iterator481,14903
      typedef __gnu_cxx::hash_set<_Value,_Value485,15020
      typedef __gnu_cxx::hash_set<_Value, _HashFcn,485,15020
      typedef __gnu_cxx::hash_set<_Value, _HashFcn, _EqualKey,485,15020
        _Container;486,15091
      _Container* container;487,15111
      typedef _Container          container_type;490,15153
      typedef output_iterator_tag iterator_category;491,15203
      typedef void                value_type;492,15256
      typedef void                difference_type;493,15302
      typedef void                pointer;494,15353
      typedef void                reference;495,15396
      insert_iterator(497,15442
      insert_iterator(500,15515
      operator=(operator=504,15648
      operator*(511,15808
      operator++(515,15892
      operator++(519,15977
    class insert_iterator<insert_iterator524,16103
      typedef __gnu_cxx::hash_multiset<_Value,_Value528,16223
      typedef __gnu_cxx::hash_multiset<_Value, _HashFcn,528,16223
      typedef __gnu_cxx::hash_multiset<_Value, _HashFcn, _EqualKey,528,16223
        _Container;529,16299
      _Container* container;530,16319
      typename _Container::iterator iter;531,16348
      typedef _Container          container_type;534,16403
      typedef output_iterator_tag iterator_category;535,16453
      typedef void                value_type;536,16506
      typedef void                difference_type;537,16552
      typedef void                pointer;538,16603
      typedef void                reference;539,16646
      insert_iterator(541,16698
      insert_iterator(544,16771
      operator=(operator=548,16904
      operator*(555,17064
      operator++(559,17142
      operator++(563,17221

/usr/include/c++/13/ext/iterator,80
#define _EXT_ITERATOR 57,2364
namespace __gnu_cxx _GLIBCXX_VISIBILITY(64,2469

/usr/include/c++/13/ext/malloc_allocator.h,1199
#define _MALLOC_ALLOCATOR_H 30,1216
namespace __gnu_cxx _GLIBCXX_VISIBILITY(43,1456
    class malloc_allocator56,1798
      typedef _Tp        value_type;59,1843
      typedef std::size_t     size_type;60,1880
      typedef std::ptrdiff_t  difference_type;61,1921
      typedef _Tp*       pointer;63,1995
      typedef const _Tp* const_pointer;64,2029
      typedef _Tp&       reference;65,2069
      typedef const _Tp& const_reference;66,2105
        struct rebind69,2178
        { typedef malloc_allocator<_Tp1> other;70,2200
      typedef std::true_type propagate_on_container_move_assignment;76,2378
      malloc_allocator(80,2482
      malloc_allocator(83,2561
        malloc_allocator(87,2688
      ~malloc_allocator(91,2799
      address(94,2866
      address(98,2980
      allocate(105,3242
# define _GLIBCXX_CHECK_MALLOC_RESULT131,4032
#undef _GLIBCXX_CHECK_MALLOC_RESULT139,4237
      deallocate(152,4574
      max_size(157,4702
      template<typename _Up,161,4808
        construct(163,4869
        destroy(169,5084
      construct(176,5302
      destroy(180,5409
	operator==(operator==186,5542
	operator!=(operator!=193,5755
      _M_max_size(200,5915

/usr/include/c++/13/ext/memory,78
#define _EXT_MEMORY 57,2346
namespace __gnu_cxx _GLIBCXX_VISIBILITY(66,2520

/usr/include/c++/13/ext/mt_allocator.h,5686
#define _MT_ALLOCATOR_H 30,1199
namespace __gnu_cxx _GLIBCXX_VISIBILITY(43,1443
  typedef void (*__destroy_handler)__destroy_handler48,1529
  struct __pool_base51,1608
    typedef unsigned short int _Binmap_type;55,1761
    typedef std::size_t size_t;56,1806
    struct _Tune60,1952
      enum { _S_align 63,2037
      enum { _S_max_bytes 64,2066
      enum { _S_min_bin 65,2101
      enum { _S_chunk_size 66,2132
      enum { _S_max_threads 67,2189
      enum { _S_freelist_headroom 68,2227
      size_t	_M_align;73,2420
      size_t	_M_max_bytes;80,2733
      size_t	_M_min_bin;85,2913
      size_t	_M_chunk_size;93,3312
      size_t 	_M_max_threads;101,3655
      size_t 	_M_freelist_headroom;109,4030
      bool 	_M_force_new;112,4131
      _Tune(115,4180
      _Tune(123,4488
    struct _Block_address131,4840
      void* 			_M_initial;133,4872
      _Block_address* 		_M_next;134,4899
    _M_get_options(138,4961
    _M_set_options(142,5025
    _M_check_threshold(149,5117
    _M_get_binmap(153,5245
    _M_get_align(157,5326
    __pool_base(161,5396
    __pool_base(165,5490
    _Tune 	       		_M_options;177,5752
    _Binmap_type* 		_M_binmap;179,5789
    bool 			_M_init;184,6011
    class __pool<__pool197,6248
      union _Block_record200,6311
	_Block_record* 			_M_next;203,6400
      struct _Bin_record206,6438
	_Block_record**			_M_first;209,6523
	_Block_address*		     	_M_address;212,6614
      _M_initialize_once(216,6677
      _M_get_thread_id(232,7003
      _M_get_bin(235,7074
      _M_adjust_freelist(239,7159
      explicit __pool(242,7239
      explicit __pool(245,7303
      _Bin_record*		 _M_bin;252,7595
      size_t 	       	     	_M_bin_size;255,7684
    class __pool<__pool264,7860
      struct _Thread_record276,8508
	_Thread_record*			_M_next;279,8615
	size_t                          _M_id;282,8693
      union _Block_record285,8749
	_Block_record*			_M_next;288,8838
	size_t                          _M_thread_id;291,8931
      struct _Bin_record294,8994
	_Block_record**			_M_first;299,9197
	_Block_address*		     	_M_address;302,9289
	size_t*				_M_free;313,9860
	size_t*			        _M_used;314,9881
	__gthread_mutex_t*              _M_mutex;319,10074
      _M_initialize_once(327,10232
      _M_get_bin(343,10569
      _M_adjust_freelist(347,10654
      explicit __pool(365,11054
      explicit __pool(369,11148
      _Bin_record*		_M_bin;378,11472
      size_t 	       	     	_M_bin_size;381,11554
      _Thread_record* 		_M_thread_freelist;383,11596
      void*			_M_thread_freelist_initial;384,11640
    struct __common_pool392,11788
      typedef _PoolTp<_Thread> 		pool_type;394,11819
      _S_get_pool(397,11894
    struct __common_pool_policy 461,13447
      template<typename _Tp1,463,13531
        { typedef __common_pool_policy<_PoolTp1, _Thread1> other;466,13662
      using  __common_pool_base<__common_pool_base468,13732
      using  __common_pool_base<_PoolTp, _Thread>::_S_get_pool;_S_get_pool468,13732
      using  __common_pool_base<__common_pool_base469,13796
      using  __common_pool_base<_PoolTp, _Thread>::_S_initialize_once;_S_initialize_once469,13796
    struct __per_type_pool474,13945
      typedef _Tp 			value_type;476,13978
      typedef _PoolTp<_Thread> 		pool_type;477,14011
      _S_get_pool(480,14086
	typedef typename pool_type::_Block_record 484,14169
	typedef typename __pool_base::_Tune 488,14350
    struct __per_type_pool_policy 557,16307
      template<typename _Tp1,560,16405
        { typedef __per_type_pool_policy<_Tp1, _PoolTp1, _Thread1> other;563,16536
      using  __per_type_pool_base<__per_type_pool_base565,16614
      using  __per_type_pool_base<_Tp, _PoolTp, _Thread>::_S_get_pool;_S_get_pool565,16614
      using  __per_type_pool_base<__per_type_pool_base566,16685
      using  __per_type_pool_base<_Tp, _PoolTp, _Thread>::_S_initialize_once;_S_initialize_once566,16685
    class __mt_alloc_base 572,16848
      typedef std::size_t               size_type;575,16893
      typedef std::ptrdiff_t            difference_type;576,16944
      typedef _Tp*                      pointer;577,17001
      typedef const _Tp*                const_pointer;578,17050
      typedef _Tp&                      reference;579,17105
      typedef const _Tp&                const_reference;580,17156
      typedef _Tp                       value_type;581,17213
      typedef std::true_type propagate_on_container_move_assignment;586,17385
      address(590,17476
      address(594,17590
      max_size(598,17706
      template<typename _Up,602,17826
        construct(604,17887
        destroy(609,18039
      construct(614,18205
      destroy(618,18307
#define __thread_default 623,18384
#define __thread_default 625,18420
      typedef std::size_t                    	size_type;644,19063
      typedef std::ptrdiff_t                 	difference_type;645,19120
      typedef _Tp*                      	pointer;646,19183
      typedef const _Tp*_Tp647,19233
      typedef _Tp&                      	reference;648,19289
      typedef const _Tp&                	const_reference;649,19341
      typedef _Tp                       	value_type;650,19399
      typedef _Poolp      			__policy_type;651,19452
      typedef typename _Poolp::pool_type	652,19496
	  typedef typename _Poolp1::template 657,19641
	  typedef __mt_alloc<_Tp1, pol_type> other;658,19712
      typedef typename __pool_type::_Bin_record 724,21786
	  typedef typename __pool_type::_Block_record 729,21974
    operator==(operator==773,23278
    operator!=(operator!=779,23485
#undef __thread_default783,23594

/usr/include/c++/13/ext/new_allocator.h,267
#define _NEW_ALLOCATOR_H 30,1212
namespace __gnu_cxx _GLIBCXX_VISIBILITY(36,1348
    class new_allocator 57,2037
	struct rebind62,2171
	{ typedef new_allocator<_Tp1> other;63,2186
      new_allocator(66,2235
      new_allocator(68,2284
	new_allocator(71,2383

/usr/include/c++/13/ext/numeric,79
#define _EXT_NUMERIC 57,2350
namespace __gnu_cxx _GLIBCXX_VISIBILITY(68,2579

/usr/include/c++/13/ext/numeric_traits.h,1152
#define _EXT_NUMERIC_TRAITS 30,1182
namespace __gnu_cxx _GLIBCXX_VISIBILITY(37,1304
    struct __is_integer_nonstrict51,1972
      using std::__is_integer<_Tp>::__value;__value54,2048
      enum { __width 57,2151
    struct __numeric_traits_integer61,2254
#define _GLIBCXX_INT_N_TRAITS(95,3479
#undef _GLIBCXX_INT_N_TRAITS133,5029
#define __glibcxx_floating(141,5235
#define __glibcxx_max_digits10(145,5403
#define __glibcxx_digits10(149,5550
#define __glibcxx_max_exponent10(152,5651
    struct __numeric_traits_floating158,5896
#undef __glibcxx_floating181,6653
#undef __glibcxx_max_digits10182,6679
#undef __glibcxx_digits10183,6709
#undef __glibcxx_max_exponent10184,6735
    struct __numeric_traits187,6796
    struct __numeric_traits<__numeric_traits192,6893
    struct __numeric_traits<__numeric_traits197,6997
    struct __numeric_traits<__numeric_traits202,7103
    struct __numeric_traits_floating<__numeric_traits_floating210,7356
    struct __numeric_traits<__numeric_traits218,7604
    struct __numeric_traits_floating<__numeric_traits_floating224,7809
    struct __numeric_traits<__numeric_traits232,8059

/usr/include/c++/13/ext/pod_char_traits.h,1161
#define _POD_CHAR_TRAITS_H 33,1318
namespace __gnu_cxx _GLIBCXX_VISIBILITY(41,1469
      typedef _Value				value_type;53,1915
      typedef _Int				int_type;54,1951
      typedef _St				state_type;55,1983
      typedef character<_Value, _Int, _St>	char_type;56,2016
    operator==(operator==80,2484
    operator<(86,2702
namespace std _GLIBCXX_VISIBILITY(93,2891
    struct char_traits<char_traits99,3083
      typedef __gnu_cxx::character<_Value,_Value101,3154
      typedef __gnu_cxx::character<_Value, _Int,101,3154
      typedef __gnu_cxx::character<_Value, _Int, _St>	char_type;101,3154
      typedef typename char_type::int_type		int_type;102,3219
      typedef typename char_type::state_type		state_type;103,3273
      typedef fpos<state_type>				pos_type;104,3331
      typedef streamoff					off_type;105,3375
      assign(108,3432
      eq(112,3527
      lt(116,3632
      compare(120,3735
      length(129,3976
      find(138,4138
      move(147,4360
      copy(156,4589
      assign(165,4774
      to_char_type(172,4919
      to_int_type(176,5030
      eq_int_type(180,5145
      eof(184,5261
      not_eof(193,5473

/usr/include/c++/13/ext/pointer.h,3331
#define _POINTER_H 37,1452
namespace __gnu_cxx _GLIBCXX_VISIBILITY(56,1819
    class _Std_pointer_impl 72,2413
      typedef _Tp element_type;76,2502
      get(80,2625
      set(85,2763
      element_type* _M_value;98,3117
    class _Relative_pointer_impl 115,3813
      typedef _Tp element_type;118,3865
      get(121,3911
      set(131,4111
      typedef __UINTPTR_TYPE__ uintptr_t;152,4740
      uintptr_t _M_diff;153,4782
      typedef const _Tp 164,5040
      typedef __UINTPTR_TYPE__ uintptr_t;198,5943
  struct _Invalid_type 207,6224
    struct _Reference_type 210,6280
    { typedef _Tp& reference;211,6308
    { typedef _Invalid_type& reference;215,6390
    { typedef const _Invalid_type& reference;219,6488
    { typedef volatile _Invalid_type&  reference;223,6595
    { typedef const volatile _Invalid_type&  reference;227,6712
    struct _Unqualified_type 235,6962
    { typedef _Tp type;236,6992
    { typedef _Tp type;240,7091
    class _Pointer_adapter 275,8847
      typedef typename _Storage_policy::element_type element_type;278,8918
      typedef std::random_access_iterator_tag                iterator_category;281,9032
      typedef typename _Unqualified_type<element_type>::type value_type;282,9112
      typedef std::ptrdiff_t                                 difference_type;283,9185
      typedef _Pointer_adapter                               pointer;284,9263
      typedef typename _Reference_type<element_type>::reference  reference;285,9333
      _Pointer_adapter(292,9644
      _Pointer_adapter(296,9794
        _Pointer_adapter(301,9992
        _Pointer_adapter(307,10191
      ~_Pointer_adapter(311,10320
      operator=(operator=315,10406
        operator=(operator=323,10593
        operator=(operator=331,10794
      operator*(339,10976
      operator->(344,11117
      explicit operator bool(operator bool354,11470
      typedef element_type*(_Pointer_adapter::*__unspecified_bool_type)__unspecified_bool_type357,11566
      operator __unspecified_bool_type(operator __unspecified_bool_type360,11660
      operator!(368,11889
      operator-(374,12037
      operator-(378,12185
        operator-(383,12364
        operator-(388,12540
        operator-(393,12704
#define _CXX_POINTER_ARITH_OPERATOR_SET(403,13201
      operator++(445,14761
      operator++(452,14911
      operator--(460,15103
      operator--(467,15253
      operator<=>(operator<=>476,15481
#define _GCC_CXX_POINTER_COMPARISON_OPERATION_SET(483,15664
    operator==(operator==513,16839
    operator==(operator==518,17006
    operator!=(operator!=523,17173
    operator!=(operator!=528,17340
    operator==(operator==537,17633
    operator<=(operator<=543,17823
    operator!=(operator!=549,18044
    operator>(555,18237
    operator>=(operator>=561,18459
    operator<<(568,18742
namespace std _GLIBCXX_VISIBILITY(577,18982
    struct pointer_traits<pointer_traits582,19098
      typedef __gnu_cxx::_Pointer_adapter<_Storage_policy>         pointer;585,19203
      typedef typename pointer::element_type            element_type;587,19309
      typedef typename pointer::difference_type         difference_type;589,19448
      static pointer pointer_to(595,19681
    struct indirectly_readable_traits<indirectly_readable_traits601,19862

/usr/include/c++/13/ext/pool_allocator.h,1652
#define _POOL_ALLOCATOR_H 43,1750
namespace __gnu_cxx _GLIBCXX_VISIBILITY(58,2083
    class __pool_alloc_base77,2883
      typedef std::size_t size_t;79,2917
      enum { _S_align 82,2967
      enum { _S_max_bytes 83,2996
      enum { _S_free_list_size 84,3031
      union _Obj86,3114
	union _Obj* _M_free_list_link;88,3139
	char        _M_client_data[_M_client_data89,3171
      static _Obj* volatile         _S_free_list[_S_free_list92,3247
      static char*                  _S_start_free;95,3350
      static char*                  _S_end_free;96,3401
      static size_t                 _S_heap_size;97,3450
      _M_round_up(100,3525
    class __pool_alloc 126,4258
      static _Atomic_word	    _S_force_new;129,4328
      typedef std::size_t     size_type;132,4385
      typedef std::ptrdiff_t  difference_type;133,4426
      typedef _Tp*       pointer;134,4473
      typedef const _Tp* const_pointer;135,4507
      typedef _Tp&       reference;136,4547
      typedef const _Tp& const_reference;137,4583
      typedef _Tp        value_type;138,4625
        struct rebind141,4693
        { typedef __pool_alloc<_Tp1> other;142,4715
      typedef std::true_type propagate_on_container_move_assignment;147,4882
      __pool_alloc(150,4959
      __pool_alloc(152,5007
        __pool_alloc(155,5104
      ~__pool_alloc(157,5179
      address(160,5242
      address(164,5356
      max_size(168,5472
      template<typename _Up,172,5594
        construct(174,5655
        destroy(179,5807
      construct(184,5973
      destroy(188,6075
    operator==(operator==200,6321
    operator!=(operator!=206,6497

/usr/include/c++/13/ext/random,10889
#define _EXT_RANDOM 30,1189
namespace __gnu_cxx _GLIBCXX_VISIBILITY(50,1568
    class simd_fast_mersenne_twister_engine67,2137
      static_assert(69,2187
      static_assert(71,2327
      static_assert(72,2391
      static_assert(73,2456
      static_assert(74,2519
      typedef _UIntType result_type;77,2596
      static_assert(84,2825
      static_assert(86,2965
      static_assert(16 % sizeof(87,3042
					    simd_fast_mersenne_twister_engine,93,3226
      simd_fast_mersenne_twister_engine(103,3498
      simd_fast_mersenne_twister_engine(108,3622
      template<typename _Sseq,111,3703
      min(124,4004
      max(128,4072
      operator()(operator()135,4212
      template<typename _UIntType_2,143,4344
      template<typename _UIntType_2, size_t __m_2,143,4344
	       size_t __pos1_2,144,4395
	       size_t __pos1_2, size_t __sl1_2,144,4395
	       size_t __pos1_2, size_t __sl1_2, size_t __sl2_2,144,4395
	       size_t __sr1_2,145,4452
	       size_t __sr1_2, size_t __sr2_2,145,4452
	       uint32_t __msk1_2,146,4492
	       uint32_t __msk1_2, uint32_t __msk2_2,146,4492
	       uint32_t __msk3_2,147,4538
	       uint32_t __msk3_2, uint32_t __msk4_2,147,4538
	       uint32_t __parity1_2,148,4584
	       uint32_t __parity1_2, uint32_t __parity2_2,148,4584
	       uint32_t __parity3_2,149,4636
      template<typename _UIntType_2,160,5162
      template<typename _UIntType_2, size_t __m_2,160,5162
	       size_t __pos1_2,161,5213
	       size_t __pos1_2, size_t __sl1_2,161,5213
	       size_t __pos1_2, size_t __sl1_2, size_t __sl2_2,161,5213
	       size_t __sr1_2,162,5270
	       size_t __sr1_2, size_t __sr2_2,162,5270
	       uint32_t __msk1_2,163,5310
	       uint32_t __msk1_2, uint32_t __msk2_2,163,5310
	       uint32_t __msk3_2,164,5356
	       uint32_t __msk3_2, uint32_t __msk4_2,164,5356
	       uint32_t __parity1_2,165,5402
	       uint32_t __parity1_2, uint32_t __parity2_2,165,5402
	       uint32_t __parity3_2,166,5454
	       uint32_t __parity3_2, uint32_t __parity4_2,166,5454
	       typename _CharT,167,5506
      template<typename _UIntType_2,176,5892
      template<typename _UIntType_2, size_t __m_2,176,5892
	       size_t __pos1_2,177,5943
	       size_t __pos1_2, size_t __sl1_2,177,5943
	       size_t __pos1_2, size_t __sl1_2, size_t __sl2_2,177,5943
	       size_t __sr1_2,178,6000
	       size_t __sr1_2, size_t __sr2_2,178,6000
	       uint32_t __msk1_2,179,6040
	       uint32_t __msk1_2, uint32_t __msk2_2,179,6040
	       uint32_t __msk3_2,180,6086
	       uint32_t __msk3_2, uint32_t __msk4_2,180,6086
	       uint32_t __parity1_2,181,6132
	       uint32_t __parity1_2, uint32_t __parity2_2,181,6132
	       uint32_t __parity3_2,182,6184
	       uint32_t __parity3_2, uint32_t __parity4_2,182,6184
	       typename _CharT,183,6236
	__m128i _M_state[_M_state195,6659
	__Uint32x4_t _M_state[_M_state199,6733
	uint32_t _M_state32[_M_state32202,6782
	result_type _M_stateT[_M_stateT203,6817
      size_t _M_pos;205,6897
    operator!=(operator!=220,7341
    sfmt607;239,8210
    sfmt607_64;247,8449
    sfmt1279;256,8692
    sfmt1279_64;264,8932
    sfmt2281;273,9177
    sfmt2281_64;281,9418
    sfmt4253;290,9663
    sfmt4253_64;298,9904
    sfmt11213;307,10150
    sfmt11213_64;315,10393
    sfmt19937;324,10642
    sfmt19937_64;332,10887
    sfmt44497;341,11134
    sfmt44497_64;349,11377
    sfmt86243;359,11650
    sfmt86243_64;367,11894
    sfmt132049;376,12144
    sfmt132049_64;384,12391
    sfmt216091;393,12642
    sfmt216091_64;401,12889
      typedef _RealType result_type;423,13532
      struct param_type426,13599
	typedef beta_distribution<_RealType> distribution_type;428,13631
	param_type(431,13733
	param_type(434,13778
	alpha(442,14005
	beta(446,14054
	operator==(operator==450,14103
	operator!=(operator!=456,14305
	_RealType _M_alpha;464,14442
	_RealType _M_beta;465,14463
	operator()(operator()541,16172
      operator==(operator==577,17380
    operator!=(operator!=627,19130
      typedef std::array<_RealType, _Dimen> result_type;656,20267
      class param_type658,20353
	typedef normal_mv_distribution<_Dimen,_Dimen663,20463
	typedef normal_mv_distribution<_Dimen, _RealType> distribution_type;663,20463
	param_type(666,20591
	template<typename _ForwardIterator1,678,20856
	  param_type(679,20922
	param_type(707,21904
	std::array<std::array729,22661
	mean(730,22692
	std::array<std::array733,22728
	varcov(734,22762
	operator==(operator==738,22810
	operator!=(operator!=743,22998
      private:private747,23095
	template <typename _InputIterator1,753,23332
	template <typename _InputIterator1,758,23558
	template<size_t _Dimen1,768,24021
	template<size_t _Dimen1, typename _RealType1,768,24021
		 typename _CharT,769,24068
	param_type(774,24278
	std::array<std::array779,24434
	std::array<_RealType, _Dimen> _M_mean;779,24434
	std::array<std::array780,24474
	std::array<_RealType, _M_t_size> _M_t;780,24474
	operator()(operator()867,26684
    operator!=(operator!=958,29746
      typedef _RealType result_type;994,31159
      struct param_type997,31226
	typedef rice_distribution<result_type> distribution_type;999,31258
	param_type(1001,31318
	param_type(1003,31353
	nu(1012,31590
	sigma(1016,31635
	operator==(operator==1020,31686
	operator!=(operator!=1025,31878
	result_type _M_nu;1032,32014
	result_type _M_sigma;1033,32034
	operator()(operator()1115,33810
	operator()(operator()1128,34141
      operator==(operator==1170,35534
    operator!=(operator!=1226,37435
      typedef _RealType result_type;1251,38239
      struct param_type1254,38306
	typedef nakagami_distribution<result_type> distribution_type;1256,38338
	param_type(1258,38402
	param_type(1260,38437
	mu(1269,38677
	omega(1273,38722
	operator==(operator==1277,38773
	operator!=(operator!=1282,38965
	result_type _M_mu;1289,39101
	result_type _M_omega;1290,39121
	operator()(operator()1367,40836
	operator()(operator()1372,41000
      operator==(operator==1408,42203
    operator!=(operator!=1462,44051
      typedef _RealType result_type;1499,45386
      struct param_type1502,45453
	typedef pareto_distribution<result_type> distribution_type;1504,45485
	param_type(1506,45547
	param_type(1508,45582
	alpha(1517,45818
	mu(1521,45869
	operator==(operator==1525,45914
	operator!=(operator!=1530,46106
	result_type _M_alpha;1537,46242
	result_type _M_mu;1538,46265
	operator()(operator()1617,47906
	operator()(operator()1625,48130
      operator==(operator==1660,49268
    operator!=(operator!=1714,51105
      typedef _RealType result_type;1749,52418
      struct param_type1752,52485
	typedef k_distribution<result_type> distribution_type;1754,52517
	param_type(1756,52574
	param_type(1758,52609
	lambda(1769,52955
	mu(1773,53008
	nu(1777,53053
	operator==(operator==1781,53098
	operator!=(operator!=1790,53338
	result_type _M_lambda;1797,53474
	result_type _M_mu;1798,53498
	result_type _M_nu;1799,53518
      operator==(operator==1920,56594
    operator!=(operator!=1976,58465
      typedef _RealType result_type;2006,59433
      struct param_type2009,59500
	typedef arcsine_distribution<result_type> distribution_type;2011,59532
	param_type(2013,59595
	param_type(2015,59630
	a(2022,59772
	b(2026,59815
	operator==(operator==2030,59858
	operator!=(operator!=2035,60040
	result_type _M_a;2042,60176
	result_type _M_b;2043,60195
	operator()(operator()2121,61930
	operator()(operator()2130,62196
      operator==(operator==2166,63376
    operator!=(operator!=2220,65222
      typedef _RealType result_type;2256,66653
      struct param_type2259,66720
	typedef hoyt_distribution<result_type> distribution_type;2261,66752
	param_type(2263,66812
	param_type(2265,66849
	q(2273,67056
	omega(2277,67099
	operator==(operator==2281,67150
	operator!=(operator!=2286,67340
	result_type _M_q;2293,67476
	result_type _M_omega;2294,67495
      operator==(operator==2412,70593
    operator!=(operator!=2468,72499
      typedef _RealType result_type;2500,73684
      struct param_type2503,73751
	param_type(2507,73834
	param_type(2510,73879
	a(2525,74274
	b(2529,74315
	c(2533,74356
	operator==(operator==2537,74399
	operator!=(operator!=2545,74617
	_RealType _M_a;2551,74730
	_RealType _M_b;2552,74747
	_RealType _M_c;2553,74764
	_RealType _M_r_ab;2554,74781
	_RealType _M_f_ab_ac;2555,74801
	_RealType _M_f_bc_ac;2556,74824
	operator()(operator()2639,76718
	operator()(operator()2644,76886
      operator==(operator==2685,78243
    operator!=(operator!=2735,80045
      typedef _RealType result_type;2770,81337
      struct param_type2773,81404
	param_type(2777,81486
	param_type(2780,81531
	mu(2795,82076
	kappa(2799,82119
	operator==(operator==2803,82170
	operator!=(operator!=2808,82362
	_RealType _M_mu;2813,82474
	_RealType _M_kappa;2814,82492
	_RealType _M_r;2815,82513
	operator()(operator()2894,84302
      operator==(operator==2930,85515
    operator!=(operator!=2980,87310
      typedef _UIntType  result_type;3016,88760
      struct param_type3019,88828
	typedef hypergeometric_distribution<_UIntType> distribution_type;3021,88860
	param_type(3024,88982
	param_type(3027,89028
	: _M_N{__N}, _M_K{_M_K3029,89104
	total_size(3036,89229
	successful_size(3040,89281
	unsuccessful_size(3044,89338
	total_draws(3048,89404
	operator==(operator==3052,89457
	operator!=(operator!=3059,89685
	result_type _M_N;3065,89798
	result_type _M_K;3066,89817
	result_type _M_n;3067,89836
	operator()(operator()3162,92265
      operator==(operator==3198,93472
    operator!=(operator!=3253,95384
      typedef _RealType result_type;3289,96552
      struct param_type3292,96619
	typedef logistic_distribution<result_type> distribution_type;3294,96651
	param_type(3296,96715
	param_type(3299,96760
	a(3306,96911
	b(3310,96954
	operator==(operator==3314,96997
	operator!=(operator!=3319,97179
	result_type _M_a;3326,97315
	result_type _M_b;3327,97334
	operator()(operator()3400,98930
	operator==(operator==3437,100173
    operator!=(operator!=3488,101953
      typedef std::array<_RealType, _Dimen> result_type;3508,102685
      struct param_type3511,102772
	param_type(3513,102804
	operator==(operator==3516,102836
	operator!=(operator!=3521,102964
	operator()(operator()3589,104465
      operator==(operator==3625,105691
    operator!=(operator!=3684,107785
      struct param_type3706,108534
	param_type(3712,108721
	param_type(3715,108768
	radius(3722,108888
	operator==(operator==3726,108941
	operator!=(operator!=3731,109107
	_RealType _M_radius;3736,109219
	operator()(operator()3818,110975
      operator==(operator==3854,112201
    operator!=(operator!=3913,114371

/usr/include/c++/13/ext/random.tcc,6490
#define _EXT_RANDOM_TCC 31,1270
namespace __gnu_cxx _GLIBCXX_VISIBILITY(37,1399
      inline void __rshift(213,6368
      inline void __lshift(231,6967
    template<size_t __sl1,248,7537
    template<size_t __sl1, size_t __sl2,248,7537
    template<size_t __sl1, size_t __sl2, size_t __sr1,248,7537
    template<size_t __sl1, size_t __sl2, size_t __sr1, size_t __sr2,248,7537
	     uint32_t __msk1,249,7606
	     uint32_t __msk1, uint32_t __msk2,249,7606
	     uint32_t __msk1, uint32_t __msk2, uint32_t __msk3,249,7606
      inline void __recursion(250,7680
    operator==(operator==325,9972
	       __parity1, __parity2, __parity3, __parity4> __engine;337,10582
    operator<<(354,11172
      typedef std::basic_ostream<_CharT, _Traits> __ostream_type;360,11453
      typedef typename __ostream_type::ios_base 361,11519
    operator>>(388,12404
      typedef std::basic_istream<_CharT, _Traits> __istream_type;394,12679
      typedef typename __istream_type::ios_base 395,12745
      operator()(operator()420,13501
    operator<<(468,14799
      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;471,14923
      typedef typename __ostream_type::ios_base 472,14990
    operator>>(492,15696
      typedef std::basic_istream<_CharT, _Traits>  __istream_type;495,15814
      typedef typename __istream_type::ios_base 496,15881
      operator()(operator()620,20094
    operator==(operator==655,21104
    operator<<(665,21483
      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;668,21620
      typedef typename __ostream_type::ios_base 669,21687
    operator>>(696,22574
      typedef std::basic_istream<_CharT, _Traits>  __istream_type;699,22705
      typedef typename __istream_type::ios_base 700,22772
    operator<<(753,24420
      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;756,24533
      typedef typename __ostream_type::ios_base 757,24600
    operator>>(779,25378
      typedef std::basic_istream<_CharT, _Traits>  __istream_type;782,25485
      typedef typename __istream_type::ios_base 783,25552
    operator<<(820,26713
      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;823,26830
      typedef typename __ostream_type::ios_base 824,26897
    operator>>(845,27637
      typedef std::basic_istream<_CharT, _Traits>  __istream_type;848,27748
      typedef typename __istream_type::ios_base 849,27815
    operator<<(885,28956
      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;888,29071
      typedef typename __ostream_type::ios_base 889,29138
    operator>>(910,29878
      typedef std::basic_istream<_CharT, _Traits>  __istream_type;913,29987
      typedef typename __istream_type::ios_base 914,30054
      operator()(operator()934,30667
      operator()(operator()945,31024
    operator<<(981,32237
      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;984,32347
      typedef typename __ostream_type::ios_base 985,32414
    operator>>(1007,33216
      typedef std::basic_istream<_CharT, _Traits>  __istream_type;1010,33320
      typedef typename __istream_type::ios_base 1011,33387
    operator<<(1051,34625
      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;1054,34741
      typedef typename __ostream_type::ios_base 1055,34808
    operator>>(1076,35543
      typedef std::basic_istream<_CharT, _Traits>  __istream_type;1079,35653
      typedef typename __istream_type::ios_base 1080,35720
      operator()(operator()1100,36301
      operator()(operator()1113,36764
    operator<<(1155,38277
      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;1158,38390
      typedef typename __ostream_type::ios_base 1159,38457
    operator>>(1181,39232
      typedef std::basic_istream<_CharT, _Traits>  __istream_type;1184,39339
      typedef typename __istream_type::ios_base 1185,39406
    operator<<(1220,40439
      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;1223,40569
      typedef typename __ostream_type::ios_base 1224,40636
    operator>>(1244,41357
      typedef std::basic_istream<_CharT, _Traits>  __istream_type;1247,41481
      typedef typename __istream_type::ios_base 1248,41548
      operator()(operator()1267,42145
    operator<<(1322,43740
      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;1325,43869
      typedef typename __ostream_type::ios_base 1326,43936
    operator>>(1346,44640
      typedef std::basic_istream<_CharT, _Traits>  __istream_type;1349,44763
      typedef typename __istream_type::ios_base 1350,44830
      operator()(operator()1369,45434
    operator<<(1429,46949
      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;1432,47083
      typedef typename __ostream_type::ios_base 1433,47150
    operator>>(1454,47908
      typedef std::basic_istream<_CharT, _Traits>  __istream_type;1457,48036
      typedef typename __istream_type::ios_base 1458,48103
      operator()(operator()1477,48801
    operator<<(1517,50044
      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;1520,50161
      typedef typename __ostream_type::ios_base 1521,50228
    operator>>(1541,50927
      typedef std::basic_istream<_CharT, _Traits>  __istream_type;1544,51038
      typedef typename __istream_type::ios_base 1545,51105
    template<std::size_t _Dimen,1564,51586
      class uniform_on_sphere_helper1565,51639
	typedef typename uniform_on_sphere_distribution<uniform_on_sphere_distribution1567,51684
	  result_type result_type;1568,51754
      public:public1570,51783
	result_type operator()(operator()1573,51880
	typedef typename uniform_on_sphere_distribution<uniform_on_sphere_distribution1603,52641
	result_type operator()(operator()1609,52832
      operator()(operator()1647,53861
    operator<<(1673,54717
    operator>>(1683,55046
    template<std::size_t _Dimen,1695,55339
    template<std::size_t _Dimen, bool _SmallDimen,1695,55339
    template<std::size_t _Dimen,1698,55453
	operator()(operator()1709,55808
    template<std::size_t _Dimen,1730,56459
	operator()(operator()1741,56813
      operator()(operator()1778,57825
    operator<<(1804,58717
      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;1808,58874
      typedef typename __ostream_type::ios_base 1809,58941
    operator>>(1831,59674
      typedef std::basic_istream<_CharT, _Traits>  __istream_type;1835,59829
      typedef typename __istream_type::ios_base 1836,59896

/usr/include/c++/13/ext/rb_tree,217
#define _RB_TREE 57,2345
namespace __gnu_cxx _GLIBCXX_VISIBILITY(65,2495
      typedef std::_Rb_tree<_Key, _Value, _KeyOfValue, _Compare, _Alloc> _Base;82,2992
      typedef typename _Base::allocator_type 83,3072

/usr/include/c++/13/ext/rc_string_base.h,2040
#define _RC_STRING_BASE_H 31,1296
namespace __gnu_cxx _GLIBCXX_VISIBILITY(39,1500
    class __rc_string_base85,3429
      typedef _Traits					    traits_type;89,3533
      typedef typename _Traits::char_type		    value_type;90,3576
      typedef _Alloc					    allocator_type;91,3635
      typedef __vstring_utility<_CharT,_CharT93,3681
      typedef __vstring_utility<_CharT, _Traits,93,3681
      typedef __vstring_utility<_CharT, _Traits, _Alloc>    _Util_Base;93,3681
      typedef typename _Util_Base::_CharT_alloc_type        _CharT_alloc_type;94,3753
      typedef typename _CharT_alloc_type::size_type	    size_type;95,3832
      struct _Rep111,4650
	    size_type	    _M_length;117,4701
	    size_type	    _M_capacity;118,4731
	    _Atomic_word    _M_refcount;119,4763
	  }                 _M_info;120,4797
	  _CharT            _M_align;123,4863
	  _Rep_alloc_type;127,4970
	_M_refdata(130,5001
	_M_refcopy(134,5082
	_M_set_length(141,5203
      struct _Rep_empty161,5647
	_CharT              _M_terminal;164,5699
      static _Rep_empty     _S_empty_rep;167,5743
      enum { _S_max_size 182,6546
      mutable typename _Util_Base::template _Alloc_hider<_Alloc>  _M_dataplus;186,6699
      _M_data(189,6790
      _M_rep(193,6864
      _M_grab(197,6962
      _M_dispose(204,7150
      _M_is_leaked(219,7579
      _M_set_sharable(223,7670
	_S_construct_aux(233,7970
	    _Tag;237,8144
	_S_construct_aux(245,8357
      _S_construct_aux_2(251,8553
	_S_construct(256,8728
	  typedef typename std::__is_integer<_InIterator>::__type _Integral;258,8802
      _M_max_size(280,9554
      _M_data(284,9636
      _M_length(288,9710
      _M_capacity(292,9797
      _M_is_shared(296,9883
      _M_set_leaked(300,9974
      _M_leak(304,10054
      _M_set_length(311,10181
      __rc_string_base(314,10257
      __rc_string_base(322,10461
      ~__rc_string_base(333,10807
      _M_get_allocator(337,10880
      _M_get_allocator(341,10964
      _M_clear(361,11359
      _M_compare(368,11456

/usr/include/c++/13/ext/rope,17548
#define _ROPE 44,1792
#   define __GC_CONST 62,2200
#   define __GC_CONST 64,2235
namespace __gnu_cxx _GLIBCXX_VISIBILITY(69,2355
    enum { _S_max_rope_depth 75,2465
    enum _Tag 76,2502
    enum _Tag {_S_leaf,_S_leaf76,2502
    enum _Tag {_S_leaf, _S_concat,76,2502
    enum _Tag {_S_leaf, _S_concat, _S_substringfn,76,2502
    enum _Tag {_S_leaf, _S_concat, _S_substringfn, _S_function}_S_function76,2502
    class char_producer148,4495
      virtual ~char_producer(151,4537
      typedef typename _Sequence::value_type 185,5897
      operator=(operator=225,6881
      operator=(operator=234,7035
      sequence_buffer& operator=(operator=244,7344
      operator=(operator=297,8335
      operator*(304,8456
      operator++(308,8528
      operator++(312,8600
    class _Rope_char_consumer319,8775
      virtual ~_Rope_char_consumer(327,9106
    struct _Rope_Concat_fn447,13030
      rope<rope451,13170
      operator()(operator()452,13197
  struct _Refcount_Base467,13739
    typedef std::size_t _RC_t;470,13789
    _RC_t _M_ref_count;473,13861
    __gthread_mutex_t _M_ref_count_lock;479,14003
    _Refcount_Base(482,14052
    ~_Refcount_Base(494,14437
    _M_incr(499,14529
    _M_decr(507,14686
#define __ROPE_DEFINE_ALLOCS(541,15995
#define __STATIC_IF_SGI_ALLOC 559,16831
    struct _Rope_rep_base562,16920
      typedef std::size_t size_type;565,16972
      typedef _Alloc allocator_type;566,17009
      get_allocator(569,17068
      _M_get_allocator(573,17171
      _M_get_allocator(577,17271
      _Rope_rep_base(580,17355
      size_type _M_size;583,17446
# define __ROPE_DEFINE_ALLOC(585,17472
# undef __ROPE_DEFINE_ALLOC593,17885
    struct _Rope_RopeRep597,17960
      __detail::_Tag _M_tag:_M_tag604,18092
      bool _M_is_balanced:_M_is_balanced605,18123
      unsigned char _M_depth;606,18152
      __GC_CONST _CharT* _M_c_string;607,18182
      __gthread_mutex_t _M_c_string_lock;611,18319
      typedef typename _Rope_rep_base<_Rope_rep_base619,18794
        allocator_type;620,18864
      typedef std::size_t size_type;621,18888
      using _Rope_rep_base<_Rope_rep_base623,18926
      using _Rope_rep_base<_CharT, _Alloc>::get_allocator;get_allocator623,18926
      using _Rope_rep_base<_Rope_rep_base624,18985
      using _Rope_rep_base<_CharT, _Alloc>::_M_get_allocator;_M_get_allocator624,18985
      _Rope_RopeRep(626,19048
      ~_Rope_RopeRep(637,19421
      _M_incr 642,19529
#define __STL_FREE_STRING(647,19662
      _M_unref_nonnil(659,20220
      _M_ref_nonnil(666,20312
      _S_unref(670,20374
      _S_ref(677,20486
      _S_free_if_unref(684,20594
      void _M_unref_nonnil(690,20738
      void _M_ref_nonnil(691,20771
      static void _S_unref(692,20802
      static void _S_ref(693,20849
      static void _S_free_if_unref(694,20894
    struct _Rope_RopeLeaf704,21125
      typedef std::size_t size_type;707,21200
      enum { _S_alloc_granularity 713,21468
      _S_rounded_up_size(716,21539
      __GC_CONST _CharT* _M_data;732,21940
      typedef typename _Rope_rep_base<_Rope_rep_base737,22293
        allocator_type;738,22362
      _Rope_RopeLeaf(740,22387
      ~_Rope_RopeLeaf(755,22933
    struct _Rope_RopeConcatenation771,23307
      _Rope_RopeRep<_Rope_RopeRep775,23403
      _Rope_RopeRep<_CharT, _Alloc>* _M_left;775,23403
      _Rope_RopeRep<_Rope_RopeRep776,23449
      _Rope_RopeRep<_CharT, _Alloc>* _M_right;776,23449
      typedef typename _Rope_rep_base<_Rope_rep_base778,23497
        allocator_type;779,23567
      _Rope_RopeConcatenation(781,23592
      ~_Rope_RopeConcatenation(792,23980
    struct _Rope_RopeFunction807,24342
      char_producer<_CharT>* _M_fn;811,24433
      bool _M_delete_when_done;813,24482
      _S_fn_finalization_proc(824,25025
    typedef typename _Rope_rep_base<_Rope_rep_base827,25143
      allocator_type;828,25211
      _Rope_RopeFunction(830,25234
      ~_Rope_RopeFunction(847,25676
    struct _Rope_RopeSubstring868,26441
      typedef std::size_t size_type;872,26562
      _Rope_RopeRep<_Rope_RopeRep875,26662
      _Rope_RopeRep<_CharT,_Alloc>* _M_base;875,26662
      size_type _M_start;876,26721
      operator()(operator()879,26767
      typedef typename _Rope_rep_base<_Rope_rep_base905,27409
        allocator_type;906,27479
      _Rope_RopeSubstring(908,27504
    virtual ~_Rope_RopeSubstring(918,27889
    struct _Rope_self_destruct_ptr938,28578
      _Rope_RopeRep<_Rope_RopeRep940,28619
      _Rope_RopeRep<_CharT, _Alloc>* _M_ptr;940,28619
      ~_Rope_self_destruct_ptr(942,28665
      _Rope_self_destruct_ptr(945,28778
      _Rope_self_destruct_ptr(947,28832
      _Rope_self_destruct_ptr(949,28875
      _Rope_RopeRep<_Rope_RopeRep952,28970
      operator*(953,29007
      _Rope_RopeRep<_Rope_RopeRep956,29056
      operator->(957,29093
      operator _Rope_RopeRep<_CharT, operator _Rope_RopeRep<_CharT,960,29142
      operator=(operator=964,29251
    class _Rope_char_ref_proxy975,29685
      typedef _Rope_RopeRep<_CharT,_CharT981,29883
      typedef _Rope_RopeRep<_CharT, _Alloc>* _Self_destruct_ptr;981,29883
      typedef _Rope_self_destruct_ptr<_CharT,_CharT983,29954
      typedef _Rope_self_destruct_ptr<_CharT, _Alloc> _Self_destruct_ptr;983,29954
      typedef _Rope_RopeRep<_CharT,_CharT985,30035
      typedef _Rope_RopeRep<_CharT, _Alloc> _RopeRep;985,30035
      typedef rope<_CharT,_CharT986,30089
      typedef rope<_CharT, _Alloc> _My_rope;986,30089
      std::size_t _M_pos;987,30134
      _CharT _M_current;988,30160
      bool _M_current_valid;989,30185
      _My_rope* _M_root;990,30214
      _Rope_char_ref_proxy(992,30274
      _Rope_char_ref_proxy(995,30412
      _Rope_char_ref_proxy(1003,30846
      _Rope_char_ptr_proxy<_Rope_char_ptr_proxy1011,31099
      operator=(operator=1014,31196
    class _Rope_char_ptr_proxy1029,31565
      std::size_t _M_pos;1033,31704
      rope<rope1034,31730
      rope<_CharT,_Alloc>* _M_root;1034,31730
      _Rope_char_ptr_proxy(1036,31801
      _Rope_char_ptr_proxy(1039,31930
      _Rope_char_ptr_proxy(1042,32044
      _Rope_char_ptr_proxy(1044,32084
      operator=(operator=1048,32187
      _Rope_char_ref_proxy<_Rope_char_ref_proxy1060,32528
      _Rope_char_ref_proxy<_CharT, _Alloc> operator*(1060,32528
    class _Rope_iterator_base1077,33208
      typedef _Alloc _allocator_type;1082,33365
      typedef _Rope_RopeRep<_CharT,_CharT1083,33444
      typedef _Rope_RopeRep<_CharT, _Alloc> _RopeRep;1083,33444
      enum { _S_path_cache_len 1086,33565
      enum { _S_iterator_buf_len 1087,33620
      std::size_t _M_current_pos;1088,33661
      _RopeRep* _M_root;1089,33695
      std::size_t _M_leaf_pos;1090,33743
      __GC_CONST _CharT* _M_buf_start;1091,33812
      __GC_CONST _CharT* _M_buf_ptr;1094,33956
      __GC_CONST _CharT* _M_buf_end;1097,34115
      const _RopeRep* _M_path_end[_M_path_end1103,34418
      int _M_leaf_index;1104,34472
      unsigned char _M_path_directions;1107,34673
      _CharT _M_tmp_buf[_M_tmp_buf1112,35000
      _Rope_iterator_base(1129,35996
      _Rope_iterator_base(1131,36029
      index(1138,36263
      _Rope_iterator_base(1141,36321
    class _Rope_const_iterator1159,36750
      typedef _Rope_RopeRep<_CharT,_CharT1164,36892
      typedef _Rope_RopeRep<_CharT, _Alloc> _RopeRep;1164,36892
      _Rope_const_iterator(1166,37012
      typedef _CharT reference;1172,37261
      typedef const _CharT* pointer;1175,37476
      _Rope_const_iterator(1178,37526
      _Rope_const_iterator(1180,37560
      _Rope_const_iterator(1185,37748
      operator=(operator=1189,37927
      operator*(1203,38318
      operator*(1213,38579
      operator++(1219,38699
      operator+=(operator+=1234,39019
      operator--(1244,39191
      operator-=(operator-=1251,39303
      operator++(1261,39474
      operator--(1272,39840
    class _Rope_iterator1316,41397
      typedef typename _Rope_iterator_base<_Rope_iterator_base1321,41533
      typedef typename _Rope_iterator_base<_CharT, _Alloc>::_RopeRep _RopeRep;1321,41533
      rope<rope1322,41612
      rope<_CharT, _Alloc>* _M_root_rope;1322,41612
      _Rope_iterator(1330,41968
      typedef _Rope_char_ref_proxy<_CharT,_CharT1340,42276
      typedef _Rope_char_ref_proxy<_CharT, _Alloc>  reference;1340,42276
      typedef _Rope_char_ref_proxy<_CharT,_CharT1341,42339
      typedef _Rope_char_ref_proxy<_CharT, _Alloc>* pointer;1341,42339
      rope<rope1343,42401
      container(1344,42429
      _Rope_iterator(1347,42480
      _Rope_iterator(1352,42582
      ~_Rope_iterator(1361,42847
      operator=(operator=1365,42939
      operator*(1387,43543
      operator*(1401,43906
      operator++(1407,44014
      operator+=(operator+=1414,44120
      operator--(1424,44286
      operator-=(operator-=1431,44392
      operator++(1441,44557
      operator--(1449,44761
    struct _Rope_base1495,46258
      typedef _Alloc allocator_type;1498,46306
      get_allocator(1501,46365
      _M_get_allocator(1505,46468
      _M_get_allocator(1509,46568
      typedef _Rope_RopeRep<_CharT,_CharT1512,46652
      typedef _Rope_RopeRep<_CharT, _Alloc> _RopeRep;1512,46652
      _Rope_base(1515,46775
      _Rope_base(1518,46860
      _RopeRep *_M_tree_ptr;_M_tree_ptr1521,46946
#define __ROPE_DEFINE_ALLOC(1523,46976
#undef __ROPE_DEFINE_ALLOC1531,47392
      __ROPE_DEFINE_ALLOCS(__ROPE_DEFINE_ALLOC1530,47357
    class rope 1546,47669
      typedef _CharT value_type;1549,47738
      typedef std::ptrdiff_t difference_type;1550,47771
      typedef std::size_t size_type;1551,47817
      typedef _CharT const_reference;1552,47854
      typedef const _CharT* const_pointer;1553,47892
      typedef _Rope_iterator<_CharT,_CharT1554,47935
      typedef _Rope_iterator<_CharT, _Alloc> iterator;1554,47935
      typedef _Rope_const_iterator<_CharT,_CharT1555,47990
      typedef _Rope_const_iterator<_CharT, _Alloc> const_iterator;1555,47990
      typedef _Rope_char_ref_proxy<_CharT,_CharT1556,48057
      typedef _Rope_char_ref_proxy<_CharT, _Alloc> reference;1556,48057
      typedef _Rope_char_ptr_proxy<_CharT,_CharT1557,48119
      typedef _Rope_char_ptr_proxy<_CharT, _Alloc> pointer;1557,48119
      typedef _Rope_base<_CharT,_CharT1568,48582
      typedef _Rope_base<_CharT, _Alloc> _Base;1568,48582
      typedef typename _Base::allocator_type allocator_type;1569,48630
      using _Base::_M_tree_ptr;1570,48691
      using _Base::get_allocator;1571,48723
      using _Base::_M_get_allocator;1572,48757
      typedef __GC_CONST _CharT* _Cstrptr;1573,48794
      static _CharT _S_empty_c_str[_S_empty_c_str1575,48844
      _S_is0(1578,48908
      enum { _S_copy_max 1581,48984
      typedef _Rope_RopeRep<_CharT,_CharT1585,49118
      typedef _Rope_RopeRep<_CharT, _Alloc> _RopeRep;1585,49118
      typedef _Rope_RopeConcatenation<_CharT,_CharT1586,49172
      typedef _Rope_RopeConcatenation<_CharT, _Alloc> _RopeConcatenation;1586,49172
      typedef _Rope_RopeLeaf<_CharT,_CharT1587,49246
      typedef _Rope_RopeLeaf<_CharT, _Alloc> _RopeLeaf;1587,49246
      typedef _Rope_RopeFunction<_CharT,_CharT1588,49302
      typedef _Rope_RopeFunction<_CharT, _Alloc> _RopeFunction;1588,49302
      typedef _Rope_RopeSubstring<_CharT,_CharT1589,49366
      typedef _Rope_RopeSubstring<_CharT, _Alloc> _RopeSubstring;1589,49366
      _S_unref(1613,50244
      _S_ref(1617,50328
      static void _S_unref(1621,50407
      static void _S_ref(1622,50449
      typedef _Rope_RopeRep<_CharT,_CharT1626,50509
      typedef _Rope_RopeRep<_CharT, _Alloc>* _Self_destruct_ptr;1626,50509
      typedef _Rope_self_destruct_ptr<_CharT,_CharT1628,50580
      typedef _Rope_self_destruct_ptr<_CharT, _Alloc> _Self_destruct_ptr;1628,50580
      static _RopeRep* _S_destr_concat_char_iter(1642,51124
      apply_to_pieces(1662,51783
      _S_rounded_up_size(1669,51998
      _S_allocated_capacity(1673,52115
      _S_new_RopeLeaf(1685,52443
      _S_new_RopeConcatenation(1693,52700
      _S_new_RopeFunction(1701,52980
      _S_new_RopeSubstring(1709,53261
#define __STL_ROPE_FROM_UNOWNED_CHAR_PTR(1719,53656
      _S_RopeLeaf_from_unowned_char_ptr(__STL_ROPE_FROM_UNOWNED_CHAR_PTR1717,53553
      rope(1765,55110
      _S_min_len[_S_min_len1781,55659
      _S_is_balanced(1784,55735
      _S_is_almost_balanced(1788,55852
      _S_is_roughly_balanced(1793,56004
      _S_concat_and_set_balanced(1799,56204
      empty(1829,57368
      compare(1836,57623
      rope(1839,57726
      rope(1847,57951
      rope(1858,58341
      rope(1866,58570
      rope(1872,58788
      rope(1878,58994
      rope(1900,59550
      rope(1904,59705
      rope(1913,59979
      ~rope(1917,60127
      operator=(operator=1921,60201
      clear(1931,60399
      push_back(1938,60501
      pop_back(1948,60739
      back(1957,60937
      push_front(1961,61046
      pop_front(1980,61429
      front(1989,61621
      balance(1993,61702
      copy(2001,61854
      copy(2013,62288
      dump(2026,62710
      delete_c_str 2041,63267
      at(2063,63758
      begin(2070,63905
      const_begin(2075,64076
      end(2079,64180
      const_end(2083,64281
      size(2087,64383
      length(2091,64499
      max_size(2095,64562
      typedef std::reverse_iterator<const_iterator> const_reverse_iterator;2103,64812
      rbegin(2106,64918
      const_rbegin(2110,65017
      rend(2114,65122
      const_rend(2118,65227
      append(2141,66127
      append(2152,66413
      append(2160,66573
      append(2171,66863
      append(2184,67225
      append(2195,67482
      append(2199,67558
      append(2208,67762
      swap(2215,67893
      replace(2225,68113
      insert(2249,68665
      insert(2258,68879
      insert(2265,69022
      insert(2281,69642
      insert(2285,69772
      insert(2289,69856
      insert(2296,69959
      insert(2303,70093
      insert(2311,70249
      replace(2321,70460
      replace(2330,70696
      replace(2338,70863
      replace(2345,70988
      replace(2352,71140
      replace(2360,71309
      replace(2368,71488
      replace(2377,71691
      replace(2384,71799
      replace(2388,71889
      replace(2392,72009
      replace(2396,72115
      replace(2400,72231
      replace(2405,72370
      erase(2411,72539
      insert(2421,72788
      insert(2428,72911
      iterator insert(2434,73034
      insert(2441,73167
      insert(2448,73275
      insert(2455,73416
      insert(2462,73567
      insert(2470,73729
      insert(2478,73906
      replace(2487,74095
      replace(2491,74244
      replace(2495,74394
      replace(2500,74572
      replace(2505,74756
      replace(2510,74944
      replace(2515,75148
      replace(2521,75371
      replace(2525,75478
      replace(2529,75580
      replace(2533,75703
      replace(2537,75832
      replace(2541,75965
      replace(2545,76100
      erase(2550,76267
      erase(2558,76468
      substr(2566,76622
      substr(2574,76812
      substr(2582,77002
      substr(2590,77191
      rope<rope2599,77457
      substr(2600,77484
      static const size_type npos;2607,77662
      find(2612,77776
      mutable_begin(2627,78159
      mutable_end(2631,78240
      typedef std::reverse_iterator<iterator> reverse_iterator;2634,78303
      mutable_rbegin(2637,78397
      mutable_rend(2641,78494
      mutable_reference_at(2645,78584
      at(2654,78804
      void resize(2660,78930
      void resize(2661,78979
      void reserve(2662,79016
      capacity(2665,79087
      copy(2672,79321
      end(2677,79457
      begin(2681,79517
      rend(2685,79589
      rbegin(2689,79665
      end(2694,79743
      begin(2698,79807
      rend(2702,79883
      rbegin(2706,79957
    inline bool operator==(operator==2717,80205
    inline bool operator<(2723,80473
    inline bool operator!=(operator!=2728,80701
    inline bool operator>(2733,80903
    operator<=(operator<=2739,81115
    operator>=(operator>=2745,81322
    operator-(2751,81539
    operator-(2760,81846
    operator+(2767,82125
    operator+(2774,82404
    operator==(operator==2781,82647
    operator<(2788,82919
    operator!=(operator!=2794,83141
    operator>(2800,83337
    operator<=(operator<=2806,83527
    operator>=(operator>=2812,83722
    operator-(2818,83927
    operator-(2825,84214
    operator+(2832,84481
    operator+(2838,84741
    operator+(2844,84991
      typedef rope<_CharT, _Alloc> rope_type;2849,85188
    operator+=(operator+=2856,85411
    operator+(2865,85637
      typedef rope<_CharT, _Alloc> rope_type;2868,85723
    operator+=(operator+=2877,86066
    operator+(2886,86278
      typedef rope<_CharT, _Alloc> rope_type;2888,86350
    operator+=(operator+=2896,86625
    operator<(2904,86801
    operator==(operator==2910,86989
    operator==(operator==2916,87187
    operator!=(operator!=2922,87438
    operator>(2928,87614
    operator<=(operator<=2934,87784
    operator>=(operator>=2940,87959
    operator!=(operator!=2946,88134
  typedef rope<char> crope;2955,88481
  typedef rope<wchar_t> wrope;2956,88509
namespace std _GLIBCXX_VISIBILITY(2975,88982
namespace tr12979,89062
    struct hash<hash2982,89091
      operator()(operator()2985,89144
    struct hash<hash2996,89354
      operator()(operator()2999,89407

/usr/include/c++/13/ext/ropeimpl.h,1132
namespace __gnu_cxx _GLIBCXX_VISIBILITY(51,2028
    class _Rope_flatten_char_consumer839,24631
      _CharT* _M_buf_ptr;843,24729
      _Rope_flatten_char_consumer(846,24774
      ~_Rope_flatten_char_consumer(849,24860
      operator()(operator()852,24918
    class _Rope_find_char_char_consumer861,25105
      _CharT _M_pattern;865,25205
      std::size_t _M_count;867,25242
      _Rope_find_char_char_consumer(869,25314
      ~_Rope_find_char_char_consumer(872,25404
      operator()(operator()875,25464
    class _Rope_insert_char_consumer892,25826
      typedef std::basic_ostream<_CharT,_CharT896,25923
      typedef std::basic_ostream<_CharT,_Traits> _Insert_ostream;896,25923
      _Insert_ostream& _M_o;897,25989
      _Rope_insert_char_consumer(899,26030
      ~_Rope_insert_char_consumer(901,26111
    operator()(operator()910,26413
    operator<<(1010,28924
    operator=(operator=1486,41802
    operator _CharT(operator _CharT1518,42815
    operator&(1529,43097
      typedef typename _Rope_iterator::value_type 1670,47290
      typedef typename _Rope_iterator::_allocator_type 1671,47348

/usr/include/c++/13/ext/slist,3932
#define _SLIST 45,1814
namespace __gnu_cxx _GLIBCXX_VISIBILITY(56,2065
  struct _Slist_node_base60,2150
    _Slist_node_base* _M_next;62,2180
    struct _Slist_node 146,4249
      _Tp _M_data;148,4304
  struct _Slist_iterator_base151,4331
    typedef std::size_t                    size_type;153,4365
    typedef std::ptrdiff_t                 difference_type;154,4419
    typedef std::forward_iterator_tag iterator_category;155,4479
    _Slist_node_base* _M_node;157,4537
    _Slist_iterator_base(159,4573
    _M_incr(163,4653
    operator==(operator==167,4713
    operator!=(operator!=171,4816
    struct _Slist_iterator 176,4962
      typedef _Slist_iterator<_Tp,_Tp178,5025
      typedef _Slist_iterator<_Tp, _Tp&, _Tp*>             iterator;178,5025
      typedef _Slist_iterator<_Tp,_Tp179,5094
      typedef _Slist_iterator<_Tp, const _Tp&, const _Tp*> const_iterator;179,5094
      typedef _Slist_iterator<_Tp,_Tp180,5169
      typedef _Slist_iterator<_Tp, _Ref,180,5169
      typedef _Slist_iterator<_Tp, _Ref, _Ptr>             _Self;180,5169
      typedef _Tp              value_type;182,5236
      typedef _Ptr             pointer;183,5279
      typedef _Ref             reference;184,5319
      typedef _Slist_node<_Tp> _Node;185,5361
      _Slist_iterator(188,5415
      _Slist_iterator(191,5487
      _Slist_iterator(194,5547
      operator*(198,5652
      operator->(202,5737
      operator++(206,5809
      operator++(213,5884
    struct _Slist_base222,6016
	rebind<_Slist_node<_Tp> >::other _Node_alloc;226,6180
      typedef _Alloc allocator_type;227,6227
      get_allocator(230,6286
      _Slist_base(233,6372
      ~_Slist_base(237,6480
      _Slist_node_base _M_head;241,6562
      _M_get_node(244,6619
      _M_put_node(248,6696
      _Slist_node_base* _M_erase_after(252,6796
      typedef _Slist_base<_Tp,_Alloc> _Base;295,8158
      typedef _Tp               value_type;298,8216
      typedef value_type*       pointer;299,8260
      typedef const value_type*value_type300,8301
      typedef value_type&       reference;301,8348
      typedef const value_type& const_reference;302,8391
      typedef std::size_t            size_type;303,8440
      typedef std::ptrdiff_t         difference_type;304,8488
      typedef _Slist_iterator<_Tp, _Tp&, _Tp*>             iterator;306,8549
      typedef _Slist_iterator<_Tp, const _Tp&, const _Tp*> const_iterator;307,8618
      typedef typename _Base::allocator_type 309,8700
      typedef _Slist_node<_Tp>      _Node;316,8866
      typedef _Slist_node_base      _Node_base;317,8909
      typedef _Slist_iterator_base  _Iterator_base;318,8957
	  typedef typename std::__is_integer<std::__is_integer407,11321
	  typedef typename std::__is_integer<std::__is_integer531,14836
    slist<_Tp, _Alloc>::operator=(operator=730,20773
    operator==(operator==795,22531
      typedef typename slist<slist797,22616
    operator<(814,23065
    operator!=(operator!=820,23301
    operator>(825,23466
    operator<=(operator<=830,23626
    operator>=(operator>=835,23790
namespace std _GLIBCXX_VISIBILITY(1030,28535
    class insert_iterator<insert_iterator1037,28761
      typedef __gnu_cxx::slist<_Tp,_Tp1040,28840
      typedef __gnu_cxx::slist<_Tp, _Alloc> _Container;1040,28840
      _Container* container;1041,28896
      typename _Container::iterator iter;1042,28925
      typedef _Container          container_type;1045,28980
      typedef output_iterator_tag iterator_category;1046,29030
      typedef void                value_type;1047,29083
      typedef void                difference_type;1048,29129
      typedef void                pointer;1049,29180
      typedef void                reference;1050,29223
      insert_iterator(1052,29269
      operator=(operator=1062,29509
      operator*(1069,29688
      operator++(1073,29766
      operator++(1077,29845

/usr/include/c++/13/ext/sso_string_base.h,1807
#define _SSO_STRING_BASE_H 31,1303
namespace __gnu_cxx _GLIBCXX_VISIBILITY(35,1408
    class __sso_string_base40,1556
      typedef _Traits					    traits_type;44,1661
      typedef typename _Traits::char_type		    value_type;45,1704
      typedef __vstring_utility<_CharT,_CharT47,1764
      typedef __vstring_utility<_CharT, _Traits,47,1764
      typedef __vstring_utility<_CharT, _Traits, _Alloc>    _Util_Base;47,1764
      typedef typename _Util_Base::_CharT_alloc_type        _CharT_alloc_type;48,1836
      typedef typename _CharT_alloc_type::size_type	    size_type;49,1915
                                                            _M_dataplus;54,2093
      size_type                                             _M_string_length;55,2166
      enum { _S_local_capacity 57,2245
	_CharT           _M_local_data[_M_local_data61,2311
	size_type        _M_allocated_capacity;62,2367
      _M_data(66,2429
      _M_length(70,2502
      _M_capacity(74,2589
      _M_is_local(78,2687
      _M_dispose(86,2857
      _M_destroy(93,2963
        _M_construct_aux(100,3264
          typedef typename std::iterator_traits<std::iterator_traits103,3354
        _M_construct_aux(112,3639
      _M_construct_aux_2(116,3789
        _M_construct(121,3930
	  typedef typename std::__is_integer<std::__is_integer123,3992
      _M_max_size(145,4684
	typedef __alloc_traits<_CharT_alloc_type> _ATraits;147,4718
      _M_data(152,4852
      _M_length(156,4926
      _M_capacity(160,5002
      _M_is_shared(167,5157
      _M_set_leaked(171,5220
      _M_leak(174,5258
      _M_set_length(177,5290
      __sso_string_base(183,5407
      ~__sso_string_base(201,5895
      _M_get_allocator(205,5972
      _M_get_allocator(209,6059
      _M_clear(229,6456
      _M_compare(233,6513

/usr/include/c++/13/ext/stdio_filebuf.h,422
#define _STDIO_FILEBUF_H 30,1212
namespace __gnu_cxx _GLIBCXX_VISIBILITY(38,1362
      typedef _CharT				        char_type;56,1961
      typedef _Traits				        traits_type;57,2004
      typedef typename traits_type::int_type	58,2050
      typedef typename traits_type::pos_type	59,2106
      typedef typename traits_type::off_type	60,2162
      typedef std::size_t                               size_t;61,2218

/usr/include/c++/13/ext/stdio_sync_filebuf.h,454
#define _STDIO_SYNC_FILEBUF_H 30,1222
namespace __gnu_cxx _GLIBCXX_VISIBILITY(45,1535
      typedef _CharT					char_type;62,2102
      typedef _Traits					traits_type;63,2138
      typedef typename traits_type::int_type	64,2177
      typedef typename traits_type::pos_type	65,2233
      typedef typename traits_type::off_type	66,2289
      typedef std::basic_streambuf<_CharT, _Traits> __streambuf_type;69,2359
      operator=(operator=94,3072

/usr/include/c++/13/ext/string_conversions.h,261
#define _STRING_CONVERSIONS_H 30,1207
namespace __gnu_cxx _GLIBCXX_VISIBILITY(48,1572
      struct _Save_errno 64,1997
	_Save_errno(65,2024
	~_Save_errno(66,2072
	int _M_errno;67,2126
      struct _Range_chk 70,2170
	  _S_chk(72,2211
	  _S_chk(75,2279

/usr/include/c++/13/ext/throw_allocator.h,5959
#define _THROW_ALLOCATOR_H 47,2066
namespace __gnu_cxx _GLIBCXX_VISIBILITY(73,2578
  struct forced_error 81,2764
  struct annotate_base95,3239
    typedef std::pair<size_t,size_t98,3277
    typedef std::pair<size_t, size_t>		data_type;98,3277
    typedef std::map<void*void99,3327
    typedef std::map<void*, data_type>		map_alloc_type;99,3327
    typedef map_alloc_type::value_type		entry_type;100,3383
    typedef map_alloc_type::const_iterator	const_iterator;101,3435
    typedef map_alloc_type::const_reference	const_reference;102,3494
    typedef std::map<void*void104,3582
    typedef std::map<void*, size_t>		map_construct_type;104,3582
    annotate_base(108,3657
    set_label(115,3740
    get_label(119,3804
    insert(123,3854
    erase(145,4417
    insert_construct(150,4539
    erase_construct(169,5050
    check_allocated(175,5247
    check(200,5935
    check(237,6681
    check_constructed(272,7316
    check_constructed(287,7677
    make_entry(313,8213
    log_to_string(317,8331
    log_to_string(343,9022
    label(364,9541
    map_alloc(371,9682
    map_construct(379,9826
  operator<<(388,9955
    typedef annotate_base base_type;391,10039
  struct condition_base416,10668
    virtual ~condition_base(423,10879
  struct limit_condition 430,10992
    struct adjustor_base435,11229
      const size_t _M_orig;438,11273
      adjustor_base(441,11314
      ~adjustor_base(444,11374
    struct never_adjustor 448,11464
      never_adjustor(450,11519
    struct always_adjustor 454,11637
      always_adjustor(456,11693
    struct limit_adjustor 460,11782
      limit_adjustor(462,11837
    throw_conditionally(468,12016
    count(476,12146
    limit(483,12246
    set_limit(491,12430
  struct random_condition 502,12633
    struct adjustor_base507,12883
      const double _M_orig;510,12927
      adjustor_base(513,12968
      virtual ~adjustor_base(515,13020
    struct group_adjustor 520,13120
      group_adjustor(522,13175
    struct never_adjustor 529,13361
      never_adjustor(531,13416
    struct always_adjustor 535,13507
      always_adjustor(537,13563
    random_condition(540,13619
    set_probability(547,13708
    throw_conditionally(551,13786
    seed(558,13897
    typedef std::uniform_real_distribution<double> 	distribution_type;563,13992
    typedef std::mt19937 				engine_type;564,14063
    typedef std::tr1::uniform_real<double> 		distribution_type;566,14111
    typedef std::tr1::mt19937 				engine_type;567,14175
    generate(571,14248
      typedef std::tr1::variate_generator<engine_type, distribution_type> gen_t;578,14475
    probability(603,15159
    engine(610,15259
    struct throw_value_base 625,15584
      typedef _Cond  				condition_type;627,15633
      using condition_type::throw_conditionally;629,15675
      std::size_t			       	_M_i;631,15725
      throw_value_base(634,15790
      throw_value_base(637,15859
      explicit throw_value_base(645,16077
      operator=(operator=650,16209
      operator++(664,16484
      typedef throw_value_base<_Cond> throw_value;676,16693
    operator==(operator==686,16946
      typedef throw_value_base<_Cond> throw_value;689,17047
    operator<(697,17251
      typedef throw_value_base<_Cond> throw_value;700,17350
    operator+(709,17629
      typedef throw_value_base<_Cond> throw_value;712,17728
    operator-(720,17956
      typedef throw_value_base<_Cond> throw_value;723,18055
    operator*(731,18283
      typedef throw_value_base<_Cond> throw_value;734,18382
  struct throw_value_limit 742,18590
    typedef throw_value_base<limit_condition> base_type;744,18664
    throw_value_limit(747,18752
    throw_value_limit(749,18781
    explicit throw_value_limit(756,18961
    operator=(operator=760,19067
  struct throw_value_random 774,19371
    typedef throw_value_base<random_condition> base_type;776,19447
    throw_value_random(779,19536
    throw_value_random(781,19566
    explicit throw_value_random(788,19750
    operator=(operator=792,19858
    class throw_allocator_base813,20398
      typedef std::size_t 			size_type;817,20488
      typedef std::ptrdiff_t 			difference_type;818,20528
      typedef _Tp 				value_type;819,20577
      typedef value_type* 			pointer;820,20611
      typedef const value_type* 		const_pointer;821,20649
      typedef value_type& 			reference;822,20698
      typedef const value_type& 		const_reference;823,20738
      typedef std::true_type propagate_on_container_move_assignment;828,20924
      typedef _Cond				condition_type;832,21014
      std::allocator<value_type> 		_M_allocator;834,21054
      typedef __gnu_cxx::__alloc_traits<std::allocator<value_type> > traits;836,21104
      using condition_type::throw_conditionally;838,21182
      max_size(842,21260
      address(846,21369
      address(850,21483
      allocate(854,21616
      template<typename _Up,866,21910
        construct(868,21971
        destroy(876,22167
      construct(883,22287
      destroy(887,22406
      deallocate(892,22489
      check_allocated(899,22637
      check(906,22801
    operator==(operator==912,22928
    operator!=(operator!=919,23158
    struct throw_allocator_limit926,23364
	struct rebind930,23489
	{ typedef throw_allocator_limit<_Tp1> other;931,23504
      throw_allocator_limit(933,23554
      throw_allocator_limit(935,23611
	throw_allocator_limit(939,23732
      ~throw_allocator_limit(942,23819
    struct throw_allocator_random953,24112
	struct rebind957,24239
	{ typedef throw_allocator_random<_Tp1> other;958,24254
      throw_allocator_random(960,24305
      throw_allocator_random(962,24363
	throw_allocator_random(966,24486
      ~throw_allocator_random(969,24575
namespace std _GLIBCXX_VISIBILITY(985,24913
    struct hash<hash992,25136
      operator()(operator()996,25272
    struct hash<hash1008,25625
      operator()(operator()1012,25763

/usr/include/c++/13/ext/type_traits.h,2735
#define _EXT_TYPE_TRAITS 30,1176
namespace __gnu_cxx _GLIBCXX_VISIBILITY(39,1310
    struct __enable_if 45,1473
    { typedef _Tp __type;50,1566
    struct __conditional_type55,1730
    { typedef _Iftrue __type;56,1760
    { typedef _Iffalse __type;60,1898
    struct __add_unsigned65,2036
      typedef __enable_if<std::__is_integer<_Tp>::__value,__value68,2082
      typedef __enable_if<std::__is_integer<_Tp>::__value, _Tp> __if_type;68,2082
      typedef typename __if_type::__type __type;71,2176
    struct __add_unsigned<__add_unsigned75,2247
    { typedef unsigned char __type;76,2279
    struct __add_unsigned<__add_unsigned79,2332
    { typedef unsigned char __type;80,2371
    struct __add_unsigned<__add_unsigned83,2424
    { typedef unsigned short __type;84,2457
    struct __add_unsigned<__add_unsigned87,2511
    { typedef unsigned int __type;88,2542
    struct __add_unsigned<__add_unsigned91,2594
    { typedef unsigned long __type;92,2626
    struct __add_unsigned<__add_unsigned95,2679
    { typedef unsigned long long __type;96,2716
    struct __remove_unsigned108,2990
      typedef __enable_if<std::__is_integer<_Tp>::__value,__value111,3039
      typedef __enable_if<std::__is_integer<_Tp>::__value, _Tp> __if_type;111,3039
      typedef typename __if_type::__type __type;114,3133
    struct __remove_unsigned<__remove_unsigned118,3204
    { typedef signed char __type;119,3239
    struct __remove_unsigned<__remove_unsigned122,3290
    { typedef signed char __type;123,3334
    struct __remove_unsigned<__remove_unsigned126,3385
    { typedef short __type;127,3430
    struct __remove_unsigned<__remove_unsigned130,3475
    { typedef int __type;131,3518
    struct __remove_unsigned<__remove_unsigned134,3561
    { typedef long __type;135,3605
    struct __remove_unsigned<__remove_unsigned138,3649
    { typedef long long __type;139,3698
    { typedef double __type;172,4403
    struct __promote<__promote182,4713
    { typedef long double __type;183,4747
    struct __promote<__promote186,4798
    { typedef double __type;187,4827
    struct __promote<__promote190,4873
    { typedef float __type;191,4901
    struct __promote<__promote195,4974
    { typedef _Float16 __type;196,5005
    struct __promote<__promote201,5088
    { typedef _Float32 __type;202,5119
    struct __promote<__promote207,5202
    { typedef _Float64 __type;208,5233
    struct __promote<__promote213,5317
    { typedef _Float128 __type;214,5349
    struct __promote<__promote219,5434
    { typedef __gnu_cxx::__bfloat16_t __type;220,5480
      typedef __typeof__(_Tp2(246,6352
      typedef __typeof__(_Tp2(255,6672
      typedef __typeof__(_Tp2(265,7075

/usr/include/c++/13/ext/typelist.h,6661
#define _TYPELIST_H 44,1819
namespace __gnu_cxx _GLIBCXX_VISIBILITY(48,1872
  struct null_type 57,2080
    struct node60,2131
      typedef Root 	root;62,2153
    struct chain67,2269
      typedef Hd 	head;69,2292
      typedef Typelist 	tail;70,2316
      typedef append_<Tl, Typelist_Chain> 			append_type;206,5415
      typedef chain<Hd, typename append_type::type> 		type;209,5486
      typedef Typelist_Chain 			      		type;215,5642
      typedef chain<Hd, Tl>  					type;221,5784
      typedef null_type 					type;227,5892
      typedef chain<Hd, null_type> 				type;236,6091
      typedef typename append_typelist_<append_typelist_243,6245
      typedef typename append<append246,6321
	  value 257,6548
	  value 266,6685
	  value = contains_<Tl, T>T266,6685
	  value = contains_<Tl, T>::valuevalue266,6685
	  value 275,6826
      typedef null_type 					type;285,7042
	  include_hd 294,7232
      typedef typename chain_filter_<chain_filter_297,7269
      typedef chain<Hd, rest_type> 				chain_type;298,7335
      typedef typename __conditional_type<__conditional_type301,7399
      typedef Hd 						type;310,7656
      typedef typename chain_at_index_<Tl, i - 1>::type type316,7788
      typedef null_type 					type;325,8065
      typedef typename chain_transform_<chain_transform_332,8250
      typedef typename Transform<Transform333,8323
      typedef chain<transform_type, rest_type> 			type;336,8398
      typedef typename Hd_Tl::root 345,8620
      typedef typename chain_flatten_<chain_flatten_352,8804
      typedef append<Hd_Typelist, node<rest_type> >		append_type;353,8873
      typedef typename append_type::type::root 355,8951
#define _GLIBCXX_TYPELIST_CHAIN1(359,9037
#define _GLIBCXX_TYPELIST_CHAIN2(360,9137
#define _GLIBCXX_TYPELIST_CHAIN3(361,9240
#define _GLIBCXX_TYPELIST_CHAIN4(362,9351
#define _GLIBCXX_TYPELIST_CHAIN5(363,9470
#define _GLIBCXX_TYPELIST_CHAIN6(364,9597
#define _GLIBCXX_TYPELIST_CHAIN7(365,9732
#define _GLIBCXX_TYPELIST_CHAIN8(366,9875
#define _GLIBCXX_TYPELIST_CHAIN9(367,10026
#define _GLIBCXX_TYPELIST_CHAIN10(368,10185
#define _GLIBCXX_TYPELIST_CHAIN11(369,10353
#define _GLIBCXX_TYPELIST_CHAIN12(370,10532
#define _GLIBCXX_TYPELIST_CHAIN13(371,10721
#define _GLIBCXX_TYPELIST_CHAIN14(372,10920
#define _GLIBCXX_TYPELIST_CHAIN15(373,11129
#define _GLIBCXX_TYPELIST_CHAIN16(374,11348
#define _GLIBCXX_TYPELIST_CHAIN17(375,11577
#define _GLIBCXX_TYPELIST_CHAIN18(376,11816
#define _GLIBCXX_TYPELIST_CHAIN19(377,12065
#define _GLIBCXX_TYPELIST_CHAIN20(378,12324
  template<typename Fn,380,12594
    apply(382,12646
  template<typename Fn,388,12753
    apply_generator(390,12805
  template<typename Fn,396,12933
  template<typename Fn, typename TypelistT,396,12933
    apply_generator(398,13006
      typedef typename TypelistT::root 400,13062
      typedef typename TypelistV::root 401,13108
  template<typename Typelist0,406,13227
    struct append407,13278
      typedef typename Typelist0::root 				root0_type;410,13315
      typedef typename Typelist1::root 				root1_type;411,13370
      typedef detail::append_<root0_type,root0_type412,13425
      typedef detail::append_<root0_type, root1_type> 		append_type;412,13425
      typedef node<typename append_type::type> 			type;415,13507
    struct append_typelist419,13610
      typedef typename Typelist_Typelist::root 		      	root_type;422,13656
      typedef detail::append_typelist_<root_type> 		append_type;423,13723
      typedef node<typename append_type::type> 			type;426,13801
  template<typename Typelist,429,13865
    struct contains430,13907
      typedef typename Typelist::root 				root_type;433,13946
	  value 438,14026
	  value = detail::contains_<root_type, T>T438,14026
	  value = detail::contains_<root_type, T>::valuevalue438,14026
  template<typename Typelist,442,14088
    struct filter443,14151
      typedef typename Typelist::root 				root_type;446,14188
      typedef detail::chain_filter_<root_type,root_type447,14241
      typedef detail::chain_filter_<root_type, Pred> 		filter_type;447,14241
      typedef node<typename filter_type::type> 	       		type;450,14322
  template<typename Typelist,453,14393
    struct at_index454,14430
      typedef typename Typelist::root 				root_type;457,14469
      typedef detail::chain_at_index_<root_type,root_type458,14522
      typedef detail::chain_at_index_<root_type, i> 		index_type;458,14522
      typedef typename index_type::type 			type;461,14601
  template<typename Typelist,464,14658
    struct transform465,14726
      typedef typename Typelist::root 				root_type;468,14766
      typedef detail::chain_transform_<root_type,root_type469,14819
      typedef detail::chain_transform_<root_type, Transform> 	transform_type;469,14819
      typedef node<typename transform_type::type> 		type;472,14910
    struct flatten476,15015
      typedef typename Typelist_Typelist::root 		      	root_type;479,15053
      typedef typename detail::chain_flatten_<root_type>::type 	flatten_type;480,15120
      typedef node<flatten_type> 				type;483,15211
    struct from_first487,15292
      typedef typename at_index<at_index490,15333
      typedef typename at_index<Typelist, 0>::type 		first_type;490,15333
      typedef node<chain<chain493,15411
      typedef node<chain<first_type, null_type> > 		type;493,15411
    struct create1497,15501
      typedef node<_GLIBCXX_TYPELIST_CHAIN1(T1)> 		type;499,15526
  template<typename T1,502,15591
    struct create2503,15628
      typedef node<_GLIBCXX_TYPELIST_CHAIN2(T1,T2)> 		type;505,15653
  template<typename T1,508,15721
  template<typename T1, typename T2,508,15721
    struct create3509,15771
      typedef node<_GLIBCXX_TYPELIST_CHAIN3(T1,T2,T3)>		type;511,15796
  template<typename T1,514,15866
  template<typename T1, typename T2,514,15866
  template<typename T1, typename T2, typename T3,514,15866
    struct create4515,15929
      typedef node<_GLIBCXX_TYPELIST_CHAIN4(T1,T2,T3,T4)>	type;517,15954
  template<typename T1,520,16026
  template<typename T1, typename T2,520,16026
  template<typename T1, typename T2, typename T3,520,16026
	   typename T4,521,16076
    struct create5522,16106
      typedef node<_GLIBCXX_TYPELIST_CHAIN5(T1,T2,T3,T4,T5)>	type;524,16131
  template<typename T1,527,16206
  template<typename T1, typename T2,527,16206
  template<typename T1, typename T2, typename T3,527,16206
	   typename T4,528,16256
	   typename T4, typename T5,528,16256
    struct create6529,16299
      typedef node<_GLIBCXX_TYPELIST_CHAIN6(T1,T2,T3,T4,T5,T6)>	type;531,16324

/usr/include/c++/13/ext/vstring.h,6175
#define _VSTRING_H 30,1183
namespace __gnu_cxx _GLIBCXX_VISIBILITY(45,1509
    class __versa_string59,1930
      typedef _Base<_CharT,_CharT62,2006
      typedef _Base<_CharT, _Traits,62,2006
      typedef _Base<_CharT, _Traits, _Alloc>                __vstring_base;62,2006
      typedef typename __vstring_base::_CharT_alloc_type    _CharT_alloc_type;63,2086
      typedef __alloc_traits<_CharT_alloc_type> _CharT_alloc_traits;64,2165
      typedef _Traits					    traits_type;68,2263
      typedef typename _Traits::char_type		    value_type;69,2306
      typedef _Alloc					    allocator_type;70,2365
      typedef typename _CharT_alloc_type::size_type	    size_type;71,2410
      typedef typename _CharT_alloc_type::difference_type   difference_type;72,2477
      typedef value_type&               	            reference;73,2554
      typedef const value_type&                             const_reference;74,2618
      typedef typename _CharT_alloc_traits::pointer	    pointer;75,2695
      typedef typename _CharT_alloc_traits::const_pointer   const_pointer;76,2760
      typedef __gnu_cxx::__normal_iterator<pointer,pointer77,2835
      typedef __gnu_cxx::__normal_iterator<pointer, __versa_string>  iterator;77,2835
      typedef __gnu_cxx::__normal_iterator<const_pointer,const_pointer78,2914
                                                            const_iterator;79,2988
      typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;80,3064
      typedef std::reverse_iterator<iterator>		    reverse_iterator;81,3140
      _M_check(89,3405
      _M_check_length(99,3670
      _M_limit(107,3933
      _M_disjunct(115,4188
      _M_ibegin(125,4533
      _M_iend(129,4635
      __versa_string(141,5006
      __versa_string(149,5295
      __versa_string(161,5683
      __versa_string(169,5996
      __versa_string(180,6409
      __versa_string(195,6981
      __versa_string(212,7652
      __versa_string(221,7983
      __versa_string(231,8388
        __versa_string(246,8909
      ~__versa_string(253,9124
      operator=(operator=260,9315
      operator=(operator=272,9706
      operator=(operator=284,9985
      operator=(operator=296,10270
      operator=(operator=307,10584
      begin(319,10848
      begin(330,11102
      end(338,11354
      end(349,11626
      rbegin(358,11956
      rbegin(367,12260
      rend(376,12594
      rend(385,12910
      cbegin(394,13183
      cend(402,13421
      crbegin(411,13737
      crend(420,14057
      size(429,14303
      length(435,14499
      max_size(440,14653
      resize(467,15822
      shrink_to_fit(473,15992
      capacity(490,16313
      reserve(511,17222
      clear(518,17378
      empty(526,17589
      at(581,19706
      at(603,20524
      front(620,20962
      { return operator[](0)operator[](0621,20985
      { return operator[](0)operator[](0629,21199
      back(644,21588
      operator+=(operator+=655,21874
      operator+=(operator+=664,22129
      operator+=(operator+=673,22374
      operator+=(operator+=686,22706
      append(696,23013
      append(713,23739
      append(725,24176
      append(738,24544
      append(755,25059
      append(765,25413
        append(784,26065
      push_back(792,26320
      assign(807,26804
      assign(823,27263
      assign(844,28011
      assign(861,28718
      assign(877,29258
      assign(894,29772
        assign(913,30432
      assign(923,30818
      insert(944,31694
      insert(966,32599
        insert(1010,34347
      insert(1024,34912
      insert(1041,35633
      insert(1064,36746
      insert(1087,37818
      insert(1106,38690
      insert(1130,39652
      insert(1149,40503
      erase(1177,41607
      erase(1194,42178
      erase(1219,43019
      pop_back(1239,43571
      replace(1261,44507
      replace(1284,45654
      replace(1312,46912
      replace(1336,47980
      replace(1360,49044
      replace(1379,49946
      replace(1402,50987
      replace(1428,52060
      replace(1453,53098
        replace(1494,54763
	  typedef typename std::__is_integer<std::__is_integer1500,55004
      replace(1509,55357
      replace(1525,55824
      replace(1541,56315
      replace(1557,56793
      replace(1586,57999
	_M_replace_dispatch(1594,58243
      swap(1640,59788
      c_str(1651,60110
      data(1661,60380
      get_allocator(1668,60566
      find(1697,61725
      find(1712,62325
      rfind(1742,63449
      rfind(1772,64680
      find_first_of(1802,65858
      find_first_of(1832,67161
      find_first_of(1851,67843
      find_last_of(1866,68474
      find_last_of(1896,69803
      find_last_of(1915,70485
      find_first_not_of(1929,71104
      find_first_not_of(1960,72456
      find_last_not_of(1992,73714
      find_last_not_of(2023,75111
      substr(2056,76437
      compare(2077,77306
    operator+(2278,86040
    operator+(2285,86404
    operator+(2292,86771
    operator+(2305,87344
    operator+(2312,87671
    operator+(2319,87994
    operator+(2326,88318
    operator==(operator==2341,88822
    operator==(operator==2357,89429
    operator==(operator==2373,89999
    operator!=(operator!=2387,90490
    operator!=(operator!=2400,91004
    operator!=(operator!=2413,91478
    operator<(2427,91966
    operator<(2440,92474
    operator<(2453,92942
    operator>(2467,93433
    operator>(2480,93939
    operator>(2493,94405
    operator<=(operator<=2507,94911
    operator<=(operator<=2520,95434
    operator<=(operator<=2533,95917
    operator>=(operator>=2547,96428
    operator>=(operator>=2560,96953
    operator>=(operator>=2573,97438
namespace std _GLIBCXX_VISIBILITY(2594,98120
    operator<<(2629,99461
namespace __gnu_cxx _GLIBCXX_VISIBILITY(2686,101772
namespace std _GLIBCXX_VISIBILITY(2908,108701
    struct hash<hash2914,108839
      operator()(operator()2918,108951
    struct hash<hash2924,109150
      operator()(operator()2928,109264
    struct hash<hash2935,109521
      operator()(operator()2939,109639
    struct hash<hash2946,109899
      operator()(operator()2950,110017

/usr/include/c++/13/ext/vstring.tcc,1333
#define _VSTRING_TCC 31,1263
namespace __gnu_cxx _GLIBCXX_VISIBILITY(39,1422
    operator+(183,6115
    operator+(196,6626
      typedef __versa_string<_CharT, _Traits, _Alloc, _Base> __string_type;200,6775
      typedef typename __string_type::size_type	201,6851
    operator+(213,7299
    operator+(226,7755
      typedef __versa_string<_CharT, _Traits, _Alloc, _Base> __string_type;230,7904
      typedef typename __string_type::size_type	231,7980
    operator+(243,8428
namespace std _GLIBCXX_VISIBILITY(547,18582
    operator>>(554,18824
      typedef basic_istream<_CharT, _Traits>            __istream_type;558,18991
      typedef typename __istream_type::ios_base 559,19063
	                                                __string_type;561,19203
      typedef typename __istream_type::int_type	562,19267
      typedef typename __string_type::size_type	563,19328
      typedef ctype<_CharT>				__ctype_type;564,19390
      typedef typename __ctype_type::ctype_base 565,19435
      typedef basic_istream<_CharT, _Traits>	        __istream_type;633,21562
      typedef typename __istream_type::ios_base 634,21631
	                                                __string_type;636,21771
      typedef typename __istream_type::int_type	637,21835
      typedef typename __string_type::size_type	638,21896

/usr/include/c++/13/ext/vstring_fwd.h,1016
#define _VSTRING_FWD_H 31,1283
namespace __gnu_cxx _GLIBCXX_VISIBILITY(41,1498
  typedef __versa_string<char>                              __vstring;57,2002
  typedef __vstring                                         __sso_string;58,2073
		 std::allocator<char>, __rc_string_base>    __rc_string;61,2205
  typedef __versa_string<wchar_t>                           __wvstring;63,2265
  typedef __wvstring                                        __wsso_string;64,2337
		 std::allocator<wchar_t>, __rc_string_base> __wrc_string;67,2475
  typedef __versa_string<char16_t>                          __u16vstring;70,2563
  typedef __u16vstring                                      __u16sso_string;71,2637
		 std::allocator<char16_t>, __rc_string_base> __u16rc_string;74,2780
  typedef __versa_string<char32_t>                          __u32vstring;76,2844
  typedef __u32vstring                                      __u32sso_string;77,2918
		 std::allocator<char32_t>, __rc_string_base> __u32rc_string;80,3061

/usr/include/c++/13/ext/vstring_util.h,1385
#define _VSTRING_UTIL_H 31,1277
namespace __gnu_cxx _GLIBCXX_VISIBILITY(49,1743
    struct __vstring_utility54,1891
	_CharT_alloc_type;57,2004
      typedef __alloc_traits<_CharT_alloc_type> _CharT_alloc_traits;58,2024
      typedef _Traits					    traits_type;60,2094
      typedef typename _Traits::char_type		    value_type;61,2137
      typedef typename _CharT_alloc_type::size_type	    size_type;62,2196
      typedef typename _CharT_alloc_type::difference_type   difference_type;63,2263
      typedef typename _CharT_alloc_traits::pointer	    pointer;64,2340
      typedef typename _CharT_alloc_traits::const_pointer   const_pointer;65,2405
      __normal_iterator<__normal_iterator69,2534
	__sso_iterator;72,2654
      __normal_iterator<__normal_iterator74,2697
	__const_sso_iterator;77,2823
      __normal_iterator<__normal_iterator81,2899
	__rc_iterator;84,3018
      __normal_iterator<__normal_iterator86,3060
	__const_rc_iterator;89,3185
	struct _Alloc_hider94,3362
	  _Alloc_hider(97,3404
	  _Alloc_hider(100,3468
	  _CharT*  _M_p;103,3555
      _S_copy(109,3716
      _S_move(118,3906
      _S_assign(127,4096
	_S_copy_chars(139,4450
      _S_copy_chars(146,4637
      _S_copy_chars(150,4787
      _S_copy_chars(155,4955
      _S_copy_chars(159,5103
      _S_copy_chars(164,5269
      _S_copy_chars(168,5392
      _S_compare(172,5526

/usr/include/c++/13/parallel/algo.h,3918
#define _GLIBCXX_PARALLEL_ALGO_H 38,1542
namespace std _GLIBCXX_VISIBILITY(61,2225
      typedef iterator_traits<_RAIter> _TraitsType;143,5057
      typedef typename _TraitsType::value_type 144,5109
      typedef typename std::iterator_traits<std::iterator_traits282,9950
      typedef typename std::iterator_traits<std::iterator_traits283,10027
      typedef typename std::iterator_traits<std::iterator_traits335,12175
      typedef typename std::iterator_traits<std::iterator_traits417,15391
      typedef typename std::iterator_traits<std::iterator_traits418,15469
      typedef typename std::iterator_traits<std::iterator_traits511,19043
      typedef typename std::iterator_traits<std::iterator_traits512,19121
      typedef typename std::iterator_traits<std::iterator_traits605,22813
      typedef typename std::iterator_traits<std::iterator_traits606,22891
      typedef typename std::iterator_traits<std::iterator_traits697,26450
      typedef typename std::iterator_traits<std::iterator_traits698,26528
      typedef iterator_traits<_RAIter> _TraitsType;744,28156
      typedef typename _TraitsType::value_type 745,28208
      typedef iterator_traits<_RAIter> _TraitsType;827,30998
      typedef typename _TraitsType::value_type 828,31050
      typedef typename _TraitsType::difference_type 829,31109
      typedef __gnu_parallel::_SequenceIndex _SequenceIndex;830,31178
      typedef iterator_traits<_RAIter> _TraitsType;894,33497
      typedef typename _TraitsType::value_type 895,33549
      typedef typename _TraitsType::difference_type 896,33608
      typedef __gnu_parallel::_SequenceIndex _SequenceIndex;897,33677
      typedef typename std::iterator_traits<std::iterator_traits963,36017
      typedef typename std::iterator_traits<std::iterator_traits964,36096
      typedef typename iterator_traits<iterator_traits1090,40880
	    _RAIter2, random_access_iterator_tag> _ItTrip;1162,43753
	    random_access_iterator_tag> _ItTrip;1244,46826
      operator()(operator()1547,57724
	  typedef typename std::iterator_traits<std::iterator_traits1606,59758
    typedef typename iterator_traits<iterator_traits1651,61081
      typedef typename iterator_traits<iterator_traits1670,61663
      typedef typename iterator_traits<iterator_traits1681,62034
      typedef typename iterator_traits<iterator_traits1691,62368
      typedef typename iterator_traits<iterator_traits1701,62712
      typedef typename iterator_traits<iterator_traits1711,63065
      typedef typename iterator_traits<iterator_traits1721,63415
      typedef typename iterator_traits<iterator_traits1731,63750
      typedef typename iterator_traits<iterator_traits1741,64094
      typedef typename iterator_traits<iterator_traits1750,64384
      typedef iterator_traits<_RAIter> _TraitsType;1778,65250
      typedef typename _TraitsType::value_type 1779,65302
      typedef typename iterator_traits<iterator_traits1799,65883
      typedef typename iterator_traits<iterator_traits1810,66268
      typedef typename iterator_traits<iterator_traits1820,66616
      typedef typename iterator_traits<iterator_traits1830,66974
      typedef typename iterator_traits<iterator_traits1840,67323
      typedef typename iterator_traits<iterator_traits1850,67681
      typedef typename std::iterator_traits<std::iterator_traits1940,71153
      typedef typename std::iterator_traits<std::iterator_traits1941,71231
      typedef typename iterator_traits<iterator_traits1983,72652
      typedef iterator_traits<_RAIter> _TraitsType;2025,74090
      typedef typename _TraitsType::value_type 2026,74142
      typedef typename iterator_traits<iterator_traits2086,76325
      typedef typename iterator_traits<iterator_traits2095,76611
      typedef typename iterator_traits<iterator_traits2175,79417
      typedef typename iterator_traits<iterator_traits2184,79703

/usr/include/c++/13/parallel/algobase.h,1479
#define _GLIBCXX_PARALLEL_ALGOBASE_H 37,1552
namespace std _GLIBCXX_VISIBILITY(45,1750
	typename std::iterator_traits<_IIter2>::value_type> _EqualTo;99,4022
	typename std::iterator_traits<_IIter2>::value_type> _EqualTo;180,7260
	typename std::iterator_traits<_IIter2>::value_type> _EqualTo;312,11696
          typedef iterator_traits<_RAIter1> _TraitsType1;378,14533
          typedef typename _TraitsType1::value_type 379,14591
          typedef iterator_traits<_RAIter2> _TraitsType2;381,14657
          typedef typename _TraitsType2::value_type 382,14715
                  _EqualFromLess<_EqualFromLess385,14816
              typedef pair<_RAIter1, _RAIter2> _SpotType;391,15045
              typedef pair<_RAIter2, _RAIter1> _SpotType;402,15566
      typedef iterator_traits<_IIter1> _TraitsType1;430,16616
      typedef typename _TraitsType1::value_type 431,16669
      typedef typename _TraitsType1::iterator_category 432,16730
      typedef iterator_traits<_IIter2> _TraitsType2;434,16806
      typedef typename _TraitsType2::value_type 435,16859
      typedef typename _TraitsType2::iterator_category 436,16920
      typedef __gnu_parallel::_Less<_ValueType1, _ValueType2> _LessType;437,16995
      typedef iterator_traits<_IIter1> _TraitsType1;459,17748
      typedef typename _TraitsType1::iterator_category 460,17801
      typedef iterator_traits<_IIter2> _TraitsType2;462,17877
      typedef typename _TraitsType2::iterator_category 463,17930

/usr/include/c++/13/parallel/algorithm,37
#define _PARALLEL_ALGORITHM 30,1201

/usr/include/c++/13/parallel/algorithmfwd.h,93
#define _GLIBCXX_PARALLEL_ALGORITHMFWD_H 30,1249
namespace std _GLIBCXX_VISIBILITY(37,1379

/usr/include/c++/13/parallel/balanced_quicksort.h,1537
#define _GLIBCXX_PARALLEL_BALANCED_QUICKSORT_H 43,1705
    struct _QSBThreadLocal65,2243
      typedef std::iterator_traits<_RAIter> _TraitsType;67,2276
      typedef typename _TraitsType::difference_type _DifferenceType;68,2333
      typedef std::pair<_RAIter,_RAIter72,2493
      typedef std::pair<_RAIter, _RAIter> _Piece;72,2493
      _Piece _M_initial;75,2590
      _RestrictedBoundedConcurrentQueue<_Piece> _M_leftover_parts;78,2657
      _ThreadIndex _M_num_threads;81,2791
      volatile _DifferenceType* _M_elements_leftover;84,2899
      _Piece _M_global;87,3005
      _QSBThreadLocal(91,3126
      typedef std::iterator_traits<_RAIter> _TraitsType;108,3784
      typedef typename _TraitsType::value_type 109,3841
      typedef typename _TraitsType::difference_type 110,3900
      typedef std::iterator_traits<_RAIter> _TraitsType;180,6374
      typedef typename _TraitsType::value_type 181,6431
      typedef typename _TraitsType::difference_type 182,6490
      typedef std::iterator_traits<_RAIter> _TraitsType;254,8497
      typedef typename _TraitsType::value_type 255,8554
      typedef typename _TraitsType::difference_type 256,8613
      typedef std::pair<_RAIter, _RAIter> _Piece;257,8682
      typedef std::iterator_traits<_RAIter> _TraitsType;438,14887
      typedef typename _TraitsType::value_type 439,14944
      typedef typename _TraitsType::difference_type 440,15003
      typedef std::pair<_RAIter, _RAIter> _Piece;441,15072
      typedef _QSBThreadLocal<_RAIter> _TLSType;443,15123

/usr/include/c++/13/parallel/base.h,3368
#define _GLIBCXX_PARALLEL_BASE_H 33,1264
namespace std _GLIBCXX_VISIBILITY(48,1624
namespace __gnu_sequential 67,2006
namespace __gnu_parallel78,2188
  __get_max_threads(85,2470
  __is_parallel(93,2596
    __rd_log2(102,2863
  __encode2(119,3354
  __decode2(133,3912
    min(144,4246
    max(150,4414
  template<typename _T1,156,4590
  template<typename _T1, typename _T2,156,4590
    class _EqualFromLess 157,4648
      _Compare& _M_comp;160,4738
      _EqualFromLess(163,4776
      bool operator()(operator()165,4838
  template<typename _Predicate,172,5054
    class __unary_negate173,5110
      _Predicate _M_pred;177,5210
      __unary_negate(181,5264
      operator()(operator()184,5339
  template<typename _Operation,190,5513
  template<typename _Operation, typename _FirstArgumentType,190,5513
	   typename _SecondArgumentType,191,5574
    class __binder1st192,5630
      _Operation _M_op;196,5740
      _FirstArgumentType _M_value;197,5764
      __binder1st(200,5812
      operator()(operator()204,5941
      operator()(operator()210,6149
  template<typename _Operation,218,6345
  template<typename _Operation, typename _FirstArgumentType,218,6345
	   typename _SecondArgumentType,219,6406
    class __binder2nd220,6462
      _Operation _M_op;224,6571
      _SecondArgumentType _M_value;225,6595
      __binder2nd(228,6644
      operator()(operator()232,6774
      operator()(operator()238,6987
  template<typename _T1,243,7150
    struct _EqualTo 244,7189
      bool operator()(operator()246,7254
  template<typename _T1,251,7425
    struct _Less 252,7464
      operator()(operator()255,7537
      operator()(operator()259,7636
    : public std::less<std::less266,7844
  template<typename _Tp1,269,7948
  template<typename _Tp1, typename _Tp2,269,7948
  template<typename _Tp1, typename _Tp2, typename _Result269,7948
    struct _Plus : public std::binary_function<_Tp1, _Tp2,272,8076
      operator()(operator()275,8164
    : public std::plus<std::plus282,8375
  template<typename _Tp1,285,8485
  template<typename _Tp1, typename _Tp2,285,8485
  template<typename _Tp1, typename _Tp2, typename _Result285,8485
    struct _Multiplies : public std::binary_function<_Tp1, _Tp2,288,8613
      operator()(operator()291,8707
    : public std::multiplies<std::multiplies298,8930
  template<typename _Tp,305,9208
    class _PseudoSequenceIterator306,9257
      typedef _DifferenceTp _DifferenceType;309,9309
      _PseudoSequenceIterator(311,9355
      operator++(316,9532
      operator++(324,9658
      operator*(328,9750
      operator==(operator==336,9894
      operator!=(operator!=340,10000
      operator-(344,10117
      const _Tp& _M_val;348,10223
      _DifferenceType _M_pos;349,10248
  template<typename _Tp,358,10548
    class _PseudoSequence359,10597
      typedef _DifferenceTp _DifferenceType;362,10641
      typedef _PseudoSequenceIterator<_Tp,_Tp365,10752
      typedef _PseudoSequenceIterator<_Tp, uint64_t> iterator;365,10752
      _PseudoSequence(371,10957
      begin(376,11120
      end(381,11228
      const _Tp& _M_val;385,11305
      _DifferenceType _M_count;386,11330
  template<typename _RAIter,396,11615
    __median_of_three_iterators(398,11675
# define _GLIBCXX_PARALLEL_ASSERT(423,12167
# define _GLIBCXX_PARALLEL_ASSERT(426,12279

/usr/include/c++/13/parallel/basic_iterator.h,52
#define _GLIBCXX_PARALLEL_BASIC_ITERATOR_H 34,1348

/usr/include/c++/13/parallel/checkers.h,46
#define _GLIBCXX_PARALLEL_CHECKERS_H 33,1303

/usr/include/c++/13/parallel/compatibility.h,72
#define _GLIBCXX_PARALLEL_COMPATIBILITY_H 35,1384
__attribute(49,1756

/usr/include/c++/13/parallel/compiletime_settings.h,296
#define _GLIBCXX_VERBOSE_LEVEL 37,1453
#define _GLIBCXX_CALL(44,1672
#define _GLIBCXX_CALL(47,1740
#define _GLIBCXX_SCALE_DOWN_FPU 55,2088
#define _GLIBCXX_PARALLEL_ASSERTIONS 61,2283
#define _GLIBCXX_RANDOM_SHUFFLE_CONSIDER_L1 68,2560
#define _GLIBCXX_RANDOM_SHUFFLE_CONSIDER_TLB 74,2817

/usr/include/c++/13/parallel/equally_split.h,51
#define _GLIBCXX_PARALLEL_EQUALLY_SPLIT_H 32,1242

/usr/include/c++/13/parallel/features.h,439
#define _GLIBCXX_PARALLEL_FEATURES_H 35,1355
#define _GLIBCXX_MERGESORT 41,1553
#define _GLIBCXX_QUICKSORT 48,1749
#define _GLIBCXX_BAL_QUICKSORT 55,1968
#define _GLIBCXX_FIND_GROWING_BLOCKS 61,2161
#define _GLIBCXX_FIND_CONSTANT_SIZE_BLOCKS 67,2370
#define _GLIBCXX_FIND_EQUAL_SPLIT 74,2608
#define _GLIBCXX_TREE_INITIAL_SPLITTING 83,2879
#define _GLIBCXX_TREE_DYNAMIC_BALANCING 91,3155
#define _GLIBCXX_TREE_FULL_COPY 100,3458

/usr/include/c++/13/parallel/find.h,603
#define _GLIBCXX_PARALLEL_FIND_H 34,1337
      typedef std::iterator_traits<_RAIter1> _TraitsType;103,3691
      typedef typename _TraitsType::difference_type 104,3749
      typedef typename _TraitsType::value_type 105,3818
      typedef std::iterator_traits<_RAIter1> _TraitsType;191,6521
      typedef typename _TraitsType::difference_type 192,6579
      typedef typename _TraitsType::value_type 193,6648
      typedef std::iterator_traits<_RAIter1> _TraitsType;320,10879
      typedef typename _TraitsType::difference_type 321,10937
      typedef typename _TraitsType::value_type 322,11006

/usr/include/c++/13/parallel/find_selectors.h,1633
#define _GLIBCXX_PARALLEL_FIND_SELECTORS_H 34,1349
  struct __generic_find_selector43,1591
  struct __find_if_selector 50,1742
    template<typename _RAIter1,57,1995
    template<typename _RAIter1, typename _RAIter2,57,1995
      operator(60,2087
    template<typename _RAIter1,69,2463
    template<typename _RAIter1, typename _RAIter2,69,2463
      std::pair<std::pair71,2543
      _M_sequential_algorithm(72,2580
  struct __adjacent_find_selector 80,2930
    template<typename _RAIter1,87,3192
    template<typename _RAIter1, typename _RAIter2,87,3192
      operator()(operator()90,3284
    template<typename _RAIter1,102,3732
    template<typename _RAIter1, typename _RAIter2,102,3732
      std::pair<std::pair104,3812
      _M_sequential_algorithm(105,3848
  struct __mismatch_selector 119,4299
    template<typename _RAIter1,127,4566
    template<typename _RAIter1, typename _RAIter2,127,4566
      operator()(operator()130,4658
    template<typename _RAIter1,140,5052
    template<typename _RAIter1, typename _RAIter2,140,5052
      std::pair<std::pair142,5132
      _M_sequential_algorithm(143,5168
    struct __find_first_of_selector 153,5460
      _FIterator _M_begin;155,5535
      _FIterator _M_end;156,5562
      explicit __find_first_of_selector(158,5588
      template<typename _RAIter1,166,5911
      template<typename _RAIter1, typename _RAIter2,166,5911
        operator()(operator()169,6001
      template<typename _RAIter1,183,6561
      template<typename _RAIter1, typename _RAIter2,183,6561
        std::pair<std::pair185,6638
        _M_sequential_algorithm(186,6676

/usr/include/c++/13/parallel/for_each.h,46
#define _GLIBCXX_PARALLEL_FOR_EACH_H 36,1426

/usr/include/c++/13/parallel/for_each_selectors.h,1986
#define _GLIBCXX_PARALLEL_FOR_EACH_SELECTORS_H 34,1394
    struct __generic_for_each_selector42,1608
      _It _M_finish_iterator;47,1780
    struct __for_each_selector 52,1885
        operator(59,2126
    struct __generate_selector 68,2303
        operator(75,2544
    struct __fill_selector 84,2720
        operator(91,2969
    struct __transform1_selector 100,3185
        operator(107,3428
    struct __transform2_selector 116,3657
        operator(123,3900
    struct __replace_selector 132,4131
      const _Tp& __new_val;135,4252
      __replace_selector(140,4378
      operator(146,4588
    struct __replace_if_selector 156,4816
      const _Tp& __new_val;159,4940
      __replace_if_selector(164,5067
      operator(170,5276
    struct __count_selector 180,5488
        operator(188,5790
    struct __count_if_selector 194,5969
        operator(202,6262
    struct __accumulate_selector 208,6417
        operator()(operator()216,6748
    struct __inner_product_selector 222,6919
      _It  __begin1_iterator;225,7057
      _It2 __begin2_iterator;228,7143
      __inner_product_selector(234,7335
        operator()(operator()243,7685
    struct __identity_selector 253,8038
        operator()(operator()261,8322
    struct __adjacent_difference_selector269,8511
        operator()(operator()274,8647
  struct _Nothing288,9046
      operator()(operator()294,9191
  struct _DummyReduct298,9277
    operator()(operator()301,9312
    struct __min_element_reduct307,9495
      _Compare& __comp;309,9533
      __min_element_reduct(312,9573
      operator()(operator()315,9644
    struct __max_element_reduct321,9861
      _Compare& __comp;323,9899
      __max_element_reduct(326,9939
      operator()(operator()329,10010
    struct __accumulate_binop_reduct335,10192
      _BinOp& __binop;337,10235
      __accumulate_binop_reduct(340,10274
      template<typename _Result,342,10339
        operator()(operator()344,10406

/usr/include/c++/13/parallel/iterator.h,1584
#define _GLIBCXX_PARALLEL_ITERATOR_H 33,1302
    class _IteratorPair 45,1639
      typedef std::pair<_Iterator1,_Iterator148,1725
      typedef std::pair<_Iterator1, _Iterator2> _Base;48,1725
      typedef _IteratorCategory iterator_category;51,1793
      typedef void value_type;52,1844
      typedef std::iterator_traits<_Iterator1> _TraitsType;54,1876
      typedef typename _TraitsType::difference_type difference_type;55,1936
      typedef _IteratorPair* pointer;56,2005
      typedef _IteratorPair& reference;57,2043
      _IteratorPair(59,2084
      _IteratorPair(61,2111
      operator++(66,2278
      operator++(75,2445
      operator--(80,2587
      operator--(89,2754
      operator _Iterator2(operator _Iterator293,2868
      operator=(operator=97,2956
      operator+(105,3139
      operator-(110,3298
    class _IteratorTriple120,3637
      typedef _IteratorCategory iterator_category;123,3681
      typedef void value_type;124,3732
                                                            difference_type;126,3836
      typedef _IteratorTriple* pointer;127,3913
      typedef _IteratorTriple& reference;128,3953
      _Iterator1 _M_first;130,3996
      _Iterator2 _M_second;131,4023
      _Iterator3 _M_third;132,4051
      _IteratorTriple(134,4079
      _IteratorTriple(136,4108
      operator++(146,4393
      operator++(156,4574
      operator--(161,4724
      operator--(171,4905
      operator _Iterator3(operator _Iterator3175,5025
      operator=(operator=179,5110
      operator+(188,5332
      operator-(193,5528

/usr/include/c++/13/parallel/list_partition.h,52
#define _GLIBCXX_PARALLEL_LIST_PARTITION_H 34,1358

/usr/include/c++/13/parallel/losertree.h,3993
#define _GLIBCXX_PARALLEL_LOSERTREE_H 33,1276
    class _LoserTreeBase55,1898
      struct _Loser59,2013
	bool _M_sup;62,2103
	int _M_source;64,2168
	_Tp _M_key;66,2240
      unsigned int _M_ik,69,2263
      unsigned int _M_ik, _M_k,69,2263
      unsigned int _M_ik, _M_k, _M_offset;69,2263
      unsigned int _M_log_k;72,2332
      _Loser* _M_losers;75,2405
      _Compare _M_comp;78,2468
      bool _M_first_insert;85,2646
      _LoserTreeBase(94,2849
      ~_LoserTreeBase(118,3424
      __insert_start(134,3910
      int __get_min_source(155,4469
    class _LoserTree169,4884
      typedef _LoserTreeBase<_Tp,_Tp172,4954
      typedef _LoserTreeBase<_Tp, _Compare> _Base;172,4954
      using _Base::_M_k;173,5005
      using _Base::_M_comp;174,5030
      using _Base::_M_losers;175,5058
      using _Base::_M_first_insert;176,5088
      _LoserTree(179,5137
      __init_winner(184,5262
      void __init(210,5852
      __delete_min_insert(222,6228
      typedef _LoserTreeBase<_Tp, _Compare> _Base;264,7532
    class _LoserTreePointerBase357,10021
      struct _Loser361,10144
	bool _M_sup;363,10172
	int _M_source;364,10186
	const _Tp* _M_keyp;365,10202
      unsigned int _M_ik,368,10233
      unsigned int _M_ik, _M_k,368,10233
      unsigned int _M_ik, _M_k, _M_offset;368,10233
      _Loser* _M_losers;369,10276
      _Compare _M_comp;370,10301
      _LoserTreePointerBase(373,10338
      ~_LoserTreePointerBase(387,10702
      int __get_min_source(390,10764
      void __insert_start(393,10835
    class _LoserTreePointer409,11298
      typedef _LoserTreePointerBase<_Tp,_Tp412,11382
      typedef _LoserTreePointerBase<_Tp, _Compare> _Base;412,11382
      using _Base::_M_k;413,11440
      using _Base::_M_comp;414,11465
      using _Base::_M_losers;415,11493
      _LoserTreePointer(418,11536
      __init_winner(423,11694
      void __init(449,12288
      void __delete_min_insert(452,12363
      typedef _LoserTreePointerBase<_Tp, _Compare> _Base;494,13671
    class _LoserTreeUnguardedBase574,15889
      struct _Loser577,15944
	int _M_source;579,15972
	_Tp _M_key;580,15988
      unsigned int _M_ik,583,16011
      unsigned int _M_ik, _M_k,583,16011
      unsigned int _M_ik, _M_k, _M_offset;583,16011
      _Loser* _M_losers;584,16054
      _Compare _M_comp;585,16079
      _LoserTreeUnguardedBase(588,16116
      ~_LoserTreeUnguardedBase(613,16856
      __get_min_source(621,17029
      __insert_start(631,17257
    class _LoserTreeUnguarded646,17692
      typedef _LoserTreeUnguardedBase<_Tp,_Tp649,17780
      typedef _LoserTreeUnguardedBase<_Tp, _Compare> _Base;649,17780
      using _Base::_M_k;650,17840
      using _Base::_M_comp;651,17865
      using _Base::_M_losers;652,17893
      _LoserTreeUnguarded(655,17934
      __init_winner(661,18136
      __init(686,18669
      __delete_min_insert(700,19028
      typedef _LoserTreeUnguardedBase<_Tp, _Compare> _Base;737,20123
    class _LoserTreePointerUnguardedBase828,22522
      struct _Loser831,22584
	int _M_source;833,22612
	const _Tp* _M_keyp;834,22628
      unsigned int _M_ik,837,22659
      unsigned int _M_ik, _M_k,837,22659
      unsigned int _M_ik, _M_k, _M_offset;837,22659
      _Loser* _M_losers;838,22702
      _Compare _M_comp;839,22727
      _LoserTreePointerUnguardedBase(843,22765
      ~_LoserTreePointerUnguardedBase(862,23276
      __get_min_source(866,23357
      __insert_start(876,23585
    class _LoserTreePointerUnguarded891,24020
      typedef _LoserTreePointerUnguardedBase<_Tp,_Tp894,24122
      typedef _LoserTreePointerUnguardedBase<_Tp, _Compare> _Base;894,24122
      using _Base::_M_k;895,24189
      using _Base::_M_comp;896,24214
      using _Base::_M_losers;897,24242
      _LoserTreePointerUnguarded(900,24285
      __init_winner(906,24501
      __init(931,25038
      __delete_min_insert(943,25305
      typedef _LoserTreePointerUnguardedBase<_Tp, _Compare> _Base;980,26425

/usr/include/c++/13/parallel/merge.h,565
#define _GLIBCXX_PARALLEL_MERGE_H 33,1278
      typedef _DifferenceTp _DifferenceType;62,2374
      typedef _DifferenceTp _DifferenceType;110,4128
      typedef typename std::iterator_traits<std::iterator_traits111,4173
      typedef typename std::iterator_traits<std::iterator_traits113,4260
          std::iterator_traits<std::iterator_traits230,8703
      typedef typename std::iterator_traits<std::iterator_traits231,8768
      typedef typename std::iterator_traits<std::iterator_traits233,8892
      typedef typename std::pair<std::pair235,8990

/usr/include/c++/13/parallel/multiseq_selection.h,905
#define _GLIBCXX_PARALLEL_MULTISEQ_SELECTION_H 42,1662
    class _Lexicographic53,1933
      _Compare& _M_comp;58,2065
      _Lexicographic(61,2103
      operator(64,2176
    class _LexicographicReverse 80,2647
      _Compare& _M_comp;83,2744
      _LexicographicReverse(86,2782
      operator(89,2862
      typedef typename std::iterator_traits<std::iterator_traits132,4693
      typedef typename std::iterator_traits<std::iterator_traits134,4784
      typedef typename std::iterator_traits<std::iterator_traits136,4875
      typedef typename std::iterator_traits<std::iterator_traits138,4973
#define __S(200,7087
      typedef typename std::iterator_traits<std::iterator_traits394,13992
      typedef typename std::iterator_traits<std::iterator_traits396,14083
      typedef typename std::iterator_traits<std::iterator_traits398,14174
#define __S(451,15934
#undef __S642,22009

/usr/include/c++/13/parallel/multiway_merge.h,4882
#define _GLIBCXX_PARALLEL_MULTIWAY_MERGE_H40,1519
#define _GLIBCXX_PARALLEL_LENGTH(54,1885
    class _GuardedIterator73,2571
      _RAIter _M_current;77,2666
      _RAIter _M_end;80,2743
      _Compare& __comp;83,2796
      _GuardedIterator(91,3103
      _GuardedIterator<_RAIter,_RAIter97,3313
      operator*(107,3559
      operator _RAIter(operator _RAIter112,3698
      operator<(120,3965
      operator<=(operator<=135,4578
    class _UnguardedIterator147,5038
      _RAIter _M_current;151,5135
      _Compare& __comp;153,5191
      _UnguardedIterator(160,5462
      _UnguardedIterator<_UnguardedIterator167,5683
      operator++(168,5728
      operator*(177,5931
      operator _RAIter(operator _RAIter182,6070
      operator<(190,6339
      operator<=(operator<=202,6752
      typedef _DifferenceTp _DifferenceType;248,8441
      typedef typename std::iterator_traits<std::iterator_traits250,8487
      typedef typename std::iterator_traits<std::iterator_traits253,8585
#define _GLIBCXX_PARALLEL_MERGE_3_CASE(290,9451
#undef _GLIBCXX_PARALLEL_MERGE_3_CASE308,10360
      typedef _DifferenceTp _DifferenceType;366,12345
      typedef typename std::iterator_traits<std::iterator_traits368,12391
      typedef typename std::iterator_traits<std::iterator_traits371,12489
#define _GLIBCXX_PARALLEL_DECISION(380,12861
#define _GLIBCXX_PARALLEL_MERGE_4_CASE(412,13828
#undef _GLIBCXX_PARALLEL_MERGE_4_CASE453,16103
#undef _GLIBCXX_PARALLEL_DECISION454,16141
      typedef _DifferenceTp _DifferenceType;498,17539
      typedef typename std::iterator_traits<std::iterator_traits499,17584
      typedef typename std::iterator_traits<std::iterator_traits501,17676
      typedef typename std::iterator_traits<std::iterator_traits504,17774
      typedef _DifferenceTp _DifferenceType;584,20321
      typedef typename std::iterator_traits<std::iterator_traits586,20367
      typedef typename std::iterator_traits<std::iterator_traits588,20459
      typedef typename std::iterator_traits<std::iterator_traits591,20557
      typedef _DifferenceTp _DifferenceType;673,22981
      typedef std::iterator_traits<_RAIterIterator> _TraitsType;674,23026
      typedef typename std::iterator_traits<std::iterator_traits675,23091
      typedef typename std::iterator_traits<std::iterator_traits678,23189
    struct _LoserTreeTraits731,25003
    struct __multiway_merge_3_variant_sentinel_switch752,25626
      operator()(operator()755,25701
      operator()(operator()777,26369
    struct __multiway_merge_4_variant_sentinel_switch795,26926
      operator()(operator()798,27001
      operator()(operator()820,27669
    struct __multiway_merge_k_variant_sentinel_switch837,28171
      operator()(operator()840,28246
	typedef typename std::iterator_traits<std::iterator_traits848,28547
	typedef typename std::iterator_traits<std::iterator_traits851,28644
      operator()(operator()878,29467
	typedef typename std::iterator_traits<std::iterator_traits886,29770
	typedef typename std::iterator_traits<std::iterator_traits889,29867
      typedef _DifferenceTp _DifferenceType;930,31380
      typedef typename std::iterator_traits<std::iterator_traits931,31425
      typedef typename std::iterator_traits<std::iterator_traits933,31517
      typedef typename std::iterator_traits<std::iterator_traits936,31615
    struct _SamplingSorter1007,33856
      operator()(operator()1010,33900
      operator()(operator()1023,34322
      typedef typename std::iterator_traits<std::iterator_traits1042,34962
      typedef typename std::iterator_traits<std::iterator_traits1044,35054
      typedef typename std::iterator_traits<std::iterator_traits1047,35152
      typedef typename std::iterator_traits<std::iterator_traits1127,37946
      typedef typename std::iterator_traits<std::iterator_traits1129,38038
	typedef _DifferenceTp _DifferenceType;1239,41474
        typedef typename std::iterator_traits<std::iterator_traits1240,41514
	typedef typename std::iterator_traits<std::iterator_traits1242,41610
          std::iterator_traits<std::iterator_traits1246,41739
	typedef std::pair<_RAIter1, _RAIter1> seq_type;1249,41841
      typedef _DifferenceTp _DifferenceType;1424,47565
      typedef _DifferenceTp _DifferenceType;1450,48350
      typedef _DifferenceTp _DifferenceType;1493,49950
      typedef _DifferenceTp _DifferenceType;1565,52550
      typedef _DifferenceTp _DifferenceType;1591,53352
      typedef _DifferenceTp _DifferenceType;1634,54946
      typedef _DifferenceTp _DifferenceType;1788,60595
      typedef _DifferenceTp _DifferenceType;1814,61419
      typedef _DifferenceTp _DifferenceType;1857,63036
      typedef _DifferenceTp _DifferenceType;1935,65769
      typedef _DifferenceTp _DifferenceType;1961,66581
      typedef _DifferenceTp _DifferenceType;2005,68206

/usr/include/c++/13/parallel/multiway_mergesort.h,1957
#define _GLIBCXX_PARALLEL_MULTIWAY_MERGESORT_H 33,1293
    struct _Piece46,1598
      typedef _DifferenceTp _DifferenceType;48,1622
      _DifferenceType _M_begin;51,1710
      _DifferenceType _M_end;54,1783
    struct _PMWMSSortingData61,1943
      typedef std::iterator_traits<_RAIter> _TraitsType;63,1978
      typedef typename _TraitsType::value_type _ValueType;64,2035
      typedef typename _TraitsType::difference_type _DifferenceType;65,2094
      _ThreadIndex _M_num_threads;68,2212
      _RAIter _M_source;71,2283
      _DifferenceType* _M_starts;74,2356
      _ValueType** _M_temporary;77,2437
      _ValueType* _M_samples;80,2500
      _DifferenceType* _M_offsets;83,2590
      std::vector<_Piece<_DifferenceType> >* _M_pieces;86,2694
      typedef std::iterator_traits<_RAIter> _TraitsType;100,3131
      typedef typename _TraitsType::value_type 101,3188
      typedef _DifferenceTp _DifferenceType;102,3247
    struct _SplitConsistently122,3895
      operator()(operator()131,4158
      operator()(operator()190,5957
	typedef std::iterator_traits<_RAIter> _TraitsType;197,6158
	typedef typename _TraitsType::value_type 198,6210
	typedef typename _TraitsType::difference_type 199,6264
    struct __possibly_stable_sort248,7729
      void operator()(operator()254,7886
      void operator()(operator()262,8173
    struct __possibly_stable_multiway_merge270,8450
      void operator()(operator()278,8706
      void operator()(operator()292,9224
      typedef std::iterator_traits<_RAIter> _TraitsType;311,9899
      typedef typename _TraitsType::value_type 312,9956
      typedef typename _TraitsType::difference_type 313,10015
      typedef _ValueType* _SortingPlacesIterator;323,10348
        _SeqVector;361,11802
      typedef std::iterator_traits<_RAIter> _TraitsType;401,13025
      typedef typename _TraitsType::value_type 402,13082
      typedef typename _TraitsType::difference_type 403,13141

/usr/include/c++/13/parallel/numeric,3056
#define _GLIBCXX_PARALLEL_NUMERIC_H 39,1535
namespace std _GLIBCXX_VISIBILITY(49,1795
      typedef std::iterator_traits<_IIter> _IteratorTraits;119,4531
      typedef typename _IteratorTraits::value_type 120,4591
      typedef typename _IteratorTraits::iterator_category 121,4654
      typedef std::iterator_traits<_IIter> _IteratorTraits;132,5009
      typedef typename _IteratorTraits::value_type 133,5069
      typedef typename _IteratorTraits::iterator_category 134,5132
      typedef iterator_traits<_IIter> _IteratorTraits;147,5605
      typedef typename _IteratorTraits::iterator_category 148,5660
      typedef iterator_traits<_IIter> _IteratorTraits;158,6055
      typedef typename _IteratorTraits::iterator_category 159,6110
      typedef iterator_traits<_IIter1> _TraitsType1;239,9547
      typedef typename _TraitsType1::iterator_category 240,9600
      typedef iterator_traits<_IIter2> _TraitsType2;242,9676
      typedef typename _TraitsType2::iterator_category 243,9729
      typedef iterator_traits<_IIter1> _TraitsType1;258,10331
      typedef typename _TraitsType1::iterator_category 259,10384
      typedef iterator_traits<_IIter2> _TraitsType2;261,10460
      typedef typename _TraitsType2::iterator_category 262,10513
      typedef iterator_traits<_IIter1> _TraitsType1;276,11017
      typedef typename _TraitsType1::value_type 277,11070
      typedef iterator_traits<_IIter2> _TraitsType2;278,11131
      typedef typename _TraitsType2::value_type 279,11184
        __gnu_parallel::_Multiplies<__gnu_parallel::_Multiplies282,11269
      typedef iterator_traits<_IIter1> _TraitsType1;296,11885
      typedef typename _TraitsType1::value_type 297,11938
      typedef iterator_traits<_IIter2> _TraitsType2;298,11999
      typedef typename _TraitsType2::value_type 299,12052
        __gnu_parallel::_Multiplies<__gnu_parallel::_Multiplies302,12137
      typedef typename iterator_traits<iterator_traits359,14601
      typedef iterator_traits<_IIter> _ITraitsType;371,15078
      typedef typename _ITraitsType::iterator_category 372,15130
      typedef iterator_traits<_OutputIterator> _OTraitsType;374,15206
      typedef typename _OTraitsType::iterator_category 375,15267
            random_access_iterator_tag> _ItTrip;429,17536
      typedef iterator_traits<_IIter> _TraitsType;453,18606
      typedef typename _TraitsType::value_type 454,18657
      typedef iterator_traits<_IIter> _TraitsType;465,19029
      typedef typename _TraitsType::value_type 466,19080
      typedef iterator_traits<_IIter> _ITraitsType;478,19568
      typedef typename _ITraitsType::iterator_category 479,19620
      typedef iterator_traits<_OutputIterator> _OTraitsType;481,19696
      typedef typename _OTraitsType::iterator_category 482,19757
      typedef iterator_traits<_IIter> _ITraitsType;497,20236
      typedef typename _ITraitsType::iterator_category 498,20288
      typedef iterator_traits<_OutputIterator> _OTraitsType;500,20364
      typedef typename _OTraitsType::iterator_category 501,20425

/usr/include/c++/13/parallel/numericfwd.h,91
#define _GLIBCXX_PARALLEL_NUMERICFWD_H 30,1243
namespace std _GLIBCXX_VISIBILITY(37,1371

/usr/include/c++/13/parallel/omp_loop.h,120
#define _GLIBCXX_PARALLEL_OMP_LOOP_H 34,1327
      typedef typename std::iterator_traits<std::iterator_traits73,2743

/usr/include/c++/13/parallel/omp_loop_static.h,127
#define _GLIBCXX_PARALLEL_OMP_LOOP_STATIC_H 34,1364
      typedef typename std::iterator_traits<std::iterator_traits73,2803

/usr/include/c++/13/parallel/par_loop.h,172
#define _GLIBCXX_PARALLEL_PAR_LOOP_H 34,1324
      typedef std::iterator_traits<_RAIter> _TraitsType;72,2747
      typedef typename _TraitsType::difference_type 73,2804

/usr/include/c++/13/parallel/parallel.h,46
#define _GLIBCXX_PARALLEL_PARALLEL_H 34,1333

/usr/include/c++/13/parallel/partial_sum.h,414
#define _GLIBCXX_PARALLEL_PARTIAL_SUM_H 34,1317
      typedef std::iterator_traits<_IIter> _TraitsType;94,3220
      typedef typename _TraitsType::value_type 95,3276
      typedef typename _TraitsType::difference_type 96,3335
      typedef std::iterator_traits<_IIter> _TraitsType;210,6878
      typedef typename _TraitsType::value_type 211,6934
      typedef typename _TraitsType::difference_type 212,6993

/usr/include/c++/13/parallel/partition.h,487
#define _GLIBCXX_PARALLEL_PARTITION_H 34,1355
#define _GLIBCXX_VOLATILE 43,1623
      typedef std::iterator_traits<_RAIter> _TraitsType;59,2330
      typedef typename _TraitsType::value_type 60,2387
      typedef typename _TraitsType::difference_type 61,2446
      typedef std::iterator_traits<_RAIter> _TraitsType;335,11372
      typedef typename _TraitsType::value_type 336,11429
      typedef typename _TraitsType::difference_type 337,11488
#undef _GLIBCXX_VOLATILE432,14892

/usr/include/c++/13/parallel/queue.h,463
#define _GLIBCXX_PARALLEL_QUEUE_H 33,1267
#define _GLIBCXX_VOLATILE 40,1476
    class _RestrictedBoundedConcurrentQueue52,1982
      _Tp* _M_base;56,2107
      _SequenceIndex _M_max_size;59,2203
      _GLIBCXX_VOLATILE _CASable _M_borders;63,2348
      _RestrictedBoundedConcurrentQueue(68,2551
      ~_RestrictedBoundedConcurrentQueue(77,2836
      push_front(83,3051
      pop_front(100,3736
      pop_back(127,4649
#undef _GLIBCXX_VOLATILE153,5477

/usr/include/c++/13/parallel/quicksort.h,599
#define _GLIBCXX_PARALLEL_QUICKSORT_H 33,1307
      typedef std::iterator_traits<_RAIter> _TraitsType;58,2242
      typedef typename _TraitsType::value_type 59,2299
      typedef typename _TraitsType::difference_type 60,2358
      typedef std::iterator_traits<_RAIter> _TraitsType;105,3954
      typedef typename _TraitsType::value_type 106,4011
      typedef typename _TraitsType::difference_type 107,4070
      typedef std::iterator_traits<_RAIter> _TraitsType;160,5591
      typedef typename _TraitsType::value_type 161,5648
      typedef typename _TraitsType::difference_type 162,5707

/usr/include/c++/13/parallel/random_number.h,574
#define _GLIBCXX_PARALLEL_RANDOM_NUMBER_H 33,1308
  class _RandomNumber42,1521
    std::tr1::mt19937   _M_mt;45,1558
    uint64_t            _M_supremum;46,1589
    uint64_t            _M_rand_sup;47,1626
    double              _M_supremum_reciprocal;48,1663
    double              _M_rand_sup_reciprocal;49,1711
    uint64_t              __cache;52,1823
    int __bits_left;55,1879
    __scale_down(58,1925
    _RandomNumber(74,2381
    _RandomNumber(85,2867
    operator()(operator()94,3294
    operator()(operator()100,3505
    __genrand_bits(109,3823

/usr/include/c++/13/parallel/random_shuffle.h,1571
#define _GLIBCXX_PARALLEL_RANDOM_SHUFFLE_H 33,1305
  typedef unsigned short 47,1658
    struct _DRandomShufflingGlobalData52,1835
      typedef std::iterator_traits<_RAIter> _TraitsType;54,1880
      typedef typename _TraitsType::value_type _ValueType;55,1937
      typedef typename _TraitsType::difference_type _DifferenceType;56,1996
      _RAIter& _M_source;59,2118
      _ValueType** _M_temporaries;62,2199
      _DifferenceType** _M_dist;67,2388
      _DifferenceType* _M_starts;70,2482
      _ThreadIndex* _M_bin_proc;74,2617
      int _M_num_bins;77,2704
      int _M_num_bits;80,2791
      _DRandomShufflingGlobalData(83,2848
    struct _DRSSorterPU91,3115
      int _M_num_threads;94,3207
      _BinIndex _M_bins_begin;97,3305
      _BinIndex __bins_end;100,3406
      uint32_t _M_seed;103,3487
      _DRandomShufflingGlobalData<_RAIter>* _M_sd;106,3556
      typedef std::iterator_traits<_RAIter> _TraitsType;125,4269
      typedef typename _TraitsType::value_type 126,4326
      typedef typename _TraitsType::difference_type 127,4385
      typedef std::iterator_traits<_RAIter> _TraitsType;271,9342
      typedef typename _TraitsType::value_type 272,9399
      typedef typename _TraitsType::difference_type 273,9458
      typedef std::iterator_traits<_RAIter> _TraitsType;413,14342
      typedef typename _TraitsType::value_type 414,14399
      typedef typename _TraitsType::difference_type 415,14458
      typedef std::iterator_traits<_RAIter> _TraitsType;525,18353
      typedef typename _TraitsType::difference_type 526,18410

/usr/include/c++/13/parallel/search.h,225
#define _GLIBCXX_PARALLEL_SEARCH_H 34,1306
      typedef _DifferenceTp _DifferenceType;54,1875
      typedef std::iterator_traits<__RAIter1> _TraitsType;85,2870
      typedef typename _TraitsType::difference_type 86,2929

/usr/include/c++/13/parallel/set_operations.h,1941
#define _GLIBCXX_PARALLEL_SET_OPERATIONS_H 35,1350
    struct __symmetric_difference_func68,2071
      typedef std::iterator_traits<_IIter> _TraitsType;70,2116
      typedef typename _TraitsType::difference_type _DifferenceType;71,2172
      typedef typename std::pair<std::pair72,2241
      typedef typename std::pair<_IIter, _IIter> _IteratorPair;72,2241
      __symmetric_difference_func(74,2306
      _Compare _M_comp;76,2379
      _M_invoke(79,2426
      __count(106,3003
      __first_empty(133,3549
      __second_empty(137,3690
    struct __difference_func145,3913
      typedef std::iterator_traits<_IIter> _TraitsType;147,3948
      typedef typename _TraitsType::difference_type _DifferenceType;148,4004
      typedef typename std::pair<std::pair149,4073
      typedef typename std::pair<_IIter, _IIter> _IteratorPair;149,4073
      __difference_func(151,4138
      _Compare _M_comp;153,4201
      _M_invoke(156,4248
      __count(179,4743
      __first_empty(201,5205
      __second_empty(205,5317
    struct __intersection_func213,5540
      typedef std::iterator_traits<_IIter> _TraitsType;215,5577
      typedef typename _TraitsType::difference_type _DifferenceType;216,5633
      typedef typename std::pair<std::pair217,5702
      typedef typename std::pair<_IIter, _IIter> _IteratorPair;217,5702
      __intersection_func(219,5767
      _Compare _M_comp;221,5832
      _M_invoke(224,5879
      __count(246,6331
      __first_empty(268,6781
      __second_empty(272,6893
    struct __union_func277,7055
      _DifferenceType;280,7154
      __union_func(282,7178
      _Compare _M_comp;284,7236
      _M_invoke(287,7283
      __count(314,7881
      __first_empty(338,8388
      __second_empty(342,8529
      typedef std::iterator_traits<_IIter> _TraitsType;356,8995
      typedef typename _TraitsType::difference_type 357,9051
      typedef typename std::pair<std::pair358,9120

/usr/include/c++/13/parallel/settings.h,3411
#define _GLIBCXX_PARALLEL_SETTINGS_H 83,3575
#define _GLIBCXX_PARALLEL_CONDITION(94,3931
  struct _Settings122,4687
    _AlgorithmStrategy          algorithm_strategy;124,4710
    _SortAlgorithm              sort_algorithm;126,4767
    _PartialSumAlgorithm        partial_sum_algorithm;127,4815
    _MultiwayMergeAlgorithm     multiway_merge_algorithm;128,4870
    _FindAlgorithm              find_algorithm;129,4928
    _SplittingAlgorithm         sort_splitting;131,4977
    _SplittingAlgorithm         merge_splitting;132,5025
    _SplittingAlgorithm         multiway_merge_splitting;133,5074
    _SequenceIndex              accumulate_minimal_n;138,5208
    unsigned int                adjacent_difference_minimal_n;141,5315
    _SequenceIndex              count_minimal_n;144,5430
    _SequenceIndex              fill_minimal_n;147,5517
    double                      find_increasing_factor;150,5611
    _SequenceIndex              find_initial_block_size;153,5705
    _SequenceIndex              find_maximum_block_size;156,5800
    _SequenceIndex              find_sequential_search_size;159,5932
    _SequenceIndex              for_each_minimal_n;162,6035
    _SequenceIndex              generate_minimal_n;165,6129
    _SequenceIndex              max_element_minimal_n;168,6226
    _SequenceIndex              merge_minimal_n;171,6320
    unsigned int                merge_oversampling;174,6409
    _SequenceIndex              min_element_minimal_n;177,6506
    _SequenceIndex              multiway_merge_minimal_n;180,6609
    int                         multiway_merge_minimal_k;183,6716
    unsigned int                multiway_merge_oversampling;186,6823
    _SequenceIndex              nth_element_minimal_n;189,6929
    _SequenceIndex              partition_chunk_size;192,7019
    double                      partition_chunk_share;196,7194
    _SequenceIndex              partition_minimal_n;199,7292
    _SequenceIndex              partial_sort_minimal_n;202,7391
    float                       partial_sum_dilation;206,7559
    unsigned int                partial_sum_minimal_n;209,7658
    unsigned int                random_shuffle_minimal_n;212,7761
    _SequenceIndex              replace_minimal_n;215,7875
    _SequenceIndex              set_difference_minimal_n;218,7974
    _SequenceIndex              set_intersection_minimal_n;221,8082
    _SequenceIndex              set_symmetric_difference_minimal_n;224,8200
    _SequenceIndex              set_union_minimal_n;227,8311
    _SequenceIndex              sort_minimal_n;230,8414
    unsigned int                sort_mwms_oversampling;233,8522
    unsigned int                sort_qs_num_samples_preset;236,8647
    _SequenceIndex              sort_qsb_base_case_maximal_n;240,8853
    _SequenceIndex              transform_minimal_n;243,8972
    _SequenceIndex              unique_copy_minimal_n;246,9071
    _SequenceIndex              workstealing_chunk_size;248,9127
    unsigned long long          L1_cache_size;253,9288
    unsigned long long          L2_cache_size;256,9393
    unsigned int                TLB_size;259,9509
    unsigned int                cache_line_size;264,9708
    _SequenceIndex              qsb_steals;269,9842
    _SequenceIndex              search_minimal_n;272,9939
    float                       find_scale_factor;275,10061
    get(279,10189

/usr/include/c++/13/parallel/sort.h,227
#define _GLIBCXX_PARALLEL_SORT_H 33,1270
      typedef std::iterator_traits<_RAIter> _TraitsType;207,6517
      typedef typename _TraitsType::value_type 208,6574
      typedef typename _TraitsType::difference_type 209,6633

/usr/include/c++/13/parallel/tags.h,1433
#define _GLIBCXX_PARALLEL_TAGS_H 34,1286
  struct sequential_tag 42,1456
  struct parallel_tag46,1608
      _ThreadIndex _M_num_threads;49,1647
      parallel_tag(53,1767
      parallel_tag(58,1954
      _ThreadIndex __get_num_threads(63,2145
      void set_num_threads(73,2432
  struct default_parallel_tag 79,2625
    default_parallel_tag(81,2681
    default_parallel_tag(82,2712
  struct balanced_tag 88,2907
  struct unbalanced_tag 92,3054
  struct omp_loop_tag 96,3211
  struct omp_loop_static_tag 100,3365
  struct find_tag 104,3480
  struct exact_tag 109,3590
    exact_tag(111,3635
    exact_tag(112,3655
  struct sampling_tag 118,3826
    sampling_tag(120,3874
    sampling_tag(121,3897
  struct multiway_mergesort_tag 128,4075
    multiway_mergesort_tag(130,4133
    multiway_mergesort_tag(131,4166
  struct multiway_mergesort_exact_tag 137,4374
    multiway_mergesort_exact_tag(139,4438
    multiway_mergesort_exact_tag(140,4477
  struct multiway_mergesort_sampling_tag 146,4697
    multiway_mergesort_sampling_tag(148,4764
    multiway_mergesort_sampling_tag(149,4806
  struct quicksort_tag 155,5004
    quicksort_tag(157,5053
    quicksort_tag(158,5077
  struct balanced_quicksort_tag 164,5255
    balanced_quicksort_tag(166,5313
    balanced_quicksort_tag(167,5346
  struct growing_blocks_tag 174,5558
  struct constant_size_blocks_tag 178,5729
  struct equal_split_tag 182,5893

/usr/include/c++/13/parallel/types.h,969
#define _GLIBCXX_PARALLEL_TYPES_H 33,1279
  enum _Parallelism44,1482
      sequential,47,1532
      parallel_unbalanced,50,1603
      parallel_balanced,53,1676
      parallel_omp_loop,56,1757
      parallel_omp_loop_static,59,1837
      parallel_taskqueue62,1922
  enum _AlgorithmStrategy67,2057
      heuristic,69,2089
      force_sequential,70,2106
      force_parallel71,2130
  enum _SortAlgorithm 76,2248
      MWMS,78,2278
      QS,79,2291
      QS_BALANCED 80,2302
  enum _MultiwayMergeAlgorithm85,2417
      LOSER_TREE87,2454
  enum _PartialSumAlgorithm 91,2528
      RECURSIVE,93,2564
      LINEAR 94,2582
  enum _SplittingAlgorithm 98,2657
      SAMPLING,100,2692
      EXACT 101,2709
  enum _FindAlgorithm 106,2811
      GROWING_BLOCKS,108,2841
      CONSTANT_SIZE_BLOCKS,109,2864
      EQUAL_SPLIT 110,2893
  typedef uint64_t _SequenceIndex;117,3060
  typedef uint16_t _ThreadIndex;123,3240
  typedef int64_t _CASable;127,3369

/usr/include/c++/13/parallel/unique_copy.h,305
#define _GLIBCXX_PARALLEL_UNIQUE_COPY_H 33,1313
      typedef std::iterator_traits<_IIter> _TraitsType;56,2093
      typedef typename _TraitsType::value_type 57,2149
      typedef typename _TraitsType::difference_type 58,2208
      typedef typename std::iterator_traits<std::iterator_traits189,5906

/usr/include/c++/13/parallel/workstealing.h,478
#define _GLIBCXX_PARALLEL_WORKSTEALING_H 41,1517
#define _GLIBCXX_JOB_VOLATILE 50,1693
    struct _Job54,1816
      typedef _DifferenceTp _DifferenceType;56,1838
      _GLIBCXX_JOB_VOLATILE _DifferenceType _M_first;62,2027
      _GLIBCXX_JOB_VOLATILE _DifferenceType _M_last;67,2166
      _GLIBCXX_JOB_VOLATILE _DifferenceType _M_load;72,2338
      typedef std::iterator_traits<_RAIter> _TraitsType;108,3783
      typedef typename _TraitsType::difference_type 109,3840

/usr/include/c++/13/pstl/algorithm_fwd.h,37
#define _PSTL_ALGORITHM_FWD_H11,414

/usr/include/c++/13/pstl/algorithm_impl.h,11615
#define _PSTL_ALGORITHM_IMPL_H11,416
__brick_any_of(46,1246
__pattern_any_of(54,1567
__pattern_any_of(62,1923
__for_each_n_it_serial(78,2653
__brick_walk1(92,3118
__brick_walk1(99,3342
__pattern_walk1(107,3652
__pattern_walk1(116,4016
__pattern_walk_brick(130,4677
__pattern_walk_brick(138,4957
__brick_walk1_n(152,5630
__brick_walk1_n(160,6018
__pattern_walk1_n(168,6345
__pattern_walk1_n(176,6727
__pattern_walk_brick_n(187,7218
__pattern_walk_brick_n(195,7530
__brick_walk2(213,8369
__brick_walk2(223,8744
__brick_walk2_n(231,9107
__brick_walk2_n(241,9478
__pattern_walk2(249,9842
__pattern_walk2(257,10280
__pattern_walk2_n(273,11082
__pattern_walk2_n(282,11544
__pattern_walk2_brick(291,12063
__pattern_walk2_brick(299,12450
__pattern_walk2_brick_n(314,13207
__pattern_walk2_brick_n(329,13928
__brick_walk3(342,14553
__brick_walk3(352,15024
__pattern_walk3(361,15508
__pattern_walk3(370,16039
__brick_equal(391,17086
__brick_equal(399,17459
__pattern_equal(411,18017
__pattern_equal(421,18535
__brick_equal(444,19666
__brick_equal(452,20003
__pattern_equal(461,20456
__pattern_equal(470,20922
__brick_find_if(488,21810
__brick_find_if(496,22086
    typedef typename std::iterator_traits<std::iterator_traits499,22239
__pattern_find_if(507,22629
__pattern_find_if(516,23031
__find_subrange(540,24220
    typedef typename std::iterator_traits<std::iterator_traits544,24511
__find_subrange(596,26088
__brick_find_end(629,27362
__brick_find_end(637,27752
__pattern_find_end(646,28227
__pattern_find_end(656,28762
__brick_find_first_of(685,30278
__brick_find_first_of(693,30683
__pattern_find_first_of(702,31157
__pattern_find_first_of(712,31712
__brick_search(731,32786
__brick_search(739,33165
__pattern_search(748,33642
__pattern_search(758,34169
__brick_search_n(788,35683
__brick_search_n(796,36038
__pattern_search_n(805,36483
__pattern_search_n(815,36998
__brick_copy_n(846,38551
__brick_copy_n(853,38805
__brick_copy(864,39313
__brick_copy(872,39585
__brick_move(885,40154
__brick_move(893,40426
struct __brick_move_destroy901,40775
    template <typename _Iterator,903,40805
    operator()(operator()905,40885
    template <typename _Iterator,916,41492
    operator()(operator()918,41572
__brick_swap_ranges(936,42218
__brick_swap_ranges(944,42506
__brick_copy_if(957,43115
__brick_copy_if(965,43446
__brick_calc_mask_1(978,44023
__brick_calc_mask_1(1000,44799
__brick_copy_by_mask(1009,45226
__brick_copy_by_mask(1024,45673
__brick_partition_by_mask(1036,46213
__brick_partition_by_mask(1056,46786
__pattern_copy_if(1068,47412
__pattern_copy_if(1077,47876
    typedef typename std::iterator_traits<std::iterator_traits1080,48104
__brick_count(1114,50051
__brick_count(1122,50391
__pattern_count(1130,50747
__pattern_count(1138,51175
    typedef typename std::iterator_traits<std::iterator_traits1141,51363
__brick_unique(1158,52145
__brick_unique(1166,52420
__pattern_unique(1175,52821
__remove_elements(1185,53418
    typedef typename std::iterator_traits<std::iterator_traits1188,53580
    typedef typename std::iterator_traits<std::iterator_traits1189,53674
__pattern_unique(1268,57517
    typedef typename std::iterator_traits<std::iterator_traits1271,57720
__brick_unique_copy(1298,58760
__brick_unique_copy(1306,59112
__pattern_unique_copy(1319,59653
__brick_calc_mask_2(1327,60080
__brick_calc_mask_2(1341,60572
__pattern_unique_copy(1350,61008
    typedef typename std::iterator_traits<std::iterator_traits1354,61267
__brick_reverse(1402,63781
__brick_reverse(1409,63987
    typedef typename std::iterator_traits<std::iterator_traits1411,64109
__brick_reverse(1424,64709
__brick_reverse(1437,65149
    typedef typename std::iterator_traits<std::iterator_traits1440,65318
__pattern_reverse(1451,65850
__pattern_reverse(1460,66206
__brick_reverse_copy(1476,67011
__brick_reverse_copy(1484,67325
    typedef typename std::iterator_traits<std::iterator_traits1487,67498
    typedef typename std::iterator_traits<std::iterator_traits1488,67592
__pattern_reverse_copy(1496,68033
__pattern_reverse_copy(1504,68465
__brick_rotate(1523,69624
__brick_rotate(1536,70034
__pattern_rotate(1577,71318
__pattern_rotate(1585,71691
    typedef typename std::iterator_traits<std::iterator_traits1588,71887
__brick_rotate_copy(1651,75481
__brick_rotate_copy(1659,75811
__pattern_rotate_copy(1668,76296
__pattern_rotate_copy(1676,76742
__brick_is_partitioned(1710,78171
__brick_is_partitioned(1718,78456
    typedef typename std::iterator_traits<std::iterator_traits1721,78618
__pattern_is_partitioned(1745,79325
__pattern_is_partitioned(1753,79728
__brick_partition(1854,84326
__brick_partition(1862,84608
__pattern_partition(1871,85016
__pattern_partition(1879,85416
    struct _PartitionRange1885,85769
        _ForwardIterator __begin;1887,85802
        _ForwardIterator __pivot;1888,85836
        _ForwardIterator __end;1889,85870
__brick_stable_partition(1951,89048
__brick_stable_partition(1959,89377
__pattern_stable_partition(1968,89832
__pattern_stable_partition(1977,90311
    struct _PartitionRange1983,90732
        _BidirectionalIterator __begin;1985,90765
        _BidirectionalIterator __pivot;1986,90805
        _BidirectionalIterator __end;1987,90845
__brick_partition_copy(2033,93052
__brick_partition_copy(2041,93510
__pattern_partition_copy(2054,94172
__pattern_partition_copy(2064,94795
    typedef typename std::iterator_traits<std::iterator_traits2068,95105
    typedef std::pair<_DifferenceType, _DifferenceType> _ReturnType;2069,95204
__pattern_sort(2107,97482
__pattern_sort(2115,97845
__pattern_stable_sort(2131,98729
__pattern_stable_sort(2139,99091
__pattern_partial_sort(2155,99955
__pattern_partial_sort(2164,100371
__pattern_partial_sort_copy(2190,101492
__pattern_partial_sort_copy(2199,102010
            typedef typename std::iterator_traits<std::iterator_traits2233,103481
            typedef typename std::iterator_traits<std::iterator_traits2234,103566
__brick_adjacent_find(2276,106000
__brick_adjacent_find(2284,106352
__pattern_adjacent_find(2292,106698
__pattern_adjacent_find(2300,107159
__pattern_nth_element(2350,109607
__pattern_nth_element(2359,110013
    typedef typename std::iterator_traits<std::iterator_traits2369,110380
__brick_fill(2409,111778
__brick_fill(2417,112047
__pattern_fill(2425,112327
__pattern_fill(2433,112690
__brick_fill_n(2447,113433
__brick_fill_n(2454,113701
__pattern_fill_n(2461,113992
__pattern_fill_n(2469,114369
__brick_generate(2481,114971
__brick_generate(2489,115259
__pattern_generate(2497,115548
__pattern_generate(2505,115922
__brick_generate_n(2519,116627
__brick_generate_n(2526,116902
__pattern_generate_n(2533,117198
__pattern_generate_n(2541,117586
__brick_remove_if(2556,118345
__brick_remove_if(2564,118643
__pattern_remove_if(2576,119103
__pattern_remove_if(2584,119503
    typedef typename std::iterator_traits<std::iterator_traits2587,119711
__brick_merge(2610,120667
__brick_merge(2619,121109
__pattern_merge(2630,121687
__pattern_merge(2640,122267
__brick_inplace_merge(2658,123328
__brick_inplace_merge(2666,123656
__pattern_inplace_merge(2675,124109
__pattern_inplace_merge(2684,124577
    typedef typename std::iterator_traits<std::iterator_traits2692,124946
__pattern_includes(2728,126977
__pattern_includes(2737,127433
constexpr auto __set_algo_cut_off 2790,129754
__parallel_set_op(2795,129998
    typedef typename std::iterator_traits<std::iterator_traits2799,130301
    typedef typename std::iterator_traits<std::iterator_traits2800,130396
    struct _SetRange2802,130473
        _DifferenceType __pos,2804,130500
        _DifferenceType __pos, __len,2804,130500
        _DifferenceType __pos, __len, __buf_pos;2804,130500
        empty(2806,130562
__parallel_set_union_op(2886,134406
    typedef typename std::iterator_traits<std::iterator_traits2890,134711
__brick_set_union(3004,140313
struct __BrickCopyConstruct3012,140680
    template <typename _ForwardIterator,3014,140710
    operator()(operator()3016,140797
__brick_set_union(3024,141103
__pattern_set_union(3035,141691
__pattern_set_union(3046,142291
    typedef typename std::iterator_traits<std::iterator_traits3058,142835
__brick_set_intersection(3075,143747
__brick_set_intersection(3084,144227
__pattern_set_intersection(3095,144843
__pattern_set_intersection(3105,145451
    typedef typename std::iterator_traits<std::iterator_traits3109,145769
    typedef typename std::iterator_traits<std::iterator_traits3110,145845
__brick_set_difference(3172,148935
__brick_set_difference(3181,149407
__pattern_set_difference(3192,150015
__pattern_set_difference(3202,150615
    typedef typename std::iterator_traits<std::iterator_traits3206,150927
    typedef typename std::iterator_traits<std::iterator_traits3207,151003
__brick_set_symmetric_difference(3268,154251
__brick_set_symmetric_difference(3277,154763
__pattern_set_symmetric_difference(3288,155411
__pattern_set_symmetric_difference(3299,156107
    typedef typename std::iterator_traits<std::iterator_traits3311,156709
__brick_is_heap_until(3328,157622
__brick_is_heap_until(3336,157928
    typedef typename std::iterator_traits<std::iterator_traits3341,158150
__pattern_is_heap_until(3349,158569
__is_heap_until_local(3357,158973
__is_heap_until_local(3373,159465
__pattern_is_heap_until(3383,159968
template <typename _ForwardIterator,3403,160919
__brick_min_element(3405,160992
template <typename _ForwardIterator,3411,161205
__brick_min_element(3413,161278
template <typename _ExecutionPolicy,3423,161608
template <typename _ExecutionPolicy, typename _ForwardIterator,3423,161608
template <typename _ExecutionPolicy, typename _ForwardIterator, typename _Compare,3423,161608
__pattern_min_element(3425,161728
template <typename _ExecutionPolicy,3431,162016
template <typename _ExecutionPolicy, typename _RandomAccessIterator,3431,162016
template <typename _ExecutionPolicy, typename _RandomAccessIterator, typename _Compare,3431,162016
__pattern_min_element(3433,162146
template <typename _ForwardIterator,3458,163366
__brick_minmax_element(3460,163468
template <typename _ForwardIterator,3466,163690
__brick_minmax_element(3468,163792
template <typename _ExecutionPolicy,3478,164134
template <typename _ExecutionPolicy, typename _ForwardIterator,3478,164134
template <typename _ExecutionPolicy, typename _ForwardIterator, typename _Compare,3478,164134
__pattern_minmax_element(3480,164283
template <typename _ExecutionPolicy,3486,164580
template <typename _ExecutionPolicy, typename _ForwardIterator,3486,164580
template <typename _ExecutionPolicy, typename _ForwardIterator, typename _Compare,3486,164580
__pattern_minmax_element(3488,164729
        typedef std::pair<_ForwardIterator, _ForwardIterator> _Result;3495,165060
__mismatch_serial(3518,166385
__brick_mismatch(3533,166988
__brick_mismatch(3541,167404
__pattern_mismatch(3550,167937
__pattern_mismatch(3560,168514
__brick_lexicographical_compare(3584,169875
__brick_lexicographical_compare(3593,170317
        typedef typename std::iterator_traits<std::iterator_traits3606,170761
        typedef typename std::iterator_traits<std::iterator_traits3607,170848
__pattern_lexicographical_compare(3629,171817
__pattern_lexicographical_compare(3638,172377
        typedef typename std::iterator_traits<std::iterator_traits3652,172909
        typedef typename std::iterator_traits<std::iterator_traits3653,172996

/usr/include/c++/13/pstl/execution_defs.h,1362
#define _PSTL_EXECUTION_POLICY_DEFS_H11,423
class sequenced_policy23,586
    __allow_unsequenced(28,687
    __allow_vector(33,796
    __allow_parallel(38,900
class parallel_policy45,1007
    __allow_unsequenced(50,1107
    __allow_vector(55,1216
    __allow_parallel(60,1319
class parallel_unsequenced_policy67,1432
    __allow_unsequenced(72,1543
    __allow_vector(77,1650
    __allow_parallel(82,1752
class unsequenced_policy88,1824
    __allow_unsequenced(93,1926
    __allow_vector(98,2033
    __allow_parallel(103,2136
_GLIBCXX17_INLINE constexpr sequenced_policy seq{seq110,2242
_GLIBCXX17_INLINE constexpr parallel_policy par{par111,2294
_GLIBCXX17_INLINE constexpr parallel_unsequenced_policy par_unseq{par_unseq112,2345
_GLIBCXX17_INLINE constexpr unsequenced_policy unseq{unseq113,2414
struct is_execution_policy 117,2528
struct is_execution_policy<is_execution_policy122,2591
struct is_execution_policy<is_execution_policy126,2689
struct is_execution_policy<is_execution_policy130,2786
struct is_execution_policy<is_execution_policy134,2895
constexpr bool is_execution_policy_v 140,3048
namespace __internal146,3191
using __enable_if_execution_policy 150,3280
                            _Tp>::type;type152,3428
using __enable_if_execution_policy 154,3474
                            _Tp>::type;type156,3626

/usr/include/c++/13/pstl/execution_impl.h,2019
#define _PSTL_EXECUTION_IMPL_H11,416
__lazy_and(35,760
std::true_type __lazy_or(41,841
__lazy_or(48,956
template <typename _IteratorType,54,1028
struct __is_random_access_iterator55,1095
    static constexpr bool value 57,1132
    typedef std::integral_constant<bool,bool59,1337
    typedef std::integral_constant<bool, value> type;59,1337
struct __is_random_access_iterator<__is_random_access_iterator63,1429
struct __policy_traits70,1643
struct __policy_traits<__policy_traits75,1684
    typedef std::false_type allow_parallel;77,1727
    typedef std::false_type allow_unsequenced;78,1771
    typedef std::false_type allow_vector;79,1818
struct __policy_traits<__policy_traits83,1876
    typedef std::false_type allow_parallel;85,1921
    typedef std::true_type allow_unsequenced;86,1965
    typedef std::true_type allow_vector;87,2011
struct __policy_traits<__policy_traits91,2068
    typedef std::true_type allow_parallel;93,2110
    typedef std::false_type allow_unsequenced;94,2153
    typedef std::false_type allow_vector;95,2200
struct __policy_traits<__policy_traits99,2258
    typedef std::true_type allow_parallel;101,2312
    typedef std::true_type allow_unsequenced;102,2355
    typedef std::true_type allow_vector;103,2401
using __collector_t 107,2483
using __allow_vector 111,2648
using __allow_unsequenced 115,2812
using __allow_parallel 119,2986
template <typename _ExecutionPolicy,122,3117
    -> decltype(125,3243
template <typename _ExecutionPolicy,132,3600
    -> decltype(135,3728
template <typename __policy,142,4089
struct __prefer_unsequenced_tag143,4146
    static constexpr bool value 145,4180
    typedef std::integral_constant<bool,bool147,4367
    typedef std::integral_constant<bool, value> type;147,4367
template <typename __policy,150,4425
struct __prefer_parallel_tag151,4482
    static constexpr bool value 153,4513
    typedef std::integral_constant<bool,bool155,4697
    typedef std::integral_constant<bool, value> type;155,4697

/usr/include/c++/13/pstl/glue_algorithm_defs.h,43
#define _PSTL_GLUE_ALGORITHM_DEFS_H11,421

/usr/include/c++/13/pstl/glue_algorithm_impl.h,3900
#define _PSTL_GLUE_ALGORITHM_IMPL_H11,421
all_of(39,1419
none_of(48,1793
for_each(57,2159
for_each_n(67,2757
find_if(79,3352
find_if_not(89,3953
find(96,4324
find_end(105,4799
find_end(118,5572
find_first_of(128,6097
find_first_of(141,6885
adjacent_find(151,7379
    typedef typename iterator_traits<iterator_traits153,7473
adjacent_find(163,8113
count(180,9026
    typedef typename iterator_traits<iterator_traits182,9132
count_if(193,9857
search(205,10507
search(218,11274
search_n(226,11742
search_n(237,12419
copy(248,12939
copy_n(265,13873
copy_if(282,14786
swap_ranges(297,15525
    typedef typename iterator_traits<iterator_traits300,15661
    typedef typename iterator_traits<iterator_traits301,15745
transform(318,16566
    typedef typename iterator_traits<iterator_traits321,16718
    typedef typename iterator_traits<iterator_traits322,16797
transform(335,17581
    typedef typename iterator_traits<iterator_traits338,17763
    typedef typename iterator_traits<iterator_traits339,17843
    typedef typename iterator_traits<iterator_traits340,17923
replace_if(354,18823
    typedef typename iterator_traits<iterator_traits357,18973
replace(372,19675
replace_copy_if(381,20190
    typedef typename iterator_traits<iterator_traits384,20380
    typedef typename iterator_traits<iterator_traits385,20459
replace_copy(397,21235
fill(408,21777
fill_n(418,22373
generate(432,23018
generate_n(442,23621
remove_copy_if(457,24304
remove_copy(465,24760
remove_if(474,25252
remove(484,25855
unique(494,26308
unique(504,26895
unique_copy(511,27279
unique_copy(524,28021
reverse(533,28384
reverse_copy(543,28987
rotate(558,29708
rotate_copy(568,30326
is_partitioned(583,31078
partition(593,31703
stable_partition(603,32330
partition_copy(615,33091
sort(630,34010
    typedef typename iterator_traits<iterator_traits632,34122
sort(642,34747
    typedef typename std::iterator_traits<std::iterator_traits644,34842
stable_sort(652,35201
stable_sort(662,35803
    typedef typename std::iterator_traits<std::iterator_traits664,35905
mismatch(672,36308
mismatch(685,37135
mismatch(694,37644
mismatch(703,38152
equal(714,38685
equal(725,39330
equal(732,39743
equal(743,40424
move(752,40877
partial_sort(771,41801
partial_sort(782,42453
    typedef typename iterator_traits<iterator_traits785,42601
partial_sort_copy(793,42988
partial_sort_copy(806,43799
is_sorted_until(816,44319
is_sorted_until(828,45074
    typedef typename std::iterator_traits<std::iterator_traits830,45170
is_sorted(836,45514
is_sorted(848,46220
    typedef typename std::iterator_traits<std::iterator_traits850,46310
merge(858,46740
merge(871,47684
inplace_merge(880,48168
inplace_merge(891,48829
    typedef typename std::iterator_traits<std::iterator_traits894,48982
includes(902,49347
includes(915,50099
set_union(926,50613
set_union(939,51567
set_intersection(951,52154
set_intersection(964,53129
set_difference(976,53742
set_difference(989,54711
set_symmetric_difference(1001,55326
set_symmetric_difference(1015,56350
is_heap_until(1025,56937
is_heap_until(1035,57560
    typedef typename std::iterator_traits<std::iterator_traits1037,57664
is_heap(1043,58021
is_heap(1050,58381
    typedef typename std::iterator_traits<std::iterator_traits1052,58479
min_element(1060,58855
min_element(1070,59444
    typedef typename std::iterator_traits<std::iterator_traits1072,59536
max_element(1078,59893
max_element(1086,60306
    typedef typename std::iterator_traits<std::iterator_traits1088,60398
minmax_element(1095,60871
minmax_element(1105,61495
    typedef typename iterator_traits<iterator_traits1107,61590
nth_element(1115,61960
nth_element(1126,62603
    typedef typename iterator_traits<iterator_traits1129,62746
lexicographical_compare(1137,63142
lexicographical_compare(1150,63939

/usr/include/c++/13/pstl/glue_execution_defs.h,443
#define _PSTL_GLUE_EXECUTION_DEFS_H11,421
namespace execution30,821
using __pstl::execution::parallel_policy;33,874
using __pstl::execution::parallel_unsequenced_policy;34,916
using __pstl::execution::sequenced_policy;35,970
using __pstl::execution::par;38,1054
using __pstl::execution::par_unseq;39,1084
using __pstl::execution::seq;40,1120
using __pstl::execution::unseq;45,1301
using __pstl::execution::unsequenced_policy;46,1333

/usr/include/c++/13/pstl/glue_memory_defs.h,40
#define _PSTL_GLUE_MEMORY_DEFS_H11,418

/usr/include/c++/13/pstl/glue_memory_impl.h,2417
#define _PSTL_GLUE_MEMORY_IMPL_H11,418
    typedef typename iterator_traits<iterator_traits25,828
    typedef typename iterator_traits<iterator_traits26,906
    typedef typename iterator_traits<iterator_traits27,986
    typedef typename iterator_traits<iterator_traits28,1067
uninitialized_copy_n(57,2787
    typedef typename iterator_traits<iterator_traits59,2899
    typedef typename iterator_traits<iterator_traits60,2977
    typedef typename iterator_traits<iterator_traits61,3057
    typedef typename iterator_traits<iterator_traits62,3138
uninitialized_move(92,4812
    typedef typename iterator_traits<iterator_traits94,4934
    typedef typename iterator_traits<iterator_traits95,5012
    typedef typename iterator_traits<iterator_traits96,5092
    typedef typename iterator_traits<iterator_traits97,5173
uninitialized_move_n(126,6710
    typedef typename iterator_traits<iterator_traits128,6822
    typedef typename iterator_traits<iterator_traits129,6900
    typedef typename iterator_traits<iterator_traits130,6980
    typedef typename iterator_traits<iterator_traits131,7061
uninitialized_fill(162,8788
    typedef typename iterator_traits<iterator_traits164,8907
    typedef typename iterator_traits<iterator_traits165,8986
uninitialized_fill_n(192,10292
    typedef typename iterator_traits<iterator_traits194,10399
    typedef typename iterator_traits<iterator_traits195,10478
destroy(224,11795
    typedef typename iterator_traits<iterator_traits226,11883
    typedef typename iterator_traits<iterator_traits227,11962
destroy_n(243,12842
    typedef typename iterator_traits<iterator_traits245,12918
    typedef typename iterator_traits<iterator_traits246,12997
uninitialized_default_construct(266,13998
    typedef typename iterator_traits<iterator_traits268,14110
    typedef typename iterator_traits<iterator_traits269,14189
uninitialized_default_construct_n(285,15075
    typedef typename iterator_traits<iterator_traits287,15175
    typedef typename iterator_traits<iterator_traits288,15254
uninitialized_value_construct(308,16178
    typedef typename iterator_traits<iterator_traits310,16288
    typedef typename iterator_traits<iterator_traits311,16367
uninitialized_value_construct_n(337,17831
    typedef typename iterator_traits<iterator_traits339,17929
    typedef typename iterator_traits<iterator_traits340,18008

/usr/include/c++/13/pstl/glue_numeric_defs.h,41
#define _PSTL_GLUE_NUMERIC_DEFS_H11,419

/usr/include/c++/13/pstl/glue_numeric_impl.h,694
#define _PSTL_GLUE_NUMERIC_IMPL_H11,419
reduce(34,1163
reduce(43,1666
    typedef typename iterator_traits<iterator_traits45,1753
transform_reduce(54,2209
    typedef typename iterator_traits<iterator_traits57,2367
transform_reduce(70,3158
transform_reduce(83,4016
exclusive_scan(96,4769
exclusive_scan(109,5610
inclusive_scan(124,6462
    typedef typename iterator_traits<iterator_traits127,6602
inclusive_scan(134,7075
inclusive_scan(143,7637
transform_exclusive_scan(155,8283
transform_inclusive_scan(173,9289
transform_inclusive_scan(189,10252
adjacent_difference(209,11032
adjacent_difference(226,11851
    typedef typename iterator_traits<iterator_traits229,12002

/usr/include/c++/13/pstl/memory_impl.h,328
#define _PSTL_MEMORY_IMPL_H11,413
template <typename _ForwardIterator,39,1208
__brick_uninitialized_move(41,1287
__brick_destroy(55,1958
__brick_destroy(65,2239
template <typename _ForwardIterator,77,2774
__brick_uninitialized_copy(79,2853
template <typename _ForwardIterator,90,3259
__brick_uninitialized_copy(92,3338

/usr/include/c++/13/pstl/numeric_fwd.h,35
#define _PSTL_NUMERIC_FWD_H11,410

/usr/include/c++/13/pstl/numeric_impl.h,1510
#define _PSTL_NUMERIC_IMPL_H11,414
__brick_transform_reduce(43,1551
    typedef typename std::iterator_traits<std::iterator_traits47,1826
__pattern_transform_reduce(56,2308
__pattern_transform_reduce(67,2966
__brick_transform_reduce(93,4424
__brick_transform_reduce(101,4820
    typedef typename std::iterator_traits<std::iterator_traits104,5032
__pattern_transform_reduce(113,5461
__pattern_transform_reduce(123,6012
__brick_transform_scan(146,7274
__brick_transform_scan(162,7962
template <typename _Tp,176,8556
using is_arithmetic_udop 177,8607
typename std::enable_if<!is_arithmetic_udop<_Tp, _BinaryOperation>::value,value184,9089
__brick_transform_scan(185,9203
__brick_transform_scan(202,10259
__pattern_transform_scan(213,10931
typename std::enable_if<!std::is_floating_point<_Tp>::value,value224,11639
__pattern_transform_scan(225,11723
    typedef typename std::iterator_traits<std::iterator_traits229,12051
__pattern_transform_scan(255,13821
    typedef typename std::iterator_traits<std::iterator_traits259,14149
__brick_adjacent_difference(294,15794
__brick_adjacent_difference(302,16169
    typedef typename std::iterator_traits<std::iterator_traits307,16388
    typedef typename std::iterator_traits<std::iterator_traits308,16477
__pattern_adjacent_difference(320,16982
__pattern_adjacent_difference(330,17515
    typedef typename std::iterator_traits<std::iterator_traits335,17831
    typedef typename std::iterator_traits<std::iterator_traits336,17920

/usr/include/c++/13/pstl/parallel_backend.h,88
#define _PSTL_PARALLEL_BACKEND_H11,418
namespace __pstl15,531
namespace __pstl21,671

/usr/include/c++/13/pstl/parallel_backend_serial.h,1611
#define _PSTL_PARALLEL_BACKEND_SERIAL_H11,425
class __buffer25,636
    std::allocator<_Tp> __allocator_;27,653
    _Tp* __ptr_;28,691
    const std::size_t __buf_size_;29,708
    __buffer(35,844
    operator bool(operator bool37,949
    get(39,1014
    ~__buffer(43,1065
__cancel_execution(47,1147
__parallel_for(53,1237
template <class _ExecutionPolicy, class _Value, class _Index, typename _RealBody,58,1343
__parallel_reduce(60,1453
__parallel_transform_reduce(75,1875
template <class _ExecutionPolicy, typename _Index,81,2084
template <class _ExecutionPolicy, typename _Index, typename _Tp,81,2084
template <class _ExecutionPolicy, typename _Index, typename _Tp, typename _Rp,81,2084
template <class _ExecutionPolicy, typename _Index, typename _Tp, typename _Rp, typename _Cp,81,2084
template <class _ExecutionPolicy, typename _Index, typename _Tp, typename _Rp, typename _Cp, typename _Sp,81,2084
__parallel_strict_scan(83,2210
__parallel_transform_scan(96,2660
template <class _ExecutionPolicy, typename _RandomAccessIterator,101,2822
template <class _ExecutionPolicy, typename _RandomAccessIterator, typename _Compare,101,2822
__parallel_stable_sort(103,2932
template <class _ExecutionPolicy, typename _RandomAccessIterator1,109,3163
template <class _ExecutionPolicy, typename _RandomAccessIterator1, typename _RandomAccessIterator2,109,3163
          typename _RandomAccessIterator3,110,3263
          typename _RandomAccessIterator3, typename _Compare,110,3263
__parallel_merge(112,3351
template <class _ExecutionPolicy, typename _F1,119,3704
__parallel_invoke(121,3771

/usr/include/c++/13/pstl/parallel_backend_tbb.h,10483
#define _PSTL_PARALLEL_BACKEND_TBB_H11,422
class __buffer43,1328
    tbb::tbb_allocator<_Tp> _M_allocator;45,1345
    _Tp* _M_ptr;46,1387
    const std::size_t _M_buf_size;47,1404
    __buffer(54,1612
    operator bool(operator bool56,1776
    get(59,1914
    ~__buffer(64,1988
__cancel_execution(69,2095
class __parallel_for_body83,2494
    __parallel_for_body(86,2532
    __parallel_for_body(87,2602
    operator()(operator()89,2699
    _RealBody _M_body;95,2836
__parallel_for(102,3032
template <class _ExecutionPolicy, class _Value, class _Index, typename _RealBody,111,3381
__parallel_reduce(113,3491
struct __par_trans_red_body136,4599
    _Rp _M_brick_reduce;139,4740
    _Up _M_u;140,4831
    _Cp _M_combine;141,4845
    bool _M_has_sum;142,4865
    sum(144,4933
    __par_trans_red_body(149,5047
    __par_trans_red_body(155,5243
    ~__par_trans_red_body(160,5442
    join(168,5629
    operator()(operator()174,5737
__parallel_transform_reduce(194,6435
class __trans_scan_body209,7235
    _Rp _M_brick_reduce;212,7372
    _Up _M_u;213,7463
    _Cp _M_combine;214,7477
    _Sp _M_scan;215,7497
    bool _M_has_sum;216,7514
    __trans_scan_body(218,7583
    __trans_scan_body(224,7827
    ~__trans_scan_body(230,8040
    sum(238,8224
    operator()(operator()245,8396
    operator()(operator()261,8816
    reverse_join(267,8981
    assign(281,9252
__split(289,9364
template <typename _Index,301,9646
template <typename _Index, typename _Tp,301,9646
template <typename _Index, typename _Tp, typename _Rp,301,9646
__upsweep(303,9720
template <typename _Index,320,10352
template <typename _Index, typename _Tp,320,10352
template <typename _Index, typename _Tp, typename _Cp,320,10352
__downsweep(322,10426
template <class _ExecutionPolicy, typename _Index,355,12176
template <class _ExecutionPolicy, typename _Index, typename _Tp,355,12176
template <class _ExecutionPolicy, typename _Index, typename _Tp, typename _Rp,355,12176
template <class _ExecutionPolicy, typename _Index, typename _Tp, typename _Rp, typename _Cp,355,12176
template <class _ExecutionPolicy, typename _Index, typename _Tp, typename _Rp, typename _Cp, typename _Sp,355,12176
__parallel_strict_scan(357,12302
__parallel_transform_scan(397,14149
#define _PSTL_MERGE_CUT_OFF 415,15021
class __task 423,15181
    make_continuation(428,15265
    make_child_of(435,15465
    make_additional_child_of(442,15678
    recycle_as_continuation(449,15917
    recycle_as_child_of(455,16022
    spawn(461,16140
    spawn_root_and_wait(468,16259
class __func_task 475,16408
    _Func _M_func;477,16444
    execute(480,16479
    __func_task(487,16575
    body(492,16660
class __root_task499,16737
    tbb::task* _M_task;501,16757
    __root_task(505,16824
class __task 515,17083
    tbb::detail::d1::small_object_allocator _M_allocator{_M_allocator518,17142
    tbb::detail::d1::execution_data* _M_execute_data{_M_execute_data519,17202
    __task* _M_parent{_M_parent520,17258
    std::atomic<int> _M_refcount{_M_refcount521,17283
    bool _M_recycle{_M_recycle522,17319
    allocate_func_task(526,17383
    parent(538,17756
    set_ref_count(544,17817
    make_continuation(551,17956
    make_child_of(561,18192
    make_additional_child_of(570,18412
    recycle_as_continuation(579,18701
    recycle_as_child_of(585,18787
    spawn(592,18911
    spawn_root_and_wait(600,19113
class __func_task 611,19434
    _Func _M_func;613,19470
    execute(616,19502
    cancel(625,19722
    finalize(631,19840
    __func_task(663,20565
    body(668,20650
class __root_task 675,20727
    execute(678,20775
    cancel(685,20919
    __func_task<_Func>* _M_func_task{_M_func_task691,21049
    tbb::detail::d1::wait_context _M_wait_object{_M_wait_object692,21089
    tbb::task_group_context _M_context{_M_context693,21142
    __root_task(697,21227
template <typename _RandomAccessIterator1,710,21663
template <typename _RandomAccessIterator1, typename _RandomAccessIterator2,710,21663
template <typename _RandomAccessIterator1, typename _RandomAccessIterator2, typename _Compare,710,21663
template <typename _RandomAccessIterator1, typename _RandomAccessIterator2, typename _Compare, typename _Cleanup,710,21663
class __merge_func712,21808
    typedef typename std::iterator_traits<_RandomAccessIterator1>::difference_type _DifferenceType1;714,21829
    typedef typename std::iterator_traits<_RandomAccessIterator2>::difference_type _DifferenceType2;715,21930
    typedef typename std::common_type<std::common_type716,22031
    typedef typename std::common_type<_DifferenceType1, _DifferenceType2>::type _SizeType;716,22031
    typedef typename std::iterator_traits<_RandomAccessIterator1>::value_type _ValueType;717,22122
    _RandomAccessIterator1 _M_x_beg;719,22213
    _RandomAccessIterator2 _M_z_beg;720,22250
    _SizeType _M_xs,722,22288
    _SizeType _M_xs, _M_xe;722,22288
    _SizeType _M_ys,723,22316
    _SizeType _M_ys, _M_ye;723,22316
    _SizeType _M_zs;724,22344
    _Compare _M_comp;725,22365
    _LeafMerge _M_leaf_merge;726,22387
    _SizeType _M_nsort;727,22417
    static const _SizeType __merge_cut_off 729,22503
    bool _root;731,22570
    bool _x_orig;732,22624
    bool _y_orig;733,22730
    bool _split;734,22836
    is_partial(737,22957
    struct __move_value742,23022
        template <typename Iterator1,744,23052
        operator()(operator()746,23123
    struct __move_value_construct752,23236
        template <typename Iterator1,754,23276
        operator()(operator()756,23347
    struct __move_range762,23494
        template <typename Iterator1,764,23524
        operator()(operator()766,23600
    struct __move_range_construct781,24292
        template <typename Iterator1,783,24332
        operator()(operator()785,24408
    struct __cleanup_range804,25243
        operator()(operator()808,25327
    __merge_func(824,25930
    is_left(834,26526
    set_odd(841,26648
    parent_merge(854,26884
    x_less_y(859,27045
    move_x_range(880,27834
    move_y_range(897,28343
    merge_ranges(913,28846
    process_ranges(954,30448
    split_merging(1001,32026
template <typename _RandomAccessIterator1,1044,33532
template <typename _RandomAccessIterator1, typename _RandomAccessIterator2,1044,33532
template <typename _RandomAccessIterator1, typename _RandomAccessIterator2, typename __M_Compare,1044,33532
template <typename _RandomAccessIterator1, typename _RandomAccessIterator2, typename __M_Compare, typename _Cleanup,1044,33532
operator()(operator()1048,33786
template <typename _RandomAccessIterator1,1087,34828
template <typename _RandomAccessIterator1, typename _RandomAccessIterator2,1087,34828
template <typename _RandomAccessIterator1, typename _RandomAccessIterator2, typename _Compare,1087,34828
class __stable_sort_func1088,34943
    typedef typename std::iterator_traits<_RandomAccessIterator1>::difference_type _DifferenceType1;1091,34980
    typedef typename std::iterator_traits<_RandomAccessIterator2>::difference_type _DifferenceType2;1092,35081
    typedef typename std::common_type<std::common_type1093,35182
    typedef typename std::common_type<_DifferenceType1, _DifferenceType2>::type _SizeType;1093,35182
    _RandomAccessIterator1 _M_xs,1096,35285
    _RandomAccessIterator1 _M_xs, _M_xe,1096,35285
    _RandomAccessIterator1 _M_xs, _M_xe, _M_x_beg;1096,35285
    _RandomAccessIterator2 _M_zs,1097,35336
    _RandomAccessIterator2 _M_zs, _M_z_beg;1097,35336
    _Compare _M_comp;1098,35380
    _LeafSort _M_leaf_sort;1099,35402
    bool _M_root;1100,35430
    _SizeType _M_nsort;1101,35448
    __stable_sort_func(1104,35552
#define _PSTL_STABLE_SORT_CUT_OFF 1116,36081
template <typename _RandomAccessIterator1,1118,36120
template <typename _RandomAccessIterator1, typename _RandomAccessIterator2,1118,36120
template <typename _RandomAccessIterator1, typename _RandomAccessIterator2, typename _Compare,1118,36120
__stable_sort_func<_RandomAccessIterator1, _RandomAccessIterator2, _Compare, _LeafSort>::operator()(operator()1120,36243
        _MergeTaskType;1124,36526
template <class _ExecutionPolicy, typename _RandomAccessIterator,1155,37827
template <class _ExecutionPolicy, typename _RandomAccessIterator, typename _Compare,1155,37827
__parallel_stable_sort(1157,37937
        typedef typename std::iterator_traits<std::iterator_traits1162,38234
        typedef typename std::iterator_traits<std::iterator_traits1163,38327
template <typename _RandomAccessIterator1,1185,39256
template <typename _RandomAccessIterator1, typename _RandomAccessIterator2,1185,39256
template <typename _RandomAccessIterator1, typename _RandomAccessIterator2, typename _RandomAccessIterator3,1185,39256
          typename _Compare,1186,39365
class __merge_func_static1187,39415
    _RandomAccessIterator1 _M_xs,1189,39443
    _RandomAccessIterator1 _M_xs, _M_xe;1189,39443
    _RandomAccessIterator2 _M_ys,1190,39484
    _RandomAccessIterator2 _M_ys, _M_ye;1190,39484
    _RandomAccessIterator3 _M_zs;1191,39525
    _Compare _M_comp;1192,39559
    _LeafMerge _M_leaf_merge;1193,39581
    __merge_func_static(1196,39622
template <typename _RandomAccessIterator1,1208,40129
template <typename _RandomAccessIterator1, typename _RandomAccessIterator2,1208,40129
template <typename _RandomAccessIterator1, typename _RandomAccessIterator2, typename _RandomAccessIterator3,1208,40129
          typename __M_Compare,1209,40238
operator()(operator()1212,40418
    typedef typename std::iterator_traits<std::iterator_traits1214,40447
    typedef typename std::iterator_traits<std::iterator_traits1215,40548
    typedef typename std::common_type<std::common_type1216,40649
template <class _ExecutionPolicy, typename _RandomAccessIterator1,1248,41714
template <class _ExecutionPolicy, typename _RandomAccessIterator1, typename _RandomAccessIterator2,1248,41714
          typename _RandomAccessIterator3,1249,41814
          typename _RandomAccessIterator3, typename _Compare,1249,41814
__parallel_merge(1251,41902
    typedef typename std::iterator_traits<std::iterator_traits1255,42162
    typedef typename std::iterator_traits<std::iterator_traits1256,42263
    typedef typename std::common_type<std::common_type1257,42364
                _TaskType;1270,42947
template <class _ExecutionPolicy, typename _F1,1280,43308
__parallel_invoke(1282,43375

/usr/include/c++/13/pstl/parallel_backend_utils.h,1733
#define _PSTL_PARALLEL_BACKEND_UTILS_H11,424
struct __serial_destroy24,593
    operator(28,674
        typedef typename std::iterator_traits<std::iterator_traits30,751
struct __serial_move_merge40,1073
    const std::size_t _M_nmerge;42,1102
    explicit __serial_move_merge(44,1136
    operator()(operator()48,1441
template <typename _ForwardIterator1,136,4993
template <typename _ForwardIterator1, typename _ForwardIterator2,136,4993
template <typename _ForwardIterator1, typename _ForwardIterator2, typename _OutputIterator,136,4993
template <typename _ForwardIterator1, typename _ForwardIterator2, typename _OutputIterator, typename _Compare,136,4993
__set_union_construct(139,5160
template <typename _ForwardIterator1,165,6036
template <typename _ForwardIterator1, typename _ForwardIterator2,165,6036
template <typename _ForwardIterator1, typename _ForwardIterator2, typename _OutputIterator,165,6036
__set_intersection_construct(167,6163
template <typename _ForwardIterator1,190,6865
template <typename _ForwardIterator1, typename _ForwardIterator2,190,6865
template <typename _ForwardIterator1, typename _ForwardIterator2, typename _OutputIterator,190,6865
template <typename _ForwardIterator1, typename _ForwardIterator2, typename _OutputIterator, typename _Compare,190,6865
__set_difference_construct(193,7032
template <typename _ForwardIterator1,219,7843
template <typename _ForwardIterator1, typename _ForwardIterator2,219,7843
template <typename _ForwardIterator1, typename _ForwardIterator2, typename _OutputIterator,219,7843
template <typename _ForwardIterator1, typename _ForwardIterator2, typename _OutputIterator, typename _Compare,219,7843
__set_symmetric_difference_construct(222,8010

/usr/include/c++/13/pstl/parallel_impl.h,132
#define _PSTL_PARALLEL_IMPL_H11,415
    typedef typename std::iterator_traits<std::iterator_traits31,1189
__parallel_or(64,3324

/usr/include/c++/13/pstl/pstl_config.h,3035
#define _PSTL_CONFIG_H11,408
#define _PSTL_VERSION 14,516
#define _PSTL_VERSION_MAJOR 15,544
#define _PSTL_VERSION_MINOR 16,595
#define _PSTL_VERSION_PATCH 17,653
#    undef _PSTL_USAGE_WARNINGS25,913
#    define _PSTL_USAGE_WARNINGS 26,945
#    define _PSTL_USAGE_WARNINGS 29,1076
#    define _PSTL_PRAGMA(34,1171
#    define _PSTL_PRAGMA(36,1217
#define _PSTL_STRING_AUX(39,1269
#define _PSTL_STRING(40,1300
#define _PSTL_STRING_CONCAT(41,1344
#    define _PSTL_HIDE_FROM_ABI_PUSH 44,1418
#    define _PSTL_HIDE_FROM_ABI_POP 46,1645
#    define _PSTL_HIDE_FROM_ABI_PUSH 48,1718
#    define _PSTL_HIDE_FROM_ABI_POP 49,1769
#define _PSTL_GCC_VERSION 54,1951
#    define _PSTL_CLANG_VERSION 58,2124
#    define _PSTL_PRAGMA_SIMD 64,2434
#    define _PSTL_PRAGMA_DECLARE_SIMD 65,2487
#    define _PSTL_PRAGMA_SIMD_REDUCTION(66,2556
#    define _PSTL_PRAGMA_SIMD 68,2679
#    define _PSTL_PRAGMA_DECLARE_SIMD69,2728
#    define _PSTL_PRAGMA_SIMD_REDUCTION(70,2766
#    define _PSTL_PRAGMA_SIMD72,2861
#    define _PSTL_PRAGMA_DECLARE_SIMD73,2891
#    define _PSTL_PRAGMA_SIMD_REDUCTION(74,2929
#    define _PSTL_PRAGMA_FORCEINLINE 78,3019
#    define _PSTL_PRAGMA_FORCEINLINE80,3088
#    define _PSTL_PRAGMA_SIMD_SCAN(84,3164
#    define _PSTL_PRAGMA_SIMD_INCLUSIVE_SCAN(85,3250
#    define _PSTL_PRAGMA_SIMD_EXCLUSIVE_SCAN(86,3338
#    define _PSTL_PRAGMA_SIMD_SCAN(88,3432
#    define _PSTL_PRAGMA_SIMD_INCLUSIVE_SCAN(89,3472
#    define _PSTL_PRAGMA_SIMD_EXCLUSIVE_SCAN(90,3522
#define _PSTL_CPP17_EXECUTION_POLICIES_PRESENT 94,3680
#define _PSTL_CPP14_2RANGE_MISMATCH_EQUAL_PRESENT 96,3747
#define _PSTL_CPP14_MAKE_REVERSE_ITERATOR_PRESENT 98,3968
#define _PSTL_CPP14_INTEGER_SEQUENCE_PRESENT 100,4183
#define _PSTL_CPP14_VARIABLE_TEMPLATES_PRESENT 101,4273
#define _PSTL_EARLYEXIT_PRESENT 104,4505
#define _PSTL_MONOTONIC_PRESENT 105,4564
#    define _PSTL_UDR_PRESENT 108,4736
#    define _PSTL_UDR_PRESENT 110,4774
#define _PSTL_UDS_PRESENT 113,4814
#    define _PSTL_PRAGMA_SIMD_EARLYEXIT 116,4939
#    define _PSTL_PRAGMA_SIMD_EARLYEXIT118,5019
#    define _PSTL_PRAGMA_SIMD_ORDERED_MONOTONIC(122,5095
#    define _PSTL_PRAGMA_SIMD_ORDERED_MONOTONIC_2ARGS(123,5194
#    define _PSTL_PRAGMA_SIMD_ORDERED_MONOTONIC(125,5319
#    define _PSTL_PRAGMA_SIMD_ORDERED_MONOTONIC_2ARGS(126,5372
#define _PSTL_PRAGMA_DECLARE_REDUCTION(136,5821
#    define _PSTL_PRAGMA_VECTOR_UNALIGNED 140,6074
#    define _PSTL_PRAGMA_VECTOR_UNALIGNED142,6153
#    define _PSTL_USE_NONTEMPORAL_STORES_IF_ALLOWED 147,6333
#    define _PSTL_USE_NONTEMPORAL_STORES_IF_ALLOWED149,6424
#    define _PSTL_PRAGMA_LOCATION 153,6567
#    define _PSTL_PRAGMA_LOCATION 155,6672
#define _PSTL_PRAGMA_MESSAGE_IMPL(158,6742
#    define _PSTL_PRAGMA_MESSAGE(161,6874
#    define _PSTL_PRAGMA_MESSAGE_POLICIES(162,6939
#    define _PSTL_PRAGMA_MESSAGE(164,7019
#    define _PSTL_PRAGMA_MESSAGE_POLICIES(165,7055
#define _PSTL_CPP11_STD_ROTATE_BROKEN 169,7125
#define _PSTL_ICC_18_OMP_SIMD_BROKEN 171,7239

/usr/include/c++/13/pstl/unseq_backend_simd.h,3632
#define _PSTL_UNSEQ_BACKEND_SIMD_H11,420
__simd_walk_2(40,1110
__simd_walk_3(50,1475
__simd_or(62,1895
__simd_first(102,3027
__simd_first(162,4861
__simd_count(216,6718
__simd_unique_copy(229,7126
__simd_assign(253,7799
__simd_copy_if(264,8233
__simd_calc_mask_2(283,8773
__simd_calc_mask_1(298,9242
__simd_copy_by_mask(313,9697
__simd_partition_by_mask(333,10301
__simd_fill_n(356,11005
__simd_generate_n(367,11338
__simd_adjacent_find(378,11661
    typedef typename std::iterator_traits<std::iterator_traits383,11823
template <typename _Tp,441,13938
using is_arithmetic_plus 442,13989
template <typename _DifferenceType,445,14196
template <typename _DifferenceType, typename _Tp,445,14196
template <typename _DifferenceType, typename _Tp, typename _BinaryOperation,445,14196
__simd_transform_reduce(447,14384
template <typename _Size,455,14637
template <typename _Size, typename _Tp,455,14637
template <typename _Size, typename _Tp, typename _BinaryOperation,455,14637
typename std::enable_if<!is_arithmetic_plus<_Tp, _BinaryOperation>::value,value456,14730
__simd_transform_reduce(457,14816
__simd_scan(514,16739
template <typename _Tp,528,17298
struct _Combiner529,17342
    _Tp __value;531,17361
    _BinaryOp* __bin_op;532,17378
    _Combiner(534,17461
    _Combiner() : __value{}, __bin_op(534,17461
    _Combiner(535,17511
    _Combiner(536,17634
    _Combiner(const _Combiner& __obj) : __value{}, __bin_op(536,17634
    operator()(operator()539,17723
typename std::enable_if<!is_arithmetic_plus<_Tp, _BinaryOperation>::value,value548,18025
__simd_scan(549,18139
    typedef _Combiner<_Tp, _BinaryOperation> _CombinerType;552,18327
__simd_scan(572,19164
typename std::enable_if<!is_arithmetic_plus<_Tp, _BinaryOperation>::value,value588,19803
__simd_scan(589,19917
    typedef _Combiner<_Tp, _BinaryOperation> _CombinerType;592,20090
template <typename _ForwardIterator,610,20846
template <typename _ForwardIterator, typename _Size,610,20846
__simd_min_element(612,20935
    typedef typename std::iterator_traits<std::iterator_traits619,21074
    struct _ComplexType620,21158
        _ValueType __min_val;622,21188
        _Size __min_ind;623,21218
        _Compare* __min_comp;624,21243
        _ComplexType(626,21274
        _ComplexType() : __min_val{}, __min_ind{__min_ind626,21274
        _ComplexType() : __min_val{}, __min_ind{}, __min_comp(626,21274
        _ComplexType(627,21348
        _ComplexType(631,21522
        operator()(operator()638,21737
template <typename _ForwardIterator,669,22818
template <typename _ForwardIterator, typename _Size,669,22818
__simd_minmax_element(671,22936
    typedef typename std::iterator_traits<std::iterator_traits677,23102
    struct _ComplexType679,23187
        _ValueType __min_val;681,23217
        _ValueType __max_val;682,23247
        _Size __min_ind;683,23277
        _Size __max_ind;684,23302
        _Compare* __minmax_comp;685,23327
        _ComplexType(687,23361
        _ComplexType() : __min_val{}, __max_val{__max_val687,23361
        _ComplexType() : __min_val{}, __max_val{}, __min_ind{__min_ind687,23361
        _ComplexType() : __min_val{}, __max_val{}, __min_ind{}, __max_ind{__max_ind687,23361
        _ComplexType() : __min_val{}, __max_val{}, __min_ind{}, __max_ind{}, __minmax_comp(687,23361
        _ComplexType(688,23464
        _ComplexType(693,23728
        operator()(operator()700,23985
__simd_partition_copy(755,25835
__simd_find_first_of(780,26669
    typedef typename std::iterator_traits<std::iterator_traits783,26857
__simd_remove_if(826,28236

/usr/include/c++/13/pstl/utils.h,1472
#define _PSTL_UTILS_H11,407
__invoke_if(41,944
__invoke_if(48,1026
__invoke_if_not(54,1098
__invoke_if_not(61,1185
template <typename _F1,65,1231
typename std::result_of<std::result_of66,1269
template <typename _F1,72,1383
typename std::result_of<std::result_of73,1421
struct __no_op80,1595
    operator()(operator()84,1650
class __not_pred92,1799
    _Pred _M_pred;94,1818
    explicit __not_pred(97,1848
    operator()(operator()101,1950
class __reorder_pred108,2083
    _Pred _M_pred;110,2106
    explicit __reorder_pred(113,2136
    template <typename _FTp,115,2200
    operator()(operator()117,2253
class __pstl_equal126,2583
    explicit __pstl_equal(129,2614
    template <typename _Xp,131,2646
    operator()(operator()133,2697
class __pstl_less140,2841
    explicit __pstl_less(143,2871
    template <typename _Xp,145,2902
    operator()(operator()147,2953
template <typename _Tp,154,3126
class __equal_value_by_pred155,3171
    const _Tp& _M_value;157,3201
    _Predicate _M_pred;158,3226
    __equal_value_by_pred(161,3261
    operator()(operator()165,3405
class __equal_value173,3577
    const _Tp& _M_value;175,3599
    explicit __equal_value(178,3635
    operator()(operator()182,3744
class __not_equal_value190,3905
    const _Tp& _M_value;192,3931
    explicit __not_equal_value(195,3967
    operator()(operator()199,4080
template <typename _ForwardIterator,205,4188
__cmp_iterators_by_values(207,4261

/usr/include/c++/13/tr1/array,1460
#define _GLIBCXX_TR1_ARRAY 30,1168
namespace std _GLIBCXX_VISIBILITY(38,1299
    struct array59,1905
      typedef _Tp 	    			      value_type;61,1928
      typedef value_type&                   	      reference;62,1972
      typedef const value_type&             	      const_reference;63,2034
      typedef value_type*          		      iterator;64,2102
      typedef const value_type*			      const_iterator;65,2155
      typedef std::size_t                    	      size_type;66,2211
      typedef std::ptrdiff_t                   	      difference_type;67,2274
      typedef std::reverse_iterator<iterator>	      reverse_iterator;68,2345
      typedef std::reverse_iterator<const_iterator>   const_reverse_iterator;69,2415
      value_type _M_instance[_M_instance72,2544
      assign(77,2666
      swap(81,2759
      begin(86,2883
      begin(90,2980
      end(94,3084
      end(98,3181
      rbegin(102,3293
      rbegin(106,3381
      rend(110,3475
      rend(114,3563
      size(119,3669
      max_size(122,3722
      empty(125,3793
      at(137,4059
      at(145,4213
      front(153,4368
      front(157,4433
      back(161,4498
      back(165,4581
      data(169,4658
      data(173,4740
    operator==(operator==180,4901
    operator!=(operator!=185,5105
    operator<(190,5273
    operator>(198,5514
    operator<=(operator<=203,5677
    operator>=(operator>=208,5844
    { typedef _Tp type;237,6662

/usr/include/c++/13/tr1/bessel_function.tcc,197
#define _GLIBCXX_TR1_BESSEL_FUNCTION_TCC 51,1948
namespace std _GLIBCXX_VISIBILITY(55,2032
# define _GLIBCXX_MATH_NS 60,2143
# define _GLIBCXX_MATH_NS 64,2225
#undef _GLIBCXX_MATH_NS661,22744

/usr/include/c++/13/tr1/beta_function.tcc,194
#define _GLIBCXX_TR1_BETA_FUNCTION_TCC 47,1870
namespace std _GLIBCXX_VISIBILITY(49,1912
# define _GLIBCXX_MATH_NS 54,2023
# define _GLIBCXX_MATH_NS 58,2105
#undef _GLIBCXX_MATH_NS199,5804

/usr/include/c++/13/tr1/ccomplex,39
#define _GLIBCXX_TR1_CCOMPLEX 30,1166

/usr/include/c++/13/tr1/cctype,103
#define _GLIBCXX_TR1_CCTYPE 30,1160
#undef isblank39,1315
namespace std _GLIBCXX_VISIBILITY(41,1331

/usr/include/c++/13/tr1/cfenv,382
#define _GLIBCXX_TR1_CFENV 30,1157
#undef feclearexcept44,1371
#undef fegetexceptflag45,1392
#undef feraiseexcept46,1415
#undef fesetexceptflag47,1436
#undef fetestexcept48,1459
#undef fegetround49,1479
#undef fesetround50,1497
#undef fegetenv51,1515
#undef feholdexcept52,1531
#undef fesetenv53,1551
#undef feupdateenv54,1567
namespace std _GLIBCXX_VISIBILITY(56,1587

/usr/include/c++/13/tr1/cfloat,99
#define _GLIBCXX_TR1_CFLOAT 30,1160
#define DECIMAL_DIG 37,1272
#define FLT_EVAL_METHOD 41,1340

/usr/include/c++/13/tr1/cinttypes,249
#define _GLIBCXX_TR1_CINTTYPES 30,1169
#  define _UNDEF__STDC_FORMAT_MACROS41,1391
#  define __STDC_FORMAT_MACROS42,1428
#  undef __STDC_FORMAT_MACROS46,1525
#  undef _UNDEF__STDC_FORMAT_MACROS47,1555
namespace std _GLIBCXX_VISIBILITY(53,1645

/usr/include/c++/13/tr1/climits,120
#define _GLIBCXX_TR1_CLIMITS 30,1163
#define LLONG_MIN 37,1275
#define LLONG_MAX 41,1344
#define ULLONG_MAX 45,1407

/usr/include/c++/13/tr1/cmath,12133
#define _GLIBCXX_TR1_CMATH 30,1157
#undef acosh40,1308
#undef acoshf41,1321
#undef acoshl42,1335
#undef asinh43,1349
#undef asinhf44,1362
#undef asinhl45,1376
#undef atanh46,1390
#undef atanhf47,1403
#undef atanhl48,1417
#undef cbrt49,1431
#undef cbrtf50,1443
#undef cbrtl51,1456
#undef copysign52,1469
#undef copysignf53,1485
#undef copysignl54,1502
#undef erf55,1519
#undef erff56,1530
#undef erfl57,1542
#undef erfc58,1554
#undef erfcf59,1566
#undef erfcl60,1579
#undef exp261,1592
#undef exp2f62,1604
#undef exp2l63,1617
#undef expm164,1630
#undef expm1f65,1643
#undef expm1l66,1657
#undef fdim67,1671
#undef fdimf68,1683
#undef fdiml69,1696
#undef fma70,1709
#undef fmaf71,1720
#undef fmal72,1732
#undef fmax73,1744
#undef fmaxf74,1756
#undef fmaxl75,1769
#undef fmin76,1782
#undef fminf77,1794
#undef fminl78,1807
#undef hypot79,1820
#undef hypotf80,1833
#undef hypotl81,1847
#undef ilogb82,1861
#undef ilogbf83,1874
#undef ilogbl84,1888
#undef lgamma85,1902
#undef lgammaf86,1916
#undef lgammal87,1931
#undef llrint88,1946
#undef llrintf89,1960
#undef llrintl90,1975
#undef llround91,1990
#undef llroundf92,2005
#undef llroundl93,2021
#undef log1p94,2037
#undef log1pf95,2050
#undef log1pl96,2064
#undef log297,2078
#undef log2f98,2090
#undef log2l99,2103
#undef logb100,2116
#undef logbf101,2128
#undef logbl102,2141
#undef lrint103,2154
#undef lrintf104,2167
#undef lrintl105,2181
#undef lround106,2195
#undef lroundf107,2209
#undef lroundl108,2224
#undef nan109,2239
#undef nanf110,2250
#undef nanl111,2262
#undef nearbyint112,2274
#undef nearbyintf113,2291
#undef nearbyintl114,2309
#undef nextafter115,2327
#undef nextafterf116,2344
#undef nextafterl117,2362
#undef nexttoward118,2380
#undef nexttowardf119,2398
#undef nexttowardl120,2417
#undef remainder121,2436
#undef remainderf122,2453
#undef remainderl123,2471
#undef remquo124,2489
#undef remquof125,2503
#undef remquol126,2518
#undef rint127,2533
#undef rintf128,2545
#undef rintl129,2558
#undef round130,2571
#undef roundf131,2584
#undef roundl132,2598
#undef scalbln133,2612
#undef scalblnf134,2627
#undef scalblnl135,2643
#undef scalbn136,2659
#undef scalbnf137,2673
#undef scalbnl138,2688
#undef tgamma139,2703
#undef tgammaf140,2717
#undef tgammal141,2732
#undef trunc142,2747
#undef truncf143,2760
#undef truncl144,2774
namespace std _GLIBCXX_VISIBILITY(148,2797
      typedef typename __gnu_cxx::__promote<__gnu_cxx::__promote314,5271
      typedef typename __gnu_cxx::__promote<__gnu_cxx::__promote324,5600
      typedef typename __gnu_cxx::__promote<__gnu_cxx::__promote333,5863
      typedef typename __gnu_cxx::__promote<__gnu_cxx::__promote342,6123
      typedef typename __gnu_cxx::__promote<__gnu_cxx::__promote351,6386
      typedef typename __gnu_cxx::__promote<__gnu_cxx::__promote360,6651
      typedef typename __gnu_cxx::__promote<__gnu_cxx::__promote369,6928
      typedef typename __gnu_cxx::__promote<__gnu_cxx::__promote378,7227
      typedef typename __gnu_cxx::__promote<__gnu_cxx::__promote387,7523
      typedef typename __gnu_cxx::__promote<__gnu_cxx::__promote396,7816
      typedef typename __gnu_cxx::__promote<__gnu_cxx::__promote405,8116
      typedef typename __gnu_cxx::__promote<__gnu_cxx::__promote414,8416
      typedef typename __gnu_cxx::__promote_2<__gnu_cxx::__promote_2573,12009
      typedef typename __gnu_cxx::__promote_2<__gnu_cxx::__promote_2655,14017
      typedef typename __gnu_cxx::__promote_3<__gnu_cxx::__promote_3673,14574
      typedef typename __gnu_cxx::__promote_2<__gnu_cxx::__promote_2691,15087
      typedef typename __gnu_cxx::__promote_2<__gnu_cxx::__promote_2709,15583
      typedef typename __gnu_cxx::__promote_2<__gnu_cxx::__promote_2727,16084
      typedef typename __gnu_cxx::__promote_2<__gnu_cxx::__promote_2908,20478
      typedef typename __gnu_cxx::__promote_2<__gnu_cxx::__promote_2942,21483
      typedef typename __gnu_cxx::__promote_2<__gnu_cxx::__promote_2960,22049
      typedef typename __gnu_cxx::__promote_2<__gnu_cxx::__promote_21094,25801
namespace std _GLIBCXX_VISIBILITY(1144,27167
namespace tr11148,27246
  using std::assoc_laguerref;1150,27262
  using std::assoc_laguerrel;1151,27292
  using std::assoc_laguerre;1152,27322
  using std::assoc_legendref;1154,27352
  using std::assoc_legendrel;1155,27382
  using std::assoc_legendre;1156,27412
  using std::betaf;1158,27442
  using std::betal;1159,27462
  using std::beta;1160,27482
  using std::comp_ellint_1f;1162,27502
  using std::comp_ellint_1l;1163,27531
  using std::comp_ellint_1;1164,27560
  using std::comp_ellint_2f;1166,27589
  using std::comp_ellint_2l;1167,27618
  using std::comp_ellint_2;1168,27647
  using std::comp_ellint_3f;1170,27676
  using std::comp_ellint_3l;1171,27705
  using std::comp_ellint_3;1172,27734
  using std::cyl_bessel_if;1174,27763
  using std::cyl_bessel_il;1175,27791
  using std::cyl_bessel_i;1176,27819
  using std::cyl_bessel_jf;1178,27847
  using std::cyl_bessel_jl;1179,27875
  using std::cyl_bessel_j;1180,27903
  using std::cyl_bessel_kf;1182,27931
  using std::cyl_bessel_kl;1183,27959
  using std::cyl_bessel_k;1184,27987
  using std::cyl_neumannf;1186,28015
  using std::cyl_neumannl;1187,28042
  using std::cyl_neumann;1188,28069
  using std::ellint_1f;1190,28096
  using std::ellint_1l;1191,28120
  using std::ellint_1;1192,28144
  using std::ellint_2f;1194,28168
  using std::ellint_2l;1195,28192
  using std::ellint_2;1196,28216
  using std::ellint_3f;1198,28240
  using std::ellint_3l;1199,28264
  using std::ellint_3;1200,28288
  using std::expintf;1202,28312
  using std::expintl;1203,28334
  using std::expint;1204,28356
  using std::hermitef;1206,28378
  using std::hermitel;1207,28401
  using std::hermite;1208,28424
  using std::laguerref;1210,28447
  using std::laguerrel;1211,28471
  using std::laguerre;1212,28495
  using std::legendref;1214,28519
  using std::legendrel;1215,28543
  using std::legendre;1216,28567
  using std::riemann_zetaf;1218,28591
  using std::riemann_zetal;1219,28619
  using std::riemann_zeta;1220,28647
  using std::sph_besself;1222,28675
  using std::sph_bessell;1223,28701
  using std::sph_bessel;1224,28727
  using std::sph_legendref;1226,28753
  using std::sph_legendrel;1227,28781
  using std::sph_legendre;1228,28809
  using std::sph_neumannf;1230,28837
  using std::sph_neumannl;1231,28864
  using std::sph_neumann;1232,28891
namespace std _GLIBCXX_VISIBILITY(1255,29437
namespace tr11258,29515
  assoc_laguerref(1265,29601
  assoc_laguerrel(1269,29751
    assoc_laguerre(1277,30026
      typedef typename __gnu_cxx::__promote<__gnu_cxx::__promote1279,30096
  assoc_legendref(1284,30247
  assoc_legendrel(1288,30399
    assoc_legendre(1294,30668
      typedef typename __gnu_cxx::__promote<__gnu_cxx::__promote1296,30738
  betaf(1301,30891
  betal(1305,30991
  template<typename _Tpx,1309,31120
    inline typename __gnu_cxx::__promote_2<__gnu_cxx::__promote_21310,31161
    beta(1311,31224
      typedef typename __gnu_cxx::__promote_2<__gnu_cxx::__promote_21313,31259
  comp_ellint_1f(1318,31404
  comp_ellint_1l(1322,31506
    comp_ellint_1(1328,31741
      typedef typename __gnu_cxx::__promote<__gnu_cxx::__promote1330,31774
  comp_ellint_2f(1335,31914
  comp_ellint_2l(1339,32016
    comp_ellint_2(1345,32252
      typedef typename __gnu_cxx::__promote<__gnu_cxx::__promote1347,32285
  comp_ellint_3f(1352,32425
  comp_ellint_3l(1356,32545
  template<typename _Tp,1360,32725
    inline typename __gnu_cxx::__promote_2<__gnu_cxx::__promote_21361,32765
    comp_ellint_3(1362,32827
      typedef typename __gnu_cxx::__promote_2<__gnu_cxx::__promote_21364,32871
  cyl_bessel_if(1369,33025
  cyl_bessel_il(1373,33143
  template<typename _Tpnu,1377,33321
    inline typename __gnu_cxx::__promote_2<__gnu_cxx::__promote_21378,33362
    cyl_bessel_i(1379,33425
      typedef typename __gnu_cxx::__promote_2<__gnu_cxx::__promote_21381,33469
  cyl_bessel_jf(1386,33623
  cyl_bessel_jl(1390,33741
  template<typename _Tpnu,1394,33922
    inline typename __gnu_cxx::__promote_2<__gnu_cxx::__promote_21395,33963
    cyl_bessel_j(1396,34026
      typedef typename __gnu_cxx::__promote_2<__gnu_cxx::__promote_21398,34070
  cyl_bessel_kf(1403,34224
  cyl_bessel_kl(1407,34342
  template<typename _Tpnu,1411,34523
    inline typename __gnu_cxx::__promote_2<__gnu_cxx::__promote_21412,34564
    cyl_bessel_k(1413,34627
      typedef typename __gnu_cxx::__promote_2<__gnu_cxx::__promote_21415,34671
  cyl_neumannf(1420,34825
  cyl_neumannl(1424,34943
  template<typename _Tpnu,1428,35106
    inline typename __gnu_cxx::__promote_2<__gnu_cxx::__promote_21429,35147
    cyl_neumann(1430,35210
      typedef typename __gnu_cxx::__promote_2<__gnu_cxx::__promote_21432,35253
  ellint_1f(1437,35408
  ellint_1l(1441,35520
  template<typename _Tp,1445,35695
    inline typename __gnu_cxx::__promote_2<__gnu_cxx::__promote_21446,35735
    ellint_1(1447,35797
      typedef typename __gnu_cxx::__promote_2<__gnu_cxx::__promote_21449,35837
  ellint_2f(1454,35987
  ellint_2l(1458,36099
  template<typename _Tp,1462,36275
    inline typename __gnu_cxx::__promote_2<__gnu_cxx::__promote_21463,36315
    ellint_2(1464,36377
      typedef typename __gnu_cxx::__promote_2<__gnu_cxx::__promote_21466,36417
  ellint_3f(1471,36567
  ellint_3l(1475,36697
  template<typename _Tp,1479,36896
  template<typename _Tp, typename _Tpn,1479,36896
    inline typename __gnu_cxx::__promote_3<__gnu_cxx::__promote_31480,36951
    ellint_3(1481,37019
      typedef typename __gnu_cxx::__promote_3<__gnu_cxx::__promote_31483,37070
  expintf(1488,37232
  expintl(1492,37320
    expint(1498,37518
      typedef typename __gnu_cxx::__promote<__gnu_cxx::__promote1500,37544
  hermitef(1505,37677
  hermitel(1509,37795
    hermite(1515,38021
      typedef typename __gnu_cxx::__promote<__gnu_cxx::__promote1517,38066
  laguerref(1522,38210
  laguerrel(1526,38325
    laguerre(1532,38549
      typedef typename __gnu_cxx::__promote<__gnu_cxx::__promote1534,38595
  legendref(1539,38735
  legendrel(1543,38857
    legendre(1549,39088
      typedef typename __gnu_cxx::__promote<__gnu_cxx::__promote1551,39134
  riemann_zetaf(1556,39281
  riemann_zetal(1560,39381
    riemann_zeta(1566,39591
      typedef typename __gnu_cxx::__promote<__gnu_cxx::__promote1568,39623
  sph_besself(1573,39762
  sph_bessell(1577,39881
    sph_bessel(1583,40115
      typedef typename __gnu_cxx::__promote<__gnu_cxx::__promote1585,40163
  sph_legendref(1590,40305
  sph_legendrel(1594,40459
    sph_legendre(1600,40741
      typedef typename __gnu_cxx::__promote<__gnu_cxx::__promote1602,40813
  sph_neumannf(1607,40966
  sph_neumannl(1611,41087
    sph_neumann(1617,41324
      typedef typename __gnu_cxx::__promote<__gnu_cxx::__promote1619,41373
namespace std _GLIBCXX_VISIBILITY(1633,41701
namespace tr11637,41780
  using __gnu_cxx::conf_hypergf;1639,41796
  using __gnu_cxx::conf_hypergl;1640,41829
  using __gnu_cxx::conf_hyperg;1641,41862
  using __gnu_cxx::hypergf;1643,41895
  using __gnu_cxx::hypergl;1644,41923
  using __gnu_cxx::hyperg;1645,41951
namespace std _GLIBCXX_VISIBILITY(1659,42232
namespace tr11663,42311
  conf_hypergf(1670,42395
  conf_hypergl(1674,42525
  template<typename _Tpa,1678,42710
  template<typename _Tpa, typename _Tpc,1678,42710
    inline typename __gnu_cxx::__promote_3<__gnu_cxx::__promote_31679,42765
    conf_hyperg(1680,42833
      typedef typename __gnu_cxx::__promote_3<__gnu_cxx::__promote_31682,42884
  hypergf(1687,43046
  hypergl(1691,43182
  template<typename _Tpa,1695,43370
  template<typename _Tpa, typename _Tpb,1695,43370
  template<typename _Tpa, typename _Tpb, typename _Tpc,1695,43370
    inline typename __gnu_cxx::__promote_4<__gnu_cxx::__promote_41696,43440
    hyperg(1697,43514
      typedef typename __gnu_cxx::__promote_4<__gnu_cxx::__promote_41699,43570

/usr/include/c++/13/tr1/complex,552
#define _GLIBCXX_TR1_COMPLEX 30,1163
namespace std _GLIBCXX_VISIBILITY(38,1284
      typedef typename __gnu_cxx::__promote<__gnu_cxx::__promote321,9467
      typedef typename __gnu_cxx::__promote<__gnu_cxx::__promote339,10003
      typedef typename __gnu_cxx::__promote_2<__gnu_cxx::__promote_2354,10415
      typedef typename __gnu_cxx::__promote_2<__gnu_cxx::__promote_2362,10731
      typedef typename __gnu_cxx::__promote_2<__gnu_cxx::__promote_2370,11061
      typedef typename __gnu_cxx::__promote_2<__gnu_cxx::__promote_2395,11728

/usr/include/c++/13/tr1/complex.h,40
#define _GLIBCXX_TR1_COMPLEX_H 30,1169

/usr/include/c++/13/tr1/cstdarg,38
#define _GLIBCXX_TR1_CSTDARG 30,1163

/usr/include/c++/13/tr1/cstdbool,39
#define _GLIBCXX_TR1_CSTDBOOL 30,1166

/usr/include/c++/13/tr1/cstdint,425
#define _GLIBCXX_TR1_CSTDINT 30,1163
#   define _UNDEF__STDC_LIMIT_MACROS41,1398
#   define __STDC_LIMIT_MACROS42,1435
#   define _UNDEF__STDC_CONSTANT_MACROS45,1508
#   define __STDC_CONSTANT_MACROS46,1548
#   undef __STDC_LIMIT_MACROS50,1648
#   undef _UNDEF__STDC_LIMIT_MACROS51,1678
#   undef __STDC_CONSTANT_MACROS54,1761
#   undef _UNDEF__STDC_CONSTANT_MACROS55,1794
namespace std _GLIBCXX_VISIBILITY(61,1887

/usr/include/c++/13/tr1/cstdio,80
#define _GLIBCXX_TR1_CSTDIO 30,1160
namespace std _GLIBCXX_VISIBILITY(40,1307

/usr/include/c++/13/tr1/cstdlib,81
#define _GLIBCXX_TR1_CSTDLIB 30,1163
namespace std _GLIBCXX_VISIBILITY(42,1334

/usr/include/c++/13/tr1/ctgmath,38
#define _GLIBCXX_TR1_CTGMATH 30,1163

/usr/include/c++/13/tr1/ctime,36
#define _GLIBCXX_TR1_CTIME 30,1157

/usr/include/c++/13/tr1/ctype.h,30
#define _TR1_CTYPE_H 30,1155

/usr/include/c++/13/tr1/cwchar,80
#define _GLIBCXX_TR1_CWCHAR 30,1160
namespace std _GLIBCXX_VISIBILITY(40,1308

/usr/include/c++/13/tr1/cwctype,81
#define _GLIBCXX_TR1_CWCTYPE 30,1163
namespace std _GLIBCXX_VISIBILITY(40,1313

/usr/include/c++/13/tr1/ell_integral.tcc,90
#define _GLIBCXX_TR1_ELL_INTEGRAL_TCC 43,1753
namespace std _GLIBCXX_VISIBILITY(45,1794

/usr/include/c++/13/tr1/exp_integral.tcc,90
#define _GLIBCXX_TR1_EXP_INTEGRAL_TCC 46,1797
namespace std _GLIBCXX_VISIBILITY(50,1878

/usr/include/c++/13/tr1/fenv.h,29
#define _TR1_FENV_H 30,1152

/usr/include/c++/13/tr1/float.h,30
#define _TR1_FLOAT_H 30,1155

/usr/include/c++/13/tr1/functional,12608
#define _GLIBCXX_TR1_FUNCTIONAL 30,1178
namespace std _GLIBCXX_VISIBILITY(47,1582
    class _Has_result_type_helper 104,3500
        struct _Wrap_type107,3586
        static __one __test(111,3648
    struct _Has_result_type121,3888
    struct _Maybe_get_result_type131,4147
      typedef typename _Functor::result_type 137,4277
    struct _Weak_result_type_impl145,4488
    struct _Weak_result_type_impl<_Weak_result_type_impl152,4712
      typedef _Res result_type;154,4772
    struct _Weak_result_type_impl<_Weak_result_type_impl159,4919
      typedef _Res result_type;161,4982
    struct _Weak_result_type_impl<_Weak_result_type_impl166,5127
      typedef _Res result_type;168,5190
    struct _Weak_result_type_impl<_Weak_result_type_impl173,5356
      typedef _Res result_type;175,5428
    struct _Weak_result_type_impl<_Weak_result_type_impl180,5600
      typedef _Res result_type;182,5678
    struct _Weak_result_type_impl<_Weak_result_type_impl187,5853
      typedef _Res result_type;189,5934
    struct _Weak_result_type_impl<_Weak_result_type_impl194,6115
      typedef _Res result_type;196,6201
    struct _Weak_result_type204,6403
      typedef typename _Mem_fn<_Mem_fn225,7053
    class result_of<result_of234,7314
      typedef typename _Weak_result_type<_Weak_result_type245,7689
      typedef typename _Functor255,7976
      typedef void type;266,8284
    struct _Derives_from_unary_function 275,8563
    private:private277,8626
    struct _Derives_from_binary_function 291,9076
    private:private293,9140
      typedef _Tp type;309,9699
      typedef _Tp* type;315,9814
      typedef typename _Tp::result_type 400,12725
    struct _Reference_wrapper_base410,13077
    struct _Reference_wrapper_base<_Reference_wrapper_base419,13337
    struct _Reference_wrapper_base<_Reference_wrapper_base431,13689
    struct _Reference_wrapper_base<_Reference_wrapper_base443,14080
    struct _Reference_wrapper_base<_Reference_wrapper_base449,14294
    struct _Reference_wrapper_base<_Reference_wrapper_base455,14494
    struct _Reference_wrapper_base<_Reference_wrapper_base461,14712
    struct _Reference_wrapper_base<_Reference_wrapper_base467,14927
    struct _Reference_wrapper_base<_Reference_wrapper_base473,15154
    struct _Reference_wrapper_base<_Reference_wrapper_base479,15381
    struct _Reference_wrapper_base<_Reference_wrapper_base485,15626
    class reference_wrapper491,15809
        _M_func_type;497,16096
      _Tp* _M_data;499,16119
      typedef _Tp type;501,16151
      reference_wrapper(504,16191
      reference_wrapper(508,16285
      operator=(operator=513,16416
      operator _Tp&(operator _Tp&519,16545
      get(523,16615
        operator()(operator()528,16752
    struct _Mem_fn_const_or_non558,17529
      typedef const _Tp& type;560,17567
      typedef _Tp& type;566,17681
    struct _Maybe_unary_or_binary_function 575,17975
    class _Mem_fn<_Mem_fn589,18566
      typedef _Res (_Class::*_Functor)_Functor592,18696
        _M_call(596,18793
        _M_call(602,18985
      typedef _Res result_type;606,19125
      explicit _Mem_fn(608,19158
      operator()(operator()612,19252
      operator()(operator()617,19398
	operator()(operator()623,19618
      _Functor __pmf;627,19746
    class _Mem_fn<_Mem_fn632,19912
      typedef _Res (_Class::*_Functor)_Functor636,20065
        _M_call(640,20168
        _M_call(646,20360
      typedef _Res result_type;650,20500
      explicit _Mem_fn(652,20533
      operator()(operator()656,20627
      operator()(operator()661,20779
        _Res operator()(operator()666,20992
      _Functor __pmf;670,21132
    class _Mem_fn<_Mem_fn675,21301
      typedef _Res (_Class::*_Functor)_Functor679,21460
        _M_call(683,21566
        _M_call(689,21758
      typedef _Res result_type;693,21898
      explicit _Mem_fn(695,21931
      operator()(operator()699,22025
      operator()(operator()704,22180
	operator()(operator()710,22409
      _Functor __pmf;714,22537
    class _Mem_fn<_Mem_fn719,22712
      typedef _Res (_Class::*_Functor)_Functor723,22883
        _M_call(727,22995
        _M_call(733,23187
      typedef _Res result_type;737,23327
      explicit _Mem_fn(739,23360
      operator()(operator()743,23455
      operator()(operator()748,23617
        _Res operator()(operator()753,23839
      _Functor __pmf;757,23979
    class _Mem_fn<_Mem_fn762,24053
        _M_call(768,24233
      template<typename _Tp,771,24316
        _M_call(773,24373
      template<typename _Tp,776,24464
        _M_call(778,24527
        _M_call(783,24673
        _M_call(788,24811
      template<typename _Tp,795,25054
      template<typename _Tp,797,25170
        struct _Result_type806,25545
      template<typename _CVMem,815,25774
        struct result<result816,25820
      template<typename _CVMem,819,25889
        struct result<result820,25935
      _Mem_fn(824,26020
      operator()(operator()828,26108
      operator()(operator()832,26201
      operator()(operator()837,26319
      operator()(operator()841,26413
        operator()(operator()847,26608
      _Res _Class::*__pm;__pm851,26714
    struct is_bind_expression871,27238
    struct is_placeholder882,27562
  namespace placeholders894,27877
    struct is_placeholder<is_placeholder908,28397
    struct is_placeholder<is_placeholder913,28510
    struct _Index_tuple 922,28737
      typedef _Index_tuple<_Indexes...> __type;938,29246
    struct _Safe_tuple_element_impl953,29649
      typedef _No_tuple_element type;964,30025
   struct _Safe_tuple_element972,30224
      typedef _Tp& result_type;1002,31366
        operator()(operator()1010,31679
        operator()(operator()1034,32585
	  typedef typename _Build_index_tuple<_Build_index_tuple1038,32734
	  typedef typename _Safe_tuple_element<_Safe_tuple_element1072,33900
	  typedef typename add_reference<add_reference1077,34023
        operator()(operator()1082,34168
	  typedef typename add_reference<add_reference1102,34798
        operator()(operator()1108,34973
    struct _Maybe_wrap_member_pointer1118,35302
      typedef _Tp type;1120,35346
      __do_wrap(1123,35401
    struct _Maybe_wrap_member_pointer<_Maybe_wrap_member_pointer1133,35713
      typedef _Mem_fn<_Tp _Class::*> type;1135,35772
      __do_wrap(1138,35840
    class _Bind<_Bind1147,36076
      typedef _Bind __self_type;1150,36165
        _Bound_indexes;1152,36273
      _Functor _M_f;1154,36298
      tuple<_Bound_args...> _M_bound_args;1155,36319
      template<typename... _Args,1158,36389
        __call(1163,36628
      template<typename... _Args,1170,36857
        __call(1175,37133
      template<typename... _Args,1182,37371
        __call(1187,37653
      template<typename... _Args,1195,37916
        __call(1201,38248
      explicit _Bind(1209,38498
        operator()(operator()1218,38867
        operator()(operator()1229,39252
        operator()(operator()1241,39653
        operator()(operator()1254,40105
      typedef _Bind_result __self_type;1267,40527
      typedef typename _Build_index_tuple<_Build_index_tuple1268,40567
      typedef _Result result_type;1313,42005
        operator()(operator()1322,42253
        operator()(operator()1330,42458
        operator()(operator()1338,42672
        operator()(operator()1346,42895
    struct is_bind_expression<is_bind_expression1354,43133
    struct is_bind_expression<is_bind_expression1362,43408
    struct is_bind_expression<is_bind_expression1370,43695
    struct is_bind_expression<is_bind_expression1378,43988
    struct is_bind_expression<is_bind_expression1426,45909
    struct is_bind_expression<is_bind_expression1430,46017
    struct is_bind_expression<is_bind_expression1434,46131
    struct is_bind_expression<is_bind_expression1438,46248
    struct is_bind_expression<is_bind_expression1442,46389
    struct is_bind_expression<is_bind_expression1446,46531
    struct is_bind_expression<is_bind_expression1450,46679
    struct is_bind_expression<is_bind_expression1454,46830
      typedef _Maybe_wrap_member_pointer<_Functor> __maybe_type;1465,47209
      typedef typename __maybe_type::type 1466,47274
      typedef _Bind<__functor_type(__functor_type1467,47332
      typedef _Maybe_wrap_member_pointer<_Functor> __maybe_type;1478,47731
      typedef typename __maybe_type::type 1479,47796
      typedef _Bind_result<_Result,_Result1480,47854
  class bad_function_call 1490,48166
    struct __is_location_invariant1505,48666
  union _Nocopy_types1514,48880
    void*       _M_object;1516,48906
    const void* _M_const_object;1517,48933
  union _Any_data1522,49058
    void*       _M_access(1524,49080
    const void* _M_access(1525,49142
      _M_access(1529,49243
      _M_access(1534,49356
    _Nocopy_types _M_unused;1537,49437
    char _M_pod_data[_M_pod_data1538,49466
  enum _Manager_operation1541,49517
    __get_type_info,1543,49547
    __get_functor_ptr,1544,49568
    __clone_functor,1545,49591
    __destroy_functor1546,49612
    struct _Simple_type_wrapper1552,49797
      _Simple_type_wrapper(1554,49835
      _Tp __value;1556,49899
    struct __is_location_invariant<__is_location_invariant1560,49951
  class _Function_base1586,50699
      class _Base_manager1593,50907
	typedef integral_constant<bool,bool1602,51200
	typedef integral_constant<bool, __stored_locally> _Local_storage;1602,51200
	_M_get_pointer(1606,51332
	_M_clone(1617,51694
	_M_clone(1625,51962
	_M_destroy(1634,52216
	_M_destroy(1641,52374
	_M_manager(1648,52497
	_M_init_functor(1674,53080
	  _M_not_empty_function(1679,53244
	  _M_not_empty_function(1684,53387
	template<typename _Class,1687,53451
	  _M_not_empty_function(1689,53507
	  _M_not_empty_function(1694,53619
	_M_init_functor(1699,53705
	_M_init_functor(1703,53838
      class _Ref_manager 1708,54011
	typedef _Function_base::_Base_manager<_Functor*> _Base;1710,54078
	_M_manager(1714,54161
	_M_init_functor(1736,54674
    _Function_base(1742,54829
    ~_Function_base(1744,54875
    bool _M_empty(1751,54989
    typedef bool (*_Manager_type)_Manager_type1753,55040
    _Any_data     _M_functor;1756,55160
    _Manager_type _M_manager;1757,55190
      typedef _Function_base::_Base_manager<_Functor> _Base;1767,55492
      typedef _Function_base::_Base_manager<_Functor> _Base;1781,55906
      typedef _Function_base::_Ref_manager<_Functor> _Base;1795,56348
      typedef _Function_base::_Ref_manager<_Functor> _Base;1810,56811
      typedef _Function_handler<void(void1825,57306
      typedef _Member _Class:_Class1842,57846
      typedef _Simple_type_wrapper<_Functor> _Wrapper;1843,57888
      typedef _Function_base::_Base_manager<_Wrapper> _Base;1844,57943
    class function<function1878,58776
      struct _Hidden_type1884,59005
	_Hidden_type* _M_bool;1886,59039
      typedef _Hidden_type* _Hidden_type::* _Safe_bool;1890,59138
      typedef _Res _Signature_type(1893,59202
      struct _Useless 1895,59259
      typedef _Res result_type;1898,59305
      function(1906,59520
      function(1912,59694
      operator=(operator=1959,61573
      operator=(operator=1973,61903
        typename __gnu_cxx::__enable_if<!is_integral<_Functor>::value,value2001,62889
	operator=(operator=2003,63012
      void swap(2018,63405
      explicit operator bool(operator bool2036,63908
      operator _Safe_bool(operator _Safe_bool2039,63981
      typedef _Res (*_Invoker_type)_Invoker_type2095,65615
      _Invoker_type _M_invoker;2096,65684
	typedef _Function_handler<_Signature_type, _Functor> _My_handler;2121,66365
    operator()(operator()2134,66730
    operator==(operator==2204,68460
    operator==(operator==2210,68629
    operator!=(operator!=2222,69017
    operator!=(operator!=2228,69185
    struct is_bind_expression<is_bind_expression2249,69784
    struct is_bind_expression<is_bind_expression2253,69892
    struct is_bind_expression<is_bind_expression2257,70006
    struct is_bind_expression<is_bind_expression2261,70123
  template<typename _Result,2264,70214
    struct is_bind_expression<is_bind_expression2265,70264
  template<typename _Result,2268,70356
    struct is_bind_expression<is_bind_expression2269,70406
  template<typename _Result,2272,70504
    struct is_bind_expression<is_bind_expression2273,70554
  template<typename _Result,2276,70655
    struct is_bind_expression<is_bind_expression2277,70705

/usr/include/c++/13/tr1/functional_hash.h,682
#define _GLIBCXX_TR1_FUNCTIONAL_HASH_H 31,1300
namespace std _GLIBCXX_VISIBILITY(35,1369
    struct hash 49,1825
      operator(52,1902
      operator()(operator()60,2103
#define _TR1_hashtable_define_trivial_hash(66,2269
#undef _TR1_hashtable_define_trivial_hash86,3092
    struct _Fnv_hash_base97,3537
        hash(101,3620
    struct _Fnv_hash_base<_Fnv_hash_base112,3889
        hash(116,3975
    struct _Fnv_hash_base<_Fnv_hash_base130,4349
        hash(134,4435
  struct _Fnv_hash148,4816
    using _Fnv_hash_base<_Fnv_hash_base151,4881
      hash(155,4977
    hash<float>::operator()(operator()162,5131
    hash<double>::operator()(operator()171,5369

/usr/include/c++/13/tr1/gamma.tcc,187
#define _GLIBCXX_TR1_GAMMA_TCC 47,1854
namespace std _GLIBCXX_VISIBILITY(51,1928
# define _GLIBCXX_MATH_NS 56,2039
# define _GLIBCXX_MATH_NS 60,2121
#undef _GLIBCXX_MATH_NS470,14481

/usr/include/c++/13/tr1/hashtable.h,3695
#define _GLIBCXX_TR1_HASHTABLE_H 32,1308
namespace std _GLIBCXX_VISIBILITY(39,1436
    class _Hashtable109,4612
      typedef __gnu_cxx::__alloc_traits<_Allocator> _Alloc_traits;129,5323
      typedef _Allocator                                  allocator_type;132,5403
      typedef _Value                                      value_type;133,5477
      typedef _Key                                        key_type;134,5547
      typedef _Equal                                      key_equal;135,5615
      typedef typename _Allocator::difference_type        difference_type;138,5797
      typedef typename _Allocator::size_type              size_type;139,5872
      typedef typename _Alloc_traits::pointer             pointer;140,5941
      typedef typename _Alloc_traits::const_pointer       const_pointer;141,6008
      typedef typename _Alloc_traits::reference           reference;142,6081
      typedef typename _Alloc_traits::const_reference     const_reference;143,6150
      typedef __detail::_Node_iterator<value_type,value_type145,6226
      typedef __detail::_Node_iterator<value_type, __constant_iterators,145,6226
							  local_iterator;147,6329
      typedef __detail::_Node_const_iterator<value_type,value_type148,6354
					     __constant_iterators,149,6411
							  const_local_iterator;151,6472
      typedef __detail::_Hashtable_iterator<value_type,value_type153,6504
      typedef __detail::_Hashtable_iterator<value_type, __constant_iterators,153,6504
							  iterator;155,6610
      typedef __detail::_Hashtable_const_iterator<value_type,value_type156,6629
						  __constant_iterators,157,6691
							  const_iterator;159,6748
      template<typename _Key2,161,6774
      template<typename _Key2, typename _Value2,161,6774
      template<typename _Key2, typename _Value2, typename _Ex2,161,6774
      template<typename _Key2, typename _Value2, typename _Ex2, bool __unique2,161,6774
      typedef __detail::_Hash_node<_Value,_Value166,6934
      typedef __detail::_Hash_node<_Value, __cache_hash_code> _Node;166,6934
						      _Node_allocator_type;168,7071
						      _Bucket_allocator_type;170,7174
						      _Value_allocator_type;173,7280
      _Node_allocator_type   _M_node_allocator;175,7316
      _Node**                _M_buckets;176,7364
      size_type              _M_bucket_count;177,7405
      size_type              _M_element_count;178,7451
      _RehashPolicy          _M_rehash_policy;179,7498
      begin(221,8489
      begin(230,8629
      end(239,8775
      end(243,8866
      size(247,8964
      empty(251,9049
      get_allocator(255,9121
      _M_get_Value_allocator(259,9230
      max_size(263,9343
	typedef __gnu_cxx::__alloc_traits<_Node_allocator_type> _Traits;265,9374
      key_eq(271,9530
      bucket_count(278,9690
      max_bucket_count(282,9768
      bucket_size(286,9845
      bucket(290,9955
      begin(297,10119
      end(301,10218
      begin(305,10303
      end(309,10420
      load_factor(313,10502
      __rehash_policy(323,10859
      std::pair<std::pair339,11166
      std::pair<std::pair342,11243
      typedef typename __gnu_cxx::__conditional_type<__gnu_cxx::__conditional_type350,11644
	_Insert_Return_Type;352,11771
      typedef typename __gnu_cxx::__conditional_type<__gnu_cxx::__conditional_type354,11794
	_Insert_Conv_Type;358,11969
      std::pair<std::pair368,12215
      insert(380,12493
      insert(385,12634
      insert(389,12769
	  typedef __gnu_cxx::__alloc_traits<_Value_allocator_type> _Traits;439,14237
      typedef __gnu_cxx::__alloc_traits<_Value_allocator_type> _Traits;461,14943
    operator=(operator=635,21409

/usr/include/c++/13/tr1/hashtable_policy.h,4662
namespace std _GLIBCXX_VISIBILITY(31,1323
      typedef typename std::iterator_traits<std::iterator_traits57,2134
    struct _Node_iterator_base89,3105
      _Node_iterator_base(91,3142
      _M_incr(95,3244
      _Hash_node<_Hash_node98,3297
      _Hash_node<_Value, __cache>*  _M_cur;98,3297
    operator==(operator==103,3407
    operator!=(operator!=109,3628
    struct _Node_iterator114,3860
      typedef _Value                                   value_type;117,3942
      __gnu_cxx::__conditional_type<__gnu_cxx::__conditional_type119,4032
                                                       pointer;121,4130
      __gnu_cxx::__conditional_type<__gnu_cxx::__conditional_type123,4217
                                                       reference;125,4315
      typedef std::ptrdiff_t                           difference_type;126,4381
      typedef std::forward_iterator_tag                iterator_category;127,4453
      _Node_iterator(129,4528
      _Node_iterator(133,4619
      operator*(137,4745
      operator->(141,4823
      operator++(145,4926
      operator++(152,5020
    struct _Node_const_iterator161,5199
      typedef _Value                                   value_type;164,5287
      typedef const _Value*                            pointer;165,5354
      typedef const _Value&                            reference;166,5418
      typedef std::ptrdiff_t                           difference_type;167,5484
      typedef std::forward_iterator_tag                iterator_category;168,5556
      _Node_const_iterator(170,5631
      _Node_const_iterator(174,5728
      _Node_const_iterator(177,5844
      operator*(182,6021
      operator->(186,6099
      operator++(190,6208
      operator++(197,6308
    struct _Hashtable_iterator_base206,6466
      _Hashtable_iterator_base(208,6508
      _M_incr(213,6695
      _Hash_node<_Hash_node223,6841
      _Hash_node<_Value, __cache>*   _M_cur_node;223,6841
      _Hash_node<_Hash_node224,6891
      _Hash_node<_Value, __cache>**  _M_cur_bucket;224,6891
    operator==(operator==244,7451
    operator!=(operator!=250,7692
    struct _Hashtable_iterator255,7944
      typedef _Value                                   value_type;258,8036
      __gnu_cxx::__conditional_type<__gnu_cxx::__conditional_type260,8126
                                                       pointer;262,8224
      __gnu_cxx::__conditional_type<__gnu_cxx::__conditional_type264,8311
                                                       reference;266,8409
      typedef std::ptrdiff_t                           difference_type;267,8475
      typedef std::forward_iterator_tag                iterator_category;268,8547
      _Hashtable_iterator(270,8622
      _Hashtable_iterator(273,8711
      _Hashtable_iterator(278,8891
      operator*(282,9034
      operator->(286,9117
      operator++(290,9230
      operator++(297,9328
    struct _Hashtable_const_iterator306,9512
      typedef _Value                                   value_type;309,9610
      typedef const _Value*                            pointer;310,9677
      typedef const _Value&                            reference;311,9741
      typedef std::ptrdiff_t                           difference_type;312,9807
      typedef std::forward_iterator_tag                iterator_category;313,9879
      _Hashtable_const_iterator(315,9954
      _Hashtable_const_iterator(318,10049
      _Hashtable_const_iterator(323,10234
      _Hashtable_const_iterator(326,10367
      operator*(332,10589
      operator->(336,10672
      operator++(340,10791
      operator++(347,10895
  struct _Mod_range_hashing361,11243
    typedef std::size_t first_argument_type;363,11275
    typedef std::size_t second_argument_type;364,11320
    typedef std::size_t result_type;365,11366
    operator()(operator()368,11420
  struct _Default_ranged_hash 377,11852
  struct _Prime_rehash_policy381,12017
    _Prime_rehash_policy(383,12051
    max_load_factor(387,12180
    std::pair<std::pair402,12771
    enum { _S_n_primes 406,12899
    float                _M_max_load_factor;408,12972
    float                _M_growth_factor;409,13017
    mutable std::size_t  _M_next_resize;410,13060
    struct _Map_base 494,16156
      typedef typename _Pair::second_type 499,16332
      typedef typename _Pair::second_type 505,16540
    struct _Rehash_base 533,17597
      typedef void* _Hash_code_type;584,19520
      typedef _H1 hasher;651,21583
      typedef std::size_t _Hash_code_type;663,21906
      typedef _H1 hasher;718,23448
      typedef std::size_t _Hash_code_type;730,23777

/usr/include/c++/13/tr1/hypergeometric.tcc,196
#define _GLIBCXX_TR1_HYPERGEOMETRIC_TCC 42,1612
namespace std _GLIBCXX_VISIBILITY(44,1655
# define _GLIBCXX_MATH_NS 49,1766
# define _GLIBCXX_MATH_NS 53,1848
#undef _GLIBCXX_MATH_NS777,27874

/usr/include/c++/13/tr1/inttypes.h,41
#define _GLIBCXX_TR1_INTTYPES_H 30,1172

/usr/include/c++/13/tr1/legendre_function.tcc,199
#define _GLIBCXX_TR1_LEGENDRE_FUNCTION_TCC 45,1794
namespace std _GLIBCXX_VISIBILITY(49,1880
# define _GLIBCXX_MATH_NS 54,1991
# define _GLIBCXX_MATH_NS 58,2073
#undef _GLIBCXX_MATH_NS296,10466

/usr/include/c++/13/tr1/limits.h,31
#define _TR1_LIMITS_H 30,1158

/usr/include/c++/13/tr1/math.h,4342
#define _GLIBCXX_TR1_MATH_H 30,1160
using std::tr1::acos;38,1286
using std::tr1::acosh;39,1308
using std::tr1::asin;40,1331
using std::tr1::asinh;41,1353
using std::tr1::atan;42,1376
using std::tr1::atan2;43,1398
using std::tr1::atanh;44,1421
using std::tr1::cbrt;45,1444
using std::tr1::ceil;46,1466
using std::tr1::copysign;47,1488
using std::tr1::cos;48,1514
using std::tr1::cosh;49,1535
using std::tr1::erf;50,1557
using std::tr1::erfc;51,1578
using std::tr1::exp;52,1600
using std::tr1::exp2;53,1621
using std::tr1::expm1;54,1643
using std::tr1::fabs;55,1666
using std::tr1::fdim;56,1688
using std::tr1::floor;57,1710
using std::tr1::fma;58,1733
using std::tr1::fmax;59,1754
using std::tr1::fmin;60,1776
using std::tr1::fmod;61,1798
using std::tr1::frexp;62,1820
using std::tr1::hypot;63,1843
using std::tr1::ilogb;64,1866
using std::tr1::ldexp;65,1889
using std::tr1::lgamma;66,1912
using std::tr1::llrint;67,1936
using std::tr1::llround;68,1960
using std::tr1::log;69,1985
using std::tr1::log10;70,2006
using std::tr1::log1p;71,2029
using std::tr1::log2;72,2052
using std::tr1::logb;73,2074
using std::tr1::lrint;74,2096
using std::tr1::lround;75,2119
using std::tr1::nearbyint;76,2143
using std::tr1::nextafter;77,2170
using std::tr1::nexttoward;78,2197
using std::tr1::pow;79,2225
using std::tr1::remainder;80,2246
using std::tr1::remquo;81,2273
using std::tr1::rint;82,2297
using std::tr1::round;83,2319
using std::tr1::scalbln;84,2342
using std::tr1::scalbn;85,2367
using std::tr1::sin;86,2391
using std::tr1::sinh;87,2412
using std::tr1::sqrt;88,2434
using std::tr1::tan;89,2456
using std::tr1::tanh;90,2477
using std::tr1::tgamma;91,2499
using std::tr1::trunc;92,2523
using std::tr1::assoc_laguerref;96,2555
using std::tr1::assoc_laguerre;97,2588
using std::tr1::assoc_laguerrel;98,2620
using std::tr1::assoc_legendref;100,2654
using std::tr1::assoc_legendre;101,2687
using std::tr1::assoc_legendrel;102,2719
using std::tr1::betaf;104,2753
using std::tr1::beta;105,2776
using std::tr1::betal;106,2798
using std::tr1::comp_ellint_1f;108,2822
using std::tr1::comp_ellint_1;109,2854
using std::tr1::comp_ellint_1l;110,2885
using std::tr1::comp_ellint_2f;112,2918
using std::tr1::comp_ellint_2;113,2950
using std::tr1::comp_ellint_2l;114,2981
using std::tr1::comp_ellint_3f;116,3014
using std::tr1::comp_ellint_3;117,3046
using std::tr1::comp_ellint_3l;118,3077
using std::tr1::conf_hypergf;120,3110
using std::tr1::conf_hyperg;121,3140
using std::tr1::conf_hypergl;122,3169
using std::tr1::cyl_bessel_if;124,3200
using std::tr1::cyl_bessel_i;125,3231
using std::tr1::cyl_bessel_il;126,3261
using std::tr1::cyl_bessel_jf;128,3293
using std::tr1::cyl_bessel_j;129,3324
using std::tr1::cyl_bessel_jl;130,3354
using std::tr1::cyl_bessel_kf;132,3386
using std::tr1::cyl_bessel_k;133,3417
using std::tr1::cyl_bessel_kl;134,3447
using std::tr1::cyl_neumannf;136,3479
using std::tr1::cyl_neumann;137,3509
using std::tr1::cyl_neumannl;138,3538
using std::tr1::ellint_1f;140,3569
using std::tr1::ellint_1;141,3596
using std::tr1::ellint_1l;142,3622
using std::tr1::ellint_2f;144,3650
using std::tr1::ellint_2;145,3677
using std::tr1::ellint_2l;146,3703
using std::tr1::ellint_3f;148,3731
using std::tr1::ellint_3;149,3758
using std::tr1::ellint_3l;150,3784
using std::tr1::expintf;152,3812
using std::tr1::expint;153,3837
using std::tr1::expintl;154,3861
using std::tr1::hermitef;156,3887
using std::tr1::hermite;157,3913
using std::tr1::hermitel;158,3938
using std::tr1::hypergf;160,3965
using std::tr1::hyperg;161,3990
using std::tr1::hypergl;162,4014
using std::tr1::laguerref;164,4040
using std::tr1::laguerre;165,4067
using std::tr1::laguerrel;166,4093
using std::tr1::legendref;168,4121
using std::tr1::legendre;169,4148
using std::tr1::legendrel;170,4174
using std::tr1::riemann_zetaf;172,4202
using std::tr1::riemann_zeta;173,4233
using std::tr1::riemann_zetal;174,4263
using std::tr1::sph_besself;176,4295
using std::tr1::sph_bessel;177,4324
using std::tr1::sph_bessell;178,4352
using std::tr1::sph_legendref;180,4382
using std::tr1::sph_legendre;181,4413
using std::tr1::sph_legendrel;182,4443
using std::tr1::sph_neumannf;184,4475
using std::tr1::sph_neumann;185,4505
using std::tr1::sph_neumannl;186,4534

/usr/include/c++/13/tr1/memory,37
#define _GLIBCXX_TR1_MEMORY 31,1164

/usr/include/c++/13/tr1/modified_bessel_func.tcc,98
#define _GLIBCXX_TR1_MODIFIED_BESSEL_FUNC_TCC 47,1834
namespace std _GLIBCXX_VISIBILITY(51,1923

/usr/include/c++/13/tr1/poly_hermite.tcc,90
#define _GLIBCXX_TR1_POLY_HERMITE_TCC 40,1533
namespace std _GLIBCXX_VISIBILITY(42,1574

/usr/include/c++/13/tr1/poly_laguerre.tcc,195
#define _GLIBCXX_TR1_POLY_LAGUERRE_TCC 42,1638
namespace std _GLIBCXX_VISIBILITY(44,1680
# define _GLIBCXX_MATH_NS 49,1791
# define _GLIBCXX_MATH_NS 53,1873
#undef _GLIBCXX_MATH_NS321,11485

/usr/include/c++/13/tr1/random,37
#define _GLIBCXX_TR1_RANDOM 31,1176

/usr/include/c++/13/tr1/random.h,11397
#define _GLIBCXX_TR1_RANDOM_H 32,1277
namespace std _GLIBCXX_VISIBILITY(36,1337
    typedef __gnu_cxx::__conditional_type<(sizeof(74,2351
      struct _Adaptor82,2659
	typedef typename _Engine::result_type           _Engine_result_type;84,2690
	typedef typename _Distribution::input_type      result_type;85,2760
	_Adaptor(88,2837
	min(92,2898
	max(104,3158
	operator()(operator()127,3855
	_Engine _M_g;148,4610
    class variate_generator159,4912
	struct _Value162,4976
	  typedef _Eng type;164,4994
	  _S_ref(167,5039
	struct _Value<_Value171,5117
	  typedef _Eng type;173,5142
	  _S_ref(177,5219
	struct _Value<_Value181,5298
	  typedef _Eng type;183,5323
	  _S_ref(186,5368
      typedef _Engine                                engine_type;190,5428
      typedef typename _Value<_Engine>::type         engine_value_type;191,5494
      typedef _Dist                                  distribution_type;192,5566
      typedef typename _Dist::result_type            result_type;193,5638
      typedef typename __gnu_cxx::__enable_if<__gnu_cxx::__enable_if201,5972
	is_arithmetic<result_type>::value, result_type>::__type _IsValidType;202,6019
      variate_generator(211,6380
      operator()(operator()218,6619
        operator()(operator()226,6759
      engine(234,6978
      engine(242,7177
      distribution(249,7342
      distribution(256,7512
      min(263,7671
      max(270,7840
      __detail::_Adaptor<__detail::_Adaptor274,7917
      __detail::_Adaptor<engine_value_type, _Dist> _M_engine;274,7917
      distribution_type _M_dist;275,7979
    class linear_congruential315,9544
      __glibcxx_class_requires(317,9580
      typedef _UIntType result_type;322,9772
      linear_congruential(338,10249
        linear_congruential(348,10559
        seed(368,11107
      min(378,11441
      max(385,11636
      operator==(operator==404,12191
      operator!=(operator!=418,12724
      template<class _UIntType1, _UIntType1 __a1,429,13092
      template<class _UIntType1, _UIntType1 __a1, _UIntType1 __c1,429,13092
	       _UIntType1 __m1,430,13159
	       typename _CharT,431,13184
      template<class _UIntType1, _UIntType1 __a1,450,13934
      template<class _UIntType1, _UIntType1 __a1, _UIntType1 __c1,450,13934
	       _UIntType1 __m1,451,14001
	       typename _CharT,452,14026
        seed(460,14301
      _UIntType _M_x;467,14473
  typedef linear_congruential<unsigned long, 16807, 0, 2147483647> minstd_rand0;473,14586
  typedef linear_congruential<unsigned long, 48271, 0, 2147483647> minstd_rand;478,14734
    class mersenne_twister509,16257
      __glibcxx_class_requires(511,16290
      typedef _UIntType result_type;515,16385
      mersenne_twister(531,17020
      mersenne_twister(535,17079
        mersenne_twister(539,17178
      seed(543,17249
        seed(551,17374
      min(555,17479
      max(559,17536
      operator==(operator==576,18075
      operator!=(operator!=591,18659
      template<class _UIntType1, int __w1,605,19168
      template<class _UIntType1, int __w1, int __n1,605,19168
      template<class _UIntType1, int __w1, int __n1, int __m1,605,19168
      template<class _UIntType1, int __w1, int __n1, int __m1, int __r1,605,19168
	       _UIntType1 __a1,606,19241
	       _UIntType1 __a1, int __u1,606,19241
	       _UIntType1 __a1, int __u1, int __s1,606,19241
	       _UIntType1 __a1, int __u1, int __s1, _UIntType1 __b1,606,19241
	       _UIntType1 __a1, int __u1, int __s1, _UIntType1 __b1, int __t1,606,19241
	       _UIntType1 __c1,607,19313
	       _UIntType1 __c1, int __l1,607,19313
	       typename _CharT,608,19348
      template<class _UIntType1, int __w1,624,20013
      template<class _UIntType1, int __w1, int __n1,624,20013
      template<class _UIntType1, int __w1, int __n1, int __m1,624,20013
      template<class _UIntType1, int __w1, int __n1, int __m1, int __r1,624,20013
	       _UIntType1 __a1,625,20086
	       _UIntType1 __a1, int __u1,625,20086
	       _UIntType1 __a1, int __u1, int __s1,625,20086
	       _UIntType1 __a1, int __u1, int __s1, _UIntType1 __b1,625,20086
	       _UIntType1 __a1, int __u1, int __s1, _UIntType1 __b1, int __t1,625,20086
	       _UIntType1 __c1,626,20158
	       _UIntType1 __c1, int __l1,626,20158
	       typename _CharT,627,20193
        seed(636,20516
      _UIntType _M_x[_M_x643,20688
      int       _M_p;644,20722
    > mt19937;660,21185
    class subtract_with_carry684,22029
      __glibcxx_class_requires(686,22065
      typedef _IntType result_type;690,22189
      subtract_with_carry(701,22512
      subtract_with_carry(709,22697
        subtract_with_carry(719,23009
        seed(742,23872
      min(750,24108
      max(758,24296
      operator==(operator==778,24890
      operator!=(operator!=793,25487
      template<typename _IntType1,807,26008
      template<typename _IntType1, _IntType1 __m1,807,26008
      template<typename _IntType1, _IntType1 __m1, int __s1,807,26008
      template<typename _IntType1, _IntType1 __m1, int __s1, int __r1,807,26008
	       typename _CharT,808,26079
      template<typename _IntType1,824,26704
      template<typename _IntType1, _IntType1 __m1,824,26704
      template<typename _IntType1, _IntType1 __m1, int __s1,824,26704
      template<typename _IntType1, _IntType1 __m1, int __s1, int __r1,824,26704
	       typename _CharT,825,26775
        seed(833,27047
      typedef typename __gnu_cxx::__add_unsigned<_IntType>::__type _UIntType;840,27219
      _UIntType  _M_x[_M_x842,27298
      _UIntType  _M_carry;843,27331
      int        _M_p;844,27358
    class subtract_with_carry_01857,27728
      typedef _RealType result_type;861,27832
      subtract_with_carry_01(872,28159
      subtract_with_carry_01(883,28381
        subtract_with_carry_01(896,28731
        seed(914,29162
      min(922,29386
      max(930,29564
      operator==(operator==951,30175
      operator!=(operator!=974,30915
      template<typename _RealType1,988,31448
      template<typename _RealType1, int __w1,988,31448
      template<typename _RealType1, int __w1, int __s1,988,31448
      template<typename _RealType1, int __w1, int __s1, int __r1,988,31448
	       typename _CharT,989,31514
      template<typename _RealType1,1005,32149
      template<typename _RealType1, int __w1,1005,32149
      template<typename _RealType1, int __w1, int __s1,1005,32149
      template<typename _RealType1, int __w1, int __s1, int __r1,1005,32149
	       typename _CharT,1006,32215
        seed(1014,32491
      typedef __detail::_UInt32Type _UInt32Type;1026,32751
      _UInt32Type  _M_x[_M_x1027,32800
      _RealType    _M_npows[_M_npows1028,32840
      _UInt32Type  _M_carry;1029,32874
      int          _M_p;1030,32903
  typedef subtract_with_carry_01<float, 24, 10, 24>   ranlux_base_01;1033,32936
  typedef subtract_with_carry_01<double, 48, 5, 12> ranlux64_base_01;1037,33088
    class discard_block1047,33358
      typedef _UniformRandomNumberGenerator   base_type;1054,33583
      typedef typename base_type::result_type result_type;1056,33693
      discard_block(1067,34007
      discard_block(1077,34268
      discard_block(1087,34572
        discard_block(1096,34800
      void seed(1103,35002
        void seed(1115,35248
      base(1125,35441
      min(1132,35592
      max(1139,35748
      operator==(operator==1159,36330
      operator!=(operator!=1173,36890
      template<class _UniformRandomNumberGenerator1, int __p1,1186,37382
      template<class _UniformRandomNumberGenerator1, int __p1, int __r1,1186,37382
	       typename _CharT,1187,37455
      template<class _UniformRandomNumberGenerator1, int __p1,1203,38082
      template<class _UniformRandomNumberGenerator1, int __p1, int __r1,1203,38082
	       typename _CharT,1204,38155
      base_type _M_b;1211,38401
      int       _M_n;1212,38423
    subtract_with_carry<subtract_with_carry1220,38563
    subtract_with_carry<subtract_with_carry1229,38771
      > ranlux3_01;1238,38962
      > ranlux4_01;1244,39075
    class xor_combine1253,39351
      typedef _UniformRandomNumberGenerator1   base1_type;1262,39748
      typedef _UniformRandomNumberGenerator2   base2_type;1264,39872
      typedef typename base1_type::result_type _Result_type1;1267,39945
      typedef typename base2_type::result_type _Result_type2;1268,40007
      typedef typename __gnu_cxx::__conditional_type<__gnu_cxx::__conditional_type1272,40135
	_Result_type1,1274,40249
	_Result_type1, _Result_type2>::__type result_type;1274,40249
      xor_combine(1281,40447
      xor_combine(1285,40525
      xor_combine(1289,40664
        xor_combine(1294,40795
      seed(1299,40897
        seed(1307,40997
      base1(1314,41099
      base2(1318,41168
      min(1322,41231
      max(1326,41288
      operator()(operator()1334,41485
      operator==(operator==1351,42029
      operator!=(operator!=1368,42607
      template<class _UniformRandomNumberGenerator11, int __s11,1381,43091
	       class _UniformRandomNumberGenerator21, int __s21,1382,43156
	       typename _CharT,1383,43214
      template<class _UniformRandomNumberGenerator11, int __s11,1399,43864
	       class _UniformRandomNumberGenerator21, int __s21,1400,43929
	       typename _CharT,1401,43987
      base1_type  _M_b1;1414,44385
      base2_type  _M_b2;1415,44410
      result_type _M_max;1416,44435
  class random_device1424,44602
    typedef unsigned int result_type;1428,44651
    random_device(1435,44790
    ~random_device(1443,45086
    random_device(1449,45158
    _M_strtoul(1454,45290
    min(1474,45719
    max(1478,45808
    entropy(1482,45892
    operator()(operator()1486,45949
    FILE*        _M_file;1503,46303
    mt19937      _M_mt;1505,46335
      typedef _IntType input_type;1535,47047
      typedef _IntType result_type;1537,47138
        operator()(operator()1578,48071
	  typedef typename _UniformRandomNumberGenerator::result_type1580,48139
        operator()(operator()1593,48552
	  typedef typename _UniformRandomNumberGenerator::result_type1595,48637
  class bernoulli_distribution1657,50728
    typedef int  input_type;1660,50773
    typedef bool result_type;1661,50802
    bernoulli_distribution(1671,51065
    p(1681,51280
    reset(1690,51436
      operator()(operator()1697,51593
    template<typename _CharT,1714,52119
    template<typename _CharT,1728,52651
      operator>>(1730,52749
    double _M_p;1735,52888
      typedef _RealType input_type;1751,53280
      typedef _IntType  result_type;1752,53316
        operator>>(1804,54974
      typedef _RealType input_type;1837,55726
      typedef _IntType  result_type;1838,55762
      typedef _RealType input_type;1924,58402
      typedef _IntType  result_type;1925,58438
      typedef _RealType input_type;2032,61562
      typedef _RealType result_type;2033,61598
        operator()(operator()2063,62275
      typedef _RealType input_type;2121,64344
      typedef _RealType result_type;2122,64380
        operator()(operator()2153,65097
        operator>>(2183,66301
      typedef _RealType input_type;2204,66854
      typedef _RealType result_type;2205,66890
      typedef _RealType input_type;2293,69472
      typedef _RealType result_type;2294,69508
        operator>>(2351,71242

/usr/include/c++/13/tr1/random.tcc,5000
#define _GLIBCXX_TR1_RANDOM_TCC 32,1293
namespace std _GLIBCXX_VISIBILITY(34,1328
      struct _Mod54,1842
	__calc(57,1880
    operator()(operator()148,4471
    operator<<(157,4735
      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;160,4867
      typedef typename __ostream_type::ios_base 161,4934
    operator>>(178,5472
      typedef std::basic_istream<_CharT, _Traits>  __istream_type;181,5598
      typedef typename __istream_type::ios_base 182,5665
    operator()(operator()317,10521
    operator<<(363,11880
      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;367,12055
      typedef typename __ostream_type::ios_base 368,12122
    operator>>(390,12866
      typedef std::basic_istream<_CharT, _Traits>  __istream_type;394,13035
      typedef typename __istream_type::ios_base 395,13102
    operator()(operator()465,15208
    operator<<(498,16043
      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;501,16172
      typedef typename __ostream_type::ios_base 502,16239
    operator>>(522,16883
      typedef std::basic_ostream<_CharT, _Traits>  __istream_type;525,17006
      typedef typename __istream_type::ios_base 526,17073
    operator()(operator()609,19479
    operator<<(654,20728
      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;657,20861
      typedef typename __ostream_type::ios_base 658,20928
    operator>>(679,21616
      typedef std::basic_istream<_CharT, _Traits>  __istream_type;682,21743
      typedef typename __istream_type::ios_base 683,21810
    operator()(operator()709,22713
    operator<<(727,23046
      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;731,23193
      typedef typename __ostream_type::ios_base 732,23260
    operator>>(751,23853
      typedef std::basic_istream<_CharT, _Traits>  __istream_type;754,23986
      typedef typename __istream_type::ios_base 755,24053
    operator<<(845,27007
      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;849,27187
      typedef typename __ostream_type::ios_base 850,27254
    operator>>(869,27896
      typedef std::basic_istream<_CharT, _Traits>  __istream_type;873,28070
      typedef typename __istream_type::ios_base 874,28137
	typedef typename __gnu_cxx::__add_unsigned<__gnu_cxx::__add_unsigned897,28920
	typedef typename __gnu_cxx::__add_unsigned<__gnu_cxx::__add_unsigned899,29039
	typedef typename __gnu_cxx::__conditional_type<__gnu_cxx::__conditional_type901,29168
    operator<<(922,29852
      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;925,29958
      typedef typename __ostream_type::ios_base 926,30025
    operator>>(943,30564
      typedef std::basic_istream<_CharT, _Traits>  __istream_type;946,30664
      typedef typename __istream_type::ios_base 947,30731
    operator<<(961,31102
      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;964,31209
      typedef typename __ostream_type::ios_base 965,31276
      operator()(operator()987,32040
    operator<<(1008,32703
      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;1011,32831
      typedef typename __ostream_type::ios_base 1012,32898
      operator()(operator()1074,34909
    operator<<(1171,37336
      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;1174,37462
      typedef typename __ostream_type::ios_base 1175,37529
    operator>>(1196,38266
      typedef std::basic_istream<_CharT, _Traits>  __istream_type;1199,38386
      typedef typename __istream_type::ios_base 1200,38453
      operator()(operator()1299,41560
    operator<<(1409,44439
      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;1412,44566
      typedef typename __ostream_type::ios_base 1413,44633
    operator>>(1435,45394
      typedef std::basic_istream<_CharT, _Traits>  __istream_type;1438,45515
      typedef typename __istream_type::ios_base 1439,45582
    operator<<(1454,46007
      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;1457,46115
      typedef typename __ostream_type::ios_base 1458,46182
    operator>>(1478,46895
      typedef std::basic_istream<_CharT, _Traits>  __istream_type;1481,46997
      typedef typename __istream_type::ios_base 1482,47064
    operator<<(1496,47435
      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;1499,47555
      typedef typename __ostream_type::ios_base 1500,47622
      operator()(operator()1528,48515
    operator<<(1560,49255
      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;1563,49370
      typedef typename __ostream_type::ios_base 1564,49437
    operator>>(1588,50266
      typedef std::basic_istream<_CharT, _Traits>  __istream_type;1591,50375
      typedef typename __istream_type::ios_base 1592,50442
      operator()(operator()1639,51910
    operator<<(1693,53157
      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;1696,53271
      typedef typename __ostream_type::ios_base 1697,53338

/usr/include/c++/13/tr1/regex,11086
#define _GLIBCXX_TR1_REGEX 32,1227
namespace std _GLIBCXX_VISIBILITY(48,1499
  enum __syntax_option69,1912
      _S_icase,71,1941
      _S_nosubs,72,1957
      _S_optimize,73,1974
      _S_collate,74,1993
      _S_ECMAScript,75,2011
      _S_basic,76,2032
      _S_extended,77,2048
      _S_awk,78,2067
      _S_grep,79,2081
      _S_egrep,80,2096
      _S_syntax_last81,2112
  typedef unsigned int 95,2569
  enum __match_flag192,6445
      _S_not_bol,194,6471
      _S_not_eol,195,6489
      _S_not_bow,196,6507
      _S_not_eow,197,6525
      _S_any,198,6543
      _S_not_null,199,6557
      _S_continuous,200,6576
      _S_prev_avail,201,6597
      _S_sed,202,6618
      _S_no_copy,203,6632
      _S_first_only,204,6650
      _S_match_flag_last205,6671
  typedef std::bitset<_S_match_flag_last> match_flag_type;215,6953
  enum error_type327,11300
      _S_error_collate,329,11324
      _S_error_ctype,330,11348
      _S_error_escape,331,11370
      _S_error_backref,332,11393
      _S_error_brack,333,11417
      _S_error_paren,334,11439
      _S_error_brace,335,11461
      _S_error_badbrace,336,11483
      _S_error_range,337,11508
      _S_error_space,338,11530
      _S_error_badrepeat,339,11552
      _S_error_complexity,340,11578
      _S_error_stack,341,11605
      _S_error_last342,11627
  class regex_error411,13712
    regex_error(421,13901
    code(431,14155
    regex_constants::error_type _M_code;435,14210
    struct regex_traits450,14698
      typedef _Ch_type                     char_type;453,14740
      typedef std::basic_string<char_type> string_type;454,14794
      typedef std::locale                  locale_type;455,14850
      typedef std::ctype_base::mask        char_class_type;456,14906
      regex_traits(462,15051
      length(476,15542
      translate(487,15828
      translate_nocase(500,16260
        transform(529,17363
      imbue(651,21609
      getloc(662,21840
      locale_type _M_locale;666,21911
    isctype(671,22012
    value(706,22875
  template<typename _Ch_type,726,23475
  template<typename _Ch_type, typename _Rx_traits 726,23475
      typedef _Ch_type                              value_type;731,23608
      typedef regex_constants::syntax_option_type flag_type;732,23672
      typedef typename _Rx_traits::locale_type 733,23733
      typedef typename _Rx_traits::string_type 734,23794
      operator=(operator=874,29040
      operator=(operator=885,29414
        operator=(operator=896,29781
  typedef basic_regex<char>    regex;1070,35596
  typedef basic_regex<wchar_t> wregex;1073,35723
  template<typename _Ch_type,1083,35964
    swap(1085,36031
    class sub_match 1104,36766
      typedef typename iterator_traits<_BiIter>::value_type      value_type;1107,36841
                                                            difference_type;1109,36983
      typedef _BiIter                                              iterator;1110,37060
      bool matched;1113,37150
      length(1119,37270
      operator basic_string<value_type>(operator basic_string<value_type>1132,37763
      str(1145,38125
      compare(1162,38663
      compare(1175,39113
      compare(1188,39594
  typedef sub_match<const char*>             csub_match;1194,39772
  typedef sub_match<string::const_iterator>  ssub_match;1196,39893
  typedef sub_match<const wchar_t*>          wcsub_match;1199,40053
  typedef sub_match<wstring::const_iterator> wssub_match;1201,40171
    operator==(operator==1214,40588
    operator!=(operator!=1226,41030
    operator<(1238,41454
    operator<=(operator<=1250,41883
    operator>=(operator>=1262,42315
    operator>(1274,42739
  template<typename _Bi_iter,1285,43118
  template<typename _Bi_iter, typename _Ch_traits,1285,43118
    operator==(operator==1287,43205
  template<typename _Bi_iter,1300,43671
  template<typename _Bi_iter, typename _Ch_traits,1300,43671
    operator!=(operator!=1302,43758
  template<typename _Bi_iter,1313,44186
  template<typename _Bi_iter, typename _Ch_traits,1313,44186
    operator<(1315,44273
  template<typename _Bi_iter,1326,44698
  template<typename _Bi_iter, typename _Ch_traits,1326,44698
    operator>(1328,44785
  template<typename _Bi_iter,1339,45218
  template<typename _Bi_iter, typename _Ch_traits,1339,45218
    operator>=(operator>=1341,45305
  template<typename _Bi_iter,1352,45741
  template<typename _Bi_iter, typename _Ch_traits,1352,45741
    operator<=(operator<=1354,45828
  template<typename _Bi_iter,1366,46279
  template<typename _Bi_iter, typename _Ch_traits,1366,46279
    operator==(operator==1368,46366
  template<typename _Bi_iter,1381,46831
  template<typename _Bi_iter, typename _Ch_traits,1381,46831
    operator!=(operator!=1383,46918
  template<typename _Bi_iter,1395,47354
    operator<(1397,47435
  template<typename _Bi_iter,1409,47866
    operator>(1411,47947
  template<typename _Bi_iter,1423,48386
    operator>=(operator>=1425,48467
  template<typename _Bi_iter,1437,48911
    operator<=(operator<=1439,48992
    operator==(operator==1454,49502
    operator!=(operator!=1467,49968
    operator<(1479,50396
    operator>(1491,50821
    operator>=(operator>=1503,51254
    operator<=(operator<=1515,51690
    operator==(operator==1528,52155
    operator!=(operator!=1541,52625
    operator<(1553,53053
    operator>(1565,53478
    operator>=(operator>=1577,53911
    operator<=(operator<=1589,54347
    operator==(operator==1602,54798
    operator!=(operator!=1615,55255
    operator<(1627,55683
    operator>(1639,56108
    operator>=(operator>=1651,56541
    operator<=(operator<=1663,56977
    operator==(operator==1676,57445
    operator!=(operator!=1689,57918
    operator<(1701,58362
    operator>(1713,58803
    operator>=(operator>=1725,59252
    operator<=(operator<=1737,59704
  template<typename _Ch_type,1749,60077
  template<typename _Ch_type, typename _Ch_traits,1749,60077
    operator<<(1752,60199
  template<typename _Bi_iter,1779,61506
	   typename _Allocator 1780,61536
                                                              _Base_type;1786,61777
      typedef sub_match<_Bi_iter>                             value_type;1793,61929
      typedef typename _Base_type::const_reference 1794,62003
      typedef const_reference                                 reference;1795,62082
      typedef typename _Base_type::const_iterator 1796,62155
      typedef const_iterator                                  iterator;1797,62233
      typedef typename iterator_traits<iterator_traits1798,62305
      typedef typename _Allocator::size_type 1800,62450
      typedef _Allocator                                      allocator_type;1801,62523
      typedef typename iterator_traits<iterator_traits1802,62601
      typedef basic_string<char_type>                         string_type;1803,62674
      operator=(operator=1833,63466
  typedef match_results<const char*>             cmatch;2062,69712
  typedef match_results<string::const_iterator>  smatch;2063,69769
  typedef match_results<const wchar_t*>          wcmatch;2065,69854
  typedef match_results<wstring::const_iterator> wsmatch;2066,69912
  template<typename _Bi_iter,2076,70195
  template<typename _Bi_iter,2086,70544
    operator!=(operator!=2088,70608
  template<typename _Bi_iter,2100,70977
    swap(2102,71044
  template<typename _Bi_iter,2129,71875
  template<typename _Bi_iter, typename _Allocator,2129,71875
	   typename _Ch_type,2130,71926
  template<typename _Bi_iter,2152,72718
  template<typename _Bi_iter, typename _Ch_type,2152,72718
    regex_match(2154,72797
  template<typename _Ch_type,2177,73551
  template<typename _Ch_type, typename _Allocator,2177,73551
    regex_match(2179,73639
  template<typename _Ch_traits,2200,74353
  template<typename _Ch_traits, typename _Ch_alloc,2200,74353
	   typename _Allocator,2201,74405
	   typename _Allocator, typename _Ch_type,2201,74405
    regex_match(2203,74486
  template<typename _Ch_type,2224,75292
    regex_match(2226,75356
  template<typename _Ch_traits,2245,75991
  template<typename _Ch_traits, typename _Str_allocator,2245,75991
	   typename _Ch_type,2246,76048
    regex_match(2248,76108
  template<typename _Bi_iter,2270,77027
  template<typename _Bi_iter, typename _Allocator,2270,77027
	   typename _Ch_type,2271,77078
  template<typename _Bi_iter,2291,77846
  template<typename _Bi_iter, typename _Ch_type,2291,77846
    regex_search(2293,77932
  template<typename _Ch_type,2315,78733
    regex_search(2317,78815
  template<typename _Ch_type,2335,79511
    regex_search(2337,79578
  template<typename _Ch_traits,2354,80225
  template<typename _Ch_traits, typename _String_allocator,2354,80225
	   typename _Ch_type,2355,80285
    regex_search(2357,80345
  template<typename _Ch_traits,2376,81115
  template<typename _Ch_traits, typename _Ch_alloc,2376,81115
	   typename _Allocator,2377,81167
	   typename _Allocator, typename _Ch_type,2377,81167
    regex_search(2380,81252
  template<typename _Out_iter,2403,81932
  template<typename _Out_iter, typename _Bi_iter,2403,81932
	   typename _Rx_traits,2404,81982
  template<typename _Rx_traits,2423,82493
    regex_replace(2425,82578
  template<typename _Bi_iter,2444,83175
	   typename _Ch_type 2445,83205
      typedef basic_regex<_Ch_type, _Rx_traits>  regex_type;2450,83371
      typedef match_results<_Bi_iter>            value_type;2451,83432
      typedef std::ptrdiff_t                     difference_type;2452,83493
      typedef const value_type*value_type2453,83559
      typedef const value_type&                  reference;2454,83617
      typedef std::forward_iterator_tag          iterator_category;2455,83677
  typedef regex_iterator<const char*>             cregex_iterator;2544,85932
  typedef regex_iterator<string::const_iterator>  sregex_iterator;2545,85999
  typedef regex_iterator<const wchar_t*>          wcregex_iterator;2547,86094
  typedef regex_iterator<wstring::const_iterator> wsregex_iterator;2548,86162
  template<typename _Bi_iter,2559,86598
	   typename _Ch_type 2560,86628
      typedef basic_regex<_Ch_type, _Rx_traits> regex_type;2565,86800
      typedef sub_match<_Bi_iter>               value_type;2566,86860
      typedef std::ptrdiff_t                    difference_type;2567,86920
      typedef const value_type*value_type2568,86985
      typedef const value_type&                 reference;2569,87042
      typedef std::forward_iterator_tag         iterator_category;2570,87101
      typedef regex_iterator<_Bi_iter, _Ch_type, _Rx_traits> position_iterator;2703,92018
  typedef regex_token_iterator<const char*>             cregex_token_iterator;2713,92340
  typedef regex_token_iterator<string::const_iterator>  sregex_token_iterator;2715,92472
  typedef regex_token_iterator<const wchar_t*>          wcregex_token_iterator;2718,92652
  typedef regex_token_iterator<wstring::const_iterator> wsregex_token_iterator;2720,92800

/usr/include/c++/13/tr1/riemann_zeta.tcc,194
#define _GLIBCXX_TR1_RIEMANN_ZETA_TCC 43,1700
namespace std _GLIBCXX_VISIBILITY(47,1781
# define _GLIBCXX_MATH_NS 52,1892
# define _GLIBCXX_MATH_NS 56,1974
#undef _GLIBCXX_MATH_NS435,13877

/usr/include/c++/13/tr1/shared_ptr.h,5032
#define _TR1_SHARED_PTR_H 50,1834
namespace std _GLIBCXX_VISIBILITY(52,1863
  class bad_weak_ptr 62,2053
    what(66,2136
    class _Mutex_base83,2627
      enum { _S_need_barriers 87,2746
    class _Mutex_base<_Mutex_base91,2804
      enum { _S_need_barriers 98,3056
    class _Sp_counted_base_impl245,7181
      _Sp_counted_base_impl(250,7314
      _M_dispose(254,7427
      _M_get_deleter(258,7510
      _Ptr      _M_ptr;271,7832
      _Deleter  _M_del;272,7892
    struct _Sp_deleter279,8063
      typedef void result_type;281,8092
      typedef _Tp* argument_type;282,8124
      void operator()(operator()283,8158
	      typedef typename std::tr1::remove_pointer<std::tr1::remove_pointer299,8481
      operator=(operator=355,9940
      operator==(operator==386,10621
      operator<(390,10761
    class __weak_count405,11163
      __weak_count(408,11204
      __weak_count(412,11266
      __weak_count(419,11422
      ~__weak_count(426,11576
      operator=(operator=433,11703
      operator=(operator=445,11978
      _M_swap(457,12229
      _M_get_use_count(465,12387
      operator==(operator==469,12516
      operator<(473,12666
      _Sp_counted_base<_Lp>*  _M_pi;479,12873
  struct __static_cast_tag 536,14341
  struct __const_cast_tag 537,14373
  struct __dynamic_cast_tag 538,14404
    class __shared_ptr544,14648
      typedef _Tp   element_type;547,14689
      __shared_ptr(549,14730
        __shared_ptr(555,14858
	  typedef int _IsComplete[_IsComplete559,14998
      template<typename _Tp1,563,15104
        __shared_ptr(564,15153
        __shared_ptr(575,15569
        __shared_ptr(581,15816
        __shared_ptr(596,16362
	  typedef int _IsComplete[_IsComplete600,16570
        __shared_ptr(609,16815
        __shared_ptr(615,17017
        __shared_ptr(621,17217
        operator=(operator=631,17557
        operator=(operator=643,17947
      reset(652,18101
        reset(657,18213
      template<typename _Tp1,664,18397
        reset(666,18459
      operator*(671,18660
      operator->(678,18782
      get(685,18908
      typedef _Tp* __shared_ptr::*__unspecified_bool_type;__unspecified_bool_type690,19020
      operator __unspecified_bool_type(operator __unspecified_bool_type693,19092
      unique(697,19225
      use_count(701,19316
      swap(705,19417
      _M_get_deleter(713,19598
      template<typename _Tp1,716,19705
        _M_less(718,19767
      template<typename _Tp1,721,19881
      template<typename _Tp1,722,19957
      template<typename _Del,724,20032
      template<typename _Del, typename _Tp1,724,20032
        operator==(operator==730,20290
        operator!=(operator!=735,20471
        operator<(740,20652
      _Tp*         	   _M_ptr;743,20769
      __shared_count<_Lp>  _M_refcount;744,20830
    operator<<(787,22536
    class __weak_ptr808,23034
      typedef _Tp element_type;811,23073
      __weak_ptr(813,23112
        __weak_ptr(834,23920
        __weak_ptr(842,24160
        operator=(operator=848,24408
        operator=(operator=857,24627
      __shared_ptr<__shared_ptr864,24786
      lock(865,24815
      use_count(893,25483
      expired(897,25584
      reset(901,25694
      swap(905,25772
      _M_assign(914,25972
        _M_less(922,26143
      template<typename _Tp1,925,26254
      template<typename _Tp1,926,26330
        operator<(933,26625
      _Tp*       	 _M_ptr;936,26746
      __weak_count<_Lp>  _M_refcount;937,26803
    class __enable_shared_from_this948,27110
      __enable_shared_from_this(951,27167
      __enable_shared_from_this(953,27212
      operator=(operator=956,27322
      ~__enable_shared_from_this(959,27397
      __shared_ptr<__shared_ptr962,27455
      shared_from_this(963,27484
      __shared_ptr<__shared_ptr966,27571
      shared_from_this(967,27606
        _M_weak_assign(973,27761
      mutable __weak_ptr<__weak_ptr986,28163
      mutable __weak_ptr<_Tp, _Lp>  _M_weak_this;986,28163
    class shared_ptr993,28335
      shared_ptr(997,28405
        shared_ptr(1002,28504
      template<typename _Tp1,1005,28565
        shared_ptr(1006,28614
        shared_ptr(1010,28724
        shared_ptr(1015,28850
        shared_ptr(1023,29116
        shared_ptr(1029,29256
        shared_ptr(1033,29405
        shared_ptr(1037,29552
        operator=(operator=1042,29723
        operator=(operator=1053,30053
    class weak_ptr1087,31032
      weak_ptr(1091,31098
        weak_ptr(1095,31182
        weak_ptr(1099,31285
        operator=(operator=1104,31408
        operator=(operator=1112,31590
      lock(1119,31748
    class enable_shared_from_this1141,32133
      enable_shared_from_this(1144,32188
      enable_shared_from_this(1146,32231
      operator=(operator=1149,32329
      ~enable_shared_from_this(1152,32402
      shared_from_this(1156,32474
      shared_from_this(1160,32582
        _M_weak_assign(1166,32730
      mutable weak_ptr<_Tp>  _M_weak_this;1179,33124

/usr/include/c++/13/tr1/special_function_util.h,695
#define _GLIBCXX_TR1_SPECIAL_FUNCTION_UTIL_H 37,1421
namespace std _GLIBCXX_VISIBILITY(39,1469
    struct __floating_point_constant56,1915
      static const _Tp __value;58,1958
      struct __numeric_constants64,2069
        static _Tp __pi(67,2145
        static _Tp __pi_2(70,2294
        static _Tp __pi_3(73,2445
        static _Tp __pi_4(76,2596
        static _Tp __1_pi(79,2747
        static _Tp __2_sqrtpi(82,2905
        static _Tp __sqrt2(85,3061
        static _Tp __sqrt3(88,3214
        static _Tp __sqrtpio2(91,3371
        static _Tp __sqrt1_2(94,3530
        static _Tp __lnpi(97,3686
        static _Tp __gamma_e(100,3855
        static _Tp __euler(103,4019

/usr/include/c++/13/tr1/stdarg.h,31
#define _TR1_STDARG_H 30,1158

/usr/include/c++/13/tr1/stdbool.h,32
#define _TR1_STDBOOL_H 30,1161

/usr/include/c++/13/tr1/stdint.h,31
#define _TR1_STDINT_H 30,1158

/usr/include/c++/13/tr1/stdio.h,30
#define _TR1_STDIO_H 30,1155

/usr/include/c++/13/tr1/stdlib.h,195
#define _GLIBCXX_TR1_STDLIB_H 30,1166
using std::tr1::atoll;40,1315
using std::tr1::strtoll;41,1338
using std::tr1::strtoull;42,1363
using std::tr1::abs;44,1390
using std::tr1::div;46,1451

/usr/include/c++/13/tr1/tgmath.h,39
#define _GLIBCXX_TR1_TGMATH_H 30,1166

/usr/include/c++/13/tr1/tuple,1080
#define _GLIBCXX_TR1_TUPLE 33,1281
namespace std _GLIBCXX_VISIBILITY(41,1400
    struct __add_c_ref49,1573
    { typedef const _Tp& type;50,1596
    { typedef _Tp& type;54,1685
    struct __add_ref58,1786
    { typedef _Tp& type;59,1807
    { typedef _Tp& type;63,1888
      typedef _Tuple_impl<_Idx + 1, _Tail...> _Inherited;92,2878
    class tuple 132,4006
      typedef _Tuple_impl<0, _Elements...> _Inherited;134,4066
      tuple(137,4134
      tuple(140,4183
        tuple(144,4326
      tuple(147,4399
  template<> class tuple<tuple166,4768
      typedef _Tuple_impl<0, _T1, _T2> _Inherited;172,4974
      typedef _Head type;241,6792
      typedef tuple<_TElements...> _Tp;329,9398
      typedef tuple<_UElements...> _Up;330,9438
      typedef tuple<_TElements...> _Tp;340,9787
      typedef tuple<_UElements...> _Up;341,9827
    struct __strip_reference_wrapper375,10945
      typedef _Tp __type;377,10988
      typedef _Tp& __type;383,11115
      typedef _Tp& __type;389,11249
        __result_type;397,11513
  struct _Swallow_assign410,11840

/usr/include/c++/13/tr1/type_traits,5599
#define _GLIBCXX_TR1_TYPE_TRAITS 30,1175
namespace std _GLIBCXX_VISIBILITY(38,1309
  struct __sfinae_types49,1458
    typedef char __one;51,1486
    typedef struct { char __arr[__arr52,1510
    typedef struct { char __arr[2]; } __two;52,1510
#define _DEFINE_SPEC_0_HELPER 55,1561
#define _DEFINE_SPEC_1_HELPER 58,1632
#define _DEFINE_SPEC_2_HELPER 61,1715
#define _DEFINE_SPEC(64,1812
    struct integral_constant73,2120
      typedef _Tp                           value_type;76,2212
      typedef integral_constant<_Tp,_Tp77,2268
      typedef integral_constant<_Tp, __v>   type;77,2268
  typedef integral_constant<bool, true>     true_type;81,2356
  typedef integral_constant<bool, false>    false_type;84,2441
    struct __is_void_helper94,2664
    struct is_void102,2848
    struct __is_integral_helper108,3003
    struct is_integral126,3849
    struct __is_floating_point_helper132,4012
    struct is_floating_point140,4313
    struct is_array147,4503
    struct is_array<is_array151,4597
    struct is_array<is_array155,4683
    struct __is_pointer_helper159,4760
    struct is_pointer165,4914
    struct __is_member_object_pointer_helper179,5213
    struct is_member_object_pointer186,5443
    struct __is_member_function_pointer_helper192,5633
    struct is_member_function_pointer199,5868
    struct is_enum206,6080
    struct is_union212,6202
    struct is_class218,6326
    struct is_function224,6449
    struct is_function<is_function227,6550
    struct is_function<is_function230,6670
    struct is_function<is_function233,6793
    struct is_function<is_function236,6919
    struct is_function<is_function239,7048
    struct is_function<is_function242,7177
    struct is_function<is_function245,7309
    struct is_function<is_function248,7444
    struct is_arithmetic255,7618
    struct is_fundamental262,7806
    struct is_object269,7982
    struct is_scalar281,8272
    struct is_compound290,8524
    struct __is_member_pointer_helper295,8668
  struct is_member_pointer300,8825
    struct is_const308,9044
    struct is_const<is_const312,9119
    struct is_volatile317,9220
    struct is_volatile<is_volatile321,9298
    struct is_empty326,9404
    struct is_polymorphic332,9534
    struct is_abstract338,9673
    struct has_virtual_destructor344,9817
    struct alignment_of350,9973
    struct rank355,10099
    struct rank<rank359,10215
    struct rank<rank363,10340
    struct is_same389,11069
    struct remove_const400,11289
    { typedef _Tp     type;401,11313
    struct remove_const<remove_const404,11370
    { typedef _Tp     type;405,11405
    struct remove_volatile409,11486
    { typedef _Tp     type;410,11513
    struct remove_volatile<remove_volatile413,11570
    { typedef _Tp     type;414,11611
    struct remove_cv418,11686
      remove_const<typename remove_volatile<_Tp>::type>::type     type;421,11736
    struct add_const426,11859
    { typedef _Tp const     type;427,11880
    struct add_volatile431,11965
    { typedef _Tp volatile     type;432,11989
    struct add_cv436,12070
      add_const<typename add_volatile<_Tp>::type>::type     type;439,12117
    struct remove_extent446,12271
    { typedef _Tp     type;447,12296
    struct remove_extent<remove_extent450,12372
    { typedef _Tp     type;451,12409
    struct remove_extent<remove_extent454,12466
    { typedef _Tp     type;455,12498
    struct remove_all_extents459,12580
    { typedef _Tp     type;460,12610
    struct remove_all_extents<remove_all_extents463,12686
    { typedef typename remove_all_extents<_Tp>::type     type;464,12728
    struct remove_all_extents<remove_all_extents467,12820
    { typedef typename remove_all_extents<_Tp>::type     type;468,12857
    struct __remove_pointer_helper473,12996
    { typedef _Tp     type;474,13031
    { typedef _Up     type;478,13148
    struct remove_pointer482,13226
    struct add_pointer491,13429
    { typedef typename remove_reference<_Tp>::type*     type;492,13452
    struct is_reference495,13539
    struct is_reference<is_reference499,13618
    struct is_pod503,13702
    struct has_trivial_constructor508,13830
    struct has_trivial_copy513,13957
    struct has_trivial_assign518,14077
    struct has_trivial_destructor523,14199
    struct has_nothrow_constructor528,14325
    struct has_nothrow_copy533,14452
    struct has_nothrow_assign538,14572
    struct __is_signed_helper543,14690
    struct is_signed552,15037
    struct __is_unsigned_helper558,15196
    struct is_unsigned567,15593
    struct __is_base_of_helper573,15781
      typedef typename remove_cv<_Base>::type    _NoCv_Base;575,15818
      typedef typename remove_cv<_Derived>::type _NoCv_Derived;576,15879
    struct is_base_of584,16189
    struct __is_convertible_simple590,16356
    struct __is_int_or_cref606,16706
      typedef typename remove_reference<_Tp>::type __rr_Tp;608,16740
    struct is_convertible636,17825
    struct remove_reference643,18017
    { typedef _Tp     type;644,18045
    struct remove_reference<remove_reference647,18102
    { typedef _Tp     type;648,18136
    { typedef _Tp&    type;654,18331
    { typedef _Tp     type;658,18433
    struct add_reference661,18490
    struct aligned_storage667,18649
      union type669,18683
	unsigned char __data[__data671,18708
	struct __attribute__((__aligned__((_Align)))) { } __align;672,18737
#undef _DEFINE_SPEC_0_HELPER676,18815
#undef _DEFINE_SPEC_1_HELPER677,18844
#undef _DEFINE_SPEC_2_HELPER678,18873
#undef _DEFINE_SPEC679,18902

/usr/include/c++/13/tr1/unordered_map,44
#define _GLIBCXX_TR1_UNORDERED_MAP 30,1181

/usr/include/c++/13/tr1/unordered_map.h,1147
namespace std _GLIBCXX_VISIBILITY(30,1266
	_Base;57,2225
      typedef typename _Base::size_type 60,2246
      typedef typename _Base::hasher 61,2303
      typedef typename _Base::key_equal 62,2357
      typedef typename _Base::allocator_type 63,2414
	_Base;108,4055
      typedef typename _Base::size_type 111,4076
      typedef typename _Base::hasher 112,4133
      typedef typename _Base::key_equal 113,4187
      typedef typename _Base::allocator_type 114,4244
      typedef __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>  _Base;183,6788
      typedef typename _Base::value_type 186,6872
      typedef typename _Base::size_type 187,6930
      typedef typename _Base::hasher 188,6987
      typedef typename _Base::key_equal 189,7041
      typedef typename _Base::allocator_type 190,7098
      typedef __unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>  _Base;235,8765
      typedef typename _Base::value_type 238,8854
      typedef typename _Base::size_type 239,8912
      typedef typename _Base::hasher 240,8969
      typedef typename _Base::key_equal 241,9023
      typedef typename _Base::allocator_type 242,9080

/usr/include/c++/13/tr1/unordered_set,44
#define _GLIBCXX_TR1_UNORDERED_SET 30,1181

/usr/include/c++/13/tr1/unordered_set.h,1141
namespace std _GLIBCXX_VISIBILITY(30,1266
	_Base;57,2117
      typedef typename _Base::size_type 60,2138
      typedef typename _Base::hasher 61,2195
      typedef typename _Base::key_equal 62,2249
      typedef typename _Base::allocator_type 63,2306
	_Base;106,3788
      typedef typename _Base::size_type 109,3809
      typedef typename _Base::hasher 110,3866
      typedef typename _Base::key_equal 111,3920
      typedef typename _Base::allocator_type 112,3977
      typedef __unordered_set<_Value, _Hash, _Pred, _Alloc>  _Base;176,6296
      typedef typename _Base::value_type 179,6377
      typedef typename _Base::size_type 180,6435
      typedef typename _Base::hasher 181,6492
      typedef typename _Base::key_equal 182,6546
      typedef typename _Base::allocator_type 183,6603
      typedef __unordered_multiset<_Value, _Hash, _Pred, _Alloc>  _Base;225,8123
      typedef typename _Base::value_type 228,8209
      typedef typename _Base::size_type 229,8267
      typedef typename _Base::hasher 230,8324
      typedef typename _Base::key_equal 231,8378
      typedef typename _Base::allocator_type 232,8435

/usr/include/c++/13/tr1/utility,543
#define _GLIBCXX_TR1_UTILITY 30,1163
namespace std _GLIBCXX_VISIBILITY(40,1349
    { typedef _Tp1 type;63,1919
    { typedef _Tp2 type;67,2036
    struct __pair_get<__pair_get73,2123
      template<typename _Tp1,75,2154
      static _Tp1& __get(76,2199
      template<typename _Tp1,79,2287
      static const _Tp1& __const_get(80,2332
    struct __pair_get<__pair_get85,2458
      template<typename _Tp1,87,2489
      static _Tp2& __get(88,2534
      template<typename _Tp1,91,2623
      static const _Tp2& __const_get(92,2668

/usr/include/c++/13/tr1/wchar.h,38
#define _GLIBCXX_TR1_WCHAR_H 30,1163

/usr/include/c++/13/tr1/wctype.h,39
#define _GLIBCXX_TR1_WCTYPE_H 30,1166

/usr/include/c++/13/tr2/bool_set,1584
#define _GLIBCXX_TR2_BOOL_SET 30,1167
namespace std _GLIBCXX_VISIBILITY(37,1268
  class bool_set54,1778
    constexpr bool_set(59,1840
    constexpr bool_set(62,1919
    bool contains(65,2016
    bool equals(69,2155
    bool is_emptyset(73,2264
    bool is_indeterminate(77,2374
    bool is_singleton(81,2506
    operator bool(86,2634
    static bool_set indeterminate(94,2752
    static bool_set emptyset(102,2874
    operator!(110,3003
    operator^(114,3081
    operator|(118,3176
    operator&(122,3270
    operator==(operator==126,3365
    template<typename CharT,132,3508
      operator<<(134,3602
    template<typename CharT,140,3728
      operator>>(142,3822
    enum _Bool_set_val:_Bool_set_val153,4044
      _S_false 155,4088
      _S_true_ 156,4108
      _S_indet 157,4128
      _S_empty 158,4148
    _Bool_set_val _M_b;162,4200
    bool_set(165,4233
    bool_set _M_not(168,4290
    bool_set _M_xor(172,4362
    bool_set _M_or(176,4456
    bool_set _M_and(180,4548
    bool_set _M_eq(184,4642
    static _Bool_set_val _S_not[_S_not188,4734
    static _Bool_set_val _S_xor[_S_xor191,4779
    static _Bool_set_val _S_or[_S_or194,4827
    static _Bool_set_val _S_and[_S_and197,4874
    static _Bool_set_val _S_eq[_S_eq200,4922
  operator^(268,6269
  operator^(272,6358
  operator|(276,6447
  operator|(280,6536
  operator&(284,6625
  operator&(288,6714
  operator==(operator==295,6850
  operator==(operator==299,6941
  operator!=(operator!=303,7032
  operator!=(operator!=307,7117
  operator!=(operator!=311,7202

/usr/include/c++/13/tr2/bool_set.tcc,86
#define _GLIBCXX_TR2_BOOL_SET_TCC 30,1189
namespace std _GLIBCXX_VISIBILITY(34,1253

/usr/include/c++/13/tr2/dynamic_bitset,1462
#define _GLIBCXX_TR2_DYNAMIC_BITSET 30,1185
namespace std _GLIBCXX_VISIBILITY(42,1426
      typedef _WordT block_type;67,1970
      typedef _Alloc allocator_type;68,2003
      typedef size_t size_type;69,2040
      typedef __dynamic_bitset_base<_WordT, _Alloc> _Base;427,12009
      typedef _WordT block_type;428,12068
      typedef _Alloc allocator_type;429,12101
      typedef size_t size_type;430,12138
      class reference513,14528
	block_type *_M_wp;_M_wp517,14589
	size_type _M_bpos;518,14609
	reference(521,14644
	operator=(operator=529,14828
	operator=(operator=540,15048
	operator~(551,15313
	operator bool(operator bool555,15426
	flip(560,15562
      typedef bool const_reference;569,15696
      operator=(operator=665,19027
      operator&=(operator&=759,21207
      operator&=(operator&=766,21332
      operator|=(operator|=773,21463
      operator^=(operator^=780,21587
      operator-=(operator-=787,21712
      operator<<=(operator<<=802,22038
      operator>>=(operator>>=815,22279
      operator~(905,24415
      operator<<(1058,29373
      operator>>(1062,29485
      operator==(operator==1094,30465
      operator<(1099,30644
    operator!=(operator!=1123,31405
    operator<=(operator<=1129,31614
    operator>(1135,31822
    operator>=(operator>=1141,32025
    operator&(1158,32531
    operator|(1168,32836
    operator^(1178,33142
    operator-(1188,33448
    operator<<(1201,33857

/usr/include/c++/13/tr2/dynamic_bitset.tcc,303
#define _GLIBCXX_TR2_DYNAMIC_BITSET_TCC 31,1298
namespace std _GLIBCXX_VISIBILITY(35,1368
    operator>>(207,7048
      typedef typename _Traits::char_type 210,7157
      typedef std::basic_istream<_CharT, _Traits>  __istream_type;211,7219
      typedef typename __istream_type::ios_base 212,7286

/usr/include/c++/13/tr2/ratio,427
namespace std _GLIBCXX_VISIBILITY(31,1149
  typedef ratio<__safe_lshift<1, 10>::__value, 1> kibi;48,1642
  typedef ratio<__safe_lshift<1, 20>::__value, 1> mebi;49,1698
  typedef ratio<__safe_lshift<1, 30>::__value, 1> gibi;50,1754
  typedef ratio<__safe_lshift<1, 40>::__value, 1> tebi;51,1810
  typedef ratio<__safe_lshift<1, 50>::__value, 1> pebi;52,1866
  typedef ratio<__safe_lshift<1, 60>::__value, 1> exbi;53,1922

/usr/include/c++/13/tr2/type_traits,590
#define _GLIBCXX_TR2_TYPE_TRAITS 30,1176
namespace std _GLIBCXX_VISIBILITY(36,1290
    struct __reflection_typelist<__reflection_typelist60,1712
      typedef std::true_type					empty;62,1753
      typedef std::false_type					empty;69,1935
      struct first71,1977
	typedef _First						type;73,2004
      struct rest76,2041
	typedef __reflection_typelist<_Rest...>			type;78,2067
    struct bases88,2300
      typedef __reflection_typelist<__bases(_Tp)...>		type;90,2323
    struct direct_bases95,2492
      typedef __reflection_typelist<__direct_bases(_Tp)...>	type;97,2522

/usr/include/c++/13/x86_64-suse-linux/bits/atomic_word.h,161
#define _GLIBCXX_ATOMIC_WORD_H	30,1215
typedef int _Atomic_word;32,1249
#define _GLIBCXX_READ_MEM_BARRIER 36,1318
#define _GLIBCXX_WRITE_MEM_BARRIER 38,1434

/usr/include/c++/13/x86_64-suse-linux/bits/basic_file.h,88
#define _GLIBCXX_BASIC_FILE_STDIO_H 35,1337
namespace std _GLIBCXX_VISIBILITY(44,1538

/usr/include/c++/13/x86_64-suse-linux/bits/c++allocator.h,180
#define _GLIBCXX_CXX_ALLOCATOR_H 31,1278
# define __allocator_base 51,1766
#  define _GLIBCXX_SANITIZE_STD_ALLOCATOR 56,1892
#   define _GLIBCXX_SANITIZE_STD_ALLOCATOR 59,2004

/usr/include/c++/13/x86_64-suse-linux/bits/c++config.h,47023
#define _CPP_CPPCONFIG_WRAPPER 2,31
#define _GLIBCXX_CXX_CONFIG_H 35,1392
#define _GLIBCXX_RELEASE 38,1501
#define __GLIBCXX__ 41,1597
# define _GLIBCXX_PURE 50,1792
# define _GLIBCXX_CONST 54,1873
# define _GLIBCXX_NORETURN 58,1959
#  define _GLIBCXX_NOTHROW 64,2092
# define _GLIBCXX_HAVE_ATTRIBUTE_VISIBILITY 71,2266
# define _GLIBCXX_VISIBILITY(74,2352
# define _GLIBCXX_VISIBILITY(78,2557
# define _GLIBCXX_USE_DEPRECATED 96,3201
# define _GLIBCXX_DEPRECATED 100,3270
# define _GLIBCXX_DEPRECATED_SUGGEST(101,3332
# define _GLIBCXX_DEPRECATED104,3443
# define _GLIBCXX_DEPRECATED_SUGGEST(105,3472
# define _GLIBCXX11_DEPRECATED 109,3576
# define _GLIBCXX11_DEPRECATED_SUGGEST(110,3627
# define _GLIBCXX11_DEPRECATED112,3710
# define _GLIBCXX11_DEPRECATED_SUGGEST(113,3741
# define _GLIBCXX14_DEPRECATED 117,3847
# define _GLIBCXX14_DEPRECATED_SUGGEST(118,3898
# define _GLIBCXX14_DEPRECATED120,3981
# define _GLIBCXX14_DEPRECATED_SUGGEST(121,4012
# define _GLIBCXX17_DEPRECATED 125,4118
# define _GLIBCXX17_DEPRECATED_SUGGEST(126,4168
# define _GLIBCXX17_DEPRECATED128,4251
# define _GLIBCXX17_DEPRECATED_SUGGEST(129,4282
# define _GLIBCXX20_DEPRECATED 133,4388
# define _GLIBCXX20_DEPRECATED_SUGGEST(134,4438
# define _GLIBCXX20_DEPRECATED136,4521
# define _GLIBCXX20_DEPRECATED_SUGGEST(137,4552
# define _GLIBCXX23_DEPRECATED 141,4658
# define _GLIBCXX23_DEPRECATED_SUGGEST(142,4708
# define _GLIBCXX23_DEPRECATED144,4791
# define _GLIBCXX23_DEPRECATED_SUGGEST(145,4822
# define _GLIBCXX_ABI_TAG_CXX11 150,4939
# define _GLIBCXX_NODISCARD 155,5083
# define _GLIBCXX_NODISCARD157,5135
#  define _GLIBCXX_CONSTEXPR 167,5301
#  define _GLIBCXX_USE_CONSTEXPR 168,5340
#  define _GLIBCXX_CONSTEXPR170,5390
#  define _GLIBCXX_USE_CONSTEXPR 171,5419
#  define _GLIBCXX14_CONSTEXPR 177,5531
#  define _GLIBCXX14_CONSTEXPR179,5579
#  define _GLIBCXX17_CONSTEXPR 185,5683
#  define _GLIBCXX17_CONSTEXPR187,5731
#  define _GLIBCXX20_CONSTEXPR 193,5835
#  define _GLIBCXX20_CONSTEXPR195,5883
#  define _GLIBCXX23_CONSTEXPR 201,5987
#  define _GLIBCXX23_CONSTEXPR203,6035
#  define _GLIBCXX17_INLINE 209,6136
#  define _GLIBCXX17_INLINE211,6178
#  define _GLIBCXX_NOEXCEPT 218,6331
#  define _GLIBCXX_NOEXCEPT_IF(219,6368
#  define _GLIBCXX_USE_NOEXCEPT 220,6426
#  define _GLIBCXX_THROW(221,6467
#  define _GLIBCXX_NOEXCEPT223,6505
#  define _GLIBCXX_NOEXCEPT_IF(224,6533
#  define _GLIBCXX_USE_NOEXCEPT 225,6569
#  define _GLIBCXX_THROW(226,6609
# define _GLIBCXX_NOTHROW 231,6693
#  define _GLIBCXX_THROW_OR_ABORT(236,6803
#  define _GLIBCXX_THROW_OR_ABORT(238,6865
#define _GLIBCXX_NOEXCEPT_PARM 243,6974
#define _GLIBCXX_NOEXCEPT_QUAL 244,7016
#define _GLIBCXX_NOEXCEPT_PARM246,7068
#define _GLIBCXX_NOEXCEPT_QUAL247,7099
# define _GLIBCXX_EXTERN_TEMPLATE 260,7718
  typedef __SIZE_TYPE__ 	size_t;312,8817
  typedef __PTRDIFF_TYPE__	ptrdiff_t;313,8850
  typedef decltype(nullptr)316,8916
# define _GLIBCXX_USE_DUAL_ABI 331,9400
# undef _GLIBCXX_USE_CXX11_ABI335,9520
# define _GLIBCXX_USE_CXX11_ABI 339,9590
# define _GLIBCXX_NAMESPACE_CXX11 351,9841
# define _GLIBCXX_BEGIN_NAMESPACE_CXX11 352,9885
# define _GLIBCXX_END_NAMESPACE_CXX11 353,9945
# define _GLIBCXX_DEFAULT_ABI_TAG 354,9985
# define _GLIBCXX_NAMESPACE_CXX11356,10048
# define _GLIBCXX_BEGIN_NAMESPACE_CXX11357,10082
# define _GLIBCXX_END_NAMESPACE_CXX11358,10122
# define _GLIBCXX_DEFAULT_ABI_TAG359,10160
# define _GLIBCXX_INLINE_VERSION 363,10279
# define _GLIBCXX_BEGIN_NAMESPACE_VERSION 367,10417
# define _GLIBCXX_END_NAMESPACE_VERSION 368,10475
# define _GLIBCXX_BEGIN_INLINE_ABI_NAMESPACE(370,10571
# define _GLIBCXX_END_INLINE_ABI_NAMESPACE(371,10619
# define _GLIBCXX_BEGIN_NAMESPACE_VERSION397,11158
# define _GLIBCXX_END_NAMESPACE_VERSION398,11200
# define _GLIBCXX_BEGIN_INLINE_ABI_NAMESPACE(400,11313
# define _GLIBCXX_END_INLINE_ABI_NAMESPACE(401,11382
#undef _GLIBCXX_DEBUG407,11660
#define _GLIBCXX_ASSERTIONS 408,11682
# define _GLIBCXX_STD_C 461,13146
# define _GLIBCXX_BEGIN_NAMESPACE_CONTAINER 462,13180
# define _GLIBCXX_END_NAMESPACE_CONTAINER 464,13255
# define _GLIBCXX_STD_C 466,13305
# define _GLIBCXX_BEGIN_NAMESPACE_CONTAINER467,13333
# define _GLIBCXX_END_NAMESPACE_CONTAINER468,13377
# define _GLIBCXX_STD_A 472,13452
# define _GLIBCXX_BEGIN_NAMESPACE_ALGO 473,13486
# define _GLIBCXX_END_NAMESPACE_ALGO 475,13556
# define _GLIBCXX_STD_A 477,13601
# define _GLIBCXX_BEGIN_NAMESPACE_ALGO478,13629
# define _GLIBCXX_END_NAMESPACE_ALGO479,13668
#undef _GLIBCXX_LONG_DOUBLE_COMPAT484,13807
#undef _GLIBCXX_LONG_DOUBLE_ALT128_COMPAT489,14007
# define _GLIBCXX_NAMESPACE_LDBL 501,14365
# define _GLIBCXX_BEGIN_NAMESPACE_LDBL 502,14418
# define _GLIBCXX_END_NAMESPACE_LDBL 503,14487
# define _GLIBCXX_NAMESPACE_LDBL_OR_CXX11 504,14526
# define _GLIBCXX_BEGIN_NAMESPACE_LDBL_OR_CXX11 505,14590
# define _GLIBCXX_END_NAMESPACE_LDBL_OR_CXX11 506,14670
# define _GLIBCXX_NAMESPACE_LDBL 515,14905
# define _GLIBCXX_BEGIN_NAMESPACE_LDBL 516,14958
# define _GLIBCXX_END_NAMESPACE_LDBL 517,15027
# define _GLIBCXX_NAMESPACE_LDBL519,15072
# define _GLIBCXX_BEGIN_NAMESPACE_LDBL520,15105
# define _GLIBCXX_END_NAMESPACE_LDBL521,15144
# define _GLIBCXX_NAMESPACE_LDBL_OR_CXX11 525,15216
# define _GLIBCXX_BEGIN_NAMESPACE_LDBL_OR_CXX11 526,15283
# define _GLIBCXX_END_NAMESPACE_LDBL_OR_CXX11 527,15362
# define _GLIBCXX_NAMESPACE_LDBL_OR_CXX11 529,15443
# define _GLIBCXX_BEGIN_NAMESPACE_LDBL_OR_CXX11 530,15509
# define _GLIBCXX_END_NAMESPACE_LDBL_OR_CXX11 531,15587
namespace std536,15726
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 547,16180
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 550,16363
# define _GLIBCXX_ASSERTIONS 561,16625
# undef _GLIBCXX_EXTERN_TEMPLATE566,16770
# define _GLIBCXX_EXTERN_TEMPLATE 567,16803
# define __glibcxx_constexpr_assert(572,16889
# define __glibcxx_constexpr_assert(576,17061
#define _GLIBCXX_VERBOSE_ASSERT 579,17118
#define __glibcxx_assert_impl(597,17657
# define __glibcxx_assert_impl(605,17951
# define __glibcxx_assert(615,18186
# define __glibcxx_assert(618,18278
#  define _GLIBCXX_TSAN 624,18442
#  define _GLIBCXX_TSAN 627,18533
# define  _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(653,19632
# define  _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(656,19739
# define _GLIBCXX_BEGIN_EXTERN_C 660,19871
# define _GLIBCXX_END_EXTERN_C 661,19917
# define _GLIBCXX_USE_ALLOCATOR_NEW 663,19951
# define _GLIBCXX_BEGIN_EXTERN_C675,20395
# define _GLIBCXX_END_EXTERN_C676,20428
# define _GLIBCXX_PSEUDO_VISIBILITY(691,20785
# define _GLIBCXX_WEAK_DEFINITION698,21049
# define _GLIBCXX_USE_WEAK_REF 706,21423
#define _GLIBCXX_TXN_SAFE 716,21870
#define _GLIBCXX_TXN_SAFE_DYN 717,21913
#define _GLIBCXX_TXN_SAFE719,21974
#define _GLIBCXX_TXN_SAFE_DYN720,22000
# define _GLIBCXX_USE_STD_SPEC_FUNCS 725,22129
# define _GLIBCXX_USE_STD_SPEC_FUNCS 728,22302
# define _GLIBCXX_FAST_MATH 736,22539
# define _GLIBCXX_FAST_MATH 738,22575
#define __N(745,22897
#undef min748,23002
#undef max749,23013
#  define _GLIBCXX_USE_C99_MATH 755,23207
# define _GLIBCXX_USE_C99_COMPLEX 758,23305
# define _GLIBCXX_USE_C99_STDIO 761,23406
# define _GLIBCXX_USE_C99_STDLIB 764,23504
# define _GLIBCXX_USE_C99_WCHAR 767,23603
#  define _GLIBCXX_USE_C99_MATH 771,23705
# define _GLIBCXX_USE_C99_COMPLEX 774,23803
# define _GLIBCXX_USE_C99_STDIO 777,23904
# define _GLIBCXX_USE_C99_STDLIB 780,24002
# define _GLIBCXX_USE_C99_WCHAR 783,24101
#  define _GLIBCXX_USE_CHAR8_T 791,24346
# define __cpp_lib_char8_t 795,24422
#  define _GLIBCXX_USE_FLOAT128 802,24747
# define _GLIBCXX_FLOAT_IS_IEEE_BINARY32 810,24934
# define _GLIBCXX_DOUBLE_IS_IEEE_BINARY64 817,25125
# define _GLIBCXX_LDOUBLE_IS_IEEE_BINARY128 824,25329
namespace __gnu_cxx828,25412
#  define _GLIBCXX_HAS_BUILTIN(837,25601
#  define _GLIBCXX_HAS_BUILTIN(839,25683
# define _GLIBCXX_HAVE_BUILTIN_HAS_UNIQ_OBJ_REP 844,25812
# define _GLIBCXX_HAVE_BUILTIN_IS_AGGREGATE 848,25911
#  define _GLIBCXX_HAVE_BUILTIN_IS_SAME 852,26001
# define _GLIBCXX_HAVE_BUILTIN_LAUNDER 856,26095
#undef _GLIBCXX_HAS_BUILTIN859,26144
#define _GLIBCXX_DOXYGEN_ONLY(862,26247
#  define _GLIBCXX_USE_TBB_PAR_BACKEND 874,26652
#  define _PSTL_PAR_BACKEND_TBB878,26841
#  define _PSTL_PAR_BACKEND_SERIAL880,26880
# define _PSTL_ASSERT(883,26924
# define _PSTL_ASSERT_MSG(884,26987
#define _GLIBCXX_HAVE_ACOSF 895,27391
#define _GLIBCXX_HAVE_ACOSL 898,27474
#define _GLIBCXX_HAVE_ALIGNED_ALLOC 901,27565
#define _GLIBCXX_HAVE_ARC4RANDOM 904,27659
#define _GLIBCXX_HAVE_ARPA_INET_H 907,27756
#define _GLIBCXX_HAVE_ASINF 910,27845
#define _GLIBCXX_HAVE_ASINL 913,27928
#define _GLIBCXX_HAVE_AS_SYMVER_DIRECTIVE 916,28029
#define _GLIBCXX_HAVE_ATAN2F 919,28127
#define _GLIBCXX_HAVE_ATAN2L 922,28212
#define _GLIBCXX_HAVE_ATANF 925,28296
#define _GLIBCXX_HAVE_ATANL 928,28379
#define _GLIBCXX_HAVE_ATOMIC_LOCK_POLICY 931,28487
#define _GLIBCXX_HAVE_AT_QUICK_EXIT 934,28591
#define _GLIBCXX_HAVE_CEILF 940,28790
#define _GLIBCXX_HAVE_CEILL 943,28873
#define _GLIBCXX_HAVE_COMPLEX_H 946,28963
#define _GLIBCXX_HAVE_COSF 949,29049
#define _GLIBCXX_HAVE_COSHF 952,29131
#define _GLIBCXX_HAVE_COSHL 955,29214
#define _GLIBCXX_HAVE_COSL 958,29296
#define _GLIBCXX_HAVE_DECL_STRNLEN 962,29412
#define _GLIBCXX_HAVE_DIRENT_H 965,29508
#define _GLIBCXX_HAVE_DIRFD 968,29592
#define _GLIBCXX_HAVE_DLFCN_H 971,29680
#define _GLIBCXX_HAVE_ENDIAN_H 974,29771
#define _GLIBCXX_HAVE_EXCEPTION_PTR_SINCE_GCC46 977,29878
#define _GLIBCXX_HAVE_EXECINFO_H 980,29989
#define _GLIBCXX_HAVE_EXPF 983,30076
#define _GLIBCXX_HAVE_EXPL 986,30157
#define _GLIBCXX_HAVE_FABSF 989,30239
#define _GLIBCXX_HAVE_FABSL 992,30322
#define _GLIBCXX_HAVE_FCNTL_H 995,30410
#define _GLIBCXX_HAVE_FDOPENDIR 998,30497
#define _GLIBCXX_HAVE_FENV_H 1001,30588
#define _GLIBCXX_HAVE_FINITE 1004,30673
#define _GLIBCXX_HAVE_FINITEF 1007,30759
#define _GLIBCXX_HAVE_FINITEL 1010,30846
#define _GLIBCXX_HAVE_FLOAT_H 1013,30936
#define _GLIBCXX_HAVE_FLOORF 1016,31022
#define _GLIBCXX_HAVE_FLOORL 1019,31107
#define _GLIBCXX_HAVE_FMODF 1022,31191
#define _GLIBCXX_HAVE_FMODL 1025,31274
#define _GLIBCXX_HAVE_FREXPF 1034,31535
#define _GLIBCXX_HAVE_FREXPL 1037,31620
#define _GLIBCXX_HAVE_GETENTROPY 1040,31707
#define _GLIBCXX_HAVE_GETIPINFO 1043,31791
#define _GLIBCXX_HAVE_GETS 1046,31887
#define _GLIBCXX_HAVE_HYPOT 1049,31969
#define _GLIBCXX_HAVE_HYPOTF 1052,32053
#define _GLIBCXX_HAVE_HYPOTL 1055,32138
#define _GLIBCXX_HAVE_ICONV 1058,32217
#define _GLIBCXX_HAVE_INTTYPES_H 1064,32403
#define _GLIBCXX_HAVE_ISINFF 1070,32578
#define _GLIBCXX_HAVE_ISINFL 1073,32663
#define _GLIBCXX_HAVE_ISNANF 1079,32834
#define _GLIBCXX_HAVE_ISNANL 1082,32919
#define _GLIBCXX_HAVE_ISWBLANK 1085,32985
#define _GLIBCXX_HAVE_LC_MESSAGES 1088,33075
#define _GLIBCXX_HAVE_LDEXPF 1091,33165
#define _GLIBCXX_HAVE_LDEXPL 1094,33250
#define _GLIBCXX_HAVE_LIBINTL_H 1097,33341
#define _GLIBCXX_HAVE_LIMIT_AS 1100,33430
#define _GLIBCXX_HAVE_LIMIT_DATA 1103,33518
#define _GLIBCXX_HAVE_LIMIT_FSIZE 1106,33608
#define _GLIBCXX_HAVE_LIMIT_RSS 1109,33699
#define _GLIBCXX_HAVE_LIMIT_VMEM 1112,33788
#define _GLIBCXX_HAVE_LINK 1115,33873
#define _GLIBCXX_HAVE_LINK_H 1118,33959
#define _GLIBCXX_HAVE_LINUX_FUTEX 1121,34035
#define _GLIBCXX_HAVE_LINUX_RANDOM_H 1124,34136
#define _GLIBCXX_HAVE_LINUX_TYPES_H 1127,34239
#define _GLIBCXX_HAVE_LOCALE_H 1130,34336
#define _GLIBCXX_HAVE_LOG10F 1133,34423
#define _GLIBCXX_HAVE_LOG10L 1136,34508
#define _GLIBCXX_HAVE_LOGF 1139,34591
#define _GLIBCXX_HAVE_LOGL 1142,34672
#define _GLIBCXX_HAVE_MBSTATE_T 1151,34967
#define _GLIBCXX_HAVE_MEMALIGN 1154,35057
#define _GLIBCXX_HAVE_MEMORY_H 1157,35149
#define _GLIBCXX_HAVE_MODF 1160,35234
#define _GLIBCXX_HAVE_MODFF 1163,35316
#define _GLIBCXX_HAVE_MODFL 1166,35399
#define _GLIBCXX_HAVE_NETDB_H 1172,35576
#define _GLIBCXX_HAVE_NETINET_IN_H 1175,35671
#define _GLIBCXX_HAVE_NETINET_TCP_H 1178,35772
#define _GLIBCXX_HAVE_OPENAT 1187,36063
#define _GLIBCXX_HAVE_POLL 1190,36142
#define _GLIBCXX_HAVE_POLL_H 1193,36228
#define _GLIBCXX_HAVE_POSIX_MEMALIGN 1196,36321
#define _GLIBCXX_HAVE_POSIX_SEMAPHORE 1200,36453
#define _GLIBCXX_HAVE_POWF 1203,36545
#define _GLIBCXX_HAVE_POWL 1206,36626
#define _GLIBCXX_HAVE_QUICK_EXIT 1212,36805
#define _GLIBCXX_HAVE_READLINK 1215,36894
#define _GLIBCXX_HAVE_SECURE_GETENV 1218,36988
#define _GLIBCXX_HAVE_SETENV 1221,37080
#define _GLIBCXX_HAVE_SINCOS 1224,37165
#define _GLIBCXX_HAVE_SINCOSF 1227,37251
#define _GLIBCXX_HAVE_SINCOSL 1230,37338
#define _GLIBCXX_HAVE_SINF 1233,37422
#define _GLIBCXX_HAVE_SINHF 1236,37504
#define _GLIBCXX_HAVE_SINHL 1239,37587
#define _GLIBCXX_HAVE_SINL 1242,37669
#define _GLIBCXX_HAVE_SOCKATMARK 1248,37821
#define _GLIBCXX_HAVE_SQRTF 1251,37909
#define _GLIBCXX_HAVE_SQRTL 1254,37992
#define _GLIBCXX_HAVE_STDALIGN_H 1260,38176
#define _GLIBCXX_HAVE_STDBOOL_H 1263,38271
#define _GLIBCXX_HAVE_STDINT_H 1266,38364
#define _GLIBCXX_HAVE_STDLIB_H 1269,38456
#define _GLIBCXX_HAVE_STRERROR_L 1272,38545
#define _GLIBCXX_HAVE_STRERROR_R 1275,38636
#define _GLIBCXX_HAVE_STRINGS_H 1278,38731
#define _GLIBCXX_HAVE_STRING_H 1281,38824
#define _GLIBCXX_HAVE_STRTOF 1284,38911
#define _GLIBCXX_HAVE_STRTOLD 1287,38997
#define _GLIBCXX_HAVE_STRUCT_DIRENT_D_TYPE 1290,39092
#define _GLIBCXX_HAVE_STRXFRM_L 1293,39192
#define _GLIBCXX_HAVE_SYMLINK 1296,39279
#define _GLIBCXX_HAVE_SYMVER_SYMBOL_RENAMING_RUNTIME_SUPPORT 1300,39418
#define _GLIBCXX_HAVE_SYS_IOCTL_H 1306,39644
#define _GLIBCXX_HAVE_SYS_IPC_H 1309,39740
#define _GLIBCXX_HAVE_SYS_PARAM_H 1321,40147
#define _GLIBCXX_HAVE_SYS_RESOURCE_H 1324,40248
#define _GLIBCXX_HAVE_SYS_SDT_H 1327,40353
#define _GLIBCXX_HAVE_SYS_SEM_H 1330,40447
#define _GLIBCXX_HAVE_SYS_SOCKET_H 1333,40544
#define _GLIBCXX_HAVE_SYS_STATVFS_H 1336,40645
#define _GLIBCXX_HAVE_SYS_STAT_H 1339,40744
#define _GLIBCXX_HAVE_SYS_SYSINFO_H 1342,40843
#define _GLIBCXX_HAVE_SYS_TIME_H 1345,40942
#define _GLIBCXX_HAVE_SYS_TYPES_H 1348,41039
#define _GLIBCXX_HAVE_SYS_UIO_H 1351,41135
#define _GLIBCXX_HAVE_S_ISREG 1357,41314
#define _GLIBCXX_HAVE_TANF 1360,41398
#define _GLIBCXX_HAVE_TANHF 1363,41480
#define _GLIBCXX_HAVE_TANHL 1366,41563
#define _GLIBCXX_HAVE_TANL 1369,41645
#define _GLIBCXX_HAVE_TGMATH_H 1372,41733
#define _GLIBCXX_HAVE_TIMESPEC_GET 1375,41826
#define _GLIBCXX_HAVE_TLS 1378,41927
#define _GLIBCXX_HAVE_TRUNCATE 1381,42009
#define _GLIBCXX_HAVE_UCHAR_H 1384,42100
#define _GLIBCXX_HAVE_UNISTD_H 1387,42191
#define _GLIBCXX_HAVE_UNLINKAT 1390,42277
#define _GLIBCXX_HAVE_USELOCALE 1393,42367
#define _GLIBCXX_HAVE_UTIME_H 1399,42526
#define _GLIBCXX_HAVE_VFWSCANF 1402,42593
#define _GLIBCXX_HAVE_VSWSCANF 1405,42661
#define _GLIBCXX_HAVE_VWSCANF 1408,42728
#define _GLIBCXX_HAVE_WCHAR_H 1411,42818
#define _GLIBCXX_HAVE_WCSTOF 1414,42883
#define _GLIBCXX_HAVE_WCTYPE_H 1417,42973
#define _GLIBCXX_HAVE_WRITEV 1423,43156
#define _GLIBCXX_HAVE___CXA_THREAD_ATEXIT_IMPL 1624,49158
#define _GLIBCXX_ICONV_CONST 1627,49273
#define _GLIBCXX_LT_OBJDIR 1631,49388
#define _GLIBCXX_PACKAGE_BUGREPORT 1637,49557
#define _GLIBCXX_PACKAGE_NAME 1640,49643
#define _GLIBCXX_PACKAGE_STRING 1643,49750
#define _GLIBCXX_PACKAGE_TARNAME 1646,49874
#define _GLIBCXX_PACKAGE_URL 1649,49968
#define _GLIBCXX_PACKAGE__GLIBCXX_VERSION 1652,50046
#define _GLIBCXX_STDC_HEADERS 1655,50161
# define _GLIBCXX_DARWIN_USE_64_BIT_INODE 1662,50350
#define _GLIBCXX_FILE_OFFSET_BITS 1666,50474
#define _GLIBCXX11_USE_C99_COMPLEX 1671,50706
#define _GLIBCXX11_USE_C99_MATH 1675,50857
#define _GLIBCXX11_USE_C99_STDIO 1679,51007
#define _GLIBCXX11_USE_C99_STDLIB 1683,51160
#define _GLIBCXX11_USE_C99_WCHAR 1687,51312
#define _GLIBCXX98_USE_C99_COMPLEX 1692,51542
#define _GLIBCXX98_USE_C99_MATH 1696,51693
#define _GLIBCXX98_USE_C99_STDIO 1700,51843
#define _GLIBCXX98_USE_C99_STDLIB 1704,51996
#define _GLIBCXX98_USE_C99_WCHAR 1708,52148
#define _GLIBCXX_ATOMIC_BUILTINS 1711,52237
#define _GLIBCXX_CAN_ALIGNAS_DESTRUCTIVE_SIZE 1715,52370
#define _GLIBCXX_FULLY_DYNAMIC_STRING 1722,52635
#define _GLIBCXX_HAS_GTHREADS 1725,52723
#define _GLIBCXX_HOSTED 1728,52831
#define _GLIBCXX_MANGLE_SIZE_T 1736,53097
#define _GLIBCXX_PTRDIFF_T_IS_INT 1745,53365
#define _GLIBCXX_RES_LIMITS 1748,53477
#define _GLIBCXX_SIZE_T_IS_UINT 1751,53548
#define _GLIBCXX_STDIO_EOF 1757,53742
#define _GLIBCXX_STDIO_SEEK_CUR 1760,53833
#define _GLIBCXX_STDIO_SEEK_END 1763,53928
#define _GLIBCXX_SYMVER 1766,54024
#define _GLIBCXX_SYMVER_GNU 1772,54207
#define _GLIBCXX_USE_C11_UCHAR_CXX11 1782,54539
#define _GLIBCXX_USE_C99 1786,54711
#define _GLIBCXX_USE_C99_COMPLEX_TR1 1791,54927
#define _GLIBCXX_USE_C99_CTYPE_TR1 1795,55071
#define _GLIBCXX_USE_C99_FENV_TR1 1799,55211
#define _GLIBCXX_USE_C99_INTTYPES_TR1 1803,55358
#define _GLIBCXX_USE_C99_INTTYPES_WCHAR_T_TR1 1807,55517
#define _GLIBCXX_USE_C99_MATH_TR1 1811,55678
#define _GLIBCXX_USE_C99_STDINT_TR1 1815,55817
#define _GLIBCXX_USE_CHDIR 1818,55913
#define _GLIBCXX_USE_CHMOD 1821,56002
#define _GLIBCXX_USE_CLOCK_MONOTONIC 1828,56225
#define _GLIBCXX_USE_CLOCK_REALTIME 1831,56324
#define _GLIBCXX_USE_DECIMAL_FLOAT 1835,56456
#define _GLIBCXX_USE_DEV_RANDOM 1839,56580
#define _GLIBCXX_USE_FCHMOD 1842,56668
#define _GLIBCXX_USE_FCHMODAT 1845,56754
#define _GLIBCXX_USE_FSEEKO_FTELLO 1848,56836
#define _GLIBCXX_USE_GETCWD 1851,56932
#define _GLIBCXX_USE_GETTIMEOFDAY 1854,57007
#define _GLIBCXX_USE_GET_NPROCS 1857,57104
#define _GLIBCXX_USE_INIT_PRIORITY_ATTRIBUTE 1860,57213
#define _GLIBCXX_USE_LFS 1863,57303
#define _GLIBCXX_USE_LONG_LONG 1866,57394
#define _GLIBCXX_USE_LSTAT 1869,57480
#define _GLIBCXX_USE_MKDIR 1872,57569
#define _GLIBCXX_USE_NANOSLEEP 1875,57640
#define _GLIBCXX_USE_NLS 1878,57723
#define _GLIBCXX_USE_PTHREAD_COND_CLOCKWAIT 1884,57945
#define _GLIBCXX_USE_PTHREAD_MUTEX_CLOCKLOCK 1887,58061
#define _GLIBCXX_USE_PTHREAD_RWLOCK_CLOCKLOCK 1891,58216
#define _GLIBCXX_USE_PTHREAD_RWLOCK_T 1894,58331
#define _GLIBCXX_USE_RANDOM_TR1 1898,58478
#define _GLIBCXX_USE_REALPATH 1901,58573
#define _GLIBCXX_USE_SCHED_YIELD 1904,58649
#define _GLIBCXX_USE_SC_NPROCESSORS_ONLN 1907,58750
#define _GLIBCXX_USE_SENDFILE 1913,58953
#define _GLIBCXX_USE_ST_MTIM 1919,59134
#define _GLIBCXX_USE_TMPNAM 1925,59348
#define _GLIBCXX_USE_UCHAR_C8RTOMB_MBRTOC8_CXX20 1929,59502
#define _GLIBCXX_USE_UCHAR_C8RTOMB_MBRTOC8_FCHAR8_T 1933,59681
#define _GLIBCXX_USE_UTIME 1936,59785
#define _GLIBCXX_USE_UTIMENSAT 1940,59916
#define _GLIBCXX_USE_WCHAR_T 1943,60011
#define _GLIBCXX_VERBOSE 1949,60178
#define _GLIBCXX_X86_RDRAND 1952,60245
#define _GLIBCXX_X86_RDSEED 1955,60315
#define _GLIBCXX_ZONEINFO_DIR 1958,60411
#define _GTHREAD_USE_MUTEX_TIMEDLOCK 1961,60515
# define _GLIBCXX_HAVE_ACOSF 1977,61036
# define acosf 1978,61067
# define _GLIBCXX_HAVE_ACOSL 1982,61167
# define acosl 1983,61198
# define _GLIBCXX_HAVE_ASINF 1987,61298
# define asinf 1988,61329
# define _GLIBCXX_HAVE_ASINL 1992,61429
# define asinl 1993,61460
# define _GLIBCXX_HAVE_ATAN2F 1997,61562
# define atan2f 1998,61594
# define _GLIBCXX_HAVE_ATAN2L 2002,61698
# define atan2l 2003,61730
# define _GLIBCXX_HAVE_ATANF 2007,61832
# define atanf 2008,61863
# define _GLIBCXX_HAVE_ATANL 2012,61963
# define atanl 2013,61994
# define _GLIBCXX_HAVE_CEILF 2017,62094
# define ceilf 2018,62125
# define _GLIBCXX_HAVE_CEILL 2022,62225
# define ceill 2023,62256
# define _GLIBCXX_HAVE_COSF 2027,62354
# define cosf 2028,62384
# define _GLIBCXX_HAVE_COSHF 2032,62482
# define coshf 2033,62513
# define _GLIBCXX_HAVE_COSHL 2037,62613
# define coshl 2038,62644
# define _GLIBCXX_HAVE_COSL 2042,62742
# define cosl 2043,62772
# define _GLIBCXX_HAVE_EXPF 2047,62868
# define expf 2048,62898
# define _GLIBCXX_HAVE_EXPL 2052,62994
# define expl 2053,63024
# define _GLIBCXX_HAVE_FABSF 2057,63122
# define fabsf 2058,63153
# define _GLIBCXX_HAVE_FABSL 2062,63253
# define fabsl 2063,63284
# define _GLIBCXX_HAVE_FINITE 2067,63386
# define finite 2068,63418
# define _GLIBCXX_HAVE_FINITEF 2072,63524
# define finitef 2073,63557
# define _GLIBCXX_HAVE_FINITEL 2077,63665
# define finitel 2078,63698
# define _GLIBCXX_HAVE_FLOORF 2082,63804
# define floorf 2083,63836
# define _GLIBCXX_HAVE_FLOORL 2087,63940
# define floorl 2088,63972
# define _GLIBCXX_HAVE_FMODF 2092,64074
# define fmodf 2093,64105
# define _GLIBCXX_HAVE_FMODL 2097,64205
# define fmodl 2098,64236
# define _GLIBCXX_HAVE_FPCLASS 2102,64340
# define fpclass 2103,64373
# define _GLIBCXX_HAVE_FREXPF 2107,64479
# define frexpf 2108,64511
# define _GLIBCXX_HAVE_FREXPL 2112,64615
# define frexpl 2113,64647
# define _GLIBCXX_HAVE_HYPOT 2117,64749
# define hypot 2118,64780
# define _GLIBCXX_HAVE_HYPOTF 2122,64882
# define hypotf 2123,64914
# define _GLIBCXX_HAVE_HYPOTL 2127,65018
# define hypotl 2128,65050
# define _GLIBCXX_HAVE_ISINF 2132,65152
# define isinf 2133,65183
# define _GLIBCXX_HAVE_ISINFF 2137,65285
# define isinff 2138,65317
# define _GLIBCXX_HAVE_ISINFL 2142,65421
# define isinfl 2143,65453
# define _GLIBCXX_HAVE_ISNAN 2147,65555
# define isnan 2148,65586
# define _GLIBCXX_HAVE_ISNANF 2152,65688
# define isnanf 2153,65720
# define _GLIBCXX_HAVE_ISNANL 2157,65824
# define isnanl 2158,65856
# define _GLIBCXX_HAVE_LDEXPF 2162,65960
# define ldexpf 2163,65992
# define _GLIBCXX_HAVE_LDEXPL 2167,66096
# define ldexpl 2168,66128
# define _GLIBCXX_HAVE_LOG10F 2172,66232
# define log10f 2173,66264
# define _GLIBCXX_HAVE_LOG10L 2177,66368
# define log10l 2178,66400
# define _GLIBCXX_HAVE_LOGF 2182,66500
# define logf 2183,66530
# define _GLIBCXX_HAVE_LOGL 2187,66626
# define logl 2188,66656
# define _GLIBCXX_HAVE_MODF 2192,66752
# define modf 2193,66782
# define _GLIBCXX_HAVE_MODFF 2197,66880
# define modff 2198,66911
# define _GLIBCXX_HAVE_MODFL 2202,67011
# define modfl 2203,67042
# define _GLIBCXX_HAVE_POWF 2207,67140
# define powf 2208,67170
# define _GLIBCXX_HAVE_POWL 2212,67266
# define powl 2213,67296
# define _GLIBCXX_HAVE_QFPCLASS 2217,67400
# define qfpclass 2218,67434
# define _GLIBCXX_HAVE_SINCOS 2222,67542
# define sincos 2223,67574
# define _GLIBCXX_HAVE_SINCOSF 2227,67680
# define sincosf 2228,67713
# define _GLIBCXX_HAVE_SINCOSL 2232,67821
# define sincosl 2233,67854
# define _GLIBCXX_HAVE_SINF 2237,67956
# define sinf 2238,67986
# define _GLIBCXX_HAVE_SINHF 2242,68084
# define sinhf 2243,68115
# define _GLIBCXX_HAVE_SINHL 2247,68215
# define sinhl 2248,68246
# define _GLIBCXX_HAVE_SINL 2252,68344
# define sinl 2253,68374
# define _GLIBCXX_HAVE_SQRTF 2257,68472
# define sqrtf 2258,68503
# define _GLIBCXX_HAVE_SQRTL 2262,68603
# define sqrtl 2263,68634
# define _GLIBCXX_HAVE_STRTOF 2267,68736
# define strtof 2268,68768
# define _GLIBCXX_HAVE_STRTOLD 2272,68874
# define strtold 2273,68907
# define _GLIBCXX_HAVE_TANF 2277,69009
# define tanf 2278,69039
# define _GLIBCXX_HAVE_TANHF 2282,69137
# define tanhf 2283,69168
# define _GLIBCXX_HAVE_TANHL 2287,69268
# define tanhl 2288,69299
# define _GLIBCXX_HAVE_TANL 2292,69397
# define tanl 2293,69427
#define _GLIBCXX_CXX_CONFIG_H 2328,70773
#define _GLIBCXX_RELEASE 2331,70882
#define __GLIBCXX__ 2334,70978
# define _GLIBCXX_PURE 2343,71173
# define _GLIBCXX_CONST 2347,71254
# define _GLIBCXX_NORETURN 2351,71340
#  define _GLIBCXX_NOTHROW 2357,71473
# define _GLIBCXX_HAVE_ATTRIBUTE_VISIBILITY 2364,71647
# define _GLIBCXX_VISIBILITY(2367,71733
# define _GLIBCXX_VISIBILITY(2371,71938
# define _GLIBCXX_USE_DEPRECATED 2389,72582
# define _GLIBCXX_DEPRECATED 2393,72651
# define _GLIBCXX_DEPRECATED_SUGGEST(2394,72713
# define _GLIBCXX_DEPRECATED2397,72824
# define _GLIBCXX_DEPRECATED_SUGGEST(2398,72853
# define _GLIBCXX11_DEPRECATED 2402,72957
# define _GLIBCXX11_DEPRECATED_SUGGEST(2403,73008
# define _GLIBCXX11_DEPRECATED2405,73091
# define _GLIBCXX11_DEPRECATED_SUGGEST(2406,73122
# define _GLIBCXX14_DEPRECATED 2410,73228
# define _GLIBCXX14_DEPRECATED_SUGGEST(2411,73279
# define _GLIBCXX14_DEPRECATED2413,73362
# define _GLIBCXX14_DEPRECATED_SUGGEST(2414,73393
# define _GLIBCXX17_DEPRECATED 2418,73499
# define _GLIBCXX17_DEPRECATED_SUGGEST(2419,73549
# define _GLIBCXX17_DEPRECATED2421,73632
# define _GLIBCXX17_DEPRECATED_SUGGEST(2422,73663
# define _GLIBCXX20_DEPRECATED 2426,73769
# define _GLIBCXX20_DEPRECATED_SUGGEST(2427,73819
# define _GLIBCXX20_DEPRECATED2429,73902
# define _GLIBCXX20_DEPRECATED_SUGGEST(2430,73933
# define _GLIBCXX23_DEPRECATED 2434,74039
# define _GLIBCXX23_DEPRECATED_SUGGEST(2435,74089
# define _GLIBCXX23_DEPRECATED2437,74172
# define _GLIBCXX23_DEPRECATED_SUGGEST(2438,74203
# define _GLIBCXX_ABI_TAG_CXX11 2443,74320
# define _GLIBCXX_NODISCARD 2448,74464
# define _GLIBCXX_NODISCARD2450,74516
#  define _GLIBCXX_CONSTEXPR 2460,74682
#  define _GLIBCXX_USE_CONSTEXPR 2461,74721
#  define _GLIBCXX_CONSTEXPR2463,74771
#  define _GLIBCXX_USE_CONSTEXPR 2464,74800
#  define _GLIBCXX14_CONSTEXPR 2470,74912
#  define _GLIBCXX14_CONSTEXPR2472,74960
#  define _GLIBCXX17_CONSTEXPR 2478,75064
#  define _GLIBCXX17_CONSTEXPR2480,75112
#  define _GLIBCXX20_CONSTEXPR 2486,75216
#  define _GLIBCXX20_CONSTEXPR2488,75264
#  define _GLIBCXX23_CONSTEXPR 2494,75368
#  define _GLIBCXX23_CONSTEXPR2496,75416
#  define _GLIBCXX17_INLINE 2502,75517
#  define _GLIBCXX17_INLINE2504,75559
#  define _GLIBCXX_NOEXCEPT 2511,75712
#  define _GLIBCXX_NOEXCEPT_IF(2512,75749
#  define _GLIBCXX_USE_NOEXCEPT 2513,75807
#  define _GLIBCXX_THROW(2514,75848
#  define _GLIBCXX_NOEXCEPT2516,75886
#  define _GLIBCXX_NOEXCEPT_IF(2517,75914
#  define _GLIBCXX_USE_NOEXCEPT 2518,75950
#  define _GLIBCXX_THROW(2519,75990
# define _GLIBCXX_NOTHROW 2524,76074
#  define _GLIBCXX_THROW_OR_ABORT(2529,76184
#  define _GLIBCXX_THROW_OR_ABORT(2531,76246
#define _GLIBCXX_NOEXCEPT_PARM 2536,76355
#define _GLIBCXX_NOEXCEPT_QUAL 2537,76397
#define _GLIBCXX_NOEXCEPT_PARM2539,76449
#define _GLIBCXX_NOEXCEPT_QUAL2540,76480
# define _GLIBCXX_EXTERN_TEMPLATE 2553,77099
  typedef __SIZE_TYPE__ 	size_t;2605,78198
  typedef __PTRDIFF_TYPE__	ptrdiff_t;2606,78231
  typedef decltype(nullptr)2609,78297
# define _GLIBCXX_USE_DUAL_ABI 2624,78781
# undef _GLIBCXX_USE_CXX11_ABI2628,78901
# define _GLIBCXX_USE_CXX11_ABI 2632,78971
# define _GLIBCXX_NAMESPACE_CXX11 2644,79222
# define _GLIBCXX_BEGIN_NAMESPACE_CXX11 2645,79266
# define _GLIBCXX_END_NAMESPACE_CXX11 2646,79326
# define _GLIBCXX_DEFAULT_ABI_TAG 2647,79366
# define _GLIBCXX_NAMESPACE_CXX112649,79429
# define _GLIBCXX_BEGIN_NAMESPACE_CXX112650,79463
# define _GLIBCXX_END_NAMESPACE_CXX112651,79503
# define _GLIBCXX_DEFAULT_ABI_TAG2652,79541
# define _GLIBCXX_INLINE_VERSION 2656,79660
# define _GLIBCXX_BEGIN_NAMESPACE_VERSION 2660,79798
# define _GLIBCXX_END_NAMESPACE_VERSION 2661,79856
# define _GLIBCXX_BEGIN_INLINE_ABI_NAMESPACE(2663,79952
# define _GLIBCXX_END_INLINE_ABI_NAMESPACE(2664,80000
# define _GLIBCXX_BEGIN_NAMESPACE_VERSION2690,80539
# define _GLIBCXX_END_NAMESPACE_VERSION2691,80581
# define _GLIBCXX_BEGIN_INLINE_ABI_NAMESPACE(2693,80694
# define _GLIBCXX_END_INLINE_ABI_NAMESPACE(2694,80763
#undef _GLIBCXX_DEBUG2700,81041
#define _GLIBCXX_ASSERTIONS 2701,81063
# define _GLIBCXX_STD_C 2754,82527
# define _GLIBCXX_BEGIN_NAMESPACE_CONTAINER 2755,82561
# define _GLIBCXX_END_NAMESPACE_CONTAINER 2757,82636
# define _GLIBCXX_STD_C 2759,82686
# define _GLIBCXX_BEGIN_NAMESPACE_CONTAINER2760,82714
# define _GLIBCXX_END_NAMESPACE_CONTAINER2761,82758
# define _GLIBCXX_STD_A 2765,82833
# define _GLIBCXX_BEGIN_NAMESPACE_ALGO 2766,82867
# define _GLIBCXX_END_NAMESPACE_ALGO 2768,82937
# define _GLIBCXX_STD_A 2770,82982
# define _GLIBCXX_BEGIN_NAMESPACE_ALGO2771,83010
# define _GLIBCXX_END_NAMESPACE_ALGO2772,83049
#undef _GLIBCXX_LONG_DOUBLE_COMPAT2777,83188
#undef _GLIBCXX_LONG_DOUBLE_ALT128_COMPAT2782,83388
# define _GLIBCXX_NAMESPACE_LDBL 2794,83746
# define _GLIBCXX_BEGIN_NAMESPACE_LDBL 2795,83799
# define _GLIBCXX_END_NAMESPACE_LDBL 2796,83868
# define _GLIBCXX_NAMESPACE_LDBL_OR_CXX11 2797,83907
# define _GLIBCXX_BEGIN_NAMESPACE_LDBL_OR_CXX11 2798,83971
# define _GLIBCXX_END_NAMESPACE_LDBL_OR_CXX11 2799,84051
# define _GLIBCXX_NAMESPACE_LDBL 2808,84286
# define _GLIBCXX_BEGIN_NAMESPACE_LDBL 2809,84339
# define _GLIBCXX_END_NAMESPACE_LDBL 2810,84408
# define _GLIBCXX_NAMESPACE_LDBL2812,84453
# define _GLIBCXX_BEGIN_NAMESPACE_LDBL2813,84486
# define _GLIBCXX_END_NAMESPACE_LDBL2814,84525
# define _GLIBCXX_NAMESPACE_LDBL_OR_CXX11 2818,84597
# define _GLIBCXX_BEGIN_NAMESPACE_LDBL_OR_CXX11 2819,84664
# define _GLIBCXX_END_NAMESPACE_LDBL_OR_CXX11 2820,84743
# define _GLIBCXX_NAMESPACE_LDBL_OR_CXX11 2822,84824
# define _GLIBCXX_BEGIN_NAMESPACE_LDBL_OR_CXX11 2823,84890
# define _GLIBCXX_END_NAMESPACE_LDBL_OR_CXX11 2824,84968
namespace std2829,85107
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 2840,85561
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 2843,85744
# define _GLIBCXX_ASSERTIONS 2854,86006
# undef _GLIBCXX_EXTERN_TEMPLATE2859,86151
# define _GLIBCXX_EXTERN_TEMPLATE 2860,86184
# define __glibcxx_constexpr_assert(2865,86270
# define __glibcxx_constexpr_assert(2869,86442
#define _GLIBCXX_VERBOSE_ASSERT 2872,86499
#define __glibcxx_assert_impl(2890,87038
# define __glibcxx_assert_impl(2898,87332
# define __glibcxx_assert(2908,87567
# define __glibcxx_assert(2911,87659
#  define _GLIBCXX_TSAN 2917,87823
#  define _GLIBCXX_TSAN 2920,87914
# define  _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(2946,89013
# define  _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(2949,89120
# define _GLIBCXX_BEGIN_EXTERN_C 2953,89252
# define _GLIBCXX_END_EXTERN_C 2954,89298
# define _GLIBCXX_USE_ALLOCATOR_NEW 2956,89332
# define _GLIBCXX_BEGIN_EXTERN_C2968,89776
# define _GLIBCXX_END_EXTERN_C2969,89809
# define _GLIBCXX_PSEUDO_VISIBILITY(2984,90166
# define _GLIBCXX_WEAK_DEFINITION2991,90430
# define _GLIBCXX_USE_WEAK_REF 2999,90804
#define _GLIBCXX_TXN_SAFE 3009,91251
#define _GLIBCXX_TXN_SAFE_DYN 3010,91294
#define _GLIBCXX_TXN_SAFE3012,91355
#define _GLIBCXX_TXN_SAFE_DYN3013,91381
# define _GLIBCXX_USE_STD_SPEC_FUNCS 3018,91510
# define _GLIBCXX_USE_STD_SPEC_FUNCS 3021,91683
# define _GLIBCXX_FAST_MATH 3029,91920
# define _GLIBCXX_FAST_MATH 3031,91956
#define __N(3038,92278
#undef min3041,92383
#undef max3042,92394
#  define _GLIBCXX_USE_C99_MATH 3048,92588
# define _GLIBCXX_USE_C99_COMPLEX 3051,92686
# define _GLIBCXX_USE_C99_STDIO 3054,92787
# define _GLIBCXX_USE_C99_STDLIB 3057,92885
# define _GLIBCXX_USE_C99_WCHAR 3060,92984
#  define _GLIBCXX_USE_C99_MATH 3064,93086
# define _GLIBCXX_USE_C99_COMPLEX 3067,93184
# define _GLIBCXX_USE_C99_STDIO 3070,93285
# define _GLIBCXX_USE_C99_STDLIB 3073,93383
# define _GLIBCXX_USE_C99_WCHAR 3076,93482
#  define _GLIBCXX_USE_CHAR8_T 3084,93727
# define __cpp_lib_char8_t 3088,93803
#  define _GLIBCXX_USE_FLOAT128 3095,94128
# define _GLIBCXX_FLOAT_IS_IEEE_BINARY32 3103,94315
# define _GLIBCXX_DOUBLE_IS_IEEE_BINARY64 3110,94506
# define _GLIBCXX_LDOUBLE_IS_IEEE_BINARY128 3117,94710
namespace __gnu_cxx3121,94793
#  define _GLIBCXX_HAS_BUILTIN(3130,94982
#  define _GLIBCXX_HAS_BUILTIN(3132,95064
# define _GLIBCXX_HAVE_BUILTIN_HAS_UNIQ_OBJ_REP 3137,95193
# define _GLIBCXX_HAVE_BUILTIN_IS_AGGREGATE 3141,95292
#  define _GLIBCXX_HAVE_BUILTIN_IS_SAME 3145,95382
# define _GLIBCXX_HAVE_BUILTIN_LAUNDER 3149,95476
#undef _GLIBCXX_HAS_BUILTIN3152,95525
#define _GLIBCXX_DOXYGEN_ONLY(3155,95628
#  define _GLIBCXX_USE_TBB_PAR_BACKEND 3167,96033
#  define _PSTL_PAR_BACKEND_TBB3171,96222
#  define _PSTL_PAR_BACKEND_SERIAL3173,96261
# define _PSTL_ASSERT(3176,96305
# define _PSTL_ASSERT_MSG(3177,96368
#define _GLIBCXX_HAVE_ACOSF 3188,96772
#define _GLIBCXX_HAVE_ACOSL 3191,96855
#define _GLIBCXX_HAVE_ALIGNED_ALLOC 3194,96946
#define _GLIBCXX_HAVE_ARC4RANDOM 3197,97040
#define _GLIBCXX_HAVE_ARPA_INET_H 3200,97137
#define _GLIBCXX_HAVE_ASINF 3203,97226
#define _GLIBCXX_HAVE_ASINL 3206,97309
#define _GLIBCXX_HAVE_AS_SYMVER_DIRECTIVE 3209,97410
#define _GLIBCXX_HAVE_ATAN2F 3212,97508
#define _GLIBCXX_HAVE_ATAN2L 3215,97593
#define _GLIBCXX_HAVE_ATANF 3218,97677
#define _GLIBCXX_HAVE_ATANL 3221,97760
#define _GLIBCXX_HAVE_ATOMIC_LOCK_POLICY 3224,97868
#define _GLIBCXX_HAVE_AT_QUICK_EXIT 3227,97972
#define _GLIBCXX_HAVE_CEILF 3233,98171
#define _GLIBCXX_HAVE_CEILL 3236,98254
#define _GLIBCXX_HAVE_COMPLEX_H 3239,98344
#define _GLIBCXX_HAVE_COSF 3242,98430
#define _GLIBCXX_HAVE_COSHF 3245,98512
#define _GLIBCXX_HAVE_COSHL 3248,98595
#define _GLIBCXX_HAVE_COSL 3251,98677
#define _GLIBCXX_HAVE_DECL_STRNLEN 3255,98793
#define _GLIBCXX_HAVE_DIRENT_H 3258,98889
#define _GLIBCXX_HAVE_DIRFD 3261,98973
#define _GLIBCXX_HAVE_DLFCN_H 3264,99061
#define _GLIBCXX_HAVE_ENDIAN_H 3267,99152
#define _GLIBCXX_HAVE_EXCEPTION_PTR_SINCE_GCC46 3270,99259
#define _GLIBCXX_HAVE_EXECINFO_H 3273,99370
#define _GLIBCXX_HAVE_EXPF 3276,99457
#define _GLIBCXX_HAVE_EXPL 3279,99538
#define _GLIBCXX_HAVE_FABSF 3282,99620
#define _GLIBCXX_HAVE_FABSL 3285,99703
#define _GLIBCXX_HAVE_FCNTL_H 3288,99791
#define _GLIBCXX_HAVE_FDOPENDIR 3291,99878
#define _GLIBCXX_HAVE_FENV_H 3294,99969
#define _GLIBCXX_HAVE_FINITE 3297,100054
#define _GLIBCXX_HAVE_FINITEF 3300,100140
#define _GLIBCXX_HAVE_FINITEL 3303,100227
#define _GLIBCXX_HAVE_FLOAT_H 3306,100317
#define _GLIBCXX_HAVE_FLOORF 3309,100403
#define _GLIBCXX_HAVE_FLOORL 3312,100488
#define _GLIBCXX_HAVE_FMODF 3315,100572
#define _GLIBCXX_HAVE_FMODL 3318,100655
#define _GLIBCXX_HAVE_FREXPF 3327,100916
#define _GLIBCXX_HAVE_FREXPL 3330,101001
#define _GLIBCXX_HAVE_GETENTROPY 3333,101088
#define _GLIBCXX_HAVE_GETIPINFO 3336,101172
#define _GLIBCXX_HAVE_GETS 3339,101268
#define _GLIBCXX_HAVE_HYPOT 3342,101350
#define _GLIBCXX_HAVE_HYPOTF 3345,101434
#define _GLIBCXX_HAVE_HYPOTL 3348,101519
#define _GLIBCXX_HAVE_ICONV 3351,101598
#define _GLIBCXX_HAVE_INTTYPES_H 3357,101784
#define _GLIBCXX_HAVE_ISINFF 3363,101959
#define _GLIBCXX_HAVE_ISINFL 3366,102044
#define _GLIBCXX_HAVE_ISNANF 3372,102215
#define _GLIBCXX_HAVE_ISNANL 3375,102300
#define _GLIBCXX_HAVE_ISWBLANK 3378,102366
#define _GLIBCXX_HAVE_LC_MESSAGES 3381,102456
#define _GLIBCXX_HAVE_LDEXPF 3384,102546
#define _GLIBCXX_HAVE_LDEXPL 3387,102631
#define _GLIBCXX_HAVE_LIBINTL_H 3390,102722
#define _GLIBCXX_HAVE_LIMIT_AS 3393,102811
#define _GLIBCXX_HAVE_LIMIT_DATA 3396,102899
#define _GLIBCXX_HAVE_LIMIT_FSIZE 3399,102989
#define _GLIBCXX_HAVE_LIMIT_RSS 3402,103080
#define _GLIBCXX_HAVE_LIMIT_VMEM 3405,103169
#define _GLIBCXX_HAVE_LINK 3408,103254
#define _GLIBCXX_HAVE_LINK_H 3411,103340
#define _GLIBCXX_HAVE_LINUX_FUTEX 3414,103416
#define _GLIBCXX_HAVE_LINUX_RANDOM_H 3417,103517
#define _GLIBCXX_HAVE_LINUX_TYPES_H 3420,103620
#define _GLIBCXX_HAVE_LOCALE_H 3423,103717
#define _GLIBCXX_HAVE_LOG10F 3426,103804
#define _GLIBCXX_HAVE_LOG10L 3429,103889
#define _GLIBCXX_HAVE_LOGF 3432,103972
#define _GLIBCXX_HAVE_LOGL 3435,104053
#define _GLIBCXX_HAVE_MBSTATE_T 3444,104348
#define _GLIBCXX_HAVE_MEMALIGN 3447,104438
#define _GLIBCXX_HAVE_MEMORY_H 3450,104530
#define _GLIBCXX_HAVE_MODF 3453,104615
#define _GLIBCXX_HAVE_MODFF 3456,104697
#define _GLIBCXX_HAVE_MODFL 3459,104780
#define _GLIBCXX_HAVE_NETDB_H 3465,104957
#define _GLIBCXX_HAVE_NETINET_IN_H 3468,105052
#define _GLIBCXX_HAVE_NETINET_TCP_H 3471,105153
#define _GLIBCXX_HAVE_OPENAT 3480,105444
#define _GLIBCXX_HAVE_POLL 3483,105523
#define _GLIBCXX_HAVE_POLL_H 3486,105609
#define _GLIBCXX_HAVE_POSIX_MEMALIGN 3489,105702
#define _GLIBCXX_HAVE_POSIX_SEMAPHORE 3493,105834
#define _GLIBCXX_HAVE_POWF 3496,105926
#define _GLIBCXX_HAVE_POWL 3499,106007
#define _GLIBCXX_HAVE_QUICK_EXIT 3505,106186
#define _GLIBCXX_HAVE_READLINK 3508,106275
#define _GLIBCXX_HAVE_SECURE_GETENV 3511,106369
#define _GLIBCXX_HAVE_SETENV 3514,106461
#define _GLIBCXX_HAVE_SINCOS 3517,106546
#define _GLIBCXX_HAVE_SINCOSF 3520,106632
#define _GLIBCXX_HAVE_SINCOSL 3523,106719
#define _GLIBCXX_HAVE_SINF 3526,106803
#define _GLIBCXX_HAVE_SINHF 3529,106885
#define _GLIBCXX_HAVE_SINHL 3532,106968
#define _GLIBCXX_HAVE_SINL 3535,107050
#define _GLIBCXX_HAVE_SOCKATMARK 3541,107202
#define _GLIBCXX_HAVE_SQRTF 3544,107290
#define _GLIBCXX_HAVE_SQRTL 3547,107373
#define _GLIBCXX_HAVE_STDALIGN_H 3553,107557
#define _GLIBCXX_HAVE_STDBOOL_H 3556,107652
#define _GLIBCXX_HAVE_STDINT_H 3559,107745
#define _GLIBCXX_HAVE_STDLIB_H 3562,107837
#define _GLIBCXX_HAVE_STRERROR_L 3565,107926
#define _GLIBCXX_HAVE_STRERROR_R 3568,108017
#define _GLIBCXX_HAVE_STRINGS_H 3571,108112
#define _GLIBCXX_HAVE_STRING_H 3574,108205
#define _GLIBCXX_HAVE_STRTOF 3577,108292
#define _GLIBCXX_HAVE_STRTOLD 3580,108378
#define _GLIBCXX_HAVE_STRUCT_DIRENT_D_TYPE 3583,108473
#define _GLIBCXX_HAVE_STRXFRM_L 3586,108573
#define _GLIBCXX_HAVE_SYMLINK 3589,108660
#define _GLIBCXX_HAVE_SYMVER_SYMBOL_RENAMING_RUNTIME_SUPPORT 3593,108799
#define _GLIBCXX_HAVE_SYS_IOCTL_H 3599,109025
#define _GLIBCXX_HAVE_SYS_IPC_H 3602,109121
#define _GLIBCXX_HAVE_SYS_PARAM_H 3614,109528
#define _GLIBCXX_HAVE_SYS_RESOURCE_H 3617,109629
#define _GLIBCXX_HAVE_SYS_SDT_H 3620,109734
#define _GLIBCXX_HAVE_SYS_SEM_H 3623,109828
#define _GLIBCXX_HAVE_SYS_SOCKET_H 3626,109925
#define _GLIBCXX_HAVE_SYS_STATVFS_H 3629,110026
#define _GLIBCXX_HAVE_SYS_STAT_H 3632,110125
#define _GLIBCXX_HAVE_SYS_SYSINFO_H 3635,110224
#define _GLIBCXX_HAVE_SYS_TIME_H 3638,110323
#define _GLIBCXX_HAVE_SYS_TYPES_H 3641,110420
#define _GLIBCXX_HAVE_SYS_UIO_H 3644,110516
#define _GLIBCXX_HAVE_S_ISREG 3650,110695
#define _GLIBCXX_HAVE_TANF 3653,110779
#define _GLIBCXX_HAVE_TANHF 3656,110861
#define _GLIBCXX_HAVE_TANHL 3659,110944
#define _GLIBCXX_HAVE_TANL 3662,111026
#define _GLIBCXX_HAVE_TGMATH_H 3665,111114
#define _GLIBCXX_HAVE_TIMESPEC_GET 3668,111207
#define _GLIBCXX_HAVE_TLS 3671,111308
#define _GLIBCXX_HAVE_TRUNCATE 3674,111390
#define _GLIBCXX_HAVE_UCHAR_H 3677,111481
#define _GLIBCXX_HAVE_UNISTD_H 3680,111572
#define _GLIBCXX_HAVE_UNLINKAT 3683,111658
#define _GLIBCXX_HAVE_USELOCALE 3686,111748
#define _GLIBCXX_HAVE_UTIME_H 3692,111907
#define _GLIBCXX_HAVE_VFWSCANF 3695,111974
#define _GLIBCXX_HAVE_VSWSCANF 3698,112042
#define _GLIBCXX_HAVE_VWSCANF 3701,112109
#define _GLIBCXX_HAVE_WCHAR_H 3704,112199
#define _GLIBCXX_HAVE_WCSTOF 3707,112264
#define _GLIBCXX_HAVE_WCTYPE_H 3710,112354
#define _GLIBCXX_HAVE_WRITEV 3716,112537
#define _GLIBCXX_HAVE___CXA_THREAD_ATEXIT_IMPL 3917,118539
#define _GLIBCXX_ICONV_CONST 3920,118654
#define _GLIBCXX_LT_OBJDIR 3924,118769
#define _GLIBCXX_PACKAGE_BUGREPORT 3930,118938
#define _GLIBCXX_PACKAGE_NAME 3933,119024
#define _GLIBCXX_PACKAGE_STRING 3936,119131
#define _GLIBCXX_PACKAGE_TARNAME 3939,119255
#define _GLIBCXX_PACKAGE_URL 3942,119349
#define _GLIBCXX_PACKAGE__GLIBCXX_VERSION 3945,119427
#define _GLIBCXX_STDC_HEADERS 3948,119542
# define _GLIBCXX_DARWIN_USE_64_BIT_INODE 3955,119731
#define _GLIBCXX11_USE_C99_COMPLEX 3964,120089
#define _GLIBCXX11_USE_C99_MATH 3968,120240
#define _GLIBCXX11_USE_C99_STDIO 3972,120390
#define _GLIBCXX11_USE_C99_STDLIB 3976,120543
#define _GLIBCXX11_USE_C99_WCHAR 3980,120695
#define _GLIBCXX98_USE_C99_COMPLEX 3985,120925
#define _GLIBCXX98_USE_C99_MATH 3989,121076
#define _GLIBCXX98_USE_C99_STDIO 3993,121226
#define _GLIBCXX98_USE_C99_STDLIB 3997,121379
#define _GLIBCXX98_USE_C99_WCHAR 4001,121531
#define _GLIBCXX_ATOMIC_BUILTINS 4004,121620
#define _GLIBCXX_CAN_ALIGNAS_DESTRUCTIVE_SIZE 4008,121753
#define _GLIBCXX_FULLY_DYNAMIC_STRING 4015,122018
#define _GLIBCXX_HAS_GTHREADS 4018,122106
#define _GLIBCXX_HOSTED 4021,122214
#define _GLIBCXX_MANGLE_SIZE_T 4029,122480
#define _GLIBCXX_RES_LIMITS 4041,122863
#define _GLIBCXX_STDIO_EOF 4050,123131
#define _GLIBCXX_STDIO_SEEK_CUR 4053,123222
#define _GLIBCXX_STDIO_SEEK_END 4056,123317
#define _GLIBCXX_SYMVER 4059,123413
#define _GLIBCXX_SYMVER_GNU 4065,123596
#define _GLIBCXX_USE_C11_UCHAR_CXX11 4075,123928
#define _GLIBCXX_USE_C99 4079,124100
#define _GLIBCXX_USE_C99_COMPLEX_TR1 4084,124316
#define _GLIBCXX_USE_C99_CTYPE_TR1 4088,124460
#define _GLIBCXX_USE_C99_FENV_TR1 4092,124600
#define _GLIBCXX_USE_C99_INTTYPES_TR1 4096,124747
#define _GLIBCXX_USE_C99_INTTYPES_WCHAR_T_TR1 4100,124906
#define _GLIBCXX_USE_C99_MATH_TR1 4104,125067
#define _GLIBCXX_USE_C99_STDINT_TR1 4108,125206
#define _GLIBCXX_USE_CHDIR 4111,125302
#define _GLIBCXX_USE_CHMOD 4114,125391
#define _GLIBCXX_USE_CLOCK_MONOTONIC 4121,125614
#define _GLIBCXX_USE_CLOCK_REALTIME 4124,125713
#define _GLIBCXX_USE_DECIMAL_FLOAT 4128,125845
#define _GLIBCXX_USE_DEV_RANDOM 4132,125969
#define _GLIBCXX_USE_FCHMOD 4135,126057
#define _GLIBCXX_USE_FCHMODAT 4138,126143
#define _GLIBCXX_USE_FSEEKO_FTELLO 4141,126225
#define _GLIBCXX_USE_GETCWD 4144,126321
#define _GLIBCXX_USE_GETTIMEOFDAY 4147,126396
#define _GLIBCXX_USE_GET_NPROCS 4150,126493
#define _GLIBCXX_USE_INIT_PRIORITY_ATTRIBUTE 4153,126602
#define _GLIBCXX_USE_LFS 4156,126692
#define _GLIBCXX_USE_LONG_LONG 4159,126783
#define _GLIBCXX_USE_LSTAT 4162,126869
#define _GLIBCXX_USE_MKDIR 4165,126958
#define _GLIBCXX_USE_NANOSLEEP 4168,127029
#define _GLIBCXX_USE_NLS 4171,127112
#define _GLIBCXX_USE_PTHREAD_COND_CLOCKWAIT 4177,127334
#define _GLIBCXX_USE_PTHREAD_MUTEX_CLOCKLOCK 4180,127450
#define _GLIBCXX_USE_PTHREAD_RWLOCK_CLOCKLOCK 4184,127605
#define _GLIBCXX_USE_PTHREAD_RWLOCK_T 4187,127720
#define _GLIBCXX_USE_RANDOM_TR1 4191,127867
#define _GLIBCXX_USE_REALPATH 4194,127962
#define _GLIBCXX_USE_SCHED_YIELD 4197,128038
#define _GLIBCXX_USE_SC_NPROCESSORS_ONLN 4200,128139
#define _GLIBCXX_USE_SENDFILE 4206,128342
#define _GLIBCXX_USE_ST_MTIM 4212,128523
#define _GLIBCXX_USE_TMPNAM 4218,128737
#define _GLIBCXX_USE_UCHAR_C8RTOMB_MBRTOC8_CXX20 4222,128891
#define _GLIBCXX_USE_UCHAR_C8RTOMB_MBRTOC8_FCHAR8_T 4226,129070
#define _GLIBCXX_USE_UTIME 4229,129174
#define _GLIBCXX_USE_UTIMENSAT 4233,129305
#define _GLIBCXX_USE_WCHAR_T 4236,129400
#define _GLIBCXX_VERBOSE 4242,129567
#define _GLIBCXX_X86_RDRAND 4245,129634
#define _GLIBCXX_X86_RDSEED 4248,129704
#define _GLIBCXX_ZONEINFO_DIR 4251,129800
#define _GTHREAD_USE_MUTEX_TIMEDLOCK 4254,129904
# define _GLIBCXX_HAVE_ACOSF 4270,130425
# define acosf 4271,130456
# define _GLIBCXX_HAVE_ACOSL 4275,130556
# define acosl 4276,130587
# define _GLIBCXX_HAVE_ASINF 4280,130687
# define asinf 4281,130718
# define _GLIBCXX_HAVE_ASINL 4285,130818
# define asinl 4286,130849
# define _GLIBCXX_HAVE_ATAN2F 4290,130951
# define atan2f 4291,130983
# define _GLIBCXX_HAVE_ATAN2L 4295,131087
# define atan2l 4296,131119
# define _GLIBCXX_HAVE_ATANF 4300,131221
# define atanf 4301,131252
# define _GLIBCXX_HAVE_ATANL 4305,131352
# define atanl 4306,131383
# define _GLIBCXX_HAVE_CEILF 4310,131483
# define ceilf 4311,131514
# define _GLIBCXX_HAVE_CEILL 4315,131614
# define ceill 4316,131645
# define _GLIBCXX_HAVE_COSF 4320,131743
# define cosf 4321,131773
# define _GLIBCXX_HAVE_COSHF 4325,131871
# define coshf 4326,131902
# define _GLIBCXX_HAVE_COSHL 4330,132002
# define coshl 4331,132033
# define _GLIBCXX_HAVE_COSL 4335,132131
# define cosl 4336,132161
# define _GLIBCXX_HAVE_EXPF 4340,132257
# define expf 4341,132287
# define _GLIBCXX_HAVE_EXPL 4345,132383
# define expl 4346,132413
# define _GLIBCXX_HAVE_FABSF 4350,132511
# define fabsf 4351,132542
# define _GLIBCXX_HAVE_FABSL 4355,132642
# define fabsl 4356,132673
# define _GLIBCXX_HAVE_FINITE 4360,132775
# define finite 4361,132807
# define _GLIBCXX_HAVE_FINITEF 4365,132913
# define finitef 4366,132946
# define _GLIBCXX_HAVE_FINITEL 4370,133054
# define finitel 4371,133087
# define _GLIBCXX_HAVE_FLOORF 4375,133193
# define floorf 4376,133225
# define _GLIBCXX_HAVE_FLOORL 4380,133329
# define floorl 4381,133361
# define _GLIBCXX_HAVE_FMODF 4385,133463
# define fmodf 4386,133494
# define _GLIBCXX_HAVE_FMODL 4390,133594
# define fmodl 4391,133625
# define _GLIBCXX_HAVE_FPCLASS 4395,133729
# define fpclass 4396,133762
# define _GLIBCXX_HAVE_FREXPF 4400,133868
# define frexpf 4401,133900
# define _GLIBCXX_HAVE_FREXPL 4405,134004
# define frexpl 4406,134036
# define _GLIBCXX_HAVE_HYPOT 4410,134138
# define hypot 4411,134169
# define _GLIBCXX_HAVE_HYPOTF 4415,134271
# define hypotf 4416,134303
# define _GLIBCXX_HAVE_HYPOTL 4420,134407
# define hypotl 4421,134439
# define _GLIBCXX_HAVE_ISINF 4425,134541
# define isinf 4426,134572
# define _GLIBCXX_HAVE_ISINFF 4430,134674
# define isinff 4431,134706
# define _GLIBCXX_HAVE_ISINFL 4435,134810
# define isinfl 4436,134842
# define _GLIBCXX_HAVE_ISNAN 4440,134944
# define isnan 4441,134975
# define _GLIBCXX_HAVE_ISNANF 4445,135077
# define isnanf 4446,135109
# define _GLIBCXX_HAVE_ISNANL 4450,135213
# define isnanl 4451,135245
# define _GLIBCXX_HAVE_LDEXPF 4455,135349
# define ldexpf 4456,135381
# define _GLIBCXX_HAVE_LDEXPL 4460,135485
# define ldexpl 4461,135517
# define _GLIBCXX_HAVE_LOG10F 4465,135621
# define log10f 4466,135653
# define _GLIBCXX_HAVE_LOG10L 4470,135757
# define log10l 4471,135789
# define _GLIBCXX_HAVE_LOGF 4475,135889
# define logf 4476,135919
# define _GLIBCXX_HAVE_LOGL 4480,136015
# define logl 4481,136045
# define _GLIBCXX_HAVE_MODF 4485,136141
# define modf 4486,136171
# define _GLIBCXX_HAVE_MODFF 4490,136269
# define modff 4491,136300
# define _GLIBCXX_HAVE_MODFL 4495,136400
# define modfl 4496,136431
# define _GLIBCXX_HAVE_POWF 4500,136529
# define powf 4501,136559
# define _GLIBCXX_HAVE_POWL 4505,136655
# define powl 4506,136685
# define _GLIBCXX_HAVE_QFPCLASS 4510,136789
# define qfpclass 4511,136823
# define _GLIBCXX_HAVE_SINCOS 4515,136931
# define sincos 4516,136963
# define _GLIBCXX_HAVE_SINCOSF 4520,137069
# define sincosf 4521,137102
# define _GLIBCXX_HAVE_SINCOSL 4525,137210
# define sincosl 4526,137243
# define _GLIBCXX_HAVE_SINF 4530,137345
# define sinf 4531,137375
# define _GLIBCXX_HAVE_SINHF 4535,137473
# define sinhf 4536,137504
# define _GLIBCXX_HAVE_SINHL 4540,137604
# define sinhl 4541,137635
# define _GLIBCXX_HAVE_SINL 4545,137733
# define sinl 4546,137763
# define _GLIBCXX_HAVE_SQRTF 4550,137861
# define sqrtf 4551,137892
# define _GLIBCXX_HAVE_SQRTL 4555,137992
# define sqrtl 4556,138023
# define _GLIBCXX_HAVE_STRTOF 4560,138125
# define strtof 4561,138157
# define _GLIBCXX_HAVE_STRTOLD 4565,138263
# define strtold 4566,138296
# define _GLIBCXX_HAVE_TANF 4570,138398
# define tanf 4571,138428
# define _GLIBCXX_HAVE_TANHF 4575,138526
# define tanhf 4576,138557
# define _GLIBCXX_HAVE_TANHL 4580,138657
# define tanhl 4581,138688
# define _GLIBCXX_HAVE_TANL 4585,138786
# define tanl 4586,138816

/usr/include/c++/13/x86_64-suse-linux/bits/c++io.h,210
#define _GLIBCXX_CXX_IO_H 33,1317
namespace std _GLIBCXX_VISIBILITY(38,1388
  typedef __GTHREAD_LEGACY_MUTEX_T __c_lock;46,1731
  typedef __gthread_mutex_t __c_lock;48,1782
  typedef FILE __c_file;52,1850

/usr/include/c++/13/x86_64-suse-linux/bits/c++locale.h,253
#define _GLIBCXX_CXX_LOCALE_H 37,1404
#define _GLIBCXX_C_LOCALE_GNU 43,1484
#define _GLIBCXX_NUM_CATEGORIES 45,1517
namespace __gnu_cxx _GLIBCXX_VISIBILITY(48,1613
namespace std _GLIBCXX_VISIBILITY(58,1799
  typedef __locale_t		__c_locale;62,1878

/usr/include/c++/13/x86_64-suse-linux/bits/cpu_defines.h,38
#define _GLIBCXX_CPU_DEFINES 31,1294

/usr/include/c++/13/x86_64-suse-linux/bits/ctype_base.h,157
namespace std _GLIBCXX_VISIBILITY(36,1327
  struct ctype_base41,1442
    typedef const int* 		__to_type;44,1496
    typedef unsigned short 	mask;48,1667

/usr/include/c++/13/x86_64-suse-linux/bits/ctype_inline.h,43
namespace std _GLIBCXX_VISIBILITY(37,1374

/usr/include/c++/13/x86_64-suse-linux/bits/cxxabi_tweaks.h,421
#define _CXXABI_TWEAKS_H 31,1300
#define _GLIBCXX_GUARD_TEST(41,1464
#define _GLIBCXX_GUARD_SET(42,1516
#define _GLIBCXX_GUARD_BIT 43,1564
#define _GLIBCXX_GUARD_PENDING_BIT 44,1615
#define _GLIBCXX_GUARD_WAITING_BIT 45,1674
  __extension__ typedef int __guard 46,1733
  typedef void __cxa_vec_ctor_return_type;49,1844
#define _GLIBCXX_CXA_VEC_CTOR_RETURN(50,1887
  typedef void __cxa_cdtor_return_type;52,1991

/usr/include/c++/13/x86_64-suse-linux/bits/error_constants.h,2817
#define _GLIBCXX_ERROR_CONSTANTS 31,1308
namespace std _GLIBCXX_VISIBILITY(36,1391
  enum class errc40,1470
      address_family_not_supported 42,1494
      address_in_use 43,1547
      address_not_available 44,1586
      already_connected 45,1634
      argument_list_too_long 46,1672
      argument_out_of_domain 47,1713
      bad_address 48,1753
      bad_file_descriptor 49,1785
      bad_message 52,1839
      broken_pipe 55,1880
      connection_aborted 56,1911
      connection_already_in_progress 57,1955
      connection_refused 58,2006
      connection_reset 59,2050
      cross_device_link 60,2090
      destination_address_required 61,2126
      device_or_resource_busy 62,2179
      directory_not_empty 63,2220
      executable_format_error 64,2262
      file_exists 65,2305
      file_too_large 66,2344
      filename_too_long 67,2378
      function_not_supported 68,2421
      host_unreachable 69,2463
      identifier_removed 72,2519
      illegal_byte_sequence 75,2564
      inappropriate_io_control_operation 76,2605
      interrupted 77,2657
      invalid_argument 78,2688
      invalid_seek 79,2724
      io_error 80,2757
      is_a_directory 81,2783
      message_size 82,2818
      network_down 83,2853
      network_reset 84,2888
      network_unreachable 85,2925
      no_buffer_space 86,2969
      no_child_process 87,3005
      no_link 90,3057
      no_lock_available 93,3094
      no_message_available 96,3147
      no_message 99,3196
      no_protocol_option 100,3227
      no_space_on_device 101,3270
      no_stream_resources 104,3322
      no_such_device_or_address 107,3368
      no_such_device 108,3411
      no_such_file_or_directory 109,3446
      no_such_process 110,3490
      not_a_directory 111,3524
      not_a_socket 112,3560
      not_a_stream 115,3610
      not_connected 118,3651
      not_enough_memory 119,3687
      not_supported 122,3740
      operation_canceled 126,3800
      operation_in_progress 129,3849
      operation_not_permitted 130,3895
      operation_not_supported 131,3936
      operation_would_block 132,3982
      owner_dead 135,4047
      permission_denied 138,4090
      protocol_error 141,4142
      protocol_not_supported 144,4185
      read_only_file_system 145,4236
      resource_deadlock_would_occur 146,4276
      resource_unavailable_try_again 147,4325
      result_out_of_range 148,4374
      state_not_recoverable 151,4437
      stream_timeout 155,4508
      text_file_busy 159,4565
      timed_out 162,4609
      too_many_files_open_in_system 163,4642
      too_many_files_open 164,4690
      too_many_links 165,4729
      too_many_symbolic_link_levels 166,4764
      value_too_large 169,4829
      value_too_large 171,4889
      wrong_protocol_type 174,4929

/usr/include/c++/13/x86_64-suse-linux/bits/gthr-default.h,3755
#define _GLIBCXX_GCC_GTHR_POSIX_H27,1087
#define __GTHREADS 32,1223
#define __GTHREADS_CXX0X 33,1244
#  define _GTHREAD_USE_MUTEX_TIMEDLOCK 41,1470
#  define _GTHREAD_USE_MUTEX_TIMEDLOCK 43,1518
typedef pthread_t __gthread_t;47,1575
typedef pthread_key_t __gthread_key_t;48,1606
typedef pthread_once_t __gthread_once_t;49,1645
typedef pthread_mutex_t __gthread_mutex_t;50,1686
typedef pthread_mutex_t __gthread_recursive_mutex_t;51,1729
typedef pthread_cond_t __gthread_cond_t;52,1782
typedef struct timespec __gthread_time_t;53,1823
#define __GTHREAD_HAS_COND	57,1971
#define __GTHREAD_MUTEX_INIT 59,2001
#define __GTHREAD_MUTEX_INIT_FUNCTION 60,2056
#define __GTHREAD_ONCE_INIT 61,2124
#define __GTHREAD_RECURSIVE_MUTEX_INIT 63,2219
#define __GTHREAD_RECURSIVE_MUTEX_INIT 65,2348
#define __GTHREAD_RECURSIVE_MUTEX_INIT_FUNCTION 67,2432
#define __GTHREAD_COND_INIT 69,2527
#define __GTHREAD_TIME_INIT 70,2580
# undef __GTHREAD_MUTEX_INIT73,2651
# undef __GTHREAD_RECURSIVE_MUTEX_INIT76,2733
# undef __GTHREAD_RECURSIVE_MUTEX_INIT_FUNCTION77,2772
# define __GTHREAD_RECURSIVE_MUTEX_INIT_FUNCTION 78,2820
# undef __GTHREAD_COND_INIT81,2951
# define __GTHREAD_COND_INIT_FUNCTION 82,2979
#  define __gthrw_pragma(87,3124
# define __gthrw2(89,3165
# define __gthrw_(93,3323
# define __gthrw2(95,3370
# define __gthrw_(96,3405
#define __gthrw(100,3507
__gthrw(102,3567
__gthread_active_p 181,6014
# define GTHR_ACTIVE_PROXY	240,8544
# define GTHR_ACTIVE_PROXY	242,8629
# define GTHR_ACTIVE_PROXY	244,8687
__gthrw2(GTHR_ACTIVE_PROXY237,8457
static volatile int __gthread_active 278,10145
__gthread_active_p 281,10207
__gthread_active_p 300,10684
static pthread_key_t _objc_thread_storage;319,10968
static pthread_attr_t _objc_thread_attribs;320,11011
static void *thread_local_storage thread_local_storage323,11103
__gthread_objc_init_thread_system 329,11245
__gthread_objc_close_thread_system 351,11875
__gthread_objc_thread_detach 365,12215
__gthread_objc_thread_set_priority 384,12656
__gthread_objc_thread_get_priority 427,13861
__gthread_objc_thread_yield 449,14431
__gthread_objc_thread_exit 457,14585
__gthread_objc_thread_id 469,14879
__gthread_objc_thread_set_data 479,15102
__gthread_objc_thread_get_data 492,15396
__gthread_objc_mutex_allocate 504,15647
__gthread_objc_mutex_deallocate 523,16026
__gthread_objc_mutex_lock 553,16657
__gthread_objc_mutex_trylock 566,16916
__gthread_objc_mutex_unlock 579,17166
__gthread_objc_condition_allocate 594,17461
__gthread_objc_condition_deallocate 613,17869
__gthread_objc_condition_wait 628,18204
__gthread_objc_condition_broadcast 639,18535
__gthread_objc_condition_signal 649,18810
__gthread_create 660,19048
__gthread_join 667,19227
__gthread_detach 673,19369
__gthread_equal 679,19482
__gthread_self 685,19613
__gthread_yield 691,19694
__gthread_once 697,19775
__gthread_key_create 706,19966
__gthread_key_delete 712,20115
__gthread_getspecific 718,20233
__gthread_setspecific 724,20350
__gthread_mutex_init_function 730,20494
__gthread_mutex_destroy 737,20655
__gthread_mutex_lock 746,20835
__gthread_mutex_trylock 755,21009
__gthread_mutex_timedlock 765,21222
__gthread_mutex_unlock 776,21473
__gthread_recursive_mutex_init_function 787,21760
__gthread_recursive_mutex_lock 809,22292
__gthread_recursive_mutex_trylock 815,22426
__gthread_recursive_mutex_timedlock 822,22599
__gthread_recursive_mutex_unlock 830,22813
__gthread_recursive_mutex_destroy 836,22951
__gthread_cond_init_function 843,23127
__gthread_cond_broadcast 851,23290
__gthread_cond_signal 857,23417
__gthread_cond_wait 863,23538
__gthread_cond_timedwait 869,23692
__gthread_cond_wait_recursive 876,23915
__gthread_cond_destroy 883,24091

/usr/include/c++/13/x86_64-suse-linux/bits/gthr-posix.h,3755
#define _GLIBCXX_GCC_GTHR_POSIX_H27,1087
#define __GTHREADS 32,1223
#define __GTHREADS_CXX0X 33,1244
#  define _GTHREAD_USE_MUTEX_TIMEDLOCK 41,1470
#  define _GTHREAD_USE_MUTEX_TIMEDLOCK 43,1518
typedef pthread_t __gthread_t;47,1575
typedef pthread_key_t __gthread_key_t;48,1606
typedef pthread_once_t __gthread_once_t;49,1645
typedef pthread_mutex_t __gthread_mutex_t;50,1686
typedef pthread_mutex_t __gthread_recursive_mutex_t;51,1729
typedef pthread_cond_t __gthread_cond_t;52,1782
typedef struct timespec __gthread_time_t;53,1823
#define __GTHREAD_HAS_COND	57,1971
#define __GTHREAD_MUTEX_INIT 59,2001
#define __GTHREAD_MUTEX_INIT_FUNCTION 60,2056
#define __GTHREAD_ONCE_INIT 61,2124
#define __GTHREAD_RECURSIVE_MUTEX_INIT 63,2219
#define __GTHREAD_RECURSIVE_MUTEX_INIT 65,2348
#define __GTHREAD_RECURSIVE_MUTEX_INIT_FUNCTION 67,2432
#define __GTHREAD_COND_INIT 69,2527
#define __GTHREAD_TIME_INIT 70,2580
# undef __GTHREAD_MUTEX_INIT73,2651
# undef __GTHREAD_RECURSIVE_MUTEX_INIT76,2733
# undef __GTHREAD_RECURSIVE_MUTEX_INIT_FUNCTION77,2772
# define __GTHREAD_RECURSIVE_MUTEX_INIT_FUNCTION 78,2820
# undef __GTHREAD_COND_INIT81,2951
# define __GTHREAD_COND_INIT_FUNCTION 82,2979
#  define __gthrw_pragma(87,3124
# define __gthrw2(89,3165
# define __gthrw_(93,3323
# define __gthrw2(95,3370
# define __gthrw_(96,3405
#define __gthrw(100,3507
__gthrw(102,3567
__gthread_active_p 181,6014
# define GTHR_ACTIVE_PROXY	240,8544
# define GTHR_ACTIVE_PROXY	242,8629
# define GTHR_ACTIVE_PROXY	244,8687
__gthrw2(GTHR_ACTIVE_PROXY237,8457
static volatile int __gthread_active 278,10145
__gthread_active_p 281,10207
__gthread_active_p 300,10684
static pthread_key_t _objc_thread_storage;319,10968
static pthread_attr_t _objc_thread_attribs;320,11011
static void *thread_local_storage thread_local_storage323,11103
__gthread_objc_init_thread_system 329,11245
__gthread_objc_close_thread_system 351,11875
__gthread_objc_thread_detach 365,12215
__gthread_objc_thread_set_priority 384,12656
__gthread_objc_thread_get_priority 427,13861
__gthread_objc_thread_yield 449,14431
__gthread_objc_thread_exit 457,14585
__gthread_objc_thread_id 469,14879
__gthread_objc_thread_set_data 479,15102
__gthread_objc_thread_get_data 492,15396
__gthread_objc_mutex_allocate 504,15647
__gthread_objc_mutex_deallocate 523,16026
__gthread_objc_mutex_lock 553,16657
__gthread_objc_mutex_trylock 566,16916
__gthread_objc_mutex_unlock 579,17166
__gthread_objc_condition_allocate 594,17461
__gthread_objc_condition_deallocate 613,17869
__gthread_objc_condition_wait 628,18204
__gthread_objc_condition_broadcast 639,18535
__gthread_objc_condition_signal 649,18810
__gthread_create 660,19048
__gthread_join 667,19227
__gthread_detach 673,19369
__gthread_equal 679,19482
__gthread_self 685,19613
__gthread_yield 691,19694
__gthread_once 697,19775
__gthread_key_create 706,19966
__gthread_key_delete 712,20115
__gthread_getspecific 718,20233
__gthread_setspecific 724,20350
__gthread_mutex_init_function 730,20494
__gthread_mutex_destroy 737,20655
__gthread_mutex_lock 746,20835
__gthread_mutex_trylock 755,21009
__gthread_mutex_timedlock 765,21222
__gthread_mutex_unlock 776,21473
__gthread_recursive_mutex_init_function 787,21760
__gthread_recursive_mutex_lock 809,22292
__gthread_recursive_mutex_trylock 815,22426
__gthread_recursive_mutex_timedlock 822,22599
__gthread_recursive_mutex_unlock 830,22813
__gthread_recursive_mutex_destroy 836,22951
__gthread_cond_init_function 843,23127
__gthread_cond_broadcast 851,23290
__gthread_cond_signal 857,23417
__gthread_cond_wait 863,23538
__gthread_cond_timedwait 869,23692
__gthread_cond_wait_recursive 876,23915
__gthread_cond_destroy 883,24091

/usr/include/c++/13/x86_64-suse-linux/bits/gthr-single.h,1805
#define _GLIBCXX_GCC_GTHR_SINGLE_H27,1088
typedef int __gthread_key_t;31,1179
typedef int __gthread_once_t;32,1208
typedef int __gthread_mutex_t;33,1238
typedef int __gthread_recursive_mutex_t;34,1269
#define __GTHREAD_ONCE_INIT 36,1311
#define __GTHREAD_MUTEX_INIT 37,1341
#define __GTHREAD_MUTEX_INIT_FUNCTION(38,1372
#define __GTHREAD_RECURSIVE_MUTEX_INIT 39,1430
#define _GLIBCXX_UNUSED 41,1472
static void *thread_local_storage thread_local_storage46,1589
__gthread_objc_init_thread_system 52,1731
__gthread_objc_close_thread_system 60,1880
__gthread_objc_thread_detach 70,2077
__gthread_objc_thread_set_priority 78,2274
__gthread_objc_thread_get_priority 86,2457
__gthread_objc_thread_yield 93,2615
__gthread_objc_thread_exit 100,2720
__gthread_objc_thread_id 110,2988
__gthread_objc_thread_set_data 118,3154
__gthread_objc_thread_get_data 126,3320
__gthread_objc_mutex_allocate 135,3468
__gthread_objc_mutex_deallocate 142,3597
__gthread_objc_mutex_lock 149,3732
__gthread_objc_mutex_trylock 157,3932
__gthread_objc_mutex_unlock 165,4120
__gthread_objc_condition_allocate 174,4290
__gthread_objc_condition_deallocate 181,4435
__gthread_objc_condition_wait 188,4579
__gthread_objc_condition_broadcast 196,4789
__gthread_objc_condition_signal 203,4957
__gthread_active_p 211,5091
__gthread_once 217,5152
__gthread_key_create 223,5300
__gthread_key_delete 229,5447
__gthread_getspecific 235,5546
__gthread_setspecific 241,5643
__gthread_mutex_destroy 247,5773
__gthread_mutex_lock 253,5877
__gthread_mutex_trylock 259,5978
__gthread_mutex_unlock 265,6082
__gthread_recursive_mutex_lock 271,6185
__gthread_recursive_mutex_trylock 277,6319
__gthread_recursive_mutex_unlock 283,6459
__gthread_recursive_mutex_destroy 289,6597
#undef _GLIBCXX_UNUSED296,6742

/usr/include/c++/13/x86_64-suse-linux/bits/gthr.h,166
#define _GLIBCXX_GCC_GTHR_H27,1069
#undef _GLIBCXX_GTHREAD_USE_WEAK140,5315
#define _GLIBCXX_GTHREAD_USE_WEAK 141,5348
#define _GLIBCXX_GTHREAD_USE_WEAK 145,5426

/usr/include/c++/13/x86_64-suse-linux/bits/messages_members.h,43
namespace std _GLIBCXX_VISIBILITY(38,1403

/usr/include/c++/13/x86_64-suse-linux/bits/opt_random.h,193
#define _BITS_OPT_RANDOM_H 31,1302
namespace std _GLIBCXX_VISIBILITY(41,1408
	typedef uint64_t __uctype;55,1828
                  __m128i __i;88,2642
                  __m128d __d;89,2673

/usr/include/c++/13/x86_64-suse-linux/bits/os_defines.h,339
#define _GLIBCXX_OS_DEFINES 31,1284
#define __NO_CTYPE 37,1486
# undef _GLIBCXX_HAVE_GETS45,1742
#define _GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC 50,1930
# define _GLIBCXX_HAVE_FLOAT128_MATH 60,2395
#  define _GLIBCXX_NATIVE_THREAD_ID 68,2637
#  define _GLIBCXX_NATIVE_THREAD_ID 74,2976
#  define _GLIBCXX_GTHREAD_USE_WEAK 81,3200

/usr/include/c++/13/x86_64-suse-linux/bits/time_members.h,43
namespace std _GLIBCXX_VISIBILITY(37,1435

/usr/include/c++/13/x86_64-suse-linux/ext/opt_random.h,202
#define _EXT_OPT_RANDOM_H 31,1303
namespace __gnu_cxx _GLIBCXX_VISIBILITY(39,1423
#define _GLIBCXX_OPT_HAVE_RANDOM_SFMT_GEN_READ	64,2164
#define _GLIBCXX_OPT_HAVE_RANDOM_SFMT_OPERATOREQUAL	106,3478

/usr/include/c++/13/algorithm,137
#define _GLIBCXX_ALGORITHM 56,2276
#    define _PSTL_ALGORITHM_FORWARD_DECLARED 74,2772
# define __cpp_lib_parallel_algorithm 78,2875

/usr/include/c++/13/any,3134
#define _GLIBCXX_ANY 30,1153
namespace std _GLIBCXX_VISIBILITY(42,1364
  class bad_any_cast 55,1591
    virtual const char* what(58,1644
#define __cpp_lib_any 70,1870
  class any80,2101
    union _Storage83,2194
      constexpr _Storage(85,2219
      void* _M_ptr;91,2439
      aligned_storage<sizeof(sizeof92,2459
      aligned_storage<sizeof(_M_ptr), alignof(void*)>::type _M_buffer;92,2459
    template<typename _Tp,95,2538
				       _Manager_internal<_Manager_internal108,3077
    template<typename _Tp,111,3149
    template <typename _Tp,115,3360
    template <typename _Tp, typename... _Args,115,3360
    template <typename _Tp,126,3715
    template <typename _Tp, typename _Up,126,3715
    template <typename _Tp, typename _Up, typename... _Args,126,3715
    template <typename _Res,135,4012
    template <typename _Res, typename _Tp,135,4012
			   is_constructible<is_constructible138,4154
			   is_constructible<_Tp, _Args...>>::value,value138,4154
    template <typename _Tp,141,4215
	= typename __any_constructible<bool, _Tp,143,4296
	= typename __any_constructible<bool, _Tp, _Args...>::type;type143,4296
    template<typename _VTp,145,4357
	= typename __any_constructible<_VTp&, _VTp,147,4428
	= typename __any_constructible<_VTp&, _VTp, _Args...>::type;type147,4428
    constexpr any(153,4582
    any(156,4695
    any(173,5066
    template <typename _Tp,186,5342
    template <typename _Tp,197,5767
    template <typename _Tp, typename... _Args,197,5767
	      __any_constructible_t<__any_constructible_t199,5883
    template <typename _Tp,209,6222
    template <typename _Tp, typename _Up,209,6222
    template <typename _Tp, typename _Up, typename... _Args,209,6222
	      __any_constructible_t<__any_constructible_t211,6352
    ~any(221,6693
    operator=(operator=227,6789
    operator=(operator=239,7029
      enable_if_t<enable_if_t255,7358
      operator=(operator=256,7436
    template <typename _Tp,263,7616
      __emplace_t<__emplace_t264,7663
      emplace(265,7705
    template <typename _Tp,274,7988
    template <typename _Tp, typename _Up,274,7988
      __emplace_t<__emplace_t275,8049
      emplace(276,8117
    void reset(286,8410
    void swap(296,8596
    bool has_value(328,9306
    const type_info& type(332,9468
      static constexpr bool __is_valid_cast(344,9733
    enum _Op 349,9886
	_Op_access,350,9901
	_Op_access, _Op_get_type_info,350,9901
	_Op_access, _Op_get_type_info, _Op_clone,350,9901
	_Op_access, _Op_get_type_info, _Op_clone, _Op_destroy,350,9901
	_Op_access, _Op_get_type_info, _Op_clone, _Op_destroy, _Op_xfer350,9901
    union _Arg353,9974
	void* _M_obj;355,9995
	const std::type_info* _M_typeinfo;356,10010
	any* _M_any;357,10046
    _Storage _M_storage;361,10116
      struct _Manager_internal370,10333
	  _S_create(377,10482
	  _S_create(385,10681
	_S_access(392,10857
      struct _Manager_external402,11134
	  _S_create(409,11283
	  _S_create(415,11447
	_S_access(420,11588
  namespace __detail::__variant640,18395
      struct _Never_valueless_alt<_Never_valueless_alt647,18614

/usr/include/c++/13/array,1960
#define _GLIBCXX_ARRAY 30,1159
namespace std _GLIBCXX_VISIBILITY(48,1572
    struct __array_traits53,1688
     struct _Type64,2000
       _Tp& operator[operator68,2113
       constexpr explicit operator _Tp*_Tp72,2283
    struct array94,2974
      typedef _Tp 	    			      value_type;96,2997
      typedef value_type*			      pointer;97,3041
      typedef const value_type*                       const_pointer;98,3084
      typedef value_type&                   	      reference;99,3153
      typedef const value_type&             	      const_reference;100,3215
      typedef value_type*          		      iterator;101,3283
      typedef const value_type*			      const_iterator;102,3336
      typedef std::size_t                    	      size_type;103,3392
      typedef std::ptrdiff_t                   	      difference_type;104,3455
      typedef std::reverse_iterator<iterator>	      reverse_iterator;105,3526
      typedef std::reverse_iterator<const_iterator>   const_reverse_iterator;106,3596
      typename __array_traits<__array_traits109,3725
      typename __array_traits<_Tp, _Nm>::_Type        _M_elems;109,3725
      fill(115,3904
      swap(119,4016
      begin(126,4276
      begin(131,4401
      end(136,4552
      end(141,4681
      rbegin(146,4844
      rbegin(151,4985
      rend(156,5152
      rend(161,5293
      cbegin(166,5438
      cend(171,5576
      crbegin(176,5726
      crend(181,5880
      size(187,6077
      max_size(191,6220
      empty(195,6362
      at(217,6869
      at(227,7103
      front(240,7503
      front(248,7663
      back(258,7868
      back(266,8022
      data(276,8267
      data(281,8404
    operator==(operator==297,8826
    operator<=>(operator<=>304,9127
    operator!=(operator!=326,9724
    operator<(333,9939
    operator>(343,10225
    operator<=(operator<=350,10435
    operator>=(operator>=357,10649
#define __cpp_lib_to_array 418,12594

/usr/include/c++/13/atomic,8734
#define _GLIBCXX_ATOMIC 33,1312
namespace std _GLIBCXX_VISIBILITY(43,1463
# define __cpp_lib_atomic_is_always_lock_free 53,1615
# define _GLIBCXX20_INIT(186,5427
# define _GLIBCXX20_INIT(188,5465
    struct atomic198,5685
      alignas(211,6054
      operator _Tp(operator _Tp241,7040
      operator _Tp(operator _Tp244,7102
      operator=(operator=248,7183
      operator=(operator=252,7262
      is_lock_free(256,7351
      is_lock_free(264,7553
      store(277,7894
      store(285,8099
      load(293,8312
      load(302,8572
      exchange(311,8848
      exchange(322,9173
      compare_exchange_weak(334,9516
      compare_exchange_weak(342,9725
      compare_exchange_weak(350,9943
      compare_exchange_weak(356,10181
      compare_exchange_strong(362,10428
      compare_exchange_strong(370,10642
      compare_exchange_strong(378,10865
      compare_exchange_strong(384,11112
    wait(391,11389
    notify_one(400,11623
    notify_all(404,11711
#undef _GLIBCXX20_INIT409,11828
    struct atomic<atomic413,11925
      typedef _Tp* 			__pointer_type;418,12028
      typedef __atomic_base<_Tp*>	__base_type;419,12066
      __base_type			_M_b;420,12113
      constexpr atomic(428,12357
      operator __pointer_type(operator __pointer_type430,12426
      operator __pointer_type(operator __pointer_type433,12513
      operator=(operator=437,12630
      operator=(operator=441,12735
      operator++(445,12849
      operator++(454,13035
      operator--(463,13230
      operator--(472,13416
      operator++(481,13611
      operator++(490,13794
      operator--(499,13986
      operator--(508,14169
      operator+=(operator+=517,14361
      operator+=(operator+=526,14571
      operator-=(operator-=535,14790
      operator-=(operator-=544,15000
      is_lock_free(553,15209
      is_lock_free(557,15295
      store(566,15507
      store(571,15645
      load(576,15802
      load(580,15924
      exchange(584,16055
      exchange(589,16212
      compare_exchange_weak(594,16368
      compare_exchange_weak(599,16574
      compare_exchange_weak(605,16796
      compare_exchange_weak(613,17039
      compare_exchange_strong(621,17290
      compare_exchange_strong(626,17502
      compare_exchange_strong(632,17732
      compare_exchange_strong(640,17986
    wait(649,18270
    notify_one(655,18439
    notify_all(659,18502
      fetch_add(664,18609
      fetch_add(674,18865
      fetch_sub(684,19130
      fetch_sub(694,19386
    struct atomic<atomic707,19691
      typedef char 			__integral_type;709,19743
      typedef __atomic_base<char> 	__base_type;710,19782
      constexpr atomic(718,20048
    struct atomic<atomic730,20393
      typedef signed char 		__integral_type;732,20459
      typedef __atomic_base<signed char> 	__base_type;733,20504
      constexpr atomic(741,20776
    struct atomic<atomic753,21123
      typedef unsigned char 		__integral_type;755,21193
      typedef __atomic_base<unsigned char> 	__base_type;756,21240
      constexpr atomic(764,21514
    struct atomic<atomic776,21853
      typedef short 			__integral_type;778,21907
      typedef __atomic_base<short> 		__base_type;779,21947
      constexpr atomic(787,22215
    struct atomic<atomic799,22564
      typedef unsigned short 	      	__integral_type;801,22636
      typedef __atomic_base<unsigned short> 		__base_type;802,22690
      constexpr atomic(810,22967
    struct atomic<atomic822,23305
      typedef int 			__integral_type;824,23355
      typedef __atomic_base<int> 		__base_type;825,23393
      constexpr atomic(833,23659
    struct atomic<atomic845,24004
      typedef unsigned int		__integral_type;847,24072
      typedef __atomic_base<unsigned int> 	__base_type;848,24117
      constexpr atomic(856,24391
    struct atomic<atomic868,24728
      typedef long 			__integral_type;870,24780
      typedef __atomic_base<long> 	__base_type;871,24819
      constexpr atomic(879,25085
    struct atomic<atomic891,25432
      typedef unsigned long 		__integral_type;893,25502
      typedef __atomic_base<unsigned long> 	__base_type;894,25549
      constexpr atomic(902,25824
    struct atomic<atomic914,26167
      typedef long long 		__integral_type;916,26229
      typedef __atomic_base<long long> 		__base_type;917,26272
      constexpr atomic(925,26544
    struct atomic<atomic937,26897
      typedef unsigned long long       	__integral_type;939,26977
      typedef __atomic_base<unsigned long long> 	__base_type;940,27034
      constexpr atomic(948,27314
    struct atomic<atomic960,27656
      typedef wchar_t 			__integral_type;962,27714
      typedef __atomic_base<wchar_t> 	__base_type;963,27756
      constexpr atomic(971,28025
    struct atomic<atomic984,28397
      typedef char8_t 			__integral_type;986,28455
      typedef __atomic_base<char8_t> 	__base_type;987,28497
      constexpr atomic(995,28766
    struct atomic<atomic1009,29118
      typedef char16_t 			__integral_type;1011,29178
      typedef __atomic_base<char16_t> 	__base_type;1012,29221
      constexpr atomic(1020,29491
    struct atomic<atomic1033,29838
      typedef char32_t 			__integral_type;1035,29898
      typedef __atomic_base<char32_t> 	__base_type;1036,29941
      constexpr atomic(1044,30211
  typedef atomic<bool>			atomic_bool;1057,30520
  typedef atomic<char>			atomic_char;1060,30577
  typedef atomic<signed char>		atomic_schar;1063,30635
  typedef atomic<unsigned char>		atomic_uchar;1066,30700
  typedef atomic<short>			atomic_short;1069,30767
  typedef atomic<unsigned short>	atomic_ushort;1072,30828
  typedef atomic<int>			atomic_int;1075,30894
  typedef atomic<unsigned int>		atomic_uint;1078,30949
  typedef atomic<long>			atomic_long;1081,31013
  typedef atomic<unsigned long>		atomic_ulong;1084,31071
  typedef atomic<long long>		atomic_llong;1087,31138
  typedef atomic<unsigned long long>	atomic_ullong;1090,31202
  typedef atomic<wchar_t>		atomic_wchar_t;1093,31276
  typedef atomic<char8_t>		atomic_char8_t;1097,31369
  typedef atomic<char16_t>		atomic_char16_t;1101,31442
  typedef atomic<char32_t>		atomic_char32_t;1104,31510
  typedef atomic<int8_t>		atomic_int8_t;1111,31704
  typedef atomic<uint8_t>		atomic_uint8_t;1114,31767
  typedef atomic<int16_t>		atomic_int16_t;1117,31832
  typedef atomic<uint16_t>		atomic_uint16_t;1120,31898
  typedef atomic<int32_t>		atomic_int32_t;1123,31965
  typedef atomic<uint32_t>		atomic_uint32_t;1126,32031
  typedef atomic<int64_t>		atomic_int64_t;1129,32098
  typedef atomic<uint64_t>		atomic_uint64_t;1132,32164
  typedef atomic<int_least8_t>		atomic_int_least8_t;1136,32237
  typedef atomic<uint_least8_t>		atomic_uint_least8_t;1139,32318
  typedef atomic<int_least16_t>		atomic_int_least16_t;1142,32401
  typedef atomic<uint_least16_t>	atomic_uint_least16_t;1145,32485
  typedef atomic<int_least32_t>		atomic_int_least32_t;1148,32569
  typedef atomic<uint_least32_t>	atomic_uint_least32_t;1151,32653
  typedef atomic<int_least64_t>		atomic_int_least64_t;1154,32737
  typedef atomic<uint_least64_t>	atomic_uint_least64_t;1157,32821
  typedef atomic<int_fast8_t>		atomic_int_fast8_t;1161,32904
  typedef atomic<uint_fast8_t>		atomic_uint_fast8_t;1164,32982
  typedef atomic<int_fast16_t>		atomic_int_fast16_t;1167,33062
  typedef atomic<uint_fast16_t>		atomic_uint_fast16_t;1170,33143
  typedef atomic<int_fast32_t>		atomic_int_fast32_t;1173,33225
  typedef atomic<uint_fast32_t>		atomic_uint_fast32_t;1176,33306
  typedef atomic<int_fast64_t>		atomic_int_fast64_t;1179,33388
  typedef atomic<uint_fast64_t>		atomic_uint_fast64_t;1182,33469
  typedef atomic<intptr_t>		atomic_intptr_t;1187,33555
  typedef atomic<uintptr_t>		atomic_uintptr_t;1190,33624
  typedef atomic<size_t>		atomic_size_t;1193,33692
  typedef atomic<ptrdiff_t>		atomic_ptrdiff_t;1196,33757
  typedef atomic<intmax_t>		atomic_intmax_t;1200,33862
  typedef atomic<uintmax_t>		atomic_uintmax_t;1203,33931
#define __cpp_lib_atomic_float 1621,46986
    struct atomic<atomic1623,47038
      atomic(1628,47145
    struct atomic<atomic1638,47395
      atomic(1643,47504
    struct atomic<atomic1653,47757
      atomic(1658,47876
    struct atomic<atomic1669,48172
      atomic(1674,48285
    struct atomic<atomic1686,48579
      atomic(1691,48692
    struct atomic<atomic1703,48986
      atomic(1708,49099
    struct atomic<atomic1720,49394
      atomic(1725,49509
    struct atomic<atomic1737,49807
      atomic(1742,49950
#define __cpp_lib_atomic_ref 1752,50248
    struct atomic_ref 1756,50387
      atomic_ref(1759,50450
#define __cpp_lib_atomic_lock_free_type_aliases 1769,50678

/usr/include/c++/13/barrier,586
#define _GLIBCXX_BARRIER 39,1579
#define __cpp_lib_barrier 53,1872
namespace std _GLIBCXX_VISIBILITY(55,1907
  struct __empty_completion59,1986
    operator(62,2050
  enum class __barrier_phase_t 80,2634
    class __tree_barrier83,2721
      ptrdiff_t _M_expected;96,3211
      unique_ptr<__state_t[]> _M_state;97,3240
      __atomic_base<ptrdiff_t> _M_expected_adjustment;98,3280
      _CompletionF _M_completion;99,3335
      _M_arrive(104,3444
      max(155,5006
      __tree_barrier(158,5062
      arrive(169,5430
      wait(192,6156
      arrive_and_drop(203,6430

/usr/include/c++/13/bit,380
#define _GLIBCXX_BIT 30,1153
    struct __int_traits46,1445
namespace std _GLIBCXX_VISIBILITY(55,1645
#define __cpp_lib_bit_cast 69,1946
#define __cpp_lib_byteswap 92,2592
#define __cpp_lib_bitops 375,11202
#define __cpp_lib_int_pow2 431,12967
#define __cpp_lib_endian 459,13896
  enum class endian468,14131
    little 470,14155
    big 471,14193
    native 472,14228

/usr/include/c++/13/bitset,6401
#define _GLIBCXX_BITSET 43,1716
#define _GLIBCXX_BITSET_BITS_PER_WORD 61,2110
#define _GLIBCXX_BITSET_WORDS(62,2182
#define _GLIBCXX_BITSET_BITS_PER_ULL 66,2322
namespace std _GLIBCXX_VISIBILITY(68,2398
# define __cpp_lib_constexpr_bitset 73,2524
    struct _Base_bitset83,2744
      typedef unsigned long _WordT;85,2774
      _WordT 		_M_w[_M_w88,2854
      _GLIBCXX_CONSTEXPR _Base_bitset(90,2881
      constexpr _Base_bitset(94,2986
      _Base_bitset(101,3204
      _S_whichword(107,3333
      _S_whichbyte(111,3480
      _S_whichbit(115,3644
      _S_maskbit(119,3790
      _M_getword(123,3940
      _M_getword(127,4066
      _M_getdata(132,4223
      _M_hiword(137,4323
      _M_hiword(141,4424
      _M_do_and(145,4531
      _M_do_or(152,4715
      _M_do_xor(159,4898
      _M_do_left_shift(166,5082
      _M_do_set(179,5418
      _M_do_reset(186,5583
      _M_is_equal(200,5863
        _M_are_all(210,6121
      _M_is_any(221,6439
      _M_do_count(230,6649
      _M_do_to_ulong(239,6878
    struct _Base_bitset<_Base_bitset394,11416
      typedef unsigned long _WordT;396,11449
      _WordT _M_w;397,11485
      _GLIBCXX_CONSTEXPR _Base_bitset(399,11505
      constexpr _Base_bitset(404,11617
      _S_whichword(412,11804
      _S_whichbyte(416,11951
      _S_whichbit(420,12115
      _S_maskbit(424,12262
      _M_getword(428,12412
      _M_getword(432,12511
      _M_getdata(437,12641
      _M_hiword(442,12742
      _M_hiword(446,12834
      _M_do_and(450,12932
      _M_do_or(454,13055
      _M_do_xor(458,13177
      _M_do_left_shift(462,13300
      _M_do_right_shift(466,13418
      _M_do_flip(470,13537
      _M_do_set(474,13631
      _M_do_reset(478,13742
      _M_is_equal(482,13833
        _M_are_all(487,14000
      _M_is_any(492,14178
      _M_do_count(496,14283
      _M_do_to_ulong(500,14413
      _M_do_to_ullong(505,14546
      _M_do_find_first(510,14650
      _M_do_find_next(520,14925
    struct _Base_bitset<_Base_bitset541,15373
      typedef unsigned long _WordT;543,15406
      _GLIBCXX_CONSTEXPR _Base_bitset(545,15443
      constexpr _Base_bitset(549,15539
      _S_whichword(556,15694
      _S_whichbyte(560,15841
      _S_whichbit(564,16005
      _S_maskbit(568,16152
      _M_getword(579,16744
      _M_getword(583,16885
      _M_hiword(587,16987
      _M_do_and(591,17082
      _M_do_or(595,17183
      _M_do_xor(599,17283
      _M_do_left_shift(603,17384
      _M_do_right_shift(607,17476
      _M_do_flip(611,17569
      _M_do_set(615,17649
      _M_do_reset(619,17728
      _M_is_equal(626,18007
        _M_are_all(631,18156
      _M_is_any(635,18257
      _M_do_count(639,18356
      _M_do_to_ulong(643,18460
      _M_do_to_ullong(648,18590
      _M_do_find_first(655,18822
      _M_do_find_next(659,18930
    struct _Sanitize666,19129
      typedef unsigned long _WordT;668,19156
      _S_do_sanitize(671,19232
    struct _Sanitize<_Sanitize676,19370
      typedef unsigned long _WordT;678,19400
      _S_do_sanitize(681,19476
  namespace __bitset701,20026
      struct __string708,20187
	struct traits_type713,20295
	  length(716,20356
	  eq(725,20504
    class bitset797,23288
      typedef _Base_bitset<_GLIBCXX_BITSET_WORDS(_Nb)> _Base;801,23379
      typedef unsigned long _WordT;802,23441
      _M_check_initial_position(808,23594
      void _M_check(820,23967
      _M_do_sanitize(830,24240
	typedef _Sanitize<_Nb % _GLIBCXX_BITSET_BITS_PER_WORD> __sanitize_type;832,24289
      class reference853,25096
	_WordT*	_M_wp;857,25149
	size_t 	_M_bpos;858,25165
	reference(865,25254
	~reference(878,25544
	operator=(operator=884,25636
	operator=(operator=896,25863
	operator~(908,26135
	operator bool(operator bool913,26273
	flip(919,26428
      _GLIBCXX_CONSTEXPR bitset(929,26622
      constexpr bitset(934,26791
      bitset(937,26920
	bitset(955,27589
	bitset(977,28459
	bitset(989,28864
	bitset(1013,29772
      operator&=(operator&=1041,30596
      operator|=(operator|=1049,30760
      operator^=(operator^=1057,30923
      operator<<=(operator<<=1073,31278
      operator>>=(operator>>=1087,31565
      _Unchecked_set(1108,32071
      _Unchecked_set(1116,32256
      _Unchecked_reset(1127,32529
      _Unchecked_flip(1135,32717
      _Unchecked_test(1142,32887
      set(1153,33199
      set(1168,33625
      reset(1179,33890
      reset(1194,34271
      flip(1205,34532
      flip(1219,34898
      operator~(1228,35115
      to_ulong(1264,36568
      to_ullong(1270,36712
	std::basic_string<std::basic_string1285,37212
	to_string(1286,37256
	std::basic_string<std::basic_string1297,37582
	to_string(1298,37626
	std::basic_string<std::basic_string1309,37967
	to_string(1310,38028
	std::basic_string<std::basic_string1317,38277
	to_string(1318,38338
	std::basic_string<std::basic_string1324,38550
	to_string(1326,38647
	std::basic_string<std::basic_string1334,38826
	to_string(1336,38923
      std::basic_string<std::basic_string1343,39132
      to_string(1344,39209
      std::basic_string<std::basic_string1351,39369
      to_string(1352,39446
      count(1362,39730
      size(1367,39883
      operator==(operator==1374,40068
      operator!=(operator!=1380,40263
      test(1393,40664
      all(1407,41046
      any(1416,41299
      none(1425,41538
      operator<<(1432,41698
      operator>>(1437,41856
      _Find_first(1449,42232
      _Find_next(1461,42636
    private:private1464,42746
	_M_copy_from_string(1476,43079
    operator&(1553,45350
    operator|(1563,45593
    operator^(1573,45837
    operator>>(1593,46436
      typedef typename _Traits::char_type 1595,46518
      typedef std::basic_istream<_CharT, _Traits>  __istream_type;1596,46580
      typedef typename __istream_type::ios_base 1597,46647
      struct _Buffer1599,46711
	static _GLIBCXX_CONSTEXPR bool _S_use_alloca(1601,46740
	explicit _Buffer(1603,46812
	~_Buffer(1605,46862
	_CharT* const _M_ptr;1611,46949
    operator<<(1683,48791
#undef _GLIBCXX_BITSET_WORDS1700,49281
#undef _GLIBCXX_BITSET_BITS_PER_WORD1701,49310
#undef _GLIBCXX_BITSET_BITS_PER_ULL1702,49347
namespace std _GLIBCXX_VISIBILITY(1706,49412
    struct hash<hash1713,49571
      operator()(operator()1717,49697
    struct hash<hash1725,49933
      operator()(operator()1729,50055

/usr/include/c++/13/ccomplex,35
#define _GLIBCXX_CCOMPLEX 32,1195

/usr/include/c++/13/cctype,356
#define _GLIBCXX_CCTYPE 45,1630
#undef isalnum48,1732
#undef isalpha49,1747
#undef iscntrl50,1762
#undef isdigit51,1777
#undef isgraph52,1792
#undef islower53,1807
#undef isprint54,1822
#undef ispunct55,1837
#undef isspace56,1852
#undef isupper57,1867
#undef isxdigit58,1882
#undef tolower59,1898
#undef toupper60,1913
#undef isblank83,2276

/usr/include/c++/13/cerrno,56
#define _GLIBCXX_CERRNO 45,1637
#define errno 49,1735

/usr/include/c++/13/cfenv,335
#define _GLIBCXX_CFENV 30,1159
#undef feclearexcept46,1393
#undef fegetexceptflag47,1414
#undef feraiseexcept48,1437
#undef fesetexceptflag49,1458
#undef fetestexcept50,1481
#undef fegetround51,1501
#undef fesetround52,1519
#undef fegetenv53,1537
#undef feholdexcept54,1553
#undef fesetenv55,1573
#undef feupdateenv56,1589

/usr/include/c++/13/cfloat,103
#define _GLIBCXX_CFLOAT 45,1666
#    define DECIMAL_DIG 49,1742
#    define FLT_EVAL_METHOD 52,1817

/usr/include/c++/13/charconv,2300
#define _GLIBCXX_CHARCONV 30,1213
# define __cpp_lib_to_chars 50,1969
# define __cpp_lib_constexpr_charconv 54,2039
namespace std _GLIBCXX_VISIBILITY(57,2093
  struct to_chars_result62,2207
    char* ptr;64,2236
    errc ec;65,2251
  struct from_chars_result74,2477
    const char* ptr;76,2508
    errc ec;77,2529
    struct __to_chars_unsigned_type 104,3464
      using _UInts = _List<unsigned int, unsigned long,106,3538
      using _UInts = _List<unsigned int, unsigned long, unsigned long long106,3538
      using type = typename __select<sizeof(_Tp), _UInts>::__type;__type111,3690
    __to_chars_i(329,9121
#define _GLIBCXX_TO_CHARS(366,10134
#undef _GLIBCXX_TO_CHARS397,11278
namespace __detail403,11450
    __raise_and_add(407,11515
    struct __from_chars_alnum_to_val_table416,11757
      struct type 418,11806
      _S_make_table(423,12061
      __from_chars_alnum_to_val_table<_DecOnly>::value;value449,12947
  template<bool _DecOnly 456,13310
  template<bool _DecOnly,468,13755
    __from_chars_pow2_base(470,13825
  template<bool _DecOnly,525,15619
    __from_chars_alnum(527,15678
    using __integer_from_chars_result_type556,16581
			  __is_unsigned_integer<__is_unsigned_integer558,16676
			  is_same<is_same559,16709
			  is_same<char, remove_cv_t<_Tp>>>::value,value559,16709
    from_chars(567,16947
  enum class chars_format635,18721
    scientific 637,18751
    scientific = 1, fixed 637,18751
    scientific = 1, fixed = 2, hex 637,18751
    scientific = 1, fixed = 2, hex = 4, general 637,18751
  operator|(641,18851
  operator&(645,19002
  operator^(649,19153
  operator~(653,19304
  operator|=(operator|=657,19417
  operator&=(operator&=661,19543
  operator^=(operator^=665,19669
  from_chars(695,20866
  from_chars(709,21296
  from_chars(722,21709
  from_chars(735,22126
  from_chars(751,22747
  from_chars(770,23383
  to_chars(820,25321
  to_chars(826,25507
  to_chars(830,25698
  to_chars(837,25993
  to_chars(840,26141
  to_chars(844,26320
  to_chars(851,26616
  to_chars(854,26765
  to_chars(858,26945
  to_chars(865,27245
  to_chars(868,27413
  to_chars(874,27618
  to_chars(892,28350
  to_chars(898,28543
  to_chars(906,28768
  to_chars(926,29457
  to_chars(933,29664
  to_chars(937,29871

/usr/include/c++/13/chrono,14864
#define _GLIBCXX_CHRONO 31,1182
namespace std _GLIBCXX_VISIBILITY(59,1732
    struct local_t 81,2149
    struct leap_second_info111,3198
      bool is_leap_second;113,3232
      seconds elapsed;114,3259
    class utc_clock127,3555
      now(138,3948
	static sys_time<sys_time143,4059
	to_sys(144,4111
	static utc_time<utc_time156,4486
    class tai_clock166,4729
      now(178,5223
	static utc_time<utc_time183,5331
	to_utc(184,5383
	static tai_time<tai_time192,5596
	from_utc(193,5648
    class gps_clock206,5943
      now(218,6393
	static utc_time<utc_time223,6501
	to_utc(224,6553
	static gps_time<gps_time232,6766
	from_utc(233,6818
      struct clock_time_conversion242,7048
	  operator()(operator()252,7276
	  operator()(operator()261,7506
	  operator()(operator()270,7720
	  operator()(operator()281,8016
	  operator()(operator()290,8278
    namespace __detail362,10544
      template<typename _DestClock,364,10573
      template<typename _DestClock, typename _SourceClock,364,10573
      template<typename _DestClock,370,10814
      template<typename _DestClock, typename _SourceClock,370,10814
      template<typename _DestClock,377,11120
      template<typename _DestClock, typename _SourceClock,377,11120
      template<typename _DestClock,384,11420
      template<typename _DestClock, typename _SourceClock,384,11420
      template<typename _DestClock,392,11774
      template<typename _DestClock, typename _SourceClock,392,11774
    struct last_spec491,15264
    namespace __detail504,15547
      __modulo(512,15932
    class day526,16199
      unsigned char _M_d;529,16232
      day(535,16320
      operator++(540,16403
      operator++(547,16492
      operator--(555,16609
      operator--(562,16698
      operator+=(operator+=570,16815
      operator-=(operator-=577,16933
      operator unsigned(operator unsigned584,17055
      ok(588,17141
      operator==(operator==592,17238
      operator<=>(operator<=>596,17385
      operator+(600,17522
      operator+(604,17659
      operator-(608,17773
      operator-(612,17889
    class month633,18495
      unsigned char _M_m;636,18530
      month(642,18620
      operator++(647,18707
      operator++(654,18810
      operator--(662,18929
      operator--(669,19032
      operator+=(operator+=677,19151
      operator-=(operator-=684,19273
      operator unsigned(operator unsigned691,19397
      ok(695,19483
      operator==(operator==699,19580
      operator<=>(operator<=>703,19731
      operator+(707,19874
      operator+(714,20101
      operator-(718,20222
      operator-(722,20344
    class year768,21833
      short _M_y;771,21867
      year(777,21948
      min(782,22054
      max(786,22135
      operator++(790,22209
      operator++(797,22299
      operator--(805,22417
      operator--(812,22507
      operator+=(operator+=820,22625
      operator-=(operator-=827,22745
      operator+(834,22864
      operator-(838,22943
      is_leap(842,23028
      operator int(operator int870,24155
      ok(874,24236
      operator==(operator==878,24350
      operator<=>(operator<=>882,24489
      operator+(886,24619
      operator+(890,24773
      operator-(894,24890
      operator-(898,25009
    class weekday931,26144
      unsigned char _M_wd;934,26181
      _S_from_days(937,26240
      weekday(947,26447
      weekday(952,26562
      weekday(957,26698
      operator++(962,26832
      operator++(969,26935
      operator--(977,27056
      operator--(984,27159
      operator+=(operator+=992,27280
      operator-=(operator-=999,27402
      c_encoding(1006,27524
      iso_encoding(1010,27608
      ok(1014,27709
      operator==(operator==1024,27951
      operator+(1028,28090
      operator+(1035,28306
      operator-(1039,28428
      operator-(1043,28548
    class weekday_indexed1060,29051
      chrono::weekday _M_wd;1063,29096
      unsigned char _M_index;1064,29125
      weekday_indexed(1070,29220
      weekday(1075,29380
      index(1079,29461
      ok(1083,29540
      operator==(operator==1087,29658
    class weekday_last1112,30522
      chrono::weekday _M_wd;1115,30564
      weekday_last(1119,30631
      weekday(1124,30751
      ok(1128,30828
      operator==(operator==1132,30912
    class month_day1151,31512
      chrono::month _M_m;1154,31551
      chrono::day _M_d;1155,31577
      month_day(1161,31660
      month(1166,31805
      day(1170,31886
      ok(1174,31958
      operator==(operator==1182,32146
      operator/(1190,32444
      operator/(1194,32582
      operator/(1198,32728
      operator/(1202,32874
      operator/(1206,33012
    class month_day_last1218,33349
      chrono::month _M_m;1221,33393
      month_day_last(1225,33457
      month(1230,33572
      ok(1234,33646
      operator==(operator==1238,33729
      operator/(1246,34026
      operator/(1250,34165
      operator/(1254,34303
      operator/(1258,34433
    class month_weekday1270,34753
      chrono::month _M_m;1273,34796
      chrono::weekday_indexed _M_wdi;1274,34822
      month_weekday(1278,34889
      month(1284,35062
      weekday_indexed(1288,35155
      ok(1292,35241
      operator==(operator==1296,35339
      operator/(1303,35560
      operator/(1308,35720
      operator/(1312,35885
      operator/(1317,36044
    class month_weekday_last1329,36393
      chrono::month _M_m;1332,36441
      chrono::weekday_last _M_wdl;1333,36467
      month_weekday_last(1337,36531
      month(1343,36703
      weekday_last(1347,36793
      ok(1351,36876
      operator==(operator==1355,36974
      operator/(1363,37207
      operator/(1368,37369
      operator/(1372,37536
      operator/(1377,37697
    namespace __detail1389,38082
    class year_month1406,38880
      chrono::year _M_y;1409,38920
      chrono::month _M_m;1410,38945
      year_month(1416,39031
      year(1421,39177
      month(1425,39259
	operator+=(operator+=1430,39412
	operator-=(operator-=1438,39602
      operator+=(operator+=1445,39720
      operator-=(operator-=1452,39849
      ok(1459,39971
      operator==(operator==1463,40067
	operator+(1472,40444
	operator+(1485,40873
	operator-(1490,41069
      operator-(1494,41190
      operator+(1502,41445
      operator+(1506,41602
      operator-(1510,41735
      operator/(1514,41869
      operator/(1518,42009
    class year_month_day1530,42356
      chrono::year _M_y;1533,42400
      chrono::month _M_m;1534,42425
      chrono::day _M_d;1535,42451
      year_month_day(1545,42679
      : _M_y{__y}, _M_m{_M_m1547,42791
      year_month_day(1554,42941
      year_month_day(1559,43091
	operator+=(operator+=1565,43318
	operator-=(operator-=1573,43510
      operator+=(operator+=1580,43630
      operator-=(operator-=1587,43760
      year(1594,43887
      month(1598,43969
      day(1602,44050
      operator sys_days(operator sys_days1606,44117
      operator local_days(operator local_days1610,44234
      operator==(operator==1616,44414
	operator+(1629,44850
	operator+(1634,45095
      operator+(1638,45229
      operator+(1642,45411
	operator-(1647,45626
      operator-(1651,45761
      operator/(1655,45905
      operator/(1659,46068
      operator/(1663,46217
      operator/(1667,46379
      operator/(1671,46518
      operator/(1675,46659
    class year_month_day_last1748,49364
      chrono::year _M_y;1751,49413
      chrono::month_day_last _M_mdl;1752,49438
      year_month_day_last(1756,49504
	operator+=(operator+=1763,49759
	operator-=(operator-=1771,49956
      operator+=(operator+=1778,50081
      operator-=(operator-=1785,50217
      year(1792,50345
      month(1796,50427
      month_day_last(1800,50529
      day(1805,50695
      operator sys_days(operator sys_days1828,51513
      operator local_days(operator local_days1832,51633
      ok(1836,51763
      operator==(operator==1840,51861
	operator+(1854,52318
	operator+(1860,52573
	operator-(1866,52795
      operator+(1871,52946
      operator+(1876,53137
      operator-(1881,53294
      operator/(1886,53452
      operator/(1890,53626
      operator/(1895,53790
      operator/(1899,53949
      operator/(1904,54112
    class year_month_weekday1924,54682
      chrono::year _M_y;1927,54730
      chrono::month _M_m;1928,54755
      chrono::weekday_indexed _M_wdi;1929,54781
      _S_from_sys_days(1932,54862
      year_month_weekday(1944,55156
      : _M_y{__y}, _M_m{_M_m1946,55283
      year_month_weekday(1950,55354
      year_month_weekday(1955,55497
	operator+=(operator+=1961,55736
	operator-=(operator-=1969,55932
      operator+=(operator+=1976,56056
      operator-=(operator-=1983,56190
      year(1990,56317
      month(1994,56399
      weekday(1998,56484
      index(2002,56576
      weekday_indexed(2006,56679
      operator sys_days(operator sys_days2010,56760
      operator local_days(operator local_days2018,56985
      ok(2022,57115
      operator==(operator==2036,57522
	operator+(2046,57864
	operator+(2054,58143
      operator+(2058,58287
      operator+(2062,58491
	operator-(2067,58716
      operator-(2071,58861
      operator/(2075,59015
      operator/(2080,59200
      operator/(2084,59385
      operator/(2088,59534
      operator/(2092,59685
    class year_month_weekday_last2098,59831
      chrono::year _M_y;2101,59884
      chrono::month _M_m;2102,59909
      chrono::weekday_last _M_wdl;2103,59935
      year_month_weekday_last(2107,59999
      : _M_y{__y}, _M_m{_M_m2109,60133
	operator+=(operator+=2114,60301
	operator-=(operator-=2122,60502
      operator+=(operator+=2129,60631
      operator-=(operator-=2136,60771
      year(2143,60899
      month(2147,60981
      weekday(2151,61066
      weekday_last(2155,61170
      operator sys_days(operator sys_days2159,61248
      operator local_days(operator local_days2167,61471
      ok(2171,61601
      operator==(operator==2175,61712
	operator+(2185,62063
	operator+(2194,62357
      operator+(2199,62517
      operator+(2204,62734
	operator-(2210,62973
      operator-(2215,63134
      operator/(2220,63302
      operator/(2225,63489
      operator/(2230,63694
      operator/(2234,63863
      operator/(2239,64036
    namespace __detail2246,64209
      __pow10(2249,64264
      class hh_mm_ss2269,64756
	_S_fractional_width(2275,64874
	hh_mm_ss(2297,65365
	_S_abs(2311,65898
		     ratio<ratio2325,66238
	hh_mm_ss(2330,66357
	is_negative(2335,66454
	hours(2344,66600
	minutes(2348,66670
	seconds(2352,66742
	subseconds(2356,66808
	operator precision(operator precision2360,66901
	to_duration(2364,66987
	  struct __subseconds2382,67507
	    typename _Dur::rep _M_r{_M_r2384,67535
	    operator _Dur(operator _Dur2387,67592
	    operator duration<_Rep, operator duration<_Rep,2397,67875
	template<typename _Rep,2407,68176
	    && ratio_less_v<ratio_less_v2409,68266
	    operator duration<_Rep, operator duration<_Rep,2417,68499
	template<typename _Rep,2421,68608
	    && ratio_less_v<ratio_less_v2423,68698
	    operator duration<_Rep, operator duration<_Rep,2431,68942
	chrono::hours		    _M_h{_M_h2435,69051
	__byte_duration<ratio<60>>  _M_m{_M_m2436,69079
	__byte_duration<ratio<1>>   _M_s{_M_s2437,69116
	bool			    _M_is_neg{_M_is_neg2438,69153
	__subseconds<precision>	    _M_ss{_M_ss2439,69178
    namespace __detail2445,69317
	struct __utc_leap_second2449,69448
	  __utc_leap_second(2452,69489
	  sys_days _M_date;2458,69637
	  hh_mm_ss<hh_mm_ss2459,69658
	  hh_mm_ss<common_type_t<_Duration, days>> _M_time;2459,69658
    struct sys_info2508,70497
      sys_seconds begin;2510,70523
      sys_seconds end;2511,70548
      seconds offset;2512,70571
      minutes save;2513,70593
      string abbrev;2514,70613
    struct local_info2517,70642
      int result;2523,70803
      sys_info first;2524,70821
      sys_info second;2525,70843
    class nonexistent_local_time 2528,70874
	nonexistent_local_time(2532,70983
	_S_make_what_str(2540,71247
    class ambiguous_local_time 2555,71770
	ambiguous_local_time(2559,71877
	_S_make_what_str(2567,72135
    enum class choose 2594,72896
    enum class choose { earliest,2594,72896
    enum class choose { earliest, latest 2594,72896
    class time_zone2596,72941
      string_view name(2605,73112
	get_info(2609,73218
	get_info(2614,73374
	sys_time<sys_time2618,73522
	to_sys(2619,73567
	sys_time<sys_time2631,73869
	to_sys(2632,73914
	local_time<local_time2649,74481
	to_local(2650,74528
      operator==(operator==2657,74743
      operator<=>(operator<=>2661,74902
      string _M_name;2675,75309
      unique_ptr<_Impl> _M_impl;2676,75331
    class tzdb_list2696,76027
      class const_iterator2711,76537
	pointer operator->(2727,77078
	shared_ptr<_Node> _M_node;2738,77370
      const_iterator end(2768,78586
      const_iterator cbegin(2769,78643
      const_iterator cend(2770,78708
    class time_zone_link2784,79088
      string_view name(2790,79243
      string_view target(2791,79303
      operator==(operator==2794,79386
      operator<=>(operator<=>2798,79539
      explicit time_zone_link(2805,79757
      string _M_name;2807,79803
      string _M_target;2808,79825
    class leap_second2811,79857
      date(2819,80055
      value(2828,80238
      operator<=>(operator<=>2841,80681
	operator==(operator==2846,80873
	operator<(2852,81059
	operator<(2858,81242
	operator>(2864,81425
	operator>(2870,81608
	operator<=(operator<=2876,81791
	operator<=(operator<=2882,81979
	operator>=(operator>=2888,82167
	operator>=(operator>=2894,82355
	operator<=>(operator<=>2900,82569
      explicit leap_second(2905,82699
      seconds _M_s;2915,82953
    template<class _Tp> struct zoned_traits 2918,83031
      struct zoned_traits<zoned_traits2921,83096
	default_zone(2924,83173
	locate_zone(2928,83260
    struct tzdb2932,83349
      string version;2934,83371
      _GLIBCXX_STD_C::vector<time_zone> zones;2935,83393
      _GLIBCXX_STD_C::vector<time_zone_link> links;2936,83440
      _GLIBCXX_STD_C::vector<leap_second> leap_seconds;2937,83492
	operator=(operator=3077,87803
	operator=(operator=3084,87901
	operator sys_time<duration>(operator sys_time<duration>3091,88020
	explicit operator local_time<duration>(operator local_time<duration>3094,88091
    operator==(operator==3167,90337
namespace __detail3177,90668
    __get_leap_second_info(3180,90717
      get_leap_second_info(3279,93547
      utc_clock::from_sys(from_sys3288,93869
  inline namespace literals3301,94266
  inline namespace chrono_literals3303,94298
    operator""operator"3312,94557
    operator""operator"3318,94769

/usr/include/c++/13/cinttypes,202
#define _GLIBCXX_CINTTYPES 30,1171
#  define _UNDEF__STDC_FORMAT_MACROS43,1409
#  define __STDC_FORMAT_MACROS44,1446
#  undef __STDC_FORMAT_MACROS48,1543
#  undef _UNDEF__STDC_FORMAT_MACROS49,1573

/usr/include/c++/13/ciso646,33
#define _GLIBCXX_CISO64633,1376

/usr/include/c++/13/climits,116
#define _GLIBCXX_CLIMITS 45,1670
#define LLONG_MIN 48,1716
#define LLONG_MAX 52,1785
#define ULLONG_MAX 56,1848

/usr/include/c++/13/clocale,85
#define _GLIBCXX_CLOCALE 45,1662
#undef setlocale48,1766
#undef localeconv49,1783

/usr/include/c++/13/cmath,6059
#define _GLIBCXX_INCLUDE_NEXT_C_HEADERS46,1691
#undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS48,1754
#define _GLIBCXX_CMATH 52,1843
#undef div55,1943
#undef acos56,1954
#undef asin57,1966
#undef atan58,1978
#undef atan259,1990
#undef ceil60,2003
#undef cos61,2015
#undef cosh62,2026
#undef exp63,2038
#undef fabs64,2049
#undef floor65,2061
#undef fmod66,2074
#undef frexp67,2086
#undef ldexp68,2099
#undef log69,2112
#undef log1070,2123
#undef modf71,2136
#undef pow72,2148
#undef sin73,2159
#undef sinh74,2170
#undef sqrt75,2182
#undef tan76,2194
#undef tanh77,2205
namespace std _GLIBCXX_VISIBILITY(81,2233
      typedef typename __gnu_cxx::__promote_2<__gnu_cxx::__promote_21054,26064
      typedef typename __gnu_cxx::__promote_2<__gnu_cxx::__promote_21063,26345
      typedef typename __gnu_cxx::__promote_2<__gnu_cxx::__promote_21072,26624
#undef fpclassify1080,26867
#undef isfinite1081,26885
#undef isinf1082,26901
#undef isnan1083,26914
#undef isnormal1084,26927
#undef signbit1085,26943
#undef isgreater1086,26958
#undef isgreaterequal1087,26975
#undef isless1088,26997
#undef islessequal1089,27011
#undef islessgreater1090,27030
#undef isunordered1091,27051
      typedef typename __gnu_cxx::__promote_2<__gnu_cxx::__promote_21262,31481
      typedef typename __gnu_cxx::__promote_2<__gnu_cxx::__promote_21288,32274
      typedef typename __gnu_cxx::__promote_2<__gnu_cxx::__promote_21314,33016
      typedef typename __gnu_cxx::__promote_2<__gnu_cxx::__promote_21340,33785
      typedef typename __gnu_cxx::__promote_2<__gnu_cxx::__promote_21366,34573
      typedef typename __gnu_cxx::__promote_2<__gnu_cxx::__promote_21392,35349
      typedef typename __gnu_cxx::__promote<__gnu_cxx::__promote1404,35654
      typedef typename __gnu_cxx::__promote<__gnu_cxx::__promote1414,35983
      typedef typename __gnu_cxx::__promote<__gnu_cxx::__promote1423,36246
      typedef typename __gnu_cxx::__promote<__gnu_cxx::__promote1432,36506
      typedef typename __gnu_cxx::__promote<__gnu_cxx::__promote1441,36769
      typedef typename __gnu_cxx::__promote<__gnu_cxx::__promote1450,37034
      typedef typename __gnu_cxx::__promote<__gnu_cxx::__promote1459,37311
      typedef typename __gnu_cxx::__promote<__gnu_cxx::__promote1468,37610
      typedef typename __gnu_cxx::__promote<__gnu_cxx::__promote1477,37906
      typedef typename __gnu_cxx::__promote<__gnu_cxx::__promote1486,38199
      typedef typename __gnu_cxx::__promote<__gnu_cxx::__promote1495,38499
      typedef typename __gnu_cxx::__promote<__gnu_cxx::__promote1504,38799
#undef acosh1772,45393
#undef acoshf1773,45406
#undef acoshl1774,45420
#undef asinh1775,45434
#undef asinhf1776,45447
#undef asinhl1777,45461
#undef atanh1778,45475
#undef atanhf1779,45488
#undef atanhl1780,45502
#undef cbrt1781,45516
#undef cbrtf1782,45528
#undef cbrtl1783,45541
#undef copysign1784,45554
#undef copysignf1785,45570
#undef copysignl1786,45587
#undef erf1787,45604
#undef erff1788,45615
#undef erfl1789,45627
#undef erfc1790,45639
#undef erfcf1791,45651
#undef erfcl1792,45664
#undef exp21793,45677
#undef exp2f1794,45689
#undef exp2l1795,45702
#undef expm11796,45715
#undef expm1f1797,45728
#undef expm1l1798,45742
#undef fdim1799,45756
#undef fdimf1800,45768
#undef fdiml1801,45781
#undef fma1802,45794
#undef fmaf1803,45805
#undef fmal1804,45817
#undef fmax1805,45829
#undef fmaxf1806,45841
#undef fmaxl1807,45854
#undef fmin1808,45867
#undef fminf1809,45879
#undef fminl1810,45892
#undef hypot1811,45905
#undef hypotf1812,45918
#undef hypotl1813,45932
#undef ilogb1814,45946
#undef ilogbf1815,45959
#undef ilogbl1816,45973
#undef lgamma1817,45987
#undef lgammaf1818,46001
#undef lgammal1819,46016
#undef llrint1821,46070
#undef llrintf1822,46084
#undef llrintl1823,46099
#undef llround1824,46114
#undef llroundf1825,46129
#undef llroundl1826,46145
#undef log1p1828,46168
#undef log1pf1829,46181
#undef log1pl1830,46195
#undef log21831,46209
#undef log2f1832,46221
#undef log2l1833,46234
#undef logb1834,46247
#undef logbf1835,46259
#undef logbl1836,46272
#undef lrint1837,46285
#undef lrintf1838,46298
#undef lrintl1839,46312
#undef lround1840,46326
#undef lroundf1841,46340
#undef lroundl1842,46355
#undef nan1843,46370
#undef nanf1844,46381
#undef nanl1845,46393
#undef nearbyint1846,46405
#undef nearbyintf1847,46422
#undef nearbyintl1848,46440
#undef nextafter1849,46458
#undef nextafterf1850,46475
#undef nextafterl1851,46493
#undef nexttoward1852,46511
#undef nexttowardf1853,46529
#undef nexttowardl1854,46548
#undef remainder1855,46567
#undef remainderf1856,46584
#undef remainderl1857,46602
#undef remquo1858,46620
#undef remquof1859,46634
#undef remquol1860,46649
#undef rint1861,46664
#undef rintf1862,46676
#undef rintl1863,46689
#undef round1864,46702
#undef roundf1865,46715
#undef roundl1866,46729
#undef scalbln1867,46743
#undef scalblnf1868,46758
#undef scalblnl1869,46774
#undef scalbn1870,46790
#undef scalbnf1871,46804
#undef scalbnl1872,46819
#undef tgamma1873,46834
#undef tgammaf1874,46848
#undef tgammal1875,46863
#undef trunc1876,46878
#undef truncf1877,46891
#undef truncl1878,46905
      typedef typename __gnu_cxx::__promote_2<__gnu_cxx::__promote_23473,86687
      typedef typename __gnu_cxx::__promote_2<__gnu_cxx::__promote_23481,86951
      typedef typename __gnu_cxx::__promote_2<__gnu_cxx::__promote_23489,87211
      typedef typename __gnu_cxx::__promote_2<__gnu_cxx::__promote_23497,87471
      typedef typename __gnu_cxx::__promote_2<__gnu_cxx::__promote_23505,87732
      typedef typename __gnu_cxx::__promote_2<__gnu_cxx::__promote_23513,87998
      typedef typename __gnu_cxx::__promote_2<__gnu_cxx::__promote_23521,88268
      typedef typename __gnu_cxx::__promote_2<__gnu_cxx::__promote_23529,88545
      typedef typename __gnu_cxx::__promote_3<__gnu_cxx::__promote_33537,88842
#define __cpp_lib_hypot 3548,89122
# define __cpp_lib_interpolate 3621,91415

/usr/include/c++/13/codecvt,289
#define _GLIBCXX_CODECVT 32,1222
namespace std _GLIBCXX_VISIBILITY(43,1403
  enum codecvt_mode47,1482
    consume_header 49,1506
    generate_header 50,1530
    little_endian 51,1555
#define _GLIBCXX_CODECVT_SPECIALIZATION2(87,2420
#define _GLIBCXX_CODECVT_SPECIALIZATION(140,3973

/usr/include/c++/13/compare,7541
#define _COMPARE31,1149
# define __cpp_lib_three_way_comparison 40,1311
namespace std _GLIBCXX_VISIBILITY(43,1367
    enum class _Ord 51,1519
    enum class _Ord : type { equivalent 51,1519
    enum class _Ord : type { equivalent = 0, less 51,1519
    enum class _Ord : type { equivalent = 0, less = -1, greater 51,1519
    enum class _Ncmp 53,1591
    enum class _Ncmp : type { _Unordered 53,1591
    struct __unspec55,1640
      consteval __unspec(57,1666
  class partial_ordering61,1727
    __cmp_cat::type _M_value;64,1815
    partial_ordering(67,1869
    partial_ordering(72,1989
    static const partial_ordering less;81,2184
    static const partial_ordering equivalent;82,2224
    static const partial_ordering greater;83,2270
    static const partial_ordering unordered;84,2313
    operator==(operator==89,2422
    operator< 98,2684
    operator> 103,2831
    operator<=(operator<=108,2977
    operator>=(operator>=113,3123
    operator< 118,3301
    operator> 123,3447
    operator<=(operator<=128,3594
    operator>=(operator>=133,3772
    operator<=>(operator<=>138,3930
    operator<=>(operator<=>143,4075
  class weak_ordering165,4676
    __cmp_cat::type _M_value;167,4702
    weak_ordering(170,4756
    static const weak_ordering less;177,4911
    static const weak_ordering equivalent;178,4948
    static const weak_ordering greater;179,4991
    constexpr operator partial_ordering(operator partial_ordering182,5050
    operator==(operator==188,5231
    operator< 197,5484
    operator> 202,5626
    operator<=(operator<=207,5768
    operator>=(operator>=212,5911
    operator< 217,6054
    operator> 222,6196
    operator<=(operator<=227,6338
    operator>=(operator>=232,6481
    operator<=>(operator<=>237,6633
    operator<=>(operator<=>242,6772
  class strong_ordering256,7194
    __cmp_cat::type _M_value;258,7222
    strong_ordering(261,7276
    static const strong_ordering less;267,7402
    static const strong_ordering equal;268,7441
    static const strong_ordering equivalent;269,7481
    static const strong_ordering greater;270,7526
    constexpr operator partial_ordering(operator partial_ordering273,7587
    constexpr operator weak_ordering(operator weak_ordering277,7723
    operator==(operator==283,7898
    operator< 292,8157
    operator> 297,8301
    operator<=(operator<=302,8445
    operator>=(operator>=307,8590
    operator< 312,8735
    operator> 317,8879
    operator<=(operator<=322,9023
    operator>=(operator>=327,9168
    operator<=>(operator<=>332,9324
    operator<=>(operator<=>337,9467
  namespace __detail386,10636
      constexpr auto __common_cmp_cat(398,11014
    struct common_comparison_category420,11803
    struct common_comparison_category<common_comparison_category428,12010
    struct common_comparison_category<common_comparison_category432,12095
    struct common_comparison_category<common_comparison_category436,12205
    struct common_comparison_category<common_comparison_category440,12309
    struct common_comparison_category<common_comparison_category444,12417
  namespace __detail452,12647
    template<typename _Tp,454,12672
  namespace __detail488,13982
    template<typename _Tp,490,14007
    template<typename _Tp,499,14445
      struct __cmp3way_res_impl500,14486
    template<typename _Tp,503,14530
  namespace __detail522,15178
    template<typename _Tp,528,15405
	  && convertible_to<convertible_to532,15577
	  && convertible_to<convertible_to533,15625
	  && ! requires(534,15673
	  && ! requires(536,15782
  struct compare_three_way544,16074
    template<typename _Tp,546,16105
      requires three_way_comparable_with<three_way_comparable_with547,16146
      operator() operator()549,16218
  namespace __cmp_cust569,16871
      __fp_weak_ordering(573,16961
    template<typename _Tp,613,18199
    template<typename _Tp,620,18403
    template<typename _Tp,627,18597
    template<typename _Ord,634,18799
    template<typename _Ord, typename _Tp,634,18799
    template<typename _Tp,640,19007
	  || __cmp3way<__cmp3way644,19153
    template<typename _Tp,646,19198
    class _Strong_order649,19311
      template<typename _Tp,651,19341
	_S_noexcept(653,19407
      enum class _Fp_fmt669,19929
	_Binary16,671,19962
	_Binary16, _Binary32,671,19962
	_Binary16, _Binary32, _Binary64,671,19962
	_Binary16, _Binary32, _Binary64, _Binary128,671,19962
	_X86_80bit,672,20016
	_M68k_80bit,673,20063
	_Dbldbl,674,20111
	_Bfloat16,675,20150
	_S_fp_fmt(693,20916
	struct _Int744,22500
	  uint64_t _M_lo;747,22562
	  _Tp _M_hi;748,22581
	  _Tp _M_hi;750,22601
	  uint64_t _M_lo;751,22615
	  _Int(755,22664
	  _Int(759,22764
	  operator<<(766,22977
	  operator^=(operator^=774,23179
	  operator<=>(operator<=>782,23334
	_S_compl(793,23599
	_S_compl(806,24053
	_S_fp_bits(819,24436
	_S_fp_cmp(862,25691
    public:public949,28559
	requires __strongly_ordered<__strongly_ordered951,28628
	operator() operator()953,28694
    template<typename _Tp,967,29177
	  || __cmp3way<__cmp3way971,29319
	  || __strongly_ordered<__strongly_ordered972,29360
    class _Weak_order974,29397
      template<typename _Tp,976,29425
	_S_noexcept(978,29491
    public:public995,30048
	requires __weakly_ordered<__weakly_ordered997,30117
	operator() operator()999,30179
    template<typename _Tp,1016,30816
	|| __cmp3way<__cmp3way1019,30918
	|| __weakly_ordered<__weakly_ordered1020,30960
    class _Partial_order1022,30993
      template<typename _Tp,1024,31024
	_S_noexcept(1026,31090
    public:public1040,31550
	requires __partially_ordered<__partially_ordered1042,31619
	operator() operator()1044,31687
    template<typename _Tp,1059,32223
    class _Strong_fallback1068,32505
      template<typename _Tp,1070,32538
	_S_noexcept(1072,32604
    public:public1081,32873
	requires __strongly_ordered<__strongly_ordered1083,32942
	requires __strongly_ordered<_Tp, _Up> || __op_eq_lt<__op_eq_lt1083,32942
	operator() operator()1085,33032
    class _Weak_fallback1100,33521
      template<typename _Tp,1102,33552
	_S_noexcept(1104,33618
    public:public1113,33883
	requires __weakly_ordered<__weakly_ordered1115,33952
	requires __weakly_ordered<_Tp, _Up> || __op_eq_lt<__op_eq_lt1115,33952
	operator() operator()1117,34038
    template<typename _Tp,1134,34615
	&& requires(1136,34707
    class _Partial_fallback1142,34837
      template<typename _Tp,1144,34871
	_S_noexcept(1146,34937
    public:public1155,35208
	requires __partially_ordered<__partially_ordered1157,35277
	requires __partially_ordered<_Tp, _Up> || __op_eq_lt_lt<__op_eq_lt_lt1157,35277
	operator() operator()1159,35372
  inline namespace __cmp_alg1178,36037
    inline constexpr __cmp_cust::_Strong_order strong_order{strong_order1180,36070
    inline constexpr __cmp_cust::_Weak_order weak_order{weak_order1182,36134
    inline constexpr __cmp_cust::_Partial_order partial_order{partial_order1184,36194
    compare_strong_order_fallback{compare_strong_order_fallback1187,36310
    compare_weak_order_fallback{compare_weak_order_fallback1190,36396
    compare_partial_order_fallback{compare_partial_order_fallback1193,36483
  namespace __detail1196,36526
    inline constexpr struct _Synth3way1199,36592
      template<typename _Tp,1201,36637
	_S_noexcept(1203,36703
      template<typename _Tp,1211,36934
	operator()(operator()1214,37008
    template<typename _Tp,1237,37538

/usr/include/c++/13/complex,6687
#define _GLIBCXX_COMPLEX 37,1434
#undef complex48,1671
# define __cpp_lib_constexpr_complex 51,1713
namespace std _GLIBCXX_VISIBILITY(54,1766
    class complex127,4675
      typedef _Tp value_type;131,4736
      _GLIBCXX_CONSTEXPR complex(135,4893
	_GLIBCXX_CONSTEXPR complex(148,5299
      real(156,5574
      imag(160,5663
      real(164,5766
      real(168,5864
      imag(172,5967
      imag(176,6070
      real(182,6236
      imag(185,6312
      _GLIBCXX_CONSTEXPR complex __rep(234,8046
      _Tp _M_real;238,8131
      _Tp _M_imag;239,8150
    operator+(335,10474
    operator+(344,10687
    operator+(353,10891
    operator-(365,11160
    operator-(374,11373
    operator-(383,11577
    operator*(395,11847
    operator*(404,12060
    operator*(413,12264
    operator/(425,12538
    operator/(434,12751
    operator/(443,12955
    operator+(454,13187
    operator-(460,13357
    operator==(operator==467,13565
    operator==(operator==472,13760
    operator==(operator==478,13984
    operator!=(operator!=486,14220
    operator!=(operator!=491,14415
    operator!=(operator!=496,14589
    operator>>(504,14858
    operator<<(558,15932
    struct _Norm_helper927,28493
        static inline _GLIBCXX20_CONSTEXPR _Tp _S_do_it(930,28552
    struct _Norm_helper<_Norm_helper939,28790
        static inline _GLIBCXX20_CONSTEXPR _Tp _S_do_it(942,28855
    class complex<complex1344,40915
      typedef float value_type;1347,40958
      typedef __complex__ float _ComplexT;1348,40990
      _GLIBCXX_CONSTEXPR complex(1350,41034
      _GLIBCXX_CONSTEXPR complex(1352,41103
	constexpr complex(1369,41517
      __attribute 1379,41894
      __attribute 1383,42010
      real(1388,42144
      real(1391,42207
      imag(1394,42270
      imag(1397,42333
      real(1403,42509
      imag(1406,42597
      operator=(operator=1409,42689
      operator+=(operator+=1416,42801
      operator-=(operator-=1423,42915
      operator*=(operator*=1430,43029
      operator/=(operator/=1437,43143
        operator=(operator=1451,43511
        operator+=(operator+=1460,43716
        operator-=(operator-=1468,43876
        operator*=(operator*=1476,44036
        operator/=(operator/=1485,44226
      _GLIBCXX_CONSTEXPR _ComplexT __rep(1492,44352
      _ComplexT _M_value;1495,44436
    class complex<complex1501,44558
      typedef double value_type;1504,44602
      typedef __complex__ double _ComplexT;1505,44635
      _GLIBCXX_CONSTEXPR complex(1507,44680
      _GLIBCXX_CONSTEXPR complex(1509,44749
	constexpr complex(1526,45163
      _GLIBCXX_CONSTEXPR complex(1529,45279
      __attribute 1538,45568
      __attribute 1542,45685
      real(1547,45821
      real(1550,45885
      imag(1553,45949
      imag(1556,46013
      real(1562,46189
      imag(1565,46278
      operator=(operator=1568,46371
      operator+=(operator+=1575,46484
      operator-=(operator-=1582,46599
      operator*=(operator*=1589,46714
      operator/=(operator/=1596,46829
        operator=(operator=1609,47140
        operator+=(operator+=1617,47301
        operator-=(operator-=1625,47464
        operator*=(operator*=1633,47627
        operator/=(operator/=1642,47820
      _GLIBCXX_CONSTEXPR _ComplexT __rep(1649,47946
      _ComplexT _M_value;1652,48030
    class complex<complex1658,48157
      typedef long double value_type;1661,48206
      typedef __complex__ long double _ComplexT;1662,48244
      _GLIBCXX_CONSTEXPR complex(1664,48294
      _GLIBCXX_CONSTEXPR complex(1666,48363
	constexpr complex(1684,48794
      _GLIBCXX_CONSTEXPR complex(1687,48910
      _GLIBCXX_CONSTEXPR complex(1690,49005
      __attribute 1697,49222
      __attribute 1701,49344
      real(1706,49490
      real(1709,49559
      imag(1712,49628
      imag(1715,49697
      real(1721,49873
      imag(1724,49967
      operator=(operator=1727,50065
      operator+=(operator+=1734,50183
      operator-=(operator-=1741,50303
      operator*=(operator*=1748,50423
      operator/=(operator/=1755,50543
        operator=(operator=1768,50857
	operator+=(operator+=1776,51018
	operator-=(operator-=1784,51174
	operator*=(operator*=1792,51330
	operator/=(operator/=1801,51516
      _GLIBCXX_CONSTEXPR _ComplexT __rep(1808,51635
      _ComplexT _M_value;1811,51719
    struct __complex_type1816,51804
    struct __complex_type<__complex_type1821,51881
    { typedef __complex__ _Float16 type;1822,51917
    struct __complex_type<__complex_type1827,52010
    { typedef __complex__ _Float32 type;1828,52046
    struct __complex_type<__complex_type1833,52139
    { typedef __complex__ _Float64 type;1834,52175
    struct __complex_type<__complex_type1839,52269
    { typedef __complex__ _Float128 type;1840,52306
    struct __complex_type<__complex_type1845,52401
    { typedef __complex__ decltype(0.0bf16) type;1846,52452
    class complex<complex1851,52600
      typedef _Tp value_type;1854,52641
      typedef typename std::__complex_type<_Tp>::type _ComplexT;1855,52671
      constexpr complex(1857,52737
      constexpr complex(1859,52797
	constexpr complex(1864,52969
      real(1868,53100
      imag(1871,53170
      real(1874,53241
      imag(1877,53316
      operator=(operator=1880,53395
      operator+=(operator+=1887,53494
      operator-=(operator-=1894,53595
      operator*=(operator*=1901,53696
      operator/=(operator/=1908,53797
	operator=(operator=1921,54151
	operator+=(operator+=1930,54331
	operator-=(operator-=1938,54466
	operator*=(operator*=1946,54601
	operator/=(operator/=1955,54766
      constexpr _ComplexT __rep(1962,54885
      _ComplexT _M_value;1965,54960
namespace std _GLIBCXX_VISIBILITY(2013,56711
      typedef typename __gnu_cxx::__promote<__gnu_cxx::__promote2432,69702
      typedef typename __gnu_cxx::__promote<__gnu_cxx::__promote2450,70280
      typedef typename __gnu_cxx::__promote_2<__gnu_cxx::__promote_22463,70703
      typedef typename __gnu_cxx::__promote_2<__gnu_cxx::__promote_22471,71019
      typedef typename __gnu_cxx::__promote_2<__gnu_cxx::__promote_22479,71349
      typedef typename __gnu_cxx::__promote<__gnu_cxx::__promote2589,74813
      typedef typename __gnu_cxx::__promote<__gnu_cxx::__promote2598,75075
inline namespace literals 2604,75225
inline namespace complex_literals 2605,75253
#define __cpp_lib_complex_udls 2608,75367
  operator""ioperator""2611,75439
  operator""ioperator""2615,75573
  operator""operator"2619,75715
  operator""operator"2623,75850
  operator""ioperator""2627,75997
  operator""ioperator""2631,76123

/usr/include/c++/13/complex.h,61
#  undef complex41,1499
#define _GLIBCXX_COMPLEX_H 46,1559

/usr/include/c++/13/concepts,918
#define _GLIBCXX_CONCEPTS 31,1190
namespace std _GLIBCXX_VISIBILITY(46,1435
#define __cpp_lib_concepts 50,1514
  namespace __detail111,3695
      requires requires(123,4020
    template<typename _Tp,132,4384
  namespace ranges179,6025
    namespace __cust_swap181,6048
      template<typename _Tp,185,6142
      struct _Swap193,6429
      private:private195,6456
	  _S_noexcept(198,6534
      public:public207,6819
	  requires __adl_swap<__adl_swap209,6871
	  operator()(operator()214,7088
	template<typename _Tp,227,7478
	template<typename _Tp, typename _Up,227,7478
	  requires requires(228,7529
	  operator()(operator()232,7643
    inline namespace __cust241,7901
      inline constexpr __cust_swap::_Swap swap{swap243,7935
  namespace __detail277,9158
  namespace __detail291,9552
    template<typename _Tp,293,9577
  namespace __detail314,10385
    template<typename _Tp,316,10410

/usr/include/c++/13/condition_variable,1993
#define _GLIBCXX_CONDITION_VARIABLE 30,1198
namespace std _GLIBCXX_VISIBILITY(54,1691
  enum class cv_status 67,1938
  enum class cv_status { no_timeout,67,1938
  enum class cv_status { no_timeout, timeout 67,1938
  class condition_variable70,2012
    __condvar _M_cond;80,2266
    typedef __gthread_cond_t* 		native_handle_type;83,2300
      wait(102,2724
      wait_until(111,2921
      wait_until(118,3139
    template<typename _Clock,122,3301
      wait_until(124,3367
    template<typename _Clock,147,4208
    template<typename _Clock, typename _Duration,147,4208
      wait_until(149,4290
    template<typename _Rep,159,4535
      wait_for(161,4597
    template<typename _Rep,170,4861
    template<typename _Rep, typename _Period,170,4861
      wait_for(172,4939
    native_handle(184,5271
      __wait_until_impl(191,5430
      __wait_until_impl(212,6031
  struct __at_thread_exit_elt234,6647
    __at_thread_exit_elt* _M_next;236,6681
  class condition_variable_any244,6880
    condition_variable			_M_cond;251,7059
    shared_ptr<mutex>			_M_mutex;252,7093
      struct _Unlock256,7214
	explicit _Unlock(258,7243
	~_Unlock(262,7397
	_Lock& _M_lock;281,7771
    condition_variable_any(285,7808
    notify_one(292,8078
    notify_all(299,8197
      wait(307,8347
    template<typename _Lock,319,8716
      wait(321,8777
    template<typename _Lock,327,8869
    template<typename _Lock, typename _Clock,327,8869
      wait_until(329,8951
    template<typename _Lock,341,9404
    template<typename _Lock, typename _Clock,341,9404
	     typename _Duration,342,9450
      wait_until(344,9508
    template<typename _Lock,354,9740
    template<typename _Lock, typename _Rep,354,9740
      wait_for(356,9818
    template<typename _Lock,359,9962
    template<typename _Lock, typename _Rep,359,9962
	     typename _Period,360,10006
      wait_for(362,10062
    bool wait(368,10316
    bool wait_until(396,11189
    bool wait_for(431,12270

/usr/include/c++/13/coroutine,2503
#define _GLIBCXX_COROUTINE 30,1171
namespace std _GLIBCXX_VISIBILITY 54,1677
#define __cpp_lib_coroutine 60,1783
    struct coroutine_traits 88,2651
    coroutine_handle<coroutine_handle96,2884
      constexpr coroutine_handle(100,2978
      constexpr coroutine_handle(102,3041
      coroutine_handle& operator=(operator=106,3131
      constexpr void* address(114,3313
      constexpr static coroutine_handle from_address(116,3383
      constexpr explicit operator bool(operator bool125,3601
      bool done(130,3699
      void operator()(operator()133,3827
      void resume(135,3872
      void destroy(137,3937
      void* _M_fr_ptr;140,4019
  operator==(operator==146,4120
  operator<=>(operator<=>153,4308
  operator!=(operator!=160,4531
  operator<(166,4653
  operator>(172,4804
  operator<=(operator<=178,4921
  operator>=(operator>=184,5042
    struct coroutine_handle191,5184
      constexpr coroutine_handle(195,5268
      constexpr coroutine_handle(197,5317
      from_promise(200,5405
      coroutine_handle& operator=(operator=208,5586
      constexpr void* address(216,5752
      constexpr static coroutine_handle from_address(218,5822
      constexpr operator coroutine_handle<>(operator coroutine_handle<>226,6024
      constexpr explicit operator bool(operator bool230,6197
      bool done(235,6295
      void operator()(operator()238,6423
      void resume(240,6468
      void destroy(242,6533
      _Promise& promise(245,6652
  struct noop_coroutine_promise257,6896
    struct coroutine_handle<coroutine_handle264,7027
      constexpr operator coroutine_handle<>(operator coroutine_handle<>269,7237
      constexpr explicit operator bool(operator bool273,7415
      constexpr bool done(275,7489
      void operator()(operator()278,7607
      void resume(280,7650
      void destroy(282,7689
      noop_coroutine_promise& promise(285,7786
      constexpr void* address(289,7920
      struct __frame294,8061
	static void __dummy_resume_destroy(296,8090
	struct noop_coroutine_promise __p;300,8215
      static __frame _S_fr;303,8261
  struct suspend_always322,8706
    constexpr bool await_ready(324,8734
    constexpr void await_suspend(326,8801
    constexpr void await_resume(328,8873
  struct suspend_never331,8931
    constexpr bool await_ready(333,8958
    constexpr void await_suspend(335,9024
    constexpr void await_resume(337,9096
    struct hash<hash345,9249
      operator()(operator()348,9312

/usr/include/c++/13/csetjmp,81
#define _GLIBCXX_CSETJMP 45,1635
#undef longjmp48,1739
#define setjmp(52,1827

/usr/include/c++/13/csignal,55
#define _GLIBCXX_CSIGNAL 45,1635
#undef raise48,1739

/usr/include/c++/13/cstdalign,36
#define _GLIBCXX_CSTDALIGN 32,1198

/usr/include/c++/13/cstdarg,90
#undef __need___va_list41,1569
#define _GLIBCXX_CSTDARG 46,1667
#define va_end(50,1767

/usr/include/c++/13/cstdbool,35
#define _GLIBCXX_CSTDBOOL 32,1195

/usr/include/c++/13/cstddef,305
#define _GLIBCXX_CSTDDEF 40,1553
#undef __need_wchar_t44,1608
#undef __need_ptrdiff_t45,1630
#undef __need_size_t46,1654
#undef __need_NULL47,1675
#undef __need_wint_t48,1694
#define __cpp_lib_byte 66,2004
  enum class byte 69,2052
  template<typename _IntegerType> struct __byte_operand 71,2091

/usr/include/c++/13/cstdint,34
#define _GLIBCXX_CSTDINT 30,1165

/usr/include/c++/13/cstdio,1403
#define _GLIBCXX_CSTDIO 45,1645
extern "C" char* gets 48,1731
#undef clearerr52,1881
#undef fclose53,1897
#undef feof54,1911
#undef ferror55,1923
#undef fflush56,1937
#undef fgetc57,1951
#undef fgetpos58,1964
#undef fgets59,1979
#undef fopen60,1992
#undef fprintf61,2005
#undef fputc62,2020
#undef fputs63,2033
#undef fread64,2046
#undef freopen65,2059
#undef fscanf66,2074
#undef fseek67,2088
#undef fsetpos68,2101
#undef ftell69,2116
#undef fwrite70,2129
#undef getc71,2143
#undef getchar72,2155
# undef gets74,2197
#undef perror76,2217
#undef printf77,2231
#undef putc78,2245
#undef putchar79,2257
#undef puts80,2272
#undef remove81,2284
#undef rename82,2298
#undef rewind83,2312
#undef scanf84,2326
#undef setbuf85,2339
#undef setvbuf86,2353
#undef sprintf87,2368
#undef sscanf88,2383
#undef tmpfile89,2397
#undef tmpnam90,2412
#undef ungetc91,2426
#undef vfprintf92,2440
#undef vprintf93,2456
#undef vsprintf94,2471
#undef snprintf151,3397
#undef vfscanf152,3413
#undef vscanf153,3428
#undef vsnprintf154,3442
#undef vsscanf155,3459
namespace std183,4210
  using ::__gnu_cxx::snprintf;__gnu_cxx::snprintf185,4226
  using ::__gnu_cxx::vfscanf;__gnu_cxx::vfscanf186,4257
  using ::__gnu_cxx::vscanf;__gnu_cxx::vscanf187,4287
  using ::__gnu_cxx::vsnprintf;__gnu_cxx::vsnprintf188,4316
  using ::__gnu_cxx::vsscanf;__gnu_cxx::vsscanf189,4348

/usr/include/c++/13/cstdlib,1176
#define _GLIBCXX_CSTDLIB 44,1623
#define EXIT_SUCCESS 52,1895
#define EXIT_FAILURE 53,1918
#define NULL 54,1941
#define _GLIBCXX_INCLUDE_NEXT_C_HEADERS78,2696
#undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS80,2761
#undef abort84,2903
# undef aligned_alloc86,2983
#undef atexit88,3012
#  undef at_quick_exit91,3089
#undef atof94,3127
#undef atoi95,3139
#undef atol96,3151
#undef bsearch97,3163
#undef calloc98,3178
#undef div99,3192
#undef exit100,3203
#undef free101,3215
#undef getenv102,3227
#undef labs103,3241
#undef ldiv104,3253
#undef malloc105,3265
#undef mblen106,3279
#undef mbstowcs107,3292
#undef mbtowc108,3308
#undef qsort109,3322
#  undef quick_exit112,3395
#undef rand115,3430
#undef realloc116,3442
#undef srand117,3457
#undef strtod118,3470
#undef strtol119,3484
#undef strtoul120,3498
#undef system121,3513
#undef wcstombs122,3527
#undef wctomb123,3543
namespace std _GLIBCXX_VISIBILITY(127,3573
#undef _Exit190,4794
#undef llabs191,4807
#undef lldiv192,4820
#undef atoll193,4833
#undef strtoll194,4846
#undef strtoull195,4861
#undef strtof196,4877
#undef strtold197,4891
namespace __gnu_cxx _GLIBCXX_VISIBILITY(199,4907

/usr/include/c++/13/cstring,572
#define _GLIBCXX_CSTRING 45,1635
#undef memchr48,1739
#undef memcmp49,1753
#undef memcpy50,1767
#undef memmove51,1781
#undef memset52,1796
#undef strcat53,1810
#undef strchr54,1824
#undef strcmp55,1838
#undef strcoll56,1852
#undef strcpy57,1867
#undef strcspn58,1881
#undef strerror59,1896
#undef strlen60,1912
#undef strncat61,1926
#undef strncmp62,1941
#undef strncpy63,1956
#undef strpbrk64,1971
#undef strrchr65,1986
#undef strspn66,2001
#undef strstr67,2015
#undef strtok68,2029
#undef strxfrm69,2043
namespace std _GLIBCXX_VISIBILITY(73,2074

/usr/include/c++/13/ctgmath,34
#define _GLIBCXX_CTGMATH 32,1192

/usr/include/c++/13/ctime,262
#define _GLIBCXX_CTIME 45,1637
#undef clock48,1737
#undef difftime49,1750
#undef mktime50,1766
#undef time51,1780
#undef asctime52,1792
#undef ctime53,1807
#undef gmtime54,1820
#undef localtime55,1834
#undef strftime56,1851
#undef timespec_get76,2184

/usr/include/c++/13/cuchar,261
#define _GLIBCXX_CUCHAR 40,1555
#undef mbrtoc868,2203
#undef c8rtomb69,2218
namespace std _GLIBCXX_VISIBILITY(71,2234
#undef mbrtoc1687,2545
#undef c16rtomb88,2561
#undef mbrtoc3289,2577
#undef c32rtomb90,2593
namespace std _GLIBCXX_VISIBILITY(92,2610

/usr/include/c++/13/cwchar,1758
#define _GLIBCXX_CWCHAR 48,1660
    int __fill[__fill57,1888
  } mbstate_t;58,1907
#undef btowc68,2064
#undef fgetwc69,2077
#undef fgetws70,2091
#undef fputwc71,2105
#undef fputws72,2119
#undef fwide73,2133
#undef fwprintf74,2146
#undef fwscanf75,2162
#undef getwc76,2177
#undef getwchar77,2190
#undef mbrlen78,2206
#undef mbrtowc79,2220
#undef mbsinit80,2235
#undef mbsrtowcs81,2250
#undef putwc82,2267
#undef putwchar83,2280
#undef swprintf84,2296
#undef swscanf85,2312
#undef ungetwc86,2327
#undef vfwprintf87,2342
# undef vfwscanf89,2386
#undef vswprintf91,2410
# undef vswscanf93,2454
#undef vwprintf95,2478
# undef vwscanf97,2520
#undef wcrtomb99,2543
#undef wcscat100,2558
#undef wcschr101,2572
#undef wcscmp102,2586
#undef wcscoll103,2600
#undef wcscpy104,2615
#undef wcscspn105,2629
#undef wcsftime106,2644
#undef wcslen107,2660
#undef wcsncat108,2674
#undef wcsncmp109,2689
#undef wcsncpy110,2704
#undef wcspbrk111,2719
#undef wcsrchr112,2734
#undef wcsrtombs113,2749
#undef wcsspn114,2766
#undef wcsstr115,2780
#undef wcstod116,2794
# undef wcstof118,2833
#undef wcstok120,2855
#undef wcstol121,2869
#undef wcstoul122,2883
#undef wcsxfrm123,2898
#undef wctob124,2913
#undef wmemchr125,2926
#undef wmemcmp126,2941
#undef wmemcpy127,2956
#undef wmemmove128,2971
#undef wmemset129,2987
#undef wprintf130,3002
#undef wscanf131,3017
namespace std _GLIBCXX_VISIBILITY(137,3073
#undef wcstold240,5206
#undef wcstoll241,5221
#undef wcstoull242,5236
namespace std280,6130
  using std::wcstof;283,6171
  using std::vfwscanf;286,6226
  using std::vswscanf;289,6283
  using std::vwscanf;292,6339
  using std::wcstold;296,6396
  using std::wcstoll;297,6418
  using std::wcstoull;298,6440

/usr/include/c++/13/cwctype,466
#define _GLIBCXX_CWCTYPE 54,1797
#undef iswalnum57,1901
#undef iswalpha58,1917
# undef iswblank60,1960
#undef iswcntrl62,1984
#undef iswctype63,2000
#undef iswdigit64,2016
#undef iswgraph65,2032
#undef iswlower66,2048
#undef iswprint67,2064
#undef iswpunct68,2080
#undef iswspace69,2096
#undef iswupper70,2112
#undef iswxdigit71,2128
#undef towctrans72,2145
#undef towlower73,2162
#undef towupper74,2178
#undef wctrans75,2194
#undef wctype76,2209

/usr/include/c++/13/cxxabi.h,2347
#define _CXXABI_H 42,1639
  typedef __cxa_cdtor_return_type (*__cxa_cdtor_type)__cxa_cdtor_type61,1945
  class __fundamental_type_info 219,7088
    __fundamental_type_info(223,7171
  class __array_type_info 230,7334
    __array_type_info(234,7411
  class __function_type_info 241,7587
    __function_type_info(245,7667
  class __enum_type_info 257,7930
    __enum_type_info(261,8006
  class __pbase_type_info 268,8187
    unsigned int 		__flags;271,8251
    const std::type_info* 	__pointee;272,8318
    __pbase_type_info(275,8400
    enum __masks284,8637
	__const_mask 286,8662
	__volatile_mask 287,8683
	__restrict_mask 288,8707
	__incomplete_mask 289,8731
	__incomplete_class_mask 290,8757
	__transaction_safe_mask 291,8790
	__noexcept_mask 292,8823
  class __pointer_type_info 320,9561
    __pointer_type_info(324,9643
  class __pointer_to_member_type_info 345,10144
    __class_type_info* __context;348,10223
    __pointer_to_member_type_info(351,10297
  class __base_class_type_info372,10945
    const __class_type_info* 	__base_type;375,10990
    long long			__offset_flags;377,11076
    long 			__offset_flags;379,11135
    enum __offset_flags_masks382,11192
	__virtual_mask 384,11230
	__public_mask 385,11253
	__hwm_bit 386,11275
	__offset_shift 387,11291
    __is_virtual_p(392,11412
    __is_public_p(396,11497
    __offset(400,11585
  class __class_type_info 410,11885
    __class_type_info 414,11962
    enum __sub_kind424,12340
	__unknown 427,12389
	__not_contained,431,12501
	__contained_ambig,434,12547
	__contained_virtual_mask 437,12592
	__contained_public_mask 440,12684
	__contained_mask 443,12776
	__contained_private 445,12837
	__contained_public 446,12878
  class __si_class_type_info 503,15323
    const __class_type_info* __base_type;506,15393
    __si_class_type_info(509,15449
  class __vmi_class_type_info 539,16428
    unsigned int 		__flags;542,16499
    unsigned int 		__base_count;543,16566
    __base_class_type_info 	__base_info[__base_info548,16810
    __vmi_class_type_info(551,16888
    enum __flags_masks558,17095
	__non_diamond_repeat_mask 560,17126
	__diamond_shaped_mask 561,17199
	__flags_unknown_mask 562,17269
  class __foreign_exception659,20354
namespace __gnu_cxx689,21496
  class recursive_init_error:recursive_init_error704,22036

/usr/include/c++/13/deque,154
#define _GLIBCXX_DEQUE 56,2259
namespace std _GLIBCXX_VISIBILITY(77,2731
namespace std _GLIBCXX_VISIBILITY(90,3035
#define __cpp_lib_erase_if 94,3114

/usr/include/c++/13/exception,397
#define __EXCEPTION__31,1152
namespace std _GLIBCXX_VISIBILITY(40,1275
  class bad_exception 51,1531
    bad_exception(54,1586
    virtual ~bad_exception(58,1738
  typedef void (*terminate_handler)terminate_handler66,2022
  typedef void (*_GLIBCXX11_DEPRECATED _GLIBCXX11_DEPRECATED82,2721
#define __cpp_lib_uncaught_exceptions 125,4312
namespace __gnu_cxx _GLIBCXX_VISIBILITY(136,4633

/usr/include/c++/13/execution,172
#define _GLIBCXX_EXECUTION 26,1095
# define _PSTL_EXECUTION_POLICIES_DEFINED 36,1321
# define __cpp_lib_parallel_algorithm 54,1743
# define __cpp_lib_execution 55,1789

/usr/include/c++/13/expected,8530
#define _GLIBCXX_EXPECTED30,1150
namespace std _GLIBCXX_VISIBILITY(42,1455
#define __cpp_lib_expected 53,1647
    class bad_expected_access 96,2789
      bad_expected_access(99,2883
      _Er _M_unex;124,3402
  struct unexpect_t131,3528
namespace __expected143,3755
  template<typename _Tp,147,3845
    constexpr bool __is_expected<__is_expected148,3884
  template<typename _Fn,155,4101
  template<typename _Fn,157,4208
  struct __in_place_inv 171,4762
  struct __unexpect_inv 172,4791
    class unexpected177,4861
      template<typename _Err 185,5072
	unexpected(190,5274
	requires is_constructible_v<is_constructible_v196,5423
	unexpected(198,5487
      template<typename _Up,203,5632
	requires is_constructible_v<is_constructible_v204,5680
	unexpected(206,5768
	operator==(operator==243,6773
      _Er _M_unex;252,7059
  template<typename _Er> unexpected(_Er) -> unexpected<unexpected255,7086
namespace __expected258,7171
    struct _Guard261,7219
      _Guard(266,7330
      ~_Guard(271,7489
      release(281,7715
      _Tp* _M_guarded;288,7820
      _Tp _M_tmp;289,7843
  template<typename _Tp,293,7927
  template<typename _Tp, typename _Up,293,7927
    __reinit(295,7999
  template<typename _Tp,319,8637
    class expected320,8676
      static_assert( ! is_reference_v<is_reference_v322,8701
      static_assert( ! is_function_v<is_function_v323,8747
      static_assert( ! is_same_v<is_same_v324,8792
      static_assert( ! is_same_v<is_same_v325,8858
      static_assert( ! __expected::__is_unexpected<__expected::__is_unexpected326,8924
      template<typename _Up,329,9058
      template<typename _Up, typename _Err,329,9058
      template<typename _Up, typename _Err, typename _Unex 329,9058
	  = __or_v<is_constructible<_Tp, expected<expected331,9180
		   is_constructible<is_constructible332,9237
		   is_constructible<is_constructible333,9286
		   is_constructible<is_constructible334,9342
		   is_convertible<is_convertible335,9397
		   is_convertible<is_convertible336,9445
		   is_convertible<is_convertible337,9492
		   is_convertible<is_convertible338,9546
		   is_constructible<is_constructible339,9599
		   is_constructible<is_constructible340,9651
		   is_constructible<is_constructible341,9702
		   is_constructible<is_constructible342,9760
      template<typename _Up,345,9824
	constexpr static bool __explicit_conv346,9868
		   __not_<__not_348,9953
	static constexpr bool __same_val352,10029
	static constexpr bool __same_err356,10140
      using value_type 360,10234
      using error_type 361,10264
      using unexpected_type 362,10294
	using rebind 365,10371
      : _M_val(371,10551
      : _M_val(), _M_has_value(371,10551
      : _M_has_value(383,10973
      : _M_has_value(400,11546
      template<typename _Up,410,11791
	requires is_constructible_v<is_constructible_v411,11834
	      && is_constructible_v<is_constructible_v412,11880
	constexpr explicit(414,11970
      template<typename _Up,426,12383
	requires is_constructible_v<is_constructible_v427,12426
	      && is_constructible_v<is_constructible_v428,12465
	constexpr explicit(430,12548
      template<typename _Up 444,12968
	expected(450,13251
      template<typename _Gr 455,13380
	expected(458,13517
      template<typename _Gr 463,13661
	expected(466,13784
	requires is_constructible_v<is_constructible_v472,13961
	expected(474,14025
      template<typename _Up,479,14187
	requires is_constructible_v<is_constructible_v480,14235
	expected(482,14323
	requires is_constructible_v<is_constructible_v489,14586
	expected(491,14650
      template<typename _Up,496,14814
	requires is_constructible_v<is_constructible_v497,14862
	expected(499,14950
      template<typename _Up 557,16795
	operator=(operator=565,17173
	requires is_constructible_v<is_constructible_v572,17290
	operator=(operator=578,17545
	requires is_constructible_v<is_constructible_v585,17669
	operator=(operator=591,17903
	requires is_nothrow_constructible_v<is_nothrow_constructible_v600,18058
	emplace(602,18126
      template<typename _Up,616,18454
	requires is_nothrow_constructible_v<is_nothrow_constructible_v617,18502
	emplace(620,18603
      operator->(673,19833
      operator->(681,19995
      operator bool(operator bool721,20749
      constexpr bool has_value(724,20832
	noexcept(790,22239
	noexcept(804,22599
      template<typename _Gr 815,22902
      template<typename _Gr 827,23162
      template<typename _Fn> requires is_constructible_v<is_constructible_v841,23458
      template<typename _Fn> requires is_constructible_v<is_constructible_v859,24065
      template<typename _Fn> requires is_constructible_v<is_constructible_v877,24690
      template<typename _Fn> requires is_constructible_v<is_constructible_v896,25321
      template<typename _Fn> requires is_constructible_v<is_constructible_v914,25969
      template<typename _Fn> requires is_constructible_v<is_constructible_v932,26573
      template<typename _Fn> requires is_constructible_v<is_constructible_v951,27196
      template<typename _Fn> requires is_constructible_v<is_constructible_v969,27823
      template<typename _Fn> requires is_constructible_v<is_constructible_v987,28468
      template<typename _Fn> requires is_constructible_v<is_constructible_v1003,28860
      template<typename _Fn> requires is_constructible_v<is_constructible_v1019,29270
      template<typename _Fn> requires is_constructible_v<is_constructible_v1035,29683
      template<typename _Fn> requires is_constructible_v<is_constructible_v1051,30114
      template<typename _Fn> requires is_constructible_v<is_constructible_v1067,30512
      template<typename _Fn> requires is_constructible_v<is_constructible_v1083,30928
      template<typename _Fn> requires is_constructible_v<is_constructible_v1099,31349
      template<typename _Up,1117,31817
	operator==(operator==1120,31912
	operator==(operator==1132,32288
	operator==(operator==1138,32490
    private:private1148,32859
	_M_assign_val(1153,32976
	_M_assign_unex(1168,33289
      _M_swap_val_unex(1184,33708
      using __in_place_inv 1212,34650
      using __unexpect_inv 1213,34707
	expected(1217,34814
	expected(1223,34964
	_Tp _M_val;1228,35081
	_Er _M_unex;1229,35094
      bool _M_has_value;1232,35118
  template<typename _Tp,1236,35209
      template<typename _Up,1241,35369
      template<typename _Up, typename _Err,1241,35369
      template<typename _Up, typename _Err, typename _Unex 1241,35369
	static constexpr bool __same_val1250,35752
	static constexpr bool __same_err1254,35863
      using value_type 1258,35957
      using error_type 1259,35987
      using unexpected_type 1260,36017
	using rebind 1263,36094
      expected(1266,36154
      : _M_void(), _M_has_value(1277,36472
      : _M_void(), _M_has_value(1290,36857
      template<typename _Up,1297,37027
	expected(1302,37241
      template<typename _Up,1310,37478
	expected(1315,37678
      template<typename _Gr 1324,37923
      template<typename _Gr 1332,38204
      expected(1341,38495
	expected(1348,38659
      template<typename _Up,1353,38823
	expected(1356,38959
      constexpr ~expected(1364,39230
	operator=(operator=1406,40311
	operator=(operator=1416,40532
      emplace(1425,40674
      operator bool(operator bool1474,41740
      constexpr bool has_value(1477,41823
      operator*(1480,41918
      template<typename _Gr 1526,42823
      template<typename _Gr 1538,43083
	  using _Up 1556,43489
	  using _Up 1570,43883
	  using _Up 1584,44266
	  using _Up 1598,44673
	  using _Gr 1612,45027
	  using _Gr 1626,45373
	  using _Gr 1640,45720
	  using _Gr 1654,46079
	  using _Up 1668,46478
	  using _Res 1669,46527
	  using _Up 1681,46816
	  using _Res 1682,46865
	  using _Up 1694,47142
	  using _Res 1695,47191
	  using _Up 1707,47491
	  using _Res 1708,47540
	  using _Gr 1720,47795
	  using _Res 1721,47849
	  using _Gr 1736,48144
	  using _Res 1737,48204
	  using _Gr 1752,48494
	  using _Res 1753,48549
	  using _Gr 1768,48856
	  using _Res 1769,48917
      template<typename _Up,1782,49168
	operator==(operator==1785,49260
	operator==(operator==1796,49576
	_M_assign_unex(1811,50064
      using __in_place_inv 1823,50293
      using __unexpect_inv 1824,50350
	expected(1828,50457
	expected(1834,50610
	struct { } _M_void;1839,50727
	_Er _M_unex;1840,50748
      bool _M_has_value;1843,50772

/usr/include/c++/13/fenv.h,336
#define _GLIBCXX_FENV_H 30,1167
#undef feclearexcept43,1365
#undef fegetexceptflag44,1386
#undef feraiseexcept45,1409
#undef fesetexceptflag46,1430
#undef fetestexcept47,1453
#undef fegetround48,1473
#undef fesetround49,1491
#undef fegetenv50,1509
#undef feholdexcept51,1525
#undef fesetenv52,1545
#undef feupdateenv53,1561

/usr/include/c++/13/filesystem,75
#define _GLIBCXX_FILESYSTEM 31,1198
#define __cpp_lib_filesystem 53,1615

/usr/include/c++/13/format,19430
#define _GLIBCXX_FORMAT 30,1155
namespace std _GLIBCXX_VISIBILITY(59,1907
#define __cpp_lib_format 67,2246
#define __cpp_lib_format_uchar 69,2280
  using format_context91,2898
  using wformat_context93,2983
  using format_args 98,3184
  using wformat_args 99,3241
  template<typename _CharT,112,3654
    struct basic_format_string113,3701
      get(122,3960
      basic_string_view<_CharT> _M_str;126,4026
    using format_string 130,4104
    using wformat_string133,4215
  template<typename _Tp,139,4400
  template<typename _Tp, typename _CharT 139,4400
  class format_error 148,4702
    explicit format_error(151,4760
    explicit format_error(152,4836
  __throw_format_error(158,4970
namespace __format161,5067
  __unmatched_left_brace_in_format_string(167,5173
  __unmatched_right_brace_in_format_string(172,5323
  __conflicting_indexing_in_format_string(177,5474
  __invalid_arg_id_in_format_string(182,5637
  __failed_to_parse_format_spec(187,5782
  using format_parse_context 194,6058
  using wformat_parse_context 195,6123
    class basic_format_parse_context198,6221
      using char_type 201,6276
      using const_iterator 202,6308
      using iterator 203,6389
      basic_format_parse_context(206,6454
      constexpr const_iterator begin(214,6791
      constexpr const_iterator end(215,6866
      advance_to(218,6959
      next_arg_id(222,7057
      check_arg_id(237,7471
      iterator _M_begin;249,7756
      iterator _M_end;250,7781
      enum _Indexing 251,7804
      enum _Indexing { _Unknown,251,7804
      enum _Indexing { _Unknown, _Manual,251,7804
      enum _Indexing { _Unknown, _Manual, _Auto 251,7804
      _Indexing _M_indexing 252,7855
      size_t _M_next_arg_id 253,7895
      size_t _M_num_args;254,7928
  template<typename _Tp,258,7985
    static constexpr bool __is_specialization_of 259,8046
namespace __format264,8260
    constexpr pair<pair268,8333
    __parse_integer(269,8383
    constexpr pair<pair297,9182
    __parse_arg_id(298,9232
  enum _Pres_type 319,9841
    _Pres_none 320,9861
    _Pres_d 322,10014
    _Pres_d = 1, _Pres_b,322,10014
    _Pres_d = 1, _Pres_b, _Pres_B,322,10014
    _Pres_d = 1, _Pres_b, _Pres_B, _Pres_o,322,10014
    _Pres_d = 1, _Pres_b, _Pres_B, _Pres_o, _Pres_x,322,10014
    _Pres_d = 1, _Pres_b, _Pres_B, _Pres_o, _Pres_x, _Pres_X,322,10014
    _Pres_d = 1, _Pres_b, _Pres_B, _Pres_o, _Pres_x, _Pres_X, _Pres_c,322,10014
    _Pres_a 324,10137
    _Pres_a = 1, _Pres_A,324,10137
    _Pres_a = 1, _Pres_A, _Pres_e,324,10137
    _Pres_a = 1, _Pres_A, _Pres_e, _Pres_E,324,10137
    _Pres_a = 1, _Pres_A, _Pres_e, _Pres_E, _Pres_f,324,10137
    _Pres_a = 1, _Pres_A, _Pres_e, _Pres_E, _Pres_f, _Pres_F,324,10137
    _Pres_a = 1, _Pres_A, _Pres_e, _Pres_E, _Pres_f, _Pres_F, _Pres_g,324,10137
    _Pres_a = 1, _Pres_A, _Pres_e, _Pres_E, _Pres_f, _Pres_F, _Pres_g, _Pres_G,324,10137
    _Pres_p 325,10217
    _Pres_p = 0, _Pres_P,325,10217
    _Pres_s 326,10262
    _Pres_esc 327,10315
  enum _Align 330,10375
    _Align_default,331,10391
    _Align_left,332,10411
    _Align_right,333,10428
    _Align_centre,334,10446
  enum _Sign 337,10471
    _Sign_default,338,10486
    _Sign_plus,339,10505
    _Sign_minus,340,10521
    _Sign_space,341,10596
  enum _WidthPrec 344,10619
    _WP_none,345,10639
    _WP_value,346,10684
    _WP_from_arg 347,10732
  constexpr bool __is_digit(354,10903
  constexpr bool __is_xdigit(357,11007
    struct _Spec361,11140
      _Align     _M_align 363,11163
      _Sign      _M_sign 364,11194
      unsigned   _M_alt 365,11224
      unsigned   _M_localized 366,11253
      unsigned   _M_zero_fill 367,11288
      _WidthPrec _M_width_kind 368,11323
      _WidthPrec _M_prec_kind 369,11359
      _Pres_type _M_type 370,11394
      unsigned short _M_width;371,11424
      unsigned short _M_prec;372,11455
      _S_align(378,11614
      _M_parse_fill_and_align(391,11881
      _S_sign(418,12495
      _M_parse_sign(431,12757
      _M_parse_alternate_form(443,13002
      _M_parse_zero_fill(455,13228
      _S_parse_width_or_precision(467,13475
      _M_parse_width(504,14519
      _M_parse_precision(520,15030
      _M_parse_locale(540,15619
	_M_get_width(552,15841
	_M_get_precision(564,16134
    __put_sign(577,16432
  template<typename _Out,591,16762
    requires output_iterator<output_iterator592,16805
    __write(594,16871
  template<typename _Out,609,17230
    __write_padded(611,17282
  template<typename _CharT,665,18653
    __write_padded_as_spec(667,18705
  struct _Optional_locale688,19338
    _Optional_locale(691,19403
    _Optional_locale(693,19462
    _Optional_locale(697,19559
    operator=(operator=705,19758
    ~_Optional_locale(725,20091
    operator=(operator=728,20175
    value(741,20401
    bool has_value(751,20536
      std::locale _M_loc;755,20635
    concept __char 761,20730
    concept __char = same_as<_CharT, char> || same_as<same_as761,20730
    struct __formatter_str764,20829
      parse(767,20932
	format(819,21913
      set_debug_format(849,22716
      _Spec<_CharT> _M_spec{_M_spec854,22810
    struct __formatter_int858,22875
      _M_do_parse(867,23281
	_M_parse(976,25447
      template<typename _Int,1003,26359
	typename basic_format_context<basic_format_context1004,26404
	format(1005,26459
	typename basic_format_context<basic_format_context1075,28425
	format(1076,28480
	typename basic_format_context<basic_format_context1105,29346
	_M_format_character(1106,29401
	_S_to_character(1114,29616
	typename basic_format_context<basic_format_context1134,30250
	_M_format_int(1135,30305
				     std::make_unsigned<std::make_unsigned1216,32691
				     type_identity<unsigned __int128>>::type;type1217,32725
	to_chars(1222,32898
      _Spec<_CharT> _M_spec{_M_spec1226,33042
#undef _GLIBCXX_FORMAT_F1281237,33673
  using __float128_t 1242,33803
# define _GLIBCXX_FORMAT_F128 1243,33837
  using __float128_t 1276,34905
# define _GLIBCXX_FORMAT_F128 1277,34941
  using __float128_t 1282,35094
# define _GLIBCXX_FORMAT_F128 1283,35128
  using std::to_chars;1314,36017
    concept __formattable_float 1318,36139
    struct __formatter_fp1322,36303
      parse(1325,36405
      template<typename _Fp,1420,38215
	typename basic_format_context<basic_format_context1421,38259
	format(1422,38314
      _M_localize(1711,46666
      template<typename _Ch,1765,48000
	_S_resize_and_overwrite(1767,48058
      _Spec<_CharT> _M_spec{_M_spec1777,48298
      parse(1790,48579
	format(1797,48781
      set_debug_format(1813,49253
      __format::__formatter_int<_CharT> _M_f;1818,49362
      parse(1828,49624
	format(1835,49817
      set_debug_format(1851,50278
      __format::__formatter_int<wchar_t> _M_f;1856,50387
      parse(1869,50696
	format(1875,50897
      constexpr void set_debug_format(1879,51031
      __format::__formatter_str<_CharT> _M_f;1883,51130
      parse(1893,51407
	format(1899,51608
      constexpr void set_debug_format(1904,51756
      __format::__formatter_str<_CharT> _M_f;1908,51855
  template<__format::__char _CharT,1911,51909
      parse(1918,52142
	format(1923,52317
      constexpr void set_debug_format(1928,52479
      __format::__formatter_str<_CharT> _M_f;1932,52578
  template<typename _Traits,1935,52632
      parse(1942,52883
	format(1947,53054
      constexpr void set_debug_format(1952,53229
      __format::__formatter_str<char> _M_f;1956,53328
  template<typename _Traits,1959,53380
      parse(1966,53640
	format(1971,53817
      constexpr void set_debug_format(1976,53998
      __format::__formatter_str<wchar_t> _M_f;1980,54097
      parse(1990,54383
	format(1995,54554
      constexpr void set_debug_format(2000,54719
      __format::__formatter_str<char> _M_f;2004,54818
      parse(2014,55110
	format(2019,55287
      constexpr void set_debug_format(2024,55458
      __format::__formatter_str<wchar_t> _M_f;2028,55557
  template<integral _Tp,2033,55646
      parse(2041,55948
	format(2048,56147
      __format::__formatter_int<_CharT> _M_f;2052,56262
  template<typename _Tp,2056,56373
      parse(2064,56668
	format(2071,56867
      __format::__formatter_int<_CharT> _M_f;2075,56982
  template<__format::__formattable_float _Tp,2080,57080
      parse(2087,57328
	format(2092,57503
      __format::__formatter_fp<_CharT> _M_f;2096,57618
      parse(2108,57893
#define _GLIBCXX_P2518R3 2137,58520
#define _GLIBCXX_P2518R3 2139,58553
	format(2173,59235
      __format::_Spec<_CharT> _M_spec{_M_spec2230,60916
      parse(2240,61180
	format(2245,61355
      formatter<const void*, _CharT> _M_f;2249,61472
      parse(2259,61742
	format(2264,61917
      formatter<const void*, _CharT> _M_f;2268,62038
namespace __format2274,62122
  template<typename _Tp,2276,62143
  template<typename _Tp, typename _Context,2276,62143
	   typename _Formatter2277,62187
	   typename _ParseContext2279,62284
  template<typename _Tp,2288,62575
  template<typename _Tp, typename _Context,2288,62575
	   typename _Formatter2289,62619
	   typename _ParseContext2291,62716
    using _Iter_for 2302,63129
  template<typename _Tp,2304,63196
  template<typename _Tp, typename _CharT,2304,63196
	   typename _Context 2305,63238
    concept __formattable_impl2306,63311
      = __parsable_with<_Tp, _Context> && __formattable_with<__formattable_with2307,63342
  template<typename _Tp,2314,63531
    concept formattable2315,63573
namespace __format2321,63729
  template<typename _Rg,2323,63750
    concept __const_formattable_range2324,63792
  template<typename _Rg,2328,63935
    using __maybe_const_range2329,63977
      = conditional_t<__const_formattable_range<_Rg, _CharT>, const _Rg,2330,64007
    struct format_to_n_result2338,64293
      _Out out;2340,64329
      iter_difference_t<_Out> size;2341,64345
namespace __format2345,64412
    class _Sink_iter2348,64461
      _Sink_iter(2365,64923
      operator=(operator=2369,65067
      operator=(operator=2377,65217
      operator*(2385,65386
      operator++(2389,65488
      operator++(2393,65590
    class _Sink2400,65853
      span<_CharT> _M_span;2404,65915
      typename span<_CharT>::iterator _M_next;2405,65943
      _Sink(2416,66317
      _M_used(2423,66534
      _M_unused(2429,66754
      _M_rewind(2435,66970
      _M_reset(2440,67089
      _M_write(2448,67281
      _M_write(2456,67451
      out(2480,68000
    class _Buf_sink 2486,68180
      _Buf_sink(2493,68356
  template<typename _CharT,2544,69708
  template<typename _CharT, typename _Alloc 2544,69708
      = _Seq_sink<basic_string<_CharT, char_traits<char_traits2546,69793
  template<typename _CharT,2554,70146
    class _Iter_sink 2555,70193
      _OutIter _M_out;2557,70247
      iter_difference_t<_OutIter> _M_max;2558,70270
      _M_overflow(2564,70367
      _Iter_sink(2586,70938
      using _Sink<_CharT>::out;out2590,71070
  template<typename _CharT,2609,71797
    requires same_as<same_as2610,71855
  enum _Arg_t 2704,74516
    _Arg_none,2705,74548
    _Arg_none, _Arg_bool,2705,74548
    _Arg_none, _Arg_bool, _Arg_c,2705,74548
    _Arg_none, _Arg_bool, _Arg_c, _Arg_i,2705,74548
    _Arg_none, _Arg_bool, _Arg_c, _Arg_i, _Arg_u,2705,74548
    _Arg_none, _Arg_bool, _Arg_c, _Arg_i, _Arg_u, _Arg_ll,2705,74548
    _Arg_none, _Arg_bool, _Arg_c, _Arg_i, _Arg_u, _Arg_ll, _Arg_ull,2705,74548
    _Arg_flt,2706,74617
    _Arg_flt, _Arg_dbl,2706,74617
    _Arg_flt, _Arg_dbl, _Arg_ldbl,2706,74617
    _Arg_flt, _Arg_dbl, _Arg_ldbl, _Arg_str,2706,74617
    _Arg_flt, _Arg_dbl, _Arg_ldbl, _Arg_str, _Arg_sv,2706,74617
    _Arg_flt, _Arg_dbl, _Arg_ldbl, _Arg_str, _Arg_sv, _Arg_ptr,2706,74617
    _Arg_flt, _Arg_dbl, _Arg_ldbl, _Arg_str, _Arg_sv, _Arg_ptr, _Arg_handle,2706,74617
    _Arg_i128,2707,74694
    _Arg_i128, _Arg_u128,2707,74694
    _Arg_bf16,2708,74720
    _Arg_bf16, _Arg_f16,2708,74720
    _Arg_bf16, _Arg_f16, _Arg_f32,2708,74720
    _Arg_bf16, _Arg_f16, _Arg_f32, _Arg_f64,2708,74720
    _Arg_next_value_,2710,74828
    _Arg_f128 2711,74850
    _Arg_ibm128 2712,74877
    _Arg_f128,2714,74919
    _Arg_max_2716,74941
    struct _Arg_value2720,74991
      struct _HandleBase2724,75071
	const void* _M_ptr;2726,75104
	monostate _M_none;2732,75175
	bool _M_bool;2733,75195
	_CharT _M_c;2734,75210
	int _M_i;2735,75224
	unsigned _M_u;2736,75235
	long long _M_ll;2737,75251
	unsigned long long _M_ull;2738,75269
	float _M_flt;2739,75297
	double _M_dbl;2740,75312
	long double _M_ldbl;2742,75408
	const _CharT* _M_str;2744,75437
	basic_string_view<_CharT> _M_sv;2745,75460
	const void* _M_ptr;2746,75494
	_HandleBase _M_handle;2747,75515
	__int128 _M_i128;2749,75564
	unsigned __int128 _M_u128;2750,75583
	__ieee128 _M_f128;2754,75683
	__ibm128  _M_ibm128;2755,75703
	__float128_t _M_f128;2757,75757
      _Arg_value(2762,75834
	_Arg_value(2766,75905
      template<typename _Tp,2770,75986
	_S_get(2773,76077
	_M_get(2824,77692
	_M_get(2830,77818
	_M_set(2836,77943
  template<typename _Context,2846,78171
    class basic_format_arg2853,78311
      using _CharT 2855,78344
	static constexpr bool __formattable2858,78425
      class handle 2862,78525
	    = __conditional_t<__formattable<_Tp>, const _Tp,2869,78783
	  _S_format(2873,78883
	  handle(2885,79322
	format(2904,79854
      basic_format_arg(2914,80158
      explicit operator bool(operator bool2917,80275
      template<typename _Ctx,2924,80448
      __format::_Arg_value<_Context> _M_val;2929,80613
      __format::_Arg_t _M_type;2930,80658
	_S_to_arg_type(2937,80913
	using _Normalize 3030,84104
	_S_to_enum(3035,84303
	_M_set(3097,86292
	requires __format::__formattable_with<__format::__formattable_with3104,86409
	basic_format_arg(3106,86473
      template<typename _Ctx,3118,86859
      template<typename _Visitor,3122,86962
	decltype(3127,87130
  template<typename _Visitor,3192,89137
    inline decltype(3193,89186
namespace __format3200,89396
  struct _WidthPrecVisitor3202,89417
      operator()(operator()3206,89488
    __int_from_arg(3230,90308
  template<int _Bits,3234,90494
    __pack_arg_types(3236,90547
    class basic_format_args3247,90876
      static constexpr int _S_packed_type_bits 3249,90910
      static constexpr int _S_packed_type_mask 3250,90986
      static constexpr int _S_max_packed_args 3251,91044
	using _Store 3256,91206
      template<typename _Ctx,3258,91265
      using uint64_t 3261,91351
      using _Format_arg 3262,91391
      using _Format_arg_val 3263,91445
      uint64_t _M_packed_size 3269,91777
      uint64_t _M_unpacked_size 3270,91812
	const _Format_arg_val* _M_values;3273,91865
	const _Format_arg* _M_args;3274,91935
      _M_size(3278,92028
      _M_type(3282,92161
      template<typename _Ctx,3288,92350
	static consteval array<array3294,92547
	_S_types_to_pack(3295,92607
      get(3306,92924
  template<typename _Context,3322,93302
      -> basic_format_args<basic_format_args3324,93415
  template<typename _Context,3326,93454
  template<typename _Context,3331,93618
    class __format::_Arg_store3332,93667
      template<typename _Ctx,3336,93752
      static constexpr bool _S_values_only3345,94072
      using _Element_t3348,94188
			  __format::_Arg_value<__format::_Arg_value3350,94246
      _Element_t _M_args[_M_args3353,94318
	_S_make_elt(3357,94411
	requires 3367,94601
    class __format::_Arg_store<__format::_Arg_store3375,94789
      basic_format_args(3382,94951
  template<typename _Context 3412,95801
    make_wformat_args(3427,96382
namespace __format3431,96522
  template<typename _Out,3433,96543
  template<typename _Out, typename _CharT,3433,96543
  template<typename _Out,3449,97189
    class basic_format_context3450,97232
      basic_format_args<basic_format_context> _M_args;3454,97331
      _Out _M_out;3455,97386
      __format::_Optional_locale _M_loc;3456,97405
      basic_format_context(3458,97447
      basic_format_context(3463,97601
      template<typename _Out2,3468,97796
      template<typename _Out2, typename _CharT2,3468,97796
      using iterator 3478,98101
      using char_type 3479,98130
	using formatter_type 3481,98191
      arg(3485,98305
      std::locale locale(3489,98400
      iterator out(3492,98475
      void advance_to(3494,98527
namespace __format3499,98626
    struct _Scanner3507,99002
      basic_format_parse_context<_CharT> _M_pc;3511,99107
      _Scanner(3514,99181
      constexpr iterator begin(3518,99291
      constexpr iterator end(3519,99365
      _M_scan(3522,99457
      _M_fmt_str(3585,100954
      constexpr virtual void _M_on_chars(3588,101024
      constexpr void _M_on_replacement_field(3590,101080
  template<typename _Out,3625,101986
    class _Formatting_scanner 3626,102029
      _Formatting_scanner(3629,102103
      basic_format_context<basic_format_context3635,102278
      basic_format_context<_Out, _CharT>& _M_fc;3635,102278
      _M_on_chars(3640,102410
      _M_format_arg(3647,102607
  template<typename _CharT,3672,103506
    class _Checking_scanner 3673,103553
      _Checking_scanner(3681,103797
      _M_format_arg(3687,103949
      template<typename _Tp,3700,104184
	_M_parse_format_spec(3702,104253
  template<typename _Out,3716,104564
  template<typename _Out, typename _CharT,3716,104564
    __do_vformat_to(3718,104642
  template<typename _CharT,3745,105458
      basic_format_string(3750,105663
    vformat_to(3763,106017
    vformat_to(3769,106283
    vformat_to(3775,106548
    vformat_to(3782,106851
  vformat(3788,107064
  vformat(3797,107276
  vformat(3806,107492
  vformat(3815,107732
    format(3825,108010
    format(3831,108215
    format(3837,108421
    format(3847,108673
  template<typename _Out,3854,108860
    format_to(3857,108969
  template<typename _Out,3863,109182
    format_to(3866,109294
  template<typename _Out,3872,109509
    format_to(3875,109618
  template<typename _Out,3882,109866
    format_to(3885,109978
  template<typename _Out,3892,110228
    format_to_n(3895,110357
  template<typename _Out,3904,110685
    format_to_n(3907,110817
  template<typename _Out,3916,111150
    format_to_n(3919,111279
  template<typename _Out,3928,111635
    format_to_n(3931,111767
namespace __format3941,112151
    class _Counting_sink final : public _Iter_sink<_Iter_sink3945,112206
    class _Counting_sink 3957,112531
      _M_overflow(3962,112628
      count(3974,112866
    formatted_size(3987,113073
    formatted_size(3998,113405
    formatted_size(4009,113742
    formatted_size(4021,114107
  enum class range_format 4033,114540
    disabled,4034,114568
    map,4035,114582
    set,4036,114591
    sequence,4037,114600
    string,4038,114614
    debug_string4039,114626
    constexpr auto format_kind 4044,114699
    __fmt_kind(4048,114816
    constexpr range_format format_kind<format_kind4073,115594
  template<typename _Tp,4076,115722
  template<typename _Tp, typename _CharT 4076,115722
namespace __format4081,115905
  template<range_format _Kind,4084,115993
  template<range_format _Kind, ranges::input_range _Rg,4084,115993
  template<ranges::input_range _Rg,4091,116273
    : __format::__range_default_formatter<__format::__range_default_formatter4095,116479

/usr/include/c++/13/forward_list,161
#define _GLIBCXX_FORWARD_LIST 30,1180
namespace std _GLIBCXX_VISIBILITY(50,1573
namespace std _GLIBCXX_VISIBILITY(63,1891
#define __cpp_lib_erase_if 67,1970

/usr/include/c++/13/fstream,5855
#define _GLIBCXX_FSTREAM 34,1224
# define _GLIBCXX_BUFSIZ 51,1669
namespace std _GLIBCXX_VISIBILITY(54,1709
    class basic_filebuf 87,3073
				   is_copy_constructible<is_copy_constructible92,3254
      typedef _CharT                     	        char_type;105,3683
      typedef _Traits                    	        traits_type;106,3744
      typedef typename traits_type::int_type 		int_type;107,3807
      typedef typename traits_type::pos_type 		pos_type;108,3864
      typedef typename traits_type::off_type 		off_type;109,3921
      typedef basic_streambuf<char_type,char_type111,3979
      typedef basic_streambuf<char_type, traits_type>  	__streambuf_type;111,3979
      typedef basic_filebuf<char_type,char_type112,4053
      typedef basic_filebuf<char_type, traits_type>     __filebuf_type;112,4053
      typedef __basic_file<char>		        __file_type;113,4125
      typedef typename traits_type::state_type          __state_type;114,4180
      typedef codecvt<char_type,char_type115,4250
      typedef codecvt<char_type, char,115,4250
      typedef codecvt<char_type, char, __state_type>    __codecvt_type;115,4250
      __c_lock          	_M_lock;122,4484
      __file_type 		_M_file;125,4545
      ios_base::openmode 	_M_mode;128,4652
      __state_type 		_M_state_beg;131,4731
      __state_type		_M_state_cur;136,4916
      __state_type		_M_state_last;140,5058
      char_type*		_M_buf;143,5149
      size_t			_M_buf_size;150,5368
      bool			_M_buf_allocated;153,5475
      bool                      _M_reading;162,5775
      bool                      _M_writing;163,5819
      char_type			_M_pback;171,6035
      char_type*		_M_pback_cur_save;172,6063
      char_type*		_M_pback_end_save;173,6100
      bool			_M_pback_init;174,6137
      const __codecvt_type* 	_M_codecvt;178,6209
      char*			_M_ext_buf;185,6429
      streamsize		_M_ext_buf_size;190,6521
      const char*		_M_ext_next;197,6778
      char*			_M_ext_end;198,6810
      _M_create_pback(206,7012
      _M_destroy_pback(223,7422
      ~basic_filebuf(253,8160
      is_open(272,8540
      open(338,11682
	_If_fs_path<_If_fs_path349,12079
	open(350,12116
      _M_set_buffer(466,15784
    class basic_ifstream 499,16793
      typedef _CharT 					char_type;503,16892
      typedef _Traits 					traits_type;504,16929
      typedef typename traits_type::int_type 		int_type;505,16969
      typedef typename traits_type::pos_type 		pos_type;506,17026
      typedef typename traits_type::off_type 		off_type;507,17083
      typedef basic_filebuf<char_type,char_type510,17170
      typedef basic_filebuf<char_type, traits_type> 	__filebuf_type;510,17170
      typedef basic_istream<char_type,char_type511,17239
      typedef basic_istream<char_type, traits_type>	__istream_type;511,17239
      __filebuf_type	_M_filebuf;514,17321
      basic_ifstream(525,17666
      basic_ifstream(536,18061
      basic_ifstream(551,18576
      basic_ifstream(569,19100
      template<typename _Path,585,19611
      basic_ifstream(594,19883
      ~basic_ifstream(606,20248
      operator=(operator=616,20440
      swap(624,20612
      rdbuf(639,20974
      is_open(647,21178
      is_open(653,21338
      open(665,21714
      open(685,22398
      open(704,22951
	_If_fs_path<_If_fs_path724,23634
	open(725,23660
      close(737,23995
    class basic_ofstream 760,24669
      typedef _CharT 					char_type;764,24767
      typedef _Traits 					traits_type;765,24804
      typedef typename traits_type::int_type 		int_type;766,24844
      typedef typename traits_type::pos_type 		pos_type;767,24901
      typedef typename traits_type::off_type 		off_type;768,24958
      typedef basic_filebuf<char_type,char_type771,25045
      typedef basic_filebuf<char_type, traits_type> 	__filebuf_type;771,25045
      typedef basic_ostream<char_type,char_type772,25114
      typedef basic_ostream<char_type, traits_type>	__ostream_type;772,25114
      __filebuf_type	_M_filebuf;775,25196
      basic_ofstream(786,25529
      basic_ofstream(797,25925
      basic_ofstream(814,26481
      basic_ofstream(832,27024
      template<typename _Path,848,27538
      basic_ofstream(857,27811
      ~basic_ofstream(869,28167
      operator=(operator=879,28359
      swap(887,28531
      rdbuf(902,28893
      is_open(910,29097
      is_open(916,29257
      open(928,29636
      open(948,30295
      open(967,30847
	_If_fs_path<_If_fs_path987,31533
	open(988,31559
      close(1000,31895
    class basic_fstream 1023,32595
      typedef _CharT 					char_type;1027,32694
      typedef _Traits 					traits_type;1028,32731
      typedef typename traits_type::int_type 		int_type;1029,32771
      typedef typename traits_type::pos_type 		pos_type;1030,32828
      typedef typename traits_type::off_type 		off_type;1031,32885
      typedef basic_filebuf<char_type,char_type1034,32972
      typedef basic_filebuf<char_type, traits_type> 	__filebuf_type;1034,32972
      typedef basic_ios<char_type,char_type1035,33041
      typedef basic_ios<char_type, traits_type>		__ios_type;1035,33041
      typedef basic_iostream<char_type,char_type1036,33102
      typedef basic_iostream<char_type, traits_type>	__iostream_type;1036,33102
      __filebuf_type	_M_filebuf;1039,33186
      basic_fstream(1050,33530
      basic_fstream(1060,33863
      basic_fstream(1074,34333
      basic_fstream(1090,34816
      template<typename _Path,1104,35275
      basic_fstream(1113,35558
      ~basic_fstream(1125,35914
      operator=(operator=1135,36102
      swap(1143,36274
      rdbuf(1158,36636
      is_open(1166,36840
      is_open(1172,37000
      open(1184,37375
      open(1205,38033
      open(1225,38588
	_If_fs_path<_If_fs_path1246,39273
	open(1247,39299
      close(1260,39656

/usr/include/c++/13/functional,7320
#define _GLIBCXX_FUNCTIONAL 44,1731
namespace std _GLIBCXX_VISIBILITY(79,2570
  template<int _Num> struct _Placeholder 87,2764
# define __cpp_lib_invoke 92,2866
#  define __cpp_lib_constexpr_functional 94,2927
# define __cpp_lib_invoke_r 118,3821
    struct _Mem_fn<_Mem_fn202,6300
      using _Mem_fn_base<_Res _Class::*>::_Mem_fn_base;_Mem_fn_base205,6376
    struct is_bind_expression254,8044
    struct is_placeholder266,8350
  namespace placeholders282,8820
#  define _GLIBCXX_PLACEHOLDER 289,9043
#  define _GLIBCXX_PLACEHOLDER 291,9087
    _GLIBCXX_PLACEHOLDER const _Placeholder<1> _1;294,9133
    _GLIBCXX_PLACEHOLDER const _Placeholder<2> _2;295,9184
    _GLIBCXX_PLACEHOLDER const _Placeholder<3> _3;296,9235
    _GLIBCXX_PLACEHOLDER const _Placeholder<4> _4;297,9286
    _GLIBCXX_PLACEHOLDER const _Placeholder<5> _5;298,9337
    _GLIBCXX_PLACEHOLDER const _Placeholder<6> _6;299,9388
    _GLIBCXX_PLACEHOLDER const _Placeholder<7> _7;300,9439
    _GLIBCXX_PLACEHOLDER const _Placeholder<8> _8;301,9490
    _GLIBCXX_PLACEHOLDER const _Placeholder<9> _9;302,9541
    _GLIBCXX_PLACEHOLDER const _Placeholder<10> _10;303,9592
    _GLIBCXX_PLACEHOLDER const _Placeholder<11> _11;304,9645
    _GLIBCXX_PLACEHOLDER const _Placeholder<12> _12;305,9698
    _GLIBCXX_PLACEHOLDER const _Placeholder<13> _13;306,9751
    _GLIBCXX_PLACEHOLDER const _Placeholder<14> _14;307,9804
    _GLIBCXX_PLACEHOLDER const _Placeholder<15> _15;308,9857
    _GLIBCXX_PLACEHOLDER const _Placeholder<16> _16;309,9910
    _GLIBCXX_PLACEHOLDER const _Placeholder<17> _17;310,9963
    _GLIBCXX_PLACEHOLDER const _Placeholder<18> _18;311,10016
    _GLIBCXX_PLACEHOLDER const _Placeholder<19> _19;312,10069
    _GLIBCXX_PLACEHOLDER const _Placeholder<20> _20;313,10122
    _GLIBCXX_PLACEHOLDER const _Placeholder<21> _21;314,10175
    _GLIBCXX_PLACEHOLDER const _Placeholder<22> _22;315,10228
    _GLIBCXX_PLACEHOLDER const _Placeholder<23> _23;316,10281
    _GLIBCXX_PLACEHOLDER const _Placeholder<24> _24;317,10334
    _GLIBCXX_PLACEHOLDER const _Placeholder<25> _25;318,10387
    _GLIBCXX_PLACEHOLDER const _Placeholder<26> _26;319,10440
    _GLIBCXX_PLACEHOLDER const _Placeholder<27> _27;320,10493
    _GLIBCXX_PLACEHOLDER const _Placeholder<28> _28;321,10546
    _GLIBCXX_PLACEHOLDER const _Placeholder<29> _29;322,10599
#undef _GLIBCXX_PLACEHOLDER324,10653
    struct is_placeholder<is_placeholder334,10901
    struct is_placeholder<is_placeholder339,11021
	operator()(operator()383,12665
	  typedef typename _Build_index_tuple<_Build_index_tuple405,13320
	operator()(operator()436,14295
	operator()(operator()455,14816
# define _GLIBCXX_VOLATILE_BIND476,15571
# define _GLIBCXX_DEPR_BIND 479,15697
# define _GLIBCXX_VOLATILE_BIND482,15824
# define _GLIBCXX_DEPR_BIND483,15856
    class _Bind<_Bind491,16054
	_Bound_indexes;495,16217
      _Functor _M_f;497,16235
      tuple<_Bound_args...> _M_bound_args;498,16256
      template<typename _Result,501,16326
      template<typename _Result, typename... _Args,501,16326
	__call(504,16434
      template<typename _Result,512,16637
      template<typename _Result, typename... _Args,512,16637
	__call_c(515,16745
      template<typename _Result,524,16989
      template<typename _Result, typename... _Args,524,16989
	__call_v(526,17075
      template<typename _Result,535,17301
      template<typename _Result, typename... _Args,535,17301
	__call_c_v(537,17387
      template<typename _BoundArg,546,17610
      template<typename _Fn,551,17809
      template<typename _Fn, typename _CallArgs,551,17809
	using _Res_type = _Res_type_impl<_Functor, _CallArgs,556,18009
	  enable_if<bool(tuple_size<_CallArgs>::value+1), _Functor>::type;type560,18147
      template<typename _CallArgs,562,18216
	  _CallArgs,565,18377
	_Bind(571,18517
	_Bind(577,18695
      template<typename... _Args,585,18910
	operator()(operator()589,19030
      template<typename... _Args,597,19212
	operator()(operator()601,19346
      template<typename... _Args,610,19569
	operator()(operator()614,19704
      template<typename... _Args,622,19906
	operator()(operator()626,20035
      typedef typename _Build_index_tuple<_Build_index_tuple642,20510
      typedef _Result result_type;690,21965
	operator()(operator()711,22570
	operator()(operator()722,22821
	operator()(operator()734,23109
	operator()(operator()745,23376
#undef _GLIBCXX_VOLATILE_BIND757,23670
#undef _GLIBCXX_DEPR_BIND758,23700
    struct is_bind_expression<is_bind_expression765,23857
    struct is_bind_expression<is_bind_expression773,24066
    struct is_bind_expression<is_bind_expression781,24281
    struct is_bind_expression<is_bind_expression789,24499
    struct _Bind_check_arity 825,25669
    struct _Bind_check_arity<_Bind_check_arity842,26317
    struct _Bind_helper859,27129
      typedef typename decay<_Func>::type __func_type;862,27227
      typedef _Bind<__func_type(typename decay<_BoundArgs>::type...)> type;863,27282
      typedef _Bind_helper<false, _Func, _BoundArgs...> __helper_type;883,28010
    struct _Bindres_helper889,28270
      typedef typename decay<_Func>::type __functor_type;892,28371
      typedef _Bind_result<_Result,_Result893,28429
	type;895,28524
      typedef _Bindres_helper<_Result, _Func, _BoundArgs...> __helper_type;908,28861
#define __cpp_lib_bind_front 914,29083
    struct _Bind_front917,29170
      template<typename _Fn,924,29434
	_Bind_front(926,29502
	noexcept(943,30196
	noexcept(953,30526
	invoke_result_t<invoke_result_t962,30760
	noexcept(964,30854
	invoke_result_t<invoke_result_t972,31080
	noexcept(974,31192
      template<typename _Tp,984,31463
      template<typename _Tp, size_t... _Ind,984,31463
	decltype(986,31549
      [[no_unique_address]] _Fd _M_fd;994,31810
      [[no_unique_address]] std::tuple<_BoundArgs...> _M_bound_args;995,31849
    struct _Bind_front01000,32023
	_Bind_front0(1008,32270
	noexcept(1023,32767
	noexcept(1030,33035
	invoke_result_t<invoke_result_t1035,33218
	noexcept(1037,33297
	invoke_result_t<invoke_result_t1045,33496
	noexcept(1047,33587
      [[no_unique_address]] _Fd _M_fd;1054,33756
    class _Not_fn1085,34809
      template<typename _Fn2,1087,34833
	using __inv_res_t = typename __invoke_result<_Fn2, _Args...>::type;type1088,34882
	_Not_fn(1097,35126
#define _GLIBCXX_NOT_FN_CALL_OP(1107,35532
#undef _GLIBCXX_NOT_FN_CALL_OP1122,36148
      _GLIBCXX_NOT_FN_CALL_OP(1119,36029
    struct __is_byte_like 1129,36259
#define __cpp_lib_not_fn 1152,36924
	operator()(operator()1190,38156
#define __cpp_lib_boyer_moore_searcher 1207,38681
    struct __boyer_moore_map_base1210,38801
	__boyer_moore_map_base(1213,38874
      _M_lookup(1225,39222
      _M_pred(1234,39431
      _GLIBCXX_STD_C::unordered_map<_GLIBCXX_STD_C::unordered_map1236,39487
      _GLIBCXX_STD_C::unordered_map<_Key, _Tp, _Hash, _Pred> _M_bad_char;1236,39487
    struct __boyer_moore_array_base1240,39623
      template<typename _RAIter,1242,39665
	__boyer_moore_array_base(1243,39716
	_M_lookup(1262,40255
      _M_pred(1271,40487
      tuple<tuple1273,40547
      tuple<array<_Tp, _Len>, _Pred> _M_bad_char;1273,40547
	operator()(operator()1363,43545
    operator()(operator()1424,45626

/usr/include/c++/13/future,11101
#define _GLIBCXX_FUTURE 30,1162
namespace std _GLIBCXX_VISIBILITY(55,1799
  enum class future_errc74,2343
    future_already_retrieved 76,2372
    promise_already_satisfied,77,2406
    no_state,78,2437
    broken_promise79,2451
  class future_error 108,3348
    future_error(112,3417
    code(122,3625
    future_error(126,3696
    error_code 			_M_code;132,3856
  enum class launch149,4147
    async 151,4171
    deferred 152,4186
  constexpr launch operator&(155,4209
  constexpr launch operator|(161,4361
  constexpr launch operator^(167,4513
  constexpr launch operator~(173,4665
  inline launch& operator&=(operator&=176,4774
  inline launch& operator|=(operator|=179,4867
  inline launch& operator^=(operator^=182,4960
  enum class future_status186,5083
    ready,188,5114
    timeout,189,5125
    deferred190,5138
  struct __future_base214,5834
    struct _Result_base217,5893
      exception_ptr		_M_error;219,5923
      struct _Deleter227,6174
	void operator()(operator()229,6204
      struct _Result 243,6585
	__gnu_cxx::__aligned_buffer<_Res>	_M_storage;246,6644
	bool 					_M_initialized;247,6691
	typedef _Res result_type;250,6733
	_Result(252,6761
	~_Result(254,6805
	_M_value(262,6940
	_M_set(265,7001
	_M_set(272,7112
	void _M_destroy(279,7238
    template<typename _Res,283,7330
      struct _Result_alloc final : _Result<_Result284,7375
    template<typename _Res,302,7820
      static _Ptr<_Ptr303,7869
      _S_allocate_result(304,7920
    template<typename _Res,315,8307
      _S_allocate_result(317,8382
    class _State_baseV2325,8675
      typedef _Ptr<_Result_base> _Ptr_type;327,8705
      enum _Status 329,8750
	__not_ready,330,8782
	__ready331,8796
      _Ptr_type			_M_result;334,8815
      __atomic_futex_unsigned<>	_M_status;335,8844
      once_flag			_M_once;337,8947
      _State_baseV2(340,8987
      wait(347,9248
      template<typename _Rep,357,9546
        wait_for(359,9616
      template<typename _Clock,391,10854
        wait_until(393,10928
      _M_set_result(423,11865
      _M_set_delayed_result(442,12658
      _M_break_promise(460,13288
      _M_set_retrieved_flag(479,14012
      template<typename _Res,485,14162
      template<typename _Res,489,14253
          typename promise<_Res>::_Ptr_type operator()(operator()499,14693
          typename promise<_Res>::_Ptr_type operator()(operator()513,15130
	  typename promise<_Res>::_Ptr_type operator()(operator()528,15574
      struct __exception_ptr_tag 534,15718
          typename promise<_Res>::_Ptr_type operator()(operator()541,15935
      template<typename _Res,551,16218
        static _Setter<_Setter553,16299
        __setter(554,16336
        static _Setter<_Setter561,16561
        __setter(562,16611
	static _Setter<_Setter570,16895
	__setter(571,16923
        _S_check(578,17062
      _M_do_set(587,17318
      virtual void _M_complete_async(598,17718
      virtual bool _M_is_deferred_future(601,17828
    template<typename _BoundFn,619,18234
    template<typename _BoundFn,623,18357
    template<typename _Fn,630,18548
    template<typename _Fn, typename _Alloc,630,18548
    template<typename _Res_ptr,633,18640
    template<typename _Res_ptr, typename _Fn,633,18640
    template<typename _Res_ptr,637,18782
      static _Task_setter<_Task_setter638,18833
      _S_task_setter(639,18879
    struct __future_base::_Result<__future_base::_Result647,19096
      typedef _Res& result_type;649,19173
      _Result(651,19207
      _M_set(654,19265
      _Res& _M_get(657,19349
      _Res* 			_M_value_ptr;660,19419
      void _M_destroy(662,19449
    struct __future_base::_Result<__future_base::_Result667,19551
      typedef void result_type;669,19627
      void _M_destroy(672,19673
    struct __is_location_invariant682,19904
    struct __is_location_invariant688,20144
    class __basic_future 695,20355
      typedef shared_ptr<_State_base>		__state_type;698,20424
      typedef __future_base::_Result<_Res>&	__result_type;699,20477
      __state_type 		_M_state;702,20550
      valid(710,20751
      wait(713,20832
      template<typename _Rep,719,20935
        wait_for(721,21005
      template<typename _Clock,727,21182
        wait_until(729,21256
      _M_get_result(738,21552
      void _M_swap(747,21823
      __basic_future(754,22006
      constexpr __basic_future(772,22522
      struct _Reset774,22582
        explicit _Reset(776,22610
        ~_Reset(777,22686
        __basic_future& _M_fut;778,22733
    class future 785,22844
      template<typename _Fn,796,23348
      typedef __basic_future<_Res> _Base_type;800,23495
      typedef typename _Base_type::__state_type __state_type;801,23542
      future(804,23620
      constexpr future(807,23701
      future(810,23782
      future& operator=(operator=816,23967
      get(824,24146
    class future<future835,24409
      template<typename _Fn,839,24558
      typedef __basic_future<_Res&> _Base_type;843,24705
      typedef typename _Base_type::__state_type __state_type;844,24753
      future(847,24831
      constexpr future(850,24912
      future(853,24993
      future& operator=(operator=859,25178
      get(867,25358
    class future<future878,25599
      template<typename _Fn,882,25745
      typedef __basic_future<void> _Base_type;886,25892
      typedef typename _Base_type::__state_type __state_type;887,25939
      future(890,26017
      constexpr future(893,26098
      future(896,26179
      future& operator=(operator=902,26364
      get(910,26543
    class shared_future 922,26776
      typedef __basic_future<_Res> _Base_type;931,27200
      constexpr shared_future(934,27260
      shared_future(937,27348
      shared_future(940,27469
      shared_future(945,27614
      shared_future& operator=(operator=949,27712
      shared_future& operator=(operator=955,27862
      get(963,28067
    class shared_future<shared_future968,28215
      typedef __basic_future<_Res&>           _Base_type;970,28283
      constexpr shared_future(973,28354
      shared_future(976,28442
      shared_future(979,28554
      shared_future(984,28700
      shared_future& operator=(operator=988,28798
      shared_future& operator=(operator=994,28939
      get(1002,29138
    class shared_future<shared_future1007,29274
      typedef __basic_future<void> _Base_type;1009,29340
      constexpr shared_future(1012,29400
      shared_future(1015,29488
      shared_future(1018,29600
      shared_future(1023,29745
      shared_future& operator=(operator=1027,29843
      shared_future& operator=(operator=1033,29984
      get(1041,30181
    class promise1081,31337
      typedef __future_base::_State_base 	_State;1090,31723
      typedef __future_base::_Result<_Res>	_Res_type;1091,31773
      typedef __future_base::_Ptr<_Res_type>	_Ptr_type;1092,31827
      template<typename,typename1093,31883
      shared_ptr<_State>                        _M_future;1096,31971
      _Ptr_type                                 _M_storage;1097,32030
      promise(1100,32103
      promise(1105,32206
        promise(1111,32381
        promise(1117,32602
      ~promise(1124,32817
      operator=(operator=1132,33013
      swap(1141,33204
      get_future(1149,33391
      set_value(1154,33492
      set_value(1158,33602
      set_exception(1162,33718
      set_value_at_thread_exit(1166,33834
      set_value_at_thread_exit(1173,33991
      set_exception_at_thread_exit(1180,34154
      _M_state(1188,34333
    class promise<promise1207,34761
      typedef __future_base::_State_base	_State;1209,34792
      typedef __future_base::_Result<_Res&>	_Res_type;1210,34841
      typedef __future_base::_Ptr<_Res_type> 	_Ptr_type;1211,34896
      template<typename,typename1212,34953
      shared_ptr<_State>                        _M_future;1215,35041
      _Ptr_type                                 _M_storage;1216,35100
      promise(1219,35173
      promise(1224,35276
        promise(1230,35451
        promise(1236,35673
      ~promise(1243,35888
      operator=(operator=1251,36084
      swap(1260,36275
      get_future(1268,36463
      set_value(1273,36565
      set_exception(1277,36669
      set_value_at_thread_exit(1281,36785
      set_exception_at_thread_exit(1288,36936
      _M_state(1296,37115
    class promise<promise1305,37287
      typedef __future_base::_State_base	_State;1307,37317
      typedef __future_base::_Result<void>	_Res_type;1308,37366
      typedef __future_base::_Ptr<_Res_type> 	_Ptr_type;1309,37420
      template<typename,typename1310,37477
      shared_ptr<_State>                        _M_future;1313,37565
      _Ptr_type                                 _M_storage;1314,37624
      promise(1317,37697
      promise(1322,37800
        promise(1328,37975
        promise(1336,38310
      ~promise(1343,38525
      operator=(operator=1351,38721
      swap(1360,38912
      get_future(1368,39099
      set_value(1373,39200
      set_exception(1377,39290
      set_value_at_thread_exit(1381,39406
      set_exception_at_thread_exit(1385,39530
      _M_state(1393,39709
    struct __future_base::_Task_setter1402,39905
      _Ptr_type operator()(operator()1405,40017
      _Ptr_type*	_M_result;1421,40344
      _Fn*		_M_fn;1422,40372
      _Ptr_type operator()(operator()1428,40511
    struct __future_base::_Task_state_base<__future_base::_Task_state_base1450,40965
      typedef _Res _Res_type;1453,41063
	_Task_state_base(1456,41126
      typedef __future_base::_Ptr<_Result<_Res>> _Ptr_type;1471,41555
      _Ptr_type _M_result;1472,41615
      struct _Impl 1511,42752
	  _Impl(1514,42813
	_Fn _M_fn;1516,42908
      typedef typename decay<decay1525,43173
      typedef __future_base::_Task_state<_Fn2, _Alloc, _Signature> _State;1526,43219
    class packaged_task<packaged_task1541,43802
      typedef __future_base::_Task_state_base<_Res(_ArgTypes...)> _State_type;1543,43852
      shared_ptr<_State_type>                   _M_state;1544,43931
      template<typename _Fn,1548,44089
	  = typename enable_if<!is_same<packaged_task, _Fn2>::value>::type;type1550,44175
      packaged_task(1554,44295
      template<typename _Fn,1556,44331
      template<typename _Fn,1568,44756
      template<typename _Fn, typename _Alloc,1568,44756
	packaged_task(1585,45368
      ~packaged_task(1590,45495
      packaged_task(1601,45816
      packaged_task& operator=(operator=1604,45902
      swap(1611,46058
      valid(1615,46157
      get_future(1620,46278
      operator()(operator()1625,46369
      make_ready_at_thread_exit(1632,46539
      reset(1639,46742
      typedef __future_base::_Ptr<_Result<_Res>> _Ptr_type;1691,48249
  class __future_base::_Async_state_commonV21714,49189
    virtual void _M_complete_async(1735,50109
    void _M_join(1737,50162
    thread _M_thread;1739,50238
    once_flag _M_once;1740,50260
      typedef __future_base::_Ptr<_Result<_Res>> _Ptr_type;1785,51480

/usr/include/c++/13/initializer_list,592
#define _INITIALIZER_LIST31,1155
namespace std _GLIBCXX_VISIBILITY(41,1313
    class initializer_list45,1402
      typedef _E 		value_type;48,1447
      typedef const _E& 	reference;49,1478
      typedef const _E& 	const_reference;50,1514
      typedef size_t 		size_type;51,1556
      typedef const _E* 	iterator;52,1590
      typedef const _E* 	const_iterator;53,1625
      iterator			_M_array;56,1680
      size_type			_M_len;57,1707
      constexpr initializer_list(60,1788
      constexpr initializer_list(64,1908
      size(69,2043
      begin(73,2146
      end(77,2264

/usr/include/c++/13/iomanip,2112
#define _GLIBCXX_IOMANIP 34,1239
namespace std _GLIBCXX_VISIBILITY(51,1534
  struct _Resetiosflags 58,1672
  struct _Resetiosflags { ios_base::fmtflags _M_mask;58,1672
    operator>>(73,2122
    operator<<(81,2369
  struct _Setiosflags 88,2528
  struct _Setiosflags { ios_base::fmtflags _M_mask;88,2528
    operator>>(103,2950
    operator<<(111,3172
  struct _Setbase 118,3306
  struct _Setbase { int _M_base;118,3306
    operator>>(134,3806
    operator<<(145,4169
    struct _Setfill 156,4472
    struct _Setfill { _CharT _M_c;156,4472
    operator>>(172,4893
    operator<<(180,5116
  struct _Setprecision 187,5251
  struct _Setprecision { int _M_n;187,5251
    operator>>(202,5642
    operator<<(210,5867
  struct _Setw 217,6004
  struct _Setw { int _M_n;217,6004
    operator>>(232,6359
    operator<<(240,6572
    struct _Get_money 249,6753
    struct _Get_money { _MoneyT& _M_mon;249,6753
    struct _Get_money { _MoneyT& _M_mon; bool _M_intl;249,6753
    operator>>(266,7382
	      typedef istreambuf_iterator<_CharT, _Traits>   _Iter;274,7626
	      typedef money_get<_CharT, _Iter>               _MoneyGet;275,7687
    struct _Put_money 296,8213
    struct _Put_money { const _MoneyT& _M_mon;296,8213
    struct _Put_money { const _MoneyT& _M_mon; bool _M_intl;296,8213
    operator<<(313,8852
	      typedef ostreambuf_iterator<_CharT, _Traits>   _Iter;321,9089
	      typedef money_put<_CharT, _Iter>               _MoneyPut;322,9150
    struct _Put_time343,9710
      const std::tm* _M_tmb;345,9737
      const _CharT* _M_fmt;346,9766
    operator<<(365,10271
              typedef ostreambuf_iterator<_CharT, _Traits>   _Iter;373,10534
              typedef time_put<_CharT, _Iter>                _TimePut;374,10602
    struct _Get_time398,11407
      std::tm*	    _M_tmb;400,11434
      const _CharT* _M_fmt;401,11461
    operator>>(420,11966
              typedef istreambuf_iterator<_CharT, _Traits>   _Iter;428,12236
              typedef time_get<_CharT, _Iter>                _TimeGet;429,12304
#define __cpp_lib_quoted_string_io 453,13052

/usr/include/c++/13/ios,30
#define _GLIBCXX_IOS 34,1224

/usr/include/c++/13/iosfwd,1491
#define _GLIBCXX_IOSFWD 34,1235
namespace std _GLIBCXX_VISIBILITY(44,1458
  typedef basic_ios<char> 		ios;134,4414
  typedef basic_streambuf<char> 	streambuf;137,4486
  typedef basic_istream<char> 		istream;140,4575
  typedef basic_ostream<char> 		ostream;143,4662
  typedef basic_iostream<char> 		iostream;146,4765
  typedef basic_stringbuf<char> 	stringbuf;149,4849
  typedef basic_istringstream<char> 	istringstream;152,4940
  typedef basic_ostringstream<char> 	ostringstream;155,5040
  typedef basic_stringstream<char> 	stringstream;158,5156
  typedef basic_filebuf<char> 		filebuf;161,5245
  typedef basic_ifstream<char> 		ifstream;164,5331
  typedef basic_ofstream<char> 		ofstream;167,5420
  typedef basic_fstream<char> 		fstream;170,5525
  typedef basic_ios<wchar_t> 		wios;174,5636
  typedef basic_streambuf<wchar_t> 	wstreambuf;177,5715
  typedef basic_istream<wchar_t> 	wistream;180,5811
  typedef basic_ostream<wchar_t> 	wostream;183,5904
  typedef basic_iostream<wchar_t> 	wiostream;186,6013
  typedef basic_stringbuf<wchar_t> 	wstringbuf;189,6103
  typedef basic_istringstream<wchar_t> 	wistringstream;192,6201
  typedef basic_ostringstream<wchar_t> 	wostringstream;195,6308
  typedef basic_stringstream<wchar_t> 	wstringstream;198,6431
  typedef basic_filebuf<wchar_t> 	wfilebuf;201,6527
  typedef basic_ifstream<wchar_t> 	wifstream;204,6619
  typedef basic_ofstream<wchar_t> 	wofstream;207,6714
  typedef basic_fstream<wchar_t> 	wfstream;210,6825

/usr/include/c++/13/iostream,78
#define _GLIBCXX_IOSTREAM 34,1240
namespace std _GLIBCXX_VISIBILITY(44,1411

/usr/include/c++/13/istream,3142
#define _GLIBCXX_ISTREAM 34,1216
namespace std _GLIBCXX_VISIBILITY(43,1354
    class basic_istream 60,1916
      typedef _CharT			 		char_type;64,2054
      typedef typename _Traits::int_type 		int_type;65,2091
      typedef typename _Traits::pos_type 		pos_type;66,2144
      typedef typename _Traits::off_type 		off_type;67,2197
      typedef _Traits			 		traits_type;68,2250
      typedef basic_streambuf<_CharT,_CharT71,2320
      typedef basic_streambuf<_CharT, _Traits> 		__streambuf_type;71,2320
      typedef basic_ios<_CharT,_CharT72,2387
      typedef basic_ios<_CharT, _Traits>		__ios_type;72,2387
      typedef basic_istream<_CharT,_CharT73,2441
      typedef basic_istream<_CharT, _Traits>		__istream_type;73,2441
      typedef num_get<_CharT,_CharT74,2503
      typedef num_get<_CharT, istreambuf_iterator<istreambuf_iterator74,2503
 							__num_get_type;75,2572
      typedef ctype<_CharT>	      			__ctype_type;76,2596
      streamsize 		_M_gcount;84,2812
      basic_istream(95,3119
      ~basic_istream(105,3376
      operator>>(122,3841
      operator>>(126,3953
      operator>>(133,4072
      operator>>(170,5433
      operator>>(177,5571
      operator>>(184,5717
      operator>>(188,5810
      operator>>(192,5895
      operator>>(197,6019
      operator>>(201,6109
      operator>>(216,6559
      operator>>(220,6645
      operator>>(224,6732
      operator>>(231,6955
      operator>>(257,7553
      operator>>(269,7862
      operator>>(281,8175
      operator>>(293,8495
      operator>>(325,9305
      gcount(359,10584
      get(444,13600
      get(477,14801
      getline(517,16487
      basic_istream(696,22988
      basic_istream(703,23149
      operator=(operator=715,23422
      swap(722,23518
      typedef _Traits 					traits_type;783,25033
      typedef basic_streambuf<_CharT, _Traits> 		__streambuf_type;784,25073
      typedef basic_istream<_CharT, _Traits> 		__istream_type;785,25140
      typedef typename __istream_type::__ctype_type 786,25203
      typedef typename _Traits::int_type	787,25270
      operator bool(operator bool824,26746
    operator>>(846,27474
    operator>>(851,27668
    operator>>(893,29247
    operator>>(936,30741
    operator>>(942,31000
    operator>>(949,31343
    operator>>(958,31653
    operator>>(963,31874
    class basic_iostream980,32431
      typedef _CharT			 		char_type;988,32675
      typedef typename _Traits::int_type 		int_type;989,32712
      typedef typename _Traits::pos_type 		pos_type;990,32765
      typedef typename _Traits::off_type 		off_type;991,32818
      typedef _Traits			 		traits_type;992,32871
      typedef basic_istream<_CharT,_CharT995,32941
      typedef basic_istream<_CharT, _Traits>		__istream_type;995,32941
      typedef basic_ostream<_CharT,_CharT996,33003
      typedef basic_ostream<_CharT, _Traits>		__ostream_type;996,33003
      basic_iostream(1005,33276
      ~basic_iostream(1012,33469
      basic_iostream(1015,33513
      basic_iostream(1021,33666
      operator=(operator=1030,33905
      swap(1037,34002
    operator>>(1096,36073

/usr/include/c++/13/iterator,78
#define _GLIBCXX_ITERATOR 56,2273
# define __cpp_lib_null_iterators 71,2681

/usr/include/c++/13/latch,278
#define _GLIBCXX_LATCH 30,1159
namespace std _GLIBCXX_VISIBILITY(42,1378
#define __cpp_lib_latch 46,1457
  class latch48,1490
    max(52,1549
    constexpr explicit latch(55,1645
    count_down(63,1871
    try_wait(72,2118
    wait(76,2252
    arrive_and_wait(83,2435

/usr/include/c++/13/limits,2760
#define _GLIBCXX_NUMERIC_LIMITS 38,1358
# define __glibcxx_integral_traps 80,2832
#  define __glibcxx_float_has_denorm_loss 89,3011
#  define __glibcxx_float_traps 92,3096
#  define __glibcxx_float_tinyness_before 95,3181
#  define __glibcxx_double_has_denorm_loss 103,3368
#  define __glibcxx_double_traps 106,3455
#  define __glibcxx_double_tinyness_before 109,3542
#  define __glibcxx_long_double_has_denorm_loss 117,3740
#  define __glibcxx_long_double_traps 120,3837
#  define __glibcxx_long_double_tinyness_before 123,3934
#define __glibcxx_signed_b(128,4059
#define __glibcxx_min_b(130,4106
#define __glibcxx_max_b(133,4207
#define __glibcxx_digits_b(137,4353
#define __glibcxx_digits10_b(141,4496
#define __glibcxx_signed(144,4577
#define __glibcxx_min(146,4658
#define __glibcxx_max(148,4733
#define __glibcxx_digits(150,4808
#define __glibcxx_digits10(152,4889
#define __glibcxx_max_digits10(155,4975
namespace std _GLIBCXX_VISIBILITY(158,5038
  enum float_round_style167,5254
    round_indeterminate 169,5283
    round_toward_zero 170,5341
    round_to_nearest 171,5394
    round_toward_infinity 172,5474
    round_toward_neg_infinity 173,5531
  enum float_denorm_style182,5839
    denorm_indeterminate 185,5948
    denorm_absent 187,6032
    denorm_present 189,6107
  struct __numeric_limits_base202,6481
    struct numeric_limits 312,11275
      min(317,11500
      max(321,11629
      lowest(327,11833
      epsilon(333,12047
      round_error(337,12206
      infinity(341,12378
      quiet_NaN(346,12553
      signaling_NaN(351,12737
      denorm_min(357,12985
#define __INT_N(1480,55167
#define __INT_N_201103(1620,60970
#define __INT_N_U201103(1625,61135
#define __INT_N_201103(1631,61316
#define __INT_N_U201103(1632,61345
#undef __INT_N1663,62318
#undef __INT_N_2011031664,62333
#undef __INT_N_U2011031665,62355
#undef __glibcxx_float_has_denorm_loss1739,65265
#undef __glibcxx_float_traps1740,65304
#undef __glibcxx_float_tinyness_before1741,65333
#undef __glibcxx_double_has_denorm_loss1814,68269
#undef __glibcxx_double_traps1815,68309
#undef __glibcxx_double_tinyness_before1816,68339
#undef __glibcxx_long_double_has_denorm_loss1889,71375
#undef __glibcxx_long_double_traps1890,71420
#undef __glibcxx_long_double_tinyness_before1891,71455
#define __glibcxx_concat3_(1895,71528
#define __glibcxx_concat3(1896,71574
#define __glibcxx_float_n(1898,71635
#undef __glibcxx_float_n1995,75317
#undef __glibcxx_concat31996,75342
#undef __glibcxx_concat3_1997,75367
#undef __glibcxx_signed2079,78054
#undef __glibcxx_min2080,78078
#undef __glibcxx_max2081,78099
#undef __glibcxx_digits2082,78120
#undef __glibcxx_digits102083,78144
#undef __glibcxx_max_digits102084,78170

/usr/include/c++/13/list,153
#define _GLIBCXX_LIST 56,2261
namespace std _GLIBCXX_VISIBILITY(74,2619
namespace std _GLIBCXX_VISIBILITY(87,2921
#define __cpp_lib_erase_if 91,3000

/usr/include/c++/13/locale,33
#define _GLIBCXX_LOCALE	34,1207

/usr/include/c++/13/map,116
#define _GLIBCXX_MAP 56,2258
namespace std _GLIBCXX_VISIBILITY(74,2614
namespace std _GLIBCXX_VISIBILITY(93,3178

/usr/include/c++/13/math.h,3980
#define _GLIBCXX_MATH_H 34,1266
using std::abs;38,1312
using std::acos;39,1328
using std::asin;40,1345
using std::atan;41,1362
using std::atan2;42,1379
using std::cos;43,1397
using std::sin;44,1413
using std::tan;45,1429
using std::cosh;46,1445
using std::sinh;47,1462
using std::tanh;48,1479
using std::exp;49,1496
using std::frexp;50,1512
using std::ldexp;51,1530
using std::log;52,1548
using std::log10;53,1564
using std::modf;54,1582
using std::pow;55,1599
using std::sqrt;56,1615
using std::ceil;57,1632
using std::fabs;58,1649
using std::floor;59,1666
using std::fmod;60,1684
using std::fpclassify;63,1728
using std::isfinite;64,1751
using std::isinf;65,1772
using std::isnan;66,1790
using std::isnormal;67,1808
using std::signbit;68,1829
using std::isgreater;69,1849
using std::isgreaterequal;70,1871
using std::isless;71,1898
using std::islessequal;72,1917
using std::islessgreater;73,1941
using std::isunordered;74,1967
using std::acosh;78,2064
using std::asinh;79,2082
using std::atanh;80,2100
using std::cbrt;81,2118
using std::copysign;82,2135
using std::erf;83,2156
using std::erfc;84,2172
using std::exp2;85,2189
using std::expm1;86,2206
using std::fdim;87,2224
using std::fma;88,2241
using std::fmax;89,2257
using std::fmin;90,2274
using std::hypot;91,2291
using std::ilogb;92,2309
using std::lgamma;93,2327
using std::llrint;94,2346
using std::llround;95,2365
using std::log1p;96,2385
using std::log2;97,2403
using std::logb;98,2420
using std::lrint;99,2437
using std::lround;100,2455
using std::nearbyint;101,2474
using std::nextafter;102,2496
using std::nexttoward;103,2518
using std::remainder;104,2541
using std::remquo;105,2563
using std::rint;106,2582
using std::round;107,2599
using std::scalbln;108,2617
using std::scalbn;109,2637
using std::tgamma;110,2656
using std::trunc;111,2675
using std::assoc_laguerref;117,2917
using std::assoc_laguerrel;118,2945
using std::assoc_laguerre;119,2973
using std::assoc_legendref;120,3000
using std::assoc_legendrel;121,3028
using std::assoc_legendre;122,3056
using std::betaf;123,3083
using std::betal;124,3101
using std::beta;125,3119
using std::comp_ellint_1f;126,3136
using std::comp_ellint_1l;127,3163
using std::comp_ellint_1;128,3190
using std::comp_ellint_2f;129,3216
using std::comp_ellint_2l;130,3243
using std::comp_ellint_2;131,3270
using std::comp_ellint_3f;132,3296
using std::comp_ellint_3l;133,3323
using std::comp_ellint_3;134,3350
using std::cyl_bessel_if;135,3376
using std::cyl_bessel_il;136,3402
using std::cyl_bessel_i;137,3428
using std::cyl_bessel_jf;138,3453
using std::cyl_bessel_jl;139,3479
using std::cyl_bessel_j;140,3505
using std::cyl_bessel_kf;141,3530
using std::cyl_bessel_kl;142,3556
using std::cyl_bessel_k;143,3582
using std::cyl_neumannf;144,3607
using std::cyl_neumannl;145,3632
using std::cyl_neumann;146,3657
using std::ellint_1f;147,3681
using std::ellint_1l;148,3703
using std::ellint_1;149,3725
using std::ellint_2f;150,3746
using std::ellint_2l;151,3768
using std::ellint_2;152,3790
using std::ellint_3f;153,3811
using std::ellint_3l;154,3833
using std::ellint_3;155,3855
using std::expintf;156,3876
using std::expintl;157,3896
using std::expint;158,3916
using std::hermitef;159,3935
using std::hermitel;160,3956
using std::hermite;161,3977
using std::laguerref;162,3997
using std::laguerrel;163,4019
using std::laguerre;164,4041
using std::legendref;165,4062
using std::legendrel;166,4084
using std::legendre;167,4106
using std::riemann_zetaf;168,4127
using std::riemann_zetal;169,4153
using std::riemann_zeta;170,4179
using std::sph_besself;171,4204
using std::sph_bessell;172,4228
using std::sph_bessel;173,4252
using std::sph_legendref;174,4275
using std::sph_legendrel;175,4301
using std::sph_legendre;176,4327
using std::sph_neumannf;177,4352
using std::sph_neumannl;178,4377
using std::sph_neumann;179,4402
using std::lerp;183,4491

/usr/include/c++/13/memory,385
#define _GLIBCXX_MEMORY 45,1744
# define __cpp_lib_atomic_value_initialization 97,3012
namespace std _GLIBCXX_VISIBILITY(101,3147
enum class pointer_safety 119,3677
enum class pointer_safety { relaxed,119,3677
enum class pointer_safety { relaxed, preferred,119,3677
enum class pointer_safety { relaxed, preferred, strict 119,3677
# define __cpp_lib_parallel_algorithm 158,4846

/usr/include/c++/13/memory_resource,1662
#define _GLIBCXX_MEMORY_RESOURCE 33,1276
namespace std _GLIBCXX_VISIBILITY(66,2376
# define __cpp_lib_memory_resource 73,2541
# define __cpp_lib_memory_resource 76,2648
# define __cpp_lib_polymorphic_allocator 80,2720
  struct pool_options126,3961
  class __pool_resource144,4604
    memory_resource* resource(168,5231
    const pool_options _M_opts;175,5383
    _GLIBCXX_STD_C::pmr::vector<_BigBlock> _M_unpooled;180,5586
    const int _M_npools;182,5643
  class synchronized_pool_resource 192,5861
    synchronized_pool_resource(199,6063
    synchronized_pool_resource(204,6191
    synchronized_pool_resource(210,6367
    upstream_resource(223,6751
    pool_options options(227,6867
    do_is_equal(237,7118
    __pool_resource _M_impl;249,7514
    __gthread_key_t _M_key;250,7543
    mutable shared_mutex _M_mx;253,7682
  class unsynchronized_pool_resource 263,7889
    unsynchronized_pool_resource(270,8091
    unsynchronized_pool_resource(276,8252
    unsynchronized_pool_resource(281,8399
    upstream_resource(295,8834
    pool_options options(298,8909
    do_is_equal(308,9160
    __pool_resource _M_impl;316,9361
  class monotonic_buffer_resource 341,10474
    monotonic_buffer_resource(345,10560
    monotonic_buffer_resource(350,10746
    monotonic_buffer_resource(360,11061
    monotonic_buffer_resource(372,11548
    monotonic_buffer_resource(377,11667
    monotonic_buffer_resource(381,11810
    release(393,12210
    upstream_resource(412,12553
    do_allocate(418,12685
    do_deallocate(435,13184
    do_is_equal(439,13252
    _S_next_bufsize(453,13698
    memory_resource* const	_M_upstream;468,14177

/usr/include/c++/13/mutex,3649
#define _GLIBCXX_MUTEX 30,1159
namespace std _GLIBCXX_VISIBILITY(57,1788
  class __recursive_mutex_base70,2047
    typedef __gthread_recursive_mutex_t		__native_type;73,2095
    __native_type  _M_mutex;83,2447
    __recursive_mutex_base(85,2477
    ~__recursive_mutex_base(91,2637
  class recursive_mutex 106,3032
    typedef __native_type* 			native_handle_type;109,3103
    lock(118,3351
    try_lock(129,3563
    unlock(136,3704
    native_handle(143,3839
    class __timed_mutex_impl151,3989
      template<typename _Rep,154,4039
	_M_try_lock_for(156,4093
	_M_try_lock_until(172,4524
	_M_try_lock_until(189,5048
      template<typename _Clock,205,5522
	_M_try_lock_until(207,5580
  class timed_mutex235,6330
    typedef __native_type* 		  	native_handle_type;239,6429
    lock(248,6655
    try_lock(259,6857
      try_lock_for(268,7056
      try_lock_until(274,7248
    unlock(278,7378
    native_handle(285,7503
      _M_timedlock(292,7636
      _M_clocklock(297,7801
  class recursive_timed_mutex312,8325
    typedef __native_type* 			native_handle_type;317,8458
    lock(326,8742
    try_lock(337,8954
      try_lock_for(346,9163
      try_lock_until(352,9355
    unlock(356,9485
    native_handle(363,9620
      _M_timedlock(370,9763
      _M_clocklock(375,9941
  class timed_mutex383,10154
    mutex		_M_mut;385,10178
    condition_variable	_M_cv;386,10197
    ~timed_mutex(392,10297
    lock(398,10466
    try_lock(407,10636
    template<typename _Rep,416,10781
      try_lock_for(419,10863
    template<typename _Clock,428,11095
      try_lock_until(431,11181
    unlock(441,11432
  class recursive_timed_mutex451,11617
    mutex		_M_mut;453,11651
    condition_variable	_M_cv;454,11670
    thread::id		_M_owner;455,11700
    struct _Can_lock459,11833
      operator()(operator()463,11945
      const recursive_timed_mutex* _M_mx;466,12051
      thread::id _M_caller;467,12093
    ~recursive_timed_mutex(473,12179
    lock(479,12401
    try_lock(493,12747
    template<typename _Rep,507,13036
      try_lock_for(510,13118
    template<typename _Clock,524,13457
      try_lock_until(527,13543
    unlock(542,13901
  namespace __detail559,14210
      __try_lock_impl(564,14352
    template<typename _L0,577,14642
      __try_lock_impl(579,14710
  namespace __detail640,16365
    template<typename _L0,647,16767
      __lock_impl(649,16822
#define __cpp_lib_scoped_lock 730,19057
    class scoped_lock740,19355
      explicit scoped_lock(743,19395
      explicit scoped_lock(746,19504
      ~scoped_lock(750,19652
      tuple<_MutexTypes&...> _M_devices;757,19872
    class scoped_lock<scoped_lock761,19934
      explicit scoped_lock(765,20016
    class scoped_lock<scoped_lock773,20246
      explicit scoped_lock(778,20328
      explicit scoped_lock(781,20418
      ~scoped_lock(785,20548
      mutex_type&  _M_device;792,20721
  struct once_flag798,20843
    template<typename _Callable,814,21330
  struct once_flag::_Prepare_execution827,21807
      _Prepare_execution(831,21898
    ~_Prepare_execution(839,22183
  struct once_flag::_Prepare_execution862,22755
      _Prepare_execution(866,22846
    ~_Prepare_execution(873,23026
  struct once_flag914,24258
    enum _Bits 930,24889
    enum _Bits : int { _Init 930,24889
    enum _Bits : int { _Init = 0, _Active 930,24889
    enum _Bits : int { _Init = 0, _Active = 1, _Done 930,24889
    struct _Active_execution947,25425
      explicit _Active_execution(949,25460
      ~_Active_execution(951,25535
      once_flag& _M_flag;956,25732
    template<typename _Callable,960,25799

/usr/include/c++/13/new,1193
#define _NEW36,1346
  class bad_alloc 55,1732
    bad_alloc(58,1783
    virtual ~bad_alloc(67,2049
  class bad_array_new_length 74,2202
    bad_array_new_length(77,2264
    virtual ~bad_array_new_length(81,2409
  enum class align_val_t:align_val_t89,2575
  struct nothrow_t92,2620
  typedef void (*new_handler)new_handler103,2855
_GLIBCXX_NODISCARD void* operator new(126,3608
_GLIBCXX_NODISCARD inline void* operator new(operator new174,6454
_GLIBCXX_NODISCARD inline void* operator new[](operator new[]176,6561
inline void operator delete operator delete180,6721
inline void operator delete[](operator delete[]181,6791
namespace std186,6912
#define __cpp_lib_launder 189,6965
    launder(193,7106
  template<typename _Ret,199,7271
  template<typename _Ret,201,7409
# define __cpp_lib_hardware_interference_size 211,7780
  inline constexpr size_t hardware_destructive_interference_size 212,7834
  inline constexpr size_t hardware_constructive_interference_size 213,7925
namespace std219,8096
  struct destroying_delete_t223,8245
  inline constexpr destroying_delete_t destroying_delete{destroying_delete228,8377
# define __cpp_lib_destroying_delete 232,8548

/usr/include/c++/13/numbers,189
#define _GLIBCXX_NUMBERS 30,1165
namespace std _GLIBCXX_VISIBILITY(38,1271
#define __cpp_lib_math_constants 50,1497
#define __glibcxx_numbers(136,4308
#undef __glibcxx_numbers226,6864

/usr/include/c++/13/numeric,2884
#define _GLIBCXX_NUMERIC 56,2270
namespace std _GLIBCXX_VISIBILITY(90,2981
#define __cpp_lib_gcd_lcm 156,4506
#define __cpp_lib_gcd 158,4578
#define __cpp_lib_lcm 159,4608
  template<typename _Mn,162,4669
    gcd(164,4746
  template<typename _Mn,177,5235
    lcm(179,5312
# define __cpp_lib_interpolate 207,6165
    midpoint(214,6359
    midpoint(249,7306
#define __cpp_lib_constexpr_numeric 259,7534
  template<typename _InputIterator,284,8446
  template<typename _InputIterator, typename _Tp,284,8446
    reduce(287,8556
  template<typename _InputIterator,322,9883
    reduce(325,9973
    reduce(342,10648
  template<typename _InputIterator1,366,11610
  template<typename _InputIterator1, typename _InputIterator2,366,11610
  template<typename _InputIterator1, typename _InputIterator2, typename _Tp,366,11610
	   typename _BinaryOperation1,367,11687
    transform_reduce(370,11780
  template<typename _InputIterator1,410,13247
  template<typename _InputIterator1, typename _InputIterator2,410,13247
    transform_reduce(413,13364
  template<typename _InputIterator,435,14187
  template<typename _InputIterator, typename _Tp,435,14187
	   typename _BinaryOperation,436,14237
    transform_reduce(439,14327
  template<typename _InputIterator,478,15817
  template<typename _InputIterator, typename _OutputIterator,478,15817
  template<typename _InputIterator, typename _OutputIterator, typename _Tp,478,15817
    exclusive_scan(482,15969
  template<typename _InputIterator,513,17054
  template<typename _InputIterator, typename _OutputIterator,513,17054
    exclusive_scan(516,17182
  template<typename _InputIterator,541,18202
  template<typename _InputIterator, typename _OutputIterator,541,18202
	   typename _BinaryOperation,542,18264
    inclusive_scan(545,18354
  template<typename _InputIterator,570,19368
  template<typename _InputIterator, typename _OutputIterator,570,19368
    inclusive_scan(574,19506
  template<typename _InputIterator,604,20582
    inclusive_scan(607,20696
  template<typename _InputIterator,631,21814
  template<typename _InputIterator, typename _OutputIterator,631,21814
  template<typename _InputIterator, typename _OutputIterator, typename _Tp,631,21814
	   typename _BinaryOperation,632,21890
    transform_exclusive_scan(635,21992
  template<typename _InputIterator,670,23327
  template<typename _InputIterator, typename _OutputIterator,670,23327
	   typename _BinaryOperation,671,23389
	   typename _BinaryOperation, typename _UnaryOperation,671,23389
    transform_inclusive_scan(674,23505
  template<typename _InputIterator,704,24735
  template<typename _InputIterator, typename _OutputIterator,704,24735
	  typename _BinaryOperation,705,24797
    transform_inclusive_scan(708,24898
#  define _PSTL_NUMERIC_FORWARD_DECLARED 740,25802
# define __cpp_lib_parallel_algorithm 744,25900

/usr/include/c++/13/optional,3731
#define _GLIBCXX_OPTIONAL 31,1208
namespace std _GLIBCXX_VISIBILITY(54,1727
# define __cpp_lib_optional 64,1904
# define __cpp_lib_optional 66,1969
# define __cpp_lib_optional 68,2011
  struct nullopt_t75,2147
    enum class _Construct 82,2339
    enum class _Construct { _Token 82,2339
    explicit constexpr nullopt_t(85,2432
  template<typename _Fn> struct _Optional_func 91,2610
  template<typename _Fn> struct _Optional_func { _Fn& _M_f;91,2610
  class bad_optional_access 98,2805
    const char* what(104,2950
    struct _Optional_payload_base116,3323
	_Optional_payload_base(125,3543
      template<typename _Up,130,3684
	_Optional_payload_base(132,3743
      _Optional_payload_base(141,4056
      _Optional_payload_base(151,4385
      _M_copy_assign(174,5177
      _M_move_assign(189,5537
      struct _Empty_byte 204,5941
      template<typename _Up,206,5972
      _Storage<_Stored_type> _M_payload;269,7606
	_M_construct(275,7730
      _M_destroy(284,7983
      template<typename _Fn,291,8114
	_M_apply(293,8173
      _M_get(306,8586
      _M_get(310,8682
      _M_reset(315,8840
      operator=(operator=362,10379
      operator=(operator=385,11103
      operator=(operator=409,11860
      operator=(operator=418,12053
    class _Optional_base_impl447,13237
	_M_construct(456,13518
      _M_destruct(464,13732
      _M_reset(469,13905
      constexpr bool _M_is_engaged(472,13990
      _M_get(477,14201
      _M_get(484,14365
    class optional707,21823
      static_assert(!is_same_v<is_same_v721,22227
      static_assert(!is_same_v<is_same_v722,22289
      constexpr optional(739,22825
      constexpr optional(741,22866
	       _Requires<_Requires745,23007
	       _Requires<_Requires754,23296
	       _Requires<_Requires763,23597
			 __not_<__not_766,23718
      template<typename _Up,775,23915
	       _Requires<_Requires776,23944
			 __not_<__not_779,24073
      template<typename _Up,788,24280
	       _Requires<_Requires789,24309
      template<typename _Up,801,24612
	       _Requires<_Requires802,24641
      template<typename... _Args,814,24962
	       _Requires<_Requires815,24996
      template<typename _Up, typename... _Args,821,25231
	       _Requires<_Requires822,25279
      operator=(operator=834,25688
			    __not_<__not_843,25870
			    is_constructible<is_constructible845,25944
	operator=(operator=848,26030
	enable_if_t<enable_if_t862,26354
			    __not_<__not_866,26535
	operator=(operator=868,26603
	enable_if_t<enable_if_t888,26994
			    __not_<__not_892,27161
	operator=(operator=894,27229
	enable_if_t<enable_if_t915,27629
	emplace(916,27683
      template<typename _Up,924,27873
	enable_if_t<enable_if_t926,27943
	emplace(928,28027
      swap(941,28396
      operator->(963,28949
      operator->(967,29056
      constexpr explicit operator bool(operator bool986,29518
      constexpr bool has_value(989,29615
      _GLIBCXX20_CONSTEXPR void reset(1184,34424
      template<typename _Fn,1190,34589
	optional(1192,34655
    operator<=>(operator<=>1287,37666
    operator==(operator==1296,37896
    operator<=>(operator<=>1302,38076
    operator==(operator==1307,38224
    operator!=(operator!=1312,38355
    operator!=(operator!=1317,38504
    operator<(1322,38653
    operator<(1327,38788
    operator>(1332,38936
    operator>(1337,39084
    operator<=(operator<=1342,39219
    operator<=(operator<=1347,39350
    operator>=(operator>=1352,39485
    operator>=(operator>=1357,39620
    operator<=>(operator<=>1439,42308
      operator()(operator()1489,44097
    struct hash<hash1503,44588
    struct __is_fast_hash<__is_fast_hash1512,44867

/usr/include/c++/13/ostream,2268
#define _GLIBCXX_OSTREAM 34,1218
namespace std _GLIBCXX_VISIBILITY(43,1370
    class basic_ostream 60,1934
      typedef _CharT			 		char_type;64,2063
      typedef typename _Traits::int_type 		int_type;65,2100
      typedef typename _Traits::pos_type 		pos_type;66,2153
      typedef typename _Traits::off_type 		off_type;67,2206
      typedef _Traits			 		traits_type;68,2259
      typedef basic_streambuf<_CharT,_CharT71,2329
      typedef basic_streambuf<_CharT, _Traits> 		__streambuf_type;71,2329
      typedef basic_ios<_CharT,_CharT72,2396
      typedef basic_ios<_CharT, _Traits>		__ios_type;72,2396
      typedef basic_ostream<_CharT,_CharT73,2450
      typedef basic_ostream<_CharT, _Traits>		__ostream_type;73,2450
      typedef num_put<_CharT,_CharT74,2512
      typedef num_put<_CharT, ostreambuf_iterator<ostreambuf_iterator74,2512
      							__num_put_type;75,2581
      typedef ctype<_CharT>	      			__ctype_type;76,2610
      basic_ostream(86,2926
      ~basic_ostream(95,3150
      operator<<(110,3567
      operator<<(119,3839
      operator<<(129,4111
      operator<<(168,5536
      operator<<(172,5619
      operator<<(176,5711
      operator<<(183,5846
      operator<<(194,6123
      operator<<(203,6378
      operator<<(207,6466
      operator<<(222,6919
      operator<<(226,7004
      operator<<(234,7215
      operator<<(241,7437
      operator<<(250,7679
      operator<<(259,7921
      operator<<(268,8166
      operator<<(277,8415
      operator<<(292,8855
      operator<<(297,8972
      operator<<(304,9134
      basic_ostream(431,13441
      basic_ostream(436,13576
      basic_ostream(440,13688
      operator=(operator=449,13904
      swap(456,14000
      _M_write(467,14205
      operator bool(operator bool532,16258
    operator<<(554,17003
    operator<<(564,17285
    operator<<(570,17484
    operator<<(581,17768
    operator<<(586,17958
    operator<<(645,19964
    operator<<(662,20469
    operator<<(675,20810
    operator<<(680,21020
    operator<<(801,25205
    class __syncbuf_base 809,25413
      _S_get(813,25517
      __syncbuf_base(823,25755
      basic_streambuf<basic_streambuf827,25860
      struct _Restore854,26699
	~_Restore(856,26729

/usr/include/c++/13/queue,32
#define _GLIBCXX_QUEUE 56,2264

/usr/include/c++/13/random,33
#define _GLIBCXX_RANDOM 30,1162

/usr/include/c++/13/ranges,47892
#define _GLIBCXX_RANGES 31,1184
namespace std _GLIBCXX_VISIBILITY(60,1652
    class empty_view78,2175
      static constexpr _Tp* begin(82,2259
      static constexpr _Tp* end(83,2324
      static constexpr _Tp* data(84,2387
      static constexpr size_t size(85,2451
      static constexpr bool empty(86,2511
      struct __box 98,2832
	using std::optional<_Tp>::optional;optional100,2880
	operator=(operator=118,3319
	operator=(operator=133,3603
      struct __box<__box155,4283
	__box(164,4467
	__box(170,4581
	  requires constructible_from<constructible_from176,4710
	  __box(178,4778
	operator=(operator=191,5268
	operator=(operator=204,5583
	has_value(216,5868
	operator*(220,5932
	operator*(224,5999
	operator->(228,6066
	operator->(232,6152
    class single_view 239,6366
      single_view(245,6541
      single_view(251,6686
	requires constructible_from<constructible_from259,6953
	single_view(261,7017
      begin(267,7195
      begin(271,7271
      end(275,7347
      end(279,7425
      size(283,7512
      data(287,7576
      data(291,7666
      [[no_unique_address]] __detail::__box<_Tp> _M_value;295,7748
  namespace __detail301,7883
      constexpr auto __to_signed_like(304,7935
      struct __iota_view_iter_cat346,9158
      struct __iota_view_iter_cat<__iota_view_iter_cat350,9238
      struct _Iterator 363,9654
	_S_iter_concept(367,9753
	_Iterator(389,10390
	operator*(393,10459
	operator++(397,10572
	operator++(404,10641
      struct _Sentinel551,14231
	_M_equal(555,14293
	_M_distance_from(559,14386
	_Sentinel(568,14559
	operator==(operator==572,14635
	  requires sized_sentinel_for<_Bound,_Bound577,14821
	  requires sized_sentinel_for<_Bound,_Bound582,15006
namespace views673,17645
    inline constexpr empty_view<_Tp> empty{empty676,17688
  namespace __detail678,17735
  struct _Single685,17911
      operator() operator()689,17999
  inline constexpr _Single single{single694,18198
  namespace __detail696,18236
  struct _Iota702,18403
      operator() operator()706,18487
    template<typename _Tp,709,18589
      requires __detail::__can_iota_view<__detail::__can_iota_view710,18630
      operator() operator()712,18702
  inline constexpr _Iota iota{iota716,18844
  namespace __detail720,18919
    template<typename _Val,722,18944
    template<typename _Val, typename _CharT,722,18944
      concept __stream_extractable723,19007
  template<movable _Val,727,19140
  template<movable _Val, typename _CharT,727,19140
	   typename _Traits 728,19182
      struct _Iterator755,19887
	_Iterator(763,20061
	operator++(773,20325
	operator++(780,20419
	operator*(784,20458
	operator==(operator==788,20525
	basic_istream_view* _M_parent;792,20624
	_M_at_end(795,20663
    using istream_view 803,20786
    using wistream_view 806,20870
namespace views808,20932
  namespace __detail810,20950
    template<typename _Tp,812,20975
    struct _Istream819,21217
      template<typename _CharT,821,21243
	requires __detail::__can_istream_view<_Tp,_Tp824,21379
    inline constexpr _Istream<_Tp> istream;829,21550
namespace __detail835,21663
  struct _Empty 837,21684
  template<bool _Present,843,21914
    using __maybe_present_t 844,21954
    using __maybe_present_t = __conditional_t<_Present, _Tp,844,21954
  template<bool _Const,847,22076
    using __maybe_const_t 848,22114
    using __maybe_const_t = __conditional_t<_Const, const _Tp,848,22114
using __detail::__maybe_const_t;853,22253
namespace views::__adaptor855,22287
  template<typename _Adaptor,858,22383
    concept __adaptor_invocable859,22432
  template<typename _Adaptor,864,22628
    concept __adaptor_partial_app_viable 865,22677
  template<typename _Adaptor,869,22861
  template<typename _Lhs,872,22932
  struct _RangeAdaptorClosure880,23260
    template<typename _Self,883,23350
      requires derived_from<derived_from884,23396
	&& __adaptor_invocable<__adaptor_invocable885,23469
      operator|(887,23536
    template<typename _Lhs,892,23772
      requires derived_from<derived_from893,23815
	&& derived_from<derived_from894,23871
      operator|(896,23944
    struct _RangeAdaptor912,24727
	requires __adaptor_partial_app_viable<__adaptor_partial_app_viable917,24920
	operator()(operator()919,24995
    concept __closure_has_simple_call_op 929,25336
  template<typename _Adaptor,933,25553
    concept __adaptor_has_simple_extra_args 934,25602
  template<typename _Adaptor,939,25870
    struct _Partial 940,25919
      tuple<_Args...> _M_args;942,25968
      _Partial(945,26016
	requires __adaptor_invocable<__adaptor_invocable952,26246
	requires __adaptor_invocable<__adaptor_invocable963,26567
  template<typename _Adaptor,980,27087
  template<typename _Adaptor,1011,28117
    requires __adaptor_has_simple_extra_args<__adaptor_has_simple_extra_args1012,28166
	operator()(operator()1028,28716
  template<typename _Adaptor,1041,29117
    requires __adaptor_has_simple_extra_args<__adaptor_has_simple_extra_args1042,29162
	operator()(operator()1056,29538
  template<typename _Lhs,1062,29696
  template<typename _Lhs, typename _Rhs,1062,29696
    concept __pipe_invocable1063,29754
  template<typename _Lhs,1068,29981
    struct _Pipe 1069,30022
      [[no_unique_address]] _Lhs _M_lhs;1071,30068
      [[no_unique_address]] _Rhs _M_rhs;1072,30109
      _Pipe(1075,30167
	requires __pipe_invocable<__pipe_invocable1088,30614
  template<typename _Lhs,1102,31171
	operator()(operator()1118,31671
    class range_adaptor_closure1128,31991
    class ref_view 1134,32146
      _Range* _M_r;1137,32226
	requires convertible_to<convertible_to1144,32412
	ref_view(1147,32505
      base(1153,32693
      begin(1157,32772
      end(1161,32867
      empty(1165,32944
    ref_view(_Range&) -> ref_view<ref_view1178,33304
    inline constexpr bool enable_borrowed_range<enable_borrowed_range1181,33373
    class owning_view 1186,33564
      _Range _M_r 1189,33650
      owning_view(1195,33780
      begin(1220,34374
      end(1224,34462
      empty(1236,34746
      empty(1240,34863
    inline constexpr bool enable_borrowed_range<enable_borrowed_range1261,35435
  namespace views1264,35538
    namespace __detail1266,35560
    struct _All 1275,35837
	_S_noexcept(1279,35948
	operator() operator()1294,36383
    inline constexpr _All all;1308,36780
      using all_t 1311,36848
  namespace __detail1314,36931
      struct __non_propagating_cache1317,36983
      struct __non_propagating_cache<__non_propagating_cache1327,37344
	__non_propagating_cache(1333,37482
	__non_propagating_cache(1337,37565
	operator=(operator=1341,37696
	operator=(operator=1349,37881
	operator=(operator=1357,38040
	operator bool(operator bool1365,38179
	operator*(1369,38263
	operator*(1373,38336
	  _M_emplace_deref(1378,38437
      struct _CachedPosition1388,38680
	_M_has_value(1391,38733
	_M_get(1395,38805
	_M_set(1402,38913
      struct _CachedPosition<_CachedPosition1407,39019
	_M_has_value(1411,39137
	_M_get(1415,39225
	_M_set(1422,39332
      struct _CachedPosition<_CachedPosition1434,39697
	_CachedPosition(1446,39922
	operator=(operator=1453,40112
	_M_has_value(1462,40322
	_M_get(1466,40403
	_M_set(1473,40532
  namespace __detail1481,40707
      struct __filter_view_iter_cat1484,40761
      struct __filter_view_iter_cat<__filter_view_iter_cat1488,40843
	_S_iter_cat(1492,40922
  template<input_range _Vp,1507,41360
    class filter_view 1510,41486
      struct _Iterator 1515,41601
	_S_iter_concept(1519,41710
	_Iterator(1545,42363
	operator*(1559,42665
	operator++(1569,42868
	operator++(1578,43066
      struct _Sentinel1623,44148
	__equal(1629,44256
	_Sentinel(1636,44391
	base(1641,44502
	operator==(operator==1645,44560
      _Vp _M_base 1649,44656
      [[no_unique_address]] __detail::__box<_Pred> _M_pred;1650,44683
      [[no_unique_address]] __detail::_CachedPosition<_Vp> _M_cached_begin;1651,44743
      filter_view(1659,44960
      pred(1672,45276
      begin(1676,45349
      end(1690,45715
  template<typename _Range,1699,45867
    filter_view(_Range&&, _Pred) -> filter_view<filter_view1700,45911
  namespace views1702,45990
    namespace __detail1704,46012
      template<typename _Range,1706,46041
    struct _Filter 1711,46224
      template<viewable_range _Range,1713,46285
	requires __detail::__can_filter_view<__detail::__can_filter_view1714,46339
	operator() operator()1716,46408
    inline constexpr _Filter filter;1726,46709
  template<input_range _Vp,1729,46770
    class transform_view 1734,47016
	using _Base 1738,47138
	struct __iter_cat1741,47222
	struct __iter_cat<__iter_cat1746,47315
	  _S_iter_cat(1750,47370
	struct _Iterator 1774,47981
	  _S_iter_concept(1781,48167
	  _Iterator(1808,48990
	      && convertible_to<convertible_to1816,49191
	    : _M_current(1817,49245
	    : _M_current(std::move(__i._M_current)), _M_parent(1817,49245
	  operator*(1829,49512
	  operator++(1834,49692
	  operator++(1841,49775
	    requires sized_sentinel_for<iterator_t<iterator_t1938,52490
	struct _Sentinel1955,52940
	    __distance_from(1963,53136
	    __equal(1968,53282
	  _Sentinel(1977,53485
	      && convertible_to<convertible_to1984,53623
	    : _M_end(1985,53684
	  base(1989,53760
	    requires sentinel_for<sentinel_for1993,53825
	    operator==(operator==1996,53960
	  template<bool _Const2,1999,54064
	    requires sized_sentinel_for<sized_sentinel_for2001,54154
	    operator-(2003,54275
	  template<bool _Const2,2006,54387
	    requires sized_sentinel_for<sized_sentinel_for2008,54477
	    operator-(2010,54598
      _Vp _M_base 2016,54744
      [[no_unique_address]] __detail::__box<_Fp> _M_fun;2017,54771
      transform_view(2025,54966
      begin(2038,55285
      end(2048,55608
  template<typename _Range,2076,56448
    transform_view(_Range&&, _Fp) -> transform_view<transform_view2077,56490
  namespace views2079,56571
    namespace __detail2081,56593
      template<typename _Range,2083,56622
    struct _Transform 2088,56807
      template<viewable_range _Range,2090,56874
	requires __detail::__can_transform_view<__detail::__can_transform_view2091,56926
	operator() operator()2093,56996
    inline constexpr _Transform transform;2103,57299
    class take_view 2107,57387
	using _CI 2111,57494
	struct _Sentinel2115,57610
	  _Sentinel(2125,57808
	    requires _Const && convertible_to<convertible_to2131,57925
	    : _M_end(2132,58000
	  base(2136,58076
	  operator==(operator==2140,58140
	    requires sentinel_for<sentinel_for2145,58369
	  operator==(operator==2147,58460
      _Vp _M_base 2153,58621
      range_difference_t<_Vp> _M_count 2154,58648
      take_view(2160,58787
      begin(2173,59114
      end(2207,59905
      -> take_view<take_view2254,61101
    inline constexpr bool enable_borrowed_range<enable_borrowed_range2257,61169
  namespace views2260,61270
    namespace __detail2262,61292
      template<typename _CharT,2273,61584
	inline constexpr bool __is_basic_string_view<__is_basic_string_view2274,61634
      template<typename _Iter,2280,61807
      template<typename _Iter, typename _Sent,2280,61807
	inline constexpr bool __is_subrange<__is_subrange2281,61875
      template<typename _Winc,2286,62032
	inline constexpr bool __is_iota_view<__is_iota_view2287,62080
      template<typename _Range,2296,62363
    struct _Take 2301,62538
      template<viewable_range _Range,2303,62595
	operator() operator()2306,62741
    inline constexpr _Take take;2346,64319
  template<view _Vp,2349,64376
    class take_while_view 2352,64529
	struct _Sentinel2355,64642
	  _Sentinel(2367,64876
	    requires _Const && convertible_to<convertible_to2373,65031
	    : _M_end(2374,65106
	    : _M_end(__s._M_end), _M_pred(2374,65106
	  base(2378,65193
	  operator==(operator==2381,65254
	    requires sentinel_for<sentinel_for2386,65500
	  operator==(operator==2388,65591
      _Vp _M_base 2394,65765
      [[no_unique_address]] __detail::__box<_Pred> _M_pred;2395,65792
      take_while_view(2403,65994
      pred(2416,66314
      begin(2420,66382
	&& indirect_unary_predicate<indirect_unary_predicate2425,66546
      end(2429,66674
	&& indirect_unary_predicate<indirect_unary_predicate2435,66882
  template<typename _Range,2440,67049
      -> take_while_view<take_while_view2442,67130
  namespace views2444,67186
    namespace __detail2446,67208
      template<typename _Range,2448,67237
    struct _TakeWhile 2453,67428
      template<viewable_range _Range,2455,67495
	requires __detail::__can_take_while_view<__detail::__can_take_while_view2456,67549
	operator() operator()2458,67622
    inline constexpr _TakeWhile take_while;2468,67930
    class drop_view 2472,68019
      _Vp _M_base 2475,68098
      range_difference_t<_Vp> _M_count 2476,68125
      static constexpr bool _S_needs_cached_begin2480,68328
	__detail::__maybe_present_t<__detail::__maybe_present_t2483,68470
				      _M_cached_begin;2485,68562
      drop_view(2491,68684
      begin(2505,69112
      end(2532,69912
      -> drop_view<drop_view2558,70627
    inline constexpr bool enable_borrowed_range<enable_borrowed_range2561,70695
  namespace views2564,70796
    namespace __detail2566,70818
      template<typename _Range,2572,70975
    struct _Drop 2577,71150
      template<viewable_range _Range,2579,71207
	operator() operator()2582,71353
    inline constexpr _Drop drop;2626,72821
  template<view _Vp,2629,72878
    class drop_while_view 2632,73031
      _Vp _M_base 2635,73129
      [[no_unique_address]] __detail::__box<_Pred> _M_pred;2636,73156
      [[no_unique_address]] __detail::_CachedPosition<_Vp> _M_cached_begin;2637,73216
      drop_while_view(2645,73434
      pred(2658,73754
      begin(2662,73822
      end(2676,74160
  template<typename _Range,2680,74219
      -> drop_while_view<drop_while_view2682,74300
  template<typename _Tp,2684,74356
    inline constexpr bool enable_borrowed_range<enable_borrowed_range2685,74397
  namespace views2688,74511
    namespace __detail2690,74533
      template<typename _Range,2692,74562
    struct _DropWhile 2697,74753
      template<viewable_range _Range,2699,74820
	requires __detail::__can_drop_while_view<__detail::__can_drop_while_view2700,74874
	operator() operator()2702,74947
    inline constexpr _DropWhile drop_while;2713,75260
    class join_view 2718,75418
      using _InnerRange 2721,75497
	using _Base 2724,75576
	using _Outer_iter 2727,75660
	using _Inner_iter 2730,75737
	static constexpr bool _S_ref_is_glvalue2733,75833
	struct __iter_cat2737,75958
	struct __iter_cat<__iter_cat2744,76137
	  _S_iter_cat(2748,76202
	struct _Iterator 2772,77094
	  _M_satisfy(2782,77362
	  _S_iter_concept(2804,77904
	  optional<_Inner_iter> _M_inner;2823,78520
	  _Iterator(2837,78986
	      && convertible_to<convertible_to2845,79196
	      && convertible_to<convertible_to2846,79251
	    : _M_outer(2847,79314
	    : _M_outer(std::move(__i._M_outer)), _M_inner(2847,79314
	      _M_parent(2848,79391
	  operator*(2852,79459
	  operator++(2864,79775
	  operator++(2881,80102
	struct _Sentinel2945,81924
	    __equal(2953,82110
	  _Sentinel(2962,82311
	    requires _Const && convertible_to<convertible_to2968,82447
	    : _M_end(2969,82522
	    requires sentinel_for<sentinel_for2973,82593
	    operator==(operator==2976,82728
      _Vp _M_base 2982,82867
	__detail::__non_propagating_cache<remove_cv_t<_InnerRange>> _M_inner;2984,82922
      join_view(2990,83097
      begin(3003,83361
      end(3020,83785
    explicit join_view(_Range&&) -> join_view<join_view3048,84636
  namespace views3050,84706
    namespace __detail3052,84728
    struct _Join 3059,84912
	operator() operator()3064,85067
    inline constexpr _Join join;3074,85342
  namespace __detail3077,85399
      concept __tiny_range 3083,85507
      struct __lazy_split_view_outer_iter_cat3089,85719
      struct __lazy_split_view_outer_iter_cat<__lazy_split_view_outer_iter_cat3093,85811
      struct __lazy_split_view_inner_iter_cat3097,85951
      struct __lazy_split_view_inner_iter_cat<__lazy_split_view_inner_iter_cat3101,86043
	_S_iter_cat(3105,86142
  template<input_range _Vp,3118,86446
    class lazy_split_view 3123,86703
	using _Base 3127,86832
	struct _OuterIter3133,86965
	  __at_end(3141,87199
	  __current(3149,87566
	  __current(3158,87733
	    __detail::__maybe_present_t<__detail::__maybe_present_t3169,87946
					iterator_t<_Base>> _M_current;3170,87999
						   forward_iterator_tag,3175,88146
	  struct value_type 3180,88330
	    value_type(3189,88500
	    begin(3194,88606
	    end(3198,88702
	  _OuterIter(3205,88819
	    : _M_parent(3212,89030
	      _M_current(3213,89058
	      && convertible_to<convertible_to3219,89179
	    : _M_parent(3220,89240
	    : _M_parent(__i._M_parent), _M_current(3220,89240
	      _M_trailing_empty(3221,89312
	  operator*(3225,89392
	  operator++(3229,89472
	  operator++(3270,90497
	  operator==(operator==3291,90920
	struct _InnerIter3299,91103
	  __at_end(3306,91266
	  _M_i_current(3338,91976
	  _M_i_current(3342,92055
	  _InnerIter(3358,92511
	  operator*(3371,92822
	  operator++(3375,92900
	  operator++(3386,93127
	  operator==(operator==3404,93473
      _Vp _M_base 3420,94047
      _Pattern _M_pattern 3421,94074
	  __detail::__non_propagating_cache<iterator_t<_Vp>>> _M_current;3424,94192
      lazy_split_view(3433,94405
	requires constructible_from<constructible_from3438,94569
	  && constructible_from<constructible_from3439,94625
	lazy_split_view(3441,94707
      begin(3455,95066
      end(3485,95851
  template<typename _Range,3496,96089
      -> lazy_split_view<lazy_split_view3498,96178
      -> lazy_split_view<lazy_split_view3502,96335
  namespace views3504,96420
    namespace __detail3506,96442
      template<typename _Range,3508,96471
    struct _LazySplit 3513,96668
      template<viewable_range _Range,3515,96735
	requires __detail::__can_lazy_split_view<__detail::__can_lazy_split_view3516,96792
	operator() operator()3518,96868
    inline constexpr _LazySplit lazy_split;3535,97551
  template<forward_range _Vp,3538,97619
  class split_view 3542,97812
    _Vp _M_base 3545,97897
    _Pattern _M_pattern 3546,97922
    __detail::__non_propagating_cache<subrange<iterator_t<_Vp>>> _M_cached_begin;3547,97960
    split_view(3558,98226
      requires constructible_from<constructible_from3563,98386
	&& constructible_from<constructible_from3564,98447
    split_view(3566,98530
    begin(3580,98880
    end(3588,99072
    _M_find_next(3597,99261
    struct _Iterator3609,99533
      _Iterator(3628,100075
      base(3637,100308
      operator*(3641,100380
      operator++(3645,100476
      operator++(3665,100891
      operator==(operator==3673,101004
    struct _Sentinel3680,101176
      _M_equal(3686,101288
      _Sentinel(3693,101464
      operator==(operator==3698,101583
  template<typename _Range,3703,101693
      -> split_view<split_view3705,101777
      -> split_view<split_view3709,101926
  namespace views3711,102006
    namespace __detail3713,102028
      template<typename _Range,3715,102057
    struct _Split 3720,102244
      template<viewable_range _Range,3722,102303
	requires __detail::__can_split_view<__detail::__can_split_view3723,102360
	operator() operator()3725,102431
    inline constexpr _Split split;3737,102810
  namespace views3740,102869
    struct _Counted3742,102891
      operator() operator()3746,102985
    inline constexpr _Counted counted{counted3758,103351
    class common_view 3763,103500
      _Vp _M_base 3766,103583
      common_view(3772,103716
      begin(3785,103976
      end(3805,104518
    common_view(_Range&&) -> common_view<common_view3834,105328
    inline constexpr bool enable_borrowed_range<enable_borrowed_range3837,105418
  namespace views3840,105521
    namespace __detail3842,105543
    struct _Common 3853,105854
	operator() operator()3859,106054
    inline constexpr _Common common;3870,106338
    class reverse_view 3875,106458
      static constexpr bool _S_needs_cached_begin3878,106543
      _Vp _M_base 3883,106717
	__detail::__maybe_present_t<__detail::__maybe_present_t3885,106772
				      _M_cached_begin;3887,106864
      reverse_view(3893,106998
      begin(3906,107283
      end(3927,107993
    reverse_view(_Range&&) -> reverse_view<reverse_view3944,108466
    inline constexpr bool enable_borrowed_range<enable_borrowed_range3947,108558
  namespace views3950,108662
    namespace __detail3952,108684
      template<typename _Iter,3957,108796
	  __is_reversible_subrange<__is_reversible_subrange3959,108871
    struct _Reverse 3974,109313
	operator() operator()3981,109597
    inline constexpr _Reverse reverse;4003,110308
  namespace __detail4006,110371
    template<typename _Tp,4008,110396
    concept __has_tuple_element 4009,110435
    template<typename _Tp,4018,110690
      concept __returnable_element4019,110729
  template<input_range _Vp,4023,110842
    class elements_view 4029,111137
      elements_view(4035,111323
      begin(4048,111591
      end(4056,111853
      end(4060,112007
	using _Base 4081,112645
	struct __iter_cat4084,112729
	struct __iter_cat<__iter_cat4089,112822
	  static auto _S_iter_cat(4092,112862
	struct _Iterator 4112,113490
	  static constexpr decltype(4119,113646
	  _S_iter_concept(4132,114002
	  _Iterator(4156,114750
	    requires _Const && convertible_to<convertible_to4162,114890
	    : _M_current(4163,114965
	  operator*(4175,115219
	  operator++(4179,115307
	  operator++(4186,115390
	    requires sized_sentinel_for<iterator_t<iterator_t4285,118148
	struct _Sentinel4292,118344
	    _M_equal(4297,118421
	    _M_distance_from(4302,118561
	  _Sentinel(4312,118819
	      && convertible_to<convertible_to4319,118972
	    : _M_end(4320,119033
	  base(4324,119113
	    requires sentinel_for<sentinel_for4328,119178
	    operator==(operator==4331,119313
	  template<bool _Const2,4334,119418
	    requires sized_sentinel_for<sized_sentinel_for4336,119508
	    operator-(4338,119629
	  template<bool _Const2,4341,119742
	    requires sized_sentinel_for<sized_sentinel_for4343,119832
	    operator-(4345,119953
      _Vp _M_base 4351,120100
  template<typename _Tp,4354,120135
    inline constexpr bool enable_borrowed_range<enable_borrowed_range4355,120172
    using keys_view 4359,120310
    using values_view 4362,120401
  namespace views4364,120466
    namespace __detail4366,120488
      template<size_t _Nm,4368,120517
      struct _Elements 4374,120722
	  requires __detail::__can_elements_view<__detail::__can_elements_view4377,120820
	  operator() operator()4379,120893
      inline constexpr _Elements<_Nm> elements;4388,121115
    inline constexpr auto keys 4389,121163
    inline constexpr auto values 4390,121209
#define __cpp_lib_ranges_zip 4395,121308
  namespace __detail4397,121346
      concept __zip_is_common 4400,121401
      struct __tuple_or_pair4405,121657
    template<typename _Tp,4408,121731
      using __tuple_or_pair_t 4413,121882
    template<typename _Fp,4415,121955
      __tuple_transform(4417,122020
    template<typename _Fp,4425,122301
      __tuple_for_each(4427,122366
  class zip_view 4437,122693
    tuple<_Vs...> _M_views;4439,122756
    zip_view(4448,122918
    begin(4453,123015
    begin(4457,123184
    end(4461,123343
    end(4472,123802
    size(4483,124261
    size(4492,124566
  namespace __detail4508,125105
    template<bool _Const,4510,125130
      concept __all_random_access4511,125173
    template<bool _Const,4514,125271
      concept __all_bidirectional4515,125314
    template<bool _Const,4518,125412
      concept __all_forward4519,125455
    template<bool _Const,4522,125541
      struct __zip_view_iter_cat4523,125587
    template<bool _Const,4526,125632
      requires __all_forward<__all_forward4527,125678
  class zip_view<zip_view4535,125973
    __detail::__tuple_or_pair_t<__detail::__tuple_or_pair_t4541,126131
    __detail::__tuple_or_pair_t<iterator_t<__detail::__maybe_const_t<_Const, _Vs>>...> _M_current;4541,126131
    _Iterator(4544,126254
    _S_iter_concept(4549,126366
    template<copy_constructible _Fp,4562,126798
    using iterator_concept 4571,127186
    using value_type4572,127244
    using difference_type4574,127360
      : _M_current(4584,127678
    operator*(4588,127752
    operator++(4597,127945
    operator++(4604,128086
      requires __detail::__all_forward<_Const,_Const4609,128168
      requires __detail::__all_bidirectional<_Const,_Const4618,128339
      requires __detail::__all_bidirectional<_Const,_Const4626,128549
      requires __detail::__all_random_access<_Const,_Const4635,128745
      requires __detail::__all_random_access<_Const,_Const4646,129044
    operator==(operator==4666,129618
      requires __detail::__all_random_access<_Const,_Const4679,130173
      requires __detail::__all_random_access<_Const,_Const4684,130373
      requires __detail::__all_random_access<_Const,_Const4693,130593
      requires __detail::__all_random_access<_Const,_Const4702,130813
    operator-(4710,130982
  class zip_view<zip_view4743,132226
    __detail::__tuple_or_pair_t<__detail::__tuple_or_pair_t4745,132266
    __detail::__tuple_or_pair_t<sentinel_t<__detail::__maybe_const_t<_Const, _Vs>>...> _M_end;4745,132266
    _Sentinel(4748,132385
      : _M_end(4762,132697
    operator==(operator==4769,132955
    operator-(4780,133441
    operator-(4797,134160
  namespace views4801,134266
    namespace __detail4803,134288
    struct _Zip4810,134448
	operator() operator()4815,134586
    inline constexpr _Zip zip;4824,134794
  namespace __detail4827,134830
    template<typename _Range,4829,134855
      using __range_iter_cat4830,134898
	= typename iterator_traits<iterator_t<__maybe_const_t<_Const, _Range>>>::iterator_category;iterator_category4831,134927
  template<copy_constructible _Fp,4834,135025
  class zip_transform_view 4838,135306
    [[no_unique_address]] __detail::__box<_Fp> _M_fun;4840,135394
    zip_view<_Vs...> _M_zip;4841,135449
    using _InnerView 4843,135479
      using __ziperator 4846,135547
      using __zentinel 4849,135659
      using _Base 4852,135770
      struct __iter_cat4855,135864
      struct __iter_cat<__iter_cat4860,135970
	_S_iter_cat(4864,136038
    zip_transform_view(4895,137051
    begin(4900,137193
    end(4910,137480
  template<copy_constructible _Fp,4941,138276
  class zip_transform_view<_Fp, _Vs...>::_Iterator : public __iter_cat<__iter_cat4946,138581
    operator*(4977,139669
    operator++(4985,139895
    operator++(4992,139982
  template<copy_constructible _Fp,5071,142329
    operator==(operator==5099,143212
    operator-(5105,143533
    operator-(5111,143852
  namespace views5115,143973
    namespace __detail5117,143995
      template<typename _Fp,5119,144024
    struct _ZipTransform5124,144195
      template<typename _Fp,5126,144226
	requires (sizeof...(_Ts) == 0) || __detail::__can_zip_transform_view<__detail::__can_zip_transform_view5127,144272
	operator() operator()5129,144371
    inline constexpr _ZipTransform zip_transform;5138,144641
  template<forward_range _Vp,5141,144696
  class adjacent_view 5143,144774
    _Vp _M_base 5145,144849
    struct __as_sentinel5150,144948
    adjacent_view(5157,145084
    begin(5162,145177
    end(5170,145471
  template<typename _Vp,5208,146616
    inline constexpr bool enable_borrowed_range<enable_borrowed_range5209,146653
  namespace __detail5212,146763
    template<typename _Tp,5215,146842
      using __repeated_tuple 5216,146881
    template<typename _Fp,5220,147120
      struct __unarize5221,147159
	  static invoke_result_t<invoke_result_t5224,147217
  template<forward_range _Vp,5233,147458
  class adjacent_view<_Vp, _Nm>::_Iterator_Iterator5236,147560
    operator*(5309,149712
    operator++(5316,149898
    operator++(5324,150015
    operator==(operator==5374,151058
  template<forward_range _Vp,5448,153313
  class adjacent_view<_Vp, _Nm>::_Sentinel_Sentinel5451,153415
    operator==(operator==5477,154081
    operator-(5484,154438
    operator-(5491,154793
  namespace views5495,154921
    namespace __detail5497,154943
      template<size_t _Nm,5499,154972
      struct _Adjacent 5505,155155
	  requires (_Nm == 0) || __detail::__can_adjacent_view<__detail::__can_adjacent_view5508,155253
	  operator() operator()5510,155340
      inline constexpr _Adjacent<_Nm> adjacent;5520,155586
    inline constexpr auto pairwise 5522,155635
  template<forward_range _Vp,5525,155690
  template<forward_range _Vp, copy_constructible _Fp,5525,155690
  class adjacent_transform_view 5530,156018
    [[no_unique_address]] __detail::__box<_Fp> _M_fun;5532,156118
    adjacent_view<adjacent_view5533,156173
    adjacent_view<_Vp, _Nm> _M_inner;5533,156173
    using _InnerView 5535,156212
      using _InnerIter 5538,156287
      using _InnerSent 5541,156398
    adjacent_transform_view(5550,156631
    begin(5555,156772
    end(5566,157094
  template<forward_range _Vp,5595,157839
  template<forward_range _Vp, copy_constructible _Fp,5595,157839
  class adjacent_transform_view<_Vp, _Fp, _Nm>::_Iterator_Iterator5601,158191
    operator*(5654,160053
    operator++(5662,160279
    operator++(5669,160371
    operator==(operator==5714,161370
  template<forward_range _Vp,5764,163186
  template<forward_range _Vp, copy_constructible _Fp,5764,163186
    operator==(operator==5793,164127
    operator-(5799,164447
    operator-(5805,164765
  namespace views5809,164886
    namespace __detail5811,164908
      template<size_t _Nm,5813,164937
      template<size_t _Nm, typename _Range,5813,164937
      struct _AdjacentTransform 5820,165201
	template<viewable_range _Range,5822,165293
	  requires (_Nm == 0) || __detail::__can_adjacent_transform_view<__detail::__can_adjacent_transform_view5823,165340
	  operator() operator()5825,165442
      inline constexpr _AdjacentTransform<_Nm> adjacent_transform;5840,165924
    inline constexpr auto pairwise_transform 5842,165992
#define __cpp_lib_ranges_chunk 5845,166067
  namespace __detail5847,166107
    constexpr _Tp __div_ceil(5850,166159
  class chunk_view 5861,166366
    _Vp _M_base;5863,166430
    range_difference_t<_Vp> _M_n;5864,166447
    range_difference_t<_Vp> _M_remainder 5865,166481
    __detail::__non_propagating_cache<iterator_t<_Vp>> _M_current;5866,166527
    chunk_view(5873,166673
    begin(5886,167000
    end(5894,167160
    chunk_view(_Range&&, range_difference_t<_Range>) -> chunk_view<chunk_view5913,167614
  class chunk_view<chunk_view5917,167756
    chunk_view* _M_parent;5919,167796
    _OuterIter(5922,167847
    using iterator_concept 5929,167982
    using difference_type 5930,168031
    operator*(5938,168226
    operator++(5945,168375
    operator++(5955,168657
    operator==(operator==5959,168721
    requires sized_sentinel_for<sentinel_t<sentinel_t5967,169003
    requires sized_sentinel_for<sentinel_t<sentinel_t5980,169459
  struct chunk_view<chunk_view5986,169611
    chunk_view* _M_parent;5989,169704
    value_type(5992,169755
    begin(6000,169913
    end(6004,170013
    requires sized_sentinel_for<sentinel_t<sentinel_t6009,170108
  class chunk_view<chunk_view6019,170391
    chunk_view* _M_parent;6021,170431
    _InnerIter(6024,170482
    using iterator_concept 6031,170627
    using difference_type 6032,170676
    using value_type 6033,170729
    operator*(6043,170998
    operator++(6050,171148
    operator++(6062,171438
    operator==(operator==6066,171502
      requires sized_sentinel_for<sentinel_t<sentinel_t6071,171713
      requires sized_sentinel_for<sentinel_t<sentinel_t6079,172017
  class chunk_view<chunk_view6085,172173
    _Vp _M_base;6087,172242
    range_difference_t<_Vp> _M_n;6088,172259
    chunk_view(6093,172363
    begin(6106,172681
    end(6114,172951
    inline constexpr bool enable_borrowed_range<enable_borrowed_range6157,174243
  class chunk_view<chunk_view6163,174444
    using _Parent 6165,174483
    using _Base 6166,174550
    iterator_t<_Base> _M_current 6168,174609
    sentinel_t<_Base> _M_end 6169,174665
    range_difference_t<_Base> _M_n 6170,174717
    range_difference_t<_Base> _M_missing 6171,174757
    _Iterator(6174,174818
    _S_iter_cat(6181,175072
    using iterator_category 6194,175357
    using iterator_concept 6195,175407
    using value_type 6196,175461
    using difference_type 6197,175543
	&& convertible_to<convertible_to6203,175697
	&& convertible_to<convertible_to6204,175752
    : _M_current(6205,175807
    : _M_current(std::move(__i._M_current)), _M_end(6205,175807
      _M_n(6206,175883
      _M_n(__i._M_n), _M_missing(6206,175883
    base(6210,175973
    operator*(6214,176043
    operator++(6221,176211
    operator++(6229,176393
    operator==(operator==6280,177539
    operator==(operator==6284,177674
      requires sized_sentinel_for<iterator_t<iterator_t6342,179343
      requires sized_sentinel_for<sentinel_t<sentinel_t6350,179625
      requires sized_sentinel_for<sentinel_t<sentinel_t6355,179871
  namespace views6359,179978
    namespace __detail6361,180000
      template<typename _Range,6363,180029
    struct _Chunk 6368,180184
      template<viewable_range _Range,6370,180243
	operator() operator()6373,180390
    inline constexpr _Chunk chunk;6381,180688
#define __cpp_lib_ranges_slide 6384,180728
  namespace __detail6386,180768
      concept __slide_caches_nothing 6389,180820
      concept __slide_caches_last6392,180933
      concept __slide_caches_first6396,181082
  class slide_view 6402,181242
    _Vp _M_base;6404,181306
    range_difference_t<_Vp> _M_n;6405,181323
      __detail::__maybe_present_t<__detail::__maybe_present_t6407,181383
				  __detail::_CachedPosition<_Vp>> _M_cached_begin;6408,181454
      __detail::__maybe_present_t<__detail::__maybe_present_t6410,181535
				  __detail::_CachedPosition<_Vp>> _M_cached_end;6411,181605
    slide_view(6418,181750
    begin(6423,181905
    end(6447,182661
    slide_view(_Range&&, range_difference_t<_Range>) -> slide_view<slide_view6495,184088
    inline constexpr bool enable_borrowed_range<enable_borrowed_range6498,184204
  class slide_view<slide_view6504,184383
    using _Base 6506,184422
    static constexpr bool _S_last_elt_present6507,184480
    iterator_t<_Base> _M_current 6510,184574
      __detail::__maybe_present_t<__detail::__maybe_present_t6512,184656
	_M_last_elt 6513,184730
    range_difference_t<_Base> _M_n 6514,184770
    _Iterator(6517,184825
    _Iterator(6523,184999
    _S_iter_concept(6530,185234
    using iterator_category 6544,185557
    using iterator_concept 6545,185607
    using value_type 6546,185665
    using difference_type 6547,185732
      requires _Const && convertible_to<convertible_to6553,185868
    : _M_current(6554,185944
    : _M_current(std::move(__i._M_current)), _M_n(6554,185944
    operator*(6558,186032
    operator++(6562,186129
    operator++(6571,186280
    operator==(operator==6621,187347
      requires sized_sentinel_for<iterator_t<iterator_t6684,189121
  class slide_view<slide_view6695,189400
    sentinel_t<_Vp> _M_end 6697,189439
    _Sentinel(6700,189511
    operator==(operator==6710,189665
      requires sized_sentinel_for<sentinel_t<sentinel_t6715,189888
      requires sized_sentinel_for<sentinel_t<sentinel_t6720,190112
  namespace views6724,190230
    namespace __detail6726,190252
      template<typename _Range,6728,190281
    struct _Slide 6733,190436
      template<viewable_range _Range,6735,190495
	operator() operator()6738,190642
    inline constexpr _Slide slide;6746,190940
#define __cpp_lib_ranges_chunk_by 6749,190980
  template<forward_range _Vp,6751,191023
  class chunk_by_view 6754,191169
    _Vp _M_base 6756,191246
    __detail::__box<_Pred> _M_pred;6757,191271
    __detail::_CachedPosition<_Vp> _M_cached_begin;6758,191307
    _M_find_next(6761,191390
    chunk_by_view(6793,192607
    pred(6806,192911
    begin(6810,192978
    end(6825,193346
  template<typename _Range,6834,193520
    chunk_by_view(_Range&&, _Pred) -> chunk_by_view<chunk_by_view6835,193564
  template<forward_range _Vp,6837,193647
  class chunk_by_view<_Vp, _Pred>::_Iterator_Iterator6840,193793
    operator*(6871,194661
    operator++(6878,194820
    operator++(6887,195022
    operator==(operator==6911,195484
    operator==(operator==6915,195619
  namespace views6919,195728
    namespace __detail6921,195750
      template<typename _Range,6923,195779
    struct _ChunkBy 6928,195944
      template<viewable_range _Range,6930,196007
	requires __detail::__can_chunk_by_view<__detail::__can_chunk_by_view6931,196061
	operator() operator()6933,196132
    inline constexpr _ChunkBy chunk_by;6941,196449
#define __cpp_lib_ranges_join_with 6944,196494
  namespace __detail6946,196538
    template<typename _Range,6948,196563
      concept __compatible_joinable_ranges6949,196612
	  && common_reference_with<common_reference_with6951,196718
	  && common_reference_with<common_reference_with6953,196809
      concept __bidirectional_common 6957,196946
  template<input_range _Vp,6960,197043
  class join_with_view 6964,197263
    using _InnerRange 6966,197345
    _Vp _M_base 6968,197394
    __detail::__non_propagating_cache<remove_cv_t<_InnerRange>> _M_inner;6969,197419
    _Pattern _M_pattern 6970,197493
    template<bool _Const> using _Base 6972,197532
    template<bool _Const> using _InnerBase 6973,197612
    template<bool _Const> using _PatternBase 6974,197691
    template<bool _Const> using _OuterIter 6976,197784
    template<bool _Const> using _InnerIter 6977,197856
    template<bool _Const> using _PatternIter 6978,197933
      static constexpr bool _S_ref_is_glvalue 6981,198041
    struct __iter_cat6984,198152
    struct __iter_cat<__iter_cat6991,198322
	_S_iter_cat(6995,198386
    join_with_view(7032,199883
      requires constructible_from<constructible_from7037,200043
	&& constructible_from<constructible_from7038,200104
    join_with_view(7040,200192
    begin(7054,200549
    end(7069,201017
  template<typename _Range,7098,201937
      -> join_with_view<join_with_view7100,202025
      -> join_with_view<join_with_view7104,202199
  template<input_range _Vp,7107,202305
  class join_with_view<_Vp, _Pattern>::_Iterator : public __iter_cat<__iter_cat7112,202549
    operator*(7236,206262
    operator++(7245,206439
    operator++(7256,206633
  template<input_range _Vp,7361,209489
  class join_with_view<_Vp, _Pattern>::_Sentinel_Sentinel7366,209733
    operator==(operator==7393,210476
  namespace views7397,210600
    namespace __detail7399,210622
      template<typename _Range,7401,210651
    struct _JoinWith 7406,210846
      template<viewable_range _Range,7408,210911
	requires __detail::__can_join_with_view<__detail::__can_join_with_view7409,210968
	operator() operator()7411,211043
    inline constexpr _JoinWith join_with;7423,211429
#define __cpp_lib_ranges_repeat 7426,211495
  template<copy_constructible _Tp,7428,211536
  template<copy_constructible _Tp, semiregular _Bound 7428,211536
  template<typename _Tp,7490,213633
    repeat_view(_Tp, _Bound) -> repeat_view<repeat_view7491,213675
  template<copy_constructible _Tp,7493,213734
  class repeat_view<_Tp, _Bound>::_Iterator_Iterator7496,213943
    operator*(7525,214829
    operator++(7529,214912
    operator++(7536,215006
    operator--(7544,215125
    operator--(7553,215316
    operator+=(operator+=7561,215435
    operator-=(operator-=7570,215658
    operator==(operator==7583,215990
    operator<=>(operator<=>7587,216125
    operator+(7591,216267
    operator+(7598,216397
    operator-(7602,216505
    operator-(7609,216641
  namespace views7616,216832
    namespace __detail7618,216854
      template<typename _Tp,7620,216883
	inline constexpr bool __is_repeat_view<__is_repeat_view7621,216929
      template<typename _Tp,7627,217114
    struct _Repeat7632,217279
      operator() operator()7637,217397
      template<typename _Tp,7640,217509
	requires __detail::__can_bounded_repeat_view<__detail::__can_bounded_repeat_view7641,217555
      operator() operator()7643,217635
    inline constexpr _Repeat repeat;7647,217779
    namespace __detail7649,217817
	__take_of_repeat_view(7653,217894
	__drop_of_repeat_view(7665,218268
#define __cpp_lib_ranges_stride 7680,218622
  class stride_view 7684,218714
    _Vp _M_base;7686,218780
    range_difference_t<_Vp> _M_stride;7687,218797
    template<bool _Const> using _Base 7689,218837
    struct __iter_cat7692,218944
    struct __iter_cat<__iter_cat7697,219046
      _S_iter_cat(7701,219113
    stride_view(7717,219509
    stride(7730,219866
    begin(7734,219940
    end(7742,220202
    stride_view(_Range&&, range_difference_t<_Range>) -> stride_view<stride_view7786,221594
    inline constexpr bool enable_borrowed_range<enable_borrowed_range7789,221712
  class stride_view<stride_view7795,221890
    using _Parent 7797,221958
    using _Base 7798,222026
    iterator_t<_Base> _M_current 7800,222073
    sentinel_t<_Base> _M_end 7801,222129
    range_difference_t<_Base> _M_stride 7802,222181
    range_difference_t<_Base> _M_missing 7803,222226
    _Iterator(7806,222287
    _S_iter_concept(7813,222562
    using difference_type 7828,222929
    using value_type 7829,222984
    using iterator_concept 7830,223029
	&& convertible_to<convertible_to7838,223304
	&& convertible_to<convertible_to7839,223359
     : _M_current(7840,223414
     : _M_current(std::move(__other._M_current)), _M_end(7840,223414
       _M_stride(7841,223499
       _M_stride(__other._M_stride), _M_missing(7841,223499
    operator*(7853,223786
    operator++(7857,223862
    operator++(7865,224044
    operator==(operator==7917,225290
      requires sized_sentinel_for<iterator_t<iterator_t7975,227168
      requires sized_sentinel_for<sentinel_t<sentinel_t7988,227644
      requires sized_sentinel_for<sentinel_t<sentinel_t7993,227895
  namespace views8008,228477
    namespace __detail8010,228499
      template<typename _Range,8012,228528
    struct _Stride 8017,228685
      template<viewable_range _Range,8019,228746
	operator() operator()8022,228894
    inline constexpr _Stride stride;8030,229194
#define __cpp_lib_ranges_cartesian_product 8033,229236
  namespace __detail8035,229288
    template<bool _Const,8037,229313
    template<bool _Const, typename _First,8037,229313
      concept __cartesian_product_is_random_access8038,229373
      concept __cartesian_product_common_arg8045,229637
    template<bool _Const,8048,229764
    template<bool _Const, typename _First,8048,229764
      concept __cartesian_product_is_bidirectional8049,229824
    template<typename _First,8055,230077
      concept __cartesian_product_is_common 8056,230124
      concept __cartesian_product_is_sized 8059,230241
    template<bool _Const,8061,230314
    template<bool _Const, template<typename> class FirstSent, typename _First,8061,230314
      concept __cartesian_is_sized_sentinel8062,230410
      __cartesian_common_arg_end(8072,230836
  template<input_range _First,8081,231050
  class cartesian_product_view 8083,231151
    tuple<tuple8085,231250
    tuple<_First, _Vs...> _M_bases;8085,231250
    _S_difference_type(8090,231340
    cartesian_product_view(8104,231731
    begin(8109,231886
    begin(8113,232107
    end(8117,232308
    end() const requires __detail::__cartesian_product_is_common<const _First,8135,233058
    end(8152,233754
    size() requires __detail::__cartesian_product_is_sized<_First,_First8156,233832
    size() const requires __detail::__cartesian_product_is_sized<const _First,8179,234528
  template<input_range _First,8205,235343
  class cartesian_product_view<_First, _Vs...>::_Iterator_Iterator8208,235468
    operator*(8259,237337
    operator++(8268,237530
    operator++(8275,237616
    operator==(operator==8327,239018
  namespace views8530,245225
    namespace __detail8532,245247
    struct _CartesianProduct8539,245435
	operator() operator()8544,245600
    inline constexpr _CartesianProduct cartesian_product;8553,245822
#define __cpp_lib_ranges_as_rvalue 8556,245885
  class as_rvalue_view 8560,245980
    _Vp _M_base 8562,246052
    as_rvalue_view(8568,246180
    begin(8581,246434
    end(8589,246679
    as_rvalue_view(_Range&&) -> as_rvalue_view<as_rvalue_view8616,247338
    inline constexpr bool enable_borrowed_range<enable_borrowed_range8619,247434
  namespace views8622,247540
    namespace __detail8624,247562
    struct _AsRvalue 8630,247710
	operator() operator()8635,247874
    inline constexpr _AsRvalue as_rvalue;8645,248140
#define __cpp_lib_ranges_enumerate 8648,248187
  namespace __detail8650,248231
      concept __range_with_movable_reference 8653,248286
  class enumerate_view 8660,248546
    _Vp _M_base 8662,248618
    enumerate_view(8671,248833
    begin(8676,248925
    end(8684,249216
    enumerate_view(_Range&&) -> enumerate_view<enumerate_view8719,250183
    inline constexpr bool enable_borrowed_range<enable_borrowed_range8722,250279
  class enumerate_view<enumerate_view8728,250487
    using _Base 8730,250530
    _S_iter_concept(8733,250595
    using iterator_category 8748,250965
    using iterator_concept 8749,251015
    using difference_type 8750,251073
    using value_type 8751,251128
    using __reference_type 8754,251209
    iterator_t<_Base> _M_current 8756,251289
    difference_type _M_pos 8757,251345
    _Iterator(8760,251401
    requires _Const && convertible_to<convertible_to8769,251670
    : _M_current(8770,251744
    : _M_current(std::move(__i._M_current)), _M_pos(8770,251744
    index(8782,252028
    operator*(8786,252098
    operator++(8790,252200
    operator++(8798,252305
    operator==(operator==8846,253332
    operator<=>(operator<=>8850,253479
    operator-(8869,254116
  class enumerate_view<enumerate_view8885,254648
    using _Base 8887,254691
    sentinel_t<_Base> _M_end 8889,254740
    _Sentinel(8892,254816
    requires _Const && convertible_to<convertible_to8903,255017
    : _M_end(8904,255091
    base(8908,255172
    requires sentinel_for<sentinel_for8912,255244
    operator==(operator==8914,255362
    requires sized_sentinel_for<sized_sentinel_for8918,255511
    operator-(8920,255684
    requires sized_sentinel_for<sized_sentinel_for8924,255831
    operator-(8926,256004
  namespace views8930,256125
    namespace __detail8932,256147
    struct _Enumerate 8939,256310
	operator() operator()8944,256475
    inline constexpr _Enumerate enumerate;8948,256600
#define __cpp_lib_ranges_as_const 8951,256648
  class as_const_view 8955,256742
    _Vp _M_base 8957,256812
    as_const_view(8963,256939
    noexcept(8976,257244
    begin(8980,257350
    end(8988,257567
    as_const_view(_Range&&) -> as_const_view<as_const_view9005,257992
    inline constexpr bool enable_borrowed_range<enable_borrowed_range9008,258086
  namespace views9011,258191
    namespace __detail9013,258213
    struct _AsConst 9025,258537
    inline constexpr _AsConst as_const;9054,259667

/usr/include/c++/13/ratio,5007
#define _GLIBCXX_RATIO 31,1176
namespace std _GLIBCXX_VISIBILITY(42,1362
    struct __static_sign57,1644
    struct __static_abs62,1758
    struct __static_gcd67,1898
    struct __safe_multiply88,2580
      static_assert(98,2975
      static_assert(100,3056
      static_assert(102,3153
      static_assert(104,3241
    struct __big_less115,3632
    struct __big_add121,3837
    struct __big_sub130,4146
    struct __big_mul141,4508
      typedef __big_add<__mix_hi,__mix_hi157,5299
      typedef __big_add<__mix_hi, __mix_lo,157,5299
      typedef __big_add<__mix_hi, __mix_lo, __x1y1,157,5299
      typedef __big_add<__mix_hi, __mix_lo, __x1y1, __x0y0> _Res;157,5299
    struct __big_div_impl166,5651
      typedef __big_mul<__quot,__quot204,7267
      typedef __big_mul<__quot, __d> _Prod;204,7267
      typedef __big_add<_Prod::__hi,_Prod::__hi205,7311
      typedef __big_add<_Prod::__hi, _Prod::__lo,205,7311
      typedef __big_add<_Prod::__hi, _Prod::__lo, 0, __rem> _Sum;205,7311
    struct __big_div211,7536
      typedef __big_div_impl<__new_n1,__new_n1229,8529
      typedef __big_div_impl<__new_n1, __new_n0,229,8529
      typedef __big_div_impl<__new_n1, __new_n0, __new_d> _Res;229,8529
      typedef __big_mul<__quot_lo,__quot_lo237,8797
      typedef __big_mul<__quot_lo, __d> _P0;237,8797
      typedef __big_mul<__quot_hi,__quot_hi238,8842
      typedef __big_mul<__quot_hi, __d> _P1;238,8842
      typedef __big_add<_P0::__hi,_P0::__hi239,8887
      typedef __big_add<_P0::__hi, _P0::__lo,239,8887
      typedef __big_add<_P0::__hi, _P0::__lo, _P1::__lo,239,8887
      typedef __big_add<_P0::__hi, _P0::__lo, _P1::__lo, __rem> _Sum;239,8887
      typedef ratio<num, den> type;279,10226
    struct __is_ratio293,10535
    struct __ratio_multiply324,11283
        __static_gcd<_R1::num, _R2::den>::value;value331,11479
        __static_gcd<_R2::num, _R1::den>::value;value333,11565
                        (_R2::num / __gcd2)>::value,value338,11693
                        (_R2::den / __gcd1)>::value> type;340,11791
    struct __ratio_divide363,12397
      typedef typename __ratio_multiply<__ratio_multiply367,12483
        ratio<_R2::den, _R2::num>>::type type;369,12537
    struct ratio_equal391,13113
    struct ratio_not_equal400,13398
    struct ratio_less440,14636
    struct ratio_less_equal449,14885
    struct ratio_greater455,15042
    struct ratio_greater_equal461,15201
        ratio<-_R2::num, _R2::den> >::type type494,16451
      typedef ratio<-__t::num, __t::den> type;496,16511
      typedef __big_mul<_R1::den, __d2> __d;506,16868
      typedef __big_mul<_R1::num, _R2::den / __g> __x;507,16913
      typedef __big_mul<_R2::num, _R1::den / __g> __y;508,16968
      typedef __big_add<__x::__hi, __x::__lo, __y::__hi, __y::__lo> __n;509,17023
      typedef __big_div<__n::__hi, __n::__lo, __g> __ng;511,17167
      typedef __big_div<__n::__hi, __n::__lo, __g2> __n_final;513,17303
      typedef __big_mul<_R1::den / __g2, __d2> __d_final;517,17558
      typedef ratio<__n_final::__quot_lo, __d_final::__lo> type;521,17740
      typedef __big_mul<_R1::den, __d2> __d;536,18280
      typedef __big_mul<_R1::num, _R2::den / __g> __x;537,18325
      typedef __big_mul<-_R2::num, _R1::den / __g> __y;538,18380
      typedef __big_sub<__x::__hi, __x::__lo, __y::__hi, __y::__lo> __n;539,18436
      typedef __big_div<__n::__hi, __n::__lo, __g> __ng;540,18509
      typedef __big_div<__n::__hi, __n::__lo, __g2> __n_final;542,18645
      typedef __big_mul<_R1::den / __g2, __d2> __d_final;546,18900
      typedef ratio<__n_final::__quot_lo, __d_final::__lo> type;550,19082
    struct __ratio_add554,19194
      typedef typename __ratio_add_impl<__ratio_add_impl559,19335
      typedef typename __ratio_add_impl<_R1, _R2>::type type;559,19335
    struct __ratio_subtract581,19918
      typedef typename __ratio_add<__ratio_add583,19952
        ratio<-_R2::num, _R2::den>>::type type;585,20001
  typedef ratio<1,       1000000000000000000> atto;606,20532
  typedef ratio<1,          1000000000000000> femto;607,20584
  typedef ratio<1,             1000000000000> pico;608,20637
  typedef ratio<1,                1000000000> nano;609,20689
  typedef ratio<1,                   1000000> micro;610,20741
  typedef ratio<1,                      1000> milli;611,20794
  typedef ratio<1,                       100> centi;612,20847
  typedef ratio<1,                        10> deci;613,20900
  typedef ratio<                       10, 1> deca;614,20952
  typedef ratio<                      100, 1> hecto;615,21004
  typedef ratio<                     1000, 1> kilo;616,21057
  typedef ratio<                  1000000, 1> mega;617,21109
  typedef ratio<               1000000000, 1> giga;618,21161
  typedef ratio<            1000000000000, 1> tera;619,21213
  typedef ratio<         1000000000000000, 1> peta;620,21265
  typedef ratio<      1000000000000000000, 1> exa;621,21317

/usr/include/c++/13/regex,75
#define _GLIBCXX_REGEX 30,1159
namespace std _GLIBCXX_VISIBILITY(73,2287

/usr/include/c++/13/scoped_allocator,5254
#define _SCOPED_ALLOCATOR 30,1184
namespace std _GLIBCXX_VISIBILITY(46,1487
    struct __inner_type_impl<__inner_type_impl96,2816
      typedef scoped_allocator_adaptor<_Outer> __type;98,2859
      __inner_type_impl(107,3241
      __inner_type_impl(111,3351
      _M_get(115,3438
      _M_get(118,3511
      _M_tie(121,3590
      operator==(operator==124,3654
      typedef scoped_allocator_adaptor<_InnerHead, _InnerTail...> __type;131,3886
      operator==(operator==163,5003
    class scoped_allocator_adaptor177,5454
      typedef allocator_traits<_OuterAlloc> __traits;180,5520
      typedef __inner_type_impl<_OuterAlloc,_OuterAlloc182,5575
      typedef __inner_type_impl<_OuterAlloc, _InnerAllocs...> __inner_type;182,5575
      __inner_type _M_inner;183,5651
      template<typename _Outer,185,5681
      _M_tie(192,5900
      template<typename _Tp,200,6182
        _M_construct(202,6243
	  typedef __outermost_alloc_traits<scoped_allocator_adaptor> _O_traits;204,6318
      typedef __uses_alloc1<typename __inner_type::__type> __uses_alloc1_;209,6494
      typedef __uses_alloc2<typename __inner_type::__type> __uses_alloc2_;210,6569
      template<typename _Tp,212,6645
        _M_construct(214,6706
	  typedef __outermost_alloc_traits<scoped_allocator_adaptor> _O_traits;216,6782
      template<typename _Tp,222,7002
        _M_construct(224,7063
	  typedef __outermost_alloc_traits<scoped_allocator_adaptor> _O_traits;226,7139
        _S_select_on_copy(235,7435
          typedef allocator_traits<_Alloc> __a_traits;237,7490
        scoped_allocator_adaptor(242,7669
          >::type;type253,8219
	struct __not_pair 258,8383
      template<typename _Tp,260,8427
      typedef _OuterAlloc                       outer_allocator_type;264,8523
      typedef typename __inner_type::__type     inner_allocator_type;265,8593
      typedef typename __traits::value_type             value_type;267,8664
      typedef typename __traits::size_type              size_type;268,8732
      typedef typename __traits::difference_type        difference_type;269,8799
      typedef typename __traits::pointer                pointer;270,8872
      typedef typename __traits::const_pointer          const_pointer;271,8937
      typedef typename __traits::void_pointer           void_pointer;272,9008
      typedef typename __traits::const_void_pointer     const_void_pointer;273,9078
      typedef typename __or_<__or_275,9155
	  propagate_on_container_copy_assignment;279,9340
      typedef typename __or_<__or_281,9384
	  propagate_on_container_move_assignment;285,9569
      typedef typename __or_<__or_287,9613
	  propagate_on_container_swap;291,9776
      typedef typename __and_<__and_293,9809
	  is_always_equal;296,9945
        struct rebind299,9993
            typename __traits::template rebind_alloc<rebind_alloc302,10069
            _InnerAllocs...> other;303,10128
      scoped_allocator_adaptor(306,10176
      template<typename _Outer2,308,10242
          _M_inner(312,10492
      scoped_allocator_adaptor(315,10536
      scoped_allocator_adaptor(320,10704
      template<typename _Outer2,325,10889
          _M_inner(330,11130
      template<typename _Outer2,333,11180
          _M_inner(337,11418
      inner_allocator(347,11688
      inner_allocator(351,11796
      outer_allocator(355,11904
      outer_allocator(359,12023
      allocate(363,12153
      allocate(367,12278
      void deallocate(370,12405
      size_type max_size(373,12533
      template<typename _Tp,377,12664
	construct(379,12744
      template<typename _T1,387,12983
      template<typename _T1, typename _T2,387,12983
      template<typename _T1, typename _T2, typename... _Args1,387,12983
	construct(390,13080
	  typedef __outermost_alloc_traits<scoped_allocator_adaptor> _O_traits;402,13646
      template<typename _T1,408,13908
	construct(410,13957
      template<typename _T1,413,14054
      template<typename _T1, typename _T2,413,14054
      template<typename _T1, typename _T2, typename _Up,413,14054
	construct(415,14131
      template<typename _T1,422,14338
      template<typename _T1, typename _T2,422,14338
      template<typename _T1, typename _T2, typename _Up,422,14338
	construct(424,14415
      template<typename _T1,431,14602
      template<typename _T1, typename _T2,431,14602
      template<typename _T1, typename _T2, typename _Up,431,14602
	construct(433,14679
      template<typename _Tp,440,14932
	construct(443,15016
	  typedef __outermost_alloc_traits<scoped_allocator_adaptor> _O_traits;445,15059
        void destroy(456,15433
	  typedef __outermost_alloc_traits<scoped_allocator_adaptor> _O_traits;458,15474
      select_on_container_copy_construction(463,15630
        typedef typename _Build_index_tuple<_Build_index_tuple465,15690
      template <typename _OutA1,470,15854
      template <typename _OutA1, typename _OutA2,470,15854
    private:private475,16093
	_M_construct_p(479,16215
      template<size_t... _Ind,482,16303
	tuple<tuple483,16353
	_M_construct_p(484,16412
      template<size_t... _Ind,492,16598
	_M_construct_p(494,16690
    operator==(operator==505,17020
    operator!=(operator!=516,17454

/usr/include/c++/13/semaphore,116
#define _GLIBCXX_SEMAPHORE 30,1171
namespace std _GLIBCXX_VISIBILITY(40,1397
#define __cpp_lib_semaphore 44,1476

/usr/include/c++/13/set,116
#define _GLIBCXX_SET 56,2258
namespace std _GLIBCXX_VISIBILITY(74,2614
namespace std _GLIBCXX_VISIBILITY(89,3096

/usr/include/c++/13/shared_mutex,3172
#define _GLIBCXX_SHARED_MUTEX 30,1180
namespace std _GLIBCXX_VISIBILITY(48,1613
#define __cpp_lib_shared_mutex 60,1795
#define __cpp_lib_shared_timed_mutex 64,1864
#define _GLIBCXX_GTHRW(71,2013
  class __shared_mutex_pthread155,4660
    pthread_rwlock_t	_M_rwlock;166,4926
    __shared_mutex_pthread(169,4969
    ~__shared_mutex_pthread(182,5380
    lock(194,5748
    try_lock(204,6001
    unlock(214,6227
    lock_shared(224,6454
    try_lock_shared(241,7027
    unlock_shared(254,7457
    void* native_handle(259,7506
  class __shared_mutex_cv265,7707
    mutex		_M_mut;295,9152
    condition_variable	_M_gate1;297,9247
    condition_variable	_M_gate2;299,9348
    unsigned		_M_state;301,9429
    bool _M_write_entered(308,9693
    unsigned _M_readers(311,9841
    __shared_mutex_cv(314,9922
    ~__shared_mutex_cv(316,9964
    lock(327,10208
    try_lock(338,10547
    unlock(350,10755
    lock_shared(363,11103
    try_lock_shared(371,11269
    unlock_shared(385,11503
  class shared_mutex412,12202
    void lock(423,12435
    [[nodiscard]] bool try_lock(424,12471
    void unlock(425,12536
    void lock_shared(429,12602
    [[nodiscard]] bool try_lock_shared(430,12652
    void unlock_shared(431,12731
    typedef void* native_handle_type;434,12820
    native_handle_type native_handle(435,12858
    __shared_mutex_pthread _M_impl;438,12945
    __shared_mutex_cv _M_impl;441,12998
  class shared_timed_mutex455,13337
    void lock(476,13919
    _GLIBCXX_NODISCARD bool try_lock(477,13954
    void unlock(478,14023
    template<typename _Rep,480,14063
      try_lock_for(483,14145
    void lock_shared(493,14430
    bool try_lock_shared(495,14502
    void unlock_shared(496,14566
    template<typename _Rep,498,14620
      try_lock_shared_for(501,14702
      try_lock_until(516,15140
      try_lock_until(542,15953
    template<typename _Clock,566,16684
      try_lock_until(569,16770
      try_lock_shared_until(592,17425
      try_lock_shared_until(632,18913
    template<typename _Clock,656,19653
      try_lock_shared_until(659,19739
    template<typename _Clock,682,20429
      try_lock_until(685,20515
    template <typename _Clock,707,21076
      try_lock_shared_until(710,21163
    class shared_lock729,21614
      typedef _Mutex mutex_type;732,21654
      shared_lock(736,21713
      shared_lock(739,21795
      shared_lock(743,21912
      shared_lock(746,22028
      shared_lock(749,22152
      template<typename _Clock,752,22258
	shared_lock(753,22310
      template<typename _Rep,758,22494
	shared_lock(759,22542
      ~shared_lock(764,22718
      shared_lock(773,22905
      operator=(operator=777,23010
      lock(784,23141
      try_lock(793,23263
      template<typename _Rep,799,23357
	try_lock_for(802,23431
      template<typename _Clock,808,23581
	try_lock_until(811,23659
      unlock(818,23830
      swap(829,24010
      release(836,24147
      bool owns_lock(845,24291
      explicit operator bool(operator bool847,24350
      mutex_type* mutex(850,24442
      _M_lockable(854,24526
      mutex_type*	_M_pm;862,24734
      bool		_M_owns;863,24759

/usr/include/c++/13/source_location,433
#define _GLIBCXX_SRCLOC 30,1180
#define __cpp_lib_source_location 39,1356
  struct source_location42,1455
    struct __impl46,1545
      const char* _M_file_name;48,1569
      const char* _M_function_name;49,1601
      unsigned _M_line;50,1637
      unsigned _M_column;51,1661
    current(59,1852
    constexpr source_location(66,2045
    line(70,2159
    column(74,2263
    file_name(78,2368
    function_name(82,2479

/usr/include/c++/13/span,538
#define _GLIBCXX_SPAN 35,1255
namespace std _GLIBCXX_VISIBILITY(47,1455
#define __cpp_lib_span 51,1534
      class __extent_storage73,2123
	__extent_storage(77,2185
	_M_extent(81,2251
      class __extent_storage<__extent_storage86,2319
	__extent_storage(90,2397
	_M_extent(95,2494
	size_t _M_extent_value;99,2573
  namespace ranges465,13247
    template<typename _ElementType,468,13310
	enable_borrowed_range<enable_borrowed_range470,13390
    template<typename _ElementType,473,13481
	enable_view<enable_view475,13561

/usr/include/c++/13/spanstream,1623
#define _GLIBCXX_SPANSTREAM 30,1162
namespace std _GLIBCXX_VISIBILITY(44,1419
#define __cpp_lib_spanstream 48,1498
  class basic_spanbuf51,1580
    basic_spanbuf(64,1982
    basic_spanbuf(68,2070
    basic_spanbuf(73,2181
    basic_spanbuf(88,2653
    operator=(operator=96,2905
    swap(103,3035
    span(112,3261
    span(121,3410
    basic_streambuf<basic_streambuf136,3804
    setbuf(137,3842
    seekoff(145,4017
    seekpos(205,5358
    ios_base::openmode _M_mode;211,5535
    std::span<_CharT> _M_buf;212,5567
  class basic_ispanstream225,5894
    basic_ispanstream(239,6311
    basic_ispanstream(247,6563
	&& convertible_to<convertible_to256,6870
      basic_ispanstream(258,6935
    swap(271,7375
    basic_spanbuf<basic_spanbuf278,7536
    rdbuf(279,7572
    span(285,7723
    span(289,7788
	&& convertible_to<convertible_to295,7981
      span(297,8042
    basic_spanbuf<basic_spanbuf304,8220
    basic_spanbuf<_CharT, _Traits> _M_sb;304,8220
  class basic_ospanstream317,8583
    basic_ospanstream(331,9000
    basic_ospanstream(339,9253
    swap(350,9640
    basic_spanbuf<basic_spanbuf357,9801
    rdbuf(358,9837
    span(364,9982
    span(368,10047
    basic_spanbuf<basic_spanbuf372,10132
    basic_spanbuf<_CharT, _Traits> _M_sb;372,10132
  class basic_spanstream385,10495
    basic_spanstream(399,10913
    basic_spanstream(407,11163
    swap(418,11545
    basic_spanbuf<basic_spanbuf425,11696
    rdbuf(426,11732
    span(432,11877
    span(436,11942
    basic_spanbuf<basic_spanbuf440,12027
    basic_spanbuf<_CharT, _Traits> _M_sb;440,12027

/usr/include/c++/13/sstream,7188
#define _GLIBCXX_SSTREAM 34,1228
# define _GLIBCXX_LVAL_REF_QUAL 45,1490
# define _GLIBCXX_SSTREAM_ALWAYS_INLINE46,1524
# define _GLIBCXX_LVAL_REF_QUAL48,1570
# define _GLIBCXX_SSTREAM_ALWAYS_INLINE 50,1681
namespace std _GLIBCXX_VISIBILITY(55,1762
    class basic_stringbuf 79,2726
      typedef _CharT 					char_type;92,3094
      typedef _Traits 					traits_type;93,3131
      typedef _Alloc				       	allocator_type;96,3262
      typedef typename traits_type::int_type 		int_type;97,3310
      typedef typename traits_type::pos_type 		pos_type;98,3367
      typedef typename traits_type::off_type 		off_type;99,3424
      typedef basic_streambuf<char_type,char_type101,3482
      typedef basic_streambuf<char_type, traits_type>  	__streambuf_type;101,3482
      typedef basic_string<char_type,char_type102,3556
      typedef basic_string<char_type, _Traits,102,3556
      typedef basic_string<char_type, _Traits, _Alloc> 	__string_type;102,3556
      typedef typename __string_type::size_type		__size_type;103,3627
      ios_base::openmode 	_M_mode;107,3784
      __string_type 		_M_string;110,3843
      basic_stringbuf(121,4096
      basic_stringbuf(133,4482
      basic_stringbuf(146,4931
      basic_stringbuf(155,5270
      basic_stringbuf(161,5535
      basic_stringbuf(165,5659
      basic_stringbuf(171,5829
	basic_stringbuf(178,6088
	basic_stringbuf(184,6289
	basic_stringbuf(193,6575
      basic_stringbuf(199,6770
      allocator_type get_allocator(203,7000
      operator=(operator=213,7246
      swap(226,7614
      str(249,8426
	basic_string<basic_string263,8766
	str(264,8806
      basic_string_view<basic_string_view287,9319
      view(288,9367
      str(305,9768
	str(318,10161
      str(326,10318
      _M_stringbuf_init(336,10504
      showmanyc(346,10779
      setbuf(378,11624
      _M_update_egptr(413,12723
      _M_high_mark(440,13591
      struct __xfer_bufptrs457,14191
	__xfer_bufptrs(459,14227
	~__xfer_bufptrs(490,15241
	basic_stringbuf* _M_to;499,15530
	off_type _M_goff[_M_goff500,15555
	off_type _M_poff[_M_poff501,15577
      struct __xfer_bufptrs505,15680
	__xfer_bufptrs(507,15716
      basic_stringbuf(513,15948
      basic_stringbuf(521,16368
    class basic_istringstream 547,17342
      typedef _CharT 					char_type;551,17446
      typedef _Traits 					traits_type;552,17483
      typedef _Alloc				       	allocator_type;555,17614
      typedef typename traits_type::int_type 		int_type;556,17662
      typedef typename traits_type::pos_type 		pos_type;557,17719
      typedef typename traits_type::off_type 		off_type;558,17776
      typedef basic_string<_CharT,_CharT561,17863
      typedef basic_string<_CharT, _Traits,561,17863
      typedef basic_string<_CharT, _Traits, _Alloc> 	__string_type;561,17863
      typedef basic_stringbuf<_CharT,_CharT562,17931
      typedef basic_stringbuf<_CharT, _Traits,562,17931
      typedef basic_stringbuf<_CharT, _Traits, _Alloc> 	__stringbuf_type;562,17931
      typedef basic_istream<char_type,char_type563,18005
      typedef basic_istream<char_type, traits_type>	__istream_type;563,18005
      __stringbuf_type	_M_stringbuf;566,18087
      basic_istringstream(580,18535
      basic_istringstream(597,19179
      basic_istringstream(615,19900
      ~basic_istringstream(626,20281
      basic_istringstream(632,20413
      basic_istringstream(638,20665
      basic_istringstream(643,20882
	basic_istringstream(649,21146
	basic_istringstream(655,21342
	basic_istringstream(663,21646
      operator=(operator=675,21992
      swap(683,22173
      rdbuf(698,22556
      str(706,22765
	basic_string<basic_string713,22957
	str(714,22997
      basic_string_view<basic_string_view724,23214
      view(725,23262
      str(736,23520
	str(744,23748
      str(749,23851
    class basic_ostringstream 771,24630
      typedef _CharT 					char_type;775,24734
      typedef _Traits 					traits_type;776,24771
      typedef _Alloc				       	allocator_type;779,24902
      typedef typename traits_type::int_type 		int_type;780,24950
      typedef typename traits_type::pos_type 		pos_type;781,25007
      typedef typename traits_type::off_type 		off_type;782,25064
      typedef basic_string<_CharT,_CharT785,25151
      typedef basic_string<_CharT, _Traits,785,25151
      typedef basic_string<_CharT, _Traits, _Alloc> 	__string_type;785,25151
      typedef basic_stringbuf<_CharT,_CharT786,25219
      typedef basic_stringbuf<_CharT, _Traits,786,25219
      typedef basic_stringbuf<_CharT, _Traits, _Alloc> 	__stringbuf_type;786,25219
      typedef basic_ostream<char_type,char_type787,25293
      typedef basic_ostream<char_type, traits_type>	__ostream_type;787,25293
      __stringbuf_type	_M_stringbuf;790,25375
      basic_ostringstream(804,25840
      basic_ostringstream(821,26483
      basic_ostringstream(839,27207
      ~basic_ostringstream(850,27590
      basic_ostringstream(856,27722
      basic_ostringstream(862,27974
      basic_ostringstream(867,28192
	basic_ostringstream(873,28458
	basic_ostringstream(879,28655
	basic_ostringstream(887,28960
      operator=(operator=899,29307
      swap(907,29488
      rdbuf(922,29871
      str(930,30080
	basic_string<basic_string937,30272
	str(938,30312
      basic_string_view<basic_string_view948,30529
      view(949,30577
      str(960,30835
	str(968,31063
      str(973,31166
    class basic_stringstream 995,31972
      typedef _CharT 					char_type;999,32076
      typedef _Traits 					traits_type;1000,32113
      typedef _Alloc				       	allocator_type;1003,32244
      typedef typename traits_type::int_type 		int_type;1004,32292
      typedef typename traits_type::pos_type 		pos_type;1005,32349
      typedef typename traits_type::off_type 		off_type;1006,32406
      typedef basic_string<_CharT,_CharT1009,32493
      typedef basic_string<_CharT, _Traits,1009,32493
      typedef basic_string<_CharT, _Traits, _Alloc> 	__string_type;1009,32493
      typedef basic_stringbuf<_CharT,_CharT1010,32561
      typedef basic_stringbuf<_CharT, _Traits,1010,32561
      typedef basic_stringbuf<_CharT, _Traits, _Alloc> 	__stringbuf_type;1010,32561
      typedef basic_iostream<char_type,char_type1011,32635
      typedef basic_iostream<char_type, traits_type>	__iostream_type;1011,32635
      __stringbuf_type	_M_stringbuf;1014,32719
      basic_stringstream(1028,33191
      basic_stringstream(1043,33781
      basic_stringstream(1059,34403
      ~basic_stringstream(1070,34778
      basic_stringstream(1076,34907
      basic_stringstream(1082,35159
      basic_stringstream(1087,35344
	basic_stringstream(1094,35619
	basic_stringstream(1100,35828
	basic_stringstream(1108,36115
      operator=(operator=1121,36484
      swap(1129,36665
      rdbuf(1144,37048
      str(1152,37257
	basic_string<basic_string1159,37449
	str(1160,37489
      basic_string_view<basic_string_view1170,37706
      view(1171,37754
      str(1182,38012
	str(1190,38240
      str(1195,38343
#undef _GLIBCXX_SSTREAM_ALWAYS_INLINE1235,39639
#undef _GLIBCXX_LVAL_REF_QUAL1236,39677

/usr/include/c++/13/stack,32
#define _GLIBCXX_STACK 56,2264

/usr/include/c++/13/stacktrace,2327
#define _GLIBCXX_STACKTRACE 25,1037
namespace std _GLIBCXX_VISIBILITY(82,2479
#define __cpp_lib_stacktrace 86,2558
  class stacktrace_entry89,2644
    stacktrace_entry(100,2877
    constexpr explicit operator bool(115,3275
    description(119,3404
    source_file(127,3531
    source_line(135,3666
    static void _S_err_handler(158,4266
    _S_init(161,4365
    _M_get_info(172,4617
      struct _Data177,4724
	string* _M_desc;179,4751
	string* _M_file;180,4769
	int* _M_line;181,4787
    _S_demangle(214,5799
    class basic_stacktrace231,6189
      current(253,6977
      current(269,7440
      current(289,7996
      basic_stacktrace(326,9027
      basic_stacktrace(331,9145
      basic_stacktrace(335,9245
      basic_stacktrace(340,9429
      basic_stacktrace(345,9594
      basic_stacktrace(353,9838
      operator=(operator=366,10299
      operator=(operator=410,11269
      constexpr ~basic_stacktrace(452,12330
      allocator_type get_allocator(458,12439
      begin(461,12534
      end(465,12637
      rbegin(469,12729
      rend(473,12841
      const_iterator cbegin(476,12924
      const_iterator cend(477,12989
      const_reverse_iterator crbegin(478,13050
      const_reverse_iterator crend(479,13126
      [[nodiscard]] bool empty(481,13199
      size_type size(482,13271
      max_size(485,13354
      at(496,13605
	operator==(operator==506,13856
	operator<=>(operator<=>512,14087
      swap(523,14424
      _M_push_back(536,14779
      _M_clear(542,14903
      struct _Impl581,16039
	_S_max_size(590,16225
# define _GLIBCXX_OPERATOR_NEW 598,16518
# define _GLIBCXX_OPERATOR_DELETE 599,16572
# define _GLIBCXX_OPERATOR_NEW 601,16638
# define _GLIBCXX_OPERATOR_DELETE 602,16684
	_M_allocate(607,16804
	_M_deallocate(639,17575
#undef _GLIBCXX_OPERATOR_DELETE653,17947
#undef _GLIBCXX_OPERATOR_NEW654,17979
	_M_resize(658,18048
	_M_push_back(666,18244
	_M_clone(685,18782
	_M_xclone(692,18932
	_M_assign(702,19192
      [[no_unique_address]] allocator_type  _M_alloc{_M_alloc711,19433
      _Impl _M_impl{_M_impl713,19490
  operator<<(727,19886
    operator<<(741,20202
  namespace pmr768,20788
    struct hash<hash777,20958
      operator()(operator()780,21011
    struct hash<hash788,21221
      operator()(operator()791,21286

/usr/include/c++/13/stdatomic.h,3287
#define _GLIBCXX_STDATOMIC_H30,1182
#define __cpp_lib_stdatomic_h 35,1257
#define _Atomic(37,1296
using std::memory_order;39,1335
using std::memory_order_relaxed;40,1360
using std::memory_order_consume;41,1393
using std::memory_order_acquire;42,1426
using std::memory_order_release;43,1459
using std::memory_order_acq_rel;44,1492
using std::memory_order_seq_cst;45,1525
using std::atomic_flag;46,1558
using std::atomic_bool;47,1582
using std::atomic_char;48,1606
using std::atomic_schar;49,1630
using std::atomic_uchar;50,1655
using std::atomic_short;51,1680
using std::atomic_ushort;52,1705
using std::atomic_int;53,1731
using std::atomic_uint;54,1754
using std::atomic_long;55,1778
using std::atomic_ulong;56,1802
using std::atomic_llong;57,1827
using std::atomic_ullong;58,1852
using std::atomic_char8_t;60,1906
using std::atomic_char16_t;62,1940
using std::atomic_char32_t;63,1968
using std::atomic_wchar_t;64,1996
using std::atomic_int8_t;66,2058
using std::atomic_uint8_t;67,2084
using std::atomic_int16_t;68,2111
using std::atomic_uint16_t;69,2138
using std::atomic_int32_t;70,2166
using std::atomic_uint32_t;71,2193
using std::atomic_int64_t;72,2221
using std::atomic_uint64_t;73,2248
using std::atomic_int_least8_t;74,2276
using std::atomic_uint_least8_t;75,2308
using std::atomic_int_least16_t;76,2341
using std::atomic_uint_least16_t;77,2374
using std::atomic_int_least32_t;78,2408
using std::atomic_uint_least32_t;79,2441
using std::atomic_int_least64_t;80,2475
using std::atomic_uint_least64_t;81,2508
using std::atomic_int_fast8_t;82,2542
using std::atomic_uint_fast8_t;83,2573
using std::atomic_int_fast16_t;84,2605
using std::atomic_uint_fast16_t;85,2637
using std::atomic_int_fast32_t;86,2670
using std::atomic_uint_fast32_t;87,2702
using std::atomic_int_fast64_t;88,2735
using std::atomic_uint_fast64_t;89,2767
using std::atomic_intptr_t;91,2807
using std::atomic_uintptr_t;92,2835
using std::atomic_size_t;93,2864
using std::atomic_ptrdiff_t;94,2890
using std::atomic_intmax_t;96,2954
using std::atomic_uintmax_t;97,2982
using std::atomic_is_lock_free;99,3018
using std::atomic_load;100,3050
using std::atomic_load_explicit;101,3074
using std::atomic_store;102,3107
using std::atomic_store_explicit;103,3132
using std::atomic_exchange;104,3166
using std::atomic_exchange_explicit;105,3194
using std::atomic_compare_exchange_strong;106,3231
using std::atomic_compare_exchange_strong_explicit;107,3274
using std::atomic_compare_exchange_weak;108,3326
using std::atomic_compare_exchange_weak_explicit;109,3367
using std::atomic_fetch_add;110,3417
using std::atomic_fetch_add_explicit;111,3446
using std::atomic_fetch_sub;112,3484
using std::atomic_fetch_sub_explicit;113,3513
using std::atomic_fetch_or;114,3551
using std::atomic_fetch_or_explicit;115,3579
using std::atomic_fetch_xor;116,3616
using std::atomic_fetch_xor_explicit;117,3645
using std::atomic_fetch_and;118,3683
using std::atomic_fetch_and_explicit;119,3712
using std::atomic_flag_test_and_set;120,3750
using std::atomic_flag_test_and_set_explicit;121,3787
using std::atomic_flag_clear;122,3833
using std::atomic_flag_clear_explicit;123,3863
using std::atomic_thread_fence;124,3902
using std::atomic_signal_fence;125,3934

/usr/include/c++/13/stdexcept,1105
#define _GLIBCXX_STDEXCEPT 34,1229
namespace std _GLIBCXX_VISIBILITY(41,1326
  struct __cow_string48,1526
      const char* _M_p;51,1564
      char _M_bytes[_M_bytes52,1588
    __cow_string(55,1638
    __cow_string(56,1658
    __cow_string(57,1696
    __cow_string(58,1735
  typedef basic_string<char> __sso_string;67,2016
  typedef basic_string<char> __cow_string;69,2091
  struct __sso_string72,2202
    struct __str74,2228
      const char* _M_p;76,2251
      size_t _M_string_length;77,2275
      char _M_local_buf[_M_local_buf78,2306
      __str _M_s;82,2355
      char _M_bytes[_M_bytes83,2373
    __sso_string(86,2417
  typedef basic_string<char> __sso_string;99,2842
  typedef basic_string<char> __cow_string;100,2885
  class logic_error 113,3244
    __cow_string _M_msg;115,3287
  class domain_error 153,4477
  class invalid_argument 168,5010
  class length_error 184,5663
  class out_of_range 200,6267
  class runtime_error 219,6970
    __cow_string _M_msg;221,7015
  class range_error 258,8195
  class overflow_error 273,8709
  class underflow_error 288,9260

/usr/include/c++/13/stdfloat,57
#define _GLIBCXX_STDFLOAT 30,1168
namespace std35,1252

/usr/include/c++/13/stdlib.h,922
#define _GLIBCXX_STDLIB_H 34,1272
using std::abort;38,1322
using std::atexit;39,1340
using std::exit;40,1359
  using std::at_quick_exit;43,1439
  using std::quick_exit;46,1508
  using std::_Exit;49,1570
using std::div_t;54,1626
using std::ldiv_t;55,1644
using std::abs;57,1664
using std::atof;58,1680
using std::atoi;59,1697
using std::atol;60,1714
using std::bsearch;61,1731
using std::calloc;62,1751
using std::div;63,1770
using std::free;64,1786
using std::getenv;65,1803
using std::labs;66,1822
using std::ldiv;67,1839
using std::malloc;68,1856
using std::mblen;70,1906
using std::mbstowcs;71,1924
using std::mbtowc;72,1945
using std::qsort;74,1998
using std::rand;75,2016
using std::realloc;76,2033
using std::srand;77,2053
using std::strtod;78,2071
using std::strtol;79,2090
using std::strtoul;80,2109
using std::system;81,2129
using std::wcstombs;83,2176
using std::wctomb;84,2197

/usr/include/c++/13/stop_token,2602
#define _GLIBCXX_STOP_TOKEN30,1174
#define __cpp_lib_jthread 41,1350
namespace std _GLIBCXX_VISIBILITY(43,1385
  struct nostopstate_t 48,1538
  class stop_token54,1750
    stop_token(57,1783
    stop_requested(79,2266
    swap(85,2399
    swap(94,2633
    _S_yield(103,2842
    struct binary_semaphore112,3015
      explicit binary_semaphore(114,3049
      void release(116,3117
      void acquire(118,3191
      atomic<int> _M_counter;130,3401
    struct _Stop_cb134,3446
      __cb_type* _M_callback;137,3522
      binary_semaphore _M_done{_M_done141,3658
      _Stop_cb(145,3740
      void _M_run(149,3809
    struct _Stop_state_t152,3869
      std::atomic<value_type> _M_owners{_M_owners159,4109
      std::atomic<value_type> _M_value{_M_value160,4153
      std::thread::id _M_requester;162,4249
      _M_stop_possible(167,4331
      _M_stop_requested(175,4581
      _M_add_owner(181,4714
      _M_release_ownership(187,4820
      _M_add_ssrc(194,4959
      _M_sub_ssrc(200,5081
      _M_lock(207,5225
      _M_request_stop(224,5673
      _M_register_callback(281,6849
      _M_remove_callback(313,7729
      _M_try_lock(359,9026
      _M_try_lock_and_stop(372,9603
      _M_do_try_lock(379,9801
    struct _Stop_state_ref394,10207
      _Stop_state_ref(400,10334
      _Stop_state_ref(404,10423
      _Stop_state_ref(411,10574
      operator=(operator=418,10730
      operator=(operator=432,11026
      ~_Stop_state_ref(438,11160
      swap(445,11261
      explicit operator bool(operator bool448,11353
      _Stop_state_t* operator->(450,11430
      operator==(operator==457,11664
      operator!=(operator!=462,11822
    _Stop_state_ref _M_state;471,12029
    stop_token(474,12073
  class stop_source480,12219
    stop_source(483,12253
    explicit stop_source(486,12298
    stop_source(489,12361
    operator=(operator=499,12575
    ~stop_source(514,12892
    stop_possible(522,12997
    stop_requested(529,13114
    request_stop(535,13247
    get_token(544,13418
    swap(550,13506
    operator==(operator==557,13632
    stop_token::_Stop_state_ref _M_state;569,13883
    class [[nodiscard]] stop_callback574,14031
      template<typename _Cb,582,14235
               enable_if_t<enable_if_t583,14264
      template<typename _Cb,596,14654
               enable_if_t<enable_if_t597,14683
      ~stop_callback(610,15055
      struct _Cb_impl 624,15397
	  _Cb_impl(628,15486
	_Callback _M_cb;633,15582
	_S_execute(637,15640
      _Cb_impl _M_cb;644,15791
      stop_token::_Stop_state_ref _M_state;645,15813

/usr/include/c++/13/streambuf,2264
#define _GLIBXX_STREAMBUF 34,1226
namespace std _GLIBCXX_VISIBILITY(47,1495
#define _IsUnused 51,1574
    class basic_streambuf124,5559
      typedef _CharT 					char_type;133,5838
      typedef _Traits 					traits_type;134,5875
      typedef typename traits_type::int_type 		int_type;135,5915
      typedef typename traits_type::pos_type 		pos_type;136,5972
      typedef typename traits_type::off_type 		off_type;137,6029
      typedef basic_streambuf<char_type,char_type142,6150
      typedef basic_streambuf<char_type, traits_type>  	__streambuf_type;142,6150
      template<bool _IsMove,154,6635
      template<typename _CharT2,166,7143
      template<typename _CharT2,173,7425
      template<typename _CharT2, typename _Traits2,173,7425
      template<typename _CharT2,178,7646
      template<typename _CharT2, typename _Traits2,178,7646
      char_type* 		_M_in_beg;191,8143
      char_type* 		_M_in_cur;192,8201
      char_type* 		_M_in_end;193,8259
      char_type* 		_M_out_beg;194,8315
      char_type* 		_M_out_cur;195,8373
      char_type* 		_M_out_end;196,8430
      locale 			_M_buf_locale;199,8521
      ~basic_streambuf(204,8627
      pubimbue(216,8900
      getloc(233,9352
      pubsetbuf(246,9775
      pubseekoff(258,10138
      pubseekpos(270,10531
      pubsync(278,10747
      in_avail(291,11181
      snextc(305,11583
      sbumpc(323,12089
      sgetc(345,12667
      sgetn(364,13188
      sputbackc(379,13742
      sungetc(404,14522
      sputc(431,15348
      sputn(457,16043
      basic_streambuf(470,16530
      eback(489,17161
      gptr(492,17221
      egptr(495,17282
      gbump(505,17546
      setg(516,17900
      pbase(536,18518
      pptr(539,18579
      epptr(542,18639
      pbump(552,18906
      setp(562,19223
      imbue(583,19928
      virtual basic_streambuf<basic_streambuf597,20431
      setbuf(598,20481
      seekoff(609,20841
      seekpos(621,21294
      sync(634,21771
      showmanyc(656,22802
      underflow(694,24480
      uflow(707,25011
      pbackfail(731,25757
      overflow(775,27645
      _GLIBCXX_DEPRECATED_SUGGEST(789,28087
      __safe_gbump(802,28359
      __safe_pbump(805,28428
      swap(819,28705
#undef _IsUnused855,29810

/usr/include/c++/13/string,155
#define _GLIBCXX_STRING	34,1250
namespace std _GLIBCXX_VISIBILITY(59,1991
namespace std _GLIBCXX_VISIBILITY(79,2634
#define __cpp_lib_erase_if 83,2713

/usr/include/c++/13/string_view,1972
#define _GLIBCXX_STRING_VIEW 34,1268
namespace std _GLIBCXX_VISIBILITY(56,1691
# define __cpp_lib_string_view 61,1790
# define __cpp_lib_constexpr_string_view 65,1863
#define __cpp_lib_starts_ends_with 387,11089
# define __cpp_lib_string_contains 428,12427
    operator==(operator==611,18387
    operator==(operator==618,18656
    operator==(operator==644,19665
    operator!=(operator!=651,19953
    operator!=(operator!=658,20186
    operator!=(operator!=666,20442
    operator< 673,20694
    operator< 680,20934
    operator< 688,21197
    operator> 695,21456
    operator> 702,21696
    operator> 710,21959
    operator<=(operator<=717,22218
    operator<=(operator<=724,22459
    operator<=(operator<=732,22723
    operator>=(operator>=739,22983
    operator>=(operator>=746,23224
    operator>=(operator>=754,23488
    operator<<(763,23853
    struct hash<hash784,24468
      operator()(operator()789,24582
    struct __is_fast_hash<__is_fast_hash794,24731
    struct hash<hash798,24817
      operator()(operator()803,24933
    struct __is_fast_hash<__is_fast_hash809,25132
    struct hash<hash814,25247
      operator()(operator()819,25365
    struct __is_fast_hash<__is_fast_hash824,25516
    struct hash<hash829,25611
      operator()(operator()834,25731
    struct __is_fast_hash<__is_fast_hash840,25933
    struct hash<hash844,26022
      operator()(operator()849,26142
    struct __is_fast_hash<__is_fast_hash855,26344
  inline namespace literals858,26420
  inline namespace string_view_literals860,26452
    operator""soperator""865,26619
    operator""soperator""869,26781
    operator""soperator""874,26977
    operator""soperator""879,27153
    operator""soperator""883,27324
  namespace ranges891,27556
    template<typename _CharT,894,27619
	enable_borrowed_range<enable_borrowed_range896,27695
    template<typename _CharT,899,27793
	enable_view<enable_view901,27869

/usr/include/c++/13/syncstream,1362
#define _GLIBCXX_SYNCSTREAM 30,1174
#define __cpp_lib_syncbuf 37,1288
namespace std _GLIBCXX_VISIBILITY(51,1570
    class basic_syncbuf 56,1712
      basic_syncbuf(67,2116
      basic_syncbuf(72,2213
      basic_syncbuf(76,2316
      basic_syncbuf(82,2498
      ~basic_syncbuf(92,2833
      operator=(operator=103,2946
      swap(118,3284
      emit(132,3751
      get_wrapped(161,4285
      get_allocator(165,4377
      set_emit_on_sync(169,4468
      sync(174,4575
      overflow(183,4722
      xsputn(192,4945
      basic_stringbuf<basic_stringbuf196,5061
      basic_stringbuf<char_type, traits_type, allocator_type> _M_impl;196,5061
      struct __mutex198,5133
	mutex* _M_mtx;201,5188
	__mutex(203,5205
	swap(208,5285
	lock(212,5365
	unlock(218,5405
	_S_get_mutex(225,5499
	__mutex(234,5677
	void swap(235,5697
	void lock(236,5732
	void unlock(237,5749
      __mutex _M_mtx;242,5857
    class basic_osyncstream 246,5951
      using syncbuf_type = basic_syncbuf<_CharT, _Traits,258,6384
      syncbuf_type _M_syncbuf;262,6533
      basic_osyncstream(265,6577
      explicit basic_osyncstream(269,6730
      basic_osyncstream(273,6860
      explicit basic_osyncstream(278,7059
      basic_osyncstream(282,7225
      syncbuf_type* rdbuf(291,7547
      streambuf_type* get_wrapped(294,7648
      void emit(297,7743

/usr/include/c++/13/system_error,2152
#define _GLIBCXX_SYSTEM_ERROR 30,1180
namespace std _GLIBCXX_VISIBILITY(48,1512
    struct is_error_code_enum 62,1754
    struct is_error_condition_enum 66,1865
  class error_category106,3271
    constexpr error_category(109,3308
    operator<(171,5250
    operator!=(operator!=175,5382
namespace __adl_only200,5897
  class error_code223,6756
      using _Check226,6817
    error_code(230,6908
    error_code(233,6985
    template<typename _ErrorCodeEnum,237,7161
	     typename 238,7199
    assign(249,7481
    clear(256,7606
    value(262,7721
    category(267,7873
    message(276,8146
    explicit operator bool(operator bool281,8277
    int            		_M_value;286,8378
    const error_category* 	_M_cat;287,8409
  make_error_code(302,8760
  operator<=>(operator<=>316,9162
  operator<(324,9393
  template<typename _CharT,337,9711
    operator<<(339,9793
  class error_condition354,10369
      using _Check357,10440
    error_condition(362,10615
    error_condition(366,10756
    template<typename _ErrorConditionEnum,370,10942
	     typename 371,10985
    assign(383,11348
    clear(391,11544
    value(399,11693
    category(404,11845
    message(409,11985
    explicit operator bool(operator bool414,12116
    int 			_M_value;419,12217
    const error_category* 	_M_cat;420,12238
  make_error_condition(435,12604
  operator==(operator==449,12979
  operator==(operator==465,13459
  operator==(operator==480,13890
  operator<=>(operator<=>498,14382
  operator<(507,14630
  operator==(operator==517,14902
  operator!=(operator!=525,15150
  operator!=(operator!=530,15295
  operator!=(operator!=535,15450
  operator!=(operator!=540,15605
  class system_error 556,16022
    error_code 	_M_code;559,16086
    system_error(562,16122
    system_error(565,16227
    system_error(568,16357
    system_error(571,16485
    system_error(574,16618
    system_error(578,16762
    code(590,17155
namespace std _GLIBCXX_VISIBILITY(598,17289
    struct hash<hash607,17505
      operator()(operator()611,17597
    struct hash<hash624,17975
      operator()(operator()628,18077

/usr/include/c++/13/tgmath.h,35
#define _GLIBCXX_TGMATH_H 40,1324

/usr/include/c++/13/thread,984
#define _GLIBCXX_THREAD 30,1162
namespace std _GLIBCXX_VISIBILITY(48,1628
  operator!=(operator!=71,2109
  operator<(75,2206
  operator<=(operator<=83,2450
  operator>(87,2546
  operator>=(operator>=91,2638
    operator<<(97,2844
  class jthread134,4135
    jthread(140,4252
    template<typename _Callable,144,4318
    template<typename _Callable, typename... _Args,144,4318
      jthread(148,4475
    ~jthread(156,4732
    operator=(operator=169,4913
    swap(176,5049
    joinable(183,5225
    join(189,5312
    detach(195,5369
    get_id(201,5442
    native_handle(207,5553
    hardware_concurrency(213,5660
    get_stop_source(219,5784
    get_stop_token(225,5886
    bool request_stop(230,5976
  private:private240,6166
      _S_create(243,6249
    template<typename _Callable,266,6993
    template<typename _Callable, typename _Obj,266,6993
      _S_create_pmf(268,7080
    stop_source _M_stop_source;276,7307
    thread _M_thread;277,7339

/usr/include/c++/13/tuple,5485
#define _GLIBCXX_TUPLE 30,1159
# define __cpp_lib_constexpr_tuple 45,1593
namespace std _GLIBCXX_VISIBILITY(48,1644
    struct __is_empty_non_tuple 61,1850
      typedef _Tuple_impl<_Idx + 1, _Tail...> _Inherited;265,8248
      typedef _Head_base<_Idx, _Head> _Base;266,8306
      typedef _Head_base<_Idx, _Head> _Base;494,15710
    struct _TupleConstraints685,20823
	static constexpr bool __is_implicitly_constructible(697,21293
	static constexpr bool __is_explicitly_constructible(708,21670
      static constexpr bool __is_implicitly_default_constructible(715,21828
      static constexpr bool __is_explicitly_default_constructible(721,22000
    class tuple 746,22756
      typedef _Tuple_impl<0, _Elements...> _Inherited;748,22816
      template<bool _Cond,766,23398
      template<bool _Cond,772,23611
	__assignable(780,23899
	static constexpr bool __nothrow_assignable(785,24093
	static constexpr bool __nothrow_constructible(793,24325
	static constexpr bool __valid_args(801,24567
      template<typename,typename808,24777
      template<typename, typename,808,24777
	static constexpr bool __valid_args(809,24831
      template<typename _Tuple,821,25432
      template<typename _Tuple,828,25695
      template<typename _Tuple, typename _Tp,828,25695
	: __or_<__or_830,25809
	: __or_<is_convertible<_Tuple, _Tp>, is_constructible<_Tp, _Tuple>>::typetype830,25809
      template<typename _Tuple,834,26029
	: true_type836,26129
	static constexpr bool __use_other_ctor(843,26387
	       _ImplicitCtor<_ImplicitCtor872,27289
	       _ExplicitCtor<_ExplicitCtor879,27554
	       _ImplicitCtor<_ImplicitCtor887,27860
	       _ExplicitCtor<_ExplicitCtor895,28163
      template<typename... _UElements,905,28475
	       _ImplicitCtor<_ImplicitCtor908,28643
	       _ExplicitCtor<_ExplicitCtor918,29059
	       _ImplicitCtor<_ImplicitCtor928,29482
	       _ExplicitCtor<_ExplicitCtor937,29870
	tuple(950,30368
	tuple(961,30783
      template<typename _Alloc,968,31019
	       _ImplicitCtor<_ImplicitCtor975,31294
	       _ExplicitCtor<_ExplicitCtor982,31590
      template<typename _Alloc, typename... _UElements,989,31819
	       _ImplicitCtor<_ImplicitCtor991,31928
      template<typename _Alloc, typename... _UElements,998,32160
	       _ExplicitCtor<_ExplicitCtor1000,32264
      template<typename _Alloc, typename... _UElements,1018,32879
	       _ImplicitCtor<_ImplicitCtor1021,33066
      template<typename _Alloc, typename... _UElements,1029,33341
	       _ExplicitCtor<_ExplicitCtor1032,33528
      template<typename _Alloc, typename... _UElements,1041,33814
	       _ImplicitCtor<_ImplicitCtor1044,33996
      template<typename _Alloc, typename... _UElements,1052,34254
	       _ExplicitCtor<_ExplicitCtor1055,34436
      template<typename _Alloc,1065,34731
	tuple(1071,34987
      template<typename _Alloc,1077,35168
	tuple(1083,35439
      operator=(operator=1094,35717
      operator=(operator=1105,35989
	operator=(operator=1117,36330
	operator=(operator=1127,36596
      operator=(operator=1136,36801
      operator=(operator=1144,36989
      swap(1175,37814
      swap(1187,38421
    class tuple<tuple1209,39281
      void swap(1213,39344
      constexpr void swap(1215,39419
	tuple(1223,39711
	tuple(1226,39817
      typedef _Tuple_impl<0, _T1, _T2> _Inherited;1234,40099
      operator=(operator=1605,52961
      operator=(operator=1616,53239
	operator=(operator=1628,53578
	operator=(operator=1638,53840
	operator=(operator=1686,55083
	operator=(operator=1697,55410
    struct tuple_size<tuple_size1749,56922
      typedef __tuple_element_t<__i, tuple<_Elements...>> __element_type;1803,58995
      typedef __tuple_element_t<__i, tuple<_Elements...>> __element_type;1812,59398
#define __cpp_lib_tuples_by_type 1825,59827
    struct __tuple_compare1875,61813
      __eq(1878,61874
      __less(1885,62083
    operator==(operator==1905,62696
    operator<=>(operator<=>1938,63826
    operator<(1947,64160
    operator!=(operator!=1960,64637
    operator>(1966,64835
    operator<=(operator<=1972,65027
    operator>=(operator>=1978,65224
	__result_type;1990,65665
      typedef tuple<_Tp...> __type;2037,67220
    struct __do_make_tuple2041,67292
    struct __make_tuple2047,67489
    struct __combine_tuples<__combine_tuples2056,67699
      typedef tuple<> __type;2058,67735
    struct __combine_tuples<__combine_tuples2062,67801
      typedef tuple<_Ts...> __type;2064,67850
					_Rem...>::__type __type2071,68099
    struct __tuple_cat_result2076,68243
        <typename __make_tuple<_Tpls>::__type...>::__type __type;2079,68319
    struct __make_1st_indices<__make_1st_indices2088,68552
      typedef _Index_tuple<> __type;2090,68590
      typedef typename _Build_index_tuple<_Build_index_tuple2096,68730
	  typedef typename __make_1st_indices<_Tpls...>::__type __type2113,69393
	  typedef __tuple_concater<_Ret, __idx, _Tpls...>      __next;2114,69457
    struct __is_tuple_like_impl<__is_tuple_like_impl2133,69932
      typedef typename __tuple_cat_result<_Tpls...>::__type __type2144,70328
      typedef typename __make_1st_indices<_Tpls...>::__type __type2145,70395
      typedef __tuple_concater<__ret, __idx, _Tpls...> __concater;2146,70462
  struct _Swallow_assign2194,72174
      operator=(operator=2198,72277
# define __cpp_lib_apply 2282,75555
#define __cpp_lib_make_from_tuple 2304,76251

/usr/include/c++/13/type_traits,23779
#define _GLIBCXX_TYPE_TRAITS 30,1183
namespace std _GLIBCXX_VISIBILITY(40,1337
    struct integral_constant62,1839
      typedef _Tp                           value_type;65,1931
      typedef integral_constant<_Tp,_Tp66,1987
      typedef integral_constant<_Tp, __v>   type;66,1987
      constexpr operator value_type(67,2037
#define __cpp_lib_integral_constant_callable 70,2135
      constexpr value_type operator(72,2189
# define __cpp_lib_bool_constant 94,2813
    { typedef _Tp type;112,3316
    struct __conditional119,3518
      template<typename _Tp,121,3549
    struct __type_identity139,4010
    struct __or_171,5030
    struct __and_176,5130
    struct __not_181,5229
  namespace __detail194,5539
    template<typename typename196,5564
    template<typename /* = void */, typename _B1,196,5564
      struct __disjunction_impl197,5631
    template<typename _B1,200,5693
    template<typename _B1, typename _B2,200,5693
      struct __disjunction_impl<__disjunction_impl201,5751
      { using type = typename __disjunction_impl<void, _B2,202,5835
      { using type = typename __disjunction_impl<void, _B2, _Bn...>::type;type202,5835
    template<typename typename204,5914
    template<typename /* = void */, typename _B1,204,5914
      struct __conjunction_impl205,5981
    template<typename _B1,208,6043
    template<typename _B1, typename _B2,208,6043
      struct __conjunction_impl<__conjunction_impl209,6101
      { using type = typename __conjunction_impl<void, _B2,210,6184
      { using type = typename __conjunction_impl<void, _B2, _Bn...>::type;type210,6184
#define __cpp_lib_logical_traits 214,6304
    struct conjunction217,6374
    struct conjunction<conjunction222,6475
    struct disjunction227,6554
    struct disjunction<disjunction232,6655
    struct negation237,6732
    struct is_void298,8300
    struct is_void<is_void302,8362
    struct is_void<is_void306,8429
    struct is_void<is_void310,8502
    struct is_void<is_void314,8578
    struct __is_integral_helper319,8693
    struct __is_integral_helper<__is_integral_helper323,8768
    struct __is_integral_helper<__is_integral_helper327,8848
    struct __is_integral_helper<__is_integral_helper331,8928
    struct __is_integral_helper<__is_integral_helper335,9015
    struct __is_integral_helper<__is_integral_helper342,9308
    struct __is_integral_helper<__is_integral_helper347,9419
    struct __is_integral_helper<__is_integral_helper352,9509
    struct __is_integral_helper<__is_integral_helper356,9593
    struct __is_integral_helper<__is_integral_helper360,9677
    struct __is_integral_helper<__is_integral_helper364,9758
    struct __is_integral_helper<__is_integral_helper368,9848
    struct __is_integral_helper<__is_integral_helper372,9927
    struct __is_integral_helper<__is_integral_helper376,10015
    struct __is_integral_helper<__is_integral_helper380,10095
    struct __is_integral_helper<__is_integral_helper384,10184
    struct __is_integral_helper<__is_integral_helper388,10269
    struct __is_integral_helper<__is_integral_helper396,10527
    struct __is_integral_helper<__is_integral_helper401,10641
    struct __is_integral_helper<__is_integral_helper407,10806
    struct __is_integral_helper<__is_integral_helper412,10920
    struct __is_integral_helper<__is_integral_helper418,11085
    struct __is_integral_helper<__is_integral_helper423,11199
    struct __is_integral_helper<__is_integral_helper429,11364
    struct __is_integral_helper<__is_integral_helper434,11478
    struct is_integral441,11637
    struct __is_floating_point_helper447,11776
    struct __is_floating_point_helper<__is_floating_point_helper451,11857
    struct __is_floating_point_helper<__is_floating_point_helper455,11944
    struct __is_floating_point_helper<__is_floating_point_helper459,12032
    struct __is_floating_point_helper<__is_floating_point_helper464,12153
    struct __is_floating_point_helper<__is_floating_point_helper470,12278
    struct __is_floating_point_helper<__is_floating_point_helper476,12403
    struct __is_floating_point_helper<__is_floating_point_helper482,12529
    struct __is_floating_point_helper<__is_floating_point_helper488,12656
    struct __is_floating_point_helper<__is_floating_point_helper494,12832
    struct is_floating_point501,12982
    struct is_array507,13123
    struct is_array<is_array511,13217
    struct is_array<is_array515,13303
    struct __is_pointer_helper519,13380
    struct __is_pointer_helper<__is_pointer_helper523,13466
    struct is_pointer528,13574
    struct is_lvalue_reference534,13712
    struct is_lvalue_reference<is_lvalue_reference538,13798
    struct is_rvalue_reference543,13911
    struct is_rvalue_reference<is_rvalue_reference547,13997
    struct __is_member_object_pointer_helper551,14085
    struct __is_member_object_pointer_helper<__is_member_object_pointer_helper555,14199
    struct is_member_object_pointer560,14362
    struct __is_member_function_pointer_helper565,14502
    struct __is_member_function_pointer_helper<__is_member_function_pointer_helper569,14618
    struct is_member_function_pointer574,14777
    struct is_enum580,14939
    struct is_union586,15061
    struct is_class592,15185
    struct is_function598,15312
    struct is_function<is_function602,15424
    struct is_function<is_function606,15508
#define __cpp_lib_is_null_pointer 609,15568
    struct is_null_pointer613,15670
    struct is_null_pointer<is_null_pointer617,15740
    struct is_null_pointer<is_null_pointer621,15825
    struct is_null_pointer<is_null_pointer625,15916
    struct is_null_pointer<is_null_pointer629,16010
    struct __is_nullptr_t635,16230
    struct is_reference643,16429
    struct is_reference<is_reference648,16512
    struct is_reference<is_reference653,16600
    struct is_arithmetic659,16709
    struct is_fundamental665,16857
    struct is_object672,17020
    struct is_scalar682,17254
    struct is_compound689,17469
    struct __is_member_pointer_helper694,17595
    struct __is_member_pointer_helper<__is_member_pointer_helper698,17702
    struct is_member_pointer704,17845
    struct is_const768,19619
    struct is_const<is_const772,19694
    struct is_volatile777,19793
    struct is_volatile<is_volatile781,19871
    struct is_trivial786,19979
    struct is_trivially_copyable795,20271
    struct is_standard_layout804,20582
    struct is_empty842,21823
    struct is_polymorphic848,21953
#define __cpp_lib_is_final 853,22076
    struct is_final857,22170
    struct is_abstract864,22304
    struct is_signed882,22729
    struct is_unsigned888,22846
    struct __is_array_known_bounds910,23309
    struct __is_array_known_bounds<__is_array_known_bounds915,23417
    struct __is_array_unknown_bounds920,23522
    struct __is_array_unknown_bounds<__is_array_unknown_bounds925,23618
  struct __do_is_destructible_impl936,24047
    template<typename _Tp,938,24086
    struct __is_destructible_impl946,24286
      typedef decltype(__test<__test949,24365
    struct is_destructible976,25150
  struct __do_is_nt_destructible_impl989,25629
    struct __is_nt_destructible_impl1000,25872
      typedef decltype(__test<__test1003,25957
    struct is_nothrow_destructible1030,26765
    struct is_constructible1045,27257
    struct is_default_constructible1054,27556
    struct is_copy_constructible1076,28221
    struct is_move_constructible1098,28914
    struct is_nothrow_constructible1113,29443
    struct is_nothrow_default_constructible1122,29764
    struct is_nothrow_copy_constructible1131,30080
    struct is_nothrow_move_constructible1140,30422
    struct is_assignable1154,30913
    struct is_copy_assignable1163,31193
    struct is_move_assignable1173,31526
    struct is_nothrow_assignable1188,32043
    struct is_nothrow_copy_assignable1197,32347
    struct is_nothrow_move_assignable1207,32705
    struct is_trivially_constructible1223,33275
    struct is_trivially_default_constructible1232,33602
  struct __do_is_implicitly_default_constructible_impl1239,33861
    struct __is_implicitly_default_constructible_impl1252,34192
      typedef decltype(__test(1255,34311
    struct __is_implicitly_default_constructible_safe1259,34397
    struct __is_implicitly_default_constructible1264,34554
    struct is_trivially_copy_constructible1271,34787
    struct is_trivially_move_constructible1280,35135
    struct is_trivially_assignable1295,35666
    struct is_trivially_copy_assignable1304,35976
    struct is_trivially_move_assignable1314,36342
    struct is_trivially_destructible1324,36699
    struct has_virtual_destructor1335,37061
    struct alignment_of1347,37398
    struct rank1356,37673
    struct rank<rank1360,37786
    struct rank<rank1364,37911
    struct is_same1393,38688
    struct is_base_of1410,39044
    struct is_convertible1416,39221
      typedef typename is_void<is_void1425,39508
      typedef decltype(__test<__test1446,40048
    struct is_convertible1452,40197
#define __cpp_lib_is_nothrow_convertible 1463,40558
    struct is_nothrow_convertible1473,40892
    struct is_nothrow_convertible1508,41851
    struct remove_const1523,42231
    { typedef _Tp     type;1524,42255
    struct remove_const<remove_const1527,42312
    { typedef _Tp     type;1528,42347
    struct remove_volatile1532,42426
    { typedef _Tp     type;1533,42453
    struct remove_volatile<remove_volatile1536,42510
    { typedef _Tp     type;1537,42551
    struct remove_cv1542,42655
    struct remove_cv1546,42747
    struct remove_cv<remove_cv1550,42821
    struct remove_cv<remove_cv1554,42906
    struct remove_cv<remove_cv1558,42994
    struct add_const1564,43111
    struct add_volatile1569,43210
    struct add_cv1574,43309
#define __cpp_lib_transformation_trait_aliases 1579,43397
    struct remove_reference1611,44302
    struct remove_reference1615,44408
    struct remove_reference<remove_reference1619,44489
    struct remove_reference<remove_reference1623,44576
    struct add_lvalue_reference1629,44698
    struct add_rvalue_reference1634,44828
    { typedef _Unqualified __type;1661,45664
    { typedef volatile _Unqualified 1665,45789
    { typedef const _Unqualified 1669,45923
    { typedef const volatile 1673,46053
      typedef __cv_selector<_Unqualified, _IsConst, _IsVol> __match;1680,46299
      typedef typename __match::__type 1683,46381
    struct __make_unsigned1688,46534
    { typedef _Tp __type;1689,46561
    struct __make_unsigned<__make_unsigned1692,46604
    { typedef unsigned char __type;1693,46637
    struct __make_unsigned<__make_unsigned1696,46690
    { typedef unsigned char __type;1697,46730
    struct __make_unsigned<__make_unsigned1700,46783
    { typedef unsigned short __type;1701,46817
    struct __make_unsigned<__make_unsigned1704,46871
    { typedef unsigned int __type;1705,46903
    struct __make_unsigned<__make_unsigned1708,46955
    { typedef unsigned long __type;1709,46988
    struct __make_unsigned<__make_unsigned1712,47041
    { typedef unsigned long long __type;1713,47079
    struct __make_unsigned<__make_unsigned1718,47189
    { typedef unsigned __GLIBCXX_TYPE_INT_N_0 __type;1719,47240
    struct __make_unsigned<__make_unsigned1724,47369
    { typedef unsigned __GLIBCXX_TYPE_INT_N_1 __type;1725,47420
    struct __make_unsigned<__make_unsigned1730,47549
    { typedef unsigned __GLIBCXX_TYPE_INT_N_2 __type;1731,47600
    struct __make_unsigned<__make_unsigned1736,47729
    { typedef unsigned __GLIBCXX_TYPE_INT_N_3 __type;1737,47780
  class __make_unsigned_selector_base1757,48328
    template<typename...> struct _List 1760,48383
    template<typename _Tp,1762,48428
    template<size_t _Sz,1766,48578
    template<size_t _Sz, typename _Tp,1766,48578
    template<size_t _Sz,1769,48670
    template<size_t _Sz, typename _Uint,1769,48670
    template<size_t _Sz,1773,48823
    template<size_t _Sz, typename _Uint,1773,48823
      : __select<__select1775,48943
    struct __make_unsigned<__make_unsigned1800,49858
	= typename __make_unsigned_selector<wchar_t, false,1803,49919
	= typename __make_unsigned_selector<wchar_t, false, true>::__type;__type1803,49919
    struct __make_unsigned<__make_unsigned1808,50036
	= typename __make_unsigned_selector<char8_t, false,1811,50097
	= typename __make_unsigned_selector<char8_t, false, true>::__type;__type1811,50097
    struct __make_unsigned<__make_unsigned1816,50193
	= typename __make_unsigned_selector<char16_t, false,1819,50255
	= typename __make_unsigned_selector<char16_t, false, true>::__type;__type1819,50255
    struct __make_unsigned<__make_unsigned1823,50345
	= typename __make_unsigned_selector<char32_t, false,1826,50407
	= typename __make_unsigned_selector<char32_t, false, true>::__type;__type1826,50407
    struct make_unsigned1835,50654
    { typedef typename __make_unsigned_selector<_Tp>::__type type;1836,50679
    struct __make_signed1848,51102
    { typedef _Tp __type;1849,51127
    struct __make_signed<__make_signed1852,51170
    { typedef signed char __type;1853,51201
    struct __make_signed<__make_signed1856,51252
    { typedef signed char __type;1857,51292
    struct __make_signed<__make_signed1860,51343
    { typedef signed short __type;1861,51384
    struct __make_signed<__make_signed1864,51436
    { typedef signed int __type;1865,51475
    struct __make_signed<__make_signed1868,51525
    { typedef signed long __type;1869,51565
    struct __make_signed<__make_signed1872,51616
    { typedef signed long long __type;1873,51661
    struct __make_signed<__make_signed1878,51769
    { typedef __GLIBCXX_TYPE_INT_N_0 __type;1879,51827
    struct __make_signed<__make_signed1884,51947
    { typedef __GLIBCXX_TYPE_INT_N_1 __type;1885,52005
    struct __make_signed<__make_signed1890,52125
    { typedef __GLIBCXX_TYPE_INT_N_2 __type;1891,52183
    struct __make_signed<__make_signed1896,52303
    { typedef __GLIBCXX_TYPE_INT_N_3 __type;1897,52361
      typedef typename __make_unsigned_selector<__make_unsigned_selector1921,53048
      typedef typename __make_signed_selector<__make_signed_selector1924,53139
    struct __make_signed<__make_signed1932,53513
	= typename __make_signed_selector<wchar_t, false,1935,53572
	= typename __make_signed_selector<wchar_t, false, true>::__type;__type1935,53572
    struct __make_signed<__make_signed1940,53693
	= typename __make_signed_selector<char8_t, false,1943,53752
	= typename __make_signed_selector<char8_t, false, true>::__type;__type1943,53752
    struct __make_signed<__make_signed1948,53846
	= typename __make_signed_selector<char16_t, false,1951,53906
	= typename __make_signed_selector<char16_t, false, true>::__type;__type1951,53906
    struct __make_signed<__make_signed1955,53994
	= typename __make_signed_selector<char32_t, false,1958,54054
	= typename __make_signed_selector<char32_t, false, true>::__type;__type1958,54054
    struct make_signed1967,54295
    { typedef typename __make_signed_selector<_Tp>::__type type;1968,54318
    struct remove_extent1990,54962
    { typedef _Tp     type;1991,54987
    struct remove_extent<remove_extent1994,55063
    { typedef _Tp     type;1995,55100
    struct remove_extent<remove_extent1998,55157
    { typedef _Tp     type;1999,55189
    struct remove_all_extents2003,55271
    { typedef _Tp     type;2004,55301
    struct remove_all_extents<remove_all_extents2007,55377
    { typedef typename remove_all_extents<_Tp>::type     type;2008,55419
    struct remove_all_extents<remove_all_extents2011,55511
    { typedef typename remove_all_extents<_Tp>::type     type;2012,55548
    struct __remove_pointer_helper2027,55983
    { typedef _Tp     type;2028,56018
    { typedef _Up     type;2032,56135
    struct remove_pointer2036,56213
    struct add_pointer2050,56563
    struct add_pointer<add_pointer2055,56660
    struct add_pointer<add_pointer2059,56743
    struct __aligned_storage_msa2073,57117
      union __type2075,57156
	unsigned char __data[__data2077,57183
	struct __attribute__((__aligned__)) { } __align;2078,57212
    struct __strictest_alignment2109,58166
      typedef typename aligned_storage<aligned_storage2156,59608
    struct __decay_selector2168,59989
    struct __decay_selector<__decay_selector2175,60239
    struct __decay_selector<__decay_selector2179,60331
    struct decay2186,60448
    struct decay<decay2190,60551
    struct decay<decay2194,60660
    struct __strip_reference_wrapper2201,60872
      typedef _Tp __type;2203,60915
    struct __strip_reference_wrapper<__strip_reference_wrapper2207,60974
      typedef _Tp& __type;2209,61042
    struct conditional2235,61805
    { typedef _Iftrue type;2236,61828
    { typedef _Iffalse type;2241,61996
    struct __success_type2257,62509
    { typedef _Tp type;2258,62535
  struct __failure_type2260,62563
  struct __do_common_type_impl2263,62595
    template<typename _Tp,2265,62630
    template<typename _Tp,2271,62876
      static __success_type<__success_type2272,62917
    template<typename _Tp,2278,63157
    template<typename,typename2283,63308
    template<typename _Tp,2287,63392
    struct common_type<common_type2294,63579
    struct common_type<common_type2299,63718
    struct __common_type_pack2329,64693
    struct underlying_type2369,65889
    struct __declval_protector2375,66017
#define __cpp_lib_result_of_sfinae 2399,66574
  struct __invoke_memfun_ref 2402,66643
  struct __invoke_memfun_deref 2403,66677
  struct __invoke_memobj_ref 2404,66713
  struct __invoke_memobj_deref 2405,66747
  struct __invoke_other 2406,66783
    struct __result_of_success 2410,66920
  struct __result_of_memfun_ref_impl2414,67053
    template<typename _Fp,2416,67094
    template<typename _Fp, typename _Tp1,2416,67094
      (std::declval<_Tp1>().*std::declval<std::declval2418,67198
    struct __result_of_memfun_ref2426,67456
      typedef decltype(_S_test<_MemPtr, _Arg, _Args...>(0)) type;2429,67538
  struct __result_of_memfun_deref_impl2433,67654
    template<typename _Fp,2435,67697
    template<typename _Fp, typename _Tp1,2435,67697
      ((*std::declval<_Tp1>()).*std::declval<std::declval2437,67801
    struct __result_of_memfun_deref2445,68064
      typedef decltype(_S_test<_MemPtr, _Arg, _Args...>(0)) type;2448,68150
  struct __result_of_memobj_ref_impl2452,68266
    template<typename _Fp,2454,68307
      std::declval<_Tp1>().*std::declval<std::declval2456,68392
    template<typename,typename2459,68485
    struct __result_of_memobj_ref2464,68610
      typedef decltype(_S_test<_S_test2467,68692
  struct __result_of_memobj_deref_impl2471,68798
    template<typename _Fp,2473,68841
      (*std::declval<_Tp1>()).*std::declval<std::declval2475,68926
    template<typename,typename2478,69024
    struct __result_of_memobj_deref2483,69149
      typedef decltype(_S_test<_S_test2486,69235
    struct __result_of_memobj<__result_of_memobj2493,69433
      typedef __remove_cvref_t<_Arg> _Argval;2495,69491
      typedef _Res _Class::* _MemPtr;2496,69537
      typedef typename __conditional_t<__conditional_t2497,69575
      >::type type;2501,69786
    struct __result_of_memfun<__result_of_memfun2508,69986
      typedef typename remove_reference<_Arg>::type _Argval;2510,70054
      typedef _Res _Class::* _MemPtr;2511,70115
      typedef typename __conditional_t<__conditional_t2512,70153
      >::type type;2515,70343
    struct __result_of_impl2536,70899
      typedef __failure_type type;2538,70933
  struct __result_of_other_impl2554,71459
    template<typename _Fn,2556,71495
      typedef decltype(_S_test<_S_test2569,71912
    struct __invoke_result2574,72090
    struct result_of<result_of2588,72474
#define __cpp_lib_void_t 2630,74056
    struct __detected_or2643,74502
    struct __detector2661,75101
#define _GLIBCXX_HAS_NESTED_TYPE(2691,76044
    struct __is_tuple_like_impl 2708,76489
    struct __is_tuple_like2713,76638
  namespace __swappable_details 2736,77293
    using std::swap;2737,77327
    struct __do_is_swappable_impl2739,77349
      template<typename _Tp,2741,77389
    struct __do_is_nothrow_swappable_impl2749,77615
    struct __is_swappable_impl2763,77952
      typedef decltype(__test<__test2766,78046
    struct __is_nothrow_swappable_impl2770,78124
      typedef decltype(__test<__test2773,78234
    struct __is_swappable2777,78312
    struct __is_nothrow_swappable2782,78417
#define __cpp_lib_is_swappable 2788,78603
    struct is_swappable2793,78751
    struct is_nothrow_swappable2802,79032
  namespace __swappable_with_details 2822,79652
    using std::swap;2823,79691
    struct __do_is_swappable_with_impl2825,79713
      template<typename _Tp,2827,79758
      template<typename _Tp, typename _Up,2827,79758
      template<typename,typename2833,80023
    struct __do_is_nothrow_swappable_with_impl2837,80105
      template<typename _Tp,2839,80158
      template<typename,typename2846,80404
    struct __is_swappable_with_impl2853,80568
      typedef decltype(__test<__test2856,80677
      typedef decltype(__test<__test2864,80935
    struct __is_nothrow_swappable_with_impl2868,81028
      typedef decltype(__test<__test2871,81153
      typedef decltype(__test<__test2879,81427
    struct is_swappable_with2885,81559
    struct is_nothrow_swappable_with2896,82034
    struct __is_invocable2989,85153
    struct __call_is_nothrow3028,86400
    struct __is_nothrow_invocable3040,86797
  struct __nonesuchbase 3047,87020
  struct __nonesuch 3048,87048
# define __cpp_lib_is_invocable 3057,87290
    struct invoke_result3061,87409
    struct is_invocable3077,88026
    struct is_invocable_r3089,88525
    struct is_nothrow_invocable3103,89152
    struct is_nothrow_invocable_r3125,90136
# define __cpp_lib_type_trait_variable_templates 3140,90797
# define __cpp_lib_has_unique_object_representations 3383,100454
    struct has_unique_object_representations3387,100599
# define __cpp_lib_is_aggregate 3403,101142
    struct is_aggregate3407,101281
#define __cpp_lib_remove_cvref 3426,101716
    struct remove_cvref3430,101815
    struct remove_cvref3434,101913
    struct remove_cvref<remove_cvref3438,102016
    struct remove_cvref<remove_cvref3442,102125
#define __cpp_lib_type_identity 3454,102376
    struct type_identity 3456,102441
#define __cpp_lib_unwrap_ref 3462,102588
    struct unwrap_reference 3469,102716
    struct unwrap_reference<unwrap_reference3472,102793
    struct unwrap_ref_decay 3483,103091
#define __cpp_lib_bounded_array_traits 3489,103276
    struct is_bounded_array3512,103996
    struct is_unbounded_array3519,104187
    struct is_layout_compatible3527,104382
#define __cpp_lib_is_layout_compatible 3538,104708
    struct is_pointer_interconvertible_base_of3552,105210
#define __cpp_lib_is_pointer_interconvertible 3563,105632
#define __cpp_lib_is_scoped_enum 3576,106090
    struct is_scoped_enum3582,106230
    struct is_scoped_enum<is_scoped_enum3589,106412
#define __cpp_lib_reference_from_temporary 3601,106792
    struct reference_constructs_from_temporary3608,107084
    struct reference_converts_from_temporary3621,107671
#define __cpp_lib_is_constant_evaluated 3644,108559
    struct basic_common_reference3717,111076
    struct __xref3722,111170
    struct __xref<__xref3726,111282
    struct __xref<__xref3730,111401
    struct common_reference<common_reference3749,111984
    struct common_reference<common_reference3754,112082

/usr/include/c++/13/typeindex,383
#define _GLIBCXX_TYPEINDEX 30,1177
namespace std _GLIBCXX_VISIBILITY(43,1374
  struct type_index55,1718
    type_index(57,1742
    hash_code(99,2888
    name(103,2975
    const type_info* _M_target;107,3047
    struct hash<hash114,3184
      typedef size_t        result_type;116,3218
      typedef type_index  argument_type;117,3259
      operator()(operator()120,3314

/usr/include/c++/13/typeinfo,632
#define _TYPEINFO30,1125
# define __cpp_lib_constexpr_typeinfo 42,1328
#define __GXX_MERGED_TYPEINFO_NAMES 72,2761
#    define __GXX_TYPEINFO_EQUALITY_INLINE 78,2930
#    define __GXX_TYPEINFO_EQUALITY_INLINE 80,2983
  class type_info92,3199
    virtual ~type_info(99,3516
    const char* name(103,3653
    bool before(108,3858
    size_t hash_code(119,4203
    virtual bool __is_pointer_p(131,4526
    const char *__name;__name150,5290
    explicit type_info(152,5315
  type_info::operator==(operator==193,6670
  class bad_cast 220,7409
    bad_cast(223,7459
  class bad_typeid 237,7872
    bad_typeid 240,7924

/usr/include/c++/13/unordered_map,126
#define _GLIBCXX_UNORDERED_MAP 30,1183
namespace std _GLIBCXX_VISIBILITY(51,1600
namespace std _GLIBCXX_VISIBILITY(72,2316

/usr/include/c++/13/unordered_set,126
#define _GLIBCXX_UNORDERED_SET 30,1183
namespace std _GLIBCXX_VISIBILITY(51,1601
namespace std _GLIBCXX_VISIBILITY(72,2245

/usr/include/c++/13/utility,348
#define _GLIBCXX_UTILITY 56,2270
namespace std _GLIBCXX_VISIBILITY(82,2836
#define __cpp_lib_exchange_function 87,2942
# define __cpp_lib_constexpr_algorithms 90,3013
#define  __cpp_lib_as_const 104,3468
#define __cpp_lib_integer_comparison_functions 115,3725
#define __cpp_lib_to_underlying 186,5907
#define __cpp_lib_unreachable 194,6197

/usr/include/c++/13/valarray,2115
#define _GLIBCXX_VALARRAY 32,1280
namespace std _GLIBCXX_VISIBILITY(46,1546
  using __detail::_UnClos;83,2457
  using __detail::_BinClos;84,2484
  using __detail::_SClos;85,2512
  using __detail::_GClos;86,2538
  using __detail::_IClos;87,2564
  using __detail::_ValFunClos;88,2590
  using __detail::_RefFunClos;89,2621
namespace std _GLIBCXX_VISIBILITY(105,3192
    class valarray129,3943
	struct _UnaryOp132,3994
	  typedef typename __fun<__fun134,4014
	  typedef typename __fun<_Op, _Tp>::result_type __rt;134,4014
	  typedef _Expr<_UnClos<_UnClos135,4069
	  typedef _Expr<_UnClos<_Op, _ValArray, _Tp>, __rt> _Rt;135,4069
      typedef _Tp value_type;138,4143
      _Expr<_Expr292,9063
      _Expr<_Expr315,9896
      _Expr<_Expr368,12151
      _Expr<_Expr547,19217
      _Expr<_Expr559,19710
      size_t _M_size;573,20148
      _Tp* __restrict__ _M_data;574,20170
namespace std _GLIBCXX_VISIBILITY(612,21019
    valarray<_Tp>::operator=(operator=726,24457
    valarray<_Tp>::operator=(operator=750,25110
    valarray<_Tp>::operator=(operator=766,25491
    valarray<_Tp>::operator=(operator=790,26126
    valarray<_Tp>::operator=(operator=798,26306
    valarray<_Tp>::operator=(operator=808,26595
    valarray<_Tp>::operator=(operator=818,26907
    valarray<_Tp>::operator=(operator=828,27190
    valarray<_Tp>::operator=(operator=838,27499
      typedef _SClos<_ValArray,_Tp> _Closure;862,28188
      typedef _GClos<_ValArray,_Tp> _Closure;875,28601
      typedef _IClos<_ValArray,_Tp> _Closure;917,29823
      typedef _ValFunClos<_ValArray, _Tp> _Closure;1071,33856
      typedef _RefFunClos<_ValArray, _Tp> _Closure;1079,34110
#define _DEFINE_VALARRAY_UNARY_OPERATOR(1084,34254
#undef _DEFINE_VALARRAY_UNARY_OPERATOR1099,34885
#define _DEFINE_VALARRAY_AUGMENTED_ASSIGNMENT(1101,34925
#undef _DEFINE_VALARRAY_AUGMENTED_ASSIGNMENT1131,36134
#define _DEFINE_VALARRAY_EXPR_AUGMENTED_ASSIGNMENT(1133,36180
#undef _DEFINE_VALARRAY_EXPR_AUGMENTED_ASSIGNMENT1153,37112
#define _DEFINE_BINARY_OPERATOR(1156,37164
#undef _DEFINE_BINARY_OPERATOR1209,39402

/usr/include/c++/13/variant,10413
#define _GLIBCXX_VARIANT 30,1162
# define __cpp_lib_variant 52,1772
# define __cpp_lib_variant 55,1888
namespace std _GLIBCXX_VISIBILITY(58,1931
namespace __detail158,5150
namespace __variant160,5171
  struct __variant_cookie 163,5222
  struct __variant_idx_cookie 165,5304
  template<typename _Tp> struct __deduce_visit_result 167,5445
  template<typename _Visitor,170,5568
    __raw_visit(172,5640
  template<typename _Visitor,179,5923
    __raw_idx_visit(181,5995
    __as(191,6347
    __as(196,6492
    __as(201,6638
    __as(206,6796
  template<typename _Type,215,7138
      struct _Empty_byte 271,8713
	_Empty_byte _M_empty;274,8758
	_Type _M_storage;275,8781
  template<size_t _Np,302,9422
    constexpr decltype(303,9462
  template<size_t _Np,318,9965
    constexpr decltype(319,10007
  template<size_t _Np,324,10202
    constexpr decltype(325,10242
    struct _Traits351,10891
    union _Variadic_union395,12702
      template<size_t _Np,399,12770
  template<typename _First,403,12886
    struct _Never_valueless_alt444,14243
    constexpr bool __never_valueless(459,15021
  template<bool __trivially_destructible,466,15222
					      unsigned char,472,15438
					      unsigned short>::type::value_type;type::value_type473,15464
  template<size_t _Np,560,17893
  template<size_t _Np, bool _Triv,560,17893
  template<size_t _Np, bool _Triv, typename... _Types,560,17893
    __emplace(563,18008
  template<bool,bool580,18623
    struct _Copy_ctor_base 581,18660
      using _Base::_Base;584,18784
      _Copy_ctor_base(587,18838
  template<bool,bool617,19829
    struct _Move_ctor_base 618,19866
      using _Base::_Base;621,19978
      _Move_ctor_base(624,20032
  template<bool,bool655,21066
    struct _Copy_assign_base 656,21103
      using _Base::_Base;659,21217
      operator=(operator=663,21296
  template<bool,bool707,22724
    struct _Move_assign_base 708,22761
      using _Base::_Base;711,22879
      operator=(operator=715,22958
    struct _Variant_base 762,24392
      _Variant_base(767,24523
      template<size_t _Np,770,24645
	_Variant_base(772,24711
  template<typename _Tp,782,25056
      = std::__find_uniq_type_in_pack<_Tp, _Types...>() < sizeof...(_Types)784,25142
  template<typename _Ti> struct _Arr 787,25298
  template<typename _Ti> struct _Arr { _Ti _M_x[_M_x787,25298
  template<size_t _Ind,790,25426
  template<size_t _Ind, typename _Tp,790,25426
  template<size_t _Ind, typename _Tp, typename _Ti,790,25426
  template<size_t _Ind,799,25779
  template<size_t _Ind, typename _Tp,799,25779
  template<typename _Tp,807,26065
  template<typename _Tp, typename _Variant,807,26065
  template<typename _Tp,811,26196
  template<typename _Tp, typename... _Ti,811,26196
    : _Build_FUN<_Build_FUN813,26324
  template<typename _Tp,820,26533
  template<typename _Tp,825,26751
  template<typename _Tp, typename _Variant,825,26751
  template<typename _Tp,829,26878
    __accepted_index<__accepted_index831,26950
      = _FUN_type<_Tp, _Variant>::value;value832,27020
  template<typename _Maybe_variant_cookie,834,27062
  template<typename _Maybe_variant_cookie, typename _Variant,834,27062
  template<typename _Var,839,27233
    __extra_visit_slot_needed<__extra_visit_slot_needed841,27305
  template<typename _Var,844,27432
    __extra_visit_slot_needed<__extra_visit_slot_needed846,27504
  template<typename _Tp,850,27685
    struct _Multi_array<_Multi_array855,27857
	struct __untag_result858,27917
	struct __untag_result<__untag_result865,28104
	struct __untag_result<__untag_result871,28275
	struct __untag_result<__untag_result876,28425
      template <typename _Res,880,28544
	struct __untag_result<__untag_result881,28594
      _M_access(888,28841
      typename __untag_result<_Tp>::element_type _M_data;891,28892
  template<typename _Ret,895,29002
	   typename _Visitor,896,29028
	   typename... _Variants,897,29051
	   size_t __first,898,29078
  template<typename _Array_type,949,31377
  template<typename _Result_type,959,31908
  template<typename _Result_type, typename _Visitor,959,31908
  template<typename _Result_type, typename _Visitor, size_t... __dimensions,959,31908
	   typename... _Variants,960,31985
  template<typename _Result_type,1024,34083
  template<typename _Result_type, typename _Visitor,1024,34083
  template<typename _Result_type, typename _Visitor, typename... _Variants,1024,34083
  template<typename _Result_type,1091,36478
  template<typename _Result_type, typename _Visitor,1091,36478
    struct __gen_vtable1092,36554
  template<size_t _Np,1102,36852
    struct _Base_dedup 1103,36889
  template<typename _Variant,1105,36931
  template<typename... _Types,1108,37013
    : _Base_dedup<_Base_dedup1111,37159
  template<size_t _Np,1114,37307
  template<size_t _Np, typename _Variant,1114,37307
  template<typename _Visitor,1121,37621
      = invoke_result_t<_Visitor, __get_t<__get_t1123,37701
  template<typename _Tp,1125,37763
  template <typename _Visitor,1128,37883
  template <typename _Visitor, typename _Variant,1128,37883
    constexpr bool __check_visitor_results(1129,37950
  template<typename _Tp,1139,38174
    holds_alternative(1141,38238
  template<typename _Tp,1148,38515
    get(1150,38579
  template<typename _Tp,1158,38861
    get(1160,38926
  template<typename _Tp,1168,39220
    get(1170,39290
  template<typename _Tp,1178,39578
    get(1180,39649
  template<size_t _Np,1188,39949
    get_if(1190,40068
  template<size_t _Np,1201,40517
    get_if(1204,40646
  template<typename _Tp,1215,41101
    get_if(1217,41179
  template<typename _Tp,1226,41542
    get_if(1228,41626
  struct monostate 1237,41995
#define _VARIANT_RELATION_FUNCTION_TEMPLATE(1239,42020
#undef _VARIANT_RELATION_FUNCTION_TEMPLATE1271,43152
  constexpr bool operator==(operator==1273,43196
    operator<=>(operator<=>1280,43479
  operator<=>(operator<=>1303,44090
  constexpr bool operator!=(operator!=1305,44176
  constexpr bool operator<(1306,44253
  constexpr bool operator>(1307,44329
  constexpr bool operator<=(operator<=1308,44405
  constexpr bool operator>=(operator>=1309,44481
  template<typename _Visitor,1312,44565
    swap(1320,44893
  class bad_variant_access 1329,45220
    bad_variant_access(1332,45280
    const char* what(1334,45319
    bad_variant_access(1338,45404
    const char* _M_reason 1341,45545
  __throw_bad_variant_access(1348,45727
  __throw_bad_variant_access(1352,45850
    class variant1361,46123
      using _Base 1385,47060
      using _Default_ctor_enabler 1386,47127
	static constexpr bool __not_self1392,47310
	__exactly_once 1397,47446
	static constexpr size_t __accepted_index1400,47547
      template<size_t _Np,1403,47648
      template<size_t _Np, typename 1403,47648
	using __to_type = typename _Nth_type<_Np, _Types...>::type;type1404,47726
      template<typename _Tp,1406,47788
      template<typename _Tp, typename 1406,47788
	static constexpr size_t __index_of1410,47947
      using _Traits 1413,48038
	struct __is_in_place_tag 1416,48131
	struct __is_in_place_tag<__is_in_place_tag1418,48204
	struct __is_in_place_tag<__is_in_place_tag1420,48296
	static constexpr bool __not_in_place_tag1423,48392
      template<typename _Tp,1434,48761
	       typename 1435,48790
	       typename 1436,48846
	       typename _Tj 1437,48903
	       typename 1438,48950
	variant(1441,49056
      template<typename _Tp,1447,49208
      template<typename _Tp, typename... _Args,1447,49208
	       typename 1448,49256
	variant(1451,49376
      template<typename _Tp,1456,49512
      template<typename _Tp, typename _Up,1456,49512
      template<typename _Tp, typename _Up, typename... _Args,1456,49512
	       typename 1457,49574
	variant(1461,49726
      template<size_t _Np,1467,49898
      template<size_t _Np, typename... _Args,1467,49898
	       typename _Tp 1468,49944
	       typename 1469,49983
	variant(1471,50070
      template<size_t _Np,1476,50248
      template<size_t _Np, typename _Up,1476,50248
      template<size_t _Np, typename _Up, typename... _Args,1476,50248
	       typename _Tp 1477,50308
	       typename 1478,50347
	variant(1482,50474
	operator=(operator=1494,50920
      template<typename _Tp,1515,51618
	enable_if_t<enable_if_t1517,51688
	emplace(1519,51771
      template<typename _Tp,1525,51919
      template<typename _Tp, typename _Up,1525,51919
	enable_if_t<enable_if_t1527,52003
	emplace(1530,52116
      template<size_t _Np,1536,52298
	enable_if_t<enable_if_t1538,52366
	emplace(1540,52448
      template<size_t _Np,1575,53680
      template<size_t _Np, typename _Up,1575,53680
	enable_if_t<enable_if_t1577,53762
	emplace(1580,53879
      template<size_t _Np,1612,54945
      template<typename _Tp,1615,55063
      constexpr bool valueless_by_exception(1618,55177
      constexpr size_t index(1621,55275
      swap(1634,55702
      using _Base::_M_u;1685,57039
    private:private1688,57123
#define _VARIANT_RELATION_FUNCTION_TEMPLATE(1693,57260
#undef _VARIANT_RELATION_FUNCTION_TEMPLATE1706,57733
  template<size_t _Np,1709,57784
    get(1711,57889
  template<size_t _Np,1720,58179
    get(1722,58285
  template<size_t _Np,1731,58587
    get(1733,58698
  template<size_t _Np,1742,58994
    get(1744,59106
  template<typename _Result_type,1754,59439
  template<typename _Result_type, typename _Visitor,1754,59439
    constexpr decltype(1755,59515
# define _GLIBCXX_VISIT_UNREACHABLE 1796,61029
# define _GLIBCXX_VISIT_UNREACHABLE 1798,61086
#define _GLIBCXX_VISIT_CASE(1801,61152
#undef _GLIBCXX_VISIT_CASE1842,62354
#undef _GLIBCXX_VISIT_UNREACHABLE1843,62381
  template<typename _Visitor,1849,62447
    visit(1851,62576
  template<typename _Res,1889,63841
  template<typename _Res, typename _Visitor,1889,63841
    visit(1891,63928
  template<bool,bool1904,64360
    struct __variant_hash_call_base_impl1905,64397
      operator()(operator()1908,64457
    using __variant_hash_call_base 1931,65159
    struct hash<hash1937,65364
      using result_type 1942,65568
      using argument_type 1943,65621
    struct hash<hash1947,65709
      using result_type 1949,65742
      using argument_type 1950,65795
      operator()(operator()1953,65867
    struct __is_fast_hash<__is_fast_hash1961,66054

/usr/include/c++/13/vector,198
#define _GLIBCXX_VECTOR 56,2262
namespace std _GLIBCXX_VISIBILITY(81,2793
  namespace _GLIBCXX_STD_C::pmr 89,3027
namespace std _GLIBCXX_VISIBILITY(100,3315
#define __cpp_lib_erase_if 104,3394

/usr/include/c++/13/version,8256
#define _GLIBCXX_VERSION_INCLUDED31,1297
# define __cpp_lib_incomplete_container_elements 42,1512
# define __cpp_lib_uncaught_exceptions 47,1618
#define __cpp_lib_allocator_traits_is_always_equal 52,1709
#define __cpp_lib_is_null_pointer 53,1768
#define __cpp_lib_result_of_sfinae 54,1810
# define __cpp_lib_shared_ptr_arrays 58,1932
# define __cpp_lib_is_swappable 64,2033
# define __cpp_lib_void_t 65,2073
#  define __cpp_lib_enable_shared_from_this 67,2128
#define __STDCPP_MATH_SPEC_FUNCS__ 72,2275
# define __cpp_lib_coroutine 77,2380
#define __cpp_lib_exchange_function 79,2424
#define __cpp_lib_integer_sequence 80,2468
#define __cpp_lib_integral_constant_callable 81,2511
#define __cpp_lib_is_final 82,2564
#define __cpp_lib_make_reverse_iterator 83,2599
# define __cpp_lib_null_iterators 85,2692
#define __cpp_lib_robust_nonmodifying_seq_ops 87,2741
#define __cpp_lib_transformation_trait_aliases 88,2795
#define __cpp_lib_transparent_operators 89,2850
#define __cpp_lib_tuple_element_t 90,2898
#define __cpp_lib_tuples_by_type 91,2940
# define __cpp_lib_to_chars 95,3084
# define __cpp_lib_chrono_udls 99,3148
# define __cpp_lib_complex_udls 100,3187
# define __cpp_lib_generic_associative_lookup 101,3227
# define __cpp_lib_make_unique 102,3281
# define __cpp_lib_quoted_string_io 103,3320
#  define __cpp_lib_shared_timed_mutex 105,3394
# define __cpp_lib_string_udls 107,3449
#define __cpp_lib_addressof_constexpr 112,3532
#define __cpp_lib_any 113,3578
#define __cpp_lib_apply 114,3608
#define __cpp_lib_as_const 115,3640
#define __cpp_lib_atomic_is_always_lock_free 116,3675
#define __cpp_lib_bool_constant 117,3728
#define __cpp_lib_byte 118,3768
#define __cpp_lib_clamp 119,3799
#define __cpp_lib_gcd 120,3831
#define __cpp_lib_gcd_lcm 121,3861
# define __cpp_lib_has_unique_object_representations 123,3941
# define __cpp_lib_hardware_interference_size 126,4039
#define __cpp_lib_invoke 128,4100
# define __cpp_lib_is_aggregate 130,4175
#define __cpp_lib_is_invocable 132,4222
#define __cpp_lib_is_swappable 133,4261
# define __cpp_lib_launder 135,4337
#define __cpp_lib_lcm 137,4379
#define __cpp_lib_logical_traits 138,4409
#define __cpp_lib_make_from_tuple 139,4450
#define __cpp_lib_nonmember_container_access 140,4492
#define __cpp_lib_not_fn 141,4545
# define __cpp_lib_optional 143,4636
#define __cpp_lib_raw_memory_algorithms 145,4679
#define __cpp_lib_sample 146,4727
#define __cpp_lib_type_trait_variable_templates 147,4760
#define __cpp_lib_uncaught_exceptions 148,4816
# define __cpp_lib_variant 151,4956
#define __cpp_lib_void_t 153,4998
# define __cpp_lib_array_constexpr 155,5089
#  define __cpp_lib_constexpr_char_traits 159,5238
#  define __cpp_lib_constexpr_string 160,5288
#define __cpp_lib_boyer_moore_searcher 165,5369
#define __cpp_lib_chrono 166,5416
#define __cpp_lib_enable_shared_from_this 167,5449
#define __cpp_lib_execution 168,5499
#define __cpp_lib_filesystem 169,5563
#define __cpp_lib_hypot 170,5600
#define __cpp_lib_map_try_emplace 171,5632
#define __cpp_lib_math_special_functions 172,5674
# define __cpp_lib_memory_resource 174,5752
# define __cpp_lib_memory_resource 176,5801
#define __cpp_lib_node_extract 178,5845
#define __cpp_lib_parallel_algorithm 179,5884
# define __cpp_lib_scoped_lock 181,5958
# define __cpp_lib_shared_mutex 182,5997
#define __cpp_lib_shared_ptr_weak_type 184,6044
#define __cpp_lib_string_view 185,6091
#define __cpp_lib_unordered_map_try_emplace 186,6129
#define __cpp_lib_assume_aligned 191,6225
#define __cpp_lib_atomic_flag_test 192,6266
#define __cpp_lib_atomic_float 193,6309
#define __cpp_lib_atomic_lock_free_type_aliases 194,6348
#define __cpp_lib_atomic_ref 195,6404
#define __cpp_lib_atomic_value_initialization 196,6441
#define __cpp_lib_bind_front 197,6495
#define __cpp_lib_starts_ends_with 198,6532
# define __cpp_lib_bit_cast 200,6613
#define __cpp_lib_bitops 202,6656
#define __cpp_lib_bounded_array_traits 203,6689
# define __cpp_lib_concepts 206,6820
# define __cpp_lib_destroying_delete 209,6896
#define __cpp_lib_constexpr_string_view 211,6948
#define __cpp_lib_endian 212,6996
#define __cpp_lib_int_pow2 213,7029
#define __cpp_lib_integer_comparison_functions 214,7064
# define __cpp_lib_is_constant_evaluated 216,7162
# define __cpp_lib_is_layout_compatible 220,7316
#define __cpp_lib_is_nothrow_convertible 222,7371
# define __cpp_lib_is_pointer_interconvertible 225,7547
#define __cpp_lib_math_constants 227,7609
# define __cpp_lib_make_obj_using_allocator 229,7673
# define __cpp_lib_optional 232,7790
#define __cpp_lib_remove_cvref 234,7833
# define __cpp_lib_source_location 236,7917
# define __cpp_lib_span 239,7990
#define __cpp_lib_ssize 241,8029
# define __cpp_lib_three_way_comparison 243,8130
#define __cpp_lib_to_address 245,8185
#define __cpp_lib_to_array 246,8222
#define __cpp_lib_type_identity 247,8257
#define __cpp_lib_unwrap_ref 248,8297
# define __cpp_lib_variant 250,8394
#define __cpp_lib_constexpr_algorithms 252,8436
#define __cpp_lib_constexpr_functional 253,8483
# define __cpp_lib_constexpr_memory 255,8588
#define __cpp_lib_constexpr_numeric 257,8648
#define __cpp_lib_constexpr_tuple 258,8692
#define __cpp_lib_array_constexpr 259,8734
# define __cpp_lib_constexpr_char_traits 261,8815
#define __cpp_lib_constexpr_iterator 263,8871
#define __cpp_lib_constexpr_utility 264,8916
#define __cpp_lib_interpolate 265,8960
# define __cpp_lib_move_iterator_concept 267,9021
# define __cpp_lib_ranges 269,9128
#define __cpp_lib_shift 272,9176
#define __cpp_lib_atomic_shared_ptr 275,9229
# define __cpp_lib_atomic_wait 277,9344
#  define __cpp_lib_barrier 279,9406
#define __cpp_lib_constexpr_complex 285,9566
#define __cpp_lib_constexpr_dynamic_alloc 286,9610
#define __cpp_lib_constexpr_tuple 287,9660
#  define __cpp_lib_constexpr_string 290,9769
#  define __cpp_lib_constexpr_string 292,9821
#define __cpp_lib_constexpr_vector 295,9881
#define __cpp_lib_erase_if 296,9924
#define __cpp_lib_format 297,9959
#define __cpp_lib_format_uchar 298,9992
#define __cpp_lib_generic_unordered_lookup 299,10031
# define __cpp_lib_jthread 301,10111
# define __cpp_lib_latch 304,10179
#define __cpp_lib_list_remove_return_type 306,10219
#define __cpp_lib_polymorphic_allocator 307,10269
# define __cpp_lib_semaphore 309,10376
#define __cpp_lib_shared_ptr_arrays 311,10420
#define __cpp_lib_smart_ptr_for_overwrite 312,10464
#  define __cpp_lib_syncbuf 315,10575
#define __cpp_lib_byteswap 321,10662
#define __cpp_lib_constexpr_charconv 322,10697
#define __cpp_lib_constexpr_typeinfo 323,10742
# define __cpp_lib_expected 325,10817
#define __cpp_lib_invoke_r 327,10860
#define __cpp_lib_is_scoped_enum 328,10895
# undef __cpp_lib_optional330,10959
# define __cpp_lib_optional 331,10986
#define __cpp_lib_reference_from_temporary 333,11029
#define __cpp_lib_to_underlying 334,11080
#define __cpp_lib_unreachable 335,11120
#define __cpp_lib_ranges 336,11158
#define __cpp_lib_ranges_zip 337,11191
#define __cpp_lib_ranges_chunk 338,11228
#define __cpp_lib_ranges_slide 339,11267
#define __cpp_lib_ranges_chunk_by 340,11306
#define __cpp_lib_ranges_join_with 341,11348
#define __cpp_lib_ranges_repeat 342,11391
#define __cpp_lib_ranges_stride 343,11431
#define __cpp_lib_ranges_cartesian_product 344,11471
#define __cpp_lib_ranges_as_rvalue 345,11522
#define __cpp_lib_ranges_as_const 346,11565
#define __cpp_lib_ranges_enumerate 347,11607
#define __cpp_lib_ranges_contains 348,11650
#define __cpp_lib_ranges_iota 349,11692
#define __cpp_lib_ranges_find_last 350,11730
#define __cpp_lib_ranges_fold 351,11773
#  define __cpp_lib_constexpr_bitset 354,11866
# undef __cpp_lib_constexpr_memory356,11919
# define __cpp_lib_constexpr_memory 357,11954
#define __cpp_lib_stdatomic_h 359,12005
#define __cpp_lib_adaptor_iterator_pair_constructor 362,12064
#define __cpp_lib_ios_noreplace 363,12124
#define __cpp_lib_move_only_function 364,12164
# define __cpp_lib_spanstream 366,12228
# define __cpp_lib_stacktrace 369,12302
#define __cpp_lib_stdatomic_h 371,12347
#define __cpp_lib_string_contains 372,12385
# define __cpp_lib_string_resize_and_overwrite 374,12487

/usr/include/c++/13/cassert,0

/usr/include/c++/13/x86_64-suse-linux/bits/stdtr1c++.h,0

/usr/include/c++/13/x86_64-suse-linux/bits/stdc++.h,0

/usr/include/c++/13/x86_64-suse-linux/bits/extc++.h,0

/usr/include/c++/13/ext/pb_ds/detail/splay_tree_/info_fn_imps.hpp,0

/usr/include/c++/13/ext/pb_ds/detail/rb_tree_map_/find_fn_imps.hpp,0

/usr/include/c++/13/ext/pb_ds/detail/gp_hash_table_map_/insert_fn_imps.hpp,0

/usr/include/c++/13/ext/pb_ds/detail/gp_hash_table_map_/find_store_hash_fn_imps.hpp,0

/usr/include/c++/13/ext/pb_ds/detail/gp_hash_table_map_/find_no_store_hash_fn_imps.hpp,0

/usr/include/c++/13/ext/pb_ds/detail/cc_hash_table_map_/insert_fn_imps.hpp,0

/usr/include/c++/13/ext/pb_ds/detail/cc_hash_table_map_/find_store_hash_fn_imps.hpp,0
